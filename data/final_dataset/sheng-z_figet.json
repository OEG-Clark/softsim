{"home.repos.pwc.inspect_result.sheng-z_figet.None.train.main": [[103, 165], ["log.debug", "torch.load", "torch.load", "log.info", "figet.Dataset", "figet.Dataset", "figet.Dataset", "log.info", "log.debug", "figet.Models.Model", "figet.Optim", "figet.Models.Model.init_params", "figet.Optim.set_parameters", "sum", "log.debug", "figet.Coach", "log.info", "figet.Coach.train", "torch.save", "torch.save", "log.info", "len", "len", "len", "figet.Models.Model.cuda", "filter", "mention.preprocess", "figet.Models.Model.parameters", "p.nelement", "figet.Models.Model.parameters"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.init_params", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.set_parameters", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.train", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.preprocess"], ["def", "main", "(", ")", ":", "\n", "# Load data.", "\n", "    ", "log", ".", "debug", "(", "\"Loading data from '%s'.\"", "%", "args", ".", "data", ")", "\n", "\n", "data", "=", "torch", ".", "load", "(", "args", ".", "data", ")", "\n", "vocabs", "=", "data", "[", "\"vocabs\"", "]", "\n", "word2vec", "=", "torch", ".", "load", "(", "args", ".", "word2vec", ")", "\n", "\n", "log", ".", "info", "(", "\"Loaded data.\"", ")", "\n", "\n", "for", "split", "in", "(", "\"train\"", ",", "\"dev\"", ",", "\"test\"", ")", ":", "\n", "        ", "for", "mention", "in", "data", "[", "split", "]", ":", "\n", "            ", "mention", ".", "preprocess", "(", "vocabs", ",", "word2vec", ",", "args", ")", "\n", "", "", "train_data", "=", "figet", ".", "Dataset", "(", "data", "[", "\"train\"", "]", ",", "args", ".", "batch_size", ",", "args", ")", "\n", "dev_data", "=", "figet", ".", "Dataset", "(", "data", "[", "\"dev\"", "]", ",", "len", "(", "data", "[", "\"dev\"", "]", ")", ",", "args", ",", "True", ")", "\n", "test_data", "=", "figet", ".", "Dataset", "(", "data", "[", "\"test\"", "]", ",", "len", "(", "data", "[", "\"test\"", "]", ")", ",", "args", ",", "True", ")", "\n", "\n", "log", ".", "info", "(", "\"Loaded datasets.\"", ")", "\n", "\n", "# Build model.", "\n", "log", ".", "debug", "(", "\"Building model...\"", ")", "\n", "\n", "model", "=", "figet", ".", "Models", ".", "Model", "(", "args", ",", "vocabs", ")", "\n", "optim", "=", "figet", ".", "Optim", "(", "args", ".", "learning_rate", ",", "args", ".", "max_grad_norm", ")", "\n", "\n", "if", "len", "(", "args", ".", "gpus", ")", ">=", "1", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "\n", "# for p in model.parameters():", "\n", "#     p.data.uniform_(-args.param_init, args.param_init)", "\n", "\n", "", "model", ".", "init_params", "(", "args", ".", "word2vec", ")", "\n", "\n", "optim", ".", "set_parameters", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "nParams", "=", "sum", "(", "[", "p", ".", "nelement", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "log", ".", "debug", "(", "\"* number of parameters: %d\"", "%", "nParams", ")", "\n", "\n", "coach", "=", "figet", ".", "Coach", "(", "model", ",", "vocabs", ",", "train_data", ",", "dev_data", ",", "test_data", ",", "optim", ",", "args", ")", "\n", "\n", "# Train.", "\n", "log", ".", "info", "(", "\"Start training...\"", ")", "\n", "ret", "=", "coach", ".", "train", "(", ")", "\n", "\n", "# Save.", "\n", "tuning", "=", "{", "\n", "\"type_vocab\"", ":", "vocabs", "[", "\"type\"", "]", ",", "\n", "\"dev_dist\"", ":", "ret", "[", "3", "]", ",", "\n", "\"dev_type\"", ":", "ret", "[", "4", "]", ",", "\n", "\"test_dist\"", ":", "ret", "[", "5", "]", ",", "\n", "\"test_type\"", ":", "ret", "[", "6", "]", ",", "\n", "\"test_raw_data\"", ":", "ret", "[", "7", "]", "\n", "}", "\n", "checkpoint", "=", "{", "\n", "\"vocabs\"", ":", "vocabs", ",", "\n", "\"word2vec\"", ":", "word2vec", ",", "\n", "\"states\"", ":", "ret", "[", "2", "]", "\n", "}", "\n", "torch", ".", "save", "(", "tuning", ",", "args", ".", "save_tuning", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "args", ".", "save_model", ")", "\n", "\n", "log", ".", "info", "(", "\"Done!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.interpret_attention": [[13, 38], ["sent.append", "enumerate", "enumerate", "enumerate", "sent.append", "max", "sent.append", "sent.append", "min", "sent.append", "max", "min", "len", "min", "len", "max", "len"], "function", ["None"], ["def", "interpret_attention", "(", "tokens", ",", "start", ",", "end", ",", "attn", ",", "args", ")", ":", "\n", "    ", "sent", "=", "[", "]", "\n", "mention", "=", "tokens", "[", "start", ":", "end", "]", "\n", "for", "token", "in", "tokens", "[", ":", "max", "(", "0", ",", "start", "-", "args", ".", "context_length", ")", "]", ":", "\n", "        ", "sent", ".", "append", "(", "\"%s:%.2f\"", "%", "(", "token", ",", "0", ")", ")", "\n", "", "if", "args", ".", "single_context", "==", "1", ":", "\n", "        ", "context", "=", "(", "tokens", "[", "max", "(", "0", ",", "start", "-", "args", ".", "context_length", ")", ":", "start", "]", "+", "\n", "[", "figet", ".", "Constants", ".", "PAD_WORD", "]", "+", "\n", "tokens", "[", "end", ":", "min", "(", "len", "(", "tokens", ")", ",", "end", "+", "args", ".", "context_length", ")", "]", ")", "\n", "for", "i", ",", "token", "in", "enumerate", "(", "context", ")", ":", "\n", "            ", "if", "token", "==", "figet", ".", "Constants", ".", "PAD_WORD", ":", "\n", "                ", "sent", "+=", "[", "\"%s:%.2f\"", "%", "(", "x", ",", "-", "1", ")", "for", "x", "in", "mention", "]", "\n", "", "else", ":", "\n", "                ", "sent", ".", "append", "(", "\"%s:%.2f\"", "%", "(", "token", ",", "attn", "[", "i", "]", "*", "100", ")", ")", "\n", "", "", "", "else", ":", "\n", "        ", "prev_context", "=", "tokens", "[", "max", "(", "0", ",", "start", "-", "args", ".", "context_length", ")", ":", "start", "]", "\n", "next_context", "=", "tokens", "[", "end", ":", "min", "(", "len", "(", "tokens", ")", ",", "end", "+", "args", ".", "context_length", ")", "]", "\n", "for", "i", ",", "token", "in", "enumerate", "(", "prev_context", ")", ":", "\n", "            ", "sent", ".", "append", "(", "\"%s:%.2f\"", "%", "(", "token", ",", "attn", "[", "i", "]", "*", "100", ")", ")", "\n", "", "sent", "+=", "[", "\"%s:%.2f\"", "%", "(", "x", ",", "-", "1", ")", "for", "x", "in", "mention", "]", "\n", "for", "i", ",", "token", "in", "enumerate", "(", "next_context", ")", ":", "\n", "            ", "sent", ".", "append", "(", "\"%s:%.2f\"", "%", "(", "token", ",", "attn", "[", "-", "i", "-", "1", "]", "*", "100", ")", ")", "\n", "", "", "for", "token", "in", "tokens", "[", "min", "(", "len", "(", "tokens", ")", ",", "end", "+", "args", ".", "context_length", ")", ":", "]", ":", "\n", "        ", "sent", ".", "append", "(", "\"%s:%.2f\"", "%", "(", "token", ",", "0", ")", ")", "\n", "", "return", "\" \"", ".", "join", "(", "sent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.dump_results": [[40, 61], ["zip", "len", "list", "list", "list", "ret.append", "open", "fp.write", "len", "sorted", "sorted", "line.split", "sorted", "infer.interpret_attention", "map", "map", "types.split", "interpret_attention.split", "int", "int"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.None.infer.interpret_attention"], ["", "def", "dump_results", "(", "type_vocab", ",", "lines", ",", "preds", ",", "attns", ",", "args", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "if", "len", "(", "attns", ")", "==", "0", ":", "\n", "        ", "attns", "=", "[", "None", "]", "*", "len", "(", "lines", ")", "\n", "", "for", "line", ",", "(", "gold_type", ",", "pred_type", ")", ",", "attn", "in", "zip", "(", "lines", ",", "preds", ",", "attns", ")", ":", "\n", "# Get types.", "\n", "        ", "gold_type", "=", "list", "(", "sorted", "(", "map", "(", "type_vocab", ".", "get_label", ",", "gold_type", ")", ")", ")", "\n", "pred_type", "=", "list", "(", "sorted", "(", "map", "(", "type_vocab", ".", "get_label", ",", "pred_type", ")", ")", ")", "\n", "start", ",", "end", ",", "sent", ",", "types", "=", "line", ".", "split", "(", "\"\\t\"", ")", "[", ":", "4", "]", "\n", "ref_type", "=", "list", "(", "sorted", "(", "types", ".", "split", "(", ")", ")", ")", "\n", "# assert gold_type == ref_type, \" \".join(gold_type) + \" <=> \" + \" \".join(ref_type) + \"\\n\" + line", "\n", "# Get attention.", "\n", "if", "attn", "is", "not", "None", ":", "\n", "            ", "sent", "=", "interpret_attention", "(", "sent", ".", "split", "(", ")", ",", "int", "(", "start", ")", ",", "int", "(", "end", ")", ",", "attn", ",", "args", ")", "\n", "", "ret", ".", "append", "(", "\n", "\"\\t\"", ".", "join", "(", "\n", "[", "start", ",", "end", ",", "sent", ",", "\n", "\" \"", ".", "join", "(", "ref_type", ")", "+", "\" <=> \"", "+", "\" \"", ".", "join", "(", "pred_type", ")", "\n", "]", ")", ")", "\n", "", "with", "open", "(", "args", ".", "pred", ",", "\"w\"", ")", "as", "fp", ":", "\n", "        ", "fp", ".", "write", "(", "\"\\n\"", ".", "join", "(", "ret", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.read_data": [[63, 77], ["open", "line.strip.strip", "line.strip.split", "fields[].split", "lines.append", "len", "int", "int", "len"], "function", ["None"], ["", "", "def", "read_data", "(", "data_file", ")", ":", "\n", "    ", "lines", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "data_file", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", "\n", "fields", "=", "line", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "fields", ")", "not", "in", "{", "5", ",", "8", "}", ":", "\n", "            ", "continue", "\n", "\n", "", "start_idx", ",", "end_idx", "=", "int", "(", "fields", "[", "0", "]", ")", ",", "int", "(", "fields", "[", "1", "]", ")", "\n", "tokens", "=", "fields", "[", "2", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "tokens", "[", "start_idx", ":", "end_idx", "]", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "lines", ".", "append", "(", "line", ")", "\n", "", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.main": [[79, 128], ["torch.load", "log.info", "figet.Models.Model", "figet.Models.Model.load_state_dict", "log.info", "infer.read_data", "preprocess.make_data", "figet.Dataset", "log.info", "figet.Models.Model.eval", "range", "torch.cat().cpu().numpy", "torch.cat().cpu().numpy", "log.info", "log.info", "infer.dump_results", "torch.load", "len", "figet.Models.Model.cuda", "figet.context_modules.doc2vec.Doc2Vec", "figet.context_modules.doc2vec.Doc2Vec.load", "mention.preprocess", "len", "len", "figet.Models.Model.", "figet.adaptive_thres.predict", "len", "torch.cat().cpu().numpy", "torch.cat().cpu", "torch.cat().cpu", "figet.evaluate.evaluate", "torch.cat().cpu", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.load_state_dict", "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.read_data", "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_data", "home.repos.pwc.inspect_result.sheng-z_figet.None.infer.dump_results", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.preprocess", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate"], ["", "def", "main", "(", "args", ",", "log", ")", ":", "\n", "# Load checkpoint.", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "save_model", ")", "\n", "vocabs", ",", "word2vec", ",", "states", "=", "checkpoint", "[", "\"vocabs\"", "]", ",", "checkpoint", "[", "\"word2vec\"", "]", ",", "checkpoint", "[", "\"states\"", "]", "\n", "try", ":", "\n", "        ", "idx2threshold", "=", "torch", ".", "load", "(", "args", ".", "save_idx2threshold", ")", "\n", "", "except", ":", "\n", "        ", "idx2threshold", "=", "None", "\n", "", "log", ".", "info", "(", "\"Loaded checkpoint model from %s.\"", "%", "(", "args", ".", "save_model", ")", ")", "\n", "\n", "# Load the pretrained model.", "\n", "model", "=", "figet", ".", "Models", ".", "Model", "(", "args", ",", "vocabs", ")", "\n", "model", ".", "load_state_dict", "(", "states", ")", "\n", "if", "len", "(", "args", ".", "gpus", ")", ">=", "1", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "", "doc2vec", "=", "None", "\n", "if", "args", ".", "use_doc", "==", "1", ":", "\n", "        ", "doc2vec", "=", "Doc2Vec", "(", "save_path", "=", "args", ".", "doc2vec_model", ")", "\n", "doc2vec", ".", "load", "(", ")", "\n", "", "log", ".", "info", "(", "\"Init the model.\"", ")", "\n", "\n", "# Load data.", "\n", "lines", "=", "read_data", "(", "args", ".", "data", ")", "\n", "data", "=", "preprocess", ".", "make_data", "(", "args", ".", "data", ",", "vocabs", ",", "args", ",", "doc2vec", ")", "\n", "for", "mention", "in", "data", ":", "\n", "        ", "mention", ".", "preprocess", "(", "vocabs", ",", "word2vec", ",", "args", ")", "\n", "", "data", "=", "figet", ".", "Dataset", "(", "data", ",", "len", "(", "data", ")", ",", "args", ",", "True", ")", "\n", "log", ".", "info", "(", "\"Loaded the data from %s.\"", "%", "(", "args", ".", "data", ")", ")", "\n", "\n", "# Inference.", "\n", "preds", ",", "types", ",", "dists", ",", "attns", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "model", ".", "eval", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", ":", "\n", "        ", "batch", "=", "data", "[", "i", "]", "\n", "loss", ",", "dist", ",", "attn", "=", "model", "(", "batch", ")", "\n", "preds", "+=", "figet", ".", "adaptive_thres", ".", "predict", "(", "dist", ".", "data", ",", "batch", "[", "3", "]", ".", "data", ",", "idx2threshold", ")", "\n", "types", "+=", "[", "batch", "[", "3", "]", ".", "data", "]", "\n", "dists", "+=", "[", "dist", ".", "data", "]", "\n", "if", "attn", "is", "not", "None", ":", "\n", "            ", "attns", "+=", "[", "attn", ".", "data", "]", "\n", "", "", "types", "=", "torch", ".", "cat", "(", "types", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "dists", "=", "torch", ".", "cat", "(", "dists", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "len", "(", "attns", ")", "!=", "0", ":", "\n", "        ", "attns", "=", "torch", ".", "cat", "(", "attns", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "log", ".", "info", "(", "\"Finished inference.\"", ")", "\n", "\n", "# Results.", "\n", "log", ".", "info", "(", "\"| Inference acc. %s |\"", "%", "(", "figet", ".", "evaluate", ".", "evaluate", "(", "preds", ")", ")", ")", "\n", "dump_results", "(", "vocabs", "[", "\"type\"", "]", ",", "lines", ",", "preds", ",", "attns", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_vocabs": [[15, 44], ["figet.Dict", "figet.Dict", "figet.Dict", "tqdm.tqdm", "tqdm.tqdm.close", "figet.Dict.prune", "figet.Dict.prune", "figet.Dict.prune", "log.info", "open", "figet.utils.wc", "tqdm.tqdm.update", "line.strip().split", "fields[].split", "fields[].split", "fields[].split", "figet.Dict.add", "figet.Dict.add", "figet.Dict.add", "figet.Dict.size", "figet.Dict.size", "figet.Dict.size", "line.strip"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.prune", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.prune", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.prune", "home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.wc", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["def", "make_vocabs", "(", "args", ")", ":", "\n", "    ", "token_vocab", "=", "figet", ".", "Dict", "(", "\n", "[", "figet", ".", "Constants", ".", "PAD_WORD", ",", "figet", ".", "Constants", ".", "UNK_WORD", "]", ",", "\n", "lower", "=", "args", ".", "lower", ")", "\n", "feature_vocab", "=", "figet", ".", "Dict", "(", "[", "figet", ".", "Constants", ".", "UNK_WORD", "]", ")", "\n", "type_vocab", "=", "figet", ".", "Dict", "(", ")", "\n", "\n", "all_files", "=", "(", "args", ".", "train", ",", "args", ".", "dev", ",", "args", ".", "test", ")", "\n", "bar", "=", "tqdm", "(", "desc", "=", "\"make_vocabs\"", ",", "total", "=", "figet", ".", "utils", ".", "wc", "(", "all_files", ")", ")", "\n", "for", "data_file", "in", "all_files", ":", "\n", "        ", "for", "line", "in", "open", "(", "data_file", ")", ":", "\n", "            ", "bar", ".", "update", "(", ")", "\n", "fields", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "tokens", ",", "types", ",", "features", "=", "fields", "[", "2", "]", ".", "split", "(", ")", ",", "fields", "[", "3", "]", ".", "split", "(", ")", ",", "fields", "[", "4", "]", ".", "split", "(", ")", "\n", "for", "token", "in", "tokens", ":", "\n", "                ", "token_vocab", ".", "add", "(", "token", ")", "\n", "", "for", "feature", "in", "features", ":", "\n", "                ", "feature_vocab", ".", "add", "(", "feature", ")", "\n", "", "for", "type_", "in", "types", ":", "\n", "                ", "type_vocab", ".", "add", "(", "type_", ")", "\n", "", "", "", "bar", ".", "close", "(", ")", "\n", "token_vocab", ".", "prune", "(", ")", "\n", "feature_vocab", ".", "prune", "(", ")", "\n", "type_vocab", ".", "prune", "(", ")", "\n", "\n", "log", ".", "info", "(", "\"Created vocabs:\\n\\t#token: %d\\n\\t#feature: %d\\n\\t#type: %d\"", "\n", "%", "(", "token_vocab", ".", "size", "(", ")", ",", "feature_vocab", ".", "size", "(", ")", ",", "type_vocab", ".", "size", "(", ")", ")", ")", "\n", "\n", "return", "{", "\"token\"", ":", "token_vocab", ",", "\"feature\"", ":", "feature_vocab", ",", "\"type\"", ":", "type_vocab", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_data": [[46, 87], ["tqdm.tqdm", "log.info", "open", "line.strip.strip", "line.strip.split", "fields[].split", "figet.Mention", "data.append", "sizes.append", "log.info", "torch.randperm", "log.info", "torch.sort", "figet.utils.wc", "len", "int", "int", "len", "doc2vec.transform", "len", "len", "torch.Tensor", "len", "fields[].replace().strip", "fields[].replace"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.wc", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.transform"], ["", "def", "make_data", "(", "data_file", ",", "vocabs", ",", "args", ",", "doc2vec", "=", "None", ")", ":", "\n", "    ", "count", ",", "ignored", "=", "0", ",", "0", "\n", "data", ",", "sizes", "=", "[", "]", ",", "[", "]", "\n", "for", "line", "in", "tqdm", "(", "open", "(", "data_file", ")", ",", "total", "=", "figet", ".", "utils", ".", "wc", "(", "data_file", ")", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", "\n", "fields", "=", "line", ".", "split", "(", "\"\\t\"", ")", "\n", "if", "len", "(", "fields", ")", "not", "in", "{", "5", ",", "8", "}", ":", "\n", "            ", "ignored", "+=", "1", "\n", "continue", "\n", "\n", "", "start_idx", ",", "end_idx", "=", "int", "(", "fields", "[", "0", "]", ")", ",", "int", "(", "fields", "[", "1", "]", ")", "\n", "tokens", "=", "fields", "[", "2", "]", ".", "split", "(", ")", "\n", "if", "len", "(", "tokens", "[", "start_idx", ":", "end_idx", "]", ")", "==", "0", ":", "\n", "            ", "ignored", "+=", "1", "\n", "continue", "\n", "\n", "", "doc_vec", "=", "None", "\n", "if", "args", ".", "use_doc", "==", "1", ":", "\n", "            ", "if", "len", "(", "fields", ")", "==", "5", ":", "\n", "                ", "doc", "=", "fields", "[", "2", "]", "\n", "", "else", ":", "\n", "                ", "doc", "=", "fields", "[", "7", "]", ".", "replace", "(", "'\\\\n'", ",", "' '", ")", ".", "strip", "(", ")", "\n", "", "doc_vec", "=", "doc2vec", ".", "transform", "(", "doc", ")", "\n", "", "mention", "=", "figet", ".", "Mention", "(", "line", ",", "doc_vec", ")", "\n", "data", ".", "append", "(", "mention", ")", "\n", "sizes", ".", "append", "(", "len", "(", "tokens", ")", ")", "\n", "count", "+=", "1", "\n", "\n", "", "if", "args", ".", "shuffle", ":", "\n", "        ", "log", ".", "info", "(", "\"... shuffling sentences.\"", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "len", "(", "data", ")", ")", "\n", "data", "=", "[", "data", "[", "idx", "]", "for", "idx", "in", "perm", "]", "\n", "sizes", "=", "[", "sizes", "[", "idx", "]", "for", "idx", "in", "perm", "]", "\n", "\n", "log", ".", "info", "(", "'... sorting sentences by size'", ")", "\n", "_", ",", "perm", "=", "torch", ".", "sort", "(", "torch", ".", "Tensor", "(", "sizes", ")", ")", "\n", "data", "=", "[", "data", "[", "idx", "]", "for", "idx", "in", "perm", "]", "\n", "\n", "", "log", ".", "info", "(", "\"Prepared %d mentions (%d ignored due to malformed input.)\"", "%", "(", "count", ",", "ignored", ")", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_word2vec": [[89, 116], ["log.info", "tqdm.tqdm", "xrange", "torch.stack", "log.info", "log.info", "open", "line.strip().split", "list", "torch.Tensor", "vocab.size", "torch.stack.append", "figet.utils.wc", "map", "torch.stack.append", "line.strip", "torch.zeros", "map", "unk_vec.size", "list", "torch.stack.size"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.wc", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "def", "make_word2vec", "(", "filepath", ",", "vocab", ")", ":", "\n", "    ", "token2vec", "=", "{", "}", "\n", "log", ".", "info", "(", "\"Start loading pretrained word vecs\"", ")", "\n", "for", "line", "in", "tqdm", "(", "open", "(", "filepath", ")", ",", "total", "=", "figet", ".", "utils", ".", "wc", "(", "filepath", ")", ")", ":", "\n", "        ", "fields", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "token", "=", "fields", "[", "0", "]", "\n", "vec", "=", "list", "(", "map", "(", "float", ",", "fields", "[", "1", ":", "]", ")", ")", "\n", "token2vec", "[", "token", "]", "=", "torch", ".", "Tensor", "(", "vec", ")", "\n", "\n", "", "ret", "=", "[", "]", "\n", "oov", "=", "0", "\n", "unk_vec", "=", "token2vec", "[", "\"unk\"", "]", "\n", "for", "idx", "in", "xrange", "(", "vocab", ".", "size", "(", ")", ")", ":", "\n", "        ", "token", "=", "vocab", ".", "idx2label", "[", "idx", "]", "\n", "if", "token", "==", "figet", ".", "Constants", ".", "PAD_WORD", ":", "\n", "            ", "ret", ".", "append", "(", "torch", ".", "zeros", "(", "unk_vec", ".", "size", "(", ")", ")", ")", "\n", "continue", "\n", "", "if", "token", "in", "token2vec", ":", "\n", "            ", "vec", "=", "token2vec", "[", "token", "]", "\n", "", "else", ":", "\n", "            ", "oov", "+=", "1", "\n", "vec", "=", "unk_vec", "\n", "", "ret", ".", "append", "(", "vec", ")", "\n", "", "ret", "=", "torch", ".", "stack", "(", "ret", ")", "\n", "log", ".", "info", "(", "\"* OOV count: %d\"", "%", "oov", ")", "\n", "log", ".", "info", "(", "\"* Embedding size (%s)\"", "%", "(", "\", \"", ".", "join", "(", "map", "(", "str", ",", "list", "(", "ret", ".", "size", "(", ")", ")", ")", ")", ")", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.main": [[118, 144], ["log.info", "preprocess.make_vocabs", "log.info", "preprocess.make_data", "log.info", "preprocess.make_data", "log.info", "preprocess.make_data", "log.info", "preprocess.make_word2vec", "log.info", "torch.save", "log.info", "torch.save", "figet.context_modules.doc2vec.Doc2Vec", "figet.context_modules.doc2vec.Doc2Vec.load"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_vocabs", "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_data", "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_data", "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_data", "home.repos.pwc.inspect_result.sheng-z_figet.None.preprocess.make_word2vec", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load"], ["", "def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "doc2vec", "=", "None", "\n", "if", "args", ".", "use_doc", "==", "1", ":", "\n", "        ", "doc2vec", "=", "Doc2Vec", "(", "save_path", "=", "args", ".", "save_doc2vec", ")", "\n", "doc2vec", ".", "load", "(", ")", "\n", "\n", "", "log", ".", "info", "(", "\"Preparing vocabulary...\"", ")", "\n", "vocabs", "=", "make_vocabs", "(", "args", ")", "\n", "\n", "log", ".", "info", "(", "\"Preparing training...\"", ")", "\n", "train", "=", "make_data", "(", "args", ".", "train", ",", "vocabs", ",", "args", ",", "doc2vec", ")", "\n", "log", ".", "info", "(", "\"Preparing dev...\"", ")", "\n", "dev", "=", "make_data", "(", "args", ".", "dev", ",", "vocabs", ",", "args", ",", "doc2vec", ")", "\n", "log", ".", "info", "(", "\"Preparing test...\"", ")", "\n", "test", "=", "make_data", "(", "args", ".", "test", ",", "vocabs", ",", "args", ",", "doc2vec", ")", "\n", "\n", "log", ".", "info", "(", "\"Preparing pretrained word vectors...\"", ")", "\n", "word2vec", "=", "make_word2vec", "(", "args", ".", "word2vec", ",", "vocabs", "[", "\"token\"", "]", ")", "\n", "log", ".", "info", "(", "\"Saving pretrained word vectors to '%s'...\"", "%", "(", "args", ".", "save_data", "+", "\".word2vec\"", ")", ")", "\n", "torch", ".", "save", "(", "word2vec", ",", "args", ".", "save_data", "+", "\".word2vec\"", ")", "\n", "\n", "\n", "log", ".", "info", "(", "\"Saving data to '%s'...\"", "%", "(", "args", ".", "save_data", "+", "\".data.pt\"", ")", ")", "\n", "save_data", "=", "{", "\"vocabs\"", ":", "vocabs", ",", "\"train\"", ":", "train", ",", "\"dev\"", ":", "dev", ",", "\"test\"", ":", "test", "}", "\n", "torch", ".", "save", "(", "save_data", ",", "args", ".", "save_data", "+", "\".data.pt\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.__init__": [[12, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "line", ",", "doc_vec", "=", "None", ")", ":", "\n", "        ", "self", ".", "line", "=", "line", "\n", "self", ".", "doc_vec", "=", "doc_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.preprocess": [[16, 34], ["Mention.Mention.line.split", "Mention.Mention.type_idx", "Mention.Mention.feature_idx", "Mention.Mention.mention_idx", "int", "int", "fields[].split", "fields[].split", "fields[].split", "Mention.Mention.context_idx", "Mention.Mention.prev_context_idx", "Mention.Mention.next_context_idx", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.type_idx", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.feature_idx", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.mention_idx", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.context_idx", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.prev_context_idx", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.next_context_idx"], ["", "def", "preprocess", "(", "self", ",", "vocabs", ",", "word2vec", ",", "args", ")", ":", "\n", "        ", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "word2vec", "=", "word2vec", "\n", "self", ".", "context_length", "=", "args", ".", "context_length", "\n", "fields", "=", "self", ".", "line", ".", "split", "(", "\"\\t\"", ")", "\n", "self", ".", "start", ",", "self", ".", "end", "=", "int", "(", "fields", "[", "0", "]", ")", ",", "int", "(", "fields", "[", "1", "]", ")", "\n", "self", ".", "tokens", ",", "self", ".", "types", ",", "self", ".", "features", "=", "fields", "[", "2", "]", ".", "split", "(", ")", ",", "fields", "[", "3", "]", ".", "split", "(", ")", ",", "fields", "[", "4", "]", ".", "split", "(", ")", "\n", "self", ".", "types", "=", "self", ".", "type_idx", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "feature_idx", "(", ")", "\n", "self", ".", "mention", "=", "self", ".", "mention_idx", "(", ")", "\n", "if", "args", ".", "single_context", "==", "1", ":", "\n", "            ", "self", ".", "context", "=", "self", ".", "context_idx", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "prev_context", "=", "self", ".", "prev_context_idx", "(", ")", "\n", "self", ".", "next_context", "=", "self", ".", "next_context_idx", "(", ")", "\n", "", "if", "self", ".", "doc_vec", "is", "not", "None", ":", "\n", "            ", "self", ".", "doc_vec", "=", "torch", ".", "from_numpy", "(", "self", ".", "doc_vec", ")", "\n", "", "self", ".", "tokens", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.mention_idx": [[35, 39], ["torch.mean().squeeze", "torch.mean", "torch.stack", "Mention.Mention.vocabs[].lookup"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup"], ["", "def", "mention_idx", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "torch", ".", "stack", "(", "\n", "[", "self", ".", "word2vec", "[", "self", ".", "vocabs", "[", "\"token\"", "]", ".", "lookup", "(", "token", ",", "figet", ".", "Constants", ".", "UNK", ")", "]", "\n", "for", "token", "in", "self", ".", "tokens", "[", "self", ".", "start", ":", "self", ".", "end", "]", "]", ")", ",", "dim", "=", "0", ")", ".", "squeeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.context_idx": [[40, 45], ["Mention.Mention.vocabs[].convert_to_idx", "min", "max", "len"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_idx"], ["", "def", "context_idx", "(", "self", ")", ":", "\n", "        ", "context", "=", "(", "self", ".", "tokens", "[", "max", "(", "0", ",", "self", ".", "start", "-", "self", ".", "context_length", ")", ":", "self", ".", "start", "]", "+", "\n", "[", "figet", ".", "Constants", ".", "PAD_WORD", "]", "+", "\n", "self", ".", "tokens", "[", "self", ".", "end", ":", "min", "(", "len", "(", "self", ".", "tokens", ")", ",", "self", ".", "end", "+", "self", ".", "context_length", ")", "]", ")", "\n", "return", "self", ".", "vocabs", "[", "\"token\"", "]", ".", "convert_to_idx", "(", "context", ",", "figet", ".", "Constants", ".", "UNK_WORD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.prev_context_idx": [[46, 49], ["Mention.Mention.vocabs[].convert_to_idx", "max"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_idx"], ["", "def", "prev_context_idx", "(", "self", ")", ":", "\n", "        ", "prev_context", "=", "self", ".", "tokens", "[", "max", "(", "0", ",", "self", ".", "start", "-", "self", ".", "context_length", ")", ":", "self", ".", "start", "]", "\n", "return", "self", ".", "vocabs", "[", "\"token\"", "]", ".", "convert_to_idx", "(", "prev_context", ",", "figet", ".", "Constants", ".", "UNK_WORD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.next_context_idx": [[50, 53], ["Mention.Mention.vocabs[].convert_to_idx", "min", "len"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_idx"], ["", "def", "next_context_idx", "(", "self", ")", ":", "\n", "        ", "next_context", "=", "self", ".", "tokens", "[", "self", ".", "end", ":", "min", "(", "len", "(", "self", ".", "tokens", ")", ",", "self", ".", "end", "+", "self", ".", "context_length", ")", "]", "\n", "return", "self", ".", "vocabs", "[", "\"token\"", "]", ".", "convert_to_idx", "(", "next_context", ",", "figet", ".", "Constants", ".", "UNK_WORD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.feature_idx": [[54, 56], ["Mention.Mention.vocabs[].convert_to_idx"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_idx"], ["", "def", "feature_idx", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "vocabs", "[", "\"feature\"", "]", ".", "convert_to_idx", "(", "self", ".", "features", ",", "figet", ".", "Constants", ".", "UNK_WORD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Mention.Mention.type_idx": [[57, 63], ["torch.Tensor().zero_", "Mention.Mention.vocabs[].lookup", "torch.Tensor", "Mention.Mention.vocabs[].size"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "def", "type_idx", "(", "self", ")", ":", "\n", "        ", "type_vec", "=", "torch", ".", "Tensor", "(", "self", ".", "vocabs", "[", "\"type\"", "]", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "\n", "for", "type_", "in", "self", ".", "types", ":", "\n", "            ", "type_idx", "=", "self", ".", "vocabs", "[", "\"type\"", "]", ".", "lookup", "(", "type_", ")", "\n", "type_vec", "[", "type_idx", "]", "=", "1", "\n", "", "return", "type_vec", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.tune": [[17, 29], ["multiprocessing.Pool", "functools.partial", "mp.Pool.map", "xrange", "xrange"], "function", ["None"], ["def", "tune", "(", "baseline", ",", "dist", ",", "type_", ",", "num_types", ",", "init_threshold", ")", ":", "\n", "    ", "idx2threshold", "=", "{", "idx", ":", "init_threshold", "for", "idx", "in", "xrange", "(", "num_types", ")", "}", "\n", "pool", "=", "mp", ".", "Pool", "(", "processes", "=", "8", ")", "\n", "func", "=", "partial", "(", "search_threshold", ",", "\n", "init_threshold", "=", "init_threshold", ",", "\n", "num_types", "=", "num_types", ",", "\n", "dist", "=", "dist", ",", "\n", "type_", "=", "type_", ",", "\n", "baseline", "=", "baseline", ")", "\n", "for", "idx", ",", "best_t", "in", "pool", ".", "map", "(", "func", ",", "xrange", "(", "num_types", ")", ")", ":", "\n", "        ", "idx2threshold", "[", "idx", "]", "=", "best_t", "\n", "", "return", "idx2threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.search_threshold": [[31, 43], ["list", "print", "numpy.linspace", "adaptive_thres.predict", "figet.evaluate.strict", "xrange"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.strict"], ["", "def", "search_threshold", "(", "idx", ",", "init_threshold", ",", "num_types", ",", "dist", ",", "type_", ",", "baseline", ")", ":", "\n", "# Search the best thresholds.", "\n", "    ", "idx2threshold", "=", "{", "i", ":", "init_threshold", "for", "i", "in", "xrange", "(", "num_types", ")", "}", "\n", "best_t", "=", "idx2threshold", "[", "idx", "]", "\n", "for", "t", "in", "list", "(", "np", ".", "linspace", "(", "0", ",", "1.0", ",", "num", "=", "20", ")", ")", ":", "\n", "        ", "idx2threshold", "[", "idx", "]", "=", "t", "\n", "pred", "=", "predict", "(", "dist", ",", "type_", ",", "idx2threshold", ")", "\n", "_", ",", "_", ",", "temp", "=", "figet", ".", "evaluate", ".", "strict", "(", "pred", ")", "\n", "if", "temp", ">", "baseline", ":", "\n", "            ", "best_t", "=", "t", "\n", "", "", "print", "(", "'-'", ",", "end", "=", "''", ")", "\n", "return", "idx", ",", "best_t", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict": [[45, 67], ["xrange", "enumerate", "max", "pred_type.append", "enumerate", "ret.append", "list", "enumerate", "list", "gold_type.append", "list", "pred_type.append"], "function", ["None"], ["", "def", "predict", "(", "pred_dist", ",", "Y", ",", "idx2threshold", "=", "None", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "batch_size", "=", "pred_dist", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "xrange", "(", "batch_size", ")", ":", "\n", "        ", "dist", "=", "pred_dist", "[", "i", "]", "\n", "type_vec", "=", "Y", "[", "i", "]", "\n", "pred_type", "=", "[", "]", "\n", "gold_type", "=", "[", "]", "\n", "for", "idx", ",", "score", "in", "enumerate", "(", "list", "(", "type_vec", ")", ")", ":", "\n", "            ", "if", "score", ">", "0", ":", "\n", "                ", "gold_type", ".", "append", "(", "idx", ")", "\n", "", "", "midx", ",", "score", "=", "max", "(", "enumerate", "(", "list", "(", "dist", ")", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "pred_type", ".", "append", "(", "midx", ")", "\n", "for", "idx", ",", "score", "in", "enumerate", "(", "list", "(", "dist", ")", ")", ":", "\n", "            ", "if", "idx2threshold", "is", "None", ":", "\n", "                ", "threshold", "=", "0.5", "\n", "", "else", ":", "\n", "                ", "threshold", "=", "idx2threshold", "[", "idx", "]", "\n", "", "if", "score", ">", "threshold", "and", "idx", "!=", "midx", ":", "\n", "                ", "pred_type", ".", "append", "(", "idx", ")", "\n", "", "", "ret", ".", "append", "(", "[", "gold_type", ",", "pred_type", "]", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.main": [[69, 96], ["torch.load", "adaptive_thres.predict", "adaptive_thres.predict", "log.info", "figet.evaluate.strict", "adaptive_thres.tune", "torch.save", "print", "adaptive_thres.predict", "adaptive_thres.predict", "log.info", "type_vocab.size", "figet.evaluate.evaluate", "figet.evaluate.evaluate", "figet.evaluate.evaluate", "figet.evaluate.evaluate"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.strict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.tune", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "data", "=", "torch", ".", "load", "(", "args", ".", "data", ")", "\n", "type_vocab", "=", "data", "[", "\"type_vocab\"", "]", "\n", "\n", "# Baseline predictions.", "\n", "dev_predictions", "=", "predict", "(", "data", "[", "\"dev_dist\"", "]", ",", "data", "[", "\"dev_type\"", "]", ")", "\n", "test_predictions", "=", "predict", "(", "data", "[", "\"test_dist\"", "]", ",", "data", "[", "\"test_type\"", "]", ")", "\n", "\n", "log", ".", "info", "(", "\"| Baseline | dev acc. %s | test acc. %s |\"", "%", "(", "\n", "figet", ".", "evaluate", ".", "evaluate", "(", "dev_predictions", ")", ",", "\n", "figet", ".", "evaluate", ".", "evaluate", "(", "test_predictions", ")", ")", ")", "\n", "\n", "# Baseline on dev.", "\n", "_", ",", "_", ",", "baseline", "=", "figet", ".", "evaluate", ".", "strict", "(", "dev_predictions", ")", "\n", "\n", "idx2threshold", "=", "tune", "(", "baseline", ",", "data", "[", "\"dev_dist\"", "]", ",", "data", "[", "\"dev_type\"", "]", ",", "\n", "type_vocab", ".", "size", "(", ")", ",", "args", ".", "init_threshold", ")", "\n", "\n", "torch", ".", "save", "(", "idx2threshold", ",", "args", ".", "optimal_thresholds", ")", "\n", "print", "(", "''", ")", "\n", "# After tuning.", "\n", "dev_predictions", "=", "predict", "(", "data", "[", "\"dev_dist\"", "]", ",", "data", "[", "\"dev_type\"", "]", ",", "idx2threshold", ")", "\n", "test_predictions", "=", "predict", "(", "data", "[", "\"test_dist\"", "]", ",", "data", "[", "\"test_type\"", "]", ",", "idx2threshold", ")", "\n", "\n", "log", ".", "info", "(", "\"| Tuned | dev acc. %s | test acc. %s |\"", "%", "(", "\n", "figet", ".", "evaluate", ".", "evaluate", "(", "dev_predictions", ")", ",", "\n", "figet", ".", "evaluate", ".", "evaluate", "(", "test_predictions", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.__init__": [[17, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "vocabs", ",", "train_data", ",", "dev_data", ",", "test_data", ",", "optim", ",", "args", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "train_data", "=", "train_data", "\n", "self", ".", "dev_data", "=", "dev_data", "\n", "self", ".", "test_data", "=", "test_data", "\n", "self", ".", "optim", "=", "optim", "\n", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.train": [[25, 58], ["log.debug", "time.time", "xrange", "Coach.Coach.train_epoch", "Coach.Coach.validate", "Coach.Coach.validate", "figet.evaluate.strict", "log.info", "copy.deepcopy", "log.info", "Coach.Coach.model.state_dict", "figet.evaluate.evaluate", "figet.evaluate.evaluate"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.train_epoch", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.validate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.validate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.strict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "log", ".", "debug", "(", "self", ".", "model", ")", "\n", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "# Early stopping.", "\n", "best_dev_f1", ",", "best_epoch", ",", "best_state", "=", "None", ",", "None", ",", "None", "\n", "# Adaptive threshods.", "\n", "best_dev_dist", ",", "dev_labels", "=", "None", ",", "None", "\n", "test_dist", ",", "test_labels", ",", "raw_test_data", "=", "None", ",", "None", ",", "None", "\n", "# Run epochs.", "\n", "for", "epoch", "in", "xrange", "(", "1", ",", "self", ".", "args", ".", "epochs", "+", "1", ")", ":", "\n", "            ", "train_loss", "=", "self", ".", "train_epoch", "(", "epoch", ")", "\n", "\n", "# Record the best results on dev.", "\n", "dev_results", "=", "self", ".", "validate", "(", ")", "\n", "test_results", "=", "self", ".", "validate", "(", "self", ".", "test_data", ")", "\n", "_", ",", "_", ",", "dev_f1", "=", "figet", ".", "evaluate", ".", "strict", "(", "dev_results", "[", "1", "]", ")", "\n", "if", "best_dev_f1", "is", "None", "or", "dev_f1", ">", "best_dev_f1", ":", "\n", "                ", "best_dev_f1", "=", "dev_f1", "\n", "best_epoch", "=", "epoch", "\n", "best_state", "=", "copy", ".", "deepcopy", "(", "self", ".", "model", ".", "state_dict", "(", ")", ")", "\n", "best_dev_dist", ",", "dev_labels", "=", "dev_results", "[", "2", ":", "4", "]", "\n", "test_dist", ",", "test_labels", ",", "raw_test_data", "=", "test_results", "[", "2", ":", "5", "]", "\n", "log", ".", "info", "(", "\"* the new best dev f1: %.2f\"", "%", "(", "best_dev_f1", "*", "100", ")", ")", "\n", "", "log", ".", "info", "(", "\n", "\"| epoch %d | dev acc. %s | test acc. %s | loss (%.2f, %.2f, %.2f) |\"", "\n", "%", "(", "epoch", ",", "figet", ".", "evaluate", ".", "evaluate", "(", "dev_results", "[", "1", "]", ")", ",", "\n", "figet", ".", "evaluate", ".", "evaluate", "(", "test_results", "[", "1", "]", ")", ",", "\n", "train_loss", "*", "100", ",", "dev_results", "[", "0", "]", "*", "100", ",", "test_results", "[", "0", "]", "*", "100", ")", ")", "\n", "\n", "", "return", "(", "best_dev_f1", ",", "best_epoch", ",", "best_state", ",", "\n", "best_dev_dist", ",", "dev_labels", ",", "\n", "test_dist", ",", "test_labels", ",", "raw_test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.train_epoch": [[59, 106], ["list", "time.time", "Coach.Coach.model.train", "tqdm.tqdm.tqdm", "numpy.mean", "Coach.Coach.train_data.shuffle", "len", "xrange", "xrange", "Coach.Coach.model.zero_grad", "Coach.Coach.model", "Coach.Coach.optim.optimizer.zero_grad", "loss.backward", "Coach.Coach.optim.step", "isinstance", "[].data.ne().sum", "prev_context.data.ne().sum", "isinstance", "log.debug", "time.time", "[].data.ne().sum", "next_context.data.ne().sum", "[].data.ne", "prev_context.data.ne", "[].data.ne", "next_context.data.ne", "len", "numpy.mean", "time.time", "time.time"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.train", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset.shuffle", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.step"], ["", "def", "train_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "extra_shuffle", "==", "1", ":", "\n", "            ", "self", ".", "train_data", ".", "shuffle", "(", ")", "\n", "\n", "", "niter", "=", "self", ".", "args", ".", "niter", "if", "self", ".", "args", ".", "niter", "!=", "-", "1", "else", "len", "(", "self", ".", "train_data", ")", "\n", "batch_order", "=", "list", "(", "xrange", "(", "niter", ")", ")", "# torch.randperm(niter)", "\n", "\n", "total_tokens", ",", "report_tokens", "=", "0", ",", "0", "\n", "total_loss", ",", "report_loss", "=", "[", "]", ",", "[", "]", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "for", "i", "in", "tqdm", "(", "xrange", "(", "niter", ")", ",", "desc", "=", "\"train_one_epoch\"", ")", ":", "\n", "            ", "batch_idx", "=", "batch_order", "[", "i", "]", "\n", "batch", "=", "self", ".", "train_data", "[", "batch_idx", "]", "\n", "\n", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "loss", ",", "_", ",", "_", "=", "self", ".", "model", "(", "batch", ")", "\n", "self", ".", "optim", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optim", ".", "step", "(", ")", "\n", "\n", "# Stats.", "\n", "prev_context", ",", "next_context", "=", "batch", "[", "1", "]", ",", "batch", "[", "2", "]", "\n", "if", "isinstance", "(", "prev_context", ",", "tuple", ")", ":", "\n", "                ", "num_tokens", "=", "prev_context", "[", "0", "]", "[", "0", "]", ".", "data", ".", "ne", "(", "figet", ".", "Constants", ".", "PAD", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                ", "num_tokens", "=", "prev_context", ".", "data", ".", "ne", "(", "figet", ".", "Constants", ".", "PAD", ")", ".", "sum", "(", ")", "\n", "", "if", "self", ".", "args", ".", "single_context", "==", "0", ":", "\n", "                ", "if", "isinstance", "(", "next_context", ",", "tuple", ")", ":", "\n", "                    ", "num_tokens", "=", "next_context", "[", "0", "]", "[", "0", "]", ".", "data", ".", "ne", "(", "figet", ".", "Constants", ".", "PAD", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "                    ", "num_tokens", "=", "next_context", ".", "data", ".", "ne", "(", "figet", ".", "Constants", ".", "PAD", ")", ".", "sum", "(", ")", "\n", "", "", "total_tokens", "+=", "num_tokens", "\n", "report_tokens", "+=", "num_tokens", "\n", "total_loss", "+=", "[", "loss", ".", "data", "[", "0", "]", "]", "\n", "report_loss", "+=", "[", "loss", ".", "data", "[", "0", "]", "]", "\n", "if", "i", "%", "self", ".", "args", ".", "log_interval", "==", "-", "1", "%", "self", ".", "args", ".", "log_interval", ":", "\n", "                ", "log", ".", "debug", "(", "\n", "\"Epoch %2d | %5d/%5d | loss %6.2f | %3.0f ctx tok/s | %6.0f s elapsed\"", "\n", "%", "(", "epoch", ",", "i", "+", "1", ",", "len", "(", "self", ".", "train_data", ")", ",", "np", ".", "mean", "(", "report_loss", ")", ",", "\n", "report_tokens", "/", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ",", "\n", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", ")", ")", "\n", "report_tokens", "=", "0", "\n", "report_loss", "=", "[", "]", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "", "return", "np", ".", "mean", "(", "total_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Coach.Coach.validate": [[107, 125], ["Coach.Coach.model.eval", "xrange", "torch.cat", "torch.cat", "len", "Coach.Coach.model", "figet.adaptive_thres.predict", "numpy.mean", "torch.cat.cpu().numpy", "torch.cat.cpu().numpy", "torch.cat.cpu", "torch.cat.cpu"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.adaptive_thres.predict"], ["", "def", "validate", "(", "self", ",", "data", "=", "None", ")", ":", "\n", "        ", "data", "=", "data", "if", "data", "is", "not", "None", "else", "self", ".", "dev_data", "\n", "total_loss", "=", "[", "]", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "predictions", "=", "[", "]", "\n", "dists", ",", "labels", ",", "raw_data", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "xrange", "(", "len", "(", "data", ")", ")", ":", "\n", "            ", "batch", "=", "data", "[", "i", "]", "\n", "loss", ",", "dist", ",", "attn", "=", "self", ".", "model", "(", "batch", ")", "\n", "predictions", "+=", "figet", ".", "adaptive_thres", ".", "predict", "(", "dist", ".", "data", ",", "batch", "[", "3", "]", ".", "data", ")", "\n", "dists", "+=", "[", "dist", ".", "data", "]", "\n", "labels", "+=", "[", "batch", "[", "3", "]", ".", "data", "]", "\n", "raw_data", "+=", "[", "mention", ".", "line", "for", "mention", "in", "batch", "[", "-", "1", "]", "]", "\n", "total_loss", "+=", "[", "loss", ".", "data", "[", "0", "]", "]", "\n", "", "dists", "=", "torch", ".", "cat", "(", "dists", ",", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "labels", ",", "0", ")", "\n", "return", "(", "np", ".", "mean", "(", "total_loss", ")", ",", "predictions", ",", "\n", "dists", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "raw_data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.ContextEncoder.__init__": [[14, 26], ["torch.Module.__init__", "torch.LSTM", "torch.LSTM"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "input_size", "=", "args", ".", "context_input_size", "\n", "self", ".", "rnn_size", "=", "args", ".", "context_rnn_size", "\n", "self", ".", "num_directions", "=", "args", ".", "context_num_directions", "\n", "self", ".", "num_layers", "=", "args", ".", "context_num_layers", "\n", "assert", "self", ".", "rnn_size", "%", "self", ".", "num_directions", "==", "0", "\n", "self", ".", "hidden_size", "=", "self", ".", "rnn_size", "//", "self", ".", "num_directions", "\n", "super", "(", "ContextEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "LSTM", "(", "self", ".", "input_size", ",", "self", ".", "hidden_size", ",", "\n", "num_layers", "=", "self", ".", "num_layers", ",", "\n", "dropout", "=", "args", ".", "dropout", ",", "\n", "bidirectional", "=", "(", "self", ".", "num_directions", "==", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.ContextEncoder.forward": [[27, 43], ["isinstance", "word_lut", "torch.nn.utils.rnn.pack_padded_sequence.transpose", "torch.nn.utils.rnn.pack_padded_sequence.transpose", "Models.ContextEncoder.rnn", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "word_lut", ",", "hidden", "=", "None", ")", ":", "\n", "        ", "indices", "=", "None", "\n", "if", "isinstance", "(", "input", ",", "tuple", ")", ":", "\n", "            ", "input", ",", "lengths", ",", "indices", "=", "input", "\n", "\n", "", "emb", "=", "word_lut", "(", "input", ")", "# seq_len x batch x emb", "\n", "emb", "=", "emb", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "if", "indices", "is", "not", "None", ":", "\n", "            ", "emb", "=", "pack", "(", "emb", ",", "lengths", ")", "\n", "\n", "", "outputs", ",", "hidden_t", "=", "self", ".", "rnn", "(", "emb", ",", "hidden", ")", "\n", "if", "indices", "is", "not", "None", ":", "\n", "            ", "outputs", "=", "unpack", "(", "outputs", ")", "[", "0", "]", "\n", "outputs", "=", "outputs", "[", ":", ",", "indices", ",", ":", "]", "\n", "", "return", "outputs", ",", "hidden_t", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.DocEncoder.__init__": [[47, 56], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "super", "(", "DocEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "args", ".", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", ".", "dropout", ")", "\n", "", "self", ".", "W", "=", "nn", ".", "Linear", "(", "args", ".", "doc_input_size", ",", "args", ".", "doc_hidden_size", ")", "\n", "self", ".", "U", "=", "nn", ".", "Linear", "(", "args", ".", "doc_hidden_size", ",", "args", ".", "doc_output_size", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.DocEncoder.forward": [[57, 61], ["Models.DocEncoder.relu", "Models.DocEncoder.relu", "Models.DocEncoder.U", "Models.DocEncoder.U", "Models.DocEncoder.tanh", "Models.DocEncoder.tanh", "Models.DocEncoder.W", "Models.DocEncoder.W", "Models.DocEncoder.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "dropout", ":", "\n", "            ", "return", "self", ".", "relu", "(", "self", ".", "U", "(", "self", ".", "tanh", "(", "self", ".", "W", "(", "self", ".", "dropout", "(", "input", ")", ")", ")", ")", ")", "\n", "", "return", "self", ".", "relu", "(", "self", ".", "U", "(", "self", ".", "tanh", "(", "self", ".", "W", "(", "input", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Attention.__init__": [[65, 73], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Softmax", "torch.Softmax", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "rnn_size", "=", "args", ".", "context_rnn_size", "\n", "self", ".", "attn_size", "=", "args", ".", "attn_size", "\n", "super", "(", "Attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear_in", "=", "nn", ".", "Linear", "(", "args", ".", "context_input_size", ",", "args", ".", "context_rnn_size", ")", "\n", "self", ".", "sm", "=", "nn", ".", "Softmax", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Attention.forward": [[74, 77], ["Models.Attention.att_func1"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Attention.att_func1"], ["", "def", "forward", "(", "self", ",", "mention", ",", "context", ",", "mask", "=", "None", ")", ":", "\n", "# return self.average(context)", "\n", "        ", "return", "self", ".", "att_func1", "(", "mention", ",", "context", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Attention.average": [[78, 80], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "context.transpose"], "methods", ["None"], ["", "def", "average", "(", "self", ",", "context", ")", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "context", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Attention.att_func1": [[81, 97], ["context.transpose().contiguous.transpose().contiguous.transpose().contiguous", "Models.Attention.linear_in().unsqueeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "Models.Attention.sm", "Models.Attention.view", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "Models.Attention.data.masked_fill_", "Models.Attention.size", "Models.Attention.size", "Models.Attention.tanh", "context.transpose().contiguous.transpose().contiguous.transpose", "Models.Attention.linear_in", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "float"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "def", "att_func1", "(", "self", ",", "mention", ",", "context", ",", "mask", ")", ":", "\n", "        ", "context", "=", "context", ".", "transpose", "(", "0", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "targetT", "=", "self", ".", "linear_in", "(", "mention", ")", ".", "unsqueeze", "(", "2", ")", "# batch x attn_size x 1", "\n", "attn", "=", "torch", ".", "bmm", "(", "context", ",", "targetT", ")", ".", "squeeze", "(", "2", ")", "\n", "if", "False", ":", "# mask is not None:", "\n", "            ", "attn", ".", "data", ".", "masked_fill_", "(", "mask", ",", "-", "float", "(", "1000", ")", ")", "\n", "", "attn", "=", "self", ".", "sm", "(", "attn", ")", "\n", "attn3", "=", "attn", ".", "view", "(", "attn", ".", "size", "(", "0", ")", ",", "1", ",", "attn", ".", "size", "(", "1", ")", ")", "# batch x 1 x seq_len*2", "\n", "weighted_context_vec", "=", "torch", ".", "bmm", "(", "attn3", ",", "context", ")", ".", "squeeze", "(", "1", ")", "\n", "\n", "if", "self", ".", "args", ".", "single_context", "==", "1", ":", "\n", "            ", "context_output", "=", "weighted_context_vec", "\n", "", "else", ":", "\n", "            ", "context_output", "=", "self", ".", "tanh", "(", "weighted_context_vec", ")", "\n", "\n", "", "return", "context_output", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Classifier.__init__": [[101, 122], ["vocab.size", "torch.Module.__init__", "torch.Sigmoid", "torch.Sigmoid", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "Models.Classifier.create_prior", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.Linear", "torch.Linear", "torch.randn().uniform_", "torch.randn().uniform_", "torch.randn().uniform_", "torch.randn().uniform_", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Classifier.create_prior"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "vocab", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "num_types", "=", "vocab", ".", "size", "(", ")", "\n", "self", ".", "input_size", "=", "args", ".", "context_rnn_size", "+", "args", ".", "context_input_size", "\n", "if", "args", ".", "use_doc", "==", "1", ":", "\n", "            ", "self", ".", "input_size", "+=", "args", ".", "doc_output_size", "\n", "", "if", "args", ".", "use_manual_feature", "==", "1", ":", "\n", "            ", "self", ".", "input_size", "+=", "args", ".", "feature_emb_size", "\n", "", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "args", ".", "use_hierarchy", "==", "1", ":", "\n", "            ", "self", ".", "prior", "=", "self", ".", "create_prior", "(", ")", "\n", "self", ".", "V", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "self", ".", "num_types", ",", "self", ".", "input_size", ")", ".", "uniform_", "(", "\n", "-", "args", ".", "param_init", ",", "args", ".", "param_init", "\n", ")", ",", "requires_grad", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "W", "=", "nn", ".", "Linear", "(", "self", ".", "input_size", ",", "self", ".", "num_types", ",", "bias", "=", "args", ".", "bias", "==", "1", ")", "\n", "", "self", ".", "sg", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "loss_func", "=", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Classifier.create_prior": [[123, 137], ["list", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "Models.Classifier.vocab.label2idx.keys", "Models.Classifier.vocab.get_label", "len", "len", "Models.Classifier.split", "Models.Classifier.vocab.lookup", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "range", "len"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.get_label", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup"], ["", "def", "create_prior", "(", "self", ")", ":", "\n", "        ", "types", "=", "list", "(", "self", ".", "vocab", ".", "label2idx", ".", "keys", "(", ")", ")", "\n", "W", "=", "torch", ".", "zeros", "(", "(", "len", "(", "types", ")", ",", "len", "(", "types", ")", ")", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "num_types", ")", ":", "\n", "            ", "type_", "=", "self", ".", "vocab", ".", "get_label", "(", "idx", ")", "\n", "assert", "type_", "is", "not", "None", "\n", "fields", "=", "type_", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "subtypes", "=", "[", "\"/\"", "+", "\"/\"", ".", "join", "(", "fields", "[", ":", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "len", "(", "fields", ")", ")", "]", "\n", "for", "subtype", "in", "subtypes", ":", "\n", "                ", "sub_idx", "=", "self", ".", "vocab", ".", "lookup", "(", "subtype", ")", "\n", "assert", "sub_idx", "is", "not", "None", "\n", "W", "[", "idx", "]", "[", "sub_idx", "]", "=", "1", "\n", "", "", "W", "=", "torch", ".", "autograd", ".", "Variable", "(", "W", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "return", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Classifier.forward": [[138, 149], ["Models.Classifier.sg", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul().transpose", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "Models.Classifier.W", "Models.Classifier.loss_func", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "type_vec", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "use_hierarchy", "==", "1", ":", "\n", "            ", "W", "=", "torch", ".", "matmul", "(", "self", ".", "prior", ",", "self", ".", "V", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "logit", "=", "torch", ".", "matmul", "(", "input", ",", "W", ")", "\n", "", "else", ":", "\n", "            ", "logit", "=", "self", ".", "W", "(", "input", ")", "\n", "", "distribution", "=", "self", ".", "sg", "(", "logit", ")", "\n", "loss", "=", "None", "\n", "if", "type_vec", "is", "not", "None", ":", "\n", "            ", "loss", "=", "self", ".", "loss_func", "(", "logit", ",", "type_vec", ")", "\n", "", "return", "loss", ",", "distribution", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.MentionEncoder.__init__": [[153, 158], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "dropout", "=", "None", "\n", "super", "(", "MentionEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "args", ".", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", ".", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.MentionEncoder.forward": [[159, 163], ["Models.MentionEncoder.dropout"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "word_lut", ")", ":", "\n", "        ", "if", "self", ".", "dropout", ":", "\n", "            ", "return", "self", ".", "dropout", "(", "input", ")", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.__init__": [[167, 192], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "Models.MentionEncoder", "Models.ContextEncoder", "Models.ContextEncoder", "Models.Attention", "Models.Classifier", "vocabs[].size", "torch.Embedding", "torch.Embedding", "torch.Dropout", "torch.Dropout", "Models.DocEncoder", "vocabs[].size"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "vocabs", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "word_lut", "=", "nn", ".", "Embedding", "(", "\n", "vocabs", "[", "\"token\"", "]", ".", "size", "(", ")", ",", "args", ".", "context_input_size", ",", "\n", "padding_idx", "=", "figet", ".", "Constants", ".", "PAD", "\n", ")", "\n", "if", "args", ".", "use_manual_feature", "==", "1", ":", "\n", "            ", "self", ".", "feature_lut", "=", "nn", ".", "Embedding", "(", "\n", "vocabs", "[", "\"feature\"", "]", ".", "size", "(", ")", ",", "args", ".", "feature_emb_size", ",", "\n", "padding_idx", "=", "figet", ".", "Constants", ".", "PAD", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "feature_lut", "=", "None", "\n", "", "if", "args", ".", "dropout", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", ".", "dropout", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dropout", "=", "None", "\n", "", "self", ".", "mention_encoder", "=", "MentionEncoder", "(", "args", ")", "\n", "self", ".", "prev_context_encoder", "=", "ContextEncoder", "(", "args", ")", "\n", "self", ".", "next_context_encoder", "=", "ContextEncoder", "(", "args", ")", "\n", "if", "args", ".", "use_doc", "==", "1", ":", "\n", "            ", "self", ".", "doc_encoder", "=", "DocEncoder", "(", "args", ")", "\n", "", "self", ".", "attention", "=", "Attention", "(", "args", ")", "\n", "self", ".", "classifier", "=", "Classifier", "(", "args", ",", "vocabs", "[", "\"type\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.init_params": [[193, 201], ["Models.Model.feature_lut.weight.data.uniform_", "torch.load", "torch.load", "torch.load", "torch.load", "Models.Model.word_lut.weight.data.copy_"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load"], ["", "def", "init_params", "(", "self", ",", "word2vec", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "use_manual_feature", "==", "1", ":", "\n", "            ", "self", ".", "feature_lut", ".", "weight", ".", "data", ".", "uniform_", "(", "\n", "-", "self", ".", "args", ".", "param_init", ",", "self", ".", "args", ".", "param_init", ")", "\n", "", "if", "word2vec", ":", "\n", "            ", "pretrained", "=", "torch", ".", "load", "(", "word2vec", ")", "\n", "self", ".", "word_lut", ".", "weight", ".", "data", ".", "copy_", "(", "pretrained", ")", "\n", "self", ".", "word_lut", ".", "weight", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.forward": [[202, 227], ["Models.Model.mention_encoder", "Models.Model.encode_context", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Models.Model.classifier", "Models.Model.doc_encoder", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "Models.Model.feature_lut", "Models.Model.dropout"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.encode_context"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "mention", "=", "input", "[", "0", "]", "\n", "prev_context", ",", "prev_mask", "=", "input", "[", "1", "]", "\n", "next_context", ",", "next_mask", "=", "input", "[", "2", "]", "\n", "type_vec", "=", "input", "[", "3", "]", "\n", "feature", "=", "input", "[", "4", "]", "\n", "doc", "=", "input", "[", "5", "]", "\n", "attn", "=", "None", "\n", "mention_vec", "=", "self", ".", "mention_encoder", "(", "mention", ",", "self", ".", "word_lut", ")", "\n", "context_vec", ",", "attn", "=", "self", ".", "encode_context", "(", "\n", "prev_context", ",", "prev_mask", ",", "\n", "next_context", ",", "next_mask", ",", "\n", "mention_vec", ")", "\n", "vecs", "=", "[", "mention_vec", ",", "context_vec", "]", "\n", "if", "self", ".", "args", ".", "use_doc", "==", "1", ":", "\n", "            ", "doc_vec", "=", "self", ".", "doc_encoder", "(", "doc", ")", "\n", "vecs", "+=", "[", "doc_vec", "]", "\n", "", "if", "feature", "is", "not", "None", "and", "self", ".", "feature_lut", "is", "not", "None", ":", "\n", "            ", "feature_vec", "=", "torch", ".", "mean", "(", "self", ".", "feature_lut", "(", "feature", ")", ",", "1", ")", "\n", "if", "self", ".", "dropout", ":", "\n", "                ", "feature_vec", "=", "self", ".", "dropout", "(", "feature_vec", ")", "\n", "", "vecs", "+=", "[", "feature_vec", "]", "\n", "", "input_vec", "=", "torch", ".", "cat", "(", "vecs", ",", "dim", "=", "1", ")", "\n", "loss", ",", "distribution", "=", "self", ".", "classifier", "(", "input_vec", ",", "type_vec", ")", "\n", "return", "loss", ",", "distribution", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.encode_context": [[228, 230], ["Models.Model.draw_attention"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.draw_attention"], ["", "def", "encode_context", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "return", "self", ".", "draw_attention", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Models.Model.draw_attention": [[231, 244], ["Models.Model.attention", "Models.Model.prev_context_encoder", "Models.Model.prev_context_encoder", "Models.Model.next_context_encoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "draw_attention", "(", "self", ",", "prev_context_vec", ",", "prev_mask", ",", "\n", "next_context_vec", ",", "next_mask", ",", "mention_vec", ")", ":", "\n", "        ", "mask", "=", "None", "\n", "if", "self", ".", "args", ".", "single_context", "==", "1", ":", "\n", "            ", "context_vec", ",", "_", "=", "self", ".", "prev_context_encoder", "(", "prev_context_vec", ",", "self", ".", "word_lut", ")", "\n", "", "else", ":", "\n", "            ", "prev_context_vec", ",", "_", "=", "self", ".", "prev_context_encoder", "(", "prev_context_vec", ",", "self", ".", "word_lut", ")", "\n", "next_context_vec", ",", "_", "=", "self", ".", "next_context_encoder", "(", "next_context_vec", ",", "self", ".", "word_lut", ")", "\n", "if", "False", ":", "# prev_mask is not None and next_mask is not None:", "\n", "                ", "mask", "=", "torch", ".", "cat", "(", "(", "prev_mask", ",", "next_mask", ")", ",", "dim", "=", "1", ")", "\n", "", "context_vec", "=", "torch", ".", "cat", "(", "(", "prev_context_vec", ",", "next_context_vec", ")", ",", "dim", "=", "0", ")", "\n", "", "weighted_context_vec", ",", "attn", "=", "self", ".", "attention", "(", "mention_vec", ",", "context_vec", ",", "mask", ")", "\n", "return", "weighted_context_vec", ",", "attn", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.f1": [[4, 8], ["float"], "function", ["None"], ["def", "f1", "(", "p", ",", "r", ")", ":", "\n", "    ", "if", "r", "==", "0.", ":", "\n", "        ", "return", "0.", "\n", "", "return", "2", "*", "p", "*", "r", "/", "float", "(", "p", "+", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.strict": [[9, 16], ["len", "evaluate.f1", "set", "set"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.f1"], ["", "def", "strict", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "correct_num", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "correct_num", "+=", "set", "(", "true_labels", ")", "==", "set", "(", "predicted_labels", ")", "\n", "", "precision", "=", "recall", "=", "correct_num", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.loose_macro": [[17, 29], ["len", "len", "evaluate.f1", "len", "len", "float", "len", "float", "set().intersection", "len", "set().intersection", "len", "set", "set", "set", "set"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.f1"], ["", "def", "loose_macro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "p", "=", "0.", "\n", "r", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "if", "len", "(", "predicted_labels", ")", ">", "0", ":", "\n", "            ", "p", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "predicted_labels", ")", ")", "\n", "", "if", "len", "(", "true_labels", ")", ":", "\n", "            ", "r", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "true_labels", ")", ")", "\n", "", "", "precision", "=", "p", "/", "num_entities", "\n", "recall", "=", "r", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.loose_micro": [[30, 41], ["len", "len", "len", "evaluate.f1", "set().intersection", "set", "set"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.f1"], ["", "def", "loose_micro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_predicted_labels", "=", "0.", "\n", "num_true_labels", "=", "0.", "\n", "num_correct_labels", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "num_predicted_labels", "+=", "len", "(", "predicted_labels", ")", "\n", "num_true_labels", "+=", "len", "(", "true_labels", ")", "\n", "num_correct_labels", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "\n", "", "precision", "=", "num_correct_labels", "/", "num_predicted_labels", "\n", "recall", "=", "num_correct_labels", "/", "num_true_labels", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.evaluate": [[43, 61], ["evaluate.strict", "evaluate.loose_macro", "evaluate.loose_micro"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.strict", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.loose_macro", "home.repos.pwc.inspect_result.sheng-z_figet.figet.evaluate.loose_micro"], ["", "def", "evaluate", "(", "true_and_prediction", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "ret", "=", "\"\"", "\n", "p", ",", "r", ",", "f", "=", "strict", "(", "true_and_prediction", ")", "\n", "if", "verbose", ":", "\n", "        ", "ret", "+=", "\"| strict (%.2f, %.2f, %.2f) \"", "%", "(", "p", "*", "100", ",", "r", "*", "100", ",", "f", "*", "100", ")", "\n", "", "else", ":", "\n", "        ", "ret", "+=", "\"(%.2f, \"", "%", "(", "f", "*", "100", ")", "\n", "", "p", ",", "r", ",", "f", "=", "loose_macro", "(", "true_and_prediction", ")", "\n", "if", "verbose", ":", "\n", "        ", "ret", "+=", "\"| macro (%.2f, %.2f, %.2f) \"", "%", "(", "p", "*", "100", ",", "r", "*", "100", ",", "f", "*", "100", ")", "\n", "", "else", ":", "\n", "        ", "ret", "+=", "\"%.2f, \"", "%", "(", "f", "*", "100", ")", "\n", "", "p", ",", "r", ",", "f", "=", "loose_micro", "(", "true_and_prediction", ")", "\n", "if", "verbose", ":", "\n", "        ", "ret", "+=", "\"| micro (%.2f, %.2f, %.2f) |\"", "%", "(", "p", "*", "100", ",", "r", "*", "100", ",", "f", "*", "100", ")", "\n", "", "else", ":", "\n", "        ", "ret", "+=", "\"%.2f)\"", "%", "(", "f", "*", "100", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.__init__": [[10, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lr", ",", "max_grad_norm", ")", ":", "\n", "        ", "self", ".", "lr", "=", "lr", "\n", "self", ".", "max_grad_norm", "=", "max_grad_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.set_parameters": [[14, 17], ["list", "torch.Adam"], "methods", ["None"], ["", "def", "set_parameters", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "list", "(", "params", ")", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "params", ",", "lr", "=", "self", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.step": [[18, 22], ["Optim.Optim.optimizer.step", "torch.nn.utils.clip_grad_norm"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.step"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "max_grad_norm", "!=", "-", "1", ":", "\n", "            ", "clip_grad_norm", "(", "self", ".", "params", ",", "self", ".", "max_grad_norm", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.load_state_dict": [[23, 25], ["Optim.Optim.optimizer.load_state_dict", "state_dict"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Optim.Optim.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "load_state_dict", "(", "state_dict", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.__init__": [[8, 21], ["type", "Dict.Dict.load_file", "Dict.Dict.add_specials"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.load_file", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add_specials"], ["    ", "def", "__init__", "(", "self", ",", "data", "=", "None", ",", "lower", "=", "False", ")", ":", "\n", "        ", "self", ".", "idx2label", "=", "{", "}", "\n", "self", ".", "label2idx", "=", "{", "}", "\n", "self", ".", "frequencies", "=", "{", "}", "\n", "self", ".", "lower", "=", "lower", "\n", "\n", "self", ".", "special", "=", "[", "]", "\n", "\n", "if", "data", "is", "not", "None", ":", "\n", "            ", "if", "type", "(", "data", ")", "==", "str", ":", "\n", "                ", "self", ".", "load_file", "(", "data", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "add_specials", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size": [[22, 24], ["len"], "methods", ["None"], ["", "", "", "def", "size", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "idx2label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.load_file": [[25, 31], ["open", "line.strip().split", "int", "Dict.Dict.add", "line.strip"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add"], ["", "def", "load_file", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "filepath", ")", ":", "\n", "            ", "fields", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "label", "=", "fields", "[", "0", "]", "\n", "idx", "=", "int", "(", "fields", "[", "1", "]", ")", "\n", "self", ".", "add", "(", "label", ",", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.write_file": [[32, 37], ["open", "xrange", "Dict.Dict.size", "f.write"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "", "def", "write_file", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "with", "open", "(", "filepath", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "i", "in", "xrange", "(", "self", ".", "size", "(", ")", ")", ":", "\n", "                ", "label", "=", "self", ".", "idx2label", "[", "i", "]", "\n", "f", ".", "write", "(", "\"%s %d\\n\"", "%", "(", "label", ",", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup": [[38, 44], ["key.lower"], "methods", ["None"], ["", "", "", "def", "lookup", "(", "self", ",", "key", ",", "default", "=", "None", ")", ":", "\n", "        ", "key", "=", "key", ".", "lower", "(", ")", "if", "self", ".", "lower", "else", "key", "\n", "try", ":", "\n", "            ", "return", "self", ".", "label2idx", "[", "key", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.get_label": [[45, 50], ["None"], "methods", ["None"], ["", "", "def", "get_label", "(", "self", ",", "idx", ",", "default", "=", "None", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", ".", "idx2label", "[", "idx", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add_special": [[51, 54], ["Dict.Dict.add"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add"], ["", "", "def", "add_special", "(", "self", ",", "label", ",", "idx", "=", "None", ")", ":", "\n", "        ", "idx", "=", "self", ".", "add", "(", "label", ",", "idx", ")", "\n", "self", ".", "special", "+=", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add_specials": [[55, 58], ["Dict.Dict.add_special"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add_special"], ["", "def", "add_specials", "(", "self", ",", "labels", ")", ":", "\n", "        ", "for", "label", "in", "labels", ":", "\n", "            ", "self", ".", "add_special", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add": [[59, 78], ["label.lower", "len"], "methods", ["None"], ["", "", "def", "add", "(", "self", ",", "label", ",", "idx", "=", "None", ")", ":", "\n", "        ", "label", "=", "label", ".", "lower", "(", ")", "if", "self", ".", "lower", "else", "label", "\n", "if", "idx", "is", "not", "None", ":", "\n", "            ", "self", ".", "idx2label", "[", "idx", "]", "=", "label", "\n", "self", ".", "label2idx", "[", "label", "]", "=", "idx", "\n", "", "else", ":", "\n", "            ", "if", "label", "in", "self", ".", "label2idx", ":", "\n", "                ", "idx", "=", "self", ".", "label2idx", "[", "label", "]", "\n", "", "else", ":", "\n", "                ", "idx", "=", "len", "(", "self", ".", "idx2label", ")", "\n", "self", ".", "idx2label", "[", "idx", "]", "=", "label", "\n", "self", ".", "label2idx", "[", "label", "]", "=", "idx", "\n", "\n", "", "", "if", "idx", "not", "in", "self", ".", "frequencies", ":", "\n", "            ", "self", ".", "frequencies", "[", "idx", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "frequencies", "[", "idx", "]", "+=", "1", "\n", "\n", "", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.prune": [[79, 100], ["torch.Tensor", "torch.sort", "Dict.Dict", "Dict.Dict.size", "Dict.add_special", "Dict.add", "Dict.Dict.size", "xrange", "len"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add_special", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.add", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "def", "prune", "(", "self", ",", "size", "=", "None", ")", ":", "\n", "        ", "if", "size", "and", "size", ">=", "self", ".", "size", "(", ")", ":", "\n", "            ", "return", "self", "\n", "\n", "", "if", "size", "is", "None", ":", "\n", "            ", "size", "=", "self", ".", "size", "(", ")", "\n", "\n", "", "freq", "=", "torch", ".", "Tensor", "(", "\n", "[", "self", ".", "frequencies", "[", "i", "]", "for", "i", "in", "xrange", "(", "len", "(", "self", ".", "frequencies", ")", ")", "]", ")", "\n", "_", ",", "idx", "=", "torch", ".", "sort", "(", "freq", ",", "0", ",", "True", ")", "\n", "\n", "ret", "=", "Dict", "(", ")", "\n", "ret", ".", "lower", "=", "self", ".", "lower", "\n", "\n", "for", "i", "in", "self", ".", "special", ":", "\n", "            ", "ret", ".", "add_special", "(", "self", ".", "idx2label", "[", "i", "]", ")", "\n", "\n", "", "for", "i", "in", "idx", "[", ":", "size", "]", ":", "\n", "            ", "ret", ".", "add", "(", "self", ".", "idx2label", "[", "i", "]", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_idx": [[101, 115], ["Dict.Dict.lookup", "_type", "Dict.Dict.lookup", "Dict.Dict.lookup", "Dict.Dict.lookup"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.lookup"], ["", "def", "convert_to_idx", "(", "self", ",", "labels", ",", "unk", "=", "None", ",", "bos", "=", "None", ",", "eos", "=", "None", ",", "\n", "_type", "=", "torch", ".", "LongTensor", ")", ":", "\n", "        ", "vec", "=", "[", "]", "\n", "\n", "if", "bos", "is", "not", "None", ":", "\n", "            ", "vec", "+=", "[", "self", ".", "lookup", "(", "bos", ")", "]", "\n", "\n", "", "unk", "=", "self", ".", "lookup", "(", "unk", ")", "\n", "vec", "+=", "[", "self", ".", "lookup", "(", "label", ",", "default", "=", "unk", ")", "for", "label", "in", "labels", "]", "\n", "\n", "if", "eos", "is", "not", "None", ":", "\n", "            ", "vec", "+=", "[", "self", ".", "lookup", "(", "eos", ")", "]", "\n", "\n", "", "return", "_type", "(", "vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.convert_to_labels": [[116, 125], ["len", "idx.size", "Dict.Dict.get_label"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.get_label"], ["", "def", "convert_to_labels", "(", "self", ",", "idx", ",", "eos", "=", "None", ")", ":", "\n", "        ", "labels", "=", "[", "]", "\n", "if", "len", "(", "idx", ".", "size", "(", ")", ")", "==", "0", ":", "\n", "            ", "return", "labels", "\n", "", "for", "i", "in", "idx", ":", "\n", "            ", "labels", "+=", "[", "self", ".", "get_label", "(", "i", ")", "]", "\n", "if", "i", "==", "eos", ":", "\n", "                ", "break", "\n", "", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset.__init__": [[15, 22], ["math.ceil", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "batch_size", ",", "args", ",", "volatile", "=", "False", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_batches", "=", "math", ".", "ceil", "(", "len", "(", "self", ".", "data", ")", "/", "batch_size", ")", "\n", "self", ".", "volatile", "=", "volatile", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset.__len__": [[23, 25], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_batches", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset.shuffle": [[26, 28], ["torch.randperm", "len"], "methods", ["None"], ["", "def", "shuffle", "(", "self", ")", ":", "\n", "        ", "self", ".", "data", "=", "[", "self", ".", "data", "[", "i", "]", "for", "i", "in", "torch", ".", "randperm", "(", "len", "(", "self", ".", "data", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify": [[29, 60], ["data[].new().fill_", "torch.ByteTensor().fill_", "xrange", "out.cuda.cuda.contiguous", "mask.cuda.cuda.contiguous", "torch.autograd.Variable", "max", "len", "data[].size", "out_lengths.append", "len", "out.cuda.cuda.cuda", "mask.cuda.cuda.cuda", "data[].new", "torch.ByteTensor", "len", "out_lengths.append", "torch.from_numpy", "out[].narrow().copy_", "mask[].narrow().fill_", "out[].narrow().copy_", "mask[].narrow().fill_", "len", "x.size", "len", "len", "data[].size", "[].copy", "x.size", "out[].narrow", "mask[].narrow", "out[].narrow", "mask[].narrow", "data[].numpy"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dict.Dict.size"], ["", "def", "_batchify", "(", "self", ",", "data", ",", "max_length", "=", "None", ",", "include_lengths", "=", "False", ",", "reverse", "=", "False", ")", ":", "\n", "        ", "if", "max_length", "is", "None", ":", "\n", "            ", "lengths", "=", "[", "x", ".", "size", "(", "0", ")", "if", "len", "(", "x", ".", "size", "(", ")", ")", "else", "0", "for", "x", "in", "data", "]", "\n", "max_length", "=", "max", "(", "lengths", ")", "\n", "", "out_lengths", "=", "[", "]", "\n", "out", "=", "data", "[", "0", "]", ".", "new", "(", "len", "(", "data", ")", ",", "max_length", ")", ".", "fill_", "(", "figet", ".", "Constants", ".", "PAD", ")", "\n", "mask", "=", "torch", ".", "ByteTensor", "(", "len", "(", "data", ")", ",", "max_length", ")", ".", "fill_", "(", "1", ")", "\n", "for", "i", "in", "xrange", "(", "len", "(", "data", ")", ")", ":", "\n", "            ", "if", "len", "(", "data", "[", "i", "]", ".", "size", "(", ")", ")", "==", "0", ":", "\n", "                ", "out_lengths", ".", "append", "(", "1", ")", "\n", "continue", "\n", "", "data_length", "=", "data", "[", "i", "]", ".", "size", "(", "0", ")", "\n", "out_lengths", ".", "append", "(", "data_length", ")", "\n", "offset", "=", "0", "\n", "if", "reverse", ":", "\n", "                ", "reversed_data", "=", "torch", ".", "from_numpy", "(", "data", "[", "i", "]", ".", "numpy", "(", ")", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ")", "\n", "out", "[", "i", "]", ".", "narrow", "(", "0", ",", "max_length", "-", "data_length", ",", "data_length", ")", ".", "copy_", "(", "reversed_data", ")", "\n", "mask", "[", "i", "]", ".", "narrow", "(", "0", ",", "max_length", "-", "data_length", ",", "data_length", ")", ".", "fill_", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "out", "[", "i", "]", ".", "narrow", "(", "0", ",", "offset", ",", "data_length", ")", ".", "copy_", "(", "data", "[", "i", "]", ")", "\n", "mask", "[", "i", "]", ".", "narrow", "(", "0", ",", "offset", ",", "data_length", ")", ".", "fill_", "(", "0", ")", "\n", "", "", "out", "=", "out", ".", "contiguous", "(", ")", "\n", "mask", "=", "mask", ".", "contiguous", "(", ")", "\n", "if", "len", "(", "self", ".", "args", ".", "gpus", ")", ">", "0", ":", "\n", "            ", "out", "=", "out", ".", "cuda", "(", ")", "\n", "mask", "=", "mask", ".", "cuda", "(", ")", "\n", "", "out", "=", "Variable", "(", "out", ",", "volatile", "=", "self", ".", "volatile", ")", "\n", "if", "include_lengths", ":", "\n", "            ", "return", "out", ",", "out_lengths", ",", "mask", "\n", "", "else", ":", "\n", "            ", "return", "out", ",", "None", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify_paragraph": [[61, 67], ["torch.stack().float().contiguous", "torch.autograd.Variable", "len", "data.cuda.cuda.cuda", "torch.stack().float", "torch.stack"], "methods", ["None"], ["", "", "def", "_batchify_paragraph", "(", "self", ",", "data", ")", ":", "\n", "        ", "data", "=", "torch", ".", "stack", "(", "data", ")", ".", "float", "(", ")", ".", "contiguous", "(", ")", "\n", "if", "len", "(", "self", ".", "args", ".", "gpus", ")", ">", "0", ":", "\n", "            ", "data", "=", "data", ".", "cuda", "(", ")", "\n", "", "data", "=", "Variable", "(", "data", ",", "volatile", "=", "self", ".", "volatile", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._sort": [[68, 77], ["torch.LongTensor", "torch.sort", "lengths.numpy.numpy.numpy", "torch.sort", "len", "indices.cuda.cuda.cuda"], "methods", ["None"], ["", "def", "_sort", "(", "self", ",", "batch_data", ",", "lengths", ")", ":", "\n", "        ", "lengths", "=", "torch", ".", "LongTensor", "(", "lengths", ")", "\n", "lengths", ",", "indices", "=", "torch", ".", "sort", "(", "lengths", ",", "dim", "=", "0", ",", "descending", "=", "True", ")", "\n", "lengths", "=", "lengths", ".", "numpy", "(", ")", "\n", "if", "len", "(", "self", ".", "args", ".", "gpus", ")", ">", "0", ":", "\n", "            ", "indices", "=", "indices", ".", "cuda", "(", ")", "\n", "", "batch_data", "=", "batch_data", "[", "indices", ",", ":", "]", "\n", "_", ",", "indices", "=", "torch", ".", "sort", "(", "indices", ",", "dim", "=", "0", ")", "\n", "return", "batch_data", ",", "lengths", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset.__getitem__": [[78, 130], ["int", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify", "Dataset.Dataset._batchify_doc"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify", "home.repos.pwc.inspect_result.sheng-z_figet.figet.Dataset.Dataset._batchify"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index", "=", "int", "(", "index", "%", "self", ".", "num_batches", ")", "\n", "assert", "index", "<", "self", ".", "num_batches", ",", "\"batch_idx %d > %d\"", "%", "(", "index", ",", "self", ".", "num_batches", ")", "\n", "batch_data", "=", "self", ".", "data", "[", "index", "*", "self", ".", "batch_size", ":", "(", "index", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "\n", "# mention", "\n", "mention_batch", "=", "self", ".", "_batchify", "(", "[", "d", ".", "mention", "for", "d", "in", "batch_data", "]", ")", "\n", "\n", "# context", "\n", "if", "self", ".", "args", ".", "single_context", "==", "1", ":", "\n", "            ", "context_batch", ",", "context_length", ",", "mask", "=", "self", ".", "_batchify", "(", "\n", "[", "d", ".", "context", "for", "d", "in", "batch_data", "]", ",", "include_lengths", "=", "True", ")", "\n", "# context_batch = self._sort(context_batch, context_length)", "\n", "", "else", ":", "\n", "            ", "prev_context_batch", ",", "prev_context_length", ",", "prev_mask", "=", "self", ".", "_batchify", "(", "\n", "[", "d", ".", "prev_context", "for", "d", "in", "batch_data", "]", ",", "\n", "self", ".", "args", ".", "context_length", ",", "include_lengths", "=", "True", ")", "\n", "next_context_batch", ",", "next_context_length", ",", "next_mask", "=", "self", ".", "_batchify", "(", "\n", "[", "d", ".", "next_context", "for", "d", "in", "batch_data", "]", ",", "\n", "self", ".", "args", ".", "context_length", ",", "include_lengths", "=", "True", ",", "reverse", "=", "True", ")", "\n", "# prev_context_batch = self._sort(prev_context_batch, prev_context_length)", "\n", "# next_context_batch = self._sort(next_context_batch, next_context_length)", "\n", "\n", "# document", "\n", "", "doc_batch", "=", "None", "\n", "if", "self", ".", "args", ".", "use_doc", "==", "1", ":", "\n", "            ", "doc_batch", "=", "self", ".", "_batchify_doc", "(", "[", "d", ".", "doc_vec", "for", "d", "in", "batch_data", "]", ")", "\n", "\n", "# feature", "\n", "", "feature_batch", "=", "self", ".", "_batchify", "(", "[", "d", ".", "features", "for", "d", "in", "batch_data", "]", ")", "\n", "\n", "# type", "\n", "type_batch", "=", "self", ".", "_batchify", "(", "[", "d", ".", "types", "for", "d", "in", "batch_data", "]", ")", "\n", "\n", "\n", "if", "self", ".", "args", ".", "single_context", "==", "1", ":", "\n", "            ", "return", "(", "\n", "mention_batch", "[", "0", "]", ",", "\n", "(", "context_batch", ",", "mask", ")", ",", "\n", "(", "None", ",", "None", ")", ",", "\n", "type_batch", "[", "0", "]", ",", "feature_batch", "[", "0", "]", ",", "\n", "doc_batch", ",", "\n", "batch_data", "\n", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "\n", "mention_batch", "[", "0", "]", ",", "\n", "(", "prev_context_batch", ",", "prev_mask", ")", ",", "\n", "(", "next_context_batch", ",", "next_mask", ")", ",", "\n", "type_batch", "[", "0", "]", ",", "feature_batch", "[", "0", "]", ",", "\n", "doc_batch", ",", "\n", "batch_data", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.set_seed": [[11, 18], ["torch.manual_seed", "torch.cuda.is_available", "random.seed", "numpy.random.seed", "torch.cuda.manual_seed"], "function", ["None"], ["def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "\"\"\"Sets random seed everywhere.\"\"\"", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.get_logging": [[19, 29], ["logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler"], "function", ["None"], ["", "def", "get_logging", "(", "level", "=", "logging", ".", "INFO", ")", ":", "\n", "    ", "log", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "if", "log", ".", "handlers", ":", "\n", "        ", "return", "log", "\n", "", "log", ".", "setLevel", "(", "level", ")", "\n", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "fmt", "=", "'%(asctime)s %(message)s'", ",", "datefmt", "=", "'%m/%d/%Y %I:%M:%S'", ")", "\n", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "log", ".", "addHandler", "(", "ch", ")", "\n", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.wc": [[30, 36], ["sum", "type", "type", "sum", "open"], "function", ["None"], ["", "def", "wc", "(", "files", ")", ":", "\n", "    ", "if", "type", "(", "files", ")", "is", "list", "or", "type", "(", "files", ")", "is", "tuple", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "files", "=", "[", "files", "]", "\n", "", "return", "sum", "(", "[", "sum", "(", "[", "1", "for", "_", "in", "open", "(", "file", ")", "]", ")", "for", "file", "in", "files", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.__init__": [[14, 20], ["figet.utils.get_logging", "gensim.models.doc2vec.Doc2Vec"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.figet.utils.get_logging"], ["    ", "def", "__init__", "(", "self", ",", "train_data", "=", "None", ",", "test_data", "=", "None", ",", "save_path", "=", "\"doc2vec.pt\"", ",", "log", "=", "utils", ".", "get_logging", "(", ")", ")", ":", "\n", "        ", "self", ".", "model", "=", "gensim", ".", "models", ".", "doc2vec", ".", "Doc2Vec", "(", "size", "=", "50", ",", "min_count", "=", "2", ",", "iter", "=", "55", ")", "\n", "self", ".", "train_data", "=", "train_data", "\n", "self", ".", "test_data", "=", "test_data", "\n", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "log", "=", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.train": [[21, 30], ["doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.read_corpus", "doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.model.build_vocab", "doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.model.train", "doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.model.save"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.read_corpus", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.train"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", ".", "info", "(", "\"Loading the training data from %s.\"", "%", "self", ".", "train_data", ")", "\n", "train_corpus", "=", "self", ".", "read_corpus", "(", "self", ".", "train_data", ")", "\n", "self", ".", "log", ".", "info", "(", "\"Building vocab.\"", ")", "\n", "self", ".", "model", ".", "build_vocab", "(", "train_corpus", ")", "\n", "self", ".", "log", ".", "info", "(", "\"Start training.\"", ")", "\n", "self", ".", "model", ".", "train", "(", "train_corpus", ",", "total_examples", "=", "self", ".", "model", ".", "corpus_count", ",", "epochs", "=", "self", ".", "model", ".", "iter", ")", "\n", "self", ".", "log", ".", "info", "(", "\"Saving the model to %s.\"", "%", "self", ".", "save_path", ")", "\n", "self", ".", "model", ".", "save", "(", "self", ".", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.test": [[31, 44], ["list", "list", "random.randint", "doc2vec.Doc2Vec.model.infer_vector", "doc2vec.Doc2Vec.model.docvecs.most_similar", "doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.log.info", "doc2vec.Doc2Vec.read_corpus", "doc2vec.Doc2Vec.read_test_corpus", "len", "doc2vec.Doc2Vec.log.info", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.read_corpus", "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.read_test_corpus"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "train_corpus", "=", "list", "(", "self", ".", "read_corpus", "(", "self", ".", "train_data", ")", ")", "\n", "test_corpus", "=", "list", "(", "self", ".", "read_test_corpus", "(", "self", ".", "test_data", ")", ")", "\n", "doc_id", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "test_corpus", ")", ")", "\n", "inferred_vector", "=", "self", ".", "model", ".", "infer_vector", "(", "test_corpus", "[", "doc_id", "]", ")", "\n", "sims", "=", "self", ".", "model", ".", "docvecs", ".", "most_similar", "(", "[", "inferred_vector", "]", ",", "topn", "=", "len", "(", "self", ".", "model", ".", "docvecs", ")", ")", "\n", "\n", "# Compare and print the most/median/least similar documents from the train corpus", "\n", "self", ".", "log", ".", "info", "(", "'Test Document ({}): \u00ab{}\u00bb\\n'", ".", "format", "(", "doc_id", ",", "' '", ".", "join", "(", "test_corpus", "[", "doc_id", "]", ")", ")", ")", "\n", "self", ".", "log", ".", "info", "(", "u'SIMILAR/DISSIMILAR DOCS PER MODEL %s:\\n'", "%", "self", ".", "model", ")", "\n", "for", "label", ",", "index", "in", "[", "(", "'MOST'", ",", "0", ")", ",", "(", "'MEDIAN'", ",", "len", "(", "sims", ")", "//", "2", ")", ",", "(", "'LEAST'", ",", "len", "(", "sims", ")", "-", "1", ")", "]", ":", "\n", "            ", "self", ".", "log", ".", "info", "(", "u'%s %s: \u00ab%s\u00bb\\n'", "%", "(", "\n", "label", ",", "sims", "[", "index", "]", ",", "' '", ".", "join", "(", "train_corpus", "[", "sims", "[", "index", "]", "[", "0", "]", "]", ".", "words", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.transform": [[45, 47], ["doc2vec.Doc2Vec.model.infer_vector", "gensim.utils.simple_preprocess"], "methods", ["None"], ["", "", "def", "transform", "(", "self", ",", "doc", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "infer_vector", "(", "gensim", ".", "utils", ".", "simple_preprocess", "(", "doc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load": [[48, 51], ["doc2vec.Doc2Vec.log.info", "gensim.models.doc2vec.Doc2Vec.load"], "methods", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.load"], ["", "def", "load", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", ".", "info", "(", "\"Loading the pretrained model from %s.\"", "%", "self", ".", "save_path", ")", "\n", "self", ".", "model", "=", "gensim", ".", "models", ".", "doc2vec", ".", "Doc2Vec", ".", "load", "(", "self", ".", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.read_corpus": [[52, 60], ["open", "enumerate", "line.replace.replace.strip", "line.replace.replace.replace", "gensim.models.doc2vec.TaggedDocument", "gensim.utils.simple_preprocess"], "methods", ["None"], ["", "def", "read_corpus", "(", "self", ",", "fname", ")", ":", "\n", "        ", "with", "open", "(", "fname", ")", "as", "f", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "f", ")", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "line", "==", "\"\"", ":", "\n", "                    ", "continue", "\n", "", "line", "=", "line", ".", "replace", "(", "\"\\\\n\"", ",", "\" \"", ")", "\n", "yield", "gensim", ".", "models", ".", "doc2vec", ".", "TaggedDocument", "(", "gensim", ".", "utils", ".", "simple_preprocess", "(", "line", ")", ",", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.read_test_corpus": [[61, 69], ["open", "enumerate", "f.read().strip().split", "line.replace.replace.strip", "line.replace.replace.replace", "gensim.utils.simple_preprocess", "f.read().strip", "f.read"], "methods", ["None"], ["", "", "", "def", "read_test_corpus", "(", "self", ",", "fname", ")", ":", "\n", "        ", "with", "open", "(", "fname", ")", "as", "f", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "f", ".", "read", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "'\\n\\n'", ")", ")", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "line", "==", "\"\"", ":", "\n", "                    ", "continue", "\n", "", "line", "=", "line", ".", "replace", "(", "\"\\\\n\"", ",", "\" \"", ")", "\n", "yield", "gensim", ".", "utils", ".", "simple_preprocess", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.main": [[71, 74], ["doc2vec.Doc2Vec", "doc2vec.Doc2Vec.train"], "function", ["home.repos.pwc.inspect_result.sheng-z_figet.context_modules.doc2vec.Doc2Vec.train"], ["", "", "", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "m", "=", "Doc2Vec", "(", "args", ".", "corpus", ",", "args", ".", "test", ",", "args", ".", "model", ")", "\n", "m", ".", "train", "(", ")", "\n", "\n"]]}