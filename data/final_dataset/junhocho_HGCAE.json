{"home.repos.pwc.inspect_result.junhocho_HGCAE.None.train_solver.train": [[23, 71], ["numpy.random.seed", "logging.getLogger().setLevel", "pprint.pformat", "logging.info", "logging.info", "time.time", "utils.data_utils.load_data", "numpy.random.get_state", "logging.info", "logging.info", "solver.Solver", "solver.Solver.fit", "solver.Solver.eval", "logging.basicConfig", "logging.info", "vars", "os.path.join", "time.time", "logging.getLogger", "datetime.datetime.now", "os.path.join", "utils.train_utils.get_dir_name", "logging.FileHandler", "logging.StreamHandler", "os.path.join"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_data", "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.fit", "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.eval", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.get_dir_name"], ["def", "train", "(", "args", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "if", "args", ".", "save", ":", "\n", "        ", "if", "not", "args", ".", "save_dir", ":", "\n", "            ", "dt", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "date", "=", "f\"{dt.year}_{dt.month}_{dt.day}\"", "\n", "if", "args", ".", "node_cluster", "==", "1", ":", "\n", "                ", "task", "=", "'nc'", "\n", "", "else", ":", "\n", "                ", "task", "=", "'lp'", "\n", "", "models_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'LOG_DIR'", "]", ",", "task", ",", "date", ")", "\n", "save_dir", "=", "get_dir_name", "(", "models_dir", ")", "\n", "", "else", ":", "\n", "            ", "save_dir", "=", "args", ".", "save_dir", "\n", "", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "\n", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'log.txt'", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "\n", "]", ")", "\n", "logging", ".", "info", "(", "f\"Logging model in {save_dir}\"", ")", "\n", "args", ".", "save_dir", "=", "save_dir", "\n", "\n", "", "if", "args", ".", "node_cluster", "==", "1", ":", "\n", "### NOTE : node clustering use full edge", "\n", "        ", "args", ".", "val_prop", "=", "0.0", "\n", "args", ".", "test_prop", "=", "0.0", "\n", "\n", "", "import", "pprint", "\n", "args_info_pprint", "=", "pprint", ".", "pformat", "(", "vars", "(", "args", ")", ")", "\n", "\n", "logging", ".", "info", "(", "args_info_pprint", ")", "\n", "\n", "# Load data", "\n", "logging", ".", "info", "(", "\"Loading Data : {}\"", ".", "format", "(", "args", ".", "dataset", ")", ")", "\n", "t_load", "=", "time", ".", "time", "(", ")", "\n", "data", "=", "load_data", "(", "args", ",", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'DATAPATH'", "]", ",", "args", ".", "dataset", ")", ")", "\n", "st0", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "args", ".", "np_seed", "=", "st0", "\n", "\n", "t_load", "=", "time", ".", "time", "(", ")", "-", "t_load", "\n", "logging", ".", "info", "(", "data", "[", "'info'", "]", ")", "\n", "logging", ".", "info", "(", "'Loading data took time: {:.4f}s'", ".", "format", "(", "t_load", ")", ")", "\n", "\n", "sol", "=", "Solver", "(", "args", ",", "data", ")", "\n", "sol", ".", "fit", "(", ")", "\n", "sol", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.__init__": [[17, 79], ["numpy.random.set_state", "torch.manual_seed", "int", "logging.info", "logging.info", "logging.info", "len", "len", "Model", "logging.info", "torch.optim.lr_scheduler.StepLR", "sum", "logging.info", "data.items", "time.time", "model.to.to.init_metric_dict", "torch.set_default_dtype", "int", "torch.cuda.manual_seed", "int", "str", "getattr", "str", "model.to.to.to", "data.items", "int", "str", "model.to.to.parameters", "int", "float", "numpy.prod", "utils.data_utils.sparse_mx_to_torch_sparse_tensor", "int", "torch.is_tensor", "p.size", "model.to.to.parameters", "data[].to"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.init_metric_dict", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.sparse_mx_to_torch_sparse_tensor"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "data", ")", ":", "\n", "        ", "np", ".", "random", ".", "set_state", "(", "args", ".", "np_seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "if", "int", "(", "args", ".", "double_precision", ")", ":", "\n", "            ", "torch", ".", "set_default_dtype", "(", "torch", ".", "float64", ")", "\n", "", "if", "int", "(", "args", ".", "cuda", ")", ">=", "0", ":", "\n", "            ", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "", "args", ".", "device", "=", "'cuda:'", "+", "str", "(", "args", ".", "cuda", ")", "if", "int", "(", "args", ".", "cuda", ")", ">=", "0", "else", "'cpu'", "\n", "args", ".", "patience", "=", "args", ".", "epochs", "if", "not", "args", ".", "patience", "else", "int", "(", "args", ".", "patience", ")", "\n", "logging", ".", "info", "(", "f'Using: {args.device}'", ")", "\n", "logging", ".", "info", "(", "\"Using seed {}.\"", ".", "format", "(", "args", ".", "seed", ")", ")", "\n", "\n", "args", ".", "n_nodes", ",", "args", ".", "feat_dim", "=", "data", "[", "'features'", "]", ".", "shape", "\n", "logging", ".", "info", "(", "f'Num classes: {args.n_classes}'", ")", "\n", "args", ".", "nb_false_edges", "=", "len", "(", "data", "[", "'train_edges_false'", "]", ")", "\n", "args", ".", "nb_edges", "=", "len", "(", "data", "[", "'train_edges'", "]", ")", "\n", "Model", "=", "LPModel", "\n", "\n", "if", "not", "args", ".", "lr_reduce_freq", ":", "\n", "            ", "args", ".", "lr_reduce_freq", "=", "args", ".", "epochs", "\n", "\n", "# Model and optimizer", "\n", "", "model", "=", "Model", "(", "args", ")", "\n", "logging", ".", "info", "(", "str", "(", "model", ")", ")", "\n", "optimizer", "=", "getattr", "(", "optimizers", ",", "args", ".", "optimizer", ")", "(", "params", "=", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "\n", "optimizer", ",", "\n", "step_size", "=", "int", "(", "args", ".", "lr_reduce_freq", ")", ",", "\n", "gamma", "=", "float", "(", "args", ".", "gamma", ")", "\n", ")", "\n", "tot_params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "logging", ".", "info", "(", "f\"Total number of parameters: {tot_params}\"", ")", "\n", "for", "x", ",", "val", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "if", "'adj'", "in", "x", ":", "\n", "                ", "data", "[", "x", "]", "=", "sparse_mx_to_torch_sparse_tensor", "(", "data", "[", "x", "]", ")", "\n", "", "", "if", "args", ".", "cuda", "is", "not", "None", "and", "int", "(", "args", ".", "cuda", ")", ">=", "0", ":", "\n", "            ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "args", ".", "cuda", ")", "\n", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "x", ",", "val", "in", "data", ".", "items", "(", ")", ":", "\n", "                ", "if", "torch", ".", "is_tensor", "(", "data", "[", "x", "]", ")", ":", "\n", "                    ", "data", "[", "x", "]", "=", "data", "[", "x", "]", ".", "to", "(", "args", ".", "device", ")", "\n", "# Train model", "\n", "", "", "", "t_total", "=", "time", ".", "time", "(", ")", "\n", "counter", "=", "0", "\n", "best_val_metrics", "=", "model", ".", "init_metric_dict", "(", ")", "\n", "best_test_metrics", "=", "{", "}", "\n", "best_emb", "=", "None", "\n", "\n", "self", ".", "adj_train_enc", "=", "data", "[", "'adj_train_enc'", "]", "\n", "\n", "self", ".", "t_total", "=", "t_total", "\n", "self", ".", "counter", "=", "counter", "\n", "self", ".", "best_val_metrics", "=", "best_val_metrics", "\n", "self", ".", "best_test_metrics", "=", "best_test_metrics", "\n", "self", ".", "best_emb", "=", "best_emb", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "lr_scheduler", "=", "lr_scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.fit": [[81, 155], ["range", "logging.info", "logging.info", "time.time", "model.train", "optimizer.zero_grad", "model.encode", "model.compute_metrics", "train_metrics[].backward", "optimizer.step", "lr_scheduler.step", "float", "list", "torch.no_grad", "model.parameters", "torch.nn.utils.clip_grad_norm_", "logging.info", "model.eval", "model.encode", "time.time", "model.compute_metrics", "model.has_improved", "logging.info", "model.compute_metrics", "solver.Solver.best_test_metrics.get", "logging.info", "utils.train_utils.format_metrics", "numpy.save", "logging.info", "logging.info", "os.path.join", "solver.Solver.best_emb.cpu().detach().numpy", "lr_scheduler.get_lr", "time.time", "utils.train_utils.format_metrics", "solver.Solver.best_emb.cpu().detach", "solver.Solver.best_emb.cpu"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.None.train_solver.train", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.SpecialSpmmFunction.backward", "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.step", "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.eval", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.has_improved", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.format_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.format_metrics"], ["", "def", "fit", "(", "self", ")", ":", "\n", "        ", "args", "=", "self", ".", "args", "\n", "model", "=", "self", ".", "model", "\n", "optimizer", "=", "self", ".", "optimizer", "\n", "data", "=", "self", ".", "data", "\n", "lr_scheduler", "=", "self", ".", "lr_scheduler", "\n", "save_dir", "=", "self", ".", "args", ".", "save_dir", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "            ", "t", "=", "time", ".", "time", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "embeddings", "=", "model", ".", "encode", "(", "data", "[", "'features'", "]", ",", "self", ".", "adj_train_enc", ")", "\n", "train_metrics", "=", "model", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'train'", ",", "epoch", ")", "\n", "train_metrics", "[", "'loss'", "]", ".", "backward", "(", ")", "\n", "if", "args", ".", "grad_clip", "is", "not", "None", ":", "\n", "                ", "max_norm", "=", "float", "(", "args", ".", "grad_clip", ")", "\n", "all_params", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "\n", "for", "param", "in", "all_params", ":", "\n", "                    ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "param", ",", "max_norm", ")", "\n", "", "", "optimizer", ".", "step", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "log_freq", "==", "0", ":", "\n", "                    ", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'lr: {}'", ".", "format", "(", "lr_scheduler", ".", "get_lr", "(", ")", "[", "0", "]", ")", ",", "\n", "format_metrics", "(", "train_metrics", ",", "'train'", ")", ",", "\n", "'time: {:.4f}s'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "]", ")", ")", "\n", "", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", ":", "\n", "                    ", "model", ".", "eval", "(", ")", "\n", "embeddings", "=", "model", ".", "encode", "(", "data", "[", "'features'", "]", ",", "self", ".", "adj_train_enc", ")", "\n", "if", "args", ".", "node_cluster", "!=", "1", ":", "\n", "## Link Prediction Task that use train/val/test", "\n", "                        ", "val_metrics", "=", "model", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'val'", ")", "\n", "if", "(", "epoch", "+", "1", ")", "%", "args", ".", "log_freq", "==", "0", ":", "\n", "                            ", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "format_metrics", "(", "val_metrics", ",", "'val'", ")", "]", ")", ")", "\n", "", "if", "model", ".", "has_improved", "(", "self", ".", "best_val_metrics", ",", "val_metrics", ")", ":", "\n", "                            ", "self", ".", "best_test_metrics", "=", "model", ".", "compute_metrics", "(", "embeddings", ",", "data", ",", "'test'", ")", "\n", "self", ".", "best_emb", "=", "embeddings", "\n", "if", "args", ".", "save", ":", "\n", "                                ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'embeddings.npy'", ")", ",", "self", ".", "best_emb", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "self", ".", "best_val_metrics", "=", "val_metrics", "\n", "self", ".", "best_val_metrics", "[", "'epoch'", "]", "=", "epoch", "+", "1", "\n", "self", ".", "counter", "=", "0", "\n", "# logging.info(\"improved\")", "\n", "", "else", ":", "\n", "# logging.info(\"not improved :\"+str(self.counter))", "\n", "                            ", "self", ".", "counter", "+=", "1", "\n", "if", "self", ".", "counter", ">=", "args", ".", "patience", "and", "epoch", ">", "args", ".", "min_epochs", ":", "# NOTE : fixed when improve only epoch0", "\n", "                                ", "logging", ".", "info", "(", "\"Early stopping\"", ")", "\n", "break", "\n", "", "", "", "else", ":", "\n", "## Node Clustering Task that use 100 % trainset.", "\n", "                        ", "if", "self", ".", "best_test_metrics", ".", "get", "(", "'loss'", ",", "999", ")", ">", "train_metrics", "[", "'loss'", "]", ":", "\n", "                            ", "'''\n                            # NOTE : when kmeans calculated, affect np.state and takes time, and not fair to monitor it.\n                            # metrics_clustering = model.eval_cluster(embeddings, data, 'all')\n                            # logging.info(\" \".join([\"Cluster results:\", format_metrics(metrics_clustering, 'all')]))\n                            '''", "\n", "self", ".", "best_emb", "=", "embeddings", "\n", "logging", ".", "info", "(", "\"Best loss found\"", ")", "\n", "self", ".", "best_test_metrics", "[", "'loss'", "]", "=", "train_metrics", "[", "'loss'", "]", "\n", "self", ".", "best_test_metrics", "[", "'epoch'", "]", "=", "epoch", "+", "1", "\n", "self", ".", "counter", "=", "0", "\n", "", "else", ":", "\n", "                            ", "self", ".", "counter", "+=", "1", "\n", "if", "self", ".", "counter", ">=", "args", ".", "patience", "and", "epoch", ">", "args", ".", "min_epochs", ":", "# NOTE : fixed when improve only epoch0", "\n", "                                ", "logging", ".", "info", "(", "\"Early stopping\"", ")", "\n", "break", "\n", "\n", "\n", "", "", "", "", "", "", "logging", ".", "info", "(", "\"Optimization Finished!\"", ")", "\n", "logging", ".", "info", "(", "\"Total time elapsed: {:.4f}s\"", ".", "format", "(", "time", ".", "time", "(", ")", "-", "self", ".", "t_total", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.eval": [[156, 192], ["logging.info", "logging.info", "model.eval", "model.encode", "model.compute_metrics", "model.eval_cluster", "solver.Solver.best_test_metrics.update", "model.eval_cluster", "solver.Solver.best_test_metrics.update", "numpy.save", "hasattr", "json.dump", "torch.save", "logging.info", "os.path.join", "solver.Solver.best_emb.cpu().detach().numpy", "os.path.join", "pickle.dump", "print", "vars", "open", "model.state_dict", "os.path.join", "utils.train_utils.format_metrics", "utils.train_utils.format_metrics", "model.encoder.att_adj.cpu().to_dense", "open", "os.path.join", "solver.Solver.best_emb.cpu().detach", "model.encoder.att_adj.cpu", "solver.Solver.best_emb.cpu"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.eval", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.compute_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.eval_cluster", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.eval_cluster", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.format_metrics", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.format_metrics"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "model", "=", "self", ".", "model", "\n", "data", "=", "self", ".", "data", "\n", "args", "=", "self", ".", "args", "\n", "save_dir", "=", "self", ".", "args", ".", "save_dir", "\n", "args", ".", "np_seed", "=", "None", "\n", "\n", "\n", "if", "not", "self", ".", "best_test_metrics", "and", "args", ".", "test_prop", ">", "0", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "self", ".", "best_emb", "=", "model", ".", "encode", "(", "data", "[", "'features'", "]", ",", "self", ".", "adj_train_enc", ")", "\n", "self", ".", "best_test_metrics", "=", "model", ".", "compute_metrics", "(", "self", ".", "best_emb", ",", "data", ",", "'test'", ")", "\n", "\n", "## CLUSTERING EVAL START", "\n", "", "if", "args", ".", "node_cluster", "==", "1", ":", "\n", "            ", "metrics_clustering", ",", "pred_label", "=", "model", ".", "eval_cluster", "(", "self", ".", "best_emb", ",", "data", ",", "'all'", ")", "\n", "self", ".", "best_test_metrics", ".", "update", "(", "metrics_clustering", ")", "\n", "self", ".", "best_val_metrics", "=", "self", ".", "best_test_metrics", "\n", "", "else", ":", "\n", "            ", "metrics_clustering", ",", "pred_label", "=", "model", ".", "eval_cluster", "(", "self", ".", "best_emb", ",", "data", ",", "'all'", ")", "\n", "self", ".", "best_test_metrics", ".", "update", "(", "metrics_clustering", ")", "\n", "## CLUSTERING EVAL END", "\n", "", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "\"Val set results:\"", ",", "format_metrics", "(", "self", ".", "best_val_metrics", ",", "'val'", ")", "]", ")", ")", "\n", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "[", "\"Test set results:\"", ",", "format_metrics", "(", "self", ".", "best_test_metrics", ",", "'test'", ")", "]", ")", ")", "\n", "if", "args", ".", "save", ":", "\n", "            ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'embeddings.npy'", ")", ",", "self", ".", "best_emb", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "if", "hasattr", "(", "model", ".", "encoder", ",", "'att_adj'", ")", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "args", ".", "dataset", "+", "'_att_adj.p'", ")", "\n", "pickle", ".", "dump", "(", "model", ".", "encoder", ".", "att_adj", ".", "cpu", "(", ")", ".", "to_dense", "(", ")", ",", "open", "(", "filename", ",", "'wb'", ")", ")", "\n", "print", "(", "'Dumped attention adj: '", "+", "filename", ")", "\n", "\n", "", "json", ".", "dump", "(", "vars", "(", "args", ")", ",", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'config.json'", ")", ",", "'w'", ")", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'model.pth'", ")", ")", "\n", "logging", ".", "info", "(", "f\"Saved model in {save_dir}\"", ")", "\n", "\n", "", "return", "self", ".", "best_emb", ",", "pred_label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_data": [[14, 97], ["data_utils.load_data_lp", "os.path.join", "data_utils.process", "data_utils.get_adj_2hop", "data_utils.symmetric_laplacian_smoothing", "set", "label_convert_table.items", "int", "range", "os.path.isdir", "logging.info", "os.makedirs", "data_utils.mask_edges", "torch.save", "torch.save", "scipy.sparse.save_npz", "numpy.random.get_state", "numpy.save", "logging.info", "scipy.sparse.load_npz", "torch.load", "torch.load", "numpy.load", "numpy.random.set_state", "data_utils.rowwise_normalizing", "list", "data[].sum", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "data[].numpy", "list", "range", "data[].max", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "len"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_data_lp", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.process", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.get_adj_2hop", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.symmetric_laplacian_smoothing", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.mask_edges", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.rowwise_normalizing"], ["def", "load_data", "(", "args", ",", "datapath", ")", ":", "\n", "## Load data", "\n", "    ", "data", "=", "load_data_lp", "(", "args", ".", "dataset", ",", "args", ".", "use_feats", ",", "datapath", ")", "\n", "adj", "=", "data", "[", "'adj_train'", "]", "\n", "\n", "## TAKES a lot of time", "\n", "\n", "if", "args", ".", "node_cluster", "==", "1", ":", "\n", "        ", "task", "=", "'nc'", "\n", "", "else", ":", "\n", "        ", "task", "=", "'lp'", "\n", "", "cached_dir", "=", "os", ".", "path", ".", "join", "(", "'/root/tmp'", ",", "task", ",", "args", ".", "dataset", ",", "\n", "f\"seed{args.split_seed}-val{args.val_prop}-test{args.test_prop}\"", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "cached_dir", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f\"Caching at `{cached_dir}`randomly masked edges\"", ")", "\n", "os", ".", "makedirs", "(", "cached_dir", ",", "exist_ok", "=", "True", ")", "\n", "adj_train", ",", "train_edges", ",", "train_edges_false", ",", "val_edges", ",", "val_edges_false", ",", "test_edges", ",", "test_edges_false", "=", "mask_edges", "(", "\n", "adj", ",", "args", ".", "val_prop", ",", "args", ".", "test_prop", ",", "args", ".", "split_seed", "\n", ")", "\n", "if", "args", ".", "val_prop", "+", "args", ".", "test_prop", ">", "0", ":", "\n", "            ", "torch", ".", "save", "(", "val_edges", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'val_edges.pth'", ")", ")", "\n", "torch", ".", "save", "(", "val_edges_false", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'val_edges_false.pth'", ")", ")", "\n", "torch", ".", "save", "(", "test_edges", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'test_edges.pth'", ")", ")", "\n", "torch", ".", "save", "(", "test_edges_false", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'test_edges_false.pth'", ")", ")", "\n", "\n", "", "torch", ".", "save", "(", "train_edges", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'train_edges.pth'", ")", ")", "\n", "torch", ".", "save", "(", "train_edges_false", ",", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'train_edges_false.pth'", ")", ")", "\n", "sparse", ".", "save_npz", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "\"adj_train.npz\"", ")", ",", "adj_train", ")", "\n", "\n", "st0", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'np_state.npy'", ")", ",", "st0", ")", "\n", "\n", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "f\"Loading from `{cached_dir}` randomly masked edges\"", ")", "\n", "if", "args", ".", "val_prop", "+", "args", ".", "test_prop", ">", "0", ":", "\n", "            ", "val_edges", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'val_edges.pth'", ")", ")", "\n", "val_edges_false", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'val_edges_false.pth'", ")", ")", "\n", "test_edges", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'test_edges.pth'", ")", ")", "\n", "test_edges_false", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'test_edges_false.pth'", ")", ")", "\n", "\n", "", "adj_train", "=", "sparse", ".", "load_npz", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "\"adj_train.npz\"", ")", ")", "\n", "train_edges", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'train_edges.pth'", ")", ")", "\n", "train_edges_false", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'train_edges_false.pth'", ")", ")", "\n", "\n", "st0", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "cached_dir", ",", "'np_state.npy'", ")", ")", "\n", "np", ".", "random", ".", "set_state", "(", "st0", ")", "\n", "\n", "## TAKES a lot of time", "\n", "", "data", "[", "'adj_train'", "]", "=", "adj_train", "\n", "data", "[", "'train_edges'", "]", ",", "data", "[", "'train_edges_false'", "]", "=", "train_edges", ",", "train_edges_false", "\n", "if", "args", ".", "val_prop", "+", "args", ".", "test_prop", ">", "0", ":", "\n", "        ", "data", "[", "'val_edges'", "]", ",", "data", "[", "'val_edges_false'", "]", "=", "val_edges", ",", "val_edges_false", "\n", "data", "[", "'test_edges'", "]", ",", "data", "[", "'test_edges_false'", "]", "=", "test_edges", ",", "test_edges_false", "\n", "", "all_info", "=", "\"\"", "\n", "\n", "## Adj matrix", "\n", "adj", "=", "data", "[", "'adj_train'", "]", "\n", "data", "[", "'adj_train_enc'", "]", ",", "data", "[", "'features'", "]", "=", "process", "(", "\n", "data", "[", "'adj_train'", "]", ",", "data", "[", "'features'", "]", ",", "args", ".", "normalize_adj", ",", "args", ".", "normalize_feats", "\n", ")", "\n", "\n", "if", "args", ".", "lambda_rec", ":", "\n", "        ", "data", "[", "'adj_train_dec'", "]", "=", "rowwise_normalizing", "(", "data", "[", "'adj_train'", "]", ")", "\n", "\n", "", "adj_2hop", "=", "get_adj_2hop", "(", "adj", ")", "\n", "data", "[", "'adj_train_enc_2hop'", "]", "=", "symmetric_laplacian_smoothing", "(", "adj_2hop", ")", "\n", "\n", "# NOTE : Re-adjust labels", "\n", "# Some data omit `0` class, thus n_classes are wrong with `max(labels)+1`", "\n", "label_set", "=", "set", "(", "list", "(", "data", "[", "'labels'", "]", ".", "numpy", "(", ")", ")", ")", "\n", "label_convert_table", "=", "{", "list", "(", "label_set", ")", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "label_set", ")", ")", "}", "\n", "for", "label_prev", ",", "label_now", "in", "label_convert_table", ".", "items", "(", ")", ":", "\n", "        ", "data", "[", "'labels'", "]", "[", "data", "[", "'labels'", "]", "==", "label_prev", "]", "=", "label_now", "\n", "", "args", ".", "n_classes", "=", "int", "(", "data", "[", "'labels'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "\n", "data", "[", "'idx_all'", "]", "=", "range", "(", "data", "[", "'features'", "]", ".", "shape", "[", "0", "]", ")", "\n", "data_info", "=", "\"Dataset {} Loaded : dimensions are adj:{}, edges:{}, features:{}, labels:{}\\n\"", ".", "format", "(", "\n", "args", ".", "dataset", ",", "data", "[", "'adj_train'", "]", ".", "shape", ",", "data", "[", "'adj_train'", "]", ".", "sum", "(", ")", ",", "data", "[", "'features'", "]", ".", "shape", ",", "data", "[", "'labels'", "]", ".", "shape", ")", "\n", "data", "[", "'info'", "]", "=", "data_info", "\n", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.process": [[98, 107], ["scipy.isspmatrix", "torch.Tensor", "numpy.array", "data_utils.normalize", "data_utils.normalize", "normalize.todense", "scipy.eye"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.normalize", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.normalize"], ["", "def", "process", "(", "adj", ",", "features", ",", "normalize_adj", ",", "normalize_feats", ")", ":", "\n", "    ", "if", "sp", ".", "isspmatrix", "(", "features", ")", ":", "\n", "        ", "features", "=", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", "\n", "", "if", "normalize_feats", ":", "\n", "        ", "features", "=", "normalize", "(", "features", ")", "\n", "", "features", "=", "torch", ".", "Tensor", "(", "features", ")", "\n", "if", "normalize_adj", ":", "\n", "        ", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "return", "adj", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.get_adj_2hop": [[108, 114], ["data_utils..dot", "numpy.clip", "scipy.eye", "scipy.eye"], "function", ["None"], ["", "def", "get_adj_2hop", "(", "adj", ")", ":", "\n", "    ", "adj_self", "=", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "adj_2hop", "=", "adj_self", ".", "dot", "(", "adj_self", ")", "\n", "adj_2hop", ".", "data", "=", "np", ".", "clip", "(", "adj_2hop", ".", "data", ",", "0", ",", "1", ")", "\n", "adj_2hop", "=", "adj_2hop", "-", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "-", "adj", "\n", "return", "adj_2hop", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.normalize": [[115, 123], ["numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "normalize", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix.\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.symmetric_laplacian_smoothing": [[124, 134], ["scipy.coo_matrix", "numpy.array", "numpy.power().flatten", "scipy.diags", "sp.coo_matrix.dot().transpose().dot().tocoo", "scipy.eye", "sp.coo_matrix.sum", "numpy.power", "numpy.isinf", "sp.coo_matrix.dot().transpose().dot", "sp.coo_matrix.dot().transpose", "sp.coo_matrix.dot"], "function", ["None"], ["", "def", "symmetric_laplacian_smoothing", "(", "adj", ")", ":", "\n", "    ", "\"\"\"Symmetrically normalize adjacency matrix.\"\"\"", "\n", "adj", "=", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "# self-loop", "\n", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "adj", ")", "\n", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "d_inv_sqrt", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv_sqrt", "[", "np", ".", "isinf", "(", "d_inv_sqrt", ")", "]", "=", "0.", "\n", "d_mat_inv_sqrt", "=", "sp", ".", "diags", "(", "d_inv_sqrt", ")", "\n", "return", "adj", ".", "dot", "(", "d_mat_inv_sqrt", ")", ".", "transpose", "(", ")", ".", "dot", "(", "d_mat_inv_sqrt", ")", ".", "tocoo", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.rowwise_normalizing": [[135, 144], ["scipy.coo_matrix", "numpy.array", "numpy.power().flatten", "scipy.diags", "sp.coo_matrix.dot().transpose().tocoo", "scipy.eye", "sp.coo_matrix.sum", "numpy.power", "numpy.isinf", "sp.coo_matrix.dot().transpose", "sp.coo_matrix.dot"], "function", ["None"], ["", "def", "rowwise_normalizing", "(", "adj", ")", ":", "\n", "    ", "\"\"\"Row-wise normalize adjacency matrix.\"\"\"", "\n", "adj", "=", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "# self-loop", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "adj", ")", "\n", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1.0", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "return", "adj", ".", "dot", "(", "d_mat_inv", ")", ".", "transpose", "(", ")", ".", "tocoo", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.sparse_mx_to_torch_sparse_tensor": [[145, 154], ["sparse_mx.tocoo.tocoo", "torch.from_numpy", "torch.Tensor", "torch.Size", "torch.sparse.FloatTensor", "numpy.vstack().astype", "numpy.vstack"], "function", ["None"], ["", "def", "sparse_mx_to_torch_sparse_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "\"\"\"Convert a scipy sparse matrix to a torch sparse tensor.\"\"\"", "\n", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "vstack", "(", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", ")", "\n", "values", "=", "torch", ".", "Tensor", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.mask_edges": [[155, 176], ["numpy.random.seed", "scipy.triu().nonzero", "numpy.array", "numpy.random.shuffle", "scipy.triu().nonzero", "numpy.array", "numpy.random.shuffle", "len", "int", "int", "numpy.concatenate", "scipy.csr_matrix", "list", "list", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "scipy.triu", "zip", "scipy.triu", "zip", "numpy.ones", "scipy.csr_matrix", "adj.toarray"], "function", ["None"], ["", "def", "mask_edges", "(", "adj", ",", "val_prop", ",", "test_prop", ",", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "# get tp edges", "\n", "x", ",", "y", "=", "sp", ".", "triu", "(", "adj", ")", ".", "nonzero", "(", ")", "\n", "pos_edges", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "x", ",", "y", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "pos_edges", ")", "\n", "# get tn edges", "\n", "x", ",", "y", "=", "sp", ".", "triu", "(", "sp", ".", "csr_matrix", "(", "1.", "-", "adj", ".", "toarray", "(", ")", ")", ")", ".", "nonzero", "(", ")", "#  LONG", "\n", "neg_edges", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "x", ",", "y", ")", ")", ")", "#  EVEN LONGER", "\n", "np", ".", "random", ".", "shuffle", "(", "neg_edges", ")", "# ALSO LONG", "\n", "\n", "m_pos", "=", "len", "(", "pos_edges", ")", "\n", "n_val", "=", "int", "(", "m_pos", "*", "val_prop", ")", "\n", "n_test", "=", "int", "(", "m_pos", "*", "test_prop", ")", "\n", "val_edges", ",", "test_edges", ",", "train_edges", "=", "pos_edges", "[", ":", "n_val", "]", ",", "pos_edges", "[", "n_val", ":", "n_test", "+", "n_val", "]", ",", "pos_edges", "[", "n_test", "+", "n_val", ":", "]", "\n", "val_edges_false", ",", "test_edges_false", "=", "neg_edges", "[", ":", "n_val", "]", ",", "neg_edges", "[", "n_val", ":", "n_test", "+", "n_val", "]", "\n", "train_edges_false", "=", "np", ".", "concatenate", "(", "[", "neg_edges", ",", "val_edges", ",", "test_edges", "]", ",", "axis", "=", "0", ")", "\n", "adj_train", "=", "sp", ".", "csr_matrix", "(", "(", "np", ".", "ones", "(", "train_edges", ".", "shape", "[", "0", "]", ")", ",", "(", "train_edges", "[", ":", ",", "0", "]", ",", "train_edges", "[", ":", ",", "1", "]", ")", ")", ",", "shape", "=", "adj", ".", "shape", ")", "\n", "adj_train", "=", "adj_train", "+", "adj_train", ".", "T", "\n", "return", "adj_train", ",", "torch", ".", "LongTensor", "(", "train_edges", ")", ",", "torch", ".", "LongTensor", "(", "train_edges_false", ")", ",", "torch", ".", "LongTensor", "(", "val_edges", ")", ",", "torch", ".", "LongTensor", "(", "val_edges_false", ")", ",", "torch", ".", "LongTensor", "(", "test_edges", ")", ",", "torch", ".", "LongTensor", "(", "\n", "test_edges_false", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.split_data": [[178, 196], ["numpy.random.seed", "numpy.arange", "numpy.random.shuffle", "numpy.random.shuffle", "pos_idx.tolist.tolist", "neg_idx.tolist.tolist", "min", "round", "round", "labels.nonzero", "len", "len"], "function", ["None"], ["", "def", "split_data", "(", "labels", ",", "val_prop", ",", "test_prop", ",", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "nb_nodes", "=", "labels", ".", "shape", "[", "0", "]", "\n", "all_idx", "=", "np", ".", "arange", "(", "nb_nodes", ")", "\n", "pos_idx", "=", "labels", ".", "nonzero", "(", ")", "[", "0", "]", "\n", "neg_idx", "=", "(", "1.", "-", "labels", ")", ".", "nonzero", "(", ")", "[", "0", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "pos_idx", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "neg_idx", ")", "\n", "pos_idx", "=", "pos_idx", ".", "tolist", "(", ")", "\n", "neg_idx", "=", "neg_idx", ".", "tolist", "(", ")", "\n", "nb_pos_neg", "=", "min", "(", "len", "(", "pos_idx", ")", ",", "len", "(", "neg_idx", ")", ")", "\n", "nb_val", "=", "round", "(", "val_prop", "*", "nb_pos_neg", ")", "\n", "nb_test", "=", "round", "(", "test_prop", "*", "nb_pos_neg", ")", "\n", "idx_val_pos", ",", "idx_test_pos", ",", "idx_train_pos", "=", "pos_idx", "[", ":", "nb_val", "]", ",", "pos_idx", "[", "nb_val", ":", "nb_val", "+", "nb_test", "]", ",", "pos_idx", "[", "\n", "nb_val", "+", "nb_test", ":", "]", "\n", "idx_val_neg", ",", "idx_test_neg", ",", "idx_train_neg", "=", "neg_idx", "[", ":", "nb_val", "]", ",", "neg_idx", "[", "nb_val", ":", "nb_val", "+", "nb_test", "]", ",", "neg_idx", "[", "\n", "nb_val", "+", "nb_test", ":", "]", "\n", "return", "idx_val_pos", "+", "idx_val_neg", ",", "idx_test_pos", "+", "idx_test_neg", ",", "idx_train_pos", "+", "idx_train_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_data_lp": [[198, 300], ["torch.LongTensor", "data_utils.load_citation_data", "Planetoid", "tg.utils.to_scipy_sparse_matrix", "scipy.coo_matrix.asformat", "scipy.lil_matrix", "Amazon.data.y.numpy", "Amazon.data.x.numpy", "Amazon", "tg.utils.to_scipy_sparse_matrix", "scipy.coo_matrix.asformat", "scipy.lil_matrix", "Amazon.data.y.numpy", "FileNotFoundError", "Amazon.data.x.numpy", "sio.loadmat", "scipy.lil_matrix", "numpy.squeeze", "scipy.csr_matrix", "FileNotFoundError", "numpy.loadtxt", "scipy.coo_matrix", "scipy.lil_matrix", "numpy.loadtxt", "numpy.ndarray.tolist", "networkx.from_edgelist", "networkx.adjacency_matrix", "numpy.loadtxt", "torch.LongTensor.astype", "numpy.squeeze", "print", "numpy.load", "y_true.astype.astype", "numpy.load", "scipy.lil_matrix", "scipy.load_npz", "sp.load_npz.astype", "torch.LongTensor", "FileNotFoundError", "numpy.reshape", "dataset.split", "features[].astype", "features[].astype"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_citation_data"], ["", "def", "load_data_lp", "(", "dataset", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'cora'", ",", "'pubmed'", ",", "'citeseer'", "]", ":", "\n", "\n", "# adj, features, labels = load_citation_data(dataset, use_feats, data_path)[:3]", "\n", "        ", "adj", ",", "features", ",", "labels", ",", "idx_train", ",", "idx_val", ",", "idx_test", "=", "load_citation_data", "(", "\n", "dataset", ",", "use_feats", ",", "data_path", ",", "split_seed", "=", "None", "\n", ")", "\n", "", "elif", "dataset", "in", "[", "'cora_planetoid'", ",", "'pubmed_planetoid'", "]", ":", "\n", "        ", "from", "torch_geometric", ".", "datasets", "import", "Planetoid", "\n", "import", "torch_geometric", "as", "tg", "\n", "import", "scipy", ".", "sparse", "as", "sp", "\n", "if", "dataset", "==", "'cora'", ":", "\n", "            ", "name", "=", "'Cora'", "\n", "", "elif", "dataset", "==", "'pubmed'", ":", "\n", "            ", "name", "=", "'Pubmed'", "\n", "", "else", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'Dataset {} is not supported.'", ".", "format", "(", "dataset", ")", ")", "\n", "", "loaded_dataset", "=", "Planetoid", "(", "root", "=", "'/root/tmp/'", "+", "name", ",", "name", "=", "'Cora'", ")", "\n", "adj", "=", "tg", ".", "utils", ".", "to_scipy_sparse_matrix", "(", "loaded_dataset", ".", "data", ".", "edge_index", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", ".", "asformat", "(", "adj", ",", "format", "=", "'csr'", ")", "\n", "features", "=", "sp", ".", "lil_matrix", "(", "loaded_dataset", ".", "data", ".", "x", ".", "numpy", "(", ")", ")", "\n", "labels", "=", "loaded_dataset", ".", "data", ".", "y", ".", "numpy", "(", ")", "\n", "", "elif", "'amazon'", "in", "dataset", ":", "\n", "        ", "from", "torch_geometric", ".", "datasets", "import", "Amazon", "\n", "import", "torch_geometric", "as", "tg", "\n", "import", "scipy", ".", "sparse", "as", "sp", "\n", "if", "dataset", "==", "'amazon-photo'", ":", "\n", "            ", "name", "=", "'Photo'", "\n", "", "elif", "dataset", "==", "'amazon-computers'", ":", "\n", "            ", "name", "=", "'Computers'", "\n", "", "else", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'Dataset {} is not supported.'", ".", "format", "(", "dataset", ")", ")", "\n", "", "loaded_dataset", "=", "Amazon", "(", "root", "=", "'/root/tmp/'", "+", "name", ",", "name", "=", "name", ")", "\n", "adj", "=", "tg", ".", "utils", ".", "to_scipy_sparse_matrix", "(", "loaded_dataset", ".", "data", ".", "edge_index", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", ".", "asformat", "(", "adj", ",", "format", "=", "'csr'", ")", "\n", "features", "=", "sp", ".", "lil_matrix", "(", "loaded_dataset", ".", "data", ".", "x", ".", "numpy", "(", ")", ")", "\n", "labels", "=", "loaded_dataset", ".", "data", ".", "y", ".", "numpy", "(", ")", "\n", "", "elif", "dataset", "==", "'BlogCatalog'", ":", "\n", "        ", "import", "scipy", ".", "io", "as", "sio", "\n", "import", "scipy", ".", "sparse", "as", "sp", "\n", "data", "=", "sio", ".", "loadmat", "(", "'./data/BlogCatalog/BlogCatalog.mat'", ")", "\n", "features", "=", "sp", ".", "lil_matrix", "(", "data", "[", "'Attributes'", "]", ")", "\n", "labels", "=", "np", ".", "squeeze", "(", "data", "[", "'Label'", "]", ")", "\n", "adj", "=", "sp", ".", "csr_matrix", "(", "data", "[", "'Network'", "]", ")", "\n", "", "elif", "dataset", "==", "'wiki'", ":", "\n", "        ", "import", "scipy", ".", "sparse", "as", "sp", "\n", "features", "=", "np", ".", "loadtxt", "(", "'./data/wiki/wiki_feature.txt'", ")", "\n", "features", "=", "sp", ".", "coo_matrix", "(", "(", "features", "[", ":", ",", "2", "]", ",", "(", "features", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", ",", "features", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", ")", ")", ")", "\n", "features", "=", "sp", ".", "lil_matrix", "(", "features", ")", "\n", "adj", "=", "np", ".", "loadtxt", "(", "'./data/wiki/wiki_graph.txt'", ")", "\n", "adj", "=", "np", ".", "ndarray", ".", "tolist", "(", "adj", ")", "\n", "adj", "=", "nx", ".", "from_edgelist", "(", "adj", ")", "\n", "adj", "=", "nx", ".", "adjacency_matrix", "(", "adj", ")", "\n", "labels", "=", "np", ".", "loadtxt", "(", "'./data/wiki/wiki_group.txt'", ")", "\n", "labels", "=", "labels", "[", ":", ",", "1", "]", "\n", "labels", "=", "labels", ".", "astype", "(", "np", ".", "int64", ")", "\n", "labels", "=", "np", ".", "squeeze", "(", "np", ".", "reshape", "(", "labels", ",", "(", "2405", ",", "1", ")", ")", "-", "1", ")", "\n", "", "elif", "'PICA'", "in", "dataset", ":", "\n", "\n", "        ", "if", "'ImageNet10'", "in", "dataset", ":", "\n", "            ", "dataset_lower", "=", "'imagenet10'", "\n", "dataset_name", "=", "'PICA-ImageNet10'", "\n", "", "elif", "'ImageNetDog'", "in", "dataset", ":", "\n", "            ", "dataset_lower", "=", "'imagenetdog'", "\n", "dataset_name", "=", "'PICA-ImageNetDog'", "\n", "\n", "", "if", "'feat10'", "in", "dataset", ":", "\n", "            ", "name", "=", "'picafeat10_{}'", ".", "format", "(", "dataset_lower", ")", "\n", "", "elif", "'feat70'", "in", "dataset", ":", "\n", "            ", "name", "=", "'picafeat70_{}'", ".", "format", "(", "dataset_lower", ")", "\n", "", "elif", "'feat512'", "in", "dataset", ":", "\n", "            ", "name", "=", "'picafeat512_{}'", ".", "format", "(", "dataset_lower", ")", "\n", "\n", "", "orig_dataset", "=", "dataset", "\n", "suffix", "=", "dataset", ".", "split", "(", "dataset_name", ")", "[", "-", "1", "]", "\n", "dataset", "=", "dataset_name", "\n", "\n", "\n", "print", "(", "'name : {},  suffix : {}'", ".", "format", "(", "name", ",", "suffix", ")", ")", "\n", "\n", "y_true", "=", "np", ".", "load", "(", "'./data/{}/label.npy'", ".", "format", "(", "dataset", ")", ")", "\n", "y_true", "=", "y_true", ".", "astype", "(", "'int64'", ")", "\n", "labels", "=", "y_true", "\n", "\n", "features", "=", "np", ".", "load", "(", "'./data/{}/{}.npy'", ".", "format", "(", "dataset", ",", "name", ")", ")", "\n", "import", "scipy", ".", "sparse", "as", "sp", "\n", "features", "=", "sp", ".", "lil_matrix", "(", "features", ")", "\n", "\n", "A", "=", "sp", ".", "load_npz", "(", "'./data/{}/A{}.npz'", ".", "format", "(", "dataset", ",", "suffix", ")", ")", "\n", "\n", "\n", "\n", "adj", "=", "A", ".", "astype", "(", "'float64'", ")", "\n", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "data", "=", "{", "'adj_train'", ":", "adj", ",", "'features'", ":", "features", ",", "'labels'", ":", "labels", "}", "\n", "return", "data", "\n", "", "else", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'Dataset {} is not supported.'", ".", "format", "(", "dataset", ")", ")", "\n", "", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "data", "=", "{", "'adj_train'", ":", "adj", ",", "'features'", ":", "features", ",", "'labels'", ":", "labels", "}", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_citation_data": [[304, 343], ["range", "tuple", "data_utils.parse_index_file", "numpy.sort", "scipy.vstack().tolil", "numpy.vstack", "numpy.argmax", "np.sort.tolist", "list", "range", "networkx.adjacency_matrix", "len", "os.path.join", "range", "scipy.lil_matrix", "numpy.zeros", "range", "len", "networkx.from_dict_of_lists", "scipy.eye", "open", "min", "scipy.vstack", "len", "len", "os.path.join", "objects.append", "objects.append", "max", "len", "len", "pickle.load", "pickle.load", "min", "min"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.parse_index_file"], ["", "def", "load_citation_data", "(", "dataset_str", ",", "use_feats", ",", "data_path", ",", "split_seed", "=", "None", ")", ":", "\n", "    ", "names", "=", "[", "'x'", ",", "'y'", ",", "'tx'", ",", "'ty'", ",", "'allx'", ",", "'ally'", ",", "'graph'", "]", "\n", "objects", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "names", ")", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"ind.{}.{}\"", ".", "format", "(", "dataset_str", ",", "names", "[", "i", "]", ")", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "if", "sys", ".", "version_info", ">", "(", "3", ",", "0", ")", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ",", "encoding", "=", "'latin1'", ")", ")", "\n", "", "else", ":", "\n", "                ", "objects", ".", "append", "(", "pkl", ".", "load", "(", "f", ")", ")", "\n", "\n", "", "", "", "x", ",", "y", ",", "tx", ",", "ty", ",", "allx", ",", "ally", ",", "graph", "=", "tuple", "(", "objects", ")", "\n", "test_idx_reorder", "=", "parse_index_file", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"ind.{}.test.index\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "test_idx_range", "=", "np", ".", "sort", "(", "test_idx_reorder", ")", "\n", "if", "dataset_str", "==", "'citeseer'", ":", "\n", "# Fix citeseer dataset (there are some isolated nodes in the graph)", "\n", "# Find isolated nodes, add them as zero-vecs into the right position", "\n", "        ", "test_idx_range_full", "=", "range", "(", "min", "(", "test_idx_reorder", ")", ",", "max", "(", "test_idx_reorder", ")", "+", "1", ")", "\n", "tx_extended", "=", "sp", ".", "lil_matrix", "(", "(", "len", "(", "test_idx_range_full", ")", ",", "x", ".", "shape", "[", "1", "]", ")", ")", "\n", "tx_extended", "[", "test_idx_range", "-", "min", "(", "test_idx_range", ")", ",", ":", "]", "=", "tx", "\n", "tx", "=", "tx_extended", "\n", "ty_extended", "=", "np", ".", "zeros", "(", "(", "len", "(", "test_idx_range_full", ")", ",", "y", ".", "shape", "[", "1", "]", ")", ")", "\n", "ty_extended", "[", "test_idx_range", "-", "min", "(", "test_idx_range", ")", ",", ":", "]", "=", "ty", "\n", "ty", "=", "ty_extended", "\n", "\n", "", "features", "=", "sp", ".", "vstack", "(", "(", "allx", ",", "tx", ")", ")", ".", "tolil", "(", ")", "\n", "features", "[", "test_idx_reorder", ",", ":", "]", "=", "features", "[", "test_idx_range", ",", ":", "]", "\n", "\n", "labels", "=", "np", ".", "vstack", "(", "(", "ally", ",", "ty", ")", ")", "\n", "labels", "[", "test_idx_reorder", ",", ":", "]", "=", "labels", "[", "test_idx_range", ",", ":", "]", "\n", "labels", "=", "np", ".", "argmax", "(", "labels", ",", "1", ")", "\n", "\n", "idx_test", "=", "test_idx_range", ".", "tolist", "(", ")", "\n", "idx_train", "=", "list", "(", "range", "(", "len", "(", "y", ")", ")", ")", "\n", "idx_val", "=", "range", "(", "len", "(", "y", ")", ",", "len", "(", "y", ")", "+", "500", ")", "\n", "\n", "adj", "=", "nx", ".", "adjacency_matrix", "(", "nx", ".", "from_dict_of_lists", "(", "graph", ")", ")", "\n", "if", "not", "use_feats", ":", "\n", "        ", "features", "=", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "", "return", "adj", ",", "features", ",", "labels", ",", "idx_train", ",", "idx_val", ",", "idx_test", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.parse_index_file": [[345, 350], ["open", "index.append", "int", "line.strip"], "function", ["None"], ["", "def", "parse_index_file", "(", "filename", ")", ":", "\n", "    ", "index", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "        ", "index", ".", "append", "(", "int", "(", "line", ".", "strip", "(", ")", ")", ")", "\n", "", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.data_utils.load_synthetic_data": [[352, 383], ["numpy.zeros", "numpy.load", "open", "f.readlines", "line.rstrip().split", "edges.append", "scipy.load_npz", "scipy.eye", "os.path.join", "scipy.csr_matrix", "os.path.join", "len", "len", "os.path.join", "line.rstrip"], "function", ["None"], ["", "def", "load_synthetic_data", "(", "dataset_str", ",", "use_feats", ",", "data_path", ")", ":", "\n", "    ", "object_to_idx", "=", "{", "}", "\n", "idx_counter", "=", "0", "\n", "edges", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.edges.csv\"", ".", "format", "(", "dataset_str", ")", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "all_edges", "=", "f", ".", "readlines", "(", ")", "\n", "", "for", "line", "in", "all_edges", ":", "\n", "        ", "n1", ",", "n2", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "','", ")", "\n", "if", "n1", "in", "object_to_idx", ":", "\n", "            ", "i", "=", "object_to_idx", "[", "n1", "]", "\n", "", "else", ":", "\n", "            ", "i", "=", "idx_counter", "\n", "object_to_idx", "[", "n1", "]", "=", "i", "\n", "idx_counter", "+=", "1", "\n", "", "if", "n2", "in", "object_to_idx", ":", "\n", "            ", "j", "=", "object_to_idx", "[", "n2", "]", "\n", "", "else", ":", "\n", "            ", "j", "=", "idx_counter", "\n", "object_to_idx", "[", "n2", "]", "=", "j", "\n", "idx_counter", "+=", "1", "\n", "", "edges", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "adj", "=", "np", ".", "zeros", "(", "(", "len", "(", "object_to_idx", ")", ",", "len", "(", "object_to_idx", ")", ")", ")", "\n", "for", "i", ",", "j", "in", "edges", ":", "\n", "        ", "adj", "[", "i", ",", "j", "]", "=", "1.", "# comment this line for directed adjacency matrix", "\n", "adj", "[", "j", ",", "i", "]", "=", "1.", "\n", "", "if", "use_feats", ":", "\n", "        ", "features", "=", "sp", ".", "load_npz", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.feats.npz\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "features", "=", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "", "labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"{}.labels.npy\"", ".", "format", "(", "dataset_str", ")", ")", ")", "\n", "return", "sp", ".", "csr_matrix", "(", "adj", ")", ",", "features", ",", "labels", "\n", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Artanh.forward": [[32, 38], ["x.clamp.clamp.clamp", "ctx.save_for_backward", "x.clamp.clamp.double", "torch.log_().sub_().mul_().to", "torch.log_().sub_().mul_", "torch.log_().sub_", "torch.log_", "torch.log_"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "clamp", "(", "-", "1", "+", "1e-15", ",", "1", "-", "1e-15", ")", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "torch", ".", "log_", "(", "1", "+", "z", ")", ".", "sub_", "(", "torch", ".", "log_", "(", "1", "-", "z", ")", ")", ")", ".", "mul_", "(", "0.5", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Artanh.backward": [[39, 43], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "1", "-", "input", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Arsinh.forward": [[46, 51], ["ctx.save_for_backward", "x.double", "torch.sqrt_", "x.double.pow"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "z", "+", "torch", ".", "sqrt_", "(", "1", "+", "z", ".", "pow", "(", "2", ")", ")", ")", ".", "clamp_min_", "(", "1e-15", ")", ".", "log_", "(", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Arsinh.backward": [[52, 56], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "1", "+", "input", "**", "2", ")", "**", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Arcosh.forward": [[59, 65], ["x.clamp.clamp.clamp", "ctx.save_for_backward", "x.clamp.clamp.double", "torch.sqrt_", "x.clamp.double.pow"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "clamp", "(", "min", "=", "1", "+", "1e-7", ")", "\n", "ctx", ".", "save_for_backward", "(", "x", ")", "\n", "z", "=", "x", ".", "double", "(", ")", "\n", "return", "(", "z", "+", "torch", ".", "sqrt_", "(", "z", ".", "pow", "(", "2", ")", "-", "1", ")", ")", ".", "clamp_min_", "(", "1e-15", ")", ".", "log_", "(", ")", ".", "to", "(", "x", ".", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.Arcosh.backward": [[66, 70], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "=", "ctx", ".", "saved_tensors", "\n", "return", "grad_output", "/", "(", "input", "**", "2", "-", "1", ")", "**", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.cosh": [[7, 9], ["x.clamp().cosh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.cosh"], ["def", "cosh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "cosh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.sinh": [[11, 13], ["x.clamp().sinh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.sinh"], ["", "def", "sinh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "sinh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.tanh": [[15, 17], ["x.clamp().tanh", "x.clamp"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.tanh"], ["", "def", "tanh", "(", "x", ",", "clamp", "=", "15", ")", ":", "\n", "    ", "return", "x", ".", "clamp", "(", "-", "clamp", ",", "clamp", ")", ".", "tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.arcosh": [[19, 21], ["Arcosh.apply"], "function", ["None"], ["", "def", "arcosh", "(", "x", ")", ":", "\n", "    ", "return", "Arcosh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.arsinh": [[23, 25], ["Arsinh.apply"], "function", ["None"], ["", "def", "arsinh", "(", "x", ")", ":", "\n", "    ", "return", "Arsinh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.artanh": [[27, 29], ["Artanh.apply"], "function", ["None"], ["", "def", "artanh", "(", "x", ")", ":", "\n", "    ", "return", "Artanh", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.format_metrics": [[9, 13], ["metrics.items"], "function", ["None"], ["def", "format_metrics", "(", "metrics", ",", "split", ")", ":", "\n", "    ", "\"\"\"Format metric in metric dict for logging.\"\"\"", "\n", "return", "\" \"", ".", "join", "(", "\n", "[", "\"{}_{}: {:.8f}\"", ".", "format", "(", "split", ",", "metric_name", ",", "metric_val", ")", "for", "metric_name", ",", "metric_val", "in", "metrics", ".", "items", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.get_dir_name": [[14, 45], ["os.path.exists", "os.path.join", "os.makedirs", "numpy.array().astype", "os.path.join", "os.makedirs", "len", "str", "numpy.array", "np.array().astype.max", "os.listdir", "os.path.isdir", "os.path.join"], "function", ["None"], ["", "def", "get_dir_name", "(", "models_dir", ")", ":", "\n", "    ", "\"\"\"Gets a directory to save the model.\n\n    If the directory already exists, then append a new integer to the end of\n    it. This method is useful so that we don't overwrite existing models\n    when launching new jobs.\n\n    Args:\n        models_dir: The directory where all the models are.\n\n    Returns:\n        The name of a new directory to save the training logs and model weights.\n    \"\"\"", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "models_dir", ")", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "join", "(", "models_dir", ",", "'0'", ")", "\n", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "else", ":", "\n", "        ", "existing_dirs", "=", "np", ".", "array", "(", "\n", "[", "\n", "d", "\n", "for", "d", "in", "os", ".", "listdir", "(", "models_dir", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "models_dir", ",", "d", ")", ")", "\n", "]", "\n", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "if", "len", "(", "existing_dirs", ")", ">", "0", ":", "\n", "            ", "dir_id", "=", "str", "(", "existing_dirs", ".", "max", "(", ")", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "dir_id", "=", "\"1\"", "\n", "", "save_dir", "=", "os", ".", "path", ".", "join", "(", "models_dir", ",", "dir_id", ")", "\n", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "return", "save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.add_flags_from_config": [[47, 92], ["isinstance", "x.lower", "train_utils.add_flags_from_config", "isinstance", "print", "str", "add_flags_from_config.add_argument", "type", "len", "add_flags_from_config.add_argument", "add_flags_from_config.add_argument", "train_utils.add_flags_from_config.OrNone"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.add_flags_from_config"], ["", "def", "add_flags_from_config", "(", "parser", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\"\n    Adds a flag (and default value) to an ArgumentParser for each parameter in a config\n    \"\"\"", "\n", "\n", "def", "OrNone", "(", "default", ")", ":", "\n", "        ", "def", "func", "(", "x", ")", ":", "\n", "# Convert \"none\" to proper None object", "\n", "            ", "if", "x", ".", "lower", "(", ")", "==", "\"none\"", ":", "\n", "                ", "return", "None", "\n", "# If default is None (and x is not None), return x without conversion as str", "\n", "", "elif", "default", "is", "None", ":", "\n", "                ", "return", "str", "(", "x", ")", "\n", "# Otherwise, default has non-None type; convert x to that type", "\n", "", "else", ":", "\n", "                ", "return", "type", "(", "default", ")", "(", "x", ")", "\n", "\n", "", "", "return", "func", "\n", "\n", "", "for", "param", "in", "config_dict", ":", "\n", "        ", "default", ",", "description", "=", "config_dict", "[", "param", "]", "\n", "try", ":", "\n", "            ", "if", "isinstance", "(", "default", ",", "dict", ")", ":", "\n", "                ", "parser", "=", "add_flags_from_config", "(", "parser", ",", "default", ")", "\n", "", "elif", "isinstance", "(", "default", ",", "list", ")", ":", "\n", "                ", "if", "len", "(", "default", ")", ">", "0", ":", "\n", "# pass a list as argument", "\n", "                    ", "parser", ".", "add_argument", "(", "\n", "f\"--{param}\"", ",", "\n", "action", "=", "\"append\"", ",", "\n", "type", "=", "type", "(", "default", "[", "0", "]", ")", ",", "\n", "default", "=", "default", ",", "\n", "help", "=", "description", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "parser", ".", "add_argument", "(", "f\"--{param}\"", ",", "action", "=", "\"append\"", ",", "default", "=", "default", ",", "help", "=", "description", ")", "\n", "", "", "else", ":", "\n", "                ", "pass", "\n", "parser", ".", "add_argument", "(", "f\"--{param}\"", ",", "type", "=", "OrNone", "(", "default", ")", ",", "default", "=", "default", ",", "help", "=", "description", ")", "\n", "", "", "except", "argparse", ".", "ArgumentError", ":", "\n", "            ", "print", "(", "\n", "f\"Could not add flag for param {param} because it was already present.\"", "\n", ")", "\n", "", "", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.check_gpustats": [[96, 108], ["subprocess.check_output().decode().strip", "subprocess.check_output().decode().strip.split", "line.split", "gpustats.append", "subprocess.check_output().decode", "v.strip", "subprocess.check_output", "zip"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode"], ["def", "check_gpustats", "(", "columns", "=", "None", ")", ":", "\n", "    ", "query", "=", "r'nvidia-smi --query-gpu=%s --format=csv,noheader'", "%", "','", ".", "join", "(", "columns", ")", "\n", "smi_output", "=", "subprocess", ".", "check_output", "(", "query", ",", "shell", "=", "True", ")", ".", "decode", "(", ")", ".", "strip", "(", ")", "\n", "\n", "gpustats", "=", "[", "]", "\n", "for", "line", "in", "smi_output", ".", "split", "(", "'\\n'", ")", ":", "\n", "        ", "if", "not", "line", ":", "\n", "            ", "continue", "\n", "", "gpustat", "=", "line", ".", "split", "(", "','", ")", "\n", "gpustats", ".", "append", "(", "{", "k", ":", "v", ".", "strip", "(", ")", "for", "k", ",", "v", "in", "zip", "(", "columns", ",", "gpustat", ")", "}", ")", "\n", "\n", "", "return", "gpustats", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.assign_gpus": [[110, 129], ["sorted", "gpustats.keys", "len", "MemoryError", "train_utils.check_gpustats", "int", "available_gpus.append", "len", "gpustats.get().split", "gpustats.get"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.train_utils.check_gpustats"], ["", "def", "assign_gpus", "(", "num_gpu", ",", "memory_threshold", "=", "1000", ")", ":", "# (MiB)", "\n", "    ", "os", ".", "environ", "[", "\"CUDA_DEVICE_ORDER\"", "]", "=", "\"PCI_BUS_ID\"", "\n", "\n", "columns", "=", "[", "'index'", ",", "'memory.used'", "]", "\n", "gpustats", "=", "{", "i", "[", "'index'", "]", ":", "i", "[", "'memory.used'", "]", "for", "i", "in", "check_gpustats", "(", "columns", ")", "}", "\n", "\n", "\n", "\n", "available_gpus", "=", "[", "]", "\n", "for", "gpu", "in", "sorted", "(", "gpustats", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "int", "(", "gpustats", ".", "get", "(", "gpu", ")", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "<", "memory_threshold", ":", "\n", "            ", "available_gpus", ".", "append", "(", "gpu", ")", "\n", "\n", "", "", "if", "len", "(", "available_gpus", ")", "<", "num_gpu", ":", "\n", "        ", "raise", "MemoryError", "(", "'{} GPUs requested, but only {} available'", ".", "format", "(", "num_gpu", ",", "len", "(", "available_gpus", ")", ")", ")", "\n", "\n", "", "gpus_to_assign", "=", "available_gpus", "[", ":", "num_gpu", "]", "\n", "# os.environ['CUDA_VISIBLE_DEVICES'] = ','.join(gpus_to_assign)", "\n", "return", "gpus_to_assign", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.eval_utils.acc_f1": [[3, 11], ["[].type_as", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "preds.cpu.cpu", "labels.cpu.cpu", "output.max"], "function", ["None"], ["def", "acc_f1", "(", "output", ",", "labels", ",", "average", "=", "'binary'", ")", ":", "\n", "    ", "preds", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "type_as", "(", "labels", ")", "\n", "if", "preds", ".", "is_cuda", ":", "\n", "        ", "preds", "=", "preds", ".", "cpu", "(", ")", "\n", "labels", "=", "labels", ".", "cpu", "(", ")", "\n", "", "accuracy", "=", "accuracy_score", "(", "preds", ",", "labels", ")", "\n", "f1", "=", "f1_score", "(", "preds", ",", "labels", ",", "average", "=", "average", ")", "\n", "return", "accuracy", ",", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.GeometricAwareHypAggAtt.__init__": [[14, 26], ["torch.Module.__init__", "att_layers.SpecialSpmm", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "manifold", ",", "dropout", ",", "act", ",", "att_logit", "=", "torch", ".", "tanh", ",", "beta", "=", "0.", ")", ":", "\n", "        ", "super", "(", "GeometricAwareHypAggAtt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "att_logit", "=", "att_logit", "\n", "self", ".", "special_spmm", "=", "SpecialSpmm", "(", ")", "\n", "\n", "\n", "self", ".", "m", "=", "manifold", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1e-6", "]", ")", ")", "\n", "self", ".", "con", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1e-6", "]", ")", ")", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "in_features", "=", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.GeometricAwareHypAggAtt.forward": [[27, 44], ["x.size", "adj._indices", "att_layers.GeometricAwareHypAggAtt.att_logit", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "ones.to.to.to", "att_layers.GeometricAwareHypAggAtt.special_spmm", "att_layers.GeometricAwareHypAggAtt.m.sqdist", "abs", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.sqdist"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ",", "c", "=", "1", ")", ":", "\n", "        ", "n", "=", "x", ".", "size", "(", "0", ")", "\n", "edge", "=", "adj", ".", "_indices", "(", ")", "\n", "\n", "assert", "not", "torch", ".", "isnan", "(", "self", ".", "beta", ")", ".", "any", "(", ")", "\n", "edge_h", "=", "self", ".", "beta", "*", "self", ".", "m", ".", "sqdist", "(", "x", "[", "edge", "[", "0", ",", ":", "]", ",", ":", "]", ",", "x", "[", "edge", "[", "1", ",", ":", "]", ",", ":", "]", ",", "c", ")", "+", "self", ".", "con", "\n", "\n", "self", ".", "edge_h", "=", "edge_h", "\n", "assert", "not", "torch", ".", "isnan", "(", "edge_h", ")", ".", "any", "(", ")", "\n", "edge_e", "=", "self", ".", "att_logit", "(", "edge_h", ")", "\n", "self", ".", "edge_e", "=", "edge_e", "\n", "ones", "=", "torch", ".", "ones", "(", "size", "=", "(", "n", ",", "1", ")", ")", "\n", "if", "x", ".", "is_cuda", ":", "\n", "            ", "ones", "=", "ones", ".", "to", "(", "x", ".", "device", ")", "\n", "", "e_rowsum", "=", "self", ".", "special_spmm", "(", "edge", ",", "abs", "(", "edge_e", ")", ",", "torch", ".", "Size", "(", "[", "n", ",", "n", "]", ")", ",", "ones", ")", "+", "1e-10", "\n", "\n", "return", "edge_e", ",", "e_rowsum", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.SpecialSpmmFunction.forward": [[50, 57], ["torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "torch.sparse_coo_tensor", "ctx.save_for_backward", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "indices", ",", "values", ",", "shape", ",", "b", ")", ":", "\n", "        ", "assert", "indices", ".", "requires_grad", "==", "False", "\n", "a", "=", "torch", ".", "sparse_coo_tensor", "(", "indices", ",", "values", ",", "shape", ",", "device", "=", "b", ".", "device", ")", "# make sparse matrix shaped of `NxN` ", "\n", "ctx", ".", "save_for_backward", "(", "a", ",", "b", ")", "# save sparse matrix for bp", "\n", "ctx", ".", "N", "=", "shape", "[", "0", "]", "# number of nodes", "\n", "return", "torch", ".", "matmul", "(", "a", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.SpecialSpmmFunction.backward": [[58, 73], ["torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "grad_output.matmul", "a.t().matmul", "b.t", "grad_output.matmul.view", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "a._indices", "a.t", "a._indices"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "assert", "not", "torch", ".", "isnan", "(", "grad_output", ")", ".", "any", "(", ")", "\n", "\n", "# grad_output : Nxd  gradient", "\n", "# a : NxN adj(attention) matrix, b: Nxd node feature", "\n", "a", ",", "b", "=", "ctx", ".", "saved_tensors", "\n", "grad_values", "=", "grad_b", "=", "None", "\n", "if", "ctx", ".", "needs_input_grad", "[", "1", "]", ":", "\n", "            ", "grad_a_dense", "=", "grad_output", ".", "matmul", "(", "b", ".", "t", "(", ")", ")", "\n", "edge_idx", "=", "a", ".", "_indices", "(", ")", "[", "0", ",", ":", "]", "*", "ctx", ".", "N", "+", "a", ".", "_indices", "(", ")", "[", "1", ",", ":", "]", "# flattening (x,y) --> nx + y", "\n", "grad_values", "=", "grad_a_dense", ".", "view", "(", "-", "1", ")", "[", "edge_idx", "]", "\n", "", "if", "ctx", ".", "needs_input_grad", "[", "3", "]", ":", "\n", "            ", "grad_b", "=", "a", ".", "t", "(", ")", ".", "matmul", "(", "grad_output", ")", "\n", "", "return", "None", ",", "grad_values", ",", "None", ",", "grad_b", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.SpecialSpmm.forward": [[76, 78], ["SpecialSpmmFunction.apply"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "indices", ",", "values", ",", "shape", ",", "b", ")", ":", "\n", "        ", "return", "SpecialSpmmFunction", ".", "apply", "(", "indices", ",", "values", ",", "shape", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.HypAggAtt": [[9, 12], ["att_layers.get_att_logit", "att_layers.GeometricAwareHypAggAtt"], "function", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.get_att_logit"], ["def", "HypAggAtt", "(", "in_features", ",", "manifold", ",", "dropout", ",", "act", "=", "None", ",", "att_type", "=", "None", ",", "att_logit", "=", "None", ",", "beta", "=", "0", ")", ":", "\n", "    ", "att_logit", "=", "get_att_logit", "(", "att_logit", ",", "att_type", ")", "\n", "return", "GeometricAwareHypAggAtt", "(", "in_features", ",", "manifold", ",", "dropout", ",", "lambda", "x", ":", "x", ",", "att_logit", "=", "att_logit", ",", "beta", "=", "beta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.get_att_logit": [[79, 83], ["getattr"], "function", ["None"], ["", "", "def", "get_att_logit", "(", "att_logit", ",", "att_type", ")", ":", "\n", "    ", "if", "att_logit", ":", "\n", "        ", "att_logit", "=", "getattr", "(", "torch", ",", "att_logit", ")", "\n", "", "return", "att_logit", "\n", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.GraphConvolution.__init__": [[42, 50], ["torch.nn.modules.module.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "layers.att_layers.SpecialSpmm"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "dropout", ",", "act", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "GraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ",", "use_bias", ")", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "special_spmm", "=", "SpecialSpmm", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.GraphConvolution.forward": [[51, 64], ["layers.GraphConvolution.linear.forward", "torch.dropout", "torch.dropout", "torch.dropout", "adj._indices", "adj._values", "layers.GraphConvolution.special_spmm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "layers.GraphConvolution.act", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", ",", "adj", "=", "input", "\n", "hidden", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "hidden", "=", "F", ".", "dropout", "(", "hidden", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "if", "adj", ".", "is_sparse", ":", "\n", "            ", "edge", "=", "adj", ".", "_indices", "(", ")", "\n", "edge_e", "=", "adj", ".", "_values", "(", ")", "\n", "N", "=", "input", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "support", "=", "self", ".", "special_spmm", "(", "edge", ",", "edge_e", ",", "torch", ".", "Size", "(", "[", "N", ",", "N", "]", ")", ",", "hidden", ")", "\n", "", "else", ":", "\n", "            ", "support", "=", "torch", ".", "mm", "(", "adj", ",", "hidden", ")", "\n", "", "output", "=", "self", ".", "act", "(", "support", ")", ",", "adj", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.GraphConvolution.extra_repr": [[65, 68], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'input_dim={}, output_dim={}'", ".", "format", "(", "\n", "self", ".", "in_features", ",", "self", ".", "out_features", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.Linear.__init__": [[76, 81], ["torch.nn.modules.module.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "dropout", ",", "act", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "Linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ",", "use_bias", ")", "\n", "self", ".", "act", "=", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.Linear.forward": [[82, 87], ["layers.Linear.linear.forward", "torch.dropout", "torch.dropout", "torch.dropout", "layers.Linear.act"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "hidden", "=", "F", ".", "dropout", "(", "hidden", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "out", "=", "self", ".", "act", "(", "hidden", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.FermiDiracDecoder.__init__": [[92, 96], ["torch.nn.modules.module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "r", ",", "t", ")", ":", "\n", "        ", "super", "(", "FermiDiracDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "r", "=", "r", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.FermiDiracDecoder.forward": [[97, 100], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "dist", ")", ":", "\n", "        ", "probs", "=", "1.", "/", "(", "torch", ".", "exp", "(", "(", "dist", "-", "self", ".", "r", ")", "/", "self", ".", "t", ")", "+", "1", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.InnerProductDecoder.__init__": [[108, 112], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "dropout", "=", "0", ",", "act", "=", "torch", ".", "sigmoid", ")", ":", "\n", "        ", "super", "(", "InnerProductDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "act", "=", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.InnerProductDecoder.forward": [[113, 117], ["layers.InnerProductDecoder.act", "cos_dist.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "emb_in", ",", "emb_out", ")", ":", "\n", "        ", "cos_dist", "=", "emb_in", "*", "emb_out", "\n", "probs", "=", "self", ".", "act", "(", "cos_dist", ".", "sum", "(", "1", ")", ")", "\n", "return", "probs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.get_dim_act": [[11, 34], ["getattr", "int", "RuntimeError", "args.hidden_dim.split", "len"], "function", ["None"], ["def", "get_dim_act", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Helper function to get dimension and activation at every layer.\n    :param args:\n    :return:\n    \"\"\"", "\n", "if", "not", "args", ".", "act", ":", "\n", "        ", "act", "=", "lambda", "x", ":", "x", "\n", "", "else", ":", "\n", "        ", "act", "=", "getattr", "(", "F", ",", "args", ".", "act", ")", "\n", "", "acts", "=", "[", "act", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", "\n", "\n", "dims", "=", "[", "args", ".", "feat_dim", "]", "\n", "if", "args", ".", "num_layers", ">", "1", ":", "\n", "# Check layer_num and hdden_dim match", "\n", "        ", "hidden_dim", "=", "[", "int", "(", "h", ")", "for", "h", "in", "args", ".", "hidden_dim", ".", "split", "(", "','", ")", "]", "\n", "if", "args", ".", "num_layers", "!=", "len", "(", "hidden_dim", ")", "+", "1", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Check dimension hidden:{}, num_laysers:{}'", ".", "format", "(", "args", ".", "hidden_dim", ",", "args", ".", "num_layers", ")", ")", "\n", "", "dims", "=", "dims", "+", "hidden_dim", "\n", "\n", "", "dims", "+=", "[", "args", ".", "dim", "]", "\n", "acts", "+=", "[", "act", "]", "\n", "return", "dims", ",", "acts", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HNNLayer.__init__": [[57, 61], ["torch.Module.__init__", "hyp_layers.HypLinear", "hyp_layers.HypAct"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "c_out", ",", "dropout", ",", "act", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "HNNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "HypLinear", "(", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "dropout", ",", "use_bias", ")", "\n", "self", ".", "hyp_act", "=", "HypAct", "(", "manifold", ",", "c_in", ",", "c_out", ",", "act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HNNLayer.forward": [[62, 66], ["hyp_layers.HNNLayer.linear.forward", "hyp_layers.HNNLayer.hyp_act.forward"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "h", "=", "self", ".", "hyp_act", ".", "forward", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HyperbolicGraphConvolution.__init__": [[73, 80], ["torch.Module.__init__", "hyp_layers.HypLinear", "hyp_layers.HypAgg", "hyp_layers.HypAct"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "c_out", ",", "dropout", ",", "act", ",", "use_bias", ",", "use_att", ",", "\n", "att_type", "=", "'sparse_adjmask_dist'", ",", "att_logit", "=", "torch", ".", "exp", ",", "beta", "=", "0.", ",", "decode", "=", "False", ")", ":", "\n", "        ", "super", "(", "HyperbolicGraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "HypLinear", "(", "manifold", ",", "in_features", ",", "out_features", ",", "c_in", ",", "dropout", ",", "use_bias", ")", "\n", "self", ".", "agg", "=", "HypAgg", "(", "manifold", ",", "c_in", ",", "use_att", ",", "out_features", ",", "dropout", ",", "att_type", "=", "att_type", ",", "att_logit", "=", "att_logit", ",", "beta", "=", "beta", ",", "decode", "=", "decode", ")", "\n", "self", ".", "hyp_act", "=", "HypAct", "(", "manifold", ",", "c_in", ",", "c_out", ",", "act", ")", "\n", "self", ".", "decode", "=", "decode", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HyperbolicGraphConvolution.forward": [[81, 95], ["hyp_layers.HyperbolicGraphConvolution.linear.forward", "hyp_layers.HyperbolicGraphConvolution.agg.forward", "hyp_layers.HyperbolicGraphConvolution.hyp_act.forward", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "x", ",", "adj", "=", "input", "\n", "assert", "not", "torch", ".", "isnan", "(", "self", ".", "hyp_act", ".", "c_in", ")", ".", "any", "(", ")", "\n", "if", "self", ".", "hyp_act", ".", "c_out", ":", "\n", "            ", "assert", "not", "torch", ".", "isnan", "(", "self", ".", "hyp_act", ".", "c_out", ")", ".", "any", "(", ")", "\n", "", "assert", "not", "torch", ".", "isnan", "(", "x", ")", ".", "any", "(", ")", "\n", "h", "=", "self", ".", "linear", ".", "forward", "(", "x", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "h", ")", ".", "any", "(", ")", "\n", "h", "=", "self", ".", "agg", ".", "forward", "(", "h", ",", "adj", ",", "prev_x", "=", "x", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "h", ")", ".", "any", "(", ")", "\n", "h", "=", "self", ".", "hyp_act", ".", "forward", "(", "h", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "h", ")", ".", "any", "(", ")", "\n", "output", "=", "h", ",", "adj", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypLinear.__init__": [[102, 114], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "hyp_layers.HypLinear.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypLinear.reset_parameters"], ["def", "__init__", "(", "self", ",", "manifold", ",", "in_features", ",", "out_features", ",", "c", ",", "dropout", ",", "use_bias", ")", ":", "\n", "        ", "super", "(", "HypLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "c", "=", "c", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "use_bias", "=", "use_bias", "\n", "# self.bias = nn.Parameter(torch.Tensor(out_features))", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "out_features", ")", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_features", ",", "in_features", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypLinear.reset_parameters": [[115, 118], ["torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "math.sqrt"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "init", ".", "xavier_uniform_", "(", "self", ".", "weight", ",", "gain", "=", "math", ".", "sqrt", "(", "2", ")", ")", "\n", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypLinear.forward": [[119, 130], ["torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "hyp_layers.HypLinear.manifold.mobius_matvec", "hyp_layers.HypLinear.manifold.proj", "hyp_layers.HypLinear.manifold.expmap0", "hyp_layers.HypLinear.manifold.proj", "hyp_layers.HypLinear.manifold.mobius_add", "hyp_layers.HypLinear.manifold.proj"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_matvec", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "drop_weight", "=", "F", ".", "dropout", "(", "self", ".", "weight", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "mv", "=", "self", ".", "manifold", ".", "mobius_matvec", "(", "drop_weight", ",", "x", ",", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "proj", "(", "mv", ",", "self", ".", "c", ")", "\n", "if", "self", ".", "use_bias", ":", "\n", "            ", "bias", "=", "self", ".", "bias", "\n", "hyp_bias", "=", "self", ".", "manifold", ".", "expmap0", "(", "bias", ",", "self", ".", "c", ")", "\n", "hyp_bias", "=", "self", ".", "manifold", ".", "proj", "(", "hyp_bias", ",", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "mobius_add", "(", "res", ",", "hyp_bias", ",", "c", "=", "self", ".", "c", ")", "\n", "res", "=", "self", ".", "manifold", ".", "proj", "(", "res", ",", "self", ".", "c", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypLinear.extra_repr": [[131, 134], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'in_features={}, out_features={}, c={}'", ".", "format", "(", "\n", "self", ".", "in_features", ",", "self", ".", "out_features", ",", "self", ".", "c", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAgg.__init__": [[142, 156], ["torch.nn.modules.module.Module.__init__", "layers.att_layers.HypAggAtt", "layers.att_layers.SpecialSpmm"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.att_layers.HypAggAtt"], ["def", "__init__", "(", "self", ",", "manifold", ",", "c", ",", "use_att", ",", "in_features", ",", "dropout", ",", "att_type", "=", "'sparse_adjmask_dist'", ",", "att_logit", "=", "None", ",", "beta", "=", "0", ",", "decode", "=", "False", ")", ":", "\n", "        ", "super", "(", "HypAgg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "c", "=", "c", "\n", "self", ".", "use_att", "=", "use_att", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "dropout", "=", "dropout", "\n", "if", "use_att", ":", "\n", "            ", "self", ".", "att", "=", "HypAggAtt", "(", "in_features", ",", "manifold", ",", "dropout", ",", "act", "=", "None", ",", "att_type", "=", "att_type", ",", "att_logit", "=", "att_logit", ",", "beta", "=", "beta", ")", "\n", "self", ".", "att_type", "=", "att_type", "\n", "\n", "self", ".", "special_spmm", "=", "SpecialSpmm", "(", ")", "\n", "", "self", ".", "decode", "=", "decode", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAgg.forward": [[157, 197], ["hyp_layers.HypAgg.manifold.logmap0", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "hyp_layers.HypAgg.manifold.proj", "hyp_layers.HypAgg.manifold.logmap0", "hyp_layers.HypAgg.att", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "hyp_layers.HypAgg.manifold.proj", "hyp_layers.HypAgg.manifold.expmap0", "hyp_layers.HypAgg.manifold.logmap0", "hyp_layers.HypAgg._indices", "hyp_layers.HypAgg.special_spmm", "torch.spmm.div", "torch.spmm.div", "torch.spmm.div", "torch.spmm.div", "hyp_layers.HypAgg.manifold.proj", "hyp_layers.HypAgg.att", "hyp_layers.HypAgg.manifold.logmap0", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "hyp_layers.HypAgg.manifold.proj", "hyp_layers.HypAgg.manifold.expmap0", "hyp_layers.HypAgg.att", "hyp_layers.HypAgg.att", "x.size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "hyp_layers.HypAgg.manifold.expmap0", "hyp_layers.HypAgg.manifold.expmap0", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ",", "prev_x", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "use_att", ":", "\n", "            ", "dist", "=", "'dist'", "in", "self", ".", "att_type", "\n", "if", "dist", ":", "\n", "                ", "if", "'sparse'", "in", "self", ".", "att_type", ":", "\n", "                    ", "if", "self", ".", "decode", ":", "\n", "# NOTE : AGG(prev_x)", "\n", "                        ", "edge_e", ",", "e_rowsum", "=", "self", ".", "att", "(", "prev_x", ",", "adj", ",", "self", ".", "c", ")", "# SparseAtt", "\n", "", "else", ":", "\n", "# NOTE : AGG(x)", "\n", "                        ", "edge_e", ",", "e_rowsum", "=", "self", ".", "att", "(", "x", ",", "adj", ",", "self", ".", "c", ")", "# SparseAtt", "\n", "", "self", ".", "edge_e", "=", "edge_e", "\n", "self", ".", "e_rowsum", "=", "e_rowsum", "\n", "## SparseAtt", "\n", "x_tangent", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "N", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "edge", "=", "adj", ".", "_indices", "(", ")", "\n", "support_t", "=", "self", ".", "special_spmm", "(", "edge", ",", "edge_e", ",", "torch", ".", "Size", "(", "[", "N", ",", "N", "]", ")", ",", "x_tangent", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "support_t", ")", ".", "any", "(", ")", "\n", "support_t", "=", "support_t", ".", "div", "(", "e_rowsum", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "support_t", ")", ".", "any", "(", ")", "\n", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "", "else", ":", "\n", "                    ", "adj", "=", "self", ".", "att", "(", "x", ",", "adj", ",", "self", ".", "c", ")", "# DenseAtt", "\n", "x_tangent", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "support_t", "=", "torch", ".", "spmm", "(", "adj", ",", "x_tangent", ")", "\n", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "", "", "else", ":", "\n", "## MLP attention", "\n", "                ", "x_tangent", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "adj", "=", "self", ".", "att", "(", "x_tangent", ",", "adj", ")", "\n", "support_t", "=", "torch", ".", "spmm", "(", "adj", ",", "x_tangent", ")", "\n", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "", "", "else", ":", "\n", "            ", "x_tangent", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "support_t", "=", "torch", ".", "spmm", "(", "adj", ",", "x_tangent", ")", "\n", "output", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "support_t", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAgg.extra_repr": [[198, 201], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'c={}, use_att={}, decode={}'", ".", "format", "(", "\n", "self", ".", "c", ",", "self", ".", "use_att", ",", "self", ".", "decode", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.__init__": [[209, 215], ["torch.nn.modules.module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "manifold", ",", "c_in", ",", "c_out", ",", "act", ")", ":", "\n", "        ", "super", "(", "HypAct", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold", "=", "manifold", "\n", "self", ".", "c_in", "=", "c_in", "\n", "self", ".", "c_out", "=", "c_out", "\n", "self", ".", "act", "=", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward": [[216, 226], ["NotImplementedError", "hyp_layers.HypAct.manifold.activation", "hyp_layers.HypAct.manifold.logmap0"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.activation", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "manifold", ".", "name", "==", "'PoincareBall'", ":", "\n", "            ", "if", "self", ".", "c_out", ":", "\n", "                ", "xt", "=", "self", ".", "manifold", ".", "activation", "(", "x", ",", "self", ".", "act", ",", "self", ".", "c_in", ",", "self", ".", "c_out", ")", "\n", "return", "xt", "\n", "", "else", ":", "\n", "                ", "xt", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c_in", ")", "\n", "return", "xt", "\n", "", "", "else", ":", "\n", "            ", "NotImplementedError", "(", "\"not implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.extra_repr": [[227, 230], ["None"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'Manifold={},\\n c_in={},\\n act={},\\n c_out={}'", ".", "format", "(", "\n", "self", ".", "manifold", ".", "name", ",", "self", ".", "c_in", ",", "self", ".", "act", ".", "__name__", ",", "self", ".", "c_out", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.get_dim_act_curv": [[17, 49], ["getattr", "int", "RuntimeError", "torch.Parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "args.hidden_dim.split", "len", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "range", "range", "curv.to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["def", "get_dim_act_curv", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Helper function to get dimension and activation at every layer.\n    :param args:\n    :return:\n    \"\"\"", "\n", "if", "not", "args", ".", "act", ":", "\n", "        ", "act", "=", "lambda", "x", ":", "x", "\n", "", "else", ":", "\n", "        ", "act", "=", "getattr", "(", "F", ",", "args", ".", "act", ")", "\n", "", "acts", "=", "[", "act", "]", "*", "(", "args", ".", "num_layers", "-", "1", ")", "\n", "\n", "dims", "=", "[", "args", ".", "feat_dim", "]", "\n", "# Check layer_num and hdden_dim match", "\n", "if", "args", ".", "num_layers", ">", "1", ":", "\n", "        ", "hidden_dim", "=", "[", "int", "(", "h", ")", "for", "h", "in", "args", ".", "hidden_dim", ".", "split", "(", "','", ")", "]", "\n", "if", "args", ".", "num_layers", "!=", "len", "(", "hidden_dim", ")", "+", "1", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Check dimension hidden:{}, num_layers:{}'", ".", "format", "(", "args", ".", "hidden_dim", ",", "args", ".", "num_layers", ")", ")", "\n", "", "dims", "=", "dims", "+", "hidden_dim", "\n", "\n", "", "dims", "+=", "[", "args", ".", "dim", "]", "\n", "acts", "+=", "[", "act", "]", "\n", "n_curvatures", "=", "args", ".", "num_layers", "\n", "if", "args", ".", "c_trainable", "==", "1", ":", "# NOTE : changed from # if args.c is None:", "\n", "# create list of trainable curvature parameters", "\n", "        ", "curvatures", "=", "[", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "args", ".", "c", "]", ")", ".", "to", "(", "args", ".", "device", ")", ")", "for", "_", "in", "range", "(", "n_curvatures", ")", "]", "\n", "", "else", ":", "\n", "# fixed curvature", "\n", "        ", "curvatures", "=", "[", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", "for", "_", "in", "range", "(", "n_curvatures", ")", "]", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "curvatures", "=", "[", "curv", ".", "to", "(", "args", ".", "device", ")", "for", "curv", "in", "curvatures", "]", "\n", "", "", "return", "dims", ",", "acts", ",", "curvatures", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.OptimMixin.__init__": [[10, 13], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "stabilize", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "_stabilize", "=", "stabilize", "\n", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.OptimMixin.stabilize_group": [[14, 16], ["None"], "methods", ["None"], ["", "def", "stabilize_group", "(", "self", ",", "group", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.OptimMixin.stabilize": [[17, 22], ["radam.OptimMixin.stabilize_group"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.stabilize_group"], ["", "def", "stabilize", "(", "self", ")", ":", "\n", "        ", "\"\"\"Stabilize parameters if they are off-manifold due to numerical reasons\n        \"\"\"", "\n", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "self", ".", "stabilize_group", "(", "group", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.step": [[75, 163], ["closure", "torch.no_grad", "isinstance", "manifold.egrad2rgrad.add_", "manifold.egrad2rgrad", "exp_avg.mul_().add_", "exp_avg_sq.mul_().add_", "manifold.proj", "manifold.ptransp", "radam.copy_or_set_", "exp_avg.set_", "radam.RiemannianAdam.stabilize_group", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "manifold.inner", "torch.max", "max_exp_avg_sq.sqrt().add_", "exp_avg_sq.sqrt().add_", "manifold.expmap", "torch.zeros_like", "exp_avg.mul_", "exp_avg_sq.mul_", "max_exp_avg_sq.sqrt", "exp_avg_sq.sqrt"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.egrad2rgrad", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.ptransp", "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.copy_or_set_", "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.stabilize_group", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.inner", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap"], ["def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments\n        ---------\n        closure : callable (optional)\n            A closure that reevaluates the model\n            and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "                ", "if", "\"step\"", "not", "in", "group", ":", "\n", "                    ", "group", "[", "\"step\"", "]", "=", "0", "\n", "", "betas", "=", "group", "[", "\"betas\"", "]", "\n", "weight_decay", "=", "group", "[", "\"weight_decay\"", "]", "\n", "eps", "=", "group", "[", "\"eps\"", "]", "\n", "learning_rate", "=", "group", "[", "\"lr\"", "]", "\n", "amsgrad", "=", "group", "[", "\"amsgrad\"", "]", "\n", "for", "point", "in", "group", "[", "\"params\"", "]", ":", "\n", "                    ", "grad", "=", "point", ".", "grad", "\n", "if", "grad", "is", "None", ":", "\n", "                        ", "continue", "\n", "\n", "", "if", "isinstance", "(", "point", ",", "(", "ManifoldParameter", ")", ")", ":", "\n", "                        ", "manifold", "=", "point", ".", "manifold", "\n", "c", "=", "point", ".", "c", "\n", "", "else", ":", "\n", "                        ", "manifold", "=", "_default_manifold", "\n", "c", "=", "None", "\n", "", "if", "grad", ".", "is_sparse", ":", "\n", "                        ", "raise", "RuntimeError", "(", "\n", "\"Riemannian Adam does not support sparse gradients yet (PR is welcome)\"", "\n", ")", "\n", "\n", "", "state", "=", "self", ".", "state", "[", "point", "]", "\n", "\n", "# State initialization", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                        ", "state", "[", "\"step\"", "]", "=", "0", "\n", "# Exponential moving average of gradient values", "\n", "state", "[", "\"exp_avg\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "# Exponential moving average of squared gradient values", "\n", "state", "[", "\"exp_avg_sq\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "if", "amsgrad", ":", "\n", "# Maintains max of all exp. moving avg. of sq. grad. values", "\n", "                            ", "state", "[", "\"max_exp_avg_sq\"", "]", "=", "torch", ".", "zeros_like", "(", "point", ")", "\n", "# make local variables for easy access", "\n", "", "", "exp_avg", "=", "state", "[", "\"exp_avg\"", "]", "\n", "exp_avg_sq", "=", "state", "[", "\"exp_avg_sq\"", "]", "\n", "# actual step", "\n", "grad", ".", "add_", "(", "weight_decay", ",", "point", ")", "\n", "grad", "=", "manifold", ".", "egrad2rgrad", "(", "point", ",", "grad", ",", "c", ")", "\n", "\n", "exp_avg", ".", "mul_", "(", "betas", "[", "0", "]", ")", ".", "add_", "(", "1", "-", "betas", "[", "0", "]", ",", "grad", ")", "\n", "exp_avg_sq", ".", "mul_", "(", "betas", "[", "1", "]", ")", ".", "add_", "(", "\n", "1", "-", "betas", "[", "1", "]", ",", "manifold", ".", "inner", "(", "point", ",", "c", ",", "grad", ",", "keepdim", "=", "True", ")", "\n", ")", "\n", "if", "amsgrad", ":", "\n", "                        ", "max_exp_avg_sq", "=", "state", "[", "\"max_exp_avg_sq\"", "]", "\n", "# Maintains the maximum of all 2nd moment running avg. till now", "\n", "torch", ".", "max", "(", "max_exp_avg_sq", ",", "exp_avg_sq", ",", "out", "=", "max_exp_avg_sq", ")", "\n", "# Use the max. for normalizing running avg. of gradient", "\n", "denom", "=", "max_exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "eps", ")", "\n", "", "else", ":", "\n", "                        ", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "eps", ")", "\n", "", "group", "[", "\"step\"", "]", "+=", "1", "\n", "bias_correction1", "=", "1", "-", "betas", "[", "0", "]", "**", "group", "[", "\"step\"", "]", "\n", "bias_correction2", "=", "1", "-", "betas", "[", "1", "]", "**", "group", "[", "\"step\"", "]", "\n", "step_size", "=", "(", "\n", "learning_rate", "*", "bias_correction2", "**", "0.5", "/", "bias_correction1", "\n", ")", "\n", "\n", "# copy the state, we need it for retraction", "\n", "# get the direction for ascend", "\n", "direction", "=", "exp_avg", "/", "denom", "\n", "# transport the exponential averaging to the new point", "\n", "new_point", "=", "manifold", ".", "proj", "(", "manifold", ".", "expmap", "(", "-", "step_size", "*", "direction", ",", "point", ",", "c", ")", ",", "c", ")", "\n", "exp_avg_new", "=", "manifold", ".", "ptransp", "(", "point", ",", "new_point", ",", "exp_avg", ",", "c", ")", "\n", "# use copy only for user facing point", "\n", "copy_or_set_", "(", "point", ",", "new_point", ")", "\n", "exp_avg", ".", "set_", "(", "exp_avg_new", ")", "\n", "\n", "group", "[", "\"step\"", "]", "+=", "1", "\n", "", "if", "self", ".", "_stabilize", "is", "not", "None", "and", "group", "[", "\"step\"", "]", "%", "self", ".", "_stabilize", "==", "0", ":", "\n", "                    ", "self", ".", "stabilize_group", "(", "group", ")", "\n", "", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.RiemannianAdam.stabilize_group": [[164, 177], ["torch.no_grad", "radam.copy_or_set_", "exp_avg.set_", "isinstance", "manifold.proj", "manifold.proj_tan"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.copy_or_set_", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj_tan"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "stabilize_group", "(", "self", ",", "group", ")", ":", "\n", "        ", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "            ", "if", "not", "isinstance", "(", "p", ",", "ManifoldParameter", ")", ":", "\n", "                ", "continue", "\n", "", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "if", "not", "state", ":", "# due to None grads", "\n", "                ", "continue", "\n", "", "manifold", "=", "p", ".", "manifold", "\n", "c", "=", "p", ".", "c", "\n", "exp_avg", "=", "state", "[", "\"exp_avg\"", "]", "\n", "copy_or_set_", "(", "p", ",", "manifold", ".", "proj", "(", "p", ",", "c", ")", ")", "\n", "exp_avg", ".", "set_", "(", "manifold", ".", "proj_tan", "(", "exp_avg", ",", "u", ",", "c", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.optimizers.radam.copy_or_set_": [[24, 43], ["dest.stride", "source.stride", "dest.copy_", "dest.set_"], "function", ["None"], ["", "", "", "def", "copy_or_set_", "(", "dest", ",", "source", ")", ":", "\n", "    ", "\"\"\"\n    A workaround to respect strides of :code:`dest` when copying :code:`source`\n    (https://github.com/geoopt/geoopt/issues/70)\n    Parameters\n    ----------\n    dest : torch.Tensor\n        Destination tensor where to store new data\n    source : torch.Tensor\n        Source data to put in the new tensor\n    Returns\n    -------\n    dest\n        torch.Tensor, modified inplace\n    \"\"\"", "\n", "if", "dest", ".", "stride", "(", ")", "!=", "source", ".", "stride", "(", ")", ":", "\n", "        ", "return", "dest", ".", "copy_", "(", "source", ")", "\n", "", "else", ":", "\n", "        ", "return", "dest", ".", "set_", "(", "source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.__init__": [[21, 47], ["torch.Module.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.Parameter", "torch.Parameter", "torch.Parameter", "RuntimeError", "getattr", "getattr", "layers.layers.FermiDiracDecoder", "layers.layers.InnerProductDecoder", "base_models.BaseModel.c.to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "BaseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "manifold_name", "=", "args", ".", "manifold", "\n", "if", "args", ".", "c", "is", "not", "None", ":", "\n", "            ", "self", ".", "c", "=", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "                ", "self", ".", "c", "=", "self", ".", "c", ".", "to", "(", "args", ".", "device", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "c", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "1.", "]", ")", ")", "\n", "", "if", "args", ".", "model", "not", "in", "[", "'HGCAE'", ",", "'HNN'", ",", "'Shallow'", "]", "and", "args", ".", "manifold", "!=", "'Euclidean'", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Make sure the manifold of model:{} is Euclidean, not {}'", ".", "format", "(", "args", ".", "model", ",", "args", ".", "manifold", ")", ")", "\n", "", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "self", ".", "manifold_name", ")", "(", ")", "\n", "self", ".", "nnodes", "=", "args", ".", "n_nodes", "\n", "self", ".", "n_classes", "=", "args", ".", "n_classes", "\n", "self", ".", "encoder", "=", "getattr", "(", "encoders", ",", "args", ".", "model", ")", "(", "self", ".", "c", ",", "args", ")", "\n", "self", ".", "num_layers", "=", "args", ".", "num_layers", "\n", "\n", "# Embedding c", "\n", "self", ".", "hyperbolic_embedding", "=", "True", "if", "args", ".", "use_att", "and", "args", ".", "model", "==", "'HGCAE'", "else", "False", "\n", "\n", "if", "args", ".", "non_param_dec", "==", "'fermidirac'", ":", "\n", "            ", "self", ".", "decoder_type", "=", "'FermiDiracDecoder'", "\n", "self", ".", "dc", "=", "FermiDiracDecoder", "(", "r", "=", "args", ".", "r", ",", "t", "=", "args", ".", "t", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "decoder_type", "=", "'InnerProductDecoder'", "\n", "self", ".", "dc", "=", "InnerProductDecoder", "(", "dropout", "=", "0", ",", "act", "=", "torch", ".", "sigmoid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.encode": [[49, 52], ["base_models.BaseModel.encoder.encode"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode"], ["", "", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "encoder", ".", "encode", "(", "x", ",", "adj", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.pred_link_score": [[53, 76], ["base_models.BaseModel.manifold.normalize", "base_models.BaseModel.manifold.sqdist", "base_models.BaseModel.dc.forward", "base_models.BaseModel.dc.forward"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.normalize", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.sqdist", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "pred_link_score", "(", "self", ",", "h", ",", "idx", ")", ":", "# for LP,REC ", "\n", "        ", "if", "self", ".", "manifold_name", "==", "'Euclidean'", ":", "\n", "            ", "h", "=", "self", ".", "manifold", ".", "normalize", "(", "h", ")", "\n", "", "emb_in", "=", "h", "[", "idx", "[", ":", ",", "0", "]", ",", ":", "]", "\n", "emb_out", "=", "h", "[", "idx", "[", ":", ",", "1", "]", ",", ":", "]", "\n", "if", "self", ".", "decoder_type", "==", "'FermiDiracDecoder'", ":", "\n", "            ", "'''\n            NOTE : previously, output embedding c was fixed, not learnable always.\n            print(self.c)\n            sqdist = self.manifold.sqdist(emb_in, emb_out, self.c)\n            '''", "\n", "# NOTE : use last embedding curvature", "\n", "if", "self", ".", "manifold_name", "!=", "'Euclidean'", ":", "\n", "                ", "emb_c", "=", "self", ".", "encoder", ".", "layers", "[", "-", "1", "]", ".", "hyp_act", ".", "c_out", "\n", "", "else", ":", "\n", "                ", "emb_c", "=", "None", "\n", "", "sqdist", "=", "self", ".", "manifold", ".", "sqdist", "(", "emb_in", ",", "emb_out", ",", "emb_c", ")", "\n", "probs", "=", "self", ".", "dc", ".", "forward", "(", "sqdist", ")", "\n", "", "else", ":", "\n", "# NOTE : not implemented for hyperbolics", "\n", "            ", "probs", "=", "self", ".", "dc", ".", "forward", "(", "emb_in", ",", "emb_out", ")", "\n", "\n", "", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.decode": [[77, 80], ["base_models.BaseModel.decoder.decode"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode"], ["", "def", "decode", "(", "self", ",", "h", ",", "adj", ",", "idx", ")", ":", "# REC", "\n", "        ", "output", "=", "self", ".", "decoder", ".", "decode", "(", "h", ",", "adj", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.eval_cluster": [[82, 137], ["embeddings[].detach().cpu().numpy", "[].cpu().numpy", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit", "sklearn.cluster.KMeans.fit_predict", "sklearn.metrics.normalized_mutual_info_score", "sklearn.metrics.adjusted_rand_score", "base_models.BaseModel.manifold.logmap0().cpu", "numpy.unique", "len", "numpy.unique", "len", "numpy.maximum", "numpy.zeros", "range", "Munkres", "Munkres.compute", "numpy.array", "numpy.zeros", "range", "base_models.BaseModel.eval_cluster.best_map"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.None.solver.Solver.fit"], ["", "def", "eval_cluster", "(", "self", ",", "embeddings", ",", "data", ",", "split", ")", ":", "\n", "        ", "if", "self", ".", "hyperbolic_embedding", ":", "\n", "            ", "emb_c", "=", "self", ".", "encoder", ".", "layers", "[", "-", "1", "]", ".", "hyp_act", ".", "c_out", "\n", "embeddings", "=", "self", ".", "manifold", ".", "logmap0", "(", "embeddings", ".", "to", "(", "emb_c", ".", "device", ")", ",", "c", "=", "emb_c", ")", ".", "cpu", "(", ")", "\n", "\n", "", "idx", "=", "data", "[", "f'idx_{split}'", "]", "\n", "n_classes", "=", "self", ".", "n_classes", "\n", "\n", "embeddings_to_cluster", "=", "embeddings", "[", "idx", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "gt_label", "=", "data", "[", "'labels'", "]", "[", "idx", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "kmeans", "=", "cluster", ".", "KMeans", "(", "n_clusters", "=", "n_classes", ",", "algorithm", "=", "'auto'", ")", "\n", "kmeans", ".", "fit", "(", "embeddings_to_cluster", ")", "\n", "pred_label", "=", "kmeans", ".", "fit_predict", "(", "embeddings_to_cluster", ")", "\n", "\n", "from", "munkres", "import", "Munkres", "\n", "def", "best_map", "(", "L1", ",", "L2", ")", ":", "\n", "#L1 should be the groundtruth labels and L2 should be the clustering labels we got", "\n", "            ", "Label1", "=", "np", ".", "unique", "(", "L1", ")", "\n", "nClass1", "=", "len", "(", "Label1", ")", "\n", "Label2", "=", "np", ".", "unique", "(", "L2", ")", "\n", "nClass2", "=", "len", "(", "Label2", ")", "\n", "nClass", "=", "np", ".", "maximum", "(", "nClass1", ",", "nClass2", ")", "\n", "G", "=", "np", ".", "zeros", "(", "(", "nClass", ",", "nClass", ")", ")", "\n", "for", "i", "in", "range", "(", "nClass1", ")", ":", "\n", "                ", "ind_cla1", "=", "L1", "==", "Label1", "[", "i", "]", "\n", "ind_cla1", "=", "ind_cla1", ".", "astype", "(", "float", ")", "\n", "for", "j", "in", "range", "(", "nClass2", ")", ":", "\n", "                    ", "ind_cla2", "=", "L2", "==", "Label2", "[", "j", "]", "\n", "ind_cla2", "=", "ind_cla2", ".", "astype", "(", "float", ")", "\n", "G", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "ind_cla2", "*", "ind_cla1", ")", "\n", "", "", "m", "=", "Munkres", "(", ")", "\n", "index", "=", "m", ".", "compute", "(", "-", "G", ".", "T", ")", "\n", "index", "=", "np", ".", "array", "(", "index", ")", "\n", "c", "=", "index", "[", ":", ",", "1", "]", "\n", "newL2", "=", "np", ".", "zeros", "(", "L2", ".", "shape", ")", "\n", "for", "i", "in", "range", "(", "nClass2", ")", ":", "\n", "                ", "newL2", "[", "L2", "==", "Label2", "[", "i", "]", "]", "=", "Label1", "[", "c", "[", "i", "]", "]", "\n", "", "return", "newL2", "\n", "\n", "\n", "", "def", "err_rate", "(", "gt_s", ",", "s", ")", ":", "\n", "            ", "c_x", "=", "best_map", "(", "gt_s", ",", "s", ")", "\n", "err_x", "=", "np", ".", "sum", "(", "gt_s", "[", ":", "]", "!=", "c_x", "[", ":", "]", ")", "\n", "missrate", "=", "err_x", ".", "astype", "(", "float", ")", "/", "(", "gt_s", ".", "shape", "[", "0", "]", ")", "\n", "return", "missrate", "\n", "\n", "\n", "", "acc", "=", "1", "-", "err_rate", "(", "gt_label", ",", "pred_label", ")", "\n", "# acc = accuracy_score(gt_label, pred_label)", "\n", "nmi", "=", "normalized_mutual_info_score", "(", "gt_label", ",", "pred_label", ",", "average_method", "=", "'arithmetic'", ")", "\n", "ari", "=", "adjusted_rand_score", "(", "gt_label", ",", "pred_label", ")", "\n", "\n", "metrics", "=", "{", "'cluster_acc'", ":", "acc", ",", "'nmi'", ":", "nmi", ",", "'ari'", ":", "ari", "}", "\n", "return", "metrics", ",", "pred_label", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.compute_metrics": [[139, 141], ["None"], "methods", ["None"], ["", "def", "compute_metrics", "(", "self", ",", "embeddings", ",", "data", ",", "split", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.init_metric_dict": [[142, 144], ["None"], "methods", ["None"], ["", "def", "init_metric_dict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.has_improved": [[145, 147], ["None"], "methods", ["None"], ["", "def", "has_improved", "(", "self", ",", "m1", ",", "m2", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.__init__": [[153, 174], ["base_models.BaseModel.__init__", "min", "hasattr"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "LPModel", ",", "self", ")", ".", "__init__", "(", "args", ")", "\n", "self", ".", "nb_false_edges", "=", "args", ".", "nb_false_edges", "\n", "self", ".", "positive_edge_samplig", "=", "True", "\n", "if", "self", ".", "positive_edge_samplig", ":", "\n", "            ", "self", ".", "nb_edges", "=", "min", "(", "args", ".", "nb_edges", ",", "5000", ")", "# NOTE : be-aware too dense edges", "\n", "", "else", ":", "\n", "            ", "self", ".", "nb_edges", "=", "args", ".", "nb_edges", "\n", "\n", "", "if", "args", ".", "lambda_rec", ">", "0", ":", "\n", "            ", "self", ".", "num_dec_layers", "=", "args", ".", "num_dec_layers", "\n", "self", ".", "lambda_rec", "=", "args", ".", "lambda_rec", "\n", "c", "=", "self", ".", "encoder", ".", "curvatures", "if", "hasattr", "(", "self", ".", "encoder", ",", "'curvatures'", ")", "else", "args", ".", "c", "### handle HNN", "\n", "self", ".", "decoder", "=", "model2decoder", "[", "args", ".", "model", "]", "(", "c", ",", "args", ",", "'rec'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "lambda_rec", "=", "0", "\n", "\n", "", "if", "args", ".", "lambda_lp", ">", "0", ":", "\n", "            ", "self", ".", "lambda_lp", "=", "args", ".", "lambda_lp", "\n", "", "else", ":", "\n", "            ", "self", ".", "lambda_lp", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.compute_metrics": [[175, 219], ["base_models.LPModel.pred_link_score", "base_models.LPModel.pred_link_score", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "torch.binary_cross_entropy", "sklearn.metrics.roc_auc_score", "sklearn.metrics.average_precision_score", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "pos_scores.cpu.cpu.cpu", "neg_scores.cpu.cpu.cpu", "list", "list", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "base_models.LPModel.decode", "metrics.update", "pos_scores.cpu.cpu.data.numpy", "neg_scores.cpu.cpu.data.numpy", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.nn.functional.mse_loss", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "torch.isnan().any", "numpy.random.randint", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "RuntimeError", "numpy.random.randint", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "base_models.LPModel.encoder.features[].detach", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.pred_link_score", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.BaseModel.pred_link_score", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode"], ["", "", "def", "compute_metrics", "(", "self", ",", "embeddings", ",", "data", ",", "split", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "split", "==", "'train'", ":", "\n", "            ", "num_true_edges", "=", "data", "[", "f'{split}_edges'", "]", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "positive_edge_samplig", "and", "num_true_edges", ">", "self", ".", "nb_edges", ":", "\n", "                ", "edges_true", "=", "data", "[", "f'{split}_edges'", "]", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "num_true_edges", ",", "self", ".", "nb_edges", ")", "]", "\n", "", "else", ":", "\n", "                ", "edges_true", "=", "data", "[", "f'{split}_edges'", "]", "\n", "", "edges_false", "=", "data", "[", "f'{split}_edges_false'", "]", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "nb_false_edges", ",", "self", ".", "nb_edges", ")", "]", "\n", "", "else", ":", "\n", "            ", "edges_true", "=", "data", "[", "f'{split}_edges'", "]", "\n", "edges_false", "=", "data", "[", "f'{split}_edges_false'", "]", "\n", "\n", "", "pos_scores", "=", "self", ".", "pred_link_score", "(", "embeddings", ",", "edges_true", ")", "\n", "neg_scores", "=", "self", ".", "pred_link_score", "(", "embeddings", ",", "edges_false", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "pos_scores", ")", ".", "any", "(", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "neg_scores", ")", ".", "any", "(", ")", "\n", "loss", "=", "F", ".", "binary_cross_entropy", "(", "pos_scores", ",", "torch", ".", "ones_like", "(", "pos_scores", ")", ")", "\n", "loss", "+=", "F", ".", "binary_cross_entropy", "(", "neg_scores", ",", "torch", ".", "zeros_like", "(", "neg_scores", ")", ")", "\n", "if", "pos_scores", ".", "is_cuda", ":", "\n", "            ", "pos_scores", "=", "pos_scores", ".", "cpu", "(", ")", "\n", "neg_scores", "=", "neg_scores", ".", "cpu", "(", ")", "\n", "", "labels", "=", "[", "1", "]", "*", "pos_scores", ".", "shape", "[", "0", "]", "+", "[", "0", "]", "*", "neg_scores", ".", "shape", "[", "0", "]", "\n", "preds", "=", "list", "(", "pos_scores", ".", "data", ".", "numpy", "(", ")", ")", "+", "list", "(", "neg_scores", ".", "data", ".", "numpy", "(", ")", ")", "\n", "roc", "=", "roc_auc_score", "(", "labels", ",", "preds", ")", "\n", "ap", "=", "average_precision_score", "(", "labels", ",", "preds", ")", "\n", "metrics", "=", "{", "'loss'", ":", "loss", ",", "'roc'", ":", "roc", ",", "'ap'", ":", "ap", "}", "\n", "\n", "assert", "not", "torch", ".", "isnan", "(", "loss", ")", ".", "any", "(", ")", "\n", "if", "self", ".", "lambda_rec", ":", "\n", "            ", "idx", "=", "data", "[", "'idx_all'", "]", "\n", "recon", "=", "self", ".", "decode", "(", "embeddings", ",", "data", "[", "'adj_train_dec'", "]", ",", "idx", ")", "## NOTE : adj", "\n", "assert", "not", "torch", ".", "isnan", "(", "recon", ")", ".", "any", "(", ")", "\n", "if", "self", ".", "num_dec_layers", "==", "self", ".", "num_layers", ":", "\n", "                ", "target", "=", "data", "[", "'features'", "]", "[", "idx", "]", "\n", "", "elif", "self", ".", "num_dec_layers", "==", "self", ".", "num_layers", "-", "1", ":", "\n", "                ", "target", "=", "self", ".", "encoder", ".", "features", "[", "0", "]", ".", "detach", "(", ")", "[", "idx", "]", "\n", "", "else", ":", "\n", "                ", "raise", "RuntimeError", "(", "'num_dec_layers only support 1,2'", ")", "\n", "", "loss_rec", "=", "self", ".", "lambda_rec", "*", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "recon", "[", "idx", "]", ",", "target", ",", "reduction", "=", "'mean'", ")", "\n", "assert", "not", "torch", ".", "isnan", "(", "loss_rec", ")", ".", "any", "(", ")", "\n", "loss_lp", "=", "loss", "*", "self", ".", "lambda_lp", "\n", "metrics", ".", "update", "(", "{", "'loss'", ":", "loss_lp", "+", "loss_rec", ",", "'loss_rec'", ":", "loss_rec", ",", "'loss_lp'", ":", "loss_lp", "}", ")", "\n", "\n", "", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.init_metric_dict": [[220, 222], ["None"], "methods", ["None"], ["", "def", "init_metric_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "'roc'", ":", "-", "1", ",", "'ap'", ":", "-", "1", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.base_models.LPModel.has_improved": [[223, 225], ["None"], "methods", ["None"], ["", "def", "has_improved", "(", "self", ",", "m1", ",", "m2", ")", ":", "\n", "        ", "return", "0.5", "*", "(", "m1", "[", "'roc'", "]", "+", "m1", "[", "'ap'", "]", ")", "<", "0.5", "*", "(", "m2", "[", "'roc'", "]", "+", "m2", "[", "'ap'", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Encoder.__init__": [[17, 20], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ",", "use_cnn", "=", "None", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Encoder.encode": [[21, 34], ["range", "encoders.Encoder.layers.forward", "len", "encoders.Encoder.layers[].forward", "encoders.Encoder.features.append"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "self", ".", "features", "=", "[", "]", "\n", "if", "self", ".", "encode_graph", ":", "\n", "            ", "input", "=", "(", "x", ",", "adj", ")", "\n", "xx", "=", "input", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "layers", ")", ")", ":", "\n", "                ", "out", "=", "self", ".", "layers", "[", "i", "]", ".", "forward", "(", "xx", ")", "\n", "self", ".", "features", ".", "append", "(", "out", "[", "0", "]", ")", "\n", "xx", "=", "out", "\n", "", "output", ",", "_", "=", "xx", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "layers", ".", "forward", "(", "x", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.MLP.__init__": [[40, 51], ["encoders.Encoder.__init__", "layers.layers.get_dim_act", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "len", "layers.layers.Linear"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "assert", "args", ".", "num_layers", ">", "0", "\n", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "layers", ".", "append", "(", "Linear", "(", "in_dim", ",", "out_dim", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "encode_graph", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.HNN.__init__": [[58, 73], ["encoders.Encoder.__init__", "layers.get_dim_act_curv", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "getattr", "hnn_layers.append", "len", "layers.HNNLayer"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.get_dim_act_curv"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "HNN", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "assert", "args", ".", "num_layers", ">", "1", "\n", "dims", ",", "acts", ",", "_", "=", "hyp_layers", ".", "get_dim_act_curv", "(", "args", ")", "\n", "hnn_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "hnn_layers", ".", "append", "(", "\n", "hyp_layers", ".", "HNNLayer", "(", "\n", "self", ".", "manifold", ",", "in_dim", ",", "out_dim", ",", "self", ".", "c", ",", "self", ".", "c", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", "\n", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "hnn_layers", ")", "\n", "self", ".", "encode_graph", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.HNN.encode": [[74, 77], ["encoders.HNN.manifold.proj", "encoders.Encoder.encode", "encoders.HNN.manifold.expmap0", "encoders.HNN.manifold.proj_tan0"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj_tan0"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x_hyp", "=", "self", ".", "manifold", ".", "proj", "(", "self", ".", "manifold", ".", "expmap0", "(", "self", ".", "manifold", ".", "proj_tan0", "(", "x", ",", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "super", "(", "HNN", ",", "self", ")", ".", "encode", "(", "x_hyp", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.GCN.__init__": [[83, 94], ["encoders.Encoder.__init__", "layers.layers.get_dim_act", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "gc_layers.append", "len", "layers.layers.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "assert", "args", ".", "num_layers", ">", "0", "\n", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "gc_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "gc_layers", ".", "append", "(", "GraphConvolution", "(", "in_dim", ",", "out_dim", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "gc_layers", ")", "\n", "self", ".", "encode_graph", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.HGCAE.__init__": [[100, 123], ["encoders.Encoder.__init__", "layers.get_dim_act_curv", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "getattr", "encoders.HGCAE.curvatures.append", "encoders.HGCAE.curvatures.append", "hgc_layers.append", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "len", "layers.HyperbolicGraphConvolution", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.get_dim_act_curv"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "#, use_cnn", "\n", "        ", "super", "(", "HGCAE", ",", "self", ")", ".", "__init__", "(", "c", ",", "use_cnn", "=", "True", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "assert", "args", ".", "num_layers", ">", "0", "\n", "dims", ",", "acts", ",", "self", ".", "curvatures", "=", "hyp_layers", ".", "get_dim_act_curv", "(", "args", ")", "\n", "if", "args", ".", "c_trainable", "==", "1", ":", "\n", "            ", "self", ".", "curvatures", ".", "append", "(", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "args", ".", "c", "]", ")", ".", "to", "(", "args", ".", "device", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "curvatures", ".", "append", "(", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", ".", "to", "(", "args", ".", "device", ")", ")", "\n", "", "hgc_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "            ", "c_in", ",", "c_out", "=", "self", ".", "curvatures", "[", "i", "]", ",", "self", ".", "curvatures", "[", "i", "+", "1", "]", "\n", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "\n", "hgc_layers", ".", "append", "(", "\n", "hyp_layers", ".", "HyperbolicGraphConvolution", "(", "\n", "self", ".", "manifold", ",", "in_dim", ",", "out_dim", ",", "c_in", ",", "c_out", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ",", "args", ".", "use_att", ",", "\n", "att_type", "=", "args", ".", "att_type", ",", "att_logit", "=", "args", ".", "att_logit", ",", "beta", "=", "args", ".", "beta", "\n", ")", "\n", ")", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "hgc_layers", ")", "\n", "self", ".", "encode_graph", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.HGCAE.encode": [[124, 129], ["encoders.HGCAE.manifold.proj", "encoders.Encoder.encode", "encoders.HGCAE.manifold.expmap0", "encoders.HGCAE.manifold.proj_tan0"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj_tan0"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "x_hyp", "=", "self", ".", "manifold", ".", "proj", "(", "\n", "self", ".", "manifold", ".", "expmap0", "(", "self", ".", "manifold", ".", "proj_tan0", "(", "x", ",", "self", ".", "curvatures", "[", "0", "]", ")", ",", "c", "=", "self", ".", "curvatures", "[", "0", "]", ")", ",", "\n", "c", "=", "self", ".", "curvatures", "[", "0", "]", ")", "\n", "return", "super", "(", "HGCAE", ",", "self", ")", ".", "encode", "(", "x_hyp", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.__init__": [[136, 164], ["encoders.Encoder.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "manifolds.ManifoldParameter", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "getattr", "encoders.Shallow.manifold.init_weights", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "list", "layers.layers.get_dim_act", "range", "numpy.load", "range", "layers.append", "len", "layers.layers.Linear"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.init_weights", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ")", ":", "\n", "        ", "super", "(", "Shallow", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "self", ".", "use_feats", "=", "args", ".", "use_feats", "\n", "weights", "=", "torch", ".", "Tensor", "(", "args", ".", "n_nodes", ",", "args", ".", "dim", ")", "\n", "if", "not", "args", ".", "pretrained_embeddings", ":", "\n", "            ", "weights", "=", "self", ".", "manifold", ".", "init_weights", "(", "weights", ",", "self", ".", "c", ")", "\n", "trainable", "=", "True", "\n", "", "else", ":", "\n", "            ", "weights", "=", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "args", ".", "pretrained_embeddings", ")", ")", "\n", "assert", "weights", ".", "shape", "[", "0", "]", "==", "args", ".", "n_nodes", ",", "\"The embeddings you passed seem to be for another dataset.\"", "\n", "trainable", "=", "False", "\n", "", "self", ".", "lt", "=", "manifolds", ".", "ManifoldParameter", "(", "weights", ",", "trainable", ",", "self", ".", "manifold", ",", "self", ".", "c", ")", "\n", "self", ".", "all_nodes", "=", "torch", ".", "LongTensor", "(", "list", "(", "range", "(", "args", ".", "n_nodes", ")", ")", ")", "\n", "layers", "=", "[", "]", "\n", "if", "args", ".", "pretrained_embeddings", "is", "not", "None", "and", "args", ".", "num_layers", ">", "0", ":", "\n", "# MLP layers after pre-trained embeddings", "\n", "            ", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "if", "self", ".", "use_feats", ":", "\n", "                ", "dims", "[", "0", "]", "=", "args", ".", "feat_dim", "+", "weights", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "dims", "[", "0", "]", "=", "weights", ".", "shape", "[", "1", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "                ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "layers", ".", "append", "(", "Linear", "(", "in_dim", ",", "out_dim", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "encode_graph", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode": [[165, 170], ["encoders.Encoder.encode", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.encoders.Shallow.encode"], ["", "def", "encode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "lt", "[", "self", ".", "all_nodes", ",", ":", "]", "\n", "if", "self", ".", "use_feats", ":", "\n", "            ", "h", "=", "torch", ".", "cat", "(", "(", "h", ",", "x", ")", ",", "1", ")", "\n", "", "return", "super", "(", "Shallow", ",", "self", ")", ".", "encode", "(", "h", ",", "adj", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.Decoder.__init__": [[15, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.Decoder.classify": [[19, 31], ["decoders.Decoder.classifier.forward", "decoders.Decoder.classifier.forward"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "classify", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "'''\n        output\n        - nc : probs \n        - rec : input_feat\n        '''", "\n", "if", "self", ".", "decode_adj", ":", "\n", "            ", "input", "=", "(", "x", ",", "adj", ")", "\n", "output", ",", "_", "=", "self", ".", "classifier", ".", "forward", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "classifier", ".", "forward", "(", "x", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.Decoder.decode": [[33, 45], ["decoders.Decoder.decoder.forward", "decoders.Decoder.decoder.forward"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.HypAct.forward"], ["", "def", "decode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "'''\n        output\n        - nc : probs \n        - rec : input_feat\n        '''", "\n", "if", "self", ".", "decode_adj", ":", "\n", "            ", "input", "=", "(", "x", ",", "adj", ")", "\n", "output", ",", "_", "=", "self", ".", "decoder", ".", "forward", "(", "input", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "decoder", ".", "forward", "(", "x", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.GCNDecoder.__init__": [[53, 73], ["decoders.Decoder.__init__", "layers.layers.GraphConvolution", "layers.layers.get_dim_act", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "RuntimeError", "gc_layers.append", "len", "layers.layers.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.layers.get_dim_act"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ",", "task", ")", ":", "\n", "        ", "super", "(", "GCNDecoder", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "if", "task", "==", "'nc'", ":", "\n", "            ", "act", "=", "lambda", "x", ":", "x", "\n", "self", ".", "classifier", "=", "GraphConvolution", "(", "args", ".", "dim", ",", "args", ".", "n_classes", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", "\n", "", "elif", "task", "==", "'rec'", ":", "\n", "            ", "assert", "args", ".", "num_layers", ">", "0", "\n", "dims", ",", "acts", "=", "get_dim_act", "(", "args", ")", "\n", "dims", "=", "dims", "[", ":", ":", "-", "1", "]", "\n", "# acts = acts[::-1]", "\n", "acts", "=", "acts", "[", ":", ":", "-", "1", "]", "[", ":", "-", "1", "]", "+", "[", "lambda", "x", ":", "x", "]", "# Last layer without act", "\n", "gc_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dims", ")", "-", "1", ")", ":", "\n", "                ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "gc_layers", ".", "append", "(", "GraphConvolution", "(", "in_dim", ",", "out_dim", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ")", ")", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "gc_layers", ")", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Unknown task'", ")", "\n", "", "self", ".", "decode_adj", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.LinearDecoder.__init__": [[80, 88], ["decoders.Decoder.__init__", "layers.layers.Linear", "getattr"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ",", "task", ")", ":", "\n", "        ", "super", "(", "LinearDecoder", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "self", ".", "input_dim", "=", "args", ".", "dim", "\n", "self", ".", "output_dim", "=", "args", ".", "n_classes", "\n", "self", ".", "bias", "=", "args", ".", "bias", "\n", "self", ".", "classifier", "=", "Linear", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "args", ".", "dropout", ",", "lambda", "x", ":", "x", ",", "self", ".", "bias", ")", "\n", "self", ".", "decode_adj", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.LinearDecoder.classify": [[89, 92], ["decoders.LinearDecoder.manifold.logmap0", "decoders.Decoder.classify"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.classify"], ["", "def", "classify", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "super", "(", "LinearDecoder", ",", "self", ")", ".", "classify", "(", "h", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.LinearDecoder.extra_repr": [[93, 96], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'in_features={}, out_features={}, bias={}, c={}'", ".", "format", "(", "\n", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "self", ".", "bias", ",", "self", ".", "c", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HGCAEDecoder.__init__": [[105, 155], ["decoders.Decoder.__init__", "getattr", "layers.layers.Linear", "layers.get_dim_act_curv", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "RuntimeError", "len", "hgc_layers.append", "layers.HyperbolicGraphConvolution", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "curv.to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.get_dim_act_curv"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ",", "task", ")", ":", "\n", "        ", "super", "(", "HGCAEDecoder", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "if", "task", "==", "'nc'", ":", "\n", "            ", "self", ".", "input_dim", "=", "args", ".", "dim", "\n", "self", ".", "output_dim", "=", "args", ".", "n_classes", "\n", "self", ".", "bias", "=", "args", ".", "bias", "\n", "self", ".", "classifier", "=", "Linear", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "args", ".", "dropout", ",", "lambda", "x", ":", "x", ",", "self", ".", "bias", ")", "\n", "self", ".", "decode_adj", "=", "False", "\n", "\n", "", "elif", "task", "==", "'rec'", ":", "\n", "            ", "assert", "args", ".", "num_layers", ">", "0", "\n", "\n", "dims", ",", "acts", ",", "_", "=", "hyp_layers", ".", "get_dim_act_curv", "(", "args", ")", "\n", "dims", "=", "dims", "[", ":", ":", "-", "1", "]", "\n", "acts", "=", "acts", "[", ":", ":", "-", "1", "]", "[", ":", "-", "1", "]", "+", "[", "lambda", "x", ":", "x", "]", "# Last layer without act", "\n", "self", ".", "curvatures", "=", "self", ".", "c", "[", ":", ":", "-", "1", "]", "\n", "\n", "encdec_share_curvature", "=", "False", "\n", "if", "not", "encdec_share_curvature", "and", "args", ".", "num_layers", "==", "args", ".", "num_dec_layers", ":", "# do not share and enc-dec mirror-shape", "\n", "                ", "num_c", "=", "len", "(", "self", ".", "curvatures", ")", "\n", "self", ".", "curvatures", "=", "self", ".", "curvatures", "[", ":", "1", "]", "\n", "if", "args", ".", "c_trainable", "==", "1", ":", "\n", "                    ", "self", ".", "curvatures", "+=", "[", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "args", ".", "c", "]", ")", ".", "to", "(", "args", ".", "device", ")", ")", "]", "*", "(", "num_c", "-", "1", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "curvatures", "+=", "[", "torch", ".", "tensor", "(", "[", "args", ".", "c", "]", ")", "]", "*", "(", "num_c", "-", "1", ")", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "                        ", "self", ".", "curvatures", "=", "[", "curv", ".", "to", "(", "args", ".", "device", ")", "for", "curv", "in", "self", ".", "curvatures", "]", "\n", "\n", "\n", "", "", "", "self", ".", "curvatures", "=", "self", ".", "curvatures", "[", ":", "-", "1", "]", "+", "[", "None", "]", "\n", "\n", "\n", "hgc_layers", "=", "[", "]", "\n", "num_dec_layers", "=", "args", ".", "num_dec_layers", "\n", "for", "i", "in", "range", "(", "num_dec_layers", ")", ":", "\n", "                ", "c_in", ",", "c_out", "=", "self", ".", "curvatures", "[", "i", "]", ",", "self", ".", "curvatures", "[", "i", "+", "1", "]", "\n", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "hgc_layers", ".", "append", "(", "\n", "hyp_layers", ".", "HyperbolicGraphConvolution", "(", "\n", "self", ".", "manifold", ",", "in_dim", ",", "out_dim", ",", "c_in", ",", "c_out", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", ",", "args", ".", "use_att", ",", "\n", "att_type", "=", "args", ".", "att_type", ",", "att_logit", "=", "args", ".", "att_logit", ",", "beta", "=", "args", ".", "beta", ",", "decode", "=", "True", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "hgc_layers", ")", "\n", "self", ".", "decode_adj", "=", "True", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Unknown task'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HGCAEDecoder.classify": [[157, 160], ["decoders.HGCAEDecoder.manifold.logmap0", "decoders.Decoder.classify"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.classify"], ["", "", "def", "classify", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "super", "(", "HGCAEDecoder", ",", "self", ")", ".", "classify", "(", "h", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HGCAEDecoder.decode": [[161, 164], ["decoders.Decoder.decode"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode"], ["", "def", "decode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "output", "=", "super", "(", "HGCAEDecoder", ",", "self", ")", ".", "decode", "(", "x", ",", "adj", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.__init__": [[170, 213], ["decoders.Decoder.__init__", "getattr", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "layers.layers.Linear", "layers.get_dim_act_curv", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "RuntimeError", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "hnn_layers.append", "layers.HNNLayer"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__", "home.repos.pwc.inspect_result.junhocho_HGCAE.layers.hyp_layers.get_dim_act_curv"], ["def", "__init__", "(", "self", ",", "c", ",", "args", ",", "task", ")", ":", "\n", "        ", "super", "(", "HNNDecoder", ",", "self", ")", ".", "__init__", "(", "c", ")", "\n", "self", ".", "manifold", "=", "getattr", "(", "manifolds", ",", "args", ".", "manifold", ")", "(", ")", "\n", "\n", "\n", "\n", "if", "not", "args", ".", "cuda", "==", "-", "1", ":", "\n", "            ", "c", "=", "torch", ".", "Tensor", "(", "[", "c", "]", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "", "if", "task", "==", "'nc'", ":", "\n", "            ", "self", ".", "input_dim", "=", "args", ".", "dim", "\n", "self", ".", "output_dim", "=", "args", ".", "n_classes", "\n", "self", ".", "bias", "=", "args", ".", "bias", "\n", "self", ".", "classifier", "=", "Linear", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "args", ".", "dropout", ",", "lambda", "x", ":", "x", ",", "self", ".", "bias", ")", "\n", "self", ".", "decode_adj", "=", "False", "\n", "\n", "", "elif", "task", "==", "'rec'", ":", "\n", "            ", "assert", "args", ".", "num_layers", ">", "0", "\n", "\n", "dims", ",", "acts", ",", "_", "=", "hyp_layers", ".", "get_dim_act_curv", "(", "args", ")", "\n", "dims", "=", "dims", "[", ":", ":", "-", "1", "]", "\n", "acts", "=", "acts", "[", ":", ":", "-", "1", "]", "[", ":", "-", "1", "]", "+", "[", "lambda", "x", ":", "x", "]", "# Last layer without act", "\n", "\n", "encdec_share_curvature", "=", "False", "\n", "\n", "hnn_layers", "=", "[", "]", "\n", "num_dec_layers", "=", "args", ".", "num_dec_layers", "\n", "for", "i", "in", "range", "(", "num_dec_layers", ")", ":", "\n", "                ", "in_dim", ",", "out_dim", "=", "dims", "[", "i", "]", ",", "dims", "[", "i", "+", "1", "]", "\n", "act", "=", "acts", "[", "i", "]", "\n", "c_in", "=", "c", "\n", "c_out", "=", "None", "if", "(", "i", "==", "num_dec_layers", "-", "1", ")", "else", "c", "\n", "\n", "hnn_layers", ".", "append", "(", "\n", "hyp_layers", ".", "HNNLayer", "(", "\n", "self", ".", "manifold", ",", "in_dim", ",", "out_dim", ",", "c_in", ",", "c_out", ",", "args", ".", "dropout", ",", "act", ",", "args", ".", "bias", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "*", "hnn_layers", ")", "\n", "self", ".", "decode_adj", "=", "False", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Unknown task'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.classify": [[214, 217], ["decoders.HNNDecoder.manifold.logmap0", "decoders.Decoder.classify"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.classify"], ["", "", "def", "classify", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "h", "=", "self", ".", "manifold", ".", "logmap0", "(", "x", ",", "c", "=", "self", ".", "c", ")", "\n", "return", "super", "(", "HNNDecoder", ",", "self", ")", ".", "classify", "(", "h", ",", "adj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode": [[218, 221], ["decoders.Decoder.decode"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.models.decoders.HNNDecoder.decode"], ["", "def", "decode", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "        ", "output", "=", "super", "(", "HNNDecoder", ",", "self", ")", ".", "decode", "(", "x", ",", "adj", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.__init__": [[13, 16], ["manifolds.base.Manifold.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Euclidean", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'Euclidean'", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.normalize": [[17, 21], ["p.size", "torch.renorm"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "p", ")", ":", "\n", "        ", "dim", "=", "p", ".", "size", "(", "-", "1", ")", "\n", "p_norm", "=", "torch", ".", "renorm", "(", "p", ",", "2", ",", "0", ",", "1.", ")", "\n", "return", "p_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.sqdist": [[22, 24], ["None"], "methods", ["None"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "return", "(", "p1", "-", "p2", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.egrad2rgrad": [[25, 27], ["None"], "methods", ["None"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "return", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.proj": [[28, 30], ["None"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.proj_tan": [[31, 33], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.proj_tan0": [[34, 36], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.expmap": [[37, 39], ["None"], "methods", ["None"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "+", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.logmap": [[40, 42], ["None"], "methods", ["None"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "return", "p2", "-", "p1", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.expmap0": [[43, 45], ["None"], "methods", ["None"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.logmap0": [[46, 48], ["None"], "methods", ["None"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.mobius_add": [[49, 51], ["None"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "return", "x", "+", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.mobius_matvec": [[52, 55], ["m.transpose"], "methods", ["None"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "mx", "=", "x", "@", "m", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.init_weights": [[56, 59], ["w.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "w", ".", "data", ".", "uniform_", "(", "-", "irange", ",", "irange", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.inner": [[60, 64], ["None"], "methods", ["None"], ["", "def", "inner", "(", "self", ",", "p", ",", "c", ",", "u", ",", "v", "=", "None", ",", "keepdim", "=", "False", ")", ":", "\n", "        ", "if", "v", "is", "None", ":", "\n", "            ", "v", "=", "u", "\n", "", "return", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.euclidean.Euclidean.ptransp": [[65, 67], ["None"], "methods", ["None"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "v", ",", "c", ")", ":", "\n", "        ", "return", "v", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.__init__": [[11, 14], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "10e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.sqdist": [[15, 18], ["None"], "methods", ["None"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "\"\"\"Squared distance between pairs of points.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.egrad2rgrad": [[19, 22], ["None"], "methods", ["None"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "\"\"\"Converts Euclidean Gradient to Riemannian Gradients.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.proj": [[23, 26], ["None"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects point p on the manifold.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.proj_tan": [[27, 30], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects u on the tangent space of p.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.proj_tan0": [[31, 34], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Projects u on the tangent space of the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.expmap": [[35, 38], ["None"], "methods", ["None"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Exponential map of u at point p.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.logmap": [[39, 42], ["None"], "methods", ["None"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "\"\"\"Logarithmic map of point p1 at point p2.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.expmap0": [[43, 46], ["None"], "methods", ["None"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Exponential map of u at the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.logmap0": [[47, 50], ["None"], "methods", ["None"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "\"\"\"Logarithmic map of point p at the origin.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.mobius_add": [[51, 54], ["None"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"Adds points x and y.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.mobius_matvec": [[55, 58], ["None"], "methods", ["None"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "\"\"\"Performs hyperboic martrix-vector multiplication.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.init_weights": [[59, 62], ["None"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "\"\"\"Initializes random weigths on the manifold.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.inner": [[63, 66], ["None"], "methods", ["None"], ["", "def", "inner", "(", "self", ",", "p", ",", "c", ",", "u", ",", "v", "=", "None", ")", ":", "\n", "        ", "\"\"\"Inner product for tangent vectors at point x.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.Manifold.ptransp": [[67, 70], ["None"], "methods", ["None"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "\"\"\"Parallel transport of u from x to y.\"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.ManifoldParameter.__new__": [[76, 78], ["torch.nn.Parameter.__new__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.ManifoldParameter.__new__"], ["def", "__new__", "(", "cls", ",", "data", ",", "requires_grad", ",", "manifold", ",", "c", ")", ":", "\n", "        ", "return", "Parameter", ".", "__new__", "(", "cls", ",", "data", ",", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.ManifoldParameter.__init__": [[79, 82], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "data", ",", "requires_grad", ",", "manifold", ",", "c", ")", ":", "\n", "        ", "self", ".", "c", "=", "c", "\n", "self", ".", "manifold", "=", "manifold", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.ManifoldParameter.__repr__": [[83, 85], ["torch.nn.Parameter.__repr__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.base.ManifoldParameter.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'{} Parameter containing:\\n'", ".", "format", "(", "self", ".", "manifold", ".", "name", ")", "+", "super", "(", "Parameter", ",", "self", ")", ".", "__repr__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__": [[20, 25], ["manifolds.base.Manifold.__init__"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.__init__"], ["def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", "PoincareBall", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'PoincareBall'", "\n", "self", ".", "min_norm", "=", "1e-15", "\n", "self", ".", "eps", "=", "{", "torch", ".", "float32", ":", "4e-3", ",", "torch", ".", "float64", ":", "1e-5", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.sqdist": [[26, 33], ["utils.math_utils.artanh", "poincare.PoincareBall.mobius_add().norm", "poincare.PoincareBall.mobius_add"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.artanh", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_add"], ["", "def", "sqdist", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "dist_c", "=", "artanh", "(", "\n", "sqrt_c", "*", "self", ".", "mobius_add", "(", "-", "p1", ",", "p2", ",", "c", ",", "dim", "=", "-", "1", ")", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "False", ")", "\n", ")", "\n", "dist", "=", "dist_c", "*", "2", "/", "sqrt_c", "\n", "return", "dist", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x": [[34, 37], ["torch.sum", "x.data.pow"], "methods", ["None"], ["", "def", "_lambda_x", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "x_sqnorm", "=", "torch", ".", "sum", "(", "x", ".", "data", ".", "pow", "(", "2", ")", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "2", "/", "(", "1.", "-", "c", "*", "x_sqnorm", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.egrad2rgrad": [[38, 42], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall.pow"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "egrad2rgrad", "(", "self", ",", "p", ",", "dp", ",", "c", ")", ":", "\n", "        ", "lambda_p", "=", "self", ".", "_lambda_x", "(", "p", ",", "c", ")", "\n", "dp", "/=", "lambda_p", ".", "pow", "(", "2", ")", "\n", "return", "dp", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj": [[43, 49], ["torch.clamp_min", "torch.where", "x.norm"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "norm", "=", "torch", ".", "clamp_min", "(", "x", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ",", "self", ".", "min_norm", ")", "\n", "maxnorm", "=", "(", "1", "-", "self", ".", "eps", "[", "x", ".", "dtype", "]", ")", "/", "(", "c", "**", "0.5", ")", "\n", "cond", "=", "norm", ">", "maxnorm", "\n", "projected", "=", "x", "/", "norm", "*", "maxnorm", "\n", "return", "torch", ".", "where", "(", "cond", ",", "projected", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj_tan": [[50, 52], ["None"], "methods", ["None"], ["", "def", "proj_tan", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.proj_tan0": [[53, 55], ["None"], "methods", ["None"], ["", "def", "proj_tan0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap": [[56, 66], ["u.norm().clamp_min", "poincare.PoincareBall.mobius_add", "u.norm", "utils.math_utils.tanh", "poincare.PoincareBall._lambda_x"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.tanh", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "expmap", "(", "self", ",", "u", ",", "p", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "u_norm", "=", "u", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "second_term", "=", "(", "\n", "tanh", "(", "sqrt_c", "/", "2", "*", "self", ".", "_lambda_x", "(", "p", ",", "c", ")", "*", "u_norm", ")", "\n", "*", "u", "\n", "/", "(", "sqrt_c", "*", "u_norm", ")", "\n", ")", "\n", "gamma_1", "=", "self", ".", "mobius_add", "(", "p", ",", "second_term", ",", "c", ")", "\n", "return", "gamma_1", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap": [[67, 73], ["poincare.PoincareBall.mobius_add", "poincare.PoincareBall.norm().clamp_min", "poincare.PoincareBall._lambda_x", "poincare.PoincareBall.norm", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_add", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.artanh"], ["", "def", "logmap", "(", "self", ",", "p1", ",", "p2", ",", "c", ")", ":", "\n", "        ", "sub", "=", "self", ".", "mobius_add", "(", "-", "p1", ",", "p2", ",", "c", ")", "\n", "sub_norm", "=", "sub", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "lam", "=", "self", ".", "_lambda_x", "(", "p1", ",", "c", ")", "\n", "sqrt_c", "=", "c", "**", "0.5", "\n", "return", "2", "/", "sqrt_c", "/", "lam", "*", "artanh", "(", "sqrt_c", "*", "sub_norm", ")", "*", "sub", "/", "sub_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0": [[74, 79], ["torch.clamp_min", "u.norm", "utils.math_utils.tanh"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.tanh"], ["", "def", "expmap0", "(", "self", ",", "u", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "u_norm", "=", "torch", ".", "clamp_min", "(", "u", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ",", "self", ".", "min_norm", ")", "\n", "gamma_1", "=", "tanh", "(", "sqrt_c", "*", "u_norm", ")", "*", "u", "/", "(", "sqrt_c", "*", "u_norm", ")", "\n", "return", "gamma_1", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0": [[80, 85], ["p.norm().clamp_min", "p.norm", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.artanh"], ["", "def", "logmap0", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "p_norm", "=", "p", ".", "norm", "(", "dim", "=", "-", "1", ",", "p", "=", "2", ",", "keepdim", "=", "True", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "scale", "=", "1.", "/", "sqrt_c", "*", "artanh", "(", "sqrt_c", "*", "p_norm", ")", "/", "p_norm", "\n", "return", "scale", "*", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_add": [[86, 93], ["x.pow().sum", "y.pow().sum", "denom.clamp_min", "x.pow", "y.pow"], "methods", ["None"], ["", "def", "mobius_add", "(", "self", ",", "x", ",", "y", ",", "c", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "x2", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "y2", "=", "y", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "xy", "=", "(", "x", "*", "y", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "num", "=", "(", "1", "+", "2", "*", "c", "*", "xy", "+", "c", "*", "y2", ")", "*", "x", "+", "(", "1", "-", "c", "*", "x2", ")", "*", "y", "\n", "denom", "=", "1", "+", "2", "*", "c", "*", "xy", "+", "c", "**", "2", "*", "x2", "*", "y2", "\n", "return", "num", "/", "denom", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.mobius_matvec": [[94, 104], ["x.norm().clamp_min", "mx.norm().clamp_min", "torch.zeros", "torch.where", "m.transpose", "x.norm", "mx.norm", "utils.math_utils.tanh", "utils.math_utils.artanh"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.tanh", "home.repos.pwc.inspect_result.junhocho_HGCAE.utils.math_utils.artanh"], ["", "def", "mobius_matvec", "(", "self", ",", "m", ",", "x", ",", "c", ")", ":", "\n", "        ", "sqrt_c", "=", "c", "**", "0.5", "\n", "x_norm", "=", "x", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "mx", "=", "x", "@", "m", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "mx_norm", "=", "mx", ".", "norm", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ",", "p", "=", "2", ")", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "res_c", "=", "tanh", "(", "mx_norm", "/", "x_norm", "*", "artanh", "(", "sqrt_c", "*", "x_norm", ")", ")", "*", "mx", "/", "(", "mx_norm", "*", "sqrt_c", ")", "\n", "cond", "=", "(", "mx", "==", "0", ")", ".", "prod", "(", "-", "1", ",", "keepdim", "=", "True", ",", "dtype", "=", "torch", ".", "uint8", ")", "\n", "res_0", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "res_c", ".", "dtype", ",", "device", "=", "res_c", ".", "device", ")", "\n", "res", "=", "torch", ".", "where", "(", "cond", ",", "res_0", ",", "res_c", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.init_weights": [[105, 108], ["w.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ",", "w", ",", "c", ",", "irange", "=", "1e-5", ")", ":", "\n", "        ", "w", ".", "data", ".", "uniform_", "(", "-", "irange", ",", "irange", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._gyration": [[109, 120], ["u.pow().sum", "v.pow().sum", "u.pow", "v.pow", "d.clamp_min"], "methods", ["None"], ["", "def", "_gyration", "(", "self", ",", "u", ",", "v", ",", "w", ",", "c", ",", "dim", ":", "int", "=", "-", "1", ")", ":", "\n", "        ", "u2", "=", "u", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "v2", "=", "v", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "uv", "=", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "uw", "=", "(", "u", "*", "w", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "vw", "=", "(", "v", "*", "w", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "c2", "=", "c", "**", "2", "\n", "a", "=", "-", "c2", "*", "uw", "*", "v2", "+", "c", "*", "vw", "+", "2", "*", "c2", "*", "uv", "*", "vw", "\n", "b", "=", "-", "c2", "*", "vw", "*", "u2", "-", "c", "*", "uw", "\n", "d", "=", "1", "+", "2", "*", "c", "*", "uv", "+", "c2", "*", "u2", "*", "v2", "\n", "return", "w", "+", "2", "*", "(", "a", "*", "u", "+", "b", "*", "v", ")", "/", "d", ".", "clamp_min", "(", "self", ".", "min_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.inner": [[121, 126], ["poincare.PoincareBall._lambda_x"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x"], ["", "def", "inner", "(", "self", ",", "x", ",", "c", ",", "u", ",", "v", "=", "None", ",", "keepdim", "=", "False", ",", "dim", "=", "-", "1", ")", ":", "\n", "        ", "if", "v", "is", "None", ":", "\n", "            ", "v", "=", "u", "\n", "", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "return", "lambda_x", "**", "2", "*", "(", "u", "*", "v", ")", ".", "sum", "(", "dim", "=", "dim", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.ptransp": [[127, 131], ["poincare.PoincareBall._lambda_x", "poincare.PoincareBall._lambda_x", "poincare.PoincareBall._gyration"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._lambda_x", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall._gyration"], ["", "def", "ptransp", "(", "self", ",", "x", ",", "y", ",", "u", ",", "c", ")", ":", "\n", "        ", "lambda_x", "=", "self", ".", "_lambda_x", "(", "x", ",", "c", ")", "\n", "lambda_y", "=", "self", ".", "_lambda_x", "(", "y", ",", "c", ")", "\n", "return", "self", ".", "_gyration", "(", "y", ",", "-", "x", ",", "u", ",", "c", ")", "*", "lambda_x", "/", "lambda_y", "\n", "\n"]], "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.activation": [[132, 137], ["act", "poincare.PoincareBall.logmap0", "poincare.PoincareBall.expmap0"], "methods", ["home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.logmap0", "home.repos.pwc.inspect_result.junhocho_HGCAE.manifolds.poincare.PoincareBall.expmap0"], ["", "def", "activation", "(", "self", ",", "x", ",", "act", ",", "c_in", ",", "c_out", ")", ":", "\n", "        ", "x_act", "=", "act", "(", "x", ")", "\n", "x_prev", "=", "self", ".", "logmap0", "(", "x_act", ",", "c_in", ")", "\n", "x_next", "=", "self", ".", "expmap0", "(", "x_prev", ",", "c_out", ")", "\n", "return", "x_next", "\n", "", "", ""]]}