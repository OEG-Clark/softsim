{"home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.os_checking": [[23, 27], ["platform.system().upper", "torch.multiprocessing.freeze_support", "torch.multiprocessing.freeze_support", "torch.multiprocessing.freeze_support", "print", "platform.system", "platform.system"], "function", ["None"], ["def", "os_checking", "(", ")", ":", "\n", "    ", "if", "platform", ".", "system", "(", ")", ".", "upper", "(", ")", "==", "'WINDOWS'", ":", "\n", "        ", "torch", ".", "multiprocessing", ".", "freeze_support", "(", ")", "\n", "print", "(", "platform", ".", "system", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.load_model": [[28, 44], ["model.state_dict", "print", "model.state_dict.update", "model.load_state_dict", "print", "state_dict.items", "k.startswith", "state_dict.items", "k.startswith", "k.split", "k.split"], "function", ["None"], ["", "", "def", "load_model", "(", "model", ",", "state_dict", ",", "view", "=", "None", ")", ":", "\n", "    ", "own_state", "=", "model", ".", "state_dict", "(", ")", "\n", "\n", "# 1. filter out unnecessary keys", "\n", "view_num", "=", "view", "[", "1", "]", "\n", "temp", "=", "{", "(", "'feature_extractor_%s.'", "%", "view_num", ")", "+", "'.'", ".", "join", "(", "k", ".", "split", "(", "'.'", ")", "[", "1", ":", "]", ")", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "if", "k", ".", "startswith", "(", "'features'", ")", "}", "\n", "state_dict", "=", "{", "**", "temp", ",", "**", "{", "(", "'classifier_v%s.'", "%", "view_num", ")", "+", "'.'", ".", "join", "(", "k", ".", "split", "(", "'.'", ")", "[", "1", ":", "]", ")", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "if", "k", ".", "startswith", "(", "'classifier'", ")", "}", "}", "\n", "\n", "print", "(", "\"==> Loading the following parameters...\"", ")", "\n", "for", "k", "in", "state_dict", ":", "\n", "        ", "print", "(", "k", ")", "\n", "# 2. overwrite entries in the existing state dict", "\n", "", "own_state", ".", "update", "(", "state_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "own_state", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.get_parser": [[45, 87], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults"], "function", ["None"], ["", "def", "get_parser", "(", "add_help", "=", "False", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "add_help", "=", "add_help", ",", "\n", "description", "=", "'Multiview classification on the elbow fracture dataset'", ")", "\n", "\n", "# region arguments yapf: disable", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "'-l'", ",", "\n", "default", "=", "0.0001", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "'Learning Rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "'-b'", ",", "\n", "default", "=", "64", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'batch_size'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "'-e'", ",", "\n", "default", "=", "30", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "'-d'", ",", "\n", "default", "=", "'data'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Data folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_folder'", ",", "'-wf'", ",", "\n", "default", "=", "'weights'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Trained weights folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoints_folder'", ",", "'-cf'", ",", "\n", "default", "=", "'checkpoints'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Trained checkpoints folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "'-pt'", ",", "\n", "default", "=", "'single-view'", ",", "\n", "choices", "=", "[", "\"single-view\"", ",", "\"\"", "]", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Use which kind of pretrained (from \"single-view\" / No pretrain (\"\"))'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_equal'", ",", "'-ee'", ",", "\n", "default", "=", "16", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "\"Epoch number after which sampling prob's. are 1/N w.r.t. CL\"", ")", "\n", "\n", "parser", ".", "set_defaults", "(", "print_log", "=", "False", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.main": [[88, 158], ["train-multiview-CL.os_checking", "train-multiview-CL.get_parser", "get_parser.parse_args", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "utils.datasets.DualViewDataset", "utils.datasets.DualViewDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "list", "print", "torch.device", "torch.device", "torch.device", "utils.models.DualViewVGG16", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "model.to.to", "torch.Adam", "range", "numpy.array", "np.array.argmax", "print", "os.path.join", "os.path.join", "shutil.copyfile", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "utils.datasets.DualViewDataset.get_stats().keys", "len", "parser.parse_args.pretrained.upper", "enumerate", "print", "model.to.parameters", "torch.utils.data.WeightedRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "train-multiview-CL.train", "train-multiview-CL.val", "utils.datasets.DualViewDataset.update_ps", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "os.path.join", "os.path.exists", "train-multiview-CL.load_model", "parser.parse_args.pretrained.upper", "utils.datasets.DualViewDataset.get_stats", "utils.datasets.DualViewDataset.get_ps", "len", "torch.load", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.os_checking", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.get_parser", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.train", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.val", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.update_ps", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.load_model", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.get_stats", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.get_ps"], ["", "def", "main", "(", ")", ":", "\n", "    ", "os_checking", "(", ")", "\n", "parser", "=", "get_parser", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "img_rows", ",", "img_cols", "=", "299", ",", "299", "\n", "end_epoch", "=", "args", ".", "num_epochs", "-", "1", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "weights_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "weights_folder", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "checkpoints_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "checkpoints_folder", ")", "\n", "\n", "######################################## Data ########################################", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "train_dataset", "=", "DualViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "phase", "=", "'train'", ",", "use_transformer", "=", "True", ",", "\n", "curriculum", "=", "'knowledge'", ",", "epochs_to_equal_prob", "=", "args", ".", "epoch_equal", ")", "\n", "# Sampling-based CL, train_loader defined in Epochs for loop", "\n", "val_dataset", "=", "DualViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "phase", "=", "'val'", ",", "use_transformer", "=", "False", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ")", "\n", "\n", "class_names", "=", "list", "(", "train_dataset", ".", "get_stats", "(", ")", ".", "keys", "(", ")", ")", "\n", "print", "(", "'Class names:'", ",", "class_names", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "######################################## Model ########################################", "\n", "model", "=", "DualViewVGG16", "(", "len", "(", "class_names", ")", ",", "pretrained", "=", "True", ")", "# pretrained on ImageNet", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_v1", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_v2", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "# homogeneous transfer learning", "\n", "if", "args", ".", "pretrained", ".", "upper", "(", ")", "==", "'SINGLE-VIEW'", ":", "\n", "        ", "for", "i", ",", "view", "in", "enumerate", "(", "[", "'frontal'", ",", "'lateral'", "]", ")", ":", "\n", "            ", "model_sv_fn", "=", "os", ".", "path", ".", "join", "(", "args", ".", "weights_folder", ",", "'%s.pth'", "%", "(", "view", ")", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "model_sv_fn", ")", ",", "\"Using pretrained single view model. However, single view model does not exist!\"", "\n", "load_model", "(", "model", ",", "torch", ".", "load", "(", "model_sv_fn", ")", "[", "'net'", "]", ",", "view", "=", "'V%d'", "%", "(", "i", "+", "1", ")", ")", "\n", "", "print", "(", "'\\n********** Finished loading pretrained single-view models **********\\n'", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "val_auc_list", "=", "[", "]", "\n", "\n", "######################################## Training ########################################", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs", ")", ":", "\n", "        ", "sampler", "=", "WeightedRandomSampler", "(", "weights", "=", "train_dataset", ".", "get_ps", "(", ")", ",", "\n", "num_samples", "=", "len", "(", "train_dataset", ")", ",", "\n", "replacement", "=", "False", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "sampler", "=", "sampler", ",", "\n", "num_workers", "=", "4", ")", "\n", "\n", "train", "(", "model", ",", "optimizer", ",", "criterion", ",", "criterion_v1", ",", "criterion_v2", ",", "train_loader", ",", "device", ",", "epoch", ",", "end_epoch", ")", "\n", "val", "(", "model", ",", "val_loader", ",", "device", ",", "val_auc_list", ",", "args", ".", "checkpoints_folder", ",", "epoch", ",", "end_epoch", ")", "\n", "train_dataset", ".", "update_ps", "(", ")", "\n", "\n", "", "auc_list", "=", "np", ".", "array", "(", "val_auc_list", ")", "\n", "index", "=", "auc_list", ".", "argmax", "(", ")", "\n", "print", "(", "'==> Epoch %s is the best model'", "%", "(", "index", "+", "1", ")", ")", "\n", "best_model_fn", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_folder", ",", "'ckpt_%d.pth'", "%", "(", "index", "+", "1", ")", ")", "\n", "if", "args", ".", "pretrained", "==", "''", ":", "\n", "        ", "best_weights_copy_to", "=", "'multiview_CL.pth'", "\n", "", "elif", "args", ".", "pretrained", ".", "upper", "(", ")", "==", "'SINGLE-VIEW'", ":", "\n", "        ", "best_weights_copy_to", "=", "'multiview_TL_CL.pth'", "\n", "", "best_weights_copy_to", "=", "os", ".", "path", ".", "join", "(", "args", ".", "weights_folder", ",", "best_weights_copy_to", ")", "\n", "\n", "shutil", ".", "copyfile", "(", "best_model_fn", ",", "best_weights_copy_to", ")", "\n", "print", "(", "'\\nModel saved at %s'", "%", "(", "best_weights_copy_to", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.train": [[159, 176], ["model.train", "enumerate", "optimizer.zero_grad", "model", "targets.long().resize_.squeeze().long().to", "loss.backward", "optimizer.step", "print", "x1.to", "x2.to", "len", "targets.long().resize_.long().resize_", "criterion_v2", "targets.long().resize_.squeeze().long", "targets.long().resize_.long().resize_", "criterion", "criterion_v1", "targets.long().resize_.long", "len", "loss.item", "targets.long().resize_.squeeze", "targets.long().resize_.long"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.train"], ["", "def", "train", "(", "model", ",", "optimizer", ",", "criterion", ",", "criterion_v1", ",", "criterion_v2", ",", "train_loader", ",", "device", ",", "epoch", ",", "end_epoch", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "x1", ",", "x2", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", ",", "pred1", ",", "pred2", "=", "model", "(", "x1", ".", "to", "(", "device", ")", ",", "x2", ".", "to", "(", "device", ")", ")", "\n", "targets", "=", "targets", ".", "squeeze", "(", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "try", ":", "\n", "            ", "num_targets", "=", "len", "(", "targets", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "except", "TypeError", ":", "\n", "            ", "num_targets", "=", "1", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "+", "criterion_v1", "(", "pred1", ",", "targets", ")", "+", "criterion_v2", "(", "pred2", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'******* Epoch [%3d/%3d], Phase: Training, Batch [%4d/%4d], loss = %.8f *******'", "%", "\n", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "batch_idx", "+", "1", ",", "len", "(", "train_loader", ")", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-multiview-CL.val": [[177, 213], ["model.eval", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "print", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cat.cpu().numpy", "torch.cat.detach().cpu().numpy", "utils.evaluator.getAUC", "val_auc_list.append", "model.state_dict", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model", "targets.float().resize_.squeeze().long().to", "torch.Softmax", "nn.Softmax.to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "x1.to", "x2.to", "len", "targets.float().resize_.float().resize_", "torch.cat.cpu", "torch.cat.detach().cpu", "targets.float().resize_.squeeze().long", "nn.Softmax.", "targets.float().resize_.float().resize_", "targets.float().resize_.float", "len", "torch.cat.detach", "targets.float().resize_.squeeze", "targets.float().resize_.float"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.evaluator.getAUC"], ["", "", "def", "val", "(", "model", ",", "val_loader", ",", "device", ",", "val_auc_list", ",", "weights_folder", ",", "epoch", ",", "end_epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "y_true", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "y_score", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "x1", ",", "x2", ",", "targets", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "outputs", ",", "_1", ",", "_2", "=", "model", "(", "x1", ".", "to", "(", "device", ")", ",", "x2", ".", "to", "(", "device", ")", ")", "\n", "targets", "=", "targets", ".", "squeeze", "(", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "m", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "outputs", "=", "m", "(", "outputs", ")", ".", "to", "(", "device", ")", "\n", "try", ":", "\n", "                ", "num_targets", "=", "len", "(", "targets", ")", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "except", "TypeError", ":", "\n", "                ", "num_targets", "=", "1", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "y_true", "=", "torch", ".", "cat", "(", "(", "y_true", ",", "targets", ")", ",", "0", ")", "\n", "y_score", "=", "torch", ".", "cat", "(", "(", "y_score", ",", "outputs", ")", ",", "0", ")", "\n", "print", "(", "'******* Epoch [%3d/%3d], Phase: Validation, Batch [%4d/%4d] *******'", "%", "\n", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "batch_idx", "+", "1", ",", "len", "(", "val_loader", ")", ")", ")", "\n", "\n", "", "y_true", "=", "y_true", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "y_score", "=", "y_score", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "auc", "=", "getAUC", "(", "y_true", ",", "y_score", ",", "'multi-class'", ")", "\n", "val_auc_list", ".", "append", "(", "auc", ")", "\n", "\n", "", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'auc'", ":", "auc", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "\n", "print", "(", "'\\n******* Epoch [%3d/%3d], Validation AUC: %.5f *******\\n'", "%", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "auc", ")", ")", "\n", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "weights_folder", ",", "'ckpt_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.os_checking": [[22, 26], ["platform.system().upper", "torch.multiprocessing.freeze_support", "torch.multiprocessing.freeze_support", "print", "platform.system", "platform.system"], "function", ["None"], ["def", "os_checking", "(", ")", ":", "\n", "    ", "if", "platform", ".", "system", "(", ")", ".", "upper", "(", ")", "==", "'WINDOWS'", ":", "\n", "        ", "torch", ".", "multiprocessing", ".", "freeze_support", "(", ")", "\n", "print", "(", "platform", ".", "system", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.get_parser": [[27, 55], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults"], "function", ["None"], ["", "", "def", "get_parser", "(", "add_help", "=", "False", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "add_help", "=", "add_help", ",", "\n", "description", "=", "'Multi/single view classification on the elbow fracture dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "'-b'", ",", "\n", "default", "=", "16", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'batch_size'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "'-d'", ",", "\n", "default", "=", "'data'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Data folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_folder'", ",", "'-wf'", ",", "\n", "default", "=", "'weights'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Trained weights folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_fn'", ",", "'-wn'", ",", "\n", "default", "=", "'multiview_TL_CL.pth'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Weigth filename'", ")", "\n", "parser", ".", "add_argument", "(", "'--view'", ",", "'-v'", ",", "\n", "default", "=", "'multi'", ",", "\n", "choices", "=", "[", "'multi'", ",", "'frontal'", ",", "'lateral'", "]", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'What view'", ")", "\n", "\n", "parser", ".", "set_defaults", "(", "print_log", "=", "False", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.main": [[56, 97], ["test.os_checking", "test.get_parser", "get_parser.parse_args", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "list", "print", "torch.device", "torch.device", "models.vgg16.load_state_dict", "print", "models.vgg16.to", "print", "print", "utils.datasets.DualViewDataset", "utils.datasets.DualViewDataset", "utils.datasets.DualViewDataset", "utils.datasets.SingleViewDataset", "utils.datasets.SingleViewDataset", "utils.datasets.SingleViewDataset", "utils.datasets.SingleViewDataset.get_stats().keys", "utils.models.DualViewVGG16", "torchvision.models.vgg16", "torch.Linear", "test.test", "torch.cuda.is_available", "torch.cuda.is_available", "len", "len", "torch.load", "torch.load", "os.path.join", "utils.datasets.SingleViewDataset.get_stats", "os.path.join"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.os_checking", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.get_parser", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.test", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.get_stats"], ["", "def", "main", "(", ")", ":", "\n", "    ", "os_checking", "(", ")", "\n", "parser", "=", "get_parser", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "img_rows", ",", "img_cols", "=", "299", ",", "299", "\n", "\n", "######################################## Data ########################################", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "if", "args", ".", "view", "==", "'multi'", ":", "\n", "        ", "train_dataset", "=", "DualViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "phase", "=", "'train'", ",", "use_transformer", "=", "False", ")", "\n", "val_dataset", "=", "DualViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "phase", "=", "'val'", ",", "use_transformer", "=", "False", ")", "\n", "test_dataset", "=", "DualViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "phase", "=", "'test'", ",", "use_transformer", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "train_dataset", "=", "SingleViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "'train'", ",", "args", ".", "view", ",", "use_transformer", "=", "False", ")", "\n", "val_dataset", "=", "SingleViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "'val'", ",", "args", ".", "view", ",", "use_transformer", "=", "False", ")", "\n", "test_dataset", "=", "SingleViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "'test'", ",", "args", ".", "view", ",", "use_transformer", "=", "False", ")", "\n", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ")", "\n", "\n", "class_names", "=", "list", "(", "test_dataset", ".", "get_stats", "(", ")", ".", "keys", "(", ")", ")", "\n", "print", "(", "'Class names:'", ",", "class_names", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "######################################## Model ########################################", "\n", "if", "args", ".", "view", "==", "'multi'", ":", "\n", "        ", "model", "=", "DualViewVGG16", "(", "len", "(", "class_names", ")", ",", "pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "models", ".", "vgg16", "(", ")", "\n", "model", ".", "classifier", "[", "6", "]", "=", "nn", ".", "Linear", "(", "model", ".", "classifier", "[", "6", "]", ".", "in_features", ",", "len", "(", "class_names", ")", ")", "\n", "\n", "", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "weights_folder", ",", "args", ".", "weights_fn", ")", ")", "[", "'net'", "]", ")", "\n", "print", "(", "'\\n==> Model %s loaded'", "%", "os", ".", "path", ".", "join", "(", "args", ".", "weights_folder", ",", "args", ".", "weights_fn", ")", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "print", "(", "'==> Start testing...\\n'", ")", "\n", "print", "(", "\"==> acc, balanced acc, mean AUC, binary task acc, binary task auc\"", ")", "\n", "for", "phase", ",", "dataloader", "in", "{", "\"train\"", ":", "train_loader", ",", "\"val\"", ":", "val_loader", ",", "\"test\"", ":", "test_loader", "}", ".", "items", "(", ")", ":", "\n", "        ", "test", "(", "model", ",", "phase", ",", "args", ".", "view", ",", "dataloader", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.test": [[98, 132], ["model.eval", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cat.cpu().numpy", "torch.cat.detach().cpu().numpy", "test.evaluate", "print", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "targets.float().resize_.squeeze().long().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.mean", "numpy.mean", "model", "model", "len", "targets.float().resize_.float().resize_", "torch.cat.cpu", "torch.cat.detach().cpu", "x1.to", "x2.to", "inputs.to", "targets.float().resize_.squeeze().long", "targets.float().resize_.float().resize_", "targets.float().resize_.float", "torch.cat.detach", "targets.float().resize_.squeeze", "targets.float().resize_.float"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.evaluate"], ["", "", "def", "test", "(", "model", ",", "phase", ",", "view", ",", "test_loader", ",", "device", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "y_true", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "y_score", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "if", "view", "==", "'multi'", ":", "\n", "                ", "x1", ",", "x2", ",", "targets", "=", "data", "\n", "outputs", ",", "_1", ",", "_2", "=", "model", "(", "x1", ".", "to", "(", "device", ")", ",", "x2", ".", "to", "(", "device", ")", ")", "\n", "", "else", ":", "\n", "                ", "inputs", ",", "targets", "=", "data", "\n", "outputs", "=", "model", "(", "inputs", ".", "to", "(", "device", ")", ")", "\n", "\n", "", "targets", "=", "targets", ".", "squeeze", "(", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "try", ":", "\n", "                ", "num_targets", "=", "len", "(", "targets", ")", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ",", "1", ")", "\n", "", "except", "TypeError", ":", "\n", "                ", "num_targets", "=", "1", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ",", "1", ")", "\n", "", "y_true", "=", "torch", ".", "cat", "(", "(", "y_true", ",", "targets", ")", ",", "0", ")", "\n", "y_score", "=", "torch", ".", "cat", "(", "(", "y_score", ",", "outputs", ")", ",", "0", ")", "\n", "\n", "", "y_true", "=", "y_true", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "y_score", "=", "y_score", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "performance", "=", "evaluate", "(", "y_true", ",", "y_score", ")", "\n", "\n", "# output", "\n", "output", "=", "'%.5f,'", "%", "performance", "[", "'dataset_acc'", "]", "\n", "output", "+=", "'%.5f,'", "%", "np", ".", "mean", "(", "performance", "[", "'cls_recalls'", "]", ")", "\n", "output", "+=", "'%.5f,'", "%", "np", ".", "mean", "(", "performance", "[", "'cls_aucs'", "]", ")", "\n", "output", "+=", "'%.5f,'", "%", "performance", "[", "'cls_accs'", "]", "[", "0", "]", "\n", "output", "+=", "'%.5f'", "%", "performance", "[", "'cls_aucs'", "]", "[", "0", "]", "\n", "print", "(", "\"%6s==>\"", "%", "(", "phase", ")", ",", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.test.evaluate": [[133, 156], ["numpy.zeros_like", "numpy.ones_like", "numpy.zeros_like", "range", "sklearn.metrics.accuracy_score", "range", "range", "numpy.argmax", "numpy.where", "numpy.where", "performance[].append", "performance[].append", "numpy.where", "numpy.where", "performance[].append", "sklearn.metrics.roc_auc_score", "sklearn.metrics.recall_score", "sklearn.metrics.accuracy_score"], "function", ["None"], ["", "", "def", "evaluate", "(", "y_true", ",", "y_score", ")", ":", "\n", "    ", "performance", "=", "{", "'cls_aucs'", ":", "[", "]", ",", "'cls_recalls'", ":", "[", "]", ",", "'cls_accs'", ":", "[", "]", ",", "'dataset_acc'", ":", "0", "}", "\n", "zero", "=", "np", ".", "zeros_like", "(", "y_true", ")", "\n", "one", "=", "np", ".", "ones_like", "(", "y_true", ")", "\n", "\n", "y_pre", "=", "np", ".", "zeros_like", "(", "y_true", ")", "\n", "for", "i", "in", "range", "(", "y_score", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "y_pre", "[", "i", "]", "=", "np", ".", "argmax", "(", "y_score", "[", "i", "]", ")", "\n", "", "performance", "[", "'dataset_acc'", "]", "=", "accuracy_score", "(", "y_true", ",", "y_pre", ")", "\n", "\n", "for", "i", "in", "range", "(", "y_score", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "y_true_binary", "=", "np", ".", "where", "(", "y_true", "==", "i", ",", "one", ",", "zero", ")", "\n", "y_score_binary", "=", "y_score", "[", ":", ",", "i", "]", "\n", "y_pred_binary", "=", "np", ".", "where", "(", "y_pre", "==", "i", ",", "one", ",", "zero", ")", "\n", "performance", "[", "'cls_aucs'", "]", ".", "append", "(", "roc_auc_score", "(", "y_true_binary", ",", "y_score_binary", ")", ")", "\n", "performance", "[", "'cls_recalls'", "]", ".", "append", "(", "recall_score", "(", "y_true_binary", ",", "y_pred_binary", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "y_score", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "y_true_binary", "=", "np", ".", "where", "(", "y_true", "==", "i", ",", "one", ",", "zero", ")", "\n", "y_pre_binary", "=", "np", ".", "where", "(", "y_pre", "==", "i", ",", "one", ",", "zero", ")", "\n", "performance", "[", "'cls_accs'", "]", ".", "append", "(", "accuracy_score", "(", "y_true_binary", ",", "y_pre_binary", ")", ")", "\n", "\n", "", "return", "performance", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.os_checking": [[22, 26], ["platform.system().upper", "torch.multiprocessing.freeze_support", "torch.multiprocessing.freeze_support", "torch.multiprocessing.freeze_support", "print", "platform.system", "platform.system"], "function", ["None"], ["def", "os_checking", "(", ")", ":", "\n", "    ", "if", "platform", ".", "system", "(", ")", ".", "upper", "(", ")", "==", "'WINDOWS'", ":", "\n", "        ", "torch", ".", "multiprocessing", ".", "freeze_support", "(", ")", "\n", "print", "(", "platform", ".", "system", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.get_parser": [[27, 64], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults"], "function", ["None"], ["", "", "def", "get_parser", "(", "add_help", "=", "False", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "add_help", "=", "add_help", ",", "\n", "description", "=", "'Single view classification on the elbow fracture dataset'", ")", "\n", "\n", "# region arguments yapf: disable", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "'-l'", ",", "\n", "default", "=", "0.0001", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "'Learning Rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "'-b'", ",", "\n", "default", "=", "64", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'batch_size'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "'-e'", ",", "\n", "default", "=", "30", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'Number of epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "'-d'", ",", "\n", "default", "=", "'data'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Data folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_folder'", ",", "'-wf'", ",", "\n", "default", "=", "'weights'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Trained weights folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoints_folder'", ",", "'-cf'", ",", "\n", "default", "=", "'checkpoints'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Trained checkpoints folder'", ")", "\n", "parser", ".", "add_argument", "(", "'--view'", ",", "'-v'", ",", "\n", "default", "=", "'frontal'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'What view'", ")", "\n", "\n", "parser", ".", "set_defaults", "(", "print_log", "=", "False", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.main": [[65, 115], ["train-singleview.os_checking", "train-singleview.get_parser", "get_parser.parse_args", "os.path.join", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "utils.datasets.SingleViewDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "utils.datasets.SingleViewDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "list", "print", "torch.device", "torch.device", "torch.device", "torchvision.models.vgg16", "torch.Linear", "torch.CrossEntropyLoss", "model.to.to", "torch.Adam", "range", "numpy.array", "np.array.argmax", "print", "os.path.join", "os.path.join", "shutil.copyfile", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "utils.datasets.SingleViewDataset.get_stats().keys", "len", "model.to.parameters", "train-singleview.train", "train-singleview.val", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.datasets.SingleViewDataset.get_stats"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.os_checking", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.get_parser", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.train", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.val", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.get_stats"], ["", "def", "main", "(", ")", ":", "\n", "    ", "os_checking", "(", ")", "\n", "parser", "=", "get_parser", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "img_rows", ",", "img_cols", "=", "299", ",", "299", "\n", "end_epoch", "=", "args", ".", "num_epochs", "-", "1", "\n", "\n", "args", ".", "checkpoints_folder", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_folder", ",", "args", ".", "view", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "weights_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "weights_folder", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "checkpoints_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "checkpoints_folder", ")", "\n", "\n", "######################################## Data ########################################", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "train_dataset", "=", "SingleViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "'train'", ",", "args", ".", "view", ",", "use_transformer", "=", "True", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", "\n", "val_dataset", "=", "SingleViewDataset", "(", "img_rows", ",", "img_cols", ",", "args", ".", "data_dir", ",", "'val'", ",", "args", ".", "view", ",", "use_transformer", "=", "False", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ")", "\n", "\n", "class_names", "=", "list", "(", "train_dataset", ".", "get_stats", "(", ")", ".", "keys", "(", ")", ")", "\n", "print", "(", "'Class names:'", ",", "class_names", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "######################################## Model ########################################", "\n", "model", "=", "models", ".", "vgg16", "(", "pretrained", "=", "True", ")", "# pretrained on ImageNet", "\n", "num_ftrs", "=", "model", ".", "classifier", "[", "6", "]", ".", "in_features", "\n", "model", ".", "classifier", "[", "6", "]", "=", "nn", ".", "Linear", "(", "num_ftrs", ",", "len", "(", "class_names", ")", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "val_auc_list", "=", "[", "]", "\n", "\n", "######################################## Training ########################################", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epochs", ")", ":", "\n", "        ", "train", "(", "model", ",", "optimizer", ",", "criterion", ",", "train_loader", ",", "device", ",", "epoch", ",", "end_epoch", ")", "\n", "val", "(", "model", ",", "val_loader", ",", "device", ",", "val_auc_list", ",", "args", ".", "checkpoints_folder", ",", "epoch", ",", "end_epoch", ")", "\n", "\n", "", "auc_list", "=", "np", ".", "array", "(", "val_auc_list", ")", "\n", "index", "=", "auc_list", ".", "argmax", "(", ")", "\n", "print", "(", "'==> Epoch %s is the best model'", "%", "(", "index", "+", "1", ")", ")", "\n", "best_model_fn", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoints_folder", ",", "'ckpt_%d.pth'", "%", "(", "index", "+", "1", ")", ")", "\n", "best_weights_copy_to", "=", "'%s.pth'", "%", "(", "args", ".", "view", ")", "\n", "best_weights_copy_to", "=", "os", ".", "path", ".", "join", "(", "args", ".", "weights_folder", ",", "best_weights_copy_to", ")", "\n", "\n", "shutil", ".", "copyfile", "(", "best_model_fn", ",", "best_weights_copy_to", ")", "\n", "print", "(", "'\\nModel saved at %s'", "%", "(", "best_weights_copy_to", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.train": [[116, 135], ["model.train", "enumerate", "optimizer.zero_grad", "model", "targets.long().resize_.squeeze().long().to", "criterion", "criterion.backward", "optimizer.step", "print", "inputs.to", "len", "targets.long().resize_.long().resize_", "targets.long().resize_.squeeze().long", "targets.long().resize_.long().resize_", "targets.long().resize_.long", "len", "criterion.item", "targets.long().resize_.squeeze", "targets.long().resize_.long"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.train"], ["", "def", "train", "(", "model", ",", "optimizer", ",", "criterion", ",", "train_loader", ",", "device", ",", "epoch", ",", "end_epoch", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ".", "to", "(", "device", ")", ")", "\n", "\n", "targets", "=", "targets", ".", "squeeze", "(", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "try", ":", "\n", "            ", "num_targets", "=", "len", "(", "targets", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "except", "TypeError", ":", "\n", "            ", "num_targets", "=", "1", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "resize_", "(", "num_targets", ")", "\n", "", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'******* Epoch [%3d/%3d], Phase: Training, Batch [%4d/%4d], loss = %.8f *******'", "%", "\n", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "batch_idx", "+", "1", ",", "len", "(", "train_loader", ")", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.None.train-singleview.val": [[136, 171], ["model.eval", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "print", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cat.cpu().numpy", "torch.cat.detach().cpu().numpy", "utils.evaluator.getAUC", "val_auc_list.append", "model.state_dict", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model", "targets.float().resize_.squeeze().long().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "inputs.to", "len", "targets.float().resize_.float().resize_", "torch.cat.cpu", "torch.cat.detach().cpu", "targets.float().resize_.squeeze().long", "targets.float().resize_.float().resize_", "targets.float().resize_.float", "len", "torch.cat.detach", "targets.float().resize_.squeeze", "targets.float().resize_.float"], "function", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.evaluator.getAUC"], ["", "", "def", "val", "(", "model", ",", "val_loader", ",", "device", ",", "val_auc_list", ",", "weights_folder", ",", "epoch", ",", "end_epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "y_true", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "y_score", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "outputs", "=", "model", "(", "inputs", ".", "to", "(", "device", ")", ")", "\n", "\n", "targets", "=", "targets", ".", "squeeze", "(", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "try", ":", "\n", "                ", "num_targets", "=", "len", "(", "targets", ")", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ",", "1", ")", "\n", "", "except", "TypeError", ":", "\n", "                ", "num_targets", "=", "1", "\n", "targets", "=", "targets", ".", "float", "(", ")", ".", "resize_", "(", "num_targets", ",", "1", ")", "\n", "", "y_true", "=", "torch", ".", "cat", "(", "(", "y_true", ",", "targets", ")", ",", "0", ")", "\n", "y_score", "=", "torch", ".", "cat", "(", "(", "y_score", ",", "outputs", ")", ",", "0", ")", "\n", "print", "(", "'******* Epoch [%3d/%3d], Phase: Validation, Batch [%4d/%4d] *******'", "%", "\n", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "batch_idx", "+", "1", ",", "len", "(", "val_loader", ")", ")", ")", "\n", "\n", "", "y_true", "=", "y_true", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "y_score", "=", "y_score", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "auc", "=", "getAUC", "(", "y_true", ",", "y_score", ",", "'multi-class'", ")", "\n", "val_auc_list", ".", "append", "(", "auc", ")", "\n", "\n", "", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'auc'", ":", "auc", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "}", "\n", "\n", "print", "(", "'\\n******* Epoch [%3d/%3d], Validation AUC: %.5f *******\\n'", "%", "(", "epoch", "+", "1", ",", "end_epoch", "+", "1", ",", "auc", ")", ")", "\n", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "weights_folder", ",", "'ckpt_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.models.DualViewVGG16.__init__": [[13, 38], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Flatten", "torch.Flatten", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torchvision.models.vgg16", "torchvision.models.vgg16", "torchvision.models.vgg16", "torchvision.models.vgg16", "torchvision.models.vgg16", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "DualViewVGG16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_extractor_1", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "features", "# pretrained on ImageNet", "\n", "self", ".", "feature_extractor_2", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "features", "# pretrained on ImageNet", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "7", ",", "7", ")", ")", "\n", "self", ".", "flat", "=", "nn", ".", "Flatten", "(", ")", "\n", "\n", "self", ".", "merge_feature", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "1024", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "ceil_mode", "=", "False", ")", "\n", "]", ")", "\n", "\n", "self", ".", "merge_classifier", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "classifier", "\n", "self", ".", "merge_classifier", "[", "6", "]", "=", "nn", ".", "Linear", "(", "self", ".", "merge_classifier", "[", "6", "]", ".", "in_features", ",", "num_classes", ")", "\n", "\n", "\n", "# branch for view1 and branch for view 2", "\n", "self", ".", "classifier_v1", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "classifier", "\n", "self", ".", "classifier_v2", "=", "models", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "classifier", "\n", "self", ".", "classifier_v1", "[", "6", "]", "=", "nn", ".", "Linear", "(", "self", ".", "classifier_v1", "[", "6", "]", ".", "in_features", ",", "num_classes", ")", "\n", "self", ".", "classifier_v2", "[", "6", "]", "=", "nn", ".", "Linear", "(", "self", ".", "classifier_v2", "[", "6", "]", ".", "in_features", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.models.DualViewVGG16.forward": [[40, 58], ["torchvision.models.DualViewVGG16.feature_extractor_1", "torchvision.models.DualViewVGG16.feature_extractor_2", "torchvision.models.DualViewVGG16.merge_feature", "torchvision.models.DualViewVGG16.avgpool", "torchvision.models.DualViewVGG16.flat", "torchvision.models.DualViewVGG16.avgpool", "torchvision.models.DualViewVGG16.flat", "torchvision.models.DualViewVGG16.avgpool", "torchvision.models.DualViewVGG16.flat", "torchvision.models.DualViewVGG16.classifier_v1", "torchvision.models.DualViewVGG16.classifier_v2", "torchvision.models.DualViewVGG16.merge_classifier", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "x1", "=", "self", ".", "feature_extractor_1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "feature_extractor_2", "(", "x2", ")", "\n", "x3", "=", "self", ".", "merge_feature", "(", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "1", ")", ")", "\n", "\n", "x1", "=", "self", ".", "avgpool", "(", "x1", ")", "\n", "x1", "=", "self", ".", "flat", "(", "x1", ")", "\n", "x2", "=", "self", ".", "avgpool", "(", "x2", ")", "\n", "x2", "=", "self", ".", "flat", "(", "x2", ")", "\n", "x3", "=", "self", ".", "avgpool", "(", "x3", ")", "\n", "x3", "=", "self", ".", "flat", "(", "x3", ")", "\n", "\n", "x1", "=", "self", ".", "classifier_v1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "classifier_v2", "(", "x2", ")", "\n", "\n", "x3", "=", "self", ".", "merge_classifier", "(", "x3", ")", "\n", "\n", "return", "x3", ",", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.evaluator.getAUC": [[4, 13], ["numpy.zeros_like", "numpy.ones_like", "range", "numpy.where", "sklearn.metrics.roc_auc_score"], "function", ["None"], ["def", "getAUC", "(", "y_true", ",", "y_score", ",", "task", ")", ":", "\n", "    ", "auc", "=", "0", "\n", "zero", "=", "np", ".", "zeros_like", "(", "y_true", ")", "\n", "one", "=", "np", ".", "ones_like", "(", "y_true", ")", "\n", "for", "i", "in", "range", "(", "y_score", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "y_true_binary", "=", "np", ".", "where", "(", "y_true", "==", "i", ",", "one", ",", "zero", ")", "\n", "y_score_binary", "=", "y_score", "[", ":", ",", "i", "]", "\n", "auc", "+=", "roc_auc_score", "(", "y_true_binary", ",", "y_score_binary", ")", "\n", "", "return", "auc", "/", "y_score", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.__init__": [[20, 95], ["torch.utils.data.Dataset.__init__", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "torchvision.Compose", "torchvision.Compose", "str", "numpy.array", "datasets.DualViewDataset._get_scalars_from_ps", "os.path.join", "os.path.join", "os.path.join", "int", "set", "sorted", "numpy.sum", "range", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomRotation", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "str", "stats.items", "datasets.DualViewDataset.both_hard_score.items", "len", "str"], "methods", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__init__", "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset._get_scalars_from_ps"], ["    ", "def", "__init__", "(", "self", ",", "\n", "img_h", ",", "\n", "img_w", ",", "\n", "path", ",", "\n", "phase", "=", "'train'", ",", "\n", "view1_dir", "=", "'frontal'", ",", "\n", "view2_dir", "=", "'lateral'", ",", "\n", "use_transformer", "=", "True", ",", "\n", "random_state", "=", "0", ",", "\n", "curriculum", "=", "None", ",", "\n", "epochs_to_equal_prob", "=", "16", ")", ":", "\n", "        ", "super", "(", "DualViewDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "##################################### NOTE #####################################", "\n", "# this class assumes that the filenames in view1 and view 2 are exactly the same", "\n", "\n", "view1_folder", "=", "os", ".", "path", ".", "join", "(", "path", ",", "phase", ",", "view1_dir", ")", "\n", "view2_folder", "=", "os", ".", "path", ".", "join", "(", "path", ",", "phase", ",", "view2_dir", ")", "\n", "labels", "=", "os", ".", "listdir", "(", "view1_folder", ")", "\n", "self", ".", "view1_image_list", "=", "[", "]", "\n", "self", ".", "view2_image_list", "=", "[", "]", "\n", "self", ".", "all_labels", "=", "[", "]", "\n", "self", ".", "curriculum", "=", "curriculum", "\n", "self", ".", "epochs_to_equal_prob", "=", "epochs_to_equal_prob", "\n", "\n", "for", "l", "in", "labels", ":", "\n", "            ", "imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "view1_folder", ",", "l", ")", ")", "\n", "self", ".", "view1_image_list", "+=", "[", "os", ".", "path", ".", "join", "(", "view1_folder", ",", "l", ",", "fn", ")", "for", "fn", "in", "imgs", "]", "\n", "self", ".", "view2_image_list", "+=", "[", "os", ".", "path", ".", "join", "(", "view2_folder", ",", "l", ",", "fn", ")", "for", "fn", "in", "imgs", "]", "\n", "self", ".", "all_labels", "+=", "[", "int", "(", "l", ")", "for", "_", "in", "range", "(", "len", "(", "imgs", ")", ")", "]", "\n", "\n", "", "if", "not", "use_transformer", ":", "\n", "            ", "self", ".", "transformer", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_h", ",", "img_w", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transformer", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomRotation", "(", "15", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "img_h", ",", "img_w", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "", "stats", "=", "{", "str", "(", "l", ")", ":", "0", "for", "l", "in", "set", "(", "self", ".", "all_labels", ")", "}", "\n", "for", "l", "in", "self", ".", "all_labels", ":", "\n", "            ", "stats", "[", "str", "(", "l", ")", "]", "+=", "1", "\n", "", "self", ".", "stats", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "sorted", "(", "stats", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "0", "]", ")", "}", "\n", "# print('Number of samples in all classes:', stats)", "\n", "\n", "if", "self", ".", "curriculum", "==", "'knowledge'", ":", "\n", "            ", "self", ".", "frontal_hard_score", "=", "{", "'0'", ":", "70", ",", "'1'", ":", "70", ",", "'2'", ":", "70", ",", "'3'", ":", "30", ",", "'4'", ":", "60", ",", "'5'", ":", "10", ",", "'6'", ":", "90", "}", "\n", "self", ".", "lateral_hard_score", "=", "{", "'0'", ":", "65", ",", "'1'", ":", "40", ",", "'2'", ":", "55", ",", "'3'", ":", "40", ",", "'4'", ":", "20", ",", "'5'", ":", "10", ",", "'6'", ":", "75", "}", "\n", "self", ".", "both_hard_score", "=", "{", "'0'", ":", "55", ",", "'1'", ":", "35", ",", "'2'", ":", "45", ",", "'3'", ":", "25", ",", "'4'", ":", "15", ",", "'5'", ":", "5", ",", "'6'", ":", "70", "}", "\n", "\n", "# # choose one of the three options below", "\n", "# ##### option 1 # both views' score ######", "\n", "# next 2 lines uses both views' score", "\n", "max_score", "=", "100", "\n", "self", ".", "easy_score", "=", "{", "k", ":", "max_score", "-", "v", "for", "k", ",", "v", "in", "self", ".", "both_hard_score", ".", "items", "(", ")", "if", "k", "in", "self", ".", "stats", "}", "\n", "\n", "###### option 2 # sum of lateral and frontal scores ######", "\n", "# # next 2 lines uses the sum of lateral and frontal scores", "\n", "# max_score = 200", "\n", "# self.easy_score = {k: max_score-(self.frontal_hard_score[k] + self.lateral_hard_score[k]) \\", "\n", "#                     for k in self.frontal_hard_score if k in self.stats}", "\n", "\n", "###### option 3 # ranking ######", "\n", "# self.easy_score = {'0': 1, '1': 3, '2': 2}", "\n", "\n", "self", ".", "qs", "=", "np", ".", "array", "(", "[", "self", ".", "easy_score", "[", "str", "(", "lab", ")", "]", "for", "lab", "in", "self", ".", "all_labels", "]", ")", "\n", "self", ".", "ps", "=", "self", ".", "qs", "/", "np", ".", "sum", "(", "self", ".", "qs", ")", "\n", "self", ".", "scalars", "=", "self", ".", "_get_scalars_from_ps", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.get_stats": [[96, 98], ["None"], "methods", ["None"], ["", "", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset._get_scalars_from_ps": [[99, 104], ["len", "numpy.array", "numpy.array", "pow"], "methods", ["None"], ["", "def", "_get_scalars_from_ps", "(", "self", ")", ":", "\n", "        ", "l", "=", "len", "(", "self", ".", "ps", ")", "\n", "final_ps", "=", "np", ".", "array", "(", "[", "1", "/", "l", "for", "_", "in", "self", ".", "ps", "]", ")", "\n", "times", "=", "final_ps", "/", "self", ".", "ps", "\n", "return", "np", ".", "array", "(", "[", "pow", "(", "s", ",", "1", "/", "self", ".", "epochs_to_equal_prob", ")", "for", "s", "in", "times", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.update_ps": [[105, 109], ["None"], "methods", ["None"], ["", "def", "update_ps", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "epochs_to_equal_prob", "!=", "0", ":", "\n", "            ", "self", ".", "ps", "=", "self", ".", "ps", "*", "self", ".", "scalars", "\n", "self", ".", "epochs_to_equal_prob", "-=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.get_ps": [[110, 112], ["None"], "methods", ["None"], ["", "", "def", "get_ps", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ps", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.__getitem__": [[113, 118], ["datasets.DualViewDataset.transformer", "datasets.DualViewDataset.transformer", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "view1_img", "=", "self", ".", "transformer", "(", "Image", ".", "open", "(", "self", ".", "view1_image_list", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "view2_img", "=", "self", ".", "transformer", "(", "Image", ".", "open", "(", "self", ".", "view2_image_list", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "label", "=", "self", ".", "all_labels", "[", "index", "]", "\n", "return", "view1_img", ",", "view2_img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.DualViewDataset.__len__": [[119, 121], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "all_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__init__": [[123, 162], ["torch.utils.data.Dataset.__init__", "os.path.join", "os.listdir", "torchvision.Compose", "torchvision.Compose", "str", "os.path.join", "int", "set", "sorted", "os.listdir", "range", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomRotation", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "str", "stats.items", "os.path.join", "len"], "methods", ["home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "img_h", ",", "\n", "img_w", ",", "\n", "path", ",", "\n", "phase", ",", "\n", "view", ",", "\n", "use_transformer", "=", "True", ",", "\n", "random_state", "=", "0", ",", ")", ":", "\n", "        ", "super", "(", "SingleViewDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "view", "=", "view", "\n", "data_folder", "=", "os", ".", "path", ".", "join", "(", "path", ",", "phase", ",", "view", ")", "\n", "labels", "=", "os", ".", "listdir", "(", "data_folder", ")", "\n", "self", ".", "image_list", "=", "[", "]", "\n", "self", ".", "all_labels", "=", "[", "]", "\n", "\n", "for", "l", "in", "labels", ":", "\n", "            ", "class_c_imgs", "=", "[", "os", ".", "path", ".", "join", "(", "data_folder", ",", "l", ",", "fn", ")", "for", "fn", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "l", ")", ")", "]", "\n", "self", ".", "image_list", "+=", "class_c_imgs", "\n", "self", ".", "all_labels", "+=", "[", "int", "(", "l", ")", "for", "_", "in", "range", "(", "len", "(", "class_c_imgs", ")", ")", "]", "\n", "\n", "", "if", "not", "use_transformer", ":", "\n", "            ", "self", ".", "transformer", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "img_h", ",", "img_w", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transformer", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomRotation", "(", "15", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "(", "img_h", ",", "img_w", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "", "stats", "=", "{", "str", "(", "l", ")", ":", "0", "for", "l", "in", "set", "(", "self", ".", "all_labels", ")", "}", "\n", "for", "l", "in", "self", ".", "all_labels", ":", "\n", "            ", "stats", "[", "str", "(", "l", ")", "]", "+=", "1", "\n", "", "self", ".", "stats", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "sorted", "(", "stats", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "0", "]", ")", "}", "\n", "# print('Number of samples in all classes:', stats)", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.get_stats": [[164, 166], ["None"], "methods", ["None"], ["", "def", "get_stats", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__getitem__": [[167, 171], ["datasets.SingleViewDataset.transformer", "PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", "=", "self", ".", "transformer", "(", "Image", ".", "open", "(", "self", ".", "image_list", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "label", "=", "self", ".", "all_labels", "[", "index", "]", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ljaiverson_multiview-curriculum.utils.datasets.SingleViewDataset.__len__": [[172, 174], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_list", ")", "\n", "", "", ""]]}