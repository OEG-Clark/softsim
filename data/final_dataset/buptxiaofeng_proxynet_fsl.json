{"home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.train.get_learning_rate": [[20, 25], ["None"], "function", ["None"], ["def", "get_learning_rate", "(", "optimizer", ")", ":", "\n", "    ", "lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "          ", "lr", "+=", "[", "param_group", "[", "'lr'", "]", "]", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.train.init_layer": [[26, 34], ["isinstance", "L.weight.data.normal_", "isinstance", "math.sqrt", "L.weight.data.fill_", "L.bias.data.fill_", "float"], "function", ["None"], ["", "def", "init_layer", "(", "L", ")", ":", "\n", "# Initialization using fan-in", "\n", "    ", "if", "isinstance", "(", "L", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "n", "=", "L", ".", "kernel_size", "[", "0", "]", "*", "L", ".", "kernel_size", "[", "1", "]", "*", "L", ".", "out_channels", "\n", "L", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "float", "(", "n", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "L", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "L", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "L", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.train.train": [[35, 123], ["wandb.init", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.models.proxynet.ProxyNet().cuda", "wandb.watch", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.CrossEntropyLoss().cuda", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.zeros().scatter_().float().cuda", "torch.zeros().scatter_().float().cuda", "torch.zeros().scatter_().float().cuda", "label.cuda.cuda", "range", "feat.dataloader.cub.CUB", "feat.dataloader.cub.CUB", "feat.dataloader.cub.CUB", "ProxyNet().cuda.parameters", "enumerate", "torch.optim.lr_scheduler.ReduceLROnPlateau.step", "print", "str", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.models.proxynet.ProxyNet", "int", "float", "torch.CrossEntropyLoss", "torch.arange", "torch.arange", "torch.arange", "torch.zeros().scatter_().float", "torch.zeros().scatter_().float", "torch.zeros().scatter_().float", "ProxyNet().cuda.train", "ProxyNet().cuda.", "nn.CrossEntropyLoss().cuda.", "ce.item", "torch.min", "torch.min", "torch.min", "numpy.sum", "ProxyNet().cuda.zero_grad", "ce.backward", "torch.optim.SGD.step", "train.get_learning_rate", "_.cuda", "print", "print", "evaluation.evaluation", "print", "wandb.log", "wandb.log", "str", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "range", "evaluation.evaluation", "label.cuda.unsqueeze", "float", "torch.save", "torch.save", "torch.save", "str", "torch.zeros", "torch.zeros", "torch.zeros", "ProxyNet().cuda.state_dict", "os.path.join", "str", "len", "numpy.sum", "label.cuda.max"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.train", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.item", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.get_learning_rate", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.evaluation", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.evaluation"], ["", "", "def", "train", "(", ")", ":", "\n", "    ", "wandb", ".", "init", "(", "project", "=", "\"proxynet_fsl\"", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "wandb", ".", "config", ".", "gpu_id", "\n", "\n", "save_name", "=", "str", "(", "wandb", ".", "config", ".", "model_type", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "dataset", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "num_shot", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "num_way", ")", "+", "\".pth\"", "\n", "\n", "train_set", "=", "None", "\n", "val_set", "=", "None", "\n", "test_set", "=", "None", "\n", "image_size", "=", "84", "\n", "if", "\"ResNet\"", "in", "wandb", ".", "config", ".", "model_type", ":", "\n", "        ", "image_size", "=", "224", "\n", "", "if", "wandb", ".", "config", ".", "dataset", "==", "\"CUB\"", ":", "\n", "        ", "train_set", "=", "CUB", "(", "setname", "=", "\"train\"", ",", "image_size", "=", "image_size", ",", "if_augmentation", "=", "wandb", ".", "config", ".", "if_augmentation", ")", "\n", "val_set", "=", "CUB", "(", "setname", "=", "'val'", ",", "image_size", "=", "image_size", ")", "\n", "test_set", "=", "CUB", "(", "setname", "=", "'test'", ",", "image_size", "=", "image_size", ")", "\n", "", "elif", "wandb", ".", "config", ".", "dataset", "==", "\"MiniImageNet\"", ":", "\n", "        ", "train_set", "=", "MiniImageNet", "(", "setname", "=", "\"train\"", ",", "image_size", "=", "image_size", ",", "if_augmentation", "=", "wandb", ".", "config", ".", "if_augmentation", ")", "\n", "val_set", "=", "MiniImageNet", "(", "setname", "=", "'val'", ",", "image_size", "=", "image_size", ")", "\n", "test_set", "=", "MiniImageNet", "(", "setname", "=", "'test'", ",", "image_size", "=", "image_size", ")", "\n", "", "else", ":", "\n", "        ", "raise", "(", "\"dataset parameter value error!\"", ")", "\n", "\n", "", "train_sampler", "=", "CategoriesSampler", "(", "train_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_train", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "train_loader", "=", "DataLoader", "(", "dataset", "=", "train_set", ",", "batch_sampler", "=", "train_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "val_sampler", "=", "CategoriesSampler", "(", "val_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_val", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "val_loader", "=", "DataLoader", "(", "dataset", "=", "val_set", ",", "batch_sampler", "=", "val_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "test_sampler", "=", "CategoriesSampler", "(", "test_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_test", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "test_loader", "=", "DataLoader", "(", "dataset", "=", "test_set", ",", "batch_sampler", "=", "test_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "\n", "proxynet", "=", "ProxyNet", "(", "model_type", "=", "wandb", ".", "config", ".", "model_type", ",", "num_shot", "=", "wandb", ".", "config", ".", "num_shot", ",", "num_way", "=", "wandb", ".", "config", ".", "num_way", ",", "num_query", "=", "wandb", ".", "config", ".", "num_query", ",", "proxy_type", "=", "wandb", ".", "config", ".", "proxy_type", ",", "classifier", "=", "wandb", ".", "config", ".", "classifier", ")", ".", "cuda", "(", ")", "\n", "wandb", ".", "watch", "(", "proxynet", ")", "\n", "#proxynet.apply(init_layer)", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "proxynet", ".", "parameters", "(", ")", ",", "lr", "=", "wandb", ".", "config", ".", "sgd_lr", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "\"max\"", ",", "patience", "=", "int", "(", "wandb", ".", "config", ".", "patience", ")", ",", "factor", "=", "float", "(", "wandb", ".", "config", ".", "reduce_factor", ")", ",", "min_lr", "=", "0.0001", ")", "\n", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "label", "=", "torch", ".", "arange", "(", "wandb", ".", "config", ".", "num_way", ")", ".", "repeat", "(", "wandb", ".", "config", ".", "num_query", ")", "\n", "#one hot encode", "\n", "one_hot_label", "=", "torch", ".", "zeros", "(", "len", "(", "label", ")", ",", "label", ".", "max", "(", ")", "+", "1", ")", ".", "scatter_", "(", "1", ",", "label", ".", "unsqueeze", "(", "1", ")", ",", "1.", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "max_acc", "=", "0", "\n", "max_test_acc", "=", "0", "\n", "train_accuracy", "=", "0", "\n", "for", "epoch", "in", "range", "(", "wandb", ".", "config", ".", "num_epochs", ")", ":", "\n", "        ", "total_rewards", "=", "0", "\n", "total_loss", "=", "0", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "train_loader", ",", "1", ")", ":", "\n", "            ", "proxynet", ".", "train", "(", ")", "\n", "data", ",", "_", "=", "[", "_", ".", "cuda", "(", ")", "for", "_", "in", "batch", "]", "\n", "p", "=", "wandb", ".", "config", ".", "num_shot", "*", "wandb", ".", "config", ".", "num_way", "\n", "support", ",", "query", "=", "data", "[", ":", "p", "]", ",", "data", "[", "p", ":", "]", "\n", "relation_score", "=", "proxynet", "(", "support", ",", "query", ")", "\n", "\n", "loss", "=", "ce", "(", "-", "1", "*", "relation_score", ",", "label", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predict_label", "=", "torch", ".", "min", "(", "relation_score", ",", "1", ")", "\n", "rewards", "=", "[", "1", "if", "predict_label", "[", "j", "]", "==", "label", "[", "j", "]", "else", "0", "for", "j", "in", "range", "(", "label", ".", "shape", "[", "0", "]", ")", "]", "\n", "total_rewards", "+=", "numpy", ".", "sum", "(", "rewards", ")", "\n", "\n", "proxynet", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "episode", "=", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", "\n", "if", "episode", "%", "100", "==", "0", ":", "\n", "                ", "print", "(", "\"episode:\"", ",", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", ",", "\"ce loss\"", ",", "total_loss", "/", "float", "(", "i", "+", "1", ")", ")", "\n", "train_accuracy", "=", "numpy", ".", "sum", "(", "total_rewards", ")", "/", "1.0", "/", "wandb", ".", "config", ".", "num_query", "/", "wandb", ".", "config", ".", "num_way", "/", "wandb", ".", "config", ".", "num_train", "\n", "print", "(", "'Train Accuracy of the model on the train :{:.2f} %'", ".", "format", "(", "100", "*", "train_accuracy", ")", ")", "\n", "", "threshold", "=", "30000", "\n", "if", "wandb", ".", "config", ".", "dataset", "==", "\"CUB\"", ":", "\n", "                ", "threshold", "=", "10000", "\n", "", "if", "(", "episode", "%", "100", "==", "0", "and", "episode", ">", "threshold", ")", "or", "episode", "%", "1000", "==", "0", ":", "\n", "                ", "acc", ",", "_", "=", "evaluation", "(", "wandb", ".", "config", ",", "proxynet", ",", "val_loader", ",", "mode", "=", "\"val\"", ")", "\n", "if", "acc", ">", "max_acc", ":", "\n", "                    ", "max_acc", "=", "acc", "\n", "test_acc", ",", "_", ",", "=", "evaluation", "(", "wandb", ".", "config", ",", "proxynet", ",", "test_loader", ",", "mode", "=", "\"test\"", ")", "\n", "max_test_acc", "=", "test_acc", "\n", "if", "wandb", ".", "config", ".", "save_best", ":", "\n", "                        ", "torch", ".", "save", "(", "proxynet", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "\"weights\"", ",", "save_name", ")", ")", "\n", "", "", "print", "(", "\"episode:\"", ",", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", ",", "\"max val acc:\"", ",", "max_acc", ",", "\" max test acc:\"", ",", "max_test_acc", ")", "\n", "wandb", ".", "log", "(", "{", "\"val_acc\"", ":", "acc", "}", ")", "\n", "wandb", ".", "log", "(", "{", "\"max_test_acc\"", ":", "max_test_acc", "}", ")", "\n", "\n", "", "", "scheduler", ".", "step", "(", "max_acc", ")", "\n", "print", "(", "\"sgd learning rate:\"", ",", "get_learning_rate", "(", "optimizer", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.download.copy_cub_images": [[7, 15], ["glob.glob", "os.path.join", "glob.glob", "shutil.copyfile", "image.split", "os.path.join"], "function", ["None"], ["def", "copy_cub_images", "(", "base_path", ")", ":", "\n", "    ", "dir_list", "=", "glob", ".", "glob", "(", "\"CUB_200_2011/images/*\"", ")", "\n", "for", "dir_item", "in", "dir_list", ":", "\n", "        ", "src_path", "=", "os", ".", "path", ".", "join", "(", "dir_item", ",", "\"*.jpg\"", ")", "\n", "image_list", "=", "glob", ".", "glob", "(", "src_path", ")", "\n", "for", "image", "in", "image_list", ":", "\n", "            ", "image_name", "=", "image", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "copyfile", "(", "image", ",", "os", ".", "path", ".", "join", "(", "\"images\"", ",", "image_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.get_learning_rate": [[21, 26], ["None"], "function", ["None"], ["def", "get_learning_rate", "(", "optimizer", ")", ":", "\n", "    ", "lr", "=", "[", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "          ", "lr", "+=", "[", "param_group", "[", "'lr'", "]", "]", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.init_layer": [[27, 35], ["isinstance", "L.weight.data.normal_", "isinstance", "math.sqrt", "L.weight.data.fill_", "L.bias.data.fill_", "float"], "function", ["None"], ["", "def", "init_layer", "(", "L", ")", ":", "\n", "# Initialization using fan-in", "\n", "    ", "if", "isinstance", "(", "L", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "n", "=", "L", ".", "kernel_size", "[", "0", "]", "*", "L", ".", "kernel_size", "[", "1", "]", "*", "L", ".", "out_channels", "\n", "L", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "float", "(", "n", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "L", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "L", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "L", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.train": [[36, 124], ["wandb.init", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.dataloader.samplers.CategoriesSampler", "torch.utils.data.DataLoader", "feat.models.ctmnet.CTMNet().cuda", "wandb.watch", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.CrossEntropyLoss().cuda", "torch.arange().repeat", "torch.arange().repeat", "torch.arange().repeat", "torch.zeros().scatter_().float().cuda", "torch.zeros().scatter_().float().cuda", "torch.zeros().scatter_().float().cuda", "label.cuda.cuda", "range", "feat.dataloader.cub.CUB", "feat.dataloader.cub.CUB", "feat.dataloader.cub.CUB", "CTMNet().cuda.parameters", "enumerate", "torch.optim.lr_scheduler.ReduceLROnPlateau.step", "print", "str", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.dataloader.mini_imagenet.MiniImageNet", "feat.models.ctmnet.CTMNet", "int", "float", "torch.CrossEntropyLoss", "torch.arange", "torch.arange", "torch.arange", "torch.zeros().scatter_().float", "torch.zeros().scatter_().float", "torch.zeros().scatter_().float", "CTMNet().cuda.train", "CTMNet().cuda.", "nn.CrossEntropyLoss().cuda.", "ce.item", "torch.min", "torch.min", "torch.min", "numpy.sum", "CTMNet().cuda.zero_grad", "ce.backward", "torch.optim.SGD.step", "ctmtrain.get_learning_rate", "_.cuda", "print", "print", "evaluation.evaluation", "print", "wandb.log", "str", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "range", "evaluation.evaluation", "label.cuda.unsqueeze", "float", "torch.save", "torch.save", "torch.save", "str", "torch.zeros", "torch.zeros", "torch.zeros", "CTMNet().cuda.state_dict", "os.path.join", "str", "len", "numpy.sum", "label.cuda.max"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.train", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.item", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.ctmtrain.get_learning_rate", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.evaluation", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.evaluation"], ["", "", "def", "train", "(", ")", ":", "\n", "    ", "wandb", ".", "init", "(", "project", "=", "\"proxynet_fsl\"", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "wandb", ".", "config", ".", "gpu_id", "\n", "\n", "save_name", "=", "str", "(", "wandb", ".", "config", ".", "model_type", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "dataset", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "num_shot", ")", "+", "\"_\"", "+", "str", "(", "wandb", ".", "config", ".", "num_way", ")", "+", "\".pth\"", "\n", "\n", "train_set", "=", "None", "\n", "val_set", "=", "None", "\n", "test_set", "=", "None", "\n", "image_size", "=", "84", "\n", "if", "\"ResNet\"", "in", "wandb", ".", "config", ".", "model_type", ":", "\n", "        ", "image_size", "=", "224", "\n", "", "if", "wandb", ".", "config", ".", "dataset", "==", "\"CUB\"", ":", "\n", "        ", "train_set", "=", "CUB", "(", "setname", "=", "\"train\"", ",", "image_size", "=", "image_size", ",", "if_augmentation", "=", "wandb", ".", "config", ".", "if_augmentation", ")", "\n", "val_set", "=", "CUB", "(", "setname", "=", "'val'", ",", "image_size", "=", "image_size", ")", "\n", "test_set", "=", "CUB", "(", "setname", "=", "'test'", ",", "image_size", "=", "image_size", ")", "\n", "", "elif", "wandb", ".", "config", ".", "dataset", "==", "\"MiniImageNet\"", ":", "\n", "        ", "train_set", "=", "MiniImageNet", "(", "setname", "=", "\"train\"", ",", "image_size", "=", "image_size", ",", "if_augmentation", "=", "wandb", ".", "config", ".", "if_augmentation", ")", "\n", "val_set", "=", "MiniImageNet", "(", "setname", "=", "'val'", ",", "image_size", "=", "image_size", ")", "\n", "test_set", "=", "MiniImageNet", "(", "setname", "=", "'test'", ",", "image_size", "=", "image_size", ")", "\n", "", "else", ":", "\n", "        ", "raise", "(", "\"dataset parameter value error!\"", ")", "\n", "\n", "", "train_sampler", "=", "CategoriesSampler", "(", "train_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_train", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "train_loader", "=", "DataLoader", "(", "dataset", "=", "train_set", ",", "batch_sampler", "=", "train_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "val_sampler", "=", "CategoriesSampler", "(", "val_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_val", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "val_loader", "=", "DataLoader", "(", "dataset", "=", "val_set", ",", "batch_sampler", "=", "val_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "test_sampler", "=", "CategoriesSampler", "(", "test_set", ".", "label", ",", "n_batch", "=", "wandb", ".", "config", ".", "num_test", ",", "n_cls", "=", "wandb", ".", "config", ".", "num_way", ",", "n_per", "=", "wandb", ".", "config", ".", "num_shot", "+", "wandb", ".", "config", ".", "num_query", ")", "\n", "test_loader", "=", "DataLoader", "(", "dataset", "=", "test_set", ",", "batch_sampler", "=", "test_sampler", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "\n", "#proxynet = ProxyNet(model_type = wandb.config.model_type, num_shot = wandb.config.num_shot, num_way = wandb.config.num_way, num_query = wandb.config.num_query, proxy_type = wandb.config.proxy_type, classifier = wandb.config.classifier).cuda()", "\n", "proxynet", "=", "CTMNet", "(", "model_type", "=", "wandb", ".", "config", ".", "model_type", ",", "num_shot", "=", "wandb", ".", "config", ".", "num_shot", ",", "num_way", "=", "wandb", ".", "config", ".", "num_way", ",", "num_query", "=", "wandb", ".", "config", ".", "num_query", ")", ".", "cuda", "(", ")", "\n", "wandb", ".", "watch", "(", "proxynet", ")", "\n", "#proxynet.apply(init_layer)", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "proxynet", ".", "parameters", "(", ")", ",", "lr", "=", "wandb", ".", "config", ".", "sgd_lr", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "\"max\"", ",", "patience", "=", "int", "(", "wandb", ".", "config", ".", "patience", ")", ",", "factor", "=", "float", "(", "wandb", ".", "config", ".", "reduce_factor", ")", ",", "min_lr", "=", "0.0001", ")", "\n", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "label", "=", "torch", ".", "arange", "(", "wandb", ".", "config", ".", "num_way", ")", ".", "repeat", "(", "wandb", ".", "config", ".", "num_query", ")", "\n", "#one hot encode", "\n", "one_hot_label", "=", "torch", ".", "zeros", "(", "len", "(", "label", ")", ",", "label", ".", "max", "(", ")", "+", "1", ")", ".", "scatter_", "(", "1", ",", "label", ".", "unsqueeze", "(", "1", ")", ",", "1.", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "max_acc", "=", "0", "\n", "max_test_acc", "=", "0", "\n", "train_accuracy", "=", "0", "\n", "for", "epoch", "in", "range", "(", "wandb", ".", "config", ".", "num_epochs", ")", ":", "\n", "        ", "total_rewards", "=", "0", "\n", "total_loss", "=", "0", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "train_loader", ",", "1", ")", ":", "\n", "            ", "proxynet", ".", "train", "(", ")", "\n", "data", ",", "_", "=", "[", "_", ".", "cuda", "(", ")", "for", "_", "in", "batch", "]", "\n", "p", "=", "wandb", ".", "config", ".", "num_shot", "*", "wandb", ".", "config", ".", "num_way", "\n", "support", ",", "query", "=", "data", "[", ":", "p", "]", ",", "data", "[", "p", ":", "]", "\n", "relation_score", "=", "proxynet", "(", "support", ",", "query", ")", "\n", "\n", "loss", "=", "ce", "(", "-", "1", "*", "relation_score", ",", "label", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predict_label", "=", "torch", ".", "min", "(", "relation_score", ",", "1", ")", "\n", "rewards", "=", "[", "1", "if", "predict_label", "[", "j", "]", "==", "label", "[", "j", "]", "else", "0", "for", "j", "in", "range", "(", "label", ".", "shape", "[", "0", "]", ")", "]", "\n", "total_rewards", "+=", "numpy", ".", "sum", "(", "rewards", ")", "\n", "\n", "proxynet", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "episode", "=", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", "\n", "if", "episode", "%", "100", "==", "0", ":", "\n", "                ", "print", "(", "\"episode:\"", ",", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", ",", "\"ce loss\"", ",", "total_loss", "/", "float", "(", "i", "+", "1", ")", ")", "\n", "train_accuracy", "=", "numpy", ".", "sum", "(", "total_rewards", ")", "/", "1.0", "/", "wandb", ".", "config", ".", "num_query", "/", "wandb", ".", "config", ".", "num_way", "/", "wandb", ".", "config", ".", "num_train", "\n", "print", "(", "'Train Accuracy of the model on the train :{:.2f} %'", ".", "format", "(", "100", "*", "train_accuracy", ")", ")", "\n", "", "threshold", "=", "30000", "\n", "if", "wandb", ".", "config", ".", "dataset", "==", "\"CUB\"", ":", "\n", "                ", "threshold", "=", "10000", "\n", "", "if", "(", "episode", "%", "100", "==", "0", "and", "episode", ">", "threshold", ")", "or", "episode", "%", "1000", "==", "0", ":", "\n", "                ", "acc", ",", "_", "=", "evaluation", "(", "wandb", ".", "config", ",", "proxynet", ",", "val_loader", ",", "mode", "=", "\"val\"", ")", "\n", "if", "acc", ">", "max_acc", ":", "\n", "                    ", "max_acc", "=", "acc", "\n", "test_acc", ",", "_", ",", "=", "evaluation", "(", "wandb", ".", "config", ",", "proxynet", ",", "test_loader", ",", "mode", "=", "\"test\"", ")", "\n", "max_test_acc", "=", "test_acc", "\n", "if", "wandb", ".", "config", ".", "save_best", ":", "\n", "                        ", "torch", ".", "save", "(", "proxynet", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "\"weights\"", ",", "save_name", ")", ")", "\n", "", "", "print", "(", "\"episode:\"", ",", "epoch", "*", "wandb", ".", "config", ".", "num_train", "+", "i", "+", "1", ",", "\"max val acc:\"", ",", "max_acc", ",", "\" max test acc:\"", ",", "max_test_acc", ")", "\n", "wandb", ".", "log", "(", "{", "\"val_acc\"", ":", "acc", "}", ")", "\n", "\n", "", "", "scheduler", ".", "step", "(", "max_acc", ")", "\n", "print", "(", "\"sgd learning rate:\"", ",", "get_learning_rate", "(", "optimizer", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.mean_confidence_interval": [[12, 18], ["len", "numpy.array", "numpy.mean", "scipy.stats.sem", "scipy.stats.t._ppf"], "function", ["None"], ["def", "mean_confidence_interval", "(", "data", ",", "confidence", "=", "0.95", ")", ":", "\n", "    ", "a", "=", "1.0", "*", "numpy", ".", "array", "(", "data", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "m", ",", "se", "=", "numpy", ".", "mean", "(", "a", ")", ",", "scipy", ".", "stats", ".", "sem", "(", "a", ")", "\n", "h", "=", "se", "*", "scipy", ".", "stats", ".", "t", ".", "_ppf", "(", "(", "1", "+", "confidence", ")", "/", "2.", ",", "n", "-", "1", ")", "\n", "return", "m", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.evaluation": [[19, 54], ["torch.CrossEntropyLoss().cuda", "proxynet.eval", "torch.arange().repeat().cuda", "torch.arange().repeat().cuda", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "evaluation.mean_confidence_interval", "print", "torch.CrossEntropyLoss", "torch.arange().repeat", "torch.arange().repeat", "batch.cuda", "proxynet", "nn.CrossEntropyLoss().cuda.", "ce.item", "torch.min", "torch.min", "numpy.sum", "acc_list.append", "len", "torch.arange", "torch.arange", "range", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.None.evaluation.mean_confidence_interval", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.item"], ["", "def", "evaluation", "(", "config", ",", "proxynet", ",", "data_loader", ",", "mode", "=", "\"test\"", ")", ":", "\n", "    ", "assert", "mode", "==", "\"test\"", "or", "mode", "==", "\"val\"", "\n", "num_total", "=", "0", "\n", "if", "mode", "==", "\"test\"", ":", "\n", "        ", "num_total", "=", "config", ".", "num_way", "*", "config", ".", "num_test", "*", "config", ".", "num_query", "\n", "\n", "", "if", "mode", "==", "\"val\"", ":", "\n", "        ", "num_total", "=", "config", ".", "num_way", "*", "config", ".", "num_val", "*", "config", ".", "num_query", "\n", "\n", "", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "proxynet", ".", "eval", "(", ")", "\n", "\n", "acc_list", "=", "[", "]", "\n", "\n", "label", "=", "torch", ".", "arange", "(", "config", ".", "num_way", ")", ".", "repeat", "(", "config", ".", "num_query", ")", ".", "cuda", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "total_rewards", "=", "0", "\n", "total_loss", "=", "0", "\n", "for", "batch", ",", "_", "in", "tqdm", "(", "data_loader", ")", ":", "\n", "            ", "data", "=", "batch", ".", "cuda", "(", ")", "\n", "k", "=", "config", ".", "num_way", "*", "config", ".", "num_shot", "\n", "support", ",", "query", "=", "data", "[", ":", "k", "]", ",", "data", "[", "k", ":", "]", "\n", "relation_score", "=", "proxynet", "(", "support", ",", "query", ")", "\n", "loss", "=", "ce", "(", "-", "1", "*", "relation_score", ",", "label", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "_", ",", "predict_label", "=", "torch", ".", "min", "(", "relation_score", ",", "1", ")", "\n", "rewards", "=", "[", "1", "if", "predict_label", "[", "j", "]", "==", "label", "[", "j", "]", "else", "0", "for", "j", "in", "range", "(", "label", ".", "shape", "[", "0", "]", ")", "]", "\n", "total_rewards", "+=", "numpy", ".", "sum", "(", "rewards", ")", "\n", "acc", "=", "numpy", ".", "sum", "(", "rewards", ")", "/", "1.0", "/", "config", ".", "num_way", "/", "config", ".", "num_query", "\n", "acc_list", ".", "append", "(", "acc", ")", "\n", "\n", "", "m", ",", "h", "=", "mean_confidence_interval", "(", "acc_list", ")", "\n", "print", "(", "'Test mean accuracy of the model on the'", ",", "mode", ",", "' :{:.2f} %'", ".", "format", "(", "m", "*", "100", ")", ",", "\"interval:\"", ",", "h", "*", "100", ",", "\"val ce loss:\"", ",", "total_loss", "/", "len", "(", "data_loader", ")", ")", "\n", "", "return", "m", ",", "h", "\n", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.__init__": [[24, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "v", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.add": [[28, 31], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "v", "=", "(", "self", ".", "v", "*", "self", ".", "n", "+", "x", ")", "/", "(", "self", ".", "n", "+", "1", ")", "\n", "self", ".", "n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Averager.item": [[32, 34], ["None"], "methods", ["None"], ["", "def", "item", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Timer.__init__": [[53, 55], ["time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "o", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.Timer.measure": [[56, 64], ["int", "time.time", "round"], "methods", ["None"], ["", "def", "measure", "(", "self", ",", "p", "=", "1", ")", ":", "\n", "        ", "x", "=", "(", "time", ".", "time", "(", ")", "-", "self", ".", "o", ")", "/", "p", "\n", "x", "=", "int", "(", "x", ")", "\n", "if", "x", ">=", "3600", ":", "\n", "            ", "return", "'{:.1f}h'", ".", "format", "(", "x", "/", "3600", ")", "\n", "", "if", "x", ">=", "60", ":", "\n", "            ", "return", "'{}m'", ".", "format", "(", "round", "(", "x", "/", "60", ")", ")", "\n", "", "return", "'{}s'", ".", "format", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.set_gpu": [[8, 11], ["print"], "function", ["None"], ["def", "set_gpu", "(", "x", ")", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "x", "\n", "print", "(", "'using gpu:'", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.ensure_path": [[13, 21], ["os.path.exists", "os.mkdir", "input", "shutil.rmtree", "os.mkdir"], "function", ["None"], ["", "def", "ensure_path", "(", "path", ",", "remove", "=", "True", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "if", "remove", ":", "\n", "            ", "if", "input", "(", "'{} exists, remove? ([y]/n)'", ".", "format", "(", "path", ")", ")", "!=", "'n'", ":", "\n", "                ", "shutil", ".", "rmtree", "(", "path", ")", "\n", "os", ".", "mkdir", "(", "path", ")", "\n", "", "", "", "else", ":", "\n", "        ", "os", ".", "mkdir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.count_acc": [[36, 42], ["torch.argmax", "torch.cuda.is_available"], "function", ["None"], ["", "", "def", "count_acc", "(", "logits", ",", "label", ")", ":", "\n", "    ", "pred", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "(", "pred", "==", "label", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "(", "pred", "==", "label", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.euclidean_metric": [[43, 50], ["a.unsqueeze().expand.unsqueeze().expand", "b.unsqueeze().expand.unsqueeze().expand", "a.unsqueeze().expand.unsqueeze", "b.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "", "def", "euclidean_metric", "(", "a", ",", "b", ")", ":", "\n", "    ", "n", "=", "a", ".", "shape", "[", "0", "]", "\n", "m", "=", "b", ".", "shape", "[", "0", "]", "\n", "a", "=", "a", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "n", ",", "m", ",", "-", "1", ")", "\n", "b", "=", "b", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "n", ",", "m", ",", "-", "1", ")", "\n", "logits", "=", "-", "(", "(", "a", "-", "b", ")", "**", "2", ")", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.pprint": [[66, 68], ["_utils_pp.pprint"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.pprint"], ["def", "pprint", "(", "x", ")", ":", "\n", "    ", "_utils_pp", ".", "pprint", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.compute_confidence_interval": [[69, 80], ["numpy.mean", "numpy.std", "numpy.array", "numpy.sqrt", "len"], "function", ["None"], ["", "def", "compute_confidence_interval", "(", "data", ")", ":", "\n", "    ", "\"\"\"\n    Compute 95% confidence interval\n    :param data: An array of mean accuracy (or mAP) across a number of sampled episodes.\n    :return: the 95% confidence interval for this data.\n    \"\"\"", "\n", "a", "=", "1.0", "*", "np", ".", "array", "(", "data", ")", "\n", "m", "=", "np", ".", "mean", "(", "a", ")", "\n", "std", "=", "np", ".", "std", "(", "a", ")", "\n", "pm", "=", "1.96", "*", "(", "std", "/", "np", ".", "sqrt", "(", "len", "(", "a", ")", ")", ")", "\n", "return", "m", ",", "pm", "\n", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.places.Places.__init__": [[17, 63], ["os.join", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "l.split", "os.join", "data.append", "PIL.Image.open().convert", "numpy.array", "PIL.Image.open().convert.close", "label.append", "x.strip", "places.Places.wnids.append", "numpy.unique", "open().readlines", "torchvision.transforms.RandomResizedCrop", "feat.dataloader.additional_transforms.ImageJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "PIL.Image.open", "numpy.array", "dict", "int", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "setname", ",", "image_size", "=", "84", ",", "if_augmentation", "=", "False", ")", ":", "\n", "        ", "txt_path", "=", "osp", ".", "join", "(", "SPLIT_PATH", ",", "setname", "+", "'.csv'", ")", "\n", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "txt_path", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "[", "1", ":", "]", "\n", "\n", "data", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "lb", "=", "-", "1", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "\n", "if", "setname", "==", "\"train\"", "and", "if_augmentation", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "(", "image_size", ",", "image_size", ")", ")", ",", "\n", "ImageJitter", "(", "dict", "(", "Brightness", "=", "0.4", ",", "Contrast", "=", "0.4", ",", "Color", "=", "0.4", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "image_size", "*", "1.1", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "context", "=", "l", ".", "split", "(", "','", ")", "\n", "name", "=", "context", "[", "0", "]", "\n", "wnid", "=", "context", "[", "1", "]", "\n", "path", "=", "osp", ".", "join", "(", "IMAGE_PATH", ",", "name", ")", "\n", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "\n", "", "data", ".", "append", "(", "path", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "data_dict", "[", "path", "]", "=", "np", ".", "array", "(", "image", ")", "\n", "image", ".", "close", "(", ")", "\n", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "data_dict", "=", "data_dict", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "label", ")", ")", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.places.Places.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.places.Places.__getitem__": [[67, 74], ["PIL.Image.fromarray", "places.Places.transform", "PIL.Image.fromarray.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "path", ",", "label", "=", "self", ".", "data", "[", "i", "]", ",", "self", ".", "label", "[", "i", "]", "\n", "tmp_image", "=", "Image", ".", "fromarray", "(", "self", ".", "data_dict", "[", "path", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "tmp_image", ")", "\n", "tmp_image", ".", "close", "(", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.additional_transforms.ImageJitter.__init__": [[16, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transformdict", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "[", "(", "transformtypedict", "[", "k", "]", ",", "transformdict", "[", "k", "]", ")", "for", "k", "in", "transformdict", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.additional_transforms.ImageJitter.__call__": [[19, 28], ["torch.rand", "enumerate", "len", "transformer().enhance().convert", "transformer().enhance", "transformer"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "out", "=", "img", "\n", "randtensor", "=", "torch", ".", "rand", "(", "len", "(", "self", ".", "transforms", ")", ")", "\n", "\n", "for", "i", ",", "(", "transformer", ",", "alpha", ")", "in", "enumerate", "(", "self", ".", "transforms", ")", ":", "\n", "            ", "r", "=", "alpha", "*", "(", "randtensor", "[", "i", "]", "*", "2.0", "-", "1.0", ")", "+", "1", "\n", "out", "=", "transformer", "(", "out", ")", ".", "enhance", "(", "r", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.samplers.CategoriesSampler.__init__": [[6, 18], ["torch.manual_seed", "numpy.array", "range", "numpy.argwhere().reshape", "torch.from_numpy", "samplers.CategoriesSampler.m_ind.append", "max", "numpy.argwhere"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "label", ",", "n_batch", ",", "n_cls", ",", "n_per", ")", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "2020", ")", "\n", "self", ".", "n_batch", "=", "n_batch", "\n", "self", ".", "n_cls", "=", "n_cls", "\n", "self", ".", "n_per", "=", "n_per", "\n", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "self", ".", "m_ind", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "max", "(", "label", ")", "+", "1", ")", ":", "\n", "            ", "ind", "=", "np", ".", "argwhere", "(", "label", "==", "i", ")", ".", "reshape", "(", "-", "1", ")", "\n", "ind", "=", "torch", ".", "from_numpy", "(", "ind", ")", "\n", "self", ".", "m_ind", ".", "append", "(", "ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.samplers.CategoriesSampler.__len__": [[19, 21], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.samplers.CategoriesSampler.__iter__": [[22, 32], ["range", "torch.stack().t().reshape", "torch.randperm", "torch.stack().t().reshape.append", "len", "torch.randperm", "torch.stack().t", "len", "torch.stack"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "i_batch", "in", "range", "(", "self", ".", "n_batch", ")", ":", "\n", "            ", "batch", "=", "[", "]", "\n", "classes", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "m_ind", ")", ")", "[", ":", "self", ".", "n_cls", "]", "\n", "for", "c", "in", "classes", ":", "\n", "                ", "l", "=", "self", ".", "m_ind", "[", "c", "]", "\n", "pos", "=", "torch", ".", "randperm", "(", "len", "(", "l", ")", ")", "[", ":", "self", ".", "n_per", "]", "\n", "batch", ".", "append", "(", "l", "[", "pos", "]", ")", "\n", "", "batch", "=", "torch", ".", "stack", "(", "batch", ")", ".", "t", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "yield", "batch", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.tiered_imagenet.tieredImageNet.__init__": [[37, 65], ["tiered_imagenet.load_data", "len", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "numpy.load", "label.append", "set", "tiered_imagenet.tieredImageNet.wnids.append", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.tiered_imagenet.load_data"], ["    ", "def", "__init__", "(", "self", ",", "phase", "=", "'train'", ",", "data_aug", "=", "False", ")", ":", "\n", "        ", "assert", "(", "phase", "==", "'train'", "or", "phase", "==", "'val'", "or", "phase", "==", "'test'", ")", "\n", "image_path", "=", "file_path", "[", "phase", "]", "[", "0", "]", "\n", "label_path", "=", "file_path", "[", "phase", "]", "[", "1", "]", "\n", "\n", "data_train", "=", "load_data", "(", "label_path", ")", "\n", "labels", "=", "data_train", "[", "'labels'", "]", "\n", "self", ".", "data", "=", "np", ".", "load", "(", "image_path", ")", "[", "'images'", "]", "\n", "\n", "label", "=", "[", "]", "\n", "lb", "=", "-", "1", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "for", "wnid", "in", "labels", ":", "\n", "            ", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "len", "(", "set", "(", "label", ")", ")", "\n", "\n", "mean_pix", "=", "[", "x", "/", "255.0", "for", "x", "in", "[", "120.39586422", ",", "115.59361427", ",", "104.54012653", "]", "]", "\n", "std_pix", "=", "[", "x", "/", "255.0", "for", "x", "in", "[", "70.68188272", ",", "68.27635443", ",", "72.54505529", "]", "]", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "mean_pix", ",", "std", "=", "std_pix", ")", "\n", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.tiered_imagenet.tieredImageNet.__getitem__": [[66, 70], ["tiered_imagenet.tieredImageNet.transform", "PIL.Image.fromarray"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "label", "=", "self", ".", "data", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", "\n", "img", "=", "self", ".", "transform", "(", "Image", ".", "fromarray", "(", "img", ")", ")", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.tiered_imagenet.tieredImageNet.__len__": [[71, 73], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.tiered_imagenet.load_data": [[20, 31], ["open", "pickle.load", "open", "pickle._Unpickler", "pickle._Unpickler.load"], "function", ["None"], ["def", "load_data", "(", "file", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "with", "open", "(", "file", ",", "'rb'", ")", "as", "fo", ":", "\n", "            ", "data", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "", "return", "data", "\n", "", "except", ":", "\n", "        ", "with", "open", "(", "file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "u", "=", "pickle", ".", "_Unpickler", "(", "f", ")", "\n", "u", ".", "encoding", "=", "'latin1'", "\n", "data", "=", "u", ".", "load", "(", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.plantae.Plantae.__init__": [[17, 63], ["os.join", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "l.split", "os.join", "data.append", "PIL.Image.open().convert", "numpy.array", "PIL.Image.open().convert.close", "label.append", "x.strip", "plantae.Plantae.wnids.append", "numpy.unique", "open().readlines", "torchvision.transforms.RandomResizedCrop", "feat.dataloader.additional_transforms.ImageJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "PIL.Image.open", "numpy.array", "dict", "int", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "setname", ",", "image_size", "=", "84", ",", "if_augmentation", "=", "False", ")", ":", "\n", "        ", "txt_path", "=", "osp", ".", "join", "(", "SPLIT_PATH", ",", "setname", "+", "'.csv'", ")", "\n", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "txt_path", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "[", "1", ":", "]", "\n", "\n", "data", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "lb", "=", "-", "1", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "\n", "if", "setname", "==", "\"train\"", "and", "if_augmentation", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "(", "image_size", ",", "image_size", ")", ")", ",", "\n", "ImageJitter", "(", "dict", "(", "Brightness", "=", "0.4", ",", "Contrast", "=", "0.4", ",", "Color", "=", "0.4", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "image_size", "*", "1.1", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "context", "=", "l", ".", "split", "(", "','", ")", "\n", "name", "=", "context", "[", "0", "]", "\n", "wnid", "=", "context", "[", "1", "]", "\n", "path", "=", "osp", ".", "join", "(", "IMAGE_PATH", ",", "name", ")", "\n", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "\n", "", "data", ".", "append", "(", "path", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "data_dict", "[", "path", "]", "=", "np", ".", "array", "(", "image", ")", "\n", "image", ".", "close", "(", ")", "\n", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "data_dict", "=", "data_dict", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "label", ")", ")", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.plantae.Plantae.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.plantae.Plantae.__getitem__": [[67, 74], ["PIL.Image.fromarray", "plantae.Plantae.transform", "PIL.Image.fromarray.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "path", ",", "label", "=", "self", ".", "data", "[", "i", "]", ",", "self", ".", "label", "[", "i", "]", "\n", "tmp_image", "=", "Image", ".", "fromarray", "(", "self", ".", "data_dict", "[", "path", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "tmp_image", ")", "\n", "tmp_image", ".", "close", "(", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cars.Cars.__init__": [[17, 63], ["os.join", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "l.split", "os.join", "data.append", "PIL.Image.open().convert", "numpy.array", "PIL.Image.open().convert.close", "label.append", "x.strip", "cars.Cars.wnids.append", "numpy.unique", "open().readlines", "torchvision.transforms.RandomResizedCrop", "feat.dataloader.additional_transforms.ImageJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "PIL.Image.open", "numpy.array", "dict", "int", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "setname", ",", "image_size", "=", "84", ",", "if_augmentation", "=", "False", ")", ":", "\n", "        ", "txt_path", "=", "osp", ".", "join", "(", "SPLIT_PATH", ",", "setname", "+", "'.csv'", ")", "\n", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "txt_path", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "[", "1", ":", "]", "\n", "\n", "data", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "lb", "=", "-", "1", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "\n", "if", "setname", "==", "\"train\"", "and", "if_augmentation", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "(", "image_size", ",", "image_size", ")", ")", ",", "\n", "ImageJitter", "(", "dict", "(", "Brightness", "=", "0.4", ",", "Contrast", "=", "0.4", ",", "Color", "=", "0.4", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "image_size", "*", "1.1", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "context", "=", "l", ".", "split", "(", "','", ")", "\n", "name", "=", "context", "[", "0", "]", "\n", "wnid", "=", "context", "[", "1", "]", "\n", "path", "=", "osp", ".", "join", "(", "IMAGE_PATH", ",", "name", ")", "\n", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "\n", "", "data", ".", "append", "(", "path", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "data_dict", "[", "path", "]", "=", "np", ".", "array", "(", "image", ")", "\n", "image", ".", "close", "(", ")", "\n", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "data_dict", "=", "data_dict", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "label", ")", ")", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cars.Cars.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cars.Cars.__getitem__": [[67, 74], ["PIL.Image.fromarray", "cars.Cars.transform", "PIL.Image.fromarray.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "path", ",", "label", "=", "self", ".", "data", "[", "i", "]", ",", "self", ".", "label", "[", "i", "]", "\n", "tmp_image", "=", "Image", ".", "fromarray", "(", "self", ".", "data_dict", "[", "path", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "tmp_image", ")", "\n", "tmp_image", ".", "close", "(", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cub.CUB.__init__": [[17, 63], ["os.join", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "l.split", "os.join", "data.append", "PIL.Image.open().convert", "numpy.array", "PIL.Image.open().convert.close", "label.append", "x.strip", "cub.CUB.wnids.append", "numpy.unique", "open().readlines", "torchvision.transforms.RandomResizedCrop", "feat.dataloader.additional_transforms.ImageJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "PIL.Image.open", "numpy.array", "dict", "int", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "setname", ",", "image_size", "=", "84", ",", "if_augmentation", "=", "False", ")", ":", "\n", "        ", "txt_path", "=", "osp", ".", "join", "(", "SPLIT_PATH", ",", "setname", "+", "'.csv'", ")", "\n", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "txt_path", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "[", "1", ":", "]", "\n", "\n", "data", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "lb", "=", "-", "1", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "\n", "if", "setname", "==", "\"train\"", "and", "if_augmentation", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "(", "image_size", ",", "image_size", ")", ")", ",", "\n", "ImageJitter", "(", "dict", "(", "Brightness", "=", "0.4", ",", "Contrast", "=", "0.4", ",", "Color", "=", "0.4", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "image_size", "*", "1.1", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "context", "=", "l", ".", "split", "(", "','", ")", "\n", "name", "=", "context", "[", "0", "]", "\n", "wnid", "=", "context", "[", "1", "]", "\n", "path", "=", "osp", ".", "join", "(", "IMAGE_PATH", ",", "name", ")", "\n", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "\n", "", "data", ".", "append", "(", "path", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "data_dict", "[", "path", "]", "=", "np", ".", "array", "(", "image", ")", "\n", "image", ".", "close", "(", ")", "\n", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "data_dict", "=", "data_dict", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "label", ")", ")", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cub.CUB.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.cub.CUB.__getitem__": [[67, 74], ["PIL.Image.fromarray", "cub.CUB.transform", "PIL.Image.fromarray.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "path", ",", "label", "=", "self", ".", "data", "[", "i", "]", ",", "self", ".", "label", "[", "i", "]", "\n", "tmp_image", "=", "Image", ".", "fromarray", "(", "self", ".", "data_dict", "[", "path", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "tmp_image", ")", "\n", "tmp_image", ".", "close", "(", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.mini_imagenet.MiniImageNet.__init__": [[17, 62], ["os.join", "len", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "l.split", "os.join", "data.append", "PIL.Image.open().convert", "numpy.array", "PIL.Image.open().convert.close", "label.append", "set", "x.strip", "mini_imagenet.MiniImageNet.wnids.append", "torchvision.transforms.RandomResizedCrop", "feat.dataloader.additional_transforms.ImageJitter", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "open().readlines", "PIL.Image.open", "dict", "numpy.array", "numpy.array", "int", "numpy.array", "numpy.array", "open"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "setname", ",", "image_size", ",", "if_augmentation", "=", "False", ")", ":", "\n", "\n", "# Transformation", "\n", "        ", "if", "setname", "==", "'train'", "and", "if_augmentation", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "(", "image_size", ",", "image_size", ")", ")", ",", "\n", "ImageJitter", "(", "dict", "(", "Brightness", "=", "0.4", ",", "Contrast", "=", "0.4", ",", "Color", "=", "0.4", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "np", ".", "array", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ",", "np", ".", "array", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "image_size", "*", "1.1", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "np", ".", "array", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ",", "np", ".", "array", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ")", "\n", "]", ")", "\n", "\n", "", "csv_path", "=", "osp", ".", "join", "(", "SPLIT_PATH", ",", "setname", "+", "'.csv'", ")", "\n", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "open", "(", "csv_path", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "[", "1", ":", "]", "\n", "\n", "data", "=", "[", "]", "\n", "label", "=", "[", "]", "\n", "data_dict", "=", "{", "}", "\n", "lb", "=", "-", "1", "\n", "\n", "self", ".", "wnids", "=", "[", "]", "\n", "\n", "for", "l", "in", "lines", ":", "\n", "            ", "name", ",", "wnid", "=", "l", ".", "split", "(", "','", ")", "\n", "path", "=", "osp", ".", "join", "(", "IMAGE_PATH", ",", "name", ")", "\n", "if", "wnid", "not", "in", "self", ".", "wnids", ":", "\n", "                ", "self", ".", "wnids", ".", "append", "(", "wnid", ")", "\n", "lb", "+=", "1", "\n", "", "data", ".", "append", "(", "path", ")", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "data_dict", "[", "path", "]", "=", "np", ".", "array", "(", "image", ")", "\n", "image", ".", "close", "(", ")", "\n", "label", ".", "append", "(", "lb", ")", "\n", "\n", "", "self", ".", "data_dict", "=", "data_dict", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "num_class", "=", "len", "(", "set", "(", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.mini_imagenet.MiniImageNet.__len__": [[63, 65], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.dataloader.mini_imagenet.MiniImageNet.__getitem__": [[66, 73], ["PIL.Image.fromarray", "mini_imagenet.MiniImageNet.transform", "PIL.Image.fromarray.close"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "path", ",", "label", "=", "self", ".", "data", "[", "i", "]", ",", "self", ".", "label", "[", "i", "]", "\n", "tmp_image", "=", "Image", ".", "fromarray", "(", "self", ".", "data_dict", "[", "path", "]", ")", "\n", "image", "=", "self", ".", "transform", "(", "tmp_image", ")", "\n", "tmp_image", ".", "close", "(", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.SELayer.__init__": [[6, 14], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channels", ",", "channels", "//", "reduction", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "channels", "//", "reduction", ",", "channels", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.SELayer.forward": [[16, 23], ["x.size", "proxynet.SELayer.avg_pool().view", "proxynet.SELayer.fc().view", "proxynet.SELayer.expand_as", "proxynet.SELayer.avg_pool", "proxynet.SELayer.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "out", "=", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.MeanProxy.__init__": [[25, 28], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "1", ")", ":", "\n", "        ", "super", "(", "MeanProxy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.MeanProxy.forward": [[29, 32], ["torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "torch", ".", "mean", "(", "x", ",", "dim", "=", "self", ".", "dim", ",", "keepdim", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.SumProxy.__init__": [[34, 37], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "1", ")", ":", "\n", "        ", "super", "(", "SumProxy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.SumProxy.forward": [[38, 41], ["torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "torch", ".", "sum", "(", "x", ",", "dim", "=", "self", ".", "dim", ",", "keepdim", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.ConvClassifier.__init__": [[43, 54], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ConvClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "2", ",", "4", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "4", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv3d", "(", "4", ",", "1", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.ConvClassifier.forward": [[55, 60], ["proxynet.ConvClassifier.layer1", "proxynet.ConvClassifier.layer2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.FCClassifier.__init__": [[62, 79], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", "=", "64", ",", "hidden_size", "=", "8", ")", ":", "\n", "        ", "super", "(", "FCClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "1", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "1", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", "*", "3", "*", "3", ",", "hidden_size", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.FCClassifier.forward": [[80, 88], ["proxynet.FCClassifier.layer1", "proxynet.FCClassifier.layer2", "proxynet.FCClassifier.view", "proxynet.FCClassifier.relu", "proxynet.FCClassifier.fc2", "proxynet.FCClassifier.size", "proxynet.FCClassifier.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.CosineClassifier.__init__": [[90, 93], ["torch.Module.__init__", "torch.CosineSimilarity", "torch.CosineSimilarity"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "CosineClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cosine", "=", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.CosineClassifier.forward": [[94, 100], ["support.view.view.view", "query.view.view.view", "proxynet.CosineClassifier.cosine"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "support", ",", "query", ")", ":", "\n", "        ", "support", "=", "support", ".", "view", "(", "support", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "query", "=", "query", ".", "view", "(", "query", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "cosine", "(", "support", ",", "query", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.EuclideanClassifier.__init__": [[102, 104], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EuclideanClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.EuclideanClassifier.forward": [[105, 113], ["support.view.view.view", "query.view.view.view", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "support", ",", "query", ")", ":", "\n", "\n", "        ", "support", "=", "support", ".", "view", "(", "support", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "query", "=", "query", ".", "view", "(", "query", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "logits", "=", "torch", ".", "pow", "(", "support", "-", "query", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.CosineProxy.__init__": [[115, 119], ["torch.Module.__init__", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.CosineSimilarity", "torch.CosineSimilarity"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_shot", "=", "5", ",", "input_dim", "=", "32", ")", ":", "\n", "        ", "super", "(", "CosineProxy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "(", "input_dim", ",", "5", ",", "5", ")", ")", "\n", "self", ".", "cosine", "=", "nn", ".", "CosineSimilarity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.CosineProxy.forward": [[120, 143], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "out_x.view.view.squeeze", "proxynet.CosineProxy.pooling", "out_x.view.view.view", "range", "torch.cat.squeeze", "torch.cat.squeeze", "tmp_out.repeat.repeat.repeat", "proxynet.CosineProxy.pooling", "proxynet.CosineProxy.view", "proxynet.CosineProxy.cosine", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "new_x.reshape.reshape.reshape", "proxynet.CosineProxy.unsqueeze", "new_x.reshape.reshape.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "None", "\n", "out_x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "1", ")", "\n", "out_x", "=", "out_x", ".", "squeeze", "(", "1", ")", "\n", "out_x", "=", "self", ".", "pooling", "(", "out_x", ")", "\n", "out_x", "=", "out_x", ".", "view", "(", "out_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "new_x", "=", "x", "[", "i", ",", "...", "]", "\n", "tmp_x", "=", "x", "[", "i", ",", "...", "]", "\n", "tmp_out", "=", "out_x", "[", "i", ",", "...", "]", "\n", "tmp_out", "=", "tmp_out", ".", "repeat", "(", "tmp_x", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "tmp_x", "=", "self", ".", "pooling", "(", "tmp_x", ")", "\n", "tmp_x", "=", "tmp_x", ".", "view", "(", "tmp_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "tmp_x", "=", "self", ".", "cosine", "(", "tmp_x", ",", "tmp_out", ")", "\n", "shape", "=", "new_x", ".", "shape", "\n", "new_x", "=", "torch", ".", "mm", "(", "tmp_x", ".", "unsqueeze", "(", "0", ")", ",", "new_x", ".", "view", "(", "new_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "new_x", "=", "new_x", ".", "reshape", "(", "(", "1", ",", "1", ",", "shape", "[", "-", "3", "]", ",", "shape", "[", "-", "2", "]", ",", "shape", "[", "-", "1", "]", ")", ")", "\n", "if", "out", "is", "None", ":", "\n", "                ", "out", "=", "new_x", "\n", "", "else", ":", "\n", "                ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "new_x", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "return", "out", ".", "squeeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.Proxy.__init__": [[145, 157], ["torch.Module.__init__", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_shot", "=", "5", ",", "input_dim", "=", "32", ",", "is_softmax", "=", "False", ")", ":", "\n", "        ", "super", "(", "Proxy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "is_softmax", "=", "is_softmax", "\n", "self", ".", "pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "(", "input_dim", ",", "5", ",", "5", ")", ")", "\n", "self", ".", "num_shot", "=", "num_shot", "\n", "self", ".", "layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_dim", "*", "2", "*", "5", "*", "5", ",", "32", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.Proxy.forward": [[158, 185], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "out_x.view.view.squeeze", "proxynet.Proxy.pooling", "out_x.view.view.view", "range", "torch.cat.squeeze", "torch.cat.squeeze", "tmp_out.repeat.repeat.repeat", "proxynet.Proxy.pooling", "proxynet.Proxy.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "proxynet.Proxy.layer", "proxynet.Proxy.squeeze", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "new_x.reshape.reshape.reshape", "proxynet.Proxy.softmax", "proxynet.Proxy.unsqueeze", "new_x.reshape.reshape.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "None", "\n", "out_x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "1", ")", "\n", "out_x", "=", "out_x", ".", "squeeze", "(", "1", ")", "\n", "out_x", "=", "self", ".", "pooling", "(", "out_x", ")", "\n", "out_x", "=", "out_x", ".", "view", "(", "out_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "new_x", "=", "x", "[", "i", ",", "...", "]", "\n", "tmp_x", "=", "x", "[", "i", ",", "...", "]", "\n", "tmp_out", "=", "out_x", "[", "i", ",", "...", "]", "\n", "tmp_out", "=", "tmp_out", ".", "repeat", "(", "tmp_x", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "tmp_x", "=", "self", ".", "pooling", "(", "tmp_x", ")", "\n", "tmp_x", "=", "tmp_x", ".", "view", "(", "tmp_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "tmp_x", "=", "torch", ".", "cat", "(", "(", "tmp_x", ",", "tmp_out", ")", ",", "dim", "=", "1", ")", "\n", "tmp_x", "=", "self", ".", "layer", "(", "tmp_x", ")", "\n", "if", "self", ".", "is_softmax", ":", "\n", "                ", "tmp_x", "=", "self", ".", "softmax", "(", "tmp_x", ")", "\n", "", "tmp_x", "=", "tmp_x", ".", "squeeze", "(", "1", ")", "\n", "shape", "=", "new_x", ".", "shape", "\n", "new_x", "=", "torch", ".", "mm", "(", "tmp_x", ".", "unsqueeze", "(", "0", ")", ",", "new_x", ".", "view", "(", "new_x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "new_x", "=", "new_x", ".", "reshape", "(", "(", "1", ",", "1", ",", "shape", "[", "-", "3", "]", ",", "shape", "[", "-", "2", "]", ",", "shape", "[", "-", "1", "]", ")", ")", "\n", "if", "out", "is", "None", ":", "\n", "                ", "out", "=", "new_x", "\n", "", "else", ":", "\n", "                ", "out", "=", "torch", ".", "cat", "(", "(", "out", ",", "new_x", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "return", "out", ".", "squeeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.ProxyNet.__init__": [[188, 248], ["torch.Module.__init__", "proxynet.SELayer", "proxynet.CosineProxy", "proxynet.ConvClassifier", "ConvNet4", "ConvNet4", "ConvNet6", "proxynet.SumProxy", "proxynet.FCClassifier", "ResNet10", "proxynet.MeanProxy", "proxynet.EuclideanClassifier", "ResNet18", "proxynet.Proxy", "proxynet.CosineClassifier", "ResNet34", "proxynet.Proxy", "ValueError", "Wide_ResNet", "ValueError"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet10", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet18", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet34"], ["    ", "def", "__init__", "(", "self", ",", "model_type", ",", "num_shot", ",", "num_way", ",", "num_query", ",", "proxy_type", ",", "classifier", ")", ":", "\n", "        ", "super", "(", "ProxyNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_shot", "=", "num_shot", "\n", "self", ".", "num_way", "=", "num_way", "\n", "self", ".", "num_query", "=", "num_query", "\n", "self", ".", "model_type", "=", "model_type", "\n", "if", "model_type", "==", "'ConvNet4'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet4", "\n", "if", "classifier", "==", "\"Euclidean\"", "or", "classifier", "==", "\"Cosine\"", ":", "\n", "                ", "self", ".", "encoder", "=", "ConvNet4", "(", "pooling", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "encoder", "=", "ConvNet4", "(", "pooling", "=", "False", ")", "\n", "", "self", ".", "input_channels", "=", "64", "\n", "", "elif", "model_type", "==", "'ConvNet6'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet6", "\n", "self", ".", "encoder", "=", "ConvNet6", "(", ")", "\n", "self", ".", "input_channels", "=", "64", "\n", "", "elif", "model_type", "==", "'ResNet10'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet10", "\n", "self", ".", "encoder", "=", "ResNet10", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "elif", "model_type", "==", "\"ResNet18\"", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet18", "\n", "self", ".", "encoder", "=", "ResNet18", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "elif", "model_type", "==", "\"ResNet34\"", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet34", "\n", "self", ".", "encoder", "=", "ResNet34", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "elif", "model_type", "==", "\"WRN28\"", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "wrn28", "import", "Wide_ResNet", "\n", "self", ".", "encoder", "=", "Wide_ResNet", "(", "depth", "=", "28", ",", "widen_factor", "=", "10", ",", "dropout_rate", "=", "0.5", ")", "\n", "self", ".", "input_channels", "=", "640", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "''", ")", "\n", "\n", "", "if", "proxy_type", "==", "\"Cosine\"", ":", "\n", "            ", "self", ".", "proxy", "=", "CosineProxy", "(", "num_shot", "=", "self", ".", "num_shot", ")", "\n", "", "elif", "proxy_type", "==", "\"Sum\"", ":", "\n", "            ", "self", ".", "proxy", "=", "SumProxy", "(", "dim", "=", "1", ")", "\n", "", "elif", "proxy_type", "==", "\"Mean\"", ":", "\n", "            ", "self", ".", "proxy", "=", "MeanProxy", "(", "dim", "=", "1", ")", "\n", "", "elif", "proxy_type", "==", "\"Proxy\"", "and", "classifier", "==", "\"Euclidean\"", ":", "\n", "            ", "self", ".", "proxy", "=", "Proxy", "(", "num_shot", "=", "self", ".", "num_shot", ",", "is_softmax", "=", "True", ")", "\n", "", "elif", "proxy_type", "==", "\"Proxy\"", "and", "classifier", "!=", "\"Euclidean\"", ":", "\n", "            ", "self", ".", "proxy", "=", "Proxy", "(", "num_shot", "=", "self", ".", "num_shot", ",", "is_softmax", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"\"", ")", "\n", "\n", "", "if", "classifier", "==", "\"3DConv\"", ":", "\n", "            ", "self", ".", "classifier", "=", "ConvClassifier", "(", ")", "\n", "", "elif", "classifier", "==", "\"FC\"", ":", "\n", "            ", "self", ".", "classifier", "=", "FCClassifier", "(", ")", "\n", "", "elif", "classifier", "==", "\"Euclidean\"", ":", "\n", "            ", "self", ".", "classifier", "=", "EuclideanClassifier", "(", ")", "\n", "", "elif", "classifier", "==", "\"Cosine\"", ":", "\n", "            ", "self", ".", "classifier", "=", "CosineClassifier", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "\"Classifier value error\"", ")", "\n", "", "self", ".", "se", "=", "SELayer", "(", "self", ".", "input_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.proxynet.ProxyNet.forward": [[249, 295], ["proxynet.ProxyNet.encoder", "proxynet.ProxyNet.se", "proxynet.ProxyNet.encoder", "proxynet.ProxyNet.se", "support.unsqueeze.unsqueeze.reshape", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "support.unsqueeze.unsqueeze.unsqueeze().repeat", "query.unsqueeze.unsqueeze.unsqueeze().repeat", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "support.unsqueeze.unsqueeze.reshape", "query.unsqueeze.unsqueeze.reshape", "isinstance", "proxynet.ProxyNet.classifier", "out.view.view.view", "support.unsqueeze.unsqueeze.squeeze", "proxynet.ProxyNet.proxy", "support.unsqueeze.unsqueeze.unsqueeze", "query.unsqueeze.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "support.unsqueeze.unsqueeze.unsqueeze", "query.unsqueeze.unsqueeze.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "isinstance", "proxynet.ProxyNet.classifier", "out.view.view.view", "isinstance", "proxynet.ProxyNet.classifier", "out.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "support", ",", "query", ")", ":", "\n", "        ", "support", "=", "self", ".", "encoder", "(", "support", ")", "\n", "support", "=", "self", ".", "se", "(", "support", ")", "\n", "\n", "query", "=", "self", ".", "encoder", "(", "query", ")", "\n", "query", "=", "self", ".", "se", "(", "query", ")", "\n", "\n", "shape", "=", "support", ".", "shape", "\n", "support", "=", "support", ".", "reshape", "(", "self", ".", "num_shot", ",", "self", ".", "num_way", ",", "support", ".", "shape", "[", "1", "]", ",", "support", ".", "shape", "[", "2", "]", ",", "support", ".", "shape", "[", "3", "]", ")", "\n", "support", "=", "torch", ".", "transpose", "(", "support", ",", "0", ",", "1", ")", "\n", "\n", "#for one shot", "\n", "if", "support", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "            ", "support", "=", "support", ".", "squeeze", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "support", "=", "self", ".", "proxy", "(", "support", ")", "\n", "\n", "", "support", "=", "support", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_query", "*", "self", ".", "num_way", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "query", "=", "query", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_way", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "query", "=", "torch", ".", "transpose", "(", "query", ",", "0", ",", "1", ")", "\n", "\n", "support", "=", "support", ".", "reshape", "(", "-", "1", ",", "support", ".", "shape", "[", "2", "]", ",", "support", ".", "shape", "[", "3", "]", ",", "support", ".", "shape", "[", "4", "]", ")", "\n", "query", "=", "query", ".", "reshape", "(", "-", "1", ",", "query", ".", "shape", "[", "2", "]", ",", "query", ".", "shape", "[", "3", "]", ",", "query", ".", "shape", "[", "4", "]", ")", "\n", "\n", "feature", "=", "None", "\n", "if", "isinstance", "(", "self", ".", "classifier", ",", "ConvClassifier", ")", ":", "\n", "            ", "support", "=", "support", ".", "unsqueeze", "(", "1", ")", "\n", "query", "=", "query", ".", "unsqueeze", "(", "1", ")", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "support", ",", "query", ")", ",", "1", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "classifier", ",", "FCClassifier", ")", ":", "\n", "            ", "feature", "=", "torch", ".", "cat", "(", "(", "support", ",", "query", ")", ",", "1", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "classifier", ",", "EuclideanClassifier", ")", ":", "\n", "            ", "out", "=", "self", ".", "classifier", "(", "support", ",", "query", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "num_way", ")", "\n", "return", "out", "\n", "", "elif", "isinstance", "(", "self", ".", "classifier", ",", "CosineClassifier", ")", ":", "\n", "            ", "out", "=", "self", ".", "classifier", "(", "support", ",", "query", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "num_way", ")", "\n", "return", "out", "\n", "", "else", ":", "\n", "            ", "raise", "(", "\"Classifier value error!\"", ")", "\n", "\n", "", "out", "=", "self", ".", "classifier", "(", "feature", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "num_way", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.protonet.ProtoNet.__init__": [[6, 17], ["torch.Module.__init__", "ConvNet", "ResNet", "ValueError"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "if", "args", ".", "model_type", "==", "'ConvNet'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet", "\n", "self", ".", "encoder", "=", "ConvNet", "(", ")", "\n", "", "elif", "args", ".", "model_type", "==", "'ResNet'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet", "\n", "self", ".", "encoder", "=", "ResNet", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.protonet.ProtoNet.forward": [[18, 23], ["protonet.ProtoNet.encoder", "proto.reshape().mean.reshape().mean.reshape().mean", "feat.utils.euclidean_metric", "proto.reshape().mean.reshape().mean.reshape", "protonet.ProtoNet.encoder"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.euclidean_metric"], ["", "", "def", "forward", "(", "self", ",", "data_shot", ",", "data_query", ")", ":", "\n", "        ", "proto", "=", "self", ".", "encoder", "(", "data_shot", ")", "\n", "proto", "=", "proto", ".", "reshape", "(", "self", ".", "args", ".", "shot", ",", "self", ".", "args", ".", "way", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "logits", "=", "euclidean_metric", "(", "self", ".", "encoder", "(", "data_query", ")", ",", "proto", ")", "/", "self", ".", "args", ".", "temperature", "\n", "return", "logits", "", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.matchnet.BidirectionalLSTM.__init__": [[11, 28], ["torch.Module.__init__", "len", "torch.LSTM", "torch.LSTM", "torch.LSTM"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layer_sizes", ",", "batch_size", ",", "vector_dim", ")", ":", "\n", "        ", "super", "(", "BidirectionalLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\"\"\"\n        Initializes a multi layer bidirectional LSTM\n        :param layer_sizes: A list containing the neuron numbers per layer \n                            e.g. [100, 100, 100] returns a 3 layer, 100\n        :param batch_size: The experiments batch size\n        \"\"\"", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "hidden_size", "=", "layer_sizes", "[", "0", "]", "\n", "self", ".", "vector_dim", "=", "vector_dim", "\n", "self", ".", "num_layers", "=", "len", "(", "layer_sizes", ")", "\n", "\n", "self", ".", "lstm", "=", "nn", ".", "LSTM", "(", "input_size", "=", "self", ".", "vector_dim", ",", "\n", "num_layers", "=", "self", ".", "num_layers", ",", "\n", "hidden_size", "=", "self", ".", "hidden_size", ",", "\n", "bidirectional", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.matchnet.BidirectionalLSTM.forward": [[29, 44], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "matchnet.BidirectionalLSTM.lstm", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "c0.cuda.cuda.cuda", "h0.cuda.cuda.cuda"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\"\n        Runs the bidirectional LSTM, produces outputs and saves both forward and backward states as well as gradients.\n        :param x: The inputs should be a list of shape [sequence_length, batch_size, 64]\n        :return: Returns the LSTM outputs, as well as the forward and backward hidden states.\n        \"\"\"", "\n", "c0", "=", "Variable", "(", "torch", ".", "rand", "(", "self", ".", "lstm", ".", "num_layers", "*", "2", ",", "self", ".", "batch_size", ",", "self", ".", "lstm", ".", "hidden_size", ")", ",", "\n", "requires_grad", "=", "False", ")", "\n", "h0", "=", "Variable", "(", "torch", ".", "rand", "(", "self", ".", "lstm", ".", "num_layers", "*", "2", ",", "self", ".", "batch_size", ",", "self", ".", "lstm", ".", "hidden_size", ")", ",", "\n", "requires_grad", "=", "False", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "c0", "=", "c0", ".", "cuda", "(", ")", "\n", "h0", "=", "h0", ".", "cuda", "(", ")", "\n", "", "output", ",", "(", "hn", ",", "cn", ")", "=", "self", ".", "lstm", "(", "inputs", ",", "(", "h0", ",", "c0", ")", ")", "\n", "return", "output", ",", "hn", ",", "cn", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.matchnet.MatchNet.__init__": [[47, 66], ["torch.Module.__init__", "ConvNet4", "matchnet.BidirectionalLSTM", "ResNet", "ValueError"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_bilstm", ",", "model_type", ",", "num_shot", ",", "num_way", ",", "num_query", ",", "temperature", "=", "1", ")", ":", "\n", "        ", "super", "(", "MatchNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_bilstm", "=", "use_bilstm", "\n", "\n", "if", "model_type", "==", "'ConvNet4'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet4", "\n", "self", ".", "encoder", "=", "ConvNet4", "(", ")", "\n", "layer_size", "=", "32", "\n", "", "elif", "model_type", "==", "'ResNet'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet", "\n", "self", ".", "encoder", "=", "ResNet", "(", ")", "\n", "layer_size", "=", "320", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "''", ")", "\n", "\n", "", "if", "self", ".", "use_bilstm", ":", "\n", "            ", "self", ".", "bilstm", "=", "BidirectionalLSTM", "(", "layer_sizes", "=", "[", "layer_size", "]", ",", "\n", "batch_size", "=", "num_query", "*", "num_way", ",", "\n", "vector_dim", "=", "layer_size", "*", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.matchnet.MatchNet.forward": [[67, 93], ["matchnet.MatchNet.encoder", "matchnet.MatchNet.encoder", "matchnet.MatchNet.unsqueeze().repeat", "matchnet.MatchNet.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "combined.permute.permute.split", "torch.normalize", "torch.normalize", "torch.normalize", "combined.permute.permute.permute", "matchnet.MatchNet.bilstm", "combined.permute.permute.permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "matchnet.MatchNet.unsqueeze", "refined_query.permute"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "support_set", ",", "query_set", ")", ":", "\n", "# produce embeddings for support set images", "\n", "        ", "support_set", "=", "self", ".", "encoder", "(", "support_set", ")", "#KN x d", "\n", "# produce embedding for target images", "\n", "query_set", "=", "self", ".", "encoder", "(", "query_set", ")", "# KqN x d    ", "\n", "\n", "num_support", "=", "support_set", ".", "shape", "[", "0", "]", "\n", "num_query", "=", "query_set", ".", "shape", "[", "0", "]", "\n", "support_extend", "=", "support_set", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "[", "num_query", ",", "1", ",", "1", "]", ")", "# KqN x KN x d", "\n", "query_extend", "=", "query_set", ".", "unsqueeze", "(", "1", ")", "# KqN x 1 x d", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "support_extend", ",", "query_extend", "]", ",", "1", ")", "# KqN x (KN + 1) x d", "\n", "\n", "if", "self", ".", "use_bilstm", ":", "\n", "# FCE embedding", "\n", "            ", "combined", "=", "combined", ".", "permute", "(", "[", "1", ",", "0", ",", "2", "]", ")", "# (KN + 1) x KqN x d", "\n", "combined", ",", "hn", ",", "cn", "=", "self", ".", "bilstm", "(", "combined", ")", "\n", "combined", "=", "combined", ".", "permute", "(", "[", "1", ",", "0", ",", "2", "]", ")", "# KqN x (KN + 1) x d", "\n", "\n", "# get similarity between support set embeddings and target", "\n", "", "refined_support", ",", "refined_query", "=", "combined", ".", "split", "(", "(", "self", ".", "num_shot", "*", "self", ".", "num_way", ")", ",", "1", ")", "# KqN x     ", "\n", "\n", "# compute cos similarity", "\n", "refined_support", "=", "F", ".", "normalize", "(", "refined_support", ",", "dim", "=", "2", ")", "# KqN x KN x d", "\n", "# compute inner product, batch inner product", "\n", "logitis", "=", "torch", ".", "bmm", "(", "refined_support", ",", "refined_query", ".", "permute", "(", "[", "0", ",", "2", ",", "1", "]", ")", ")", "/", "temperature", "# KqN x KN x d * KqN x d x 1", "\n", "return", "logitis", "# KqN x KN x 1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.Bottleneck.__init__": [[8, 19], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.Bottleneck.forward": [[20, 41], ["ctmnet.Bottleneck.conv1", "ctmnet.Bottleneck.bn1", "ctmnet.Bottleneck.relu", "ctmnet.Bottleneck.conv2", "ctmnet.Bottleneck.bn2", "ctmnet.Bottleneck.relu", "ctmnet.Bottleneck.conv3", "ctmnet.Bottleneck.bn3", "ctmnet.Bottleneck.relu", "ctmnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.FCClassifier.__init__": [[43, 60], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", "=", "64", ",", "hidden_size", "=", "8", ")", ":", "\n", "        ", "super", "(", "FCClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "1", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ",", "momentum", "=", "1", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", "*", "3", "*", "3", ",", "hidden_size", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.FCClassifier.forward": [[61, 69], ["ctmnet.FCClassifier.layer1", "ctmnet.FCClassifier.layer2", "ctmnet.FCClassifier.view", "ctmnet.FCClassifier.relu", "ctmnet.FCClassifier.fc2", "ctmnet.FCClassifier.size", "ctmnet.FCClassifier.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet.__init__": [[72, 106], ["torch.Module.__init__", "ctmnet.CTMNet._make_layer", "ctmnet.CTMNet._make_layer", "ctmnet.CTMNet._make_layer", "ctmnet.FCClassifier", "ConvNet4", "ConvNet6", "ResNet10", "ResNet18", "ResNet34", "ValueError"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet._make_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet._make_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet._make_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet10", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet18", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet34"], ["    ", "def", "__init__", "(", "self", ",", "model_type", ",", "num_shot", ",", "num_way", ",", "num_query", ")", ":", "\n", "        ", "super", "(", "CTMNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_shot", "=", "num_shot", "\n", "self", ".", "num_way", "=", "num_way", "\n", "self", ".", "num_query", "=", "num_query", "\n", "self", ".", "model_type", "=", "model_type", "\n", "if", "model_type", "==", "'ConvNet4'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet4", "\n", "self", ".", "encoder", "=", "ConvNet4", "(", "pooling", "=", "False", ")", "\n", "self", ".", "input_channels", "=", "64", "\n", "", "elif", "model_type", "==", "'ConvNet6'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet6", "\n", "self", ".", "encoder", "=", "ConvNet6", "(", ")", "\n", "self", ".", "input_channels", "=", "64", "\n", "", "elif", "model_type", "==", "'ResNet10'", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet10", "\n", "self", ".", "encoder", "=", "ResNet10", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "elif", "model_type", "==", "\"ResNet18\"", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet18", "\n", "self", ".", "encoder", "=", "ResNet18", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "elif", "model_type", "==", "\"ResNet34\"", ":", "\n", "            ", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet34", "\n", "self", ".", "encoder", "=", "ResNet34", "(", ")", "\n", "self", ".", "input_channels", "=", "512", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "''", ")", "\n", "\n", "", "self", ".", "concentrator", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "64", ",", "16", ",", "4", ",", "stride", "=", "1", ")", "\n", "self", ".", "projection", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "320", ",", "16", ",", "4", ",", "stride", "=", "1", ")", "\n", "self", ".", "reshaper", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "64", ",", "16", ",", "4", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "classifier", "=", "FCClassifier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet.forward": [[107, 157], ["ctmnet.CTMNet.encoder", "ctmnet.CTMNet.encoder", "ctmnet.CTMNet.concentrator", "torch.transpose.reshape", "torch.transpose.reshape", "torch.transpose.reshape", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.mean.reshape", "torch.mean.reshape", "torch.mean.reshape", "ctmnet.CTMNet.projection", "torch.softmax", "torch.softmax", "torch.softmax", "ctmnet.CTMNet.reshaper", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "ctmnet.CTMNet.reshaper", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose.reshape", "torch.transpose.reshape", "torch.transpose.reshape", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "range", "torch.transpose.squeeze", "torch.transpose.squeeze", "torch.transpose.squeeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "tmp_support.reshape.reshape.unsqueeze().repeat", "tmp_query.reshape.reshape.unsqueeze().repeat", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "tmp_support.reshape.reshape.reshape", "tmp_query.reshape.reshape.reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ctmnet.CTMNet.classifier", "out.view.view.view", "tmp_support.reshape.reshape.unsqueeze", "tmp_query.reshape.reshape.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "support", ",", "query", ")", ":", "\n", "        ", "support", "=", "self", ".", "encoder", "(", "support", ")", "\n", "query", "=", "self", ".", "encoder", "(", "query", ")", "\n", "\n", "#Concentrator", "\n", "_input_P", "=", "self", ".", "concentrator", "(", "support", ")", "\n", "shape", "=", "_input_P", ".", "shape", "\n", "_input_P", "=", "support", ".", "reshape", "(", "self", ".", "num_shot", ",", "self", ".", "num_way", ",", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ")", "\n", "_input_P", "=", "torch", ".", "transpose", "(", "_input_P", ",", "0", ",", "1", ")", "\n", "if", "_input_P", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "            ", "_input_P", "=", "support", ".", "squeeze", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "_input_P", "=", "torch", ".", "mean", "(", "_input_P", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "\n", "\n", "#Projector", "\n", "", "_input_P", "=", "_input_P", ".", "reshape", "(", "1", ",", "_input_P", ".", "shape", "[", "0", "]", "*", "_input_P", ".", "shape", "[", "1", "]", ",", "_input_P", ".", "shape", "[", "2", "]", ",", "_input_P", ".", "shape", "[", "3", "]", ")", "\n", "_input_P", "=", "self", ".", "projection", "(", "_input_P", ")", "\n", "P", "=", "F", ".", "softmax", "(", "_input_P", ",", "dim", "=", "1", ")", "\n", "\n", "#We use matmul here since the original code of CTM is using matmul", "\n", "support", "=", "self", ".", "reshaper", "(", "support", ")", "\n", "support", "=", "torch", ".", "matmul", "(", "support", ",", "P", ")", "\n", "query", "=", "self", ".", "reshaper", "(", "query", ")", "\n", "query", "=", "torch", ".", "matmul", "(", "query", ",", "P", ")", "\n", "\n", "#relation net", "\n", "support", "=", "support", ".", "reshape", "(", "self", ".", "num_shot", ",", "self", ".", "num_way", ",", "support", ".", "shape", "[", "1", "]", ",", "support", ".", "shape", "[", "2", "]", ",", "support", ".", "shape", "[", "3", "]", ")", "\n", "support", "=", "torch", ".", "transpose", "(", "support", ",", "0", ",", "1", ")", "\n", "\n", "new_out", "=", "None", "\n", "for", "i", "in", "range", "(", "self", ".", "num_shot", ")", ":", "\n", "            ", "tmp_support", "=", "support", "[", ":", ",", "i", ",", "...", "]", "\n", "tmp_query", "=", "query", "\n", "tmp_support", "=", "tmp_support", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_query", "*", "self", ".", "num_way", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "tmp_query", "=", "tmp_query", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_way", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "tmp_query", "=", "torch", ".", "transpose", "(", "tmp_query", ",", "0", ",", "1", ")", "\n", "\n", "tmp_support", "=", "tmp_support", ".", "reshape", "(", "-", "1", ",", "tmp_support", ".", "shape", "[", "2", "]", ",", "tmp_support", ".", "shape", "[", "3", "]", ",", "tmp_support", ".", "shape", "[", "4", "]", ")", "\n", "tmp_query", "=", "tmp_query", ".", "reshape", "(", "-", "1", ",", "tmp_query", ".", "shape", "[", "2", "]", ",", "tmp_query", ".", "shape", "[", "3", "]", ",", "tmp_query", ".", "shape", "[", "4", "]", ")", "\n", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "tmp_support", ",", "tmp_query", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "feature", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "num_way", ")", "\n", "\n", "if", "new_out", "is", "None", ":", "\n", "                ", "new_out", "=", "out", "\n", "", "else", ":", "\n", "                ", "new_out", "=", "new_out", "+", "out", "\n", "\n", "", "", "return", "new_out", "/", "self", ".", "num_shot", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.ctmnet.CTMNet._make_layer": [[158, 169], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.classifier.Classifier.__init__": [[9, 24], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "ConvNet", "ResNet", "ValueError"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_type", ",", "num_class", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "model_type", "==", "'ConvNet'", ":", "\n", "            ", "hdim", "=", "64", "\n", "from", "feat", ".", "networks", ".", "convnet", "import", "ConvNet", "\n", "self", ".", "encoder", "=", "ConvNet", "(", ")", "\n", "", "elif", "model_type", "==", "'ResNet'", ":", "\n", "            ", "hdim", "=", "640", "\n", "from", "feat", ".", "networks", ".", "resnet", "import", "ResNet", "as", "ResNet", "\n", "self", ".", "encoder", "=", "ResNet", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "''", ")", "\n", "\n", "", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "hdim", ",", "num_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.classifier.Classifier.forward": [[25, 30], ["classifier.Classifier.encoder", "classifier.Classifier.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ",", "is_emb", "=", "False", ")", ":", "\n", "        ", "out", "=", "self", ".", "encoder", "(", "data", ")", "\n", "if", "not", "is_emb", ":", "\n", "            ", "out", "=", "self", ".", "fc", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.models.classifier.Classifier.forward_proto": [[31, 40], ["classifier.Classifier.encoder", "proto.reshape().mean.reshape().mean.reshape().mean", "classifier.Classifier.encoder", "feat.utils.euclidean_metric", "proto.reshape().mean.reshape().mean.reshape"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.feat.utils.euclidean_metric"], ["", "def", "forward_proto", "(", "self", ",", "data_shot", ",", "data_query", ",", "way", "=", "None", ")", ":", "\n", "        ", "if", "way", "is", "None", ":", "\n", "            ", "way", "=", "self", ".", "num_class", "\n", "", "proto", "=", "self", ".", "encoder", "(", "data_shot", ")", "\n", "proto", "=", "proto", ".", "reshape", "(", "self", ".", "args", ".", "shot", ",", "way", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "\n", "query", "=", "self", ".", "encoder", "(", "data_query", ")", "\n", "logits", "=", "euclidean_metric", "(", "query", ",", "proto", ")", "\n", "return", "logits", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.ConvNet4.__init__": [[22, 32], ["torch.Module.__init__", "convnet.conv_block", "convnet.conv_block", "convnet.conv_block", "convnet.conv_block", "convnet.conv_block_no_pooling", "convnet.conv_block_no_pooling"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling"], ["    ", "def", "__init__", "(", "self", ",", "x_dim", "=", "3", ",", "hid_dim", "=", "64", ",", "z_dim", "=", "64", ",", "pooling", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvNet4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "conv_block", "(", "x_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer2", "=", "conv_block", "(", "hid_dim", ",", "hid_dim", ")", "\n", "if", "pooling", ":", "\n", "            ", "self", ".", "layer3", "=", "conv_block", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer4", "=", "conv_block", "(", "hid_dim", ",", "z_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer3", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer4", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.ConvNet4.forward": [[33, 40], ["convnet.ConvNet4.layer1", "convnet.ConvNet4.layer2", "convnet.ConvNet4.layer3", "convnet.ConvNet4.layer4"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "\n", "return", "x4", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.ConvNet6.__init__": [[43, 51], ["torch.Module.__init__", "convnet.conv_block", "convnet.conv_block", "convnet.conv_block_no_pooling", "convnet.conv_block_no_pooling", "convnet.conv_block_no_pooling", "convnet.conv_block_no_pooling"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling"], ["    ", "def", "__init__", "(", "self", ",", "x_dim", "=", "3", ",", "hid_dim", "=", "64", ",", "z_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "ConvNet6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "conv_block", "(", "x_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer2", "=", "conv_block", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer3", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer4", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer5", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "hid_dim", ")", "\n", "self", ".", "layer6", "=", "conv_block_no_pooling", "(", "hid_dim", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.ConvNet6.forward": [[52, 61], ["convnet.ConvNet6.layer1", "convnet.ConvNet6.layer2", "convnet.ConvNet6.layer3", "convnet.ConvNet6.layer4", "convnet.ConvNet6.layer5", "convnet.ConvNet6.layer6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x2", "=", "self", ".", "layer2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "layer3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "layer4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "layer5", "(", "x4", ")", "\n", "x6", "=", "self", ".", "layer6", "(", "x4", ")", "\n", "\n", "return", "x6", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block": [[5, 11], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d"], "function", ["None"], ["def", "conv_block", "(", "in_channels", ",", "out_channels", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.convnet.conv_block_no_pooling": [[13, 18], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["", "def", "conv_block_no_pooling", "(", "in_channels", ",", "out_channels", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.Flatten.__init__": [[15, 17], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.Flatten.forward": [[18, 20], ["x.view", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.SimpleBlock.__init__": [[22, 51], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.BatchNorm2d", "resnet.SimpleBlock.parametrized_layers.append", "resnet.SimpleBlock.parametrized_layers.append", "resnet.init_layer"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.init_layer"], ["    ", "def", "__init__", "(", "self", ",", "indim", ",", "outdim", ",", "half_res", ")", ":", "\n", "        ", "super", "(", "SimpleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "indim", "=", "indim", "\n", "self", ".", "outdim", "=", "outdim", "\n", "\n", "self", ".", "C1", "=", "nn", ".", "Conv2d", "(", "indim", ",", "outdim", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", "if", "half_res", "else", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "BN1", "=", "nn", ".", "BatchNorm2d", "(", "outdim", ")", "\n", "self", ".", "C2", "=", "nn", ".", "Conv2d", "(", "outdim", ",", "outdim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "BN2", "=", "nn", ".", "BatchNorm2d", "(", "outdim", ")", "\n", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "parametrized_layers", "=", "[", "self", ".", "C1", ",", "self", ".", "C2", ",", "self", ".", "BN1", ",", "self", ".", "BN2", "]", "\n", "self", ".", "half_res", "=", "half_res", "\n", "\n", "# if the input number of channels is not equal to the output, then need a 1x1 convolution", "\n", "if", "indim", "!=", "outdim", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv2d", "(", "indim", ",", "outdim", ",", "1", ",", "2", "if", "half_res", "else", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "BNshortcut", "=", "nn", ".", "BatchNorm2d", "(", "outdim", ")", "\n", "\n", "self", ".", "parametrized_layers", ".", "append", "(", "self", ".", "shortcut", ")", "\n", "self", ".", "parametrized_layers", ".", "append", "(", "self", ".", "BNshortcut", ")", "\n", "self", ".", "shortcut_type", "=", "'1x1'", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_type", "=", "'identity'", "\n", "\n", "", "for", "layer", "in", "self", ".", "parametrized_layers", ":", "\n", "            ", "init_layer", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.SimpleBlock.forward": [[52, 63], ["resnet.SimpleBlock.C1", "resnet.SimpleBlock.BN1", "resnet.SimpleBlock.relu1", "resnet.SimpleBlock.C2", "resnet.SimpleBlock.BN2", "resnet.SimpleBlock.relu2", "resnet.SimpleBlock.BNshortcut", "resnet.SimpleBlock.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "C1", "(", "x", ")", "\n", "out", "=", "self", ".", "BN1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu1", "(", "out", ")", "\n", "out", "=", "self", ".", "C2", "(", "out", ")", "\n", "out", "=", "self", ".", "BN2", "(", "out", ")", "\n", "short_out", "=", "x", "if", "self", ".", "shortcut_type", "==", "'identity'", "else", "self", ".", "BNshortcut", "(", "self", ".", "shortcut", "(", "x", ")", ")", "\n", "out", "=", "out", "+", "short_out", "\n", "out", "=", "self", ".", "relu2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet.__init__": [[65, 89], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.MaxPool2d", "resnet.init_layer", "resnet.init_layer", "range", "torch.Sequential", "len", "range", "block", "trunk.append"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.init_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.init_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "list_of_num_layers", ",", "list_of_out_dims", ")", ":", "\n", "# list_of_num_layers specifies number of layers in each stage", "\n", "# list_of_out_dims specifies number of output channel for each stage", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "len", "(", "list_of_num_layers", ")", "==", "4", ",", "'Can have only four stages'", "\n", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "pool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "init_layer", "(", "conv1", ")", "\n", "init_layer", "(", "bn1", ")", "\n", "\n", "trunk", "=", "[", "conv1", ",", "bn1", ",", "relu", ",", "pool1", "]", "\n", "\n", "indim", "=", "64", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "list_of_num_layers", "[", "i", "]", ")", ":", "\n", "                ", "half_res", "=", "(", "i", ">=", "1", ")", "and", "(", "j", "==", "0", ")", "\n", "B", "=", "block", "(", "indim", ",", "list_of_out_dims", "[", "i", "]", ",", "half_res", ")", "\n", "trunk", ".", "append", "(", "B", ")", "\n", "indim", "=", "list_of_out_dims", "[", "i", "]", "\n", "\n", "", "", "self", ".", "trunk", "=", "nn", ".", "Sequential", "(", "*", "trunk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet.forward": [[90, 94], ["resnet.ResNet.trunk"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "trunk", "(", "x", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.init_layer": [[5, 13], ["isinstance", "L.weight.data.normal_", "isinstance", "math.sqrt", "L.weight.data.fill_", "L.bias.data.fill_", "float"], "function", ["None"], ["def", "init_layer", "(", "L", ")", ":", "\n", "# Initialization using fan-in", "\n", "    ", "if", "isinstance", "(", "L", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "n", "=", "L", ".", "kernel_size", "[", "0", "]", "*", "L", ".", "kernel_size", "[", "1", "]", "*", "L", ".", "out_channels", "\n", "L", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.0", "/", "float", "(", "n", ")", ")", ")", "\n", "", "elif", "isinstance", "(", "L", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "L", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "L", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet10": [[95, 97], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet10", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "SimpleBlock", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "64", ",", "128", ",", "256", ",", "512", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet18": [[98, 100], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "SimpleBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "[", "64", ",", "128", ",", "256", ",", "512", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.resnet.ResNet34": [[101, 103], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "SimpleBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "[", "64", ",", "128", ",", "256", ",", "512", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.wide_basic.__init__": [[23, 35], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "wide_basic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.wide_basic.forward": [[37, 43], ["wrn28.wide_basic.dropout", "wrn28.wide_basic.conv2", "wrn28.wide_basic.shortcut", "wrn28.wide_basic.conv1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wrn28.wide_basic.bn2", "wrn28.wide_basic.bn1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "dropout", "(", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__": [[45, 61], ["torch.Module.__init__", "int", "print", "wrn28.conv3x3", "wrn28.Wide_ResNet._wide_layer", "wrn28.Wide_ResNet._wide_layer", "wrn28.Wide_ResNet._wide_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.__init__", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.conv3x3", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet._wide_layer", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet._wide_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "widen_factor", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "Wide_ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "16", "\n", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", ",", "'Wide-resnet depth should be 6n+4'", "\n", "n", "=", "int", "(", "(", "depth", "-", "4", ")", "/", "6", ")", "\n", "k", "=", "widen_factor", "\n", "\n", "print", "(", "'| Wide-Resnet %dx%d'", "%", "(", "depth", ",", "k", ")", ")", "\n", "nStages", "=", "[", "16", ",", "16", "*", "k", ",", "32", "*", "k", ",", "64", "*", "k", "]", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "nStages", "[", "0", "]", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "1", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "2", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_wide_layer", "(", "wide_basic", ",", "nStages", "[", "3", "]", ",", "n", ",", "dropout_rate", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nStages", "[", "3", "]", ",", "momentum", "=", "0.9", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet._wide_layer": [[62, 71], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_wide_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "dropout_rate", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "dropout_rate", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.Wide_ResNet.forward": [[72, 82], ["wrn28.Wide_ResNet.conv1", "wrn28.Wide_ResNet.layer1", "wrn28.Wide_ResNet.layer2", "wrn28.Wide_ResNet.layer3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "wrn28.Wide_ResNet.bn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "#out = F.avg_pool2d(out, 8)", "\n", "#out = out.view(out.size(0), -1)", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.conv3x3": [[10, 12], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.networks.wrn28.conv_init": [[13, 21], ["classname.find", "torch.xavier_uniform", "torch.constant", "classname.find", "torch.constant", "torch.constant", "numpy.sqrt"], "function", ["None"], ["", "def", "conv_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "xavier_uniform", "(", "m", ".", "weight", ",", "gain", "=", "np", ".", "sqrt", "(", "2", ")", ")", "\n", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.backbones.backboneplot": [[7, 12], ["matplotlib.gca", "plt.gca.set_ylim", "plt.gca.set_title", "seaborn.lineplot"], "function", ["None"], ["def", "backboneplot", "(", "data", ",", "title", ")", ":", "\n", "    ", "axes", "=", "plt", ".", "gca", "(", ")", "\n", "axes", ".", "set_ylim", "(", "[", "40", ",", "90", "]", ")", "\n", "axes", ".", "set_title", "(", "title", ")", "\n", "sns", ".", "lineplot", "(", "data", "=", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.backbones.plot": [[13, 23], ["matplotlib.figure", "matplotlib.subplot", "matplotlib.plot", "backbones.backboneplot", "matplotlib.subplot", "matplotlib.plot", "backbones.backboneplot", "matplotlib.savefig", "matplotlib.show", "str"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.plot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.backboneplot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.plot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.backboneplot"], ["", "def", "plot", "(", "cub_data", ",", "mini_imagenet_data", ",", "num_shot", "=", "5", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "2", ",", "1", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ")", "\n", "backboneplot", "(", "cub_data", ",", "title", "=", "\"CUB\"", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "2", ",", "2", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "1", "]", ")", "\n", "backboneplot", "(", "mini_imagenet_data", ",", "title", "=", "\"mini-ImageNet\"", ")", "\n", "plt", ".", "savefig", "(", "\"embedding_functions_\"", "+", "str", "(", "num_shot", ")", "+", "\"shot.eps\"", ",", "format", "=", "'eps'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.backboneplot": [[7, 12], ["matplotlib.gca", "plt.gca.set_ylim", "plt.gca.set_title", "seaborn.lineplot"], "function", ["None"], ["def", "backboneplot", "(", "data", ",", "title", ")", ":", "\n", "    ", "axes", "=", "plt", ".", "gca", "(", ")", "\n", "axes", ".", "set_ylim", "(", "[", "40", ",", "90", "]", ")", "\n", "axes", ".", "set_title", "(", "title", ")", "\n", "sns", ".", "lineplot", "(", "data", "=", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.plot": [[13, 23], ["matplotlib.figure", "matplotlib.subplot", "matplotlib.plot", "augmentation.backboneplot", "matplotlib.subplot", "matplotlib.plot", "augmentation.backboneplot", "matplotlib.savefig", "matplotlib.show", "str"], "function", ["home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.plot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.backboneplot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.plot", "home.repos.pwc.inspect_result.buptxiaofeng_proxynet_fsl.figures.augmentation.backboneplot"], ["", "def", "plot", "(", "cub_data", ",", "mini_imagenet_data", ",", "num_shot", "=", "5", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "5", ")", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "2", ",", "1", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ")", "\n", "backboneplot", "(", "cub_data", ",", "title", "=", "\"CUB\"", ")", "\n", "plt", ".", "subplot", "(", "1", ",", "2", ",", "2", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "0", "]", ",", "[", "0", ",", "1", "]", ")", "\n", "backboneplot", "(", "mini_imagenet_data", ",", "title", "=", "\"mini-ImageNet\"", ")", "\n", "plt", ".", "savefig", "(", "\"embedding_functions_\"", "+", "str", "(", "num_shot", ")", "+", "\"shot.eps\"", ",", "format", "=", "'eps'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]]}