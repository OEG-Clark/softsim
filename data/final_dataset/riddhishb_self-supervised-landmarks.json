{"home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.train.train": [[16, 100], ["torch.optim.Adam", "model.float.train", "utils.get_dataset", "utils.get_dataset", "float", "open", "utils.log_print", "torch.save", "model.float.parameters", "model.float.float", "model.float.train", "model.float.eval", "numpy.linspace", "numpy.linspace", "x.to.to", "model.float.", "x.to.split", "utils.cond_num_loss_v2", "utils.l2_loss", "optim.Adam.zero_grad", "loss.backward", "optim.Adam.step", "loss.item", "ls.cond_num_loss_v2.item", "torch.no_grad", "utils.log_print", "torch.save", "len", "len", "x.to.float", "imgT.float", "x.to.to", "model.float.", "x.to.split", "utils.l2_loss", "loss.item", "x.to.float", "imgT.float"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.train.train", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_dataset", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_dataset", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.log_print", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.train.train", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.cond_num_loss_v2", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l2_loss", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.log_print", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l2_loss"], ["def", "train", "(", "model", ",", "model_type", ",", "config", ",", "device", ")", ":", "\n", "\t", "'''\n\tTraining  for the Phantom Data\n\t'''", "\n", "# first load the data", "\n", "\n", "lr", "=", "config", "[", "'learning_rate'", "]", "\n", "data_dir", "=", "config", "[", "'data_dir'", "]", "\n", "save_dir", "=", "config", "[", "'save_dir'", "]", "\n", "num_epochs", "=", "config", "[", "'num_epochs'", "]", "\n", "print_iter", "=", "config", "[", "'print_iter'", "]", "\n", "save_iter", "=", "config", "[", "'save_iter'", "]", "\n", "batch_size", "=", "config", "[", "'batch_size'", "]", "\n", "start_epsilon", "=", "config", "[", "'start_epsilon'", "]", "\n", "loadStep", "=", "config", "[", "'load_step'", "]", "\n", "reg_alpha", "=", "config", "[", "'reg_alpha'", "]", "\n", "input_channels", "=", "config", "[", "\"input_channels\"", "]", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "# model, optimizer = nt.load_checkpoint(model, optimizer, saveDir, str(loadStep), loadStep)", "\n", "num_land", "=", "config", "[", "'num_landmarks'", "]", "\n", "model", ".", "train", "(", ")", "\n", "train_loader", "=", "dt", ".", "get_dataset", "(", "model_type", ",", "data_dir", ",", "batch_size", ",", "file_type", "=", "'npy'", ",", "data_type", "=", "'train'", ",", "noise", "=", "False", ")", "\n", "val_loader", "=", "dt", ".", "get_dataset", "(", "model_type", ",", "data_dir", ",", "batch_size", ",", "file_type", "=", "'npy'", ",", "data_type", "=", "'validation'", ",", "noise", "=", "False", ")", "\n", "\n", "epoch", "=", "loadStep", "\n", "best_val", "=", "float", "(", "'inf'", ")", "\n", "logger", "=", "open", "(", "save_dir", "+", "\"train_log.csv\"", ",", "\"w+\"", ")", "\n", "nt", ".", "log_print", "(", "logger", ",", "[", "\"Epoch\"", ",", "\"train_loss\"", ",", "\"train_reg_loss\"", ",", "\"val_loss\"", "]", ")", "\n", "\n", "while", "epoch", "<", "num_epochs", ":", "\n", "\n", "\t\t", "train_loss", "=", "0", "\n", "train_reg_loss", "=", "0", "\n", "count", "=", "0", "\n", "model", "=", "model", ".", "float", "(", ")", "\n", "if", "epoch", "<", "1", ":", "\n", "\t\t\t", "noweps", "=", "np", ".", "linspace", "(", "start_epsilon", ",", "0", ",", "len", "(", "train_loader", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "noweps", "=", "np", ".", "linspace", "(", "0", ",", "0", ",", "len", "(", "train_loader", ")", ")", "\n", "", "model", ".", "train", "(", ")", "\n", "for", "x", "in", "train_loader", ":", "\n", "# print(x.shape)", "\n", "\t\t\t", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "epsilon", "=", "noweps", "[", "count", "]", "\n", "outImg", ",", "landT", ",", "landS", ",", "A", "=", "model", "(", "x", ".", "float", "(", ")", ",", "epsilon", ",", "False", ",", "0", ",", "0", ")", "\n", "[", "imgS", ",", "imgT", "]", "=", "x", ".", "split", "(", "[", "input_channels", ",", "input_channels", "]", ",", "1", ")", "\n", "reg_loss", "=", "ls", ".", "cond_num_loss_v2", "(", "A", ",", "device", ")", "\n", "# TODO: loss type", "\n", "l2_loss", ",", "rel_loss", ",", "denon", "=", "ls", ".", "l2_loss", "(", "imgT", ".", "float", "(", ")", ",", "outImg", ",", "device", ")", "\n", "loss", "=", "l2_loss", "+", "reg_alpha", "*", "reg_loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "\n", "train_reg_loss", "+=", "reg_loss", ".", "item", "(", ")", "\n", "count", "+=", "1", "\n", "", "epoch", "+=", "1", "\n", "train_loss", "=", "train_loss", "/", "count", "\n", "train_reg_loss", "=", "train_reg_loss", "/", "count", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\t\t\t", "val_loss", "=", "0", "\n", "count_new", "=", "0", "\n", "for", "x", "in", "val_loader", ":", "\n", "\t\t\t\t", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "outImg", ",", "landT", ",", "landS", ",", "A", "=", "model", "(", "x", ".", "float", "(", ")", ",", "0", ",", "False", ",", "0", ",", "0", ")", "\n", "[", "imgS", ",", "imgT", "]", "=", "x", ".", "split", "(", "[", "input_channels", ",", "input_channels", "]", ",", "1", ")", "\n", "# TODO: loss type", "\n", "loss", ",", "rel_loss", ",", "denon", "=", "ls", ".", "l2_loss", "(", "imgT", ".", "float", "(", ")", ",", "outImg", ",", "device", ")", "\n", "val_loss", "+=", "loss", ".", "item", "(", ")", "\n", "count_new", "+=", "1", "\n", "# these lines are for spending less time during validation", "\n", "if", "count_new", ">", "10", ":", "\n", "\t\t\t\t\t", "break", "\n", "# break", "\n", "", "", "val_loss", "=", "val_loss", "/", "count_new", "\n", "nt", ".", "log_print", "(", "logger", ",", "[", "epoch", ",", "train_loss", ",", "train_reg_loss", ",", "val_loss", "]", ")", "\n", "# print('Epoch = ', epoch, ' Train Loss = ', ' Val Loss = ', tot_loss, tot_rel_loss)", "\n", "# add a part to save some test images and their predicted things", "\n", "", "if", "best_val", ">", "val_loss", ":", "\n", "\t\t\t", "best_val", "=", "val_loss", "\n", "torch", ".", "save", "(", "model", ",", "save_dir", "+", "'/best_model.pt'", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "model", ",", "save_dir", "+", "'/final_model.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.train.runFunction": [[101, 122], ["torch.device", "json.load", "print", "print", "print", "train.train", "open", "os.exists", "os.makedirs", "os.makedirs", "networks.self_supervised_model_2d().to", "networks.self_supervised_model_3d().to", "torch.cuda.is_available", "networks.self_supervised_model_2d", "networks.self_supervised_model_3d"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.train.train"], ["", "def", "runFunction", "(", "args", ")", ":", "\n", "\n", "\t", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "config", "=", "json", ".", "load", "(", "open", "(", "args", ".", "config_file", ")", ")", "\n", "# create the save directory", "\n", "save_dir", "=", "config", "[", "'save_dir'", "]", "\n", "if", "not", "osp", ".", "exists", "(", "save_dir", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "\n", "# TODO: add an option to print to a log file", "\n", "", "print", "(", "\"///////////////////////////////////////\"", ")", "\n", "print", "(", "\"Defining Model\"", ")", "\n", "print", "(", "\"///////////////////////////////////////\"", ")", "\n", "\n", "if", "args", ".", "model", "==", "\"2d\"", ":", "\n", "\t\t", "model", "=", "nt_2d", ".", "self_supervised_model_2d", "(", "config", ",", "device", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "\t\t", "model", "=", "nt_3d", ".", "self_supervised_model_3d", "(", "config", ",", "device", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "train", "(", "model", ",", "args", ".", "model", ",", "config", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.redundancy_removal": [[18, 67], ["model.float.eval", "model.float.float", "numpy.zeros", "red_metric.mean.mean", "numpy.flip", "x.to.to", "model.float.", "x.to.split", "utils.l2_loss", "landS.cpu().detach().numpy.cpu().detach().numpy", "landT.cpu().detach().numpy.cpu().detach().numpy", "range", "numpy.argsort", "x.to.float", "imgT.detach().cpu().numpy.float", "numpy.arange", "numpy.delete", "x.to.split", "model.float.", "utils.l2_loss", "temp.detach().cpu().numpy", "t.detach().cpu().numpy.detach().cpu().numpy", "s.detach().cpu().numpy.detach().cpu().numpy", "A.detach().cpu().numpy.detach().cpu().numpy", "imgS.detach().cpu().numpy.detach().cpu().numpy", "imgT.detach().cpu().numpy.detach().cpu().numpy", "landS.cpu().detach().numpy.cpu().detach", "landT.cpu().detach().numpy.cpu().detach", "x.to.float", "torch.from_numpy().to", "torch.from_numpy().to", "imgT.detach().cpu().numpy.float", "temp.detach().cpu", "t.detach().cpu().numpy.detach().cpu", "s.detach().cpu().numpy.detach().cpu", "A.detach().cpu().numpy.detach().cpu", "imgS.detach().cpu().numpy.detach().cpu", "imgT.detach().cpu().numpy.detach().cpu", "landS.cpu().detach().numpy.cpu", "landT.cpu().detach().numpy.cpu", "torch.from_numpy", "torch.from_numpy", "temp.detach", "t.detach().cpu().numpy.detach", "s.detach().cpu().numpy.detach", "A.detach().cpu().numpy.detach", "imgS.detach().cpu().numpy.detach", "imgT.detach().cpu().numpy.detach"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l2_loss", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l2_loss"], ["def", "redundancy_removal", "(", "model", ",", "model_type", ",", "loader", ",", "config", ",", "device", ",", "num_out", ")", ":", "\n", "\t", "'''\n\tIdentifies the points with less threshold and get rid of them\n\t'''", "\n", "\n", "if", "model_type", "==", "'3d'", ":", "\n", "\t\t", "img_l", "=", "config", "[", "'image_length'", "]", "\n", "\n", "", "num_land", "=", "config", "[", "'num_landmarks'", "]", "\n", "\n", "input_channels", "=", "config", "[", "'input_channels'", "]", "\n", "model", ".", "eval", "(", ")", "\n", "model", "=", "model", ".", "float", "(", ")", "\n", "\n", "red_metric", "=", "np", ".", "zeros", "(", "[", "num_land", ",", "200", "]", ")", "\n", "count", "=", "0", "\n", "for", "x", "in", "loader", ":", "\n", "\t\t", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "# base loss ", "\n", "outImg", ",", "landT", ",", "landS", ",", "A", "=", "model", "(", "x", ".", "float", "(", ")", ",", "0", ",", "False", ",", "0", ",", "0", ")", "\n", "[", "imgS", ",", "imgT", "]", "=", "x", ".", "split", "(", "[", "input_channels", ",", "input_channels", "]", ",", "1", ")", "\n", "loss", ",", "rel_loss", ",", "denon", "=", "ls", ".", "l2_loss", "(", "imgT", ".", "float", "(", ")", ",", "outImg", ",", "device", ")", "\n", "landS", "=", "landS", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "landT", "=", "landT", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "# Now compute the things for different landmarks and stuff", "\n", "for", "i", "in", "range", "(", "num_land", ")", ":", "\n", "\t\t\t", "idx", "=", "np", ".", "arange", "(", "num_land", ")", "\n", "idx", "=", "np", ".", "delete", "(", "idx", ",", "i", ")", "\n", "newlandT", "=", "landT", "[", ":", ",", "idx", ",", ":", "]", "\n", "newlandS", "=", "landS", "[", ":", ",", "idx", ",", ":", "]", "\n", "# now run the TPS warp with this parameters", "\n", "[", "imgS", ",", "imgT", "]", "=", "x", ".", "split", "(", "[", "input_channels", ",", "input_channels", "]", ",", "1", ")", "\n", "outImg", ",", "t", ",", "s", ",", "A", "=", "model", "(", "x", ".", "float", "(", ")", ",", "0", ",", "True", ",", "torch", ".", "from_numpy", "(", "newlandS", ")", ".", "to", "(", "device", ")", ",", "torch", ".", "from_numpy", "(", "newlandT", ")", ".", "to", "(", "device", ")", ")", "\n", "loss_i", ",", "rel_loss_i", ",", "denon", "=", "ls", ".", "l2_loss", "(", "imgT", ".", "float", "(", ")", ",", "outImg", ",", "device", ")", "\n", "temp", "=", "(", "loss", "-", "loss_i", ")", "**", "2", "\n", "red_metric", "[", "i", ",", "count", "]", "=", "temp", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "t", "=", "t", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "s", "=", "s", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "A", "=", "A", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "imgS", "=", "imgS", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "imgT", "=", "imgT", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "count", "+=", "1", "\n", "if", "count", ">", "199", ":", "\n", "\t\t\t", "break", "\n", "# red_metric = red_metric/count", "\n", "# perform thresholding", "\n", "", "", "red_metric", "=", "red_metric", ".", "mean", "(", "1", ")", "\n", "red_ids", "=", "np", ".", "flip", "(", "np", ".", "argsort", "(", "red_metric", ")", ")", "\n", "return", "red_ids", "[", ":", "num_out", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.test": [[68, 145], ["model.float.eval", "model.float.float", "x.to.to", "model.float.", "x.to.split", "x.to.float", "numpy.arange", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "imgS[].reshape", "imgT[].reshape", "imgS.squeeze().cpu().detach().numpy.permute", "imgS.squeeze().cpu().detach().numpy.squeeze().cpu().detach().numpy", "imgT.squeeze().cpu().detach().numpy.permute", "imgT.squeeze().cpu().detach().numpy.squeeze().cpu().detach().numpy", "matplotlib.imsave", "matplotlib.imsave", "outImg[].reshape", "outImg[].reshape.permute", "finalOut.squeeze().cpu().detach().numpy.squeeze().cpu().detach().numpy", "matplotlib.imsave", "landS.cpu().detach().numpy", "numpy.save", "matplotlib.subplots", "matplotlib.imshow", "range", "matplotlib.savefig", "matplotlib.clf", "matplotlib.subplots", "axis.imshow", "axis.imshow", "axis.set_title", "matplotlib.savefig", "matplotlib.clf", "len", "imgS.squeeze().cpu().detach().numpy.astype", "imgT.squeeze().cpu().detach().numpy.astype", "finalOut.squeeze().cpu().detach().numpy.astype", "imgS.squeeze().cpu().detach().numpy.astype", "ax.scatter", "ax.text", "imgT.squeeze().cpu().detach().numpy.astype", "finalOut.squeeze().cpu().detach().numpy.astype", "imgS.squeeze().cpu().detach().numpy.squeeze().cpu().detach", "imgT.squeeze().cpu().detach().numpy.squeeze().cpu().detach", "finalOut.squeeze().cpu().detach().numpy.squeeze().cpu().detach", "landS.cpu().detach", "str", "str", "str", "str", "str", "str", "str", "imgS.squeeze().cpu().detach().numpy.squeeze().cpu", "imgT.squeeze().cpu().detach().numpy.squeeze().cpu", "finalOut.squeeze().cpu().detach().numpy.squeeze().cpu", "landS.cpu", "imgS.squeeze().cpu().detach().numpy.squeeze", "imgT.squeeze().cpu().detach().numpy.squeeze", "finalOut.squeeze().cpu().detach().numpy.squeeze"], "function", ["None"], ["", "def", "test", "(", "model", ",", "model_type", ",", "loader", ",", "config", ",", "device", ",", "red_metric", "=", "None", ")", ":", "\n", "\t", "'''\n\tTesting \n\t'''", "\n", "\n", "save_dir", "=", "config", "[", "'save_dir'", "]", "\n", "img_h", "=", "config", "[", "'image_height'", "]", "\n", "img_w", "=", "config", "[", "'image_width'", "]", "\n", "if", "model_type", "==", "'3d'", ":", "\n", "\t\t", "img_l", "=", "config", "[", "'image_length'", "]", "\n", "\n", "", "num_land", "=", "config", "[", "'num_landmarks'", "]", "\n", "\n", "input_channels", "=", "config", "[", "'input_channels'", "]", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "model", "=", "model", ".", "float", "(", ")", "\n", "count", "=", "0", "\n", "\n", "for", "x", "in", "loader", ":", "\n", "\t\t", "x", "=", "x", ".", "to", "(", "device", ")", "\n", "# the loader is constructed with batch size of 1 ==> to travel through", "\n", "# all the images in the dataset we need to get the source image", "\n", "# for the first size.loader times and then break the process.", "\n", "\n", "outImg", ",", "landT", ",", "landS", ",", "A", "=", "model", "(", "x", ".", "float", "(", ")", ",", "0", ",", "False", ",", "0", ",", "0", ")", "\n", "[", "imgS", ",", "imgT", "]", "=", "x", ".", "split", "(", "[", "input_channels", ",", "input_channels", "]", ",", "1", ")", "\n", "if", "red_metric", "is", "not", "None", ":", "\n", "\t\t\t", "prj", "=", "red_metric", "\n", "", "else", ":", "\n", "\t\t\t", "prj", "=", "np", ".", "arange", "(", "num_land", ")", "\n", "\n", "", "parent_dir", "=", "save_dir", "+", "'/Test/'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "parent_dir", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "parent_dir", ")", "\n", "\n", "", "if", "model_type", "==", "'2d'", ":", "\n", "\t\t\t", "imgS", "=", "imgS", "[", "0", ",", "...", "]", ".", "reshape", "(", "1", ",", "input_channels", ",", "img_h", ",", "img_w", ")", "\n", "imgT", "=", "imgT", "[", "0", ",", "...", "]", ".", "reshape", "(", "1", ",", "input_channels", ",", "img_h", ",", "img_w", ")", "\n", "imgS", "=", "imgS", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "imgS", "=", "imgS", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "imsave", "(", "parent_dir", "+", "'imgS'", "+", "str", "(", "count", ")", "+", "'.png'", ",", "imgS", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "plt", ".", "imsave", "(", "parent_dir", "+", "'imgT'", "+", "str", "(", "count", ")", "+", "'.png'", ",", "imgT", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "outImg", "=", "outImg", "[", "0", ",", "...", "]", ".", "reshape", "(", "1", ",", "input_channels", ",", "img_h", ",", "img_w", ")", "\n", "finalOut", "=", "outImg", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "finalOut", "=", "finalOut", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "plt", ".", "imsave", "(", "parent_dir", "+", "'regImg'", "+", "str", "(", "count", ")", "+", "'.png'", ",", "finalOut", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "outPoints", "=", "landS", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "outPoints", "=", "outPoints", "[", "0", ",", "...", "]", "\n", "outPoints", "=", "outPoints", "[", "prj", ",", ":", "]", "\n", "outPoints", "[", ":", ",", "0", "]", "=", "(", "outPoints", "[", ":", ",", "0", "]", "+", "1", ")", "*", "0.5", "*", "(", "img_w", "-", "1", ")", "\n", "outPoints", "[", ":", ",", "1", "]", "=", "(", "outPoints", "[", ":", ",", "1", "]", "+", "1", ")", "*", "0.5", "*", "(", "img_h", "-", "1", ")", "\n", "np", ".", "save", "(", "parent_dir", "+", "'landS'", "+", "str", "(", "count", ")", "+", "'.npy'", ",", "outPoints", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "plt", ".", "imshow", "(", "imgS", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "for", "i", "in", "range", "(", "outPoints", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t", "ax", ".", "scatter", "(", "outPoints", "[", "i", ",", "0", "]", ",", "outPoints", "[", "i", ",", "1", "]", ",", "c", "=", "'c'", ",", "edgecolors", "=", "'k'", ")", "\n", "ax", ".", "text", "(", "outPoints", "[", "i", ",", "0", "]", "+", "0.3", ",", "outPoints", "[", "i", ",", "1", "]", "+", "0.3", ",", "str", "(", "prj", "[", "i", "]", ")", ",", "fontsize", "=", "9", ",", "c", "=", "'m'", ")", "\n", "\n", "", "plt", ".", "savefig", "(", "parent_dir", "+", "'overlayImg_source'", "+", "str", "(", "count", ")", "+", "'.png'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "fig", ",", "axis", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "5", ",", "5", ")", ")", "\n", "axis", ".", "imshow", "(", "imgT", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cmap", "=", "'Reds'", ",", "alpha", "=", "0.6", ")", "\n", "axis", ".", "imshow", "(", "finalOut", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cmap", "=", "'Blues'", ",", "alpha", "=", "0.6", ")", "\n", "axis", ".", "set_title", "(", "'Images overlayed'", ")", "\n", "plt", ".", "savefig", "(", "parent_dir", "+", "'regAcc'", "+", "str", "(", "count", ")", "+", "'.png'", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "", "if", "count", "<", "len", "(", "loader", ")", ":", "\n", "\t\t\t", "count", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.runFunction": [[146, 183], ["torch.device", "json.load", "print", "print", "print", "torch.load().to", "utils.get_dataset", "open", "os.exists", "os.makedirs", "os.makedirs", "networks.self_supervised_model_2d().to", "networks.self_supervised_model_3d().to", "test.redundancy_removal", "test.test", "test.test", "torch.cuda.is_available", "torch.load", "networks.self_supervised_model_2d", "networks.self_supervised_model_3d"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_dataset", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.redundancy_removal", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.test", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.None.test.test"], ["", "", "", "def", "runFunction", "(", "args", ")", ":", "\n", "\n", "\t", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "config", "=", "json", ".", "load", "(", "open", "(", "args", ".", "config_file", ")", ")", "\n", "# create the save directory", "\n", "save_dir", "=", "config", "[", "'save_dir'", "]", "\n", "if", "not", "osp", ".", "exists", "(", "save_dir", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "\n", "# TODO: add an option to print to a log file", "\n", "", "print", "(", "\"///////////////////////////////////////\"", ")", "\n", "print", "(", "\"Defining Model\"", ")", "\n", "print", "(", "\"///////////////////////////////////////\"", ")", "\n", "model_type", "=", "args", ".", "model", "\n", "if", "model_type", "==", "\"2d\"", ":", "\n", "\t\t", "model", "=", "nt_2d", ".", "self_supervised_model_2d", "(", "config", ",", "device", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "\t\t", "model", "=", "nt_3d", ".", "self_supervised_model_3d", "(", "config", ",", "device", ")", ".", "to", "(", "device", ")", "\n", "\n", "# get the loader", "\n", "", "data_dir", "=", "config", "[", "'data_dir'", "]", "\n", "save_dir", "=", "config", "[", "'save_dir'", "]", "\n", "\n", "if", "args", ".", "use_best", ":", "\n", "\t\t", "model_path", "=", "save_dir", "+", "'/best_model.pt'", "\n", "", "else", ":", "\n", "\t\t", "model_path", "=", "save_dir", "+", "'/final_model.pt'", "\n", "\n", "", "model", "=", "torch", ".", "load", "(", "model_path", ")", ".", "to", "(", "device", ")", "\n", "loader", "=", "dt", ".", "get_dataset", "(", "model_type", ",", "data_dir", ",", "1", ",", "file_type", "=", "'npy'", ",", "data_type", "=", "'test'", ",", "noise", "=", "False", ")", "\n", "\n", "if", "args", ".", "redu_remove", ":", "\n", "\t\t", "red_metric", "=", "redundancy_removal", "(", "model", ",", "model_type", ",", "loader", ",", "config", ",", "device", ",", "args", ".", "num_out", ")", "\n", "test", "(", "model", ",", "model_type", ",", "loader", ",", "config", ",", "device", ",", "red_metric", "=", "red_metric", ")", "\n", "", "else", ":", "\n", "\t\t", "test", "(", "model", ",", "model_type", ",", "loader", ",", "config", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.image_data_2d.__init__": [[84, 99], ["os.join", "os.join", "len", "os.join", "os.join", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "file_type", "=", "\"npy\"", ",", "data_type", "=", "'train'", ",", "noise", "=", "False", ")", ":", "\n", "\t\t", "'''\n\t\tDataloader for 2D image datasets --> this is for training and validation\n\t\t--> file_type denotes the type in which images are stored, it can be \"npy\" or \"png/jpg\"\n\t\t--> data_type can be train validation or test\n\t\tThe directory should have three directories --> train validation or test\n\t\t'''", "\n", "\n", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "data_type", ")", "\n", "self", ".", "data", "=", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "data", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.image_data_2d.__len__": [[100, 102], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.image_data_2d.__getitem__": [[103, 123], ["torch.randperm", "numpy.load", "numpy.load", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "numpy.random.normal", "numpy.random.normal"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "\t\t", "tmpid", "=", "torch", ".", "randperm", "(", "self", ".", "size", ")", "\n", "img_path_s", "=", "self", ".", "data", "[", "index", "%", "self", ".", "size", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "tmpid", "[", "0", "]", "%", "self", ".", "size", "]", "\n", "imgS", "=", "np", ".", "load", "(", "img_path_s", ")", "\n", "imgT", "=", "np", ".", "load", "(", "img_path_t", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "self", ".", "size", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "\n", "", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgS", "=", "imgS", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "# combine imgS and imgT ", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranioData3D_Pairs.__init__": [[131, 154], ["sorted", "numpy.save", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs1'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs1'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "np", ".", "save", "(", "'trainData.npy'", ",", "self", ".", "data", ")", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranioData3D_Pairs.__len__": [[155, 157], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranioData3D_Pairs.__getitem__": [[158, 181], ["nrrd.read", "nrrd.read", "imgS.permute.permute.reshape", "imgT.permute.permute.reshape", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "int", "int", "numpy.random.normal", "numpy.random.normal", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "", "mean", "=", "49.9", "\n", "std", "=", "163.9", "\n", "imgS", "=", "(", "imgS", "-", "mean", ")", "/", "std", "\n", "imgT", "=", "(", "imgT", "-", "mean", ")", "/", "std", "\n", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "# # print(imgS.shape)", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs.__init__": [[186, 211], ["sorted", "numpy.save", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "mean", ",", "std", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "imgmean", "=", "mean", "\n", "self", ".", "imgstd", "=", "std", "\n", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'ValPairs'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "np", ".", "save", "(", "'trainData.npy'", ",", "self", ".", "data", ")", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs.__len__": [[212, 214], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs.__getitem__": [[215, 236], ["nrrd.read", "nrrd.read", "imgS.permute.permute.reshape", "imgT.permute.permute.reshape", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "int", "int", "numpy.random.normal", "numpy.random.normal", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "", "imgS", "=", "(", "imgS", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgT", "=", "(", "imgT", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "# # print(imgS.shape)", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.femurs_ss.__init__": [[241, 269], ["sorted", "sorted", "data_utils.femurs_ss.get_seg", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.get_seg"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "mean", ",", "std", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "imgmean", "=", "mean", "\n", "self", ".", "imgstd", "=", "std", "\n", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'NormalPairs'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "self", ".", "data_fnm", "=", "sorted", "(", "os", ".", "listdir", "(", "folder_path", ")", ")", "\n", "self", ".", "seg_dict", "=", "self", ".", "get_seg", "(", ")", "\n", "# np.save('trainData.npy', self.data)", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.femurs_ss.get_seg": [[270, 283], ["os.join", "os.join", "sorted", "numpy.array", "range", "sorted", "len", "numpy.isin", "os.join", "os.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.where"], "methods", ["None"], ["", "", "", "def", "get_seg", "(", "self", ")", ":", "\n", "\t\t", "seg_path", "=", "osp", ".", "join", "(", "self", ".", "inDir", ",", "'DTFull'", ")", "\n", "self", ".", "seg_files", "=", "sorted", "(", "[", "osp", ".", "join", "(", "seg_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "seg_path", ")", "]", ")", "\n", "self", ".", "seg_fnms", "=", "np", ".", "array", "(", "sorted", "(", "os", ".", "listdir", "(", "seg_path", ")", ")", ")", "\n", "seg_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t", "fnm", "=", "self", ".", "data_fnm", "[", "i", "]", "\n", "if", "np", ".", "isin", "(", "fnm", ",", "self", ".", "seg_fnms", ")", ":", "\n", "\t\t\t\t", "idx", "=", "np", ".", "where", "(", "self", ".", "seg_fnms", "==", "fnm", ")", "[", "0", "]", "[", "0", "]", "\n", "seg_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "self", ".", "seg_files", "[", "idx", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "seg_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "'none'", "\n", "", "", "return", "seg_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.femurs_ss.__len__": [[285, 287], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.femurs_ss.__getitem__": [[288, 336], ["nrrd.read", "nrrd.read", "imgS.permute.permute.reshape", "imgT.permute.permute.reshape", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "nrrd.read", "nrrd.read", "torch.from_numpy", "segS.reshape.reshape.permute", "torch.clamp", "torch.from_numpy", "segT.reshape.reshape.permute", "torch.clamp", "torch.cat", "torch.cat", "int", "int", "segS.reshape.reshape.reshape", "segT.reshape.reshape.reshape", "segS.reshape.reshape.astype", "segT.reshape.reshape.astype", "torch.zeros", "torch.zeros", "numpy.random.normal", "numpy.random.normal", "pdb.set_trace", "torch.rand", "torch.rand", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "seg_path_s", "=", "self", ".", "seg_dict", "[", "img_path_s", "]", "\n", "seg_path_t", "=", "self", ".", "seg_dict", "[", "img_path_t", "]", "\n", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "\n", "", "imgS", "=", "(", "imgS", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgT", "=", "(", "imgT", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "# # print(imgS.shape)", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "\n", "if", "seg_path_s", "!=", "'none'", "and", "seg_path_t", "!=", "'none'", ":", "\n", "\t\t\t", "[", "segS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "seg_path_s", ")", "\n", "[", "segT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "seg_path_t", ")", "\n", "\n", "try", ":", "\n", "\t\t\t\t", "segS", "=", "segS", ".", "reshape", "(", "segS", ".", "shape", "[", "0", "]", ",", "segS", ".", "shape", "[", "1", "]", ",", "segS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "segT", "=", "segT", ".", "reshape", "(", "segT", ".", "shape", "[", "0", "]", ",", "segT", ".", "shape", "[", "1", "]", ",", "segS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "", "except", ":", "\n", "\t\t\t\t", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "segS", "=", "torch", ".", "from_numpy", "(", "segS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segS", "=", "segS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "segS", "=", "torch", ".", "clamp", "(", "segS", ",", "0", ",", "1", ")", "\n", "segT", "=", "torch", ".", "from_numpy", "(", "segT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segT", "=", "segT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "segT", "=", "torch", ".", "clamp", "(", "segT", ",", "0", ",", "1", ")", "\n", "seg", "=", "torch", ".", "cat", "(", "[", "segS", ",", "segT", "]", ",", "0", ")", "\n", "msk", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "segS", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "+", "torch", ".", "rand", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "*", "0.001", "\n", "segT", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "+", "torch", ".", "rand", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "*", "0.001", "\n", "seg", "=", "torch", ".", "cat", "(", "[", "segS", ",", "segT", "]", ",", "0", ")", "\n", "msk", "=", "0", "\n", "", "return", "[", "img", ",", "seg", ",", "msk", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS.__init__": [[341, 370], ["sorted", "sorted", "data_utils.cardiacData3D_Pairs_SS.get_seg", "numpy.save", "numpy.ones", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.get_seg"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "mean", ",", "std", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "imgmean", "=", "mean", "\n", "self", ".", "imgstd", "=", "std", "\n", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "self", ".", "kernel", "=", "np", ".", "ones", "(", "(", "3", ",", "3", ")", ",", "np", ".", "float32", ")", "/", "27", "\n", "self", ".", "train", "=", "train", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'images'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "self", ".", "data_fnm", "=", "sorted", "(", "os", ".", "listdir", "(", "folder_path", ")", ")", "\n", "self", ".", "seg_dict", "=", "self", ".", "get_seg", "(", ")", "\n", "np", ".", "save", "(", "'trainData_lge_images.npy'", ",", "self", ".", "data", ")", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS.get_seg": [[371, 384], ["os.join", "os.join", "sorted", "numpy.array", "range", "sorted", "len", "numpy.isin", "os.join", "os.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.where"], "methods", ["None"], ["", "", "", "def", "get_seg", "(", "self", ")", ":", "\n", "\t\t", "seg_path", "=", "osp", ".", "join", "(", "self", ".", "inDir", ",", "'DT_all'", ")", "\n", "self", ".", "seg_files", "=", "sorted", "(", "[", "osp", ".", "join", "(", "seg_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "seg_path", ")", "]", ")", "\n", "self", ".", "seg_fnms", "=", "np", ".", "array", "(", "sorted", "(", "os", ".", "listdir", "(", "seg_path", ")", ")", ")", "\n", "seg_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t", "fnm", "=", "self", ".", "data_fnm", "[", "i", "]", "\n", "if", "np", ".", "isin", "(", "fnm", ",", "self", ".", "seg_fnms", ")", ":", "\n", "\t\t\t\t", "idx", "=", "np", ".", "where", "(", "self", ".", "seg_fnms", "==", "fnm", ")", "[", "0", "]", "[", "0", "]", "\n", "seg_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "self", ".", "seg_files", "[", "idx", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "seg_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "'none'", "\n", "", "", "return", "seg_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS.__len__": [[386, 388], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS.__getitem__": [[389, 453], ["data_utils.get_affine", "data_utils.get_affine", "nrrd.read", "nrrd.read", "scipy.ndimage.affine_transform.reshape", "scipy.ndimage.affine_transform.reshape", "torch.from_numpy", "scipy.ndimage.affine_transform.permute", "torch.from_numpy", "scipy.ndimage.affine_transform.permute", "torch.cat", "scipy.ndimage.affine_transform.astype", "scipy.ndimage.affine_transform.astype", "nrrd.read", "nrrd.read", "cv2.filter2D", "cv2.filter2D", "torch.from_numpy", "segS.reshape.reshape.permute", "torch.clamp", "torch.from_numpy", "segT.reshape.reshape.permute", "torch.clamp", "torch.cat", "torch.zeros().float", "torch.zeros().float", "torch.cat", "int", "int", "scipy.ndimage.affine_transform", "scipy.ndimage.affine_transform", "scipy.ndimage.affine_transform", "scipy.ndimage.affine_transform", "segS.reshape.reshape.reshape", "segT.reshape.reshape.reshape", "segS.reshape.reshape.astype", "segT.reshape.reshape.astype", "numpy.random.normal", "numpy.random.normal", "numpy.random.uniform", "numpy.random.uniform", "pdb.set_trace", "torch.zeros", "torch.zeros", "len", "len"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_affine", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_affine"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "seg_path_s", "=", "self", ".", "seg_dict", "[", "img_path_s", "]", "\n", "seg_path_t", "=", "self", ".", "seg_dict", "[", "img_path_t", "]", "\n", "# import pdb; pdb.set_trace()", "\n", "self", ".", "affine_mat_s", "=", "get_affine", "(", "5", ",", "2", ")", "\n", "self", ".", "affine_mat_t", "=", "get_affine", "(", "5", ",", "2", ")", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "\n", "# imgS = (imgS - self.imgmean)/self.imgstd", "\n", "# imgT = (imgT - self.imgmean)/self.imgstd", "\n", "", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "# # print(imgS.shape)", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "\n", "if", "seg_path_s", "!=", "'none'", "and", "seg_path_t", "!=", "'none'", ":", "\n", "\t\t\t", "[", "segS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "seg_path_s", ")", "\n", "[", "segT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "seg_path_t", ")", "\n", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", "and", "self", ".", "train", ":", "\n", "\t\t\t\t", "imgT", "=", "affine_transform", "(", "imgT", ",", "self", ".", "affine_mat_t", ")", "\n", "segT", "=", "affine_transform", "(", "segT", ",", "self", ".", "affine_mat_t", ")", "\n", "# imgT = img_jitter(imgT)", "\n", "# print('tgt')", "\n", "# import pdb; pdb.set_trace()", "\n", "", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", "and", "self", ".", "train", ":", "\n", "# imgS = img_jitter(imgT)", "\n", "\t\t\t\t", "imgS", "=", "affine_transform", "(", "imgS", ",", "self", ".", "affine_mat_s", ")", "\n", "segS", "=", "affine_transform", "(", "segS", ",", "self", ".", "affine_mat_s", ")", "\n", "#\t # import pdb; pdb.set_trace()", "\n", "# imgS = intensity_jitter(imgS)", "\n", "# imgT = intensity_jitter(imgT)", "\n", "", "segS", "=", "cv2", ".", "filter2D", "(", "segS", ",", "-", "1", ",", "self", ".", "kernel", ")", "\n", "segT", "=", "cv2", ".", "filter2D", "(", "segT", ",", "-", "1", ",", "self", ".", "kernel", ")", "\n", "try", ":", "\n", "\t\t\t\t", "segS", "=", "segS", ".", "reshape", "(", "segS", ".", "shape", "[", "0", "]", ",", "segS", ".", "shape", "[", "1", "]", ",", "segS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "segT", "=", "segT", ".", "reshape", "(", "segT", ".", "shape", "[", "0", "]", ",", "segT", ".", "shape", "[", "1", "]", ",", "segS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "", "except", ":", "\n", "\t\t\t\t", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "segS", "=", "torch", ".", "from_numpy", "(", "segS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segS", "=", "segS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "segS", "=", "torch", ".", "clamp", "(", "segS", ",", "0", ",", "1", ")", "\n", "segT", "=", "torch", ".", "from_numpy", "(", "segT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segT", "=", "segT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "segT", "=", "torch", ".", "clamp", "(", "segT", ",", "0", ",", "1", ")", "\n", "seg", "=", "torch", ".", "cat", "(", "[", "segS", ",", "segT", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "\t\t\t", "segS", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", ".", "float", "(", ")", "\n", "segT", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", ".", "float", "(", ")", "\n", "seg", "=", "torch", ".", "cat", "(", "[", "segS", ",", "segT", "]", ",", "0", ")", "\n", "\n", "\n", "", "return", "[", "img", ",", "seg", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.__init__": [[458, 485], ["sorted", "sorted", "data_utils.cardiacData3D_Pairs_SS_DT.get_seg", "numpy.save", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.get_seg"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "mean", ",", "std", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "imgmean", "=", "mean", "\n", "self", ".", "imgstd", "=", "std", "\n", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'ValPairs'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "self", ".", "data_fnm", "=", "sorted", "(", "os", ".", "listdir", "(", "folder_path", ")", ")", "\n", "self", ".", "dt_dict", "=", "self", ".", "get_seg", "(", ")", "\n", "np", ".", "save", "(", "'trainData.npy'", ",", "self", ".", "data", ")", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.get_seg": [[486, 499], ["os.join", "os.join", "sorted", "numpy.array", "range", "sorted", "len", "numpy.isin", "os.join", "os.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "numpy.where"], "methods", ["None"], ["", "", "", "def", "get_seg", "(", "self", ")", ":", "\n", "\t\t", "dt_path", "=", "osp", ".", "join", "(", "self", ".", "inDir", ",", "'DT'", ")", "\n", "self", ".", "dt_files", "=", "sorted", "(", "[", "osp", ".", "join", "(", "dt_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "dt_path", ")", "]", ")", "\n", "self", ".", "dt_fnms", "=", "np", ".", "array", "(", "sorted", "(", "os", ".", "listdir", "(", "dt_path", ")", ")", ")", "\n", "dt_dict", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t", "fnm", "=", "self", ".", "data_fnm", "[", "i", "]", "\n", "if", "np", ".", "isin", "(", "fnm", ",", "self", ".", "dt_fnms", ")", ":", "\n", "\t\t\t\t", "idx", "=", "np", ".", "where", "(", "self", ".", "dt_fnms", "==", "fnm", ")", "[", "0", "]", "[", "0", "]", "\n", "dt_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "self", ".", "dt_files", "[", "idx", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "dt_dict", "[", "self", ".", "data", "[", "i", "]", "]", "=", "'none'", "\n", "", "", "return", "dt_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.__len__": [[501, 503], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cardiacData3D_Pairs_SS_DT.__getitem__": [[504, 548], ["nrrd.read", "nrrd.read", "imgS.permute.permute.reshape", "imgT.permute.permute.reshape", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "nrrd.read", "torch.zeros.reshape", "torch.from_numpy", "torch.zeros.permute", "torch.zeros", "nrrd.read", "torch.zeros.reshape", "torch.from_numpy", "torch.zeros.permute", "torch.zeros", "int", "int", "torch.zeros.astype", "torch.zeros.astype", "torch.zeros.float", "torch.zeros.float", "numpy.random.normal", "numpy.random.normal", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "dt_path_s", "=", "self", ".", "dt_dict", "[", "img_path_s", "]", "\n", "dt_path_t", "=", "self", ".", "dt_dict", "[", "img_path_t", "]", "\n", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS", "=", "imgS", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS", ".", "shape", ")", "\n", "imgT", "=", "imgT", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT", ".", "shape", ")", "\n", "", "imgS", "=", "(", "imgS", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgT", "=", "(", "imgT", "-", "self", ".", "imgmean", ")", "/", "self", ".", "imgstd", "\n", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "# # print(imgS.shape)", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "\n", "if", "dt_path_s", "!=", "'none'", ":", "\n", "\t\t\t", "[", "segS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "dt_path_s", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "segS", "=", "segS", ".", "reshape", "(", "segS", ".", "shape", "[", "0", "]", ",", "segS", ".", "shape", "[", "1", "]", ",", "segS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "segS", "=", "torch", ".", "from_numpy", "(", "segS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segS", "=", "segS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "", "else", ":", "\n", "\t\t\t", "segS", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "\n", "\n", "", "if", "dt_path_t", "!=", "'none'", ":", "\n", "\t\t\t", "[", "segT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "dt_path_t", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "segT", "=", "segT", ".", "reshape", "(", "segT", ".", "shape", "[", "0", "]", ",", "segT", ".", "shape", "[", "1", "]", ",", "segT", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "segT", "=", "torch", ".", "from_numpy", "(", "segT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "segT", "=", "segT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "", "else", ":", "\n", "\t\t\t", "segT", "=", "torch", ".", "zeros", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "imgS", ".", "shape", "[", "3", "]", ")", "\n", "\n", "", "seg", "=", "torch", ".", "cat", "(", "[", "segS", ".", "float", "(", ")", ",", "segT", ".", "float", "(", ")", "]", ",", "0", ")", "\n", "return", "[", "img", ",", "seg", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranio3D_2D_projectionsData.__init__": [[553, 579], ["sorted", "sorted", "numpy.zeros", "range", "numpy.zeros", "itertools.product", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "os.join", "len", "numpy.arange", "numpy.arange", "numpy.random.uniform", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "len", "len", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dirpath", ",", "train", "=", "None", ",", "noise", "=", "False", ",", "indiv", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "inDir", "=", "dirpath", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "indiv", "=", "indiv", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path", "=", "osp", ".", "join", "(", "dirpath", ",", "'TrainPairs1'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'ValPairs'", ")", "\n", "", "self", ".", "data", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path", ")", "]", ")", "\n", "if", "train", "is", "not", "None", ":", "\n", "\t\t\t", "folder_path_2d", "=", "osp", ".", "join", "(", "dirpath", ",", "'2DProject/TrainPairs1'", ")", "if", "train", "else", "osp", ".", "join", "(", "dirpath", ",", "'2DProject/ValPairs'", ")", "\n", "", "self", ".", "data_2d", "=", "sorted", "(", "[", "osp", ".", "join", "(", "folder_path_2d", ",", "filep", ")", "for", "filep", "in", "os", ".", "listdir", "(", "folder_path_2d", ")", "]", ")", "\n", "# np.save('trainData.npy', self.data)", "\n", "if", "self", ".", "indiv", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", ",", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "data", ")", ")", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "i", ",", "0", "]", "=", "0", "\n", "self", ".", "pairIndices", "[", "i", ",", "1", "]", "=", "i", "\n", "", "", "else", ":", "\n", "\t\t\t", "self", ".", "pairIndices", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "data", ")", "**", "2", ",", "2", "]", ")", "\n", "tempPrd", "=", "itertools", ".", "product", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "data_2d", ")", ")", ",", "np", ".", "arange", "(", "len", "(", "self", ".", "data_2d", ")", ")", ")", "\n", "count", "=", "0", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t\t", "self", ".", "noiseVars", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.1", ",", "high", "=", "2", ",", "size", "=", "[", "len", "(", "self", ".", "data_2d", ")", "**", "2", ",", "2", "]", ")", "\n", "", "for", "i", "in", "tempPrd", ":", "\n", "\t\t\t\t", "self", ".", "pairIndices", "[", "count", ",", "0", "]", "=", "i", "[", "0", "]", "\n", "self", ".", "pairIndices", "[", "count", ",", "1", "]", "=", "i", "[", "1", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranio3D_2D_projectionsData.__len__": [[580, 582], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "pairIndices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.cranio3D_2D_projectionsData.__getitem__": [[583, 617], ["nrrd.read", "nrrd.read", "numpy.load", "numpy.load", "imgS.permute.permute.reshape", "imgT.permute.permute.reshape", "torch.from_numpy", "imgS.permute.permute.permute", "torch.from_numpy", "imgT.permute.permute.permute", "torch.cat", "torch.from_numpy", "imgS_2d.permute.permute.permute", "torch.from_numpy", "imgT_2d.permute.permute.permute", "torch.cat", "imgS.permute.permute.astype", "imgT.permute.permute.astype", "imgS_2d.permute.permute.astype", "imgT_2d.permute.permute.astype", "int", "int", "int", "int", "numpy.random.normal", "numpy.random.normal", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\t\t", "idx", "=", "self", ".", "pairIndices", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "img_path_s_2d", "=", "self", ".", "data_2d", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t_2d", "=", "self", ".", "data_2d", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "img_path_s", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "0", "]", ")", "]", "\n", "img_path_t", "=", "self", ".", "data", "[", "int", "(", "idx", "[", "1", "]", ")", "]", "\n", "[", "imgS", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_s", ")", "\n", "[", "imgT", ",", "f", "]", "=", "nrrd", ".", "read", "(", "img_path_t", ")", "\n", "imgS_2d", "=", "np", ".", "load", "(", "img_path_s_2d", ")", "\n", "imgT_2d", "=", "np", ".", "load", "(", "img_path_t_2d", ")", "\n", "imgS", "=", "imgS", ".", "reshape", "(", "imgS", ".", "shape", "[", "0", "]", ",", "imgS", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "imgT", "=", "imgT", ".", "reshape", "(", "imgT", ".", "shape", "[", "0", "]", ",", "imgT", ".", "shape", "[", "1", "]", ",", "imgS", ".", "shape", "[", "2", "]", ",", "1", ")", "\n", "# imgS_2d = imgS_2d.reshape(imgS_2d.shape[0], imgS_2d.shape[1], imgS_2d.shape[2], 1)", "\n", "# imgT_2d = imgT_2d.reshape(imgT_2d.shape[0], imgT_2d.shape[1], imgS_2d.shape[2], 1) ", "\n", "if", "self", ".", "noise", ":", "\n", "\t\t\t", "curNoise", "=", "self", ".", "noiseVars", "[", "index", "%", "len", "(", "self", ".", "pairIndices", ")", ",", ":", "]", "\n", "imgS_2d", "=", "imgS_2d", "+", "curNoise", "[", "0", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgS_2d", ".", "shape", ")", "\n", "imgT_2d", "=", "imgT_2d", "+", "curNoise", "[", "1", "]", "*", "np", ".", "random", ".", "normal", "(", "size", "=", "imgT_2d", ".", "shape", ")", "\n", "", "mean", "=", "49.9", "\n", "std", "=", "163.9", "\n", "imgS", "=", "(", "imgS", "-", "mean", ")", "/", "std", "\n", "imgT", "=", "(", "imgT", "-", "mean", ")", "/", "std", "\n", "imgS", "=", "torch", ".", "from_numpy", "(", "imgS", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgS", "=", "imgS", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "imgT", "=", "torch", ".", "from_numpy", "(", "imgT", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT", "=", "imgT", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "imgS", ",", "imgT", "]", ",", "0", ")", "\n", "\n", "imgS_2d", "=", "torch", ".", "from_numpy", "(", "imgS_2d", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgS_2d", "=", "imgS_2d", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "imgT_2d", "=", "torch", ".", "from_numpy", "(", "imgT_2d", ".", "astype", "(", "np", ".", "float64", ")", ")", "\n", "imgT_2d", "=", "imgT_2d", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "img_2d", "=", "torch", ".", "cat", "(", "[", "imgS_2d", ",", "imgT_2d", "]", ",", "0", ")", "\n", "return", "[", "img", ",", "img_2d", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.intensity_jitter": [[19, 26], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "img.max", "numpy.random.uniform"], "function", ["None"], ["def", "intensity_jitter", "(", "img", ")", ":", "\n", "\t", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "\t\t", "img", "=", "img", "+", "img", ".", "max", "(", ")", "*", "np", ".", "random", ".", "uniform", "(", "0", ",", "0.2", ")", "\n", "", "if", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "\t\t", "contrastfactor", "=", "np", ".", "random", ".", "uniform", "(", "0.9", ",", "1.1", ")", "\n", "img", "=", "img", "*", "contrastfactor", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_random_rot": [[27, 49], ["numpy.deg2rad", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.eye", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.eye", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.eye", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.matmul", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.matmul"], "function", ["None"], ["", "def", "get_random_rot", "(", "deg", ")", ":", "\n", "\t", "deg", "=", "np", ".", "deg2rad", "(", "deg", ")", "\n", "theta_x", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "deg", ",", "high", "=", "deg", ")", "\n", "theta_y", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "deg", ",", "high", "=", "deg", ")", "\n", "theta_z", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "deg", ",", "high", "=", "deg", ")", "\n", "R1", "=", "np", ".", "eye", "(", "4", ")", "\n", "R1", "[", "1", ",", "1", "]", "=", "np", ".", "cos", "(", "theta_x", ")", "\n", "R1", "[", "2", ",", "2", "]", "=", "np", ".", "cos", "(", "theta_x", ")", "\n", "R1", "[", "1", ",", "2", "]", "=", "-", "1", "*", "np", ".", "sin", "(", "theta_x", ")", "\n", "R1", "[", "2", ",", "1", "]", "=", "np", ".", "sin", "(", "theta_x", ")", "\n", "R2", "=", "np", ".", "eye", "(", "4", ")", "\n", "R2", "[", "0", ",", "0", "]", "=", "np", ".", "cos", "(", "theta_y", ")", "\n", "R2", "[", "2", ",", "2", "]", "=", "np", ".", "cos", "(", "theta_y", ")", "\n", "R2", "[", "2", ",", "0", "]", "=", "-", "1", "*", "np", ".", "sin", "(", "theta_y", ")", "\n", "R2", "[", "0", ",", "2", "]", "=", "np", ".", "sin", "(", "theta_y", ")", "\n", "R3", "=", "np", ".", "eye", "(", "4", ")", "\n", "R3", "[", "1", ",", "1", "]", "=", "np", ".", "cos", "(", "theta_z", ")", "\n", "R3", "[", "2", ",", "2", "]", "=", "np", ".", "cos", "(", "theta_z", ")", "\n", "R3", "[", "1", ",", "2", "]", "=", "-", "1", "*", "np", ".", "sin", "(", "theta_z", ")", "\n", "R3", "[", "2", ",", "1", "]", "=", "np", ".", "sin", "(", "theta_z", ")", "\n", "R", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "R1", ",", "R2", ")", ",", "R3", ")", "\n", "return", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_affine": [[50, 60], ["data_utils.get_random_rot", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_random_rot"], ["", "def", "get_affine", "(", "deg", ",", "range", ")", ":", "\n", "\t", "R", "=", "get_random_rot", "(", "deg", ")", "\n", "del_x", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "range", ",", "high", "=", "range", ")", "\n", "del_y", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "range", ",", "high", "=", "range", ")", "\n", "del_z", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "1", "*", "range", ",", "high", "=", "range", ")", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "R", "[", "0", ",", "3", "]", "=", "del_x", "\n", "R", "[", "1", ",", "3", "]", "=", "del_y", "\n", "R", "[", "2", ",", "3", "]", "=", "del_z", "\n", "return", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.data_utils.get_dataset": [[61, 76], ["torch.utils.data.DataLoader", "data_utils.image_data_2d"], "function", ["None"], ["", "def", "get_dataset", "(", "model_type", ",", "data_dir", ",", "batch_size", ",", "file_type", ",", "data_type", ",", "noise", ")", ":", "\n", "\n", "\t", "if", "model_type", "==", "\"2d\"", ":", "\n", "\t\t", "dataset", "=", "image_data_2d", "(", "data_dir", ",", "file_type", "=", "file_type", ",", "data_type", "=", "data_type", ",", "noise", "=", "noise", ")", "\n", "", "if", "data_type", "==", "\"train\"", ":", "\n", "\t\t", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "\t\t", "shuffle", "=", "False", "\n", "\n", "", "return", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "pin_memory", "=", "True", ",", "\n", "drop_last", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.distance": [[9, 23], ["torch.round().long", "torch.round().long", "torch.round().long", "pdb.set_trace", "torch.round", "torch.round", "torch.round", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["def", "distance", "(", "input_dt", ",", "input_pts", ",", "imgL", ",", "imgW", ",", "imgH", ",", "dim", "=", "'3d'", ")", ":", "\n", "# remove the corner positions", "\n", "    ", "input_pts", "[", ":", ",", ":", ",", "0", "]", "=", "(", "input_pts", "[", ":", ",", ":", ",", "0", "]", "+", "1", ")", "*", "0.5", "*", "(", "imgL", "-", "1", ")", "\n", "input_pts", "[", ":", ",", ":", ",", "1", "]", "=", "(", "input_pts", "[", ":", ",", ":", ",", "1", "]", "+", "1", ")", "*", "0.5", "*", "(", "imgW", "-", "1", ")", "\n", "input_pts", "[", ":", ",", ":", ",", "2", "]", "=", "(", "input_pts", "[", ":", ",", ":", ",", "2", "]", "+", "1", ")", "*", "0.5", "*", "(", "imgH", "-", "1", ")", "\n", "inpts", "=", "torch", ".", "round", "(", "input_pts", ")", ".", "long", "(", ")", "\n", "btsz", "=", "inpts", ".", "shape", "[", "0", "]", "\n", "# concat the torch arange so it fits into a 4D array", "\n", "if", "dim", "==", "'3d'", ":", "\n", "        ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "all_dist", "=", "input_dt", "[", "torch", ".", "arange", "(", "btsz", ")", ",", "0", ",", "inpts", "[", "torch", ".", "arange", "(", "btsz", ")", ",", ":", ",", "0", "]", ",", "inpts", "[", "torch", ".", "arange", "(", "btsz", ")", ",", ":", ",", "1", "]", ",", "inpts", "[", "torch", ".", "arange", "(", "btsz", ")", ",", ":", ",", "2", "]", "]", "\n", "", "else", ":", "\n", "        ", "all_dist", "=", "input_dt", "[", "torch", ".", "arange", "(", "btsz", ")", ",", "0", ",", "inpts", "[", "torch", ".", "arange", "(", "btsz", ")", ",", ":", ",", "0", "]", ",", "inpts", "[", "torch", ".", "arange", "(", "btsz", ")", ",", ":", ",", "1", "]", "]", "\n", "", "return", "all_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample": [[24, 36], ["torch.grid_sample", "torch.autograd.Variable", "torch.grid_sample", "input.data.new().fill_", "input.data.new", "input.size"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample"], ["", "def", "grid_sample", "(", "input", ",", "grid", ",", "canvas", "=", "None", ")", ":", "\n", "    ", "'''\n    Sampling the grid from the 2D data\n    '''", "\n", "output", "=", "F", ".", "grid_sample", "(", "input", ",", "grid", ")", "\n", "if", "canvas", "is", "None", ":", "\n", "        ", "return", "output", "\n", "", "else", ":", "\n", "        ", "input_mask", "=", "Variable", "(", "input", ".", "data", ".", "new", "(", "input", ".", "size", "(", ")", ")", ".", "fill_", "(", "1", ")", ")", "\n", "output_mask", "=", "F", ".", "grid_sample", "(", "input_mask", ",", "grid", ")", "\n", "padded_output", "=", "output", "*", "output_mask", "+", "canvas", "*", "(", "1", "-", "output_mask", ")", "\n", "return", "padded_output", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.atanh": [[37, 39], ["torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "", "def", "atanh", "(", "x", ")", ":", "\n", "    ", "return", "0.5", "*", "torch", ".", "log", "(", "(", "1", "+", "x", ")", "/", "(", "1", "-", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.save_checkpoint": [[40, 52], ["os.join", "model.state_dict", "optim.state_dict", "open", "torch.save", "torch.save", "torch.save", "print"], "function", ["None"], ["", "def", "save_checkpoint", "(", "model", ",", "optim", ",", "saveDir", ",", "fnm", ",", "step", ",", "silent", "=", "True", ")", ":", "\n", "    ", "model_states", "=", "{", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "}", "\n", "optim_states", "=", "{", "'optim'", ":", "optim", ".", "state_dict", "(", ")", ",", "}", "\n", "states", "=", "{", "'iter'", ":", "step", ",", "\n", "'model_states'", ":", "model_states", ",", "\n", "'optim_states'", ":", "optim_states", "}", "\n", "\n", "file_path", "=", "osp", ".", "join", "(", "saveDir", ",", "fnm", ")", "\n", "with", "open", "(", "file_path", ",", "mode", "=", "'wb+'", ")", "as", "f", ":", "\n", "        ", "torch", ".", "save", "(", "states", ",", "f", ")", "\n", "", "if", "not", "silent", ":", "\n", "        ", "print", "(", "\"=> saved checkpoint '{}' (iter {})\"", ".", "format", "(", "file_path", ",", "step", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.load_checkpoint": [[53, 66], ["os.join", "os.isfile", "torch.load", "torch.load", "torch.load", "model.load_state_dict", "optim.load_state_dict", "print", "print", "print"], "function", ["None"], ["", "", "def", "load_checkpoint", "(", "model", ",", "optim", ",", "saveDir", ",", "fnm", ",", "step", ",", "silent", "=", "True", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "file_path", "=", "osp", ".", "join", "(", "saveDir", ",", "fnm", ")", "\n", "if", "osp", ".", "isfile", "(", "file_path", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "file_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model_states'", "]", "[", "'net'", "]", ")", "\n", "optim", ".", "load_state_dict", "(", "checkpoint", "[", "'optim_states'", "]", "[", "'optim'", "]", ")", "\n", "print", "(", "\"=> loaded checkpoint '{}'\"", ".", "format", "(", "file_path", ")", ")", "\n", "return", "model", ",", "optim", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "file_path", ")", ")", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "        ", "print", "(", "'model couldnt load'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.online_mean_and_sd": [[67, 91], ["torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "images.float.float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "function", ["None"], ["", "", "def", "online_mean_and_sd", "(", "loader", ")", ":", "\n", "    ", "\"\"\"Compute the mean and sd in an online fashion\n\n        Var[x] = E[X^2] - E^2[X]\n    \"\"\"", "\n", "cnt", "=", "0", "\n", "fst_moment", "=", "torch", ".", "empty", "(", "1", ")", "\n", "snd_moment", "=", "torch", ".", "empty", "(", "1", ")", "\n", "\n", "for", "[", "images", ",", "x", ",", "xx", "]", "in", "loader", ":", "\n", "        ", "images", "=", "images", ".", "float", "(", ")", "\n", "# [imgS, imgT] = images.split([1, 1], 1)", "\n", "# print(images.shape)", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "images", ".", "shape", "\n", "nb_pixels", "=", "b", "*", "h", "*", "w", "\n", "sum_", "=", "torch", ".", "sum", "(", "images", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "sum_of_square", "=", "torch", ".", "sum", "(", "images", "**", "2", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "fst_moment", "=", "(", "cnt", "*", "fst_moment", "+", "sum_", ")", "/", "(", "cnt", "+", "nb_pixels", ")", "\n", "\n", "snd_moment", "=", "(", "cnt", "*", "snd_moment", "+", "sum_of_square", ")", "/", "(", "cnt", "+", "nb_pixels", ")", "\n", "\n", "cnt", "+=", "nb_pixels", "\n", "\n", "", "return", "fst_moment", ",", "torch", ".", "sqrt", "(", "snd_moment", "-", "fst_moment", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.online_mean_and_sd_3d": [[92, 113], ["torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "images.float.float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "function", ["None"], ["", "def", "online_mean_and_sd_3d", "(", "loader", ")", ":", "\n", "    ", "\"\"\"Compute the mean and sd in an online fashion\n\n        Var[x] = E[X^2] - E^2[X]\n    \"\"\"", "\n", "cnt", "=", "0", "\n", "fst_moment", "=", "torch", ".", "empty", "(", "1", ")", "\n", "snd_moment", "=", "torch", ".", "empty", "(", "1", ")", "\n", "\n", "for", "[", "images", ",", "sx", "]", "in", "loader", ":", "\n", "        ", "images", "=", "images", ".", "float", "(", ")", "\n", "b", ",", "c", ",", "l", ",", "h", ",", "w", "=", "images", ".", "shape", "\n", "nb_pixels", "=", "b", "*", "h", "*", "w", "*", "l", "\n", "sum_", "=", "torch", ".", "sum", "(", "images", ",", "dim", "=", "[", "0", ",", "2", ",", "3", ",", "4", "]", ")", "\n", "sum_of_square", "=", "torch", ".", "sum", "(", "images", "**", "2", ",", "dim", "=", "[", "0", ",", "2", ",", "3", ",", "4", "]", ")", "\n", "fst_moment", "=", "(", "cnt", "*", "fst_moment", "+", "sum_", ")", "/", "(", "cnt", "+", "nb_pixels", ")", "\n", "snd_moment", "=", "(", "cnt", "*", "snd_moment", "+", "sum_of_square", ")", "/", "(", "cnt", "+", "nb_pixels", ")", "\n", "\n", "cnt", "+=", "nb_pixels", "\n", "\n", "", "return", "fst_moment", ",", "torch", ".", "sqrt", "(", "snd_moment", "-", "fst_moment", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.log_print": [[119, 131], ["logger.write", "range", "print", "isinstance", "str", "len", "len"], "function", ["None"], ["def", "log_print", "(", "logger", ",", "values", ")", ":", "\n", "# write to csv", "\n", "\t", "if", "not", "isinstance", "(", "values", "[", "0", "]", ",", "str", ")", ":", "\n", "\t\t", "values", "=", "[", "'%.5f'", "%", "i", "for", "i", "in", "values", "]", "\n", "", "string_values", "=", "[", "str", "(", "i", ")", "for", "i", "in", "values", "]", "\n", "log_string", "=", "','", ".", "join", "(", "string_values", ")", "\n", "logger", ".", "write", "(", "log_string", "+", "'\\n'", ")", "\n", "# print", "\n", "for", "i", "in", "range", "(", "len", "(", "string_values", ")", ")", ":", "\n", "\t\t", "while", "len", "(", "string_values", "[", "i", "]", ")", "<", "15", ":", "\n", "\t\t\t", "string_values", "[", "i", "]", "+=", "' '", "\n", "", "", "print", "(", "' '", ".", "join", "(", "string_values", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.pdist_squared": [[9, 16], ["xx.permute", "torch.clamp", "torch.clamp", "torch.clamp", "torch.bmm", "torch.bmm", "torch.bmm", "x.permute"], "function", ["None"], ["def", "pdist_squared", "(", "x", ")", ":", "\n", "    ", "xx", "=", "(", "x", "**", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "2", ")", "\n", "yy", "=", "xx", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "dist", "=", "xx", "+", "yy", "-", "2.0", "*", "torch", ".", "bmm", "(", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ",", "x", ")", "\n", "dist", "[", "dist", "!=", "dist", "]", "=", "0", "\n", "dist", "=", "torch", ".", "clamp", "(", "dist", ",", "0.0", ",", "10000", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC": [[17, 62], ["torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "pdist_squared().squeeze", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.ReplicationPad3d", "torch.ReplicationPad3d", "torch.avg_pool3d", "torch.mean", "torch.mean", "torch.mean", "torch.clamp", "torch.clamp", "torch.clamp", "torch.exp", "torch.exp", "torch.exp", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.Tensor().long.unsqueeze().repeat().view", "torch.Tensor().long.unsqueeze().repeat().view", "torch.zeros().cuda.view", "torch.zeros().cuda.view", "nn.ReplicationPad3d.", "torch.Tensor", "torch.Tensor", "torch.Tensor", "losses.pdist_squared", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.min", "torch.min", "torch.min", "torch.clamp.mean().item", "torch.clamp.mean().item", "torch.Tensor().long.t().unsqueeze", "torch.Tensor().long.unsqueeze().repeat", "torch.Tensor().long.unsqueeze().repeat", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.conv3d", "torch.conv3d", "torch.clamp.mean", "torch.clamp.mean", "torch.Tensor().long.t", "torch.Tensor().long.unsqueeze", "torch.Tensor().long.unsqueeze", "nn.ReplicationPad3d.", "nn.ReplicationPad3d.", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.pdist_squared"], ["", "def", "MINDSSC", "(", "img", ",", "radius", "=", "2", ",", "dilation", "=", "2", ")", ":", "\n", "# kernel size", "\n", "    ", "kernel_size", "=", "radius", "*", "2", "+", "1", "\n", "\n", "# define start and end locations for self-similarity pattern", "\n", "six_neighbourhood", "=", "torch", ".", "Tensor", "(", "[", "[", "0", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "0", ",", "1", "]", ",", "\n", "[", "1", ",", "1", ",", "2", "]", ",", "\n", "[", "2", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "2", ",", "1", "]", "]", ")", ".", "long", "(", ")", "\n", "\n", "# squared distances", "\n", "dist", "=", "pdist_squared", "(", "six_neighbourhood", ".", "t", "(", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "squeeze", "(", "0", ")", "\n", "\n", "# define comparison mask", "\n", "x", ",", "y", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "6", ")", ",", "torch", ".", "arange", "(", "6", ")", ")", "\n", "mask", "=", "(", "(", "x", ">", "y", ")", ".", "view", "(", "-", "1", ")", "&", "(", "dist", "==", "2", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "# build kernel", "\n", "idx_shift1", "=", "six_neighbourhood", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "6", ",", "1", ")", ".", "view", "(", "-", "1", ",", "3", ")", "[", "mask", ",", ":", "]", "\n", "idx_shift2", "=", "six_neighbourhood", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "6", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "3", ")", "[", "mask", ",", ":", "]", "\n", "\n", "mshift1", "=", "torch", ".", "zeros", "(", "12", ",", "1", ",", "3", ",", "3", ",", "3", ")", ".", "cuda", "(", ")", "\n", "mshift1", ".", "view", "(", "-", "1", ")", "[", "torch", ".", "arange", "(", "12", ")", "*", "27", "+", "idx_shift1", "[", ":", ",", "0", "]", "*", "9", "+", "idx_shift1", "[", ":", ",", "1", "]", "*", "3", "+", "idx_shift1", "[", ":", ",", "2", "]", "]", "=", "1", "\n", "mshift2", "=", "torch", ".", "zeros", "(", "12", ",", "1", ",", "3", ",", "3", ",", "3", ")", ".", "cuda", "(", ")", "\n", "mshift2", ".", "view", "(", "-", "1", ")", "[", "torch", ".", "arange", "(", "12", ")", "*", "27", "+", "idx_shift2", "[", ":", ",", "0", "]", "*", "9", "+", "idx_shift2", "[", ":", ",", "1", "]", "*", "3", "+", "idx_shift2", "[", ":", ",", "2", "]", "]", "=", "1", "\n", "rpad1", "=", "nn", ".", "ReplicationPad3d", "(", "dilation", ")", "\n", "rpad2", "=", "nn", ".", "ReplicationPad3d", "(", "radius", ")", "\n", "\n", "# compute patch-ssd", "\n", "ssd", "=", "F", ".", "avg_pool3d", "(", "rpad2", "(", "(", "F", ".", "conv3d", "(", "rpad1", "(", "img", ")", ",", "mshift1", ",", "dilation", "=", "dilation", ")", "-", "F", ".", "conv3d", "(", "rpad1", "(", "img", ")", ",", "mshift2", ",", "dilation", "=", "dilation", ")", ")", "**", "2", ")", ",", "kernel_size", ",", "stride", "=", "1", ")", "\n", "\n", "# MIND equation", "\n", "mind", "=", "ssd", "-", "torch", ".", "min", "(", "ssd", ",", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "mind_var", "=", "torch", ".", "mean", "(", "mind", ",", "1", ",", "keepdim", "=", "True", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "mind_var", "=", "torch", ".", "clamp", "(", "mind_var", ",", "mind_var", ".", "mean", "(", ")", ".", "item", "(", ")", "*", "0.001", ",", "mind_var", ".", "mean", "(", ")", ".", "item", "(", ")", "*", "1000", ")", "\n", "mind", "/=", "mind_var", "\n", "mind", "=", "torch", ".", "exp", "(", "-", "mind", ")", "\n", "\n", "#permute to have same ordering as C++ code", "\n", "mind", "=", "mind", "[", ":", ",", "torch", ".", "Tensor", "(", "[", "6", ",", "8", ",", "1", ",", "11", ",", "2", ",", "10", ",", "0", ",", "7", ",", "9", ",", "4", ",", "5", ",", "3", "]", ")", ".", "long", "(", ")", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "return", "mind", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC_2d": [[63, 108], ["torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "pdist_squared().squeeze", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.ReplicationPad2d", "torch.ReplicationPad2d", "torch.avg_pool2d", "torch.mean", "torch.mean", "torch.mean", "torch.clamp", "torch.clamp", "torch.clamp", "torch.exp", "torch.exp", "torch.exp", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.Tensor().long.unsqueeze().repeat().view", "torch.Tensor().long.unsqueeze().repeat().view", "torch.zeros().cuda.view", "torch.zeros().cuda.view", "nn.ReplicationPad2d.", "torch.Tensor", "torch.Tensor", "torch.Tensor", "losses.pdist_squared", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.min", "torch.min", "torch.min", "torch.clamp.mean().item", "torch.clamp.mean().item", "torch.Tensor().long.t().unsqueeze", "torch.Tensor().long.unsqueeze().repeat", "torch.Tensor().long.unsqueeze().repeat", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.conv2d", "torch.conv2d", "torch.clamp.mean", "torch.clamp.mean", "torch.Tensor().long.t", "torch.Tensor().long.unsqueeze", "torch.Tensor().long.unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "nn.ReplicationPad2d.", "nn.ReplicationPad2d.", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.pdist_squared"], ["", "def", "MINDSSC_2d", "(", "img", ",", "radius", "=", "2", ",", "dilation", "=", "2", ")", ":", "\n", "#     # see http://mpheinrich.de/pub/miccai2013_943_mheinrich.pdf for details on the MIND-SSC descriptor", "\n", "\n", "# kernel size", "\n", "    ", "kernel_size", "=", "radius", "*", "2", "+", "1", "\n", "\n", "# define start and end locations for self-similarity pattern", "\n", "six_neighbourhood", "=", "torch", ".", "Tensor", "(", "[", "[", "0", ",", "1", "]", ",", "\n", "[", "1", ",", "0", "]", ",", "\n", "[", "1", ",", "2", "]", ",", "\n", "[", "2", ",", "1", "]", "]", ")", ".", "long", "(", ")", "\n", "\n", "# squared distances", "\n", "dist", "=", "pdist_squared", "(", "six_neighbourhood", ".", "t", "(", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "squeeze", "(", "0", ")", "\n", "\n", "# define comparison mask", "\n", "x", ",", "y", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "4", ")", ",", "torch", ".", "arange", "(", "4", ")", ")", "\n", "mask", "=", "(", "(", "x", ">", "y", ")", ".", "view", "(", "-", "1", ")", "&", "(", "dist", "==", "2", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "# build kernel", "\n", "idx_shift1", "=", "six_neighbourhood", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "4", ",", "1", ")", ".", "view", "(", "-", "1", ",", "2", ")", "[", "mask", ",", ":", "]", "\n", "idx_shift2", "=", "six_neighbourhood", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "4", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "2", ")", "[", "mask", ",", ":", "]", "\n", "# import pdb; pdb.set_trace()", "\n", "mshift1", "=", "torch", ".", "zeros", "(", "8", ",", "1", ",", "2", ",", "2", ")", ".", "cuda", "(", ")", "\n", "mshift1", ".", "view", "(", "-", "1", ")", "[", "torch", ".", "arange", "(", "4", ")", "*", "4", "+", "idx_shift1", "[", ":", ",", "0", "]", "*", "2", "+", "idx_shift1", "[", ":", ",", "1", "]", "]", "=", "1", "\n", "mshift2", "=", "torch", ".", "zeros", "(", "8", ",", "1", ",", "2", ",", "2", ")", ".", "cuda", "(", ")", "\n", "mshift2", ".", "view", "(", "-", "1", ")", "[", "torch", ".", "arange", "(", "4", ")", "*", "4", "+", "idx_shift2", "[", ":", ",", "0", "]", "*", "2", "+", "idx_shift2", "[", ":", ",", "1", "]", "]", "=", "1", "\n", "rpad1", "=", "nn", ".", "ReplicationPad2d", "(", "dilation", ")", "\n", "rpad2", "=", "nn", ".", "ReplicationPad2d", "(", "radius", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "# compute patch-ssd", "\n", "ssd", "=", "F", ".", "avg_pool2d", "(", "rpad2", "(", "(", "F", ".", "conv2d", "(", "rpad1", "(", "img", ")", ",", "mshift1", ",", "dilation", "=", "dilation", ")", "-", "F", ".", "conv2d", "(", "rpad1", "(", "img", ")", ",", "mshift2", ",", "dilation", "=", "dilation", ")", ")", "**", "2", ")", ",", "kernel_size", ",", "stride", "=", "1", ")", "\n", "\n", "# MIND equation", "\n", "mind", "=", "ssd", "-", "torch", ".", "min", "(", "ssd", ",", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "mind_var", "=", "torch", ".", "mean", "(", "mind", ",", "1", ",", "keepdim", "=", "True", ")", "\n", "mind_var", "=", "torch", ".", "clamp", "(", "mind_var", ",", "mind_var", ".", "mean", "(", ")", ".", "item", "(", ")", "*", "0.001", ",", "mind_var", ".", "mean", "(", ")", ".", "item", "(", ")", "*", "1000", ")", "\n", "# mind = nn.functional.relu(mind - 1e-20)", "\n", "mind", "/=", "mind_var", "\n", "mind", "=", "torch", ".", "exp", "(", "-", "mind", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "#permute to have same ordering as C++ code", "\n", "mind", "=", "mind", "[", ":", ",", "torch", ".", "Tensor", "(", "[", "6", ",", "1", ",", "2", ",", "0", ",", "7", ",", "4", ",", "5", ",", "3", "]", ")", ".", "long", "(", ")", ",", ":", ",", ":", "]", "\n", "\n", "return", "mind", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.mind_loss_3d": [[109, 118], ["msk.repeat.unsqueeze().unsqueeze().unsqueeze().unsqueeze().float", "msk.repeat.repeat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "msk.repeat.unsqueeze().unsqueeze().unsqueeze().unsqueeze", "losses.MINDSSC", "losses.MINDSSC", "msk.repeat.unsqueeze().unsqueeze().unsqueeze", "losses.MINDSSC", "losses.MINDSSC", "msk.repeat.unsqueeze().unsqueeze", "msk.repeat.unsqueeze"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC"], ["", "def", "mind_loss_3d", "(", "x", ",", "y", ",", "msk", "=", "None", ")", ":", "\n", "    ", "if", "msk", "is", "not", "None", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "msk", "=", "msk", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "float", "(", ")", "\n", "msk", "=", "msk", ".", "repeat", "(", "1", ",", "12", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ",", "x", ".", "shape", "[", "4", "]", ")", "\n", "# import pdb; pdb.set_trace()", "\n", "return", "torch", ".", "mean", "(", "(", "MINDSSC", "(", "x", ")", "*", "msk", "-", "MINDSSC", "(", "y", ")", "*", "msk", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "(", "MINDSSC", "(", "x", ")", "-", "MINDSSC", "(", "y", ")", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.mind_loss_2d": [[119, 128], ["msk.repeat.unsqueeze().unsqueeze().unsqueeze().float", "msk.repeat.repeat", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "msk.repeat.unsqueeze().unsqueeze().unsqueeze", "losses.MINDSSC_2d", "losses.MINDSSC_2d", "msk.repeat.unsqueeze().unsqueeze", "losses.MINDSSC_2d", "losses.MINDSSC_2d", "msk.repeat.unsqueeze"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC_2d", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC_2d", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC_2d", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.MINDSSC_2d"], ["", "", "def", "mind_loss_2d", "(", "x", ",", "y", ",", "msk", "=", "None", ")", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "    ", "if", "msk", "is", "not", "None", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "        ", "msk", "=", "msk", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "float", "(", ")", "\n", "msk", "=", "msk", ".", "repeat", "(", "1", ",", "8", ",", "177", ",", "210", ")", "\n", "return", "torch", ".", "mean", "(", "(", "MINDSSC_2d", "(", "x", ",", "radius", "=", "2", ",", "dilation", "=", "1", ")", "*", "msk", "-", "MINDSSC_2d", "(", "y", ",", "radius", "=", "2", ",", "dilation", "=", "1", ")", "*", "msk", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "(", "MINDSSC_2d", "(", "x", ",", "radius", "=", "2", ",", "dilation", "=", "1", ")", "-", "MINDSSC_2d", "(", "y", ",", "radius", "=", "2", ",", "dilation", "=", "1", ")", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.ncc_loss": [[129, 183], ["getattr", "torch.ones().to", "torch.ones().to", "torch.ones().to", "math.floor", "getattr.", "getattr.", "getattr.", "getattr.", "getattr.", "torch.mse_loss", "torch.mse_loss", "len", "numpy.prod", "torch.mse_loss", "list", "torch.ones", "torch.ones", "torch.ones", "torch.mean", "torch.mean", "torch.mean", "I.size"], "function", ["None"], ["", "", "def", "ncc_loss", "(", "I", ",", "J", ",", "device", ",", "win", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    calculate the normalize cross correlation between I and J\n    assumes I, J are sized [batch_size, *vol_shape, nb_feats]\n    \"\"\"", "\n", "\n", "ndims", "=", "len", "(", "list", "(", "I", ".", "size", "(", ")", ")", ")", "-", "2", "\n", "assert", "ndims", "in", "[", "1", ",", "2", ",", "3", "]", ",", "\"volumes should be 1 to 3 dimensions. found: %d\"", "%", "ndims", "\n", "\n", "if", "win", "is", "None", ":", "\n", "        ", "win", "=", "[", "3", "]", "*", "ndims", "\n", "\n", "", "conv_fn", "=", "getattr", "(", "F", ",", "'conv%dd'", "%", "ndims", ")", "\n", "sum_filt", "=", "torch", ".", "ones", "(", "[", "1", ",", "1", ",", "*", "win", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "pad_no", "=", "math", ".", "floor", "(", "win", "[", "0", "]", "/", "2", ")", "\n", "\n", "if", "ndims", "==", "1", ":", "\n", "        ", "stride", "=", "(", "1", ")", "\n", "padding", "=", "(", "pad_no", ")", "\n", "", "elif", "ndims", "==", "2", ":", "\n", "        ", "stride", "=", "(", "1", ",", "1", ")", "\n", "padding", "=", "(", "pad_no", ",", "pad_no", ")", "\n", "", "else", ":", "\n", "        ", "stride", "=", "(", "1", ",", "1", ",", "1", ")", "\n", "padding", "=", "(", "pad_no", ",", "pad_no", ",", "pad_no", ")", "\n", "\n", "# I_var, J_var, cross = compute_local_sums(I, J, sum_filt, stride, padding, win)", "\n", "", "I2", "=", "I", "*", "I", "\n", "J2", "=", "J", "*", "J", "\n", "IJ", "=", "I", "*", "J", "\n", "\n", "I_sum", "=", "conv_fn", "(", "I", ",", "sum_filt", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "J_sum", "=", "conv_fn", "(", "J", ",", "sum_filt", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "I2_sum", "=", "conv_fn", "(", "I2", ",", "sum_filt", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "J2_sum", "=", "conv_fn", "(", "J2", ",", "sum_filt", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "IJ_sum", "=", "conv_fn", "(", "IJ", ",", "sum_filt", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ")", "\n", "\n", "win_size", "=", "np", ".", "prod", "(", "win", ")", "*", "1", "\n", "u_I", "=", "I_sum", "/", "win_size", "\n", "u_J", "=", "J_sum", "/", "win_size", "\n", "\n", "cross", "=", "IJ_sum", "-", "u_J", "*", "I_sum", "-", "u_I", "*", "J_sum", "+", "u_I", "*", "u_J", "*", "win_size", "\n", "I_var", "=", "I2_sum", "-", "2", "*", "u_I", "*", "I_sum", "+", "u_I", "*", "u_I", "*", "win_size", "\n", "J_var", "=", "J2_sum", "-", "2", "*", "u_J", "*", "J_sum", "+", "u_J", "*", "u_J", "*", "win_size", "\n", "# msk = I_var*J_var != 0 ", "\n", "cc", "=", "cross", "*", "cross", "/", "(", "I_var", "*", "J_var", "+", "0.00000001", ")", "\n", "# print('This')", "\n", "# print(cross, I_var, J_var)", "\n", "MSE", "=", "F", ".", "mse_loss", "(", "I", ",", "J", ",", "reduction", "=", "\"mean\"", ")", "\n", "denon", "=", "F", ".", "mse_loss", "(", "0", "*", "J", ",", "I", ",", "reduction", "=", "\"mean\"", ")", "\n", "relMSE", "=", "MSE", "/", "F", ".", "mse_loss", "(", "0", "*", "J", ",", "I", ",", "reduction", "=", "\"mean\"", ")", "\n", "loss", "=", "1", "-", "torch", ".", "mean", "(", "cc", ")", "+", "0.00001", "*", "MSE", "\n", "return", "loss", ",", "relMSE", ",", "denon", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.seg_loss": [[185, 192], ["BCE.mean.mean", "torch.mse_loss", "torch.mse_loss", "x.to", "torch.mse_loss", "x.to", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "x.to"], "function", ["None"], ["", "def", "seg_loss", "(", "x", ",", "reg_x", ",", "device", ")", ":", "\n", "    ", "BCE", "=", "-", "1", "*", "(", "x", ".", "to", "(", "device", ")", "*", "torch", ".", "log", "(", "reg_x", "+", "0.000000001", ")", "+", "(", "1", "-", "x", ".", "to", "(", "device", ")", ")", "*", "torch", ".", "log", "(", "1", "-", "reg_x", "+", "0.000000001", ")", ")", "\n", "BCE", "=", "BCE", ".", "mean", "(", ")", "\n", "MSE", "=", "F", ".", "mse_loss", "(", "reg_x", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "\"mean\"", ")", "\n", "denon", "=", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ",", "x", ",", "reduction", "=", "\"mean\"", ")", "\n", "relMSE", "=", "MSE", "/", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ",", "x", ",", "reduction", "=", "\"mean\"", ")", "\n", "return", "BCE", ",", "relMSE", ",", "denon", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l2_loss": [[193, 198], ["torch.mse_loss", "torch.mse_loss", "reg_x.to", "x.to", "torch.mse_loss"], "function", ["None"], ["", "def", "l2_loss", "(", "x", ",", "reg_x", ",", "device", ")", ":", "\n", "    ", "MSE", "=", "F", ".", "mse_loss", "(", "reg_x", ".", "to", "(", "device", ")", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "\"mean\"", ")", "\n", "denon", "=", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ",", "x", ",", "reduction", "=", "\"mean\"", ")", "\n", "relMSE", "=", "MSE", "/", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ",", "x", ",", "reduction", "=", "\"mean\"", ")", "\n", "return", "MSE", ",", "relMSE", ",", "denon", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.cond_num_loss": [[199, 208], ["torch.transpose", "torch.transpose", "torch.transpose", "torch.bmm().to", "torch.bmm().to", "torch.bmm().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "x.reshape.reshape", "x.reshape.repeat", "torch.mse_loss", "torch.bmm", "torch.bmm", "torch.bmm", "torch.eye", "torch.eye", "torch.eye", "x.reshape.size", "x.reshape.size", "A.size", "A.size"], "function", ["None"], ["", "def", "cond_num_loss", "(", "A", ",", "device", ")", ":", "\n", "# print(x.shape, reg_x.shape)", "\n", "    ", "B", "=", "torch", ".", "transpose", "(", "A", ",", "1", ",", "2", ")", "\n", "orthoA", "=", "torch", ".", "bmm", "(", "A", ",", "B", ")", ".", "to", "(", "device", ")", "\n", "x", "=", "torch", ".", "eye", "(", "A", ".", "size", "(", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "x", "=", "x", ".", "reshape", "(", "(", "1", ",", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ")", ")", "\n", "y", "=", "x", ".", "repeat", "(", "(", "A", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ")", "\n", "out_loss", "=", "F", ".", "mse_loss", "(", "orthoA", ",", "y", ",", "reduction", "=", "'mean'", ")", "\n", "return", "out_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.cond_num_loss_v2": [[209, 218], ["A.to.to", "torch.inverse().to", "torch.inverse().to", "torch.inverse().to", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.inverse", "torch.inverse", "torch.inverse"], "function", ["None"], ["", "def", "cond_num_loss_v2", "(", "A", ",", "device", ")", ":", "\n", "# print(x.shape, reg_x.shape)", "\n", "    ", "A", "=", "A", ".", "to", "(", "device", ")", "\n", "B", "=", "torch", ".", "inverse", "(", "A", ")", ".", "to", "(", "device", ")", "\n", "nA", "=", "torch", ".", "norm", "(", "A", ",", "p", "=", "'fro'", ",", "dim", "=", "[", "1", ",", "2", "]", ")", "\n", "nB", "=", "torch", ".", "norm", "(", "B", ",", "p", "=", "'fro'", ",", "dim", "=", "[", "1", ",", "2", "]", ")", "\n", "# print(nA.shape, nB.shape)", "\n", "kb", "=", "(", "nA", "*", "nB", ")", ".", "mean", "(", ")", "\n", "return", "kb", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l1_loss": [[219, 226], ["torch.l1_loss", "torch.mse_loss", "torch.mse_loss", "reg_x.to", "x.to", "reg_x.to", "x.to", "x.to", "torch.mse_loss", "reg_x.to", "x.to", "reg_x.to"], "function", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.l1_loss"], ["", "def", "l1_loss", "(", "x", ",", "reg_x", ",", "device", ")", ":", "\n", "# print(x.shape, reg_x.shape)", "\n", "    ", "loss", "=", "F", ".", "l1_loss", "(", "reg_x", ".", "to", "(", "device", ")", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "'mean'", ")", "\n", "MSE", "=", "F", ".", "mse_loss", "(", "reg_x", ".", "to", "(", "device", ")", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "\"mean\"", ")", "\n", "denon", "=", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ".", "to", "(", "device", ")", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "\"mean\"", ")", "\n", "relMSE", "=", "MSE", "/", "F", ".", "mse_loss", "(", "0", "*", "reg_x", ".", "to", "(", "device", ")", ",", "x", ".", "to", "(", "device", ")", ",", "reduction", "=", "\"mean\"", ")", "\n", "return", "loss", ",", "relMSE", ",", "denon", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.losses.dice_loss": [[227, 232], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "def", "dice_loss", "(", "x", ",", "reg_x", ")", ":", "\n", "\n", "    ", "numerator", "=", "2", "*", "torch", ".", "sum", "(", "F", ".", "sigmoid", "(", "reg_x", ")", "*", "x", ")", "\n", "denominator", "=", "torch", ".", "sum", "(", "F", ".", "sigmoid", "(", "reg_x", ")", "+", "x", ")", "\n", "return", "1", "-", "(", "numerator", "+", "1", ")", "/", "(", "denominator", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.__init__": [[17, 53], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "network_3d.self_supervised_model_3d.fc2.bias.data.copy_", "network_3d.self_supervised_model_3d.fc2.weight.data.zero_", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.random.uniform", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.random.uniform", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.__init__"], ["def", "__init__", "(", "self", ",", "config", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "self_supervised_model_3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "numL", "=", "config", "[", "'num_landmarks'", "]", "\n", "self", ".", "imgH", "=", "config", "[", "'image_height'", "]", "\n", "self", ".", "imgW", "=", "config", "[", "'image_width'", "]", "\n", "self", ".", "batchSz", "=", "config", "[", "'batch_size'", "]", "\n", "self", ".", "grad_img", "=", "config", "[", "'grad_img'", "]", "\n", "self", ".", "add_corners", "=", "config", "[", "'add_corners'", "]", "\n", "self", ".", "input_channels", "=", "config", "[", "'input_channels'", "]", "\n", "# input is a stack of 2 images", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#256x256", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#256x256", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#128x128", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#128x128", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#64x64", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "#64x64", "\n", "self", ".", "conv3_3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#32x32", "\n", "self", ".", "conv3_4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "#32x32", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "# 8x8", "\n", "self", ".", "conv4_2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "# 8x8", "\n", "self", ".", "conv4_3", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "# 4x4", "\n", "self", ".", "conv4_4", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "# 4x4", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", "*", "2", "*", "2", ",", "512", ")", "# 2x2", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "if", "self", ".", "add_corners", ":", "\n", "\t\t\t", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "(", "self", ".", "numL", "-", "4", ")", "*", "2", ")", "\n", "# uniform initialization of the points", "\n", "randomPts", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "(", "self", ".", "numL", "-", "4", ")", "*", "2", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "(", "self", ".", "numL", ")", "*", "2", ")", "\n", "randomPts", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "(", "self", ".", "numL", ")", "*", "2", ")", "\n", "\n", "", "randomPts", "=", "torch", ".", "from_numpy", "(", "randomPts", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "fc2", ".", "bias", ".", "data", ".", "copy_", "(", "randomPts", ")", "\n", "self", ".", "fc2", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.CNN_landS": [[54, 75], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_3d.self_supervised_model_3d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_3d.self_supervised_model_3d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_3d.self_supervised_model_3d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "network_3d.self_supervised_model_3d.fc1", "torch.relu", "torch.relu", "torch.relu", "torch.tanh", "torch.tanh", "torch.tanh", "network_3d.self_supervised_model_3d.conv1_1", "network_3d.self_supervised_model_3d.conv1_2", "network_3d.self_supervised_model_3d.conv2_1", "network_3d.self_supervised_model_3d.conv2_2", "network_3d.self_supervised_model_3d.conv3_1", "network_3d.self_supervised_model_3d.conv3_2", "network_3d.self_supervised_model_3d.conv3_3", "network_3d.self_supervised_model_3d.conv3_4", "network_3d.self_supervised_model_3d.conv4_1", "network_3d.self_supervised_model_3d.conv4_2", "network_3d.self_supervised_model_3d.conv4_3", "network_3d.self_supervised_model_3d.conv4_4", "network_3d.self_supervised_model_3d.fc2"], "methods", ["None"], ["", "def", "CNN_landS", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_4", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_4", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "output", "=", "F", ".", "tanh", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.createKmat": [[76, 88], ["input_points.size", "control_points.size", "repr_matrix.masked_fill_", "input_points.view", "control_points.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "createKmat", "(", "self", ",", "input_points", ",", "control_points", ")", ":", "\n", "\t\t", "N", "=", "input_points", ".", "size", "(", "1", ")", "\n", "M", "=", "control_points", ".", "size", "(", "1", ")", "\n", "pairwise_diff_batch", "=", "input_points", ".", "view", "(", "self", ".", "batchSz", ",", "N", ",", "1", ",", "2", ")", "-", "control_points", ".", "view", "(", "self", ".", "batchSz", ",", "1", ",", "M", ",", "2", ")", "\n", "pairwise_diff_square", "=", "pairwise_diff_batch", "*", "pairwise_diff_batch", "\n", "pairwise_dist", "=", "pairwise_diff_square", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "pairwise_diff_square", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "repr_matrix", "=", "pairwise_dist", "*", "torch", ".", "log", "(", "torch", ".", "sqrt", "(", "pairwise_dist", "+", "0.0001", ")", ")", "\n", "# repr_matrix = torch.exp(-1*pairwise_dist*10)", "\n", "# fix numerical error for 0 * log(0), substitute all nan with 0", "\n", "mask", "=", "repr_matrix", "!=", "repr_matrix", "\n", "repr_matrix", ".", "masked_fill_", "(", "mask", ",", "0", ")", "\n", "return", "repr_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.TPS_solve": [[89, 116], ["Ls.float.float.size", "Ls.float.float.float", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "tempZeros.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "network_3d.self_supervised_model_3d.createKmat", "A[].copy_", "A[].fill_", "A[].copy_", "A[].copy_", "A[].fill_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "condMat.repeat.repeat.reshape", "condMat.repeat.repeat.repeat", "Acond.to.to.to", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "Lt.transpose", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "Ls[].view", "Ls[].view"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.createKmat"], ["", "def", "TPS_solve", "(", "self", ",", "Lt", ",", "Ls", ",", "epsilon", ")", ":", "\n", "\t\t", "N", "=", "Ls", ".", "size", "(", "1", ")", "\n", "Ls", "=", "Ls", ".", "float", "(", ")", "\n", "# first create the tensor (these would be in pytorch)", "\n", "tempZeros", "=", "torch", ".", "zeros", "(", "3", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "tempZeros", "=", "tempZeros", ".", "repeat", "(", "self", ".", "batchSz", ",", "1", ",", "1", ")", "\n", "b1", "=", "torch", ".", "cat", "(", "[", "tempZeros", ",", "Ls", "[", ":", ",", ":", ",", "0", "]", ".", "view", "(", "self", ".", "batchSz", ",", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "b2", "=", "torch", ".", "cat", "(", "[", "tempZeros", ",", "Ls", "[", ":", ",", ":", ",", "1", "]", ".", "view", "(", "self", ".", "batchSz", ",", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "# this part is fixed as the Lt are supervised", "\n", "b", "=", "torch", ".", "cat", "(", "[", "b1", ",", "b2", "]", ",", "dim", "=", "1", ")", "# dimension 2(N+3)", "\n", "A", "=", "torch", ".", "zeros", "(", "self", ".", "batchSz", ",", "(", "N", "+", "3", ")", ",", "(", "N", "+", "3", ")", ")", "\n", "matR", "=", "self", ".", "createKmat", "(", "Lt", ",", "Lt", ")", "\n", "A", "[", ":", ",", ":", "2", ",", ":", "N", "]", ".", "copy_", "(", "Lt", ".", "transpose", "(", "2", ",", "1", ")", ")", "\n", "A", "[", ":", ",", "2", ",", ":", "N", "]", ".", "fill_", "(", "1", ")", "\n", "A", "[", ":", ",", "3", ":", ",", ":", "N", "]", ".", "copy_", "(", "matR", ")", "\n", "A", "[", ":", ",", "3", ":", ",", "N", ":", "N", "+", "2", "]", ".", "copy_", "(", "Lt", ")", "\n", "A", "[", ":", ",", "3", ":", ",", "N", "+", "2", "]", ".", "fill_", "(", "1", ")", "\n", "Abig", "=", "torch", ".", "zeros", "(", "self", ".", "batchSz", ",", "2", "*", "(", "N", "+", "3", ")", ",", "2", "*", "(", "N", "+", "3", ")", ")", "\n", "Abig", "[", ":", ",", ":", "(", "N", "+", "3", ")", ",", ":", "(", "N", "+", "3", ")", "]", "=", "A", "\n", "Abig", "[", ":", ",", "(", "N", "+", "3", ")", ":", ",", "(", "N", "+", "3", ")", ":", "]", "=", "A", "\n", "condMat", "=", "torch", ".", "eye", "(", "Abig", ".", "shape", "[", "1", "]", ")", "\n", "condMat", "=", "condMat", ".", "reshape", "(", "1", ",", "Abig", ".", "shape", "[", "1", "]", ",", "Abig", ".", "shape", "[", "1", "]", ")", "\n", "condMat", "=", "condMat", ".", "repeat", "(", "self", ".", "batchSz", ",", "1", ",", "1", ")", "\n", "Acond", "=", "Abig", "+", "epsilon", "*", "condMat", "\n", "Acond", "=", "Acond", ".", "to", "(", "self", ".", "device", ")", "\n", "w", ",", "LU", "=", "torch", ".", "solve", "(", "b", ",", "Acond", ")", "\n", "return", "w", ",", "Abig", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.imgGrid": [[117, 133], ["list", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "targetCoord.repeat.repeat.float", "targetCoord.repeat.repeat.split", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "targetCoord.repeat.repeat.reshape", "targetCoord.repeat.repeat.repeat", "network_3d.self_supervised_model_3d.createKmat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.product", "range", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "targetCoord.repeat.repeat.float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.createKmat"], ["", "def", "imgGrid", "(", "self", ",", "Is", ",", "Ls", ")", ":", "\n", "# define a grid then warp it by tps", "\n", "# Is = 1xCxHxW image", "\n", "\t\t", "targetCoord", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "self", ".", "imgH", ")", ",", "range", "(", "self", ".", "imgW", ")", ")", ")", "\n", "targetCoord", "=", "torch", ".", "tensor", "(", "targetCoord", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "targetCoord", "=", "targetCoord", ".", "float", "(", ")", "\n", "Y", ",", "X", "=", "targetCoord", ".", "split", "(", "1", ",", "dim", "=", "1", ")", "\n", "Y", "=", "Y", "*", "2", "/", "(", "self", ".", "imgH", "-", "1", ")", "-", "1", "\n", "X", "=", "X", "*", "2", "/", "(", "self", ".", "imgW", "-", "1", ")", "-", "1", "\n", "targetCoord", "=", "torch", ".", "cat", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "1", ")", "\n", "targetCoord", "=", "targetCoord", ".", "reshape", "(", "1", ",", "targetCoord", ".", "shape", "[", "0", "]", ",", "targetCoord", ".", "shape", "[", "1", "]", ")", "\n", "targetCoord", "=", "targetCoord", ".", "repeat", "(", "self", ".", "batchSz", ",", "1", ",", "1", ")", "\n", "matT", "=", "self", ".", "createKmat", "(", "targetCoord", ",", "Ls", ")", "\n", "# this needs to change according to our formulation ", "\n", "targetCoord_full", "=", "torch", ".", "cat", "(", "[", "matT", ",", "targetCoord", ".", "float", "(", ")", ",", "torch", ".", "ones", "(", "self", ".", "batchSz", ",", "self", ".", "imgH", "*", "self", ".", "imgW", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", ".", "float", "(", ")", "]", ",", "dim", "=", "2", ")", "\n", "return", "targetCoord_full", ",", "targetCoord", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_3d.self_supervised_model_3d.forward": [[134, 171], ["inImg.split", "network_3d.self_supervised_model_3d.TPS_solve", "network_3d.self_supervised_model_3d.w.float", "network_3d.self_supervised_model_3d.imgGrid", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "network_3d.self_supervised_model_3d.sourceCoord.view().float", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "network_3d.self_supervised_model_3d.landS.size", "network_3d.self_supervised_model_3d.CNN_landS", "network_3d.self_supervised_model_3d.CNN_landS", "network_3d.self_supervised_model_3d.w.view().transpose", "imgS.float", "int", "network_3d.self_supervised_model_3d.landT.view", "network_3d.self_supervised_model_3d.landS.view", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp.repeat().to.repeat().to.repeat().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network_3d.self_supervised_model_3d.landT.view", "network_3d.self_supervised_model_3d.landS.view", "network_3d.self_supervised_model_3d.sourceCoord.view", "numpy.array", "network_3d.self_supervised_model_3d.w.view", "temp.repeat().to.repeat().to.repeat", "temp.repeat().to.repeat().to.float", "temp.repeat().to.repeat().to.float", "network_3d.self_supervised_model_3d.landT.size"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.TPS_solve", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.imgGrid", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.CNN_landS", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.CNN_landS"], ["", "def", "forward", "(", "self", ",", "inImg", ",", "epsilon", ",", "inland", ",", "landS", ",", "landT", ")", ":", "\n", "\n", "\t\t", "[", "imgS", ",", "imgT", "]", "=", "inImg", ".", "split", "(", "[", "self", ".", "input_channels", ",", "self", ".", "input_channels", "]", ",", "1", ")", "\n", "# this will get the batched output ", "\n", "\n", "if", "inland", ":", "\n", "\t\t\t", "self", ".", "landS", "=", "landS", "\n", "self", ".", "landT", "=", "landT", "\n", "self", ".", "numL", "=", "self", ".", "landS", ".", "size", "(", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "landT", "=", "self", ".", "CNN_landS", "(", "imgT", ")", "\n", "self", ".", "landS", "=", "self", ".", "CNN_landS", "(", "imgS", ")", "\n", "\n", "if", "self", ".", "add_corners", ":", "\n", "\t\t\t\t", "self", ".", "numL", "=", "int", "(", "self", ".", "landT", ".", "size", "(", "1", ")", "*", "0.5", "+", "4", ")", "\n", "# we need to preserve the batching ", "\n", "self", ".", "landT", "=", "self", ".", "landT", ".", "view", "(", "self", ".", "batchSz", ",", "self", ".", "numL", "-", "4", ",", "2", ")", "\n", "self", ".", "landS", "=", "self", ".", "landS", ".", "view", "(", "self", ".", "batchSz", ",", "self", ".", "numL", "-", "4", ",", "2", ")", "\n", "# adding the corners", "\n", "temp", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", "]", "]", ")", ")", "\n", "temp", "=", "temp", ".", "repeat", "(", "self", ".", "batchSz", ",", "1", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "landT", "=", "torch", ".", "cat", "(", "[", "self", ".", "landT", ",", "temp", ".", "float", "(", ")", "]", ",", "1", ")", "\n", "self", ".", "landS", "=", "torch", ".", "cat", "(", "[", "self", ".", "landS", ",", "temp", ".", "float", "(", ")", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "landT", "=", "self", ".", "landT", ".", "view", "(", "self", ".", "batchSz", ",", "self", ".", "numL", ",", "2", ")", "\n", "self", ".", "landS", "=", "self", ".", "landS", ".", "view", "(", "self", ".", "batchSz", ",", "self", ".", "numL", ",", "2", ")", "\n", "\n", "", "", "self", ".", "w", ",", "self", ".", "A", "=", "self", ".", "TPS_solve", "(", "self", ".", "landT", ",", "self", ".", "landS", ",", "epsilon", ")", "\n", "self", ".", "w", "=", "self", ".", "w", ".", "float", "(", ")", "\n", "self", ".", "targetCoord", ",", "origgrid", "=", "self", ".", "imgGrid", "(", "imgT", ",", "self", ".", "landT", ")", "\n", "\n", "# self.sourceCoord = torch.matmul(self.targetCoord, self.w.view(self.batchSz, 2, self.numL + 3).transpose(0, 1))", "\n", "# with batched data we need to use torch bmm ", "\n", "self", ".", "sourceCoord", "=", "torch", ".", "bmm", "(", "self", ".", "targetCoord", ",", "self", ".", "w", ".", "view", "(", "self", ".", "batchSz", ",", "2", ",", "self", ".", "numL", "+", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "grid", "=", "self", ".", "sourceCoord", ".", "view", "(", "self", ".", "batchSz", ",", "self", ".", "imgH", ",", "self", ".", "imgW", ",", "2", ")", ".", "float", "(", ")", "\n", "transformed_x", "=", "F", ".", "grid_sample", "(", "imgS", ".", "float", "(", ")", ",", "grid", ",", "'bilinear'", ")", "\n", "return", "transformed_x", ",", "self", ".", "landT", ",", "self", ".", "landS", ",", "self", ".", "A", "", "", "", ""]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.__init__": [[17, 51], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "network_2d.self_supervised_model_2d.fc2.bias.data.copy_", "network_2d.self_supervised_model_2d.fc2.weight.data.zero_", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.random.uniform", "torch.Linear", "torch.Linear", "torch.Linear", "numpy.random.uniform", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.__init__"], ["def", "__init__", "(", "self", ",", "config", ",", "device", ")", ":", "\n", "\t\t", "super", "(", "self_supervised_model_2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "numL", "=", "config", "[", "'num_landmarks'", "]", "\n", "self", ".", "imgH", "=", "config", "[", "'image_height'", "]", "\n", "self", ".", "imgW", "=", "config", "[", "'image_width'", "]", "\n", "self", ".", "add_corners", "=", "config", "[", "'add_corners'", "]", "\n", "self", ".", "input_channels", "=", "config", "[", "'input_channels'", "]", "\n", "# input is a stack of 2 images", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#256x256", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#256x256", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#128x128", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#128x128", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#64x64", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "#64x64", "\n", "self", ".", "conv3_3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "#32x32", "\n", "self", ".", "conv3_4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "#32x32", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "# 8x8", "\n", "self", ".", "conv4_2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "# 8x8", "\n", "self", ".", "conv4_3", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ")", "# 4x4", "\n", "self", ".", "conv4_4", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "1", ")", "# 4x4", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", "*", "2", "*", "2", ",", "512", ")", "# 2x2", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "if", "self", ".", "add_corners", ":", "\n", "\t\t\t", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "(", "self", ".", "numL", "-", "4", ")", "*", "2", ")", "\n", "# uniform initialization of the points", "\n", "randomPts", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "(", "self", ".", "numL", "-", "4", ")", "*", "2", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "(", "self", ".", "numL", ")", "*", "2", ")", "\n", "randomPts", "=", "np", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "(", "self", ".", "numL", ")", "*", "2", ")", "\n", "\n", "", "randomPts", "=", "torch", ".", "from_numpy", "(", "randomPts", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "fc2", ".", "bias", ".", "data", ".", "copy_", "(", "randomPts", ")", "\n", "self", ".", "fc2", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.CNN_landS": [[52, 73], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_2d.self_supervised_model_2d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_2d.self_supervised_model_2d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "network_2d.self_supervised_model_2d.pool", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "network_2d.self_supervised_model_2d.fc1", "torch.relu", "torch.relu", "torch.relu", "torch.tanh", "torch.tanh", "torch.tanh", "network_2d.self_supervised_model_2d.conv1_1", "network_2d.self_supervised_model_2d.conv1_2", "network_2d.self_supervised_model_2d.conv2_1", "network_2d.self_supervised_model_2d.conv2_2", "network_2d.self_supervised_model_2d.conv3_1", "network_2d.self_supervised_model_2d.conv3_2", "network_2d.self_supervised_model_2d.conv3_3", "network_2d.self_supervised_model_2d.conv3_4", "network_2d.self_supervised_model_2d.conv4_1", "network_2d.self_supervised_model_2d.conv4_2", "network_2d.self_supervised_model_2d.conv4_3", "network_2d.self_supervised_model_2d.conv4_4", "network_2d.self_supervised_model_2d.fc2"], "methods", ["None"], ["", "def", "CNN_landS", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2_2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv3_4", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_4", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "output", "=", "F", ".", "tanh", "(", "self", ".", "fc2", "(", "x", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.createKmat": [[74, 86], ["input_points.size", "control_points.size", "repr_matrix.masked_fill_", "input_points.view", "control_points.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "createKmat", "(", "self", ",", "batch_size", ",", "input_points", ",", "control_points", ")", ":", "\n", "\t\t", "N", "=", "input_points", ".", "size", "(", "1", ")", "\n", "M", "=", "control_points", ".", "size", "(", "1", ")", "\n", "pairwise_diff_batch", "=", "input_points", ".", "view", "(", "batch_size", ",", "N", ",", "1", ",", "2", ")", "-", "control_points", ".", "view", "(", "batch_size", ",", "1", ",", "M", ",", "2", ")", "\n", "pairwise_diff_square", "=", "pairwise_diff_batch", "*", "pairwise_diff_batch", "\n", "pairwise_dist", "=", "pairwise_diff_square", "[", ":", ",", ":", ",", ":", ",", "0", "]", "+", "pairwise_diff_square", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "repr_matrix", "=", "pairwise_dist", "*", "torch", ".", "log", "(", "torch", ".", "sqrt", "(", "pairwise_dist", "+", "0.0001", ")", ")", "\n", "# repr_matrix = torch.exp(-1*pairwise_dist*10)", "\n", "# fix numerical error for 0 * log(0), substitute all nan with 0", "\n", "mask", "=", "repr_matrix", "!=", "repr_matrix", "\n", "repr_matrix", ".", "masked_fill_", "(", "mask", ",", "0", ")", "\n", "return", "repr_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.TPS_solve": [[87, 115], ["Ls.float.float.size", "Ls.float.float.float", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "tempZeros.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "network_2d.self_supervised_model_2d.createKmat", "A[].copy_", "A[].fill_", "A[].copy_", "A[].copy_", "A[].fill_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "condMat.repeat.repeat.reshape", "condMat.repeat.repeat.repeat", "Acond.to.to.to", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "torch.solve", "Lt.transpose", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "Ls[].view", "Ls[].view"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.createKmat"], ["", "def", "TPS_solve", "(", "self", ",", "batch_size", ",", "Lt", ",", "Ls", ",", "epsilon", ")", ":", "\n", "\t\t", "N", "=", "Ls", ".", "size", "(", "1", ")", "\n", "Ls", "=", "Ls", ".", "float", "(", ")", "\n", "# first create the tensor (these would be in pytorch)", "\n", "tempZeros", "=", "torch", ".", "zeros", "(", "3", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "tempZeros", "=", "tempZeros", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "\n", "b1", "=", "torch", ".", "cat", "(", "[", "tempZeros", ",", "Ls", "[", ":", ",", ":", ",", "0", "]", ".", "view", "(", "batch_size", ",", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "b2", "=", "torch", ".", "cat", "(", "[", "tempZeros", ",", "Ls", "[", ":", ",", ":", ",", "1", "]", ".", "view", "(", "batch_size", ",", "-", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "# this part is fixed as the Lt are supervised", "\n", "b", "=", "torch", ".", "cat", "(", "[", "b1", ",", "b2", "]", ",", "dim", "=", "1", ")", "# dimension 2(N+3)", "\n", "A", "=", "torch", ".", "zeros", "(", "batch_size", ",", "(", "N", "+", "3", ")", ",", "(", "N", "+", "3", ")", ")", "\n", "matR", "=", "self", ".", "createKmat", "(", "batch_size", ",", "Lt", ",", "Lt", ")", "\n", "A", "[", ":", ",", ":", "2", ",", ":", "N", "]", ".", "copy_", "(", "Lt", ".", "transpose", "(", "2", ",", "1", ")", ")", "\n", "A", "[", ":", ",", "2", ",", ":", "N", "]", ".", "fill_", "(", "1", ")", "\n", "A", "[", ":", ",", "3", ":", ",", ":", "N", "]", ".", "copy_", "(", "matR", ")", "\n", "A", "[", ":", ",", "3", ":", ",", "N", ":", "N", "+", "2", "]", ".", "copy_", "(", "Lt", ")", "\n", "A", "[", ":", ",", "3", ":", ",", "N", "+", "2", "]", ".", "fill_", "(", "1", ")", "\n", "Abig", "=", "torch", ".", "zeros", "(", "batch_size", ",", "2", "*", "(", "N", "+", "3", ")", ",", "2", "*", "(", "N", "+", "3", ")", ")", "\n", "Abig", "[", ":", ",", ":", "(", "N", "+", "3", ")", ",", ":", "(", "N", "+", "3", ")", "]", "=", "A", "\n", "Abig", "[", ":", ",", "(", "N", "+", "3", ")", ":", ",", "(", "N", "+", "3", ")", ":", "]", "=", "A", "\n", "condMat", "=", "torch", ".", "eye", "(", "Abig", ".", "shape", "[", "1", "]", ")", "\n", "condMat", "=", "condMat", ".", "reshape", "(", "1", ",", "Abig", ".", "shape", "[", "1", "]", ",", "Abig", ".", "shape", "[", "1", "]", ")", "\n", "condMat", "=", "condMat", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "Acond", "=", "Abig", "+", "epsilon", "*", "condMat", "\n", "Acond", "=", "Acond", ".", "to", "(", "self", ".", "device", ")", "\n", "w", ",", "LU", "=", "torch", ".", "solve", "(", "b", ",", "Acond", ")", "\n", "return", "w", ",", "Abig", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.imgGrid": [[116, 132], ["list", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "targetCoord.repeat.repeat.float", "targetCoord.repeat.repeat.split", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "targetCoord.repeat.repeat.reshape", "targetCoord.repeat.repeat.repeat", "network_2d.self_supervised_model_2d.createKmat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.product", "range", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "targetCoord.repeat.repeat.float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to().float", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.createKmat"], ["", "def", "imgGrid", "(", "self", ",", "batch_size", ",", "Is", ",", "Ls", ")", ":", "\n", "# define a grid then warp it by tps", "\n", "# Is = 1xCxHxW image", "\n", "\t\t", "targetCoord", "=", "list", "(", "itertools", ".", "product", "(", "range", "(", "self", ".", "imgH", ")", ",", "range", "(", "self", ".", "imgW", ")", ")", ")", "\n", "targetCoord", "=", "torch", ".", "tensor", "(", "targetCoord", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "targetCoord", "=", "targetCoord", ".", "float", "(", ")", "\n", "Y", ",", "X", "=", "targetCoord", ".", "split", "(", "1", ",", "dim", "=", "1", ")", "\n", "Y", "=", "Y", "*", "2", "/", "(", "self", ".", "imgH", "-", "1", ")", "-", "1", "\n", "X", "=", "X", "*", "2", "/", "(", "self", ".", "imgW", "-", "1", ")", "-", "1", "\n", "targetCoord", "=", "torch", ".", "cat", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "1", ")", "\n", "targetCoord", "=", "targetCoord", ".", "reshape", "(", "1", ",", "targetCoord", ".", "shape", "[", "0", "]", ",", "targetCoord", ".", "shape", "[", "1", "]", ")", "\n", "targetCoord", "=", "targetCoord", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", "\n", "matT", "=", "self", ".", "createKmat", "(", "batch_size", ",", "targetCoord", ",", "Ls", ")", "\n", "# this needs to change according to our formulation ", "\n", "targetCoord_full", "=", "torch", ".", "cat", "(", "[", "matT", ",", "targetCoord", ".", "float", "(", ")", ",", "torch", ".", "ones", "(", "batch_size", ",", "self", ".", "imgH", "*", "self", ".", "imgW", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", ".", "float", "(", ")", "]", ",", "dim", "=", "2", ")", "\n", "return", "targetCoord_full", ",", "targetCoord", "\n", "\n"]], "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.forward": [[133, 171], ["inImg.split", "network_2d.self_supervised_model_2d.TPS_solve", "network_2d.self_supervised_model_2d.w.float", "network_2d.self_supervised_model_2d.imgGrid", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "network_2d.self_supervised_model_2d.sourceCoord.view().float", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "network_2d.self_supervised_model_2d.landS.size", "network_2d.self_supervised_model_2d.CNN_landS", "network_2d.self_supervised_model_2d.CNN_landS", "network_2d.self_supervised_model_2d.w.view().transpose", "imgS.float", "int", "network_2d.self_supervised_model_2d.landT.view", "network_2d.self_supervised_model_2d.landS.view", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "temp.repeat().to.repeat().to.repeat().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network_2d.self_supervised_model_2d.landT.view", "network_2d.self_supervised_model_2d.landS.view", "network_2d.self_supervised_model_2d.sourceCoord.view", "numpy.array", "network_2d.self_supervised_model_2d.w.view", "temp.repeat().to.repeat().to.repeat", "temp.repeat().to.repeat().to.float", "temp.repeat().to.repeat().to.float", "network_2d.self_supervised_model_2d.landT.size"], "methods", ["home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.TPS_solve", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.imgGrid", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.utils.network_utils.grid_sample", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.CNN_landS", "home.repos.pwc.inspect_result.riddhishb_self-supervised-landmarks.networks.network_2d.self_supervised_model_2d.CNN_landS"], ["", "def", "forward", "(", "self", ",", "inImg", ",", "epsilon", ",", "inland", ",", "landS", ",", "landT", ")", ":", "\n", "\n", "\t\t", "[", "imgS", ",", "imgT", "]", "=", "inImg", ".", "split", "(", "[", "self", ".", "input_channels", ",", "self", ".", "input_channels", "]", ",", "1", ")", "\n", "# this will get the batched output ", "\n", "batch_size", "=", "inImg", ".", "shape", "[", "0", "]", "\n", "if", "inland", ":", "\n", "\t\t\t", "self", ".", "landS", "=", "landS", "\n", "self", ".", "landT", "=", "landT", "\n", "self", ".", "numL", "=", "self", ".", "landS", ".", "size", "(", "1", ")", "\n", "", "else", ":", "\n", "# import pdb; pdb.set_trace()", "\n", "\t\t\t", "self", ".", "landT", "=", "self", ".", "CNN_landS", "(", "imgT", ")", "\n", "self", ".", "landS", "=", "self", ".", "CNN_landS", "(", "imgS", ")", "\n", "\n", "if", "self", ".", "add_corners", ":", "\n", "\t\t\t\t", "self", ".", "numL", "=", "int", "(", "self", ".", "landT", ".", "size", "(", "1", ")", "*", "0.5", "+", "4", ")", "\n", "# we need to preserve the batching ", "\n", "self", ".", "landT", "=", "self", ".", "landT", ".", "view", "(", "batch_size", ",", "self", ".", "numL", "-", "4", ",", "2", ")", "\n", "self", ".", "landS", "=", "self", ".", "landS", ".", "view", "(", "batch_size", ",", "self", ".", "numL", "-", "4", ",", "2", ")", "\n", "# adding the corners", "\n", "temp", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", "]", "]", ")", ")", "\n", "temp", "=", "temp", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "landT", "=", "torch", ".", "cat", "(", "[", "self", ".", "landT", ",", "temp", ".", "float", "(", ")", "]", ",", "1", ")", "\n", "self", ".", "landS", "=", "torch", ".", "cat", "(", "[", "self", ".", "landS", ",", "temp", ".", "float", "(", ")", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "landT", "=", "self", ".", "landT", ".", "view", "(", "batch_size", ",", "self", ".", "numL", ",", "2", ")", "\n", "self", ".", "landS", "=", "self", ".", "landS", ".", "view", "(", "batch_size", ",", "self", ".", "numL", ",", "2", ")", "\n", "\n", "", "", "self", ".", "w", ",", "self", ".", "A", "=", "self", ".", "TPS_solve", "(", "batch_size", ",", "self", ".", "landT", ",", "self", ".", "landS", ",", "epsilon", ")", "\n", "self", ".", "w", "=", "self", ".", "w", ".", "float", "(", ")", "\n", "self", ".", "targetCoord", ",", "origgrid", "=", "self", ".", "imgGrid", "(", "batch_size", ",", "imgT", ",", "self", ".", "landT", ")", "\n", "\n", "# self.sourceCoord = torch.matmul(self.targetCoord, self.w.view(self.batchSz, 2, self.numL + 3).transpose(0, 1))", "\n", "# with batched data we need to use torch bmm ", "\n", "self", ".", "sourceCoord", "=", "torch", ".", "bmm", "(", "self", ".", "targetCoord", ",", "self", ".", "w", ".", "view", "(", "batch_size", ",", "2", ",", "self", ".", "numL", "+", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "grid", "=", "self", ".", "sourceCoord", ".", "view", "(", "batch_size", ",", "self", ".", "imgH", ",", "self", ".", "imgW", ",", "2", ")", ".", "float", "(", ")", "\n", "transformed_x", "=", "F", ".", "grid_sample", "(", "imgS", ".", "float", "(", ")", ",", "grid", ",", "'bilinear'", ")", "\n", "return", "transformed_x", ",", "self", ".", "landT", ",", "self", ".", "landS", ",", "self", ".", "A", "", "", "", ""]]}