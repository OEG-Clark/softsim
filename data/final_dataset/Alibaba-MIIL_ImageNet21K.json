{"home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label_from_scratch.main": [[39, 61], ["parser.parse_args", "src_files.helper_functions.general_helper_functions.silence_PIL_warnings", "src_files.helper_functions.distributed.setup_distrib", "src_files.models.create_model().cuda", "src_files.helper_functions.distributed.to_ddp", "src_files.optimizers.create_optimizer.create_optimizer_sgd", "src_files.data_loading.data_loader.create_data_loaders", "train_single_label_from_scratch.train_21k", "src_files.models.create_model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.silence_PIL_warnings", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.setup_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.to_ddp", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.optimizers.create_optimizer.create_optimizer_sgd", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.create_data_loaders", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.train_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model"], ["def", "main", "(", ")", ":", "\n", "# arguments", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# EXIF warning silent", "\n", "silence_PIL_warnings", "(", ")", "\n", "\n", "# setup distributed", "\n", "setup_distrib", "(", "args", ")", "\n", "\n", "# Setup model", "\n", "model", "=", "create_model", "(", "args", ")", ".", "cuda", "(", ")", "\n", "model", "=", "to_ddp", "(", "model", ",", "args", ")", "\n", "\n", "# create optimizer", "\n", "optimizer", "=", "create_optimizer_sgd", "(", "model", ",", "args", ")", "\n", "\n", "# Data loading", "\n", "train_loader", ",", "val_loader", "=", "create_data_loaders", "(", "args", ")", "\n", "\n", "# Actuall Training", "\n", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label_from_scratch.train_21k": [[63, 100], ["src_files.loss_functions.losses.CrossEntropyLS", "torch.optim.lr_scheduler.OneCycleLR", "torch.cuda.amp.GradScaler", "range", "src_files.helper_functions.distributed.print_at_master", "time.time", "enumerate", "src_files.helper_functions.distributed.print_at_master", "train_single_label_from_scratch.validate_21k", "len", "src_files.helper_functions.distributed.num_distrib", "train_loader.sampler.set_epoch", "model.zero_grad", "torch.cuda.amp.GradScaler.scale().backward", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "lr_scheduler.OneCycleLR.step", "time.time", "torch.cuda.amp.autocast", "model", "src_files.loss_functions.losses.CrossEntropyLS.", "torch.cuda.amp.GradScaler.scale", "max", "src_files.helper_functions.distributed.num_distrib", "len"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.validate_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.set_epoch", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "def", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "args", ")", ":", "\n", "# set loss", "\n", "    ", "loss_fn", "=", "CrossEntropyLS", "(", "args", ".", "label_smooth", ")", "\n", "\n", "# set scheduler", "\n", "scheduler", "=", "lr_scheduler", ".", "OneCycleLR", "(", "optimizer", ",", "max_lr", "=", "args", ".", "lr", ",", "steps_per_epoch", "=", "len", "(", "train_loader", ")", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "pct_start", "=", "0.1", ",", "cycle_momentum", "=", "False", ",", "div_factor", "=", "20", ")", "\n", "\n", "# set scalaer", "\n", "scaler", "=", "GradScaler", "(", ")", "\n", "\n", "# training loop", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "            ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "# train epoch", "\n", "", "print_at_master", "(", "\"\\nEpoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "with", "autocast", "(", ")", ":", "# mixed precision", "\n", "                ", "output", "=", "model", "(", "input", ")", "\n", "loss", "=", "loss_fn", "(", "output", ",", "target", ")", "# note - loss also in fp16", "\n", "", "model", ".", "zero_grad", "(", ")", "\n", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "epoch_time", "=", "time", ".", "time", "(", ")", "-", "epoch_start_time", "\n", "print_at_master", "(", "\n", "\"\\nFinished Epoch, Training Rate: {:.1f} [img/sec]\"", ".", "format", "(", "len", "(", "train_loader", ")", "*", "\n", "args", ".", "batch_size", "/", "epoch_time", "*", "max", "(", "num_distrib", "(", ")", ",", "\n", "1", ")", ")", ")", "\n", "\n", "# validation epoch", "\n", "validate_21k", "(", "val_loader", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label_from_scratch.validate_21k": [[102, 126], ["src_files.helper_functions.distributed.print_at_master", "model.eval", "src_files.helper_functions.general_helper_functions.AverageMeter", "src_files.helper_functions.general_helper_functions.AverageMeter", "src_files.helper_functions.distributed.print_at_master", "src_files.helper_functions.distributed.print_at_master", "model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "src_files.helper_functions.general_helper_functions.accuracy", "src_files.helper_functions.general_helper_functions.AverageMeter.update", "src_files.helper_functions.general_helper_functions.AverageMeter.update", "torch.cuda.amp.autocast", "model().float", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.reduce_tensor", "src_files.helper_functions.distributed.reduce_tensor", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "src_files.helper_functions.distributed.reduce_tensor.item", "input.size", "src_files.helper_functions.distributed.reduce_tensor.item", "input.size", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.num_distrib", "model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.accuracy", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "", "def", "validate_21k", "(", "val_loader", ",", "model", ")", ":", "\n", "    ", "print_at_master", "(", "\"starting validation\"", ")", "\n", "model", ".", "eval", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "\n", "# mixed precision", "\n", "            ", "with", "autocast", "(", ")", ":", "\n", "                ", "logits", "=", "model", "(", "input", ")", ".", "float", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "                ", "acc1", "=", "reduce_tensor", "(", "acc1", ",", "num_distrib", "(", ")", ")", "\n", "acc5", "=", "reduce_tensor", "(", "acc5", ",", "num_distrib", "(", ")", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "top1", ".", "update", "(", "acc1", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "print_at_master", "(", "\"Validation results:\"", ")", "\n", "print_at_master", "(", "'Acc_Top1 [%] {:.2f},  Acc_Top5 [%] {:.2f} '", ".", "format", "(", "top1", ".", "avg", ",", "top5", ".", "avg", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label.main": [[39, 61], ["parser.parse_args", "src_files.helper_functions.general_helper_functions.silence_PIL_warnings", "src_files.helper_functions.distributed.setup_distrib", "src_files.models.create_model().cuda", "src_files.helper_functions.distributed.to_ddp", "src_files.optimizers.create_optimizer.create_optimizer", "src_files.data_loading.data_loader.create_data_loaders", "train_single_label.train_21k", "src_files.models.create_model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.silence_PIL_warnings", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.setup_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.to_ddp", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.optimizers.create_optimizer.create_optimizer", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.create_data_loaders", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.train_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model"], ["def", "main", "(", ")", ":", "\n", "# arguments", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# EXIF warning silent", "\n", "silence_PIL_warnings", "(", ")", "\n", "\n", "# setup distributed", "\n", "setup_distrib", "(", "args", ")", "\n", "\n", "# Setup model", "\n", "model", "=", "create_model", "(", "args", ")", ".", "cuda", "(", ")", "\n", "model", "=", "to_ddp", "(", "model", ",", "args", ")", "\n", "\n", "# create optimizer", "\n", "optimizer", "=", "create_optimizer", "(", "model", ",", "args", ")", "\n", "\n", "# Data loading", "\n", "train_loader", ",", "val_loader", "=", "create_data_loaders", "(", "args", ")", "\n", "\n", "# Actuall Training", "\n", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label.train_21k": [[63, 100], ["src_files.loss_functions.losses.CrossEntropyLS", "torch.optim.lr_scheduler.OneCycleLR", "torch.cuda.amp.GradScaler", "range", "src_files.helper_functions.distributed.print_at_master", "time.time", "enumerate", "src_files.helper_functions.distributed.print_at_master", "train_single_label.validate_21k", "len", "src_files.helper_functions.distributed.num_distrib", "train_loader.sampler.set_epoch", "model.zero_grad", "torch.cuda.amp.GradScaler.scale().backward", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "lr_scheduler.OneCycleLR.step", "time.time", "torch.cuda.amp.autocast", "model", "src_files.loss_functions.losses.CrossEntropyLS.", "torch.cuda.amp.GradScaler.scale", "max", "src_files.helper_functions.distributed.num_distrib", "len"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.validate_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.set_epoch", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "def", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "args", ")", ":", "\n", "# set loss", "\n", "    ", "loss_fn", "=", "CrossEntropyLS", "(", "args", ".", "label_smooth", ")", "\n", "\n", "# set scheduler", "\n", "scheduler", "=", "lr_scheduler", ".", "OneCycleLR", "(", "optimizer", ",", "max_lr", "=", "args", ".", "lr", ",", "steps_per_epoch", "=", "len", "(", "train_loader", ")", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "pct_start", "=", "0.1", ",", "cycle_momentum", "=", "False", ",", "div_factor", "=", "20", ")", "\n", "\n", "# set scalaer", "\n", "scaler", "=", "GradScaler", "(", ")", "\n", "\n", "# training loop", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "            ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "# train epoch", "\n", "", "print_at_master", "(", "\"\\nEpoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "with", "autocast", "(", ")", ":", "# mixed precision", "\n", "                ", "output", "=", "model", "(", "input", ")", "\n", "loss", "=", "loss_fn", "(", "output", ",", "target", ")", "# note - loss also in fp16", "\n", "", "model", ".", "zero_grad", "(", ")", "\n", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "epoch_time", "=", "time", ".", "time", "(", ")", "-", "epoch_start_time", "\n", "print_at_master", "(", "\n", "\"\\nFinished Epoch, Training Rate: {:.1f} [img/sec]\"", ".", "format", "(", "len", "(", "train_loader", ")", "*", "\n", "args", ".", "batch_size", "/", "epoch_time", "*", "max", "(", "num_distrib", "(", ")", ",", "\n", "1", ")", ")", ")", "\n", "\n", "# validation epoch", "\n", "validate_21k", "(", "val_loader", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_single_label.validate_21k": [[102, 126], ["src_files.helper_functions.distributed.print_at_master", "model.eval", "src_files.helper_functions.general_helper_functions.AverageMeter", "src_files.helper_functions.general_helper_functions.AverageMeter", "src_files.helper_functions.distributed.print_at_master", "src_files.helper_functions.distributed.print_at_master", "model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "src_files.helper_functions.general_helper_functions.accuracy", "src_files.helper_functions.general_helper_functions.AverageMeter.update", "src_files.helper_functions.general_helper_functions.AverageMeter.update", "torch.cuda.amp.autocast", "model().float", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.reduce_tensor", "src_files.helper_functions.distributed.reduce_tensor", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "src_files.helper_functions.distributed.reduce_tensor.item", "input.size", "src_files.helper_functions.distributed.reduce_tensor.item", "input.size", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.num_distrib", "model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.accuracy", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "", "def", "validate_21k", "(", "val_loader", ",", "model", ")", ":", "\n", "    ", "print_at_master", "(", "\"starting validation\"", ")", "\n", "model", ".", "eval", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "\n", "# mixed precision", "\n", "            ", "with", "autocast", "(", ")", ":", "\n", "                ", "logits", "=", "model", "(", "input", ")", ".", "float", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "logits", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "                ", "acc1", "=", "reduce_tensor", "(", "acc1", ",", "num_distrib", "(", ")", ")", "\n", "acc5", "=", "reduce_tensor", "(", "acc5", ",", "num_distrib", "(", ")", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "top1", ".", "update", "(", "acc1", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", ".", "item", "(", ")", ",", "input", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "print_at_master", "(", "\"Validation results:\"", ")", "\n", "print_at_master", "(", "'Acc_Top1 [%] {:.2f},  Acc_Top5 [%] {:.2f} '", ".", "format", "(", "top1", ".", "avg", ",", "top5", ".", "avg", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.main": [[42, 68], ["parser.parse_args", "src_files.helper_functions.general_helper_functions.silence_PIL_warnings", "src_files.helper_functions.distributed.setup_distrib", "src_files.models.create_model().cuda", "src_files.helper_functions.distributed.to_ddp", "src_files.optimizers.create_optimizer.create_optimizer", "src_files.data_loading.data_loader.create_data_loaders", "src_files.semantic.semantics.ImageNet21kSemanticSoftmax", "src_files.semantic.metrics.AccuracySemanticSoftmaxMet", "train_semantic_softmax.train_21k", "src_files.models.create_model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.silence_PIL_warnings", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.setup_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.to_ddp", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.optimizers.create_optimizer.create_optimizer", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.create_data_loaders", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.train_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model"], ["def", "main", "(", ")", ":", "\n", "# arguments", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# EXIF warning silent", "\n", "silence_PIL_warnings", "(", ")", "\n", "\n", "# setup distributed", "\n", "setup_distrib", "(", "args", ")", "\n", "\n", "# Setup model", "\n", "model", "=", "create_model", "(", "args", ")", ".", "cuda", "(", ")", "\n", "model", "=", "to_ddp", "(", "model", ",", "args", ")", "\n", "\n", "# create optimizer", "\n", "optimizer", "=", "create_optimizer", "(", "model", ",", "args", ")", "\n", "\n", "# Data loading", "\n", "train_loader", ",", "val_loader", "=", "create_data_loaders", "(", "args", ")", "\n", "\n", "# semantic", "\n", "semantic_softmax_processor", "=", "ImageNet21kSemanticSoftmax", "(", "args", ")", "\n", "semantic_met", "=", "AccuracySemanticSoftmaxMet", "(", "semantic_softmax_processor", ")", "\n", "\n", "# Actuall Training", "\n", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "semantic_softmax_processor", ",", "semantic_met", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.train_21k": [[70, 105], ["src_files.semantic.semantic_loss.SemanticSoftmaxLoss", "torch.optim.lr_scheduler.OneCycleLR", "torch.cuda.amp.GradScaler", "range", "src_files.helper_functions.distributed.print_at_master", "time.time", "enumerate", "src_files.helper_functions.distributed.print_at_master", "train_semantic_softmax.validate_21k", "len", "src_files.helper_functions.distributed.num_distrib", "train_loader.sampler.set_epoch", "model.zero_grad", "torch.cuda.amp.GradScaler.scale().backward", "torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.update", "lr_scheduler.OneCycleLR.step", "time.time", "torch.cuda.amp.autocast", "model", "src_files.semantic.semantic_loss.SemanticSoftmaxLoss.", "torch.cuda.amp.GradScaler.scale", "max", "src_files.helper_functions.distributed.num_distrib", "len"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.validate_21k", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.set_epoch", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "def", "train_21k", "(", "model", ",", "train_loader", ",", "val_loader", ",", "optimizer", ",", "semantic_softmax_processor", ",", "met", ",", "args", ")", ":", "\n", "# set loss", "\n", "    ", "loss_fn", "=", "SemanticSoftmaxLoss", "(", "semantic_softmax_processor", ")", "\n", "\n", "# set scheduler", "\n", "scheduler", "=", "lr_scheduler", ".", "OneCycleLR", "(", "optimizer", ",", "max_lr", "=", "args", ".", "lr", ",", "steps_per_epoch", "=", "len", "(", "train_loader", ")", ",", "\n", "epochs", "=", "args", ".", "epochs", ",", "pct_start", "=", "0.1", ",", "cycle_momentum", "=", "False", ",", "div_factor", "=", "20", ")", "\n", "\n", "# set scalaer", "\n", "scaler", "=", "GradScaler", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "            ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "# train epoch", "\n", "", "print_at_master", "(", "\"\\nEpoch {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "epoch_start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "with", "autocast", "(", ")", ":", "# mixed precision", "\n", "                ", "output", "=", "model", "(", "input", ")", "\n", "loss", "=", "loss_fn", "(", "output", ",", "target", ")", "# note - loss also in fp16", "\n", "", "model", ".", "zero_grad", "(", ")", "\n", "scaler", ".", "scale", "(", "loss", ")", ".", "backward", "(", ")", "\n", "scaler", ".", "step", "(", "optimizer", ")", "\n", "scaler", ".", "update", "(", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "epoch_time", "=", "time", ".", "time", "(", ")", "-", "epoch_start_time", "\n", "print_at_master", "(", "\n", "\"\\nFinished Epoch, Training Rate: {:.1f} [img/sec]\"", ".", "format", "(", "len", "(", "train_loader", ")", "*", "\n", "args", ".", "batch_size", "/", "epoch_time", "*", "max", "(", "num_distrib", "(", ")", ",", "\n", "1", ")", ")", ")", "\n", "\n", "# validation epoch", "\n", "validate_21k", "(", "val_loader", ",", "model", ",", "met", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.None.train_semantic_softmax.validate_21k": [[107, 123], ["src_files.helper_functions.distributed.print_at_master", "model.eval", "met.reset", "src_files.helper_functions.distributed.print_at_master", "src_files.helper_functions.distributed.print_at_master", "model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "met.accumulate", "torch.cuda.amp.autocast", "model().float", "model"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.reset", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.accumulate"], ["", "", "def", "validate_21k", "(", "val_loader", ",", "model", ",", "met", ")", ":", "\n", "    ", "print_at_master", "(", "\"starting validation\"", ")", "\n", "model", ".", "eval", "(", ")", "\n", "met", ".", "reset", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "input", ",", "target", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "# mixed precision", "\n", "            ", "with", "autocast", "(", ")", ":", "\n", "                ", "logits", "=", "model", "(", "input", ")", ".", "float", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "", "met", ".", "accumulate", "(", "logits", ",", "target", ")", "\n", "\n", "", "", "print_at_master", "(", "\"Validation results:\"", ")", "\n", "print_at_master", "(", "'Semantic Acc_Top1 [%] {:.2f} '", ".", "format", "(", "met", ".", "value", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.dataset_preprocessing.resize.resize_image": [[9, 32], ["inputFileName.replace", "cv2.imread", "max", "os.path.exists", "shutil.copyfile", "cv2.resize", "cv2.imwrite", "print", "os.path.dirname", "os.makedirs", "os.path.dirname", "print"], "function", ["None"], ["def", "resize_image", "(", "inputFileName", ",", "output_size", "=", "224", ",", "input_str", "=", "'imagenet21k_new'", ",", "output_str", "=", "'imagenet21k_resized_new'", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "out_path", "=", "inputFileName", ".", "replace", "(", "input_str", ",", "output_str", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "out_path", ")", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "out_path", ")", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Guard against race condition", "\n", "                ", "print", "(", "\"OSError \"", ",", "inputFileName", ")", "\n", "if", "exc", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                    ", "raise", "\n", "\n", "", "", "", "assert", "out_path", "!=", "inputFileName", "\n", "im", "=", "cv2", ".", "imread", "(", "inputFileName", ")", "\n", "shape", "=", "im", ".", "shape", "\n", "max_dim", "=", "max", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ")", "\n", "if", "max_dim", "<", "output_size", ":", "\n", "            ", "copyfile", "(", "inputFileName", ",", "out_path", ")", "\n", "", "else", ":", "\n", "            ", "im_resize", "=", "cv2", ".", "resize", "(", "im", ",", "(", "output_size", ",", "output_size", ")", ")", "\n", "cv2", ".", "imwrite", "(", "out_path", ",", "im_resize", ")", "\n", "", "", "except", ":", "\n", "        ", "print", "(", "\"general failure \"", ",", "inputFileName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.dataset_preprocessing.resize.main": [[34, 45], ["print", "print", "multiprocessing.dummy.Pool", "functools.partial", "multiprocessing.dummy.Pool.map", "os.walk", "glob", "os.path.join"], "function", ["None"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "path", "=", "'/mnt/imagenet21k_new/'", "# might need to edit this", "\n", "import", "os", "\n", "from", "glob", "import", "glob", "\n", "print", "(", "\"scanning files...\"", ")", "\n", "files", "=", "[", "y", "for", "x", "in", "os", ".", "walk", "(", "path", ")", "for", "y", "in", "glob", "(", "os", ".", "path", ".", "join", "(", "x", "[", "0", "]", ",", "'*.*'", ")", ")", "]", "\n", "print", "(", "\"done, start resizing\"", ")", "\n", "\n", "pool", "=", "ThreadPool", "(", "8", ")", "\n", "resize_image_fun", "=", "partial", "(", "resize_image", ",", "input_str", "=", "'imagenet21k_new'", ",", "output_str", "=", "'imagenet21k_resized_new'", ")", "\n", "pool", ".", "map", "(", "resize_image_fun", ",", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.dataset_preprocessing.resize_short_edge.resize_image_short_edge": [[9, 37], ["inputFileName.replace", "cv2.imread", "max", "os.path.exists", "shutil.copyfile", "numpy.min", "numpy.max", "cv2.resize", "cv2.imwrite", "print", "os.path.dirname", "os.makedirs", "float", "float", "os.path.dirname", "print"], "function", ["None"], ["def", "resize_image_short_edge", "(", "inputFileName", ",", "output_size", "=", "256", ",", "input_str", "=", "'imagenet21k_new'", ",", "output_str", "=", "'imagenet21k_resized_new'", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "out_path", "=", "inputFileName", ".", "replace", "(", "input_str", ",", "output_str", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "out_path", ")", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "out_path", ")", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Guard against race condition", "\n", "                ", "print", "(", "\"OSError \"", ",", "inputFileName", ")", "\n", "if", "exc", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                    ", "raise", "\n", "\n", "", "", "", "assert", "out_path", "!=", "inputFileName", "\n", "im", "=", "cv2", ".", "imread", "(", "inputFileName", ")", "\n", "shape", "=", "im", ".", "shape", "\n", "max_dim", "=", "max", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ")", "\n", "if", "max_dim", "<", "output_size", ":", "\n", "            ", "copyfile", "(", "inputFileName", ",", "out_path", ")", "\n", "", "else", ":", "\n", "            ", "im_shape", "=", "im", ".", "shape", "\n", "im_size_min", "=", "np", ".", "min", "(", "im_shape", "[", "0", ":", "2", "]", ")", "\n", "im_size_max", "=", "np", ".", "max", "(", "im_shape", "[", "0", ":", "2", "]", ")", "\n", "im_scale", "=", "float", "(", "output_size", ")", "/", "float", "(", "im_size_min", ")", "\n", "im_resize", "=", "cv2", ".", "resize", "(", "im", ",", "None", ",", "None", ",", "fx", "=", "im_scale", ",", "fy", "=", "im_scale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "cv2", ".", "imwrite", "(", "out_path", ",", "im_resize", ")", "\n", "\n", "", "", "except", ":", "\n", "        ", "print", "(", "\"general failure \"", ",", "inputFileName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.dataset_preprocessing.resize_short_edge.main": [[39, 50], ["print", "print", "multiprocessing.dummy.Pool", "functools.partial", "multiprocessing.dummy.Pool.map", "os.walk", "glob", "os.path.join"], "function", ["None"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "path", "=", "'/mnt/imagenet21k_new/'", "# might need to edit this", "\n", "import", "os", "\n", "from", "glob", "import", "glob", "\n", "print", "(", "\"scanning files...\"", ")", "\n", "files", "=", "[", "y", "for", "x", "in", "os", ".", "walk", "(", "path", ")", "for", "y", "in", "glob", "(", "os", ".", "path", ".", "join", "(", "x", "[", "0", "]", ",", "'*.*'", ")", ")", "]", "\n", "print", "(", "\"done, start resizing\"", ")", "\n", "\n", "pool", "=", "ThreadPool", "(", "8", ")", "\n", "resize_image_fun", "=", "partial", "(", "resize_image_short_edge", ",", "input_str", "=", "'imagenet21k_new'", ",", "output_str", "=", "'imagenet21k_resized_new'", ")", "\n", "pool", ".", "map", "(", "resize_image_fun", ",", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.__init__": [[15, 50], ["torch.load", "numpy.array", "len", "torch.zeros", "range", "int", "torch.histc().int", "torch.tensor", "range", "torch.zeros_like", "range", "list", "torch.max().item", "numpy.arange", "torch.sum", "semantics.ImageNet21kSemanticSoftmax.normalization_factor_list.clamp_", "semantics.ImageNet21kSemanticSoftmax.tree[].values", "len", "torch.histc", "hirarchy_level_list.append", "ind_list.append", "class_names_ind_list.append", "torch.max", "cls[].long"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "tree", "=", "torch", ".", "load", "(", "args", ".", "tree_path", ")", "\n", "self", ".", "class_tree_list", "=", "self", ".", "tree", "[", "'class_tree_list'", "]", "\n", "self", ".", "class_names", "=", "np", ".", "array", "(", "list", "(", "self", ".", "tree", "[", "'class_description'", "]", ".", "values", "(", ")", ")", ")", "\n", "self", ".", "max_normalization_factor", "=", "2e1", "\n", "num_classes", "=", "len", "(", "self", ".", "class_tree_list", ")", "\n", "self", ".", "class_depth", "=", "torch", ".", "zeros", "(", "num_classes", ")", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "            ", "self", ".", "class_depth", "[", "i", "]", "=", "len", "(", "self", ".", "class_tree_list", "[", "i", "]", ")", "-", "1", "\n", "", "max_depth", "=", "int", "(", "torch", ".", "max", "(", "self", ".", "class_depth", ")", ".", "item", "(", ")", ")", "\n", "\n", "# process semantic relations", "\n", "hist_tree", "=", "torch", ".", "histc", "(", "self", ".", "class_depth", ",", "bins", "=", "max_depth", "+", "1", ",", "min", "=", "0", ",", "max", "=", "max_depth", ")", ".", "int", "(", ")", "\n", "ind_list", "=", "[", "]", "\n", "class_names_ind_list", "=", "[", "]", "\n", "hirarchy_level_list", "=", "[", "]", "\n", "cls", "=", "torch", ".", "tensor", "(", "np", ".", "arange", "(", "num_classes", ")", ")", "\n", "for", "i", "in", "range", "(", "max_depth", ")", ":", "\n", "            ", "if", "hist_tree", "[", "i", "]", ">", "1", ":", "\n", "                ", "hirarchy_level_list", ".", "append", "(", "i", ")", "\n", "ind_list", ".", "append", "(", "cls", "[", "self", ".", "class_depth", "==", "i", "]", ".", "long", "(", ")", ")", "\n", "class_names_ind_list", ".", "append", "(", "self", ".", "class_names", "[", "ind_list", "[", "-", "1", "]", "]", ")", "\n", "", "", "self", ".", "hierarchy_indices_list", "=", "ind_list", "\n", "self", ".", "hirarchy_level_list", "=", "hirarchy_level_list", "\n", "self", ".", "class_names_ind_list", "=", "class_names_ind_list", "\n", "\n", "# calcuilating normalization array", "\n", "self", ".", "normalization_factor_list", "=", "torch", ".", "zeros_like", "(", "hist_tree", ")", "\n", "self", ".", "normalization_factor_list", "[", "-", "1", "]", "=", "hist_tree", "[", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "max_depth", ")", ":", "\n", "            ", "self", ".", "normalization_factor_list", "[", "i", "]", "=", "torch", ".", "sum", "(", "hist_tree", "[", "i", ":", "]", ",", "dim", "=", "0", ")", "\n", "", "self", ".", "normalization_factor_list", "=", "self", ".", "normalization_factor_list", "[", "0", "]", "/", "self", ".", "normalization_factor_list", "\n", "if", "self", ".", "max_normalization_factor", ":", "\n", "            ", "self", ".", "normalization_factor_list", ".", "clamp_", "(", "max", "=", "self", ".", "max_normalization_factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits": [[51, 63], ["enumerate", "semantic_logit_list.append"], "methods", ["None"], ["", "", "def", "split_logits_to_semantic_logits", "(", "self", ",", "logits", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "\"\"\"\n        split logits to 11 different hierarchies.\n\n        :param self.self.hierarchy_indices_list: a list of size [num_of_hierarchies].\n        Each element in the list is a tensor that contains the corresponding indices for the relevant hierarchy\n        \"\"\"", "\n", "semantic_logit_list", "=", "[", "]", "\n", "for", "i", ",", "ind", "in", "enumerate", "(", "self", ".", "hierarchy_indices_list", ")", ":", "\n", "            ", "logits_i", "=", "logits", "[", ":", ",", "ind", "]", "\n", "semantic_logit_list", ".", "append", "(", "logits_i", ")", "\n", "", "return", "semantic_logit_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.convert_targets_to_semantic_targets": [[64, 91], ["targets_original.cpu().detach", "enumerate", "semantic_targets_list.long().to", "torch.zeros", "targets_original.cpu().detach.cpu", "len", "enumerate", "targets_original.cpu", "semantic_targets_list.long", "len", "len", "torch.where"], "methods", ["None"], ["", "def", "convert_targets_to_semantic_targets", "(", "self", ",", "targets_original", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "\"\"\"\n        converts single-label targets to targets over num_of_hierarchies different hierarchies.\n        [batch_size] -> [batch_size x num_of_hierarchies].\n        if no hierarchical target is available, outputs -1.\n\n        :param self.self.hierarchy_indices_list: a list of size [num_of_hierarchies].\n        Each element in the list is a tensor that contains the corresponding indices for the relevant hierarchy\n\n        :param self.class_tree_list: a list of size [num_of_classes].\n        Each element in the list is a list of the relevent sub-hirrachies.\n        example - self.class_tree_list[10]:  [10, 9, 66, 65, 144]\n\n        \"\"\"", "\n", "targets", "=", "targets_original", ".", "cpu", "(", ")", ".", "detach", "(", ")", "# dont edit original targets", "\n", "semantic_targets_list", "=", "torch", ".", "zeros", "(", "(", "targets", ".", "shape", "[", "0", "]", ",", "len", "(", "self", ".", "hierarchy_indices_list", ")", ")", ")", "-", "1", "\n", "for", "i", ",", "target", "in", "enumerate", "(", "targets", ".", "cpu", "(", ")", ")", ":", "# scanning over batch size", "\n", "            ", "cls_multi_list", "=", "self", ".", "class_tree_list", "[", "target", "]", "# all the sub-hirrachies of the rager", "\n", "hir_levels", "=", "len", "(", "cls_multi_list", ")", "\n", "for", "j", ",", "cls", "in", "enumerate", "(", "cls_multi_list", ")", ":", "\n", "# protection for too small hirarchy_level_list. this protection enables us to remove hierarchies", "\n", "                ", "if", "len", "(", "self", ".", "hierarchy_indices_list", ")", "<=", "hir_levels", "-", "j", "-", "1", ":", "\n", "                    ", "continue", "\n", "", "ind_valid", "=", "(", "self", ".", "hierarchy_indices_list", "[", "hir_levels", "-", "j", "-", "1", "]", "==", "cls", ")", "\n", "semantic_targets_list", "[", "i", ",", "hir_levels", "-", "j", "-", "1", "]", "=", "torch", ".", "where", "(", "ind_valid", ")", "[", "0", "]", "\n", "\n", "", "", "return", "semantic_targets_list", ".", "long", "(", ")", ".", "to", "(", "device", "=", "targets_original", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.estimate_teacher_confidence": [[92, 103], ["torch.no_grad", "int", "torch.sum", "numpy.ceil", "torch.topk"], "methods", ["None"], ["", "def", "estimate_teacher_confidence", "(", "self", ",", "preds_teacher", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "\"\"\"\n        Helper function:\n        return the sum probabilities of the top 5% classes in preds_teacher.\n        preds_teacher dimensions - [batch_size x num_of_classes]\n        \"\"\"", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "num_elements", "=", "preds_teacher", ".", "shape", "[", "1", "]", "\n", "num_elements_topk", "=", "int", "(", "np", ".", "ceil", "(", "num_elements", "/", "20", ")", ")", "# top 5%", "\n", "weights_batch", "=", "torch", ".", "sum", "(", "torch", ".", "topk", "(", "preds_teacher", ",", "num_elements_topk", ")", ".", "values", ",", "dim", "=", "1", ")", "\n", "", "return", "weights_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.calculate_KD_loss": [[104, 133], ["semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "len", "range", "sum", "semantics.stable_softmax", "semantics.stable_softmax", "semantics.ImageNet21kSemanticSoftmax.estimate_teacher_confidence", "losses_list.append", "torch.nn.MSELoss", "semantics.ImageNet21kSemanticSoftmax.unsqueeze", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.stable_softmax", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.stable_softmax", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.estimate_teacher_confidence"], ["", "def", "calculate_KD_loss", "(", "self", ",", "input_student", ":", "Tensor", ",", "input_teacher", ":", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the semantic KD-MSE distance between student and teacher probabilities\n        input_student dimensions - [batch_size x num_of_classes]\n        input_teacher dimensions - [batch_size x num_of_classes]\n        \"\"\"", "\n", "\n", "semantic_input_student", "=", "self", ".", "split_logits_to_semantic_logits", "(", "input_student", ")", "\n", "semantic_input_teacher", "=", "self", ".", "split_logits_to_semantic_logits", "(", "input_teacher", ")", "\n", "number_of_hierarchies", "=", "len", "(", "semantic_input_student", ")", "\n", "\n", "losses_list", "=", "[", "]", "\n", "# scanning hirarchy_level_list", "\n", "for", "i", "in", "range", "(", "number_of_hierarchies", ")", ":", "\n", "# converting to semantic logits", "\n", "            ", "inputs_student_i", "=", "semantic_input_student", "[", "i", "]", "\n", "inputs_teacher_i", "=", "semantic_input_teacher", "[", "i", "]", "\n", "\n", "# generating probs", "\n", "preds_student_i", "=", "stable_softmax", "(", "inputs_student_i", ")", "\n", "preds_teacher_i", "=", "stable_softmax", "(", "inputs_teacher_i", ")", "\n", "\n", "# weight MSE-KD distances according to teacher confidence", "\n", "loss_non_reduced", "=", "torch", ".", "nn", ".", "MSELoss", "(", "reduction", "=", "'none'", ")", "(", "preds_student_i", ",", "preds_teacher_i", ")", "\n", "weights_batch", "=", "self", ".", "estimate_teacher_confidence", "(", "preds_teacher_i", ")", "\n", "loss_weighted", "=", "loss_non_reduced", "*", "weights_batch", ".", "unsqueeze", "(", "1", ")", "\n", "losses_list", ".", "append", "(", "torch", ".", "sum", "(", "loss_weighted", ")", ")", "\n", "\n", "", "return", "sum", "(", "losses_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.stable_softmax": [[6, 12], ["torch.exp", "[].unsqueeze", "torch.sum().unsqueeze", "torch.sum", "logits.max"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "stable_softmax", "(", "logits", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "logits_m", "=", "logits", "-", "logits", ".", "max", "(", "dim", "=", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "exp", "=", "torch", ".", "exp", "(", "logits_m", ")", "\n", "probs", "=", "exp", "/", "torch", ".", "sum", "(", "exp", ",", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.__init__": [[9, 12], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "semantic_softmax_processor", ")", ":", "\n", "        ", "self", ".", "semantic_softmax_processor", "=", "semantic_softmax_processor", "\n", "self", ".", "total", ",", "self", ".", "count", "=", "0.", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.reset": [[13, 15], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "total", ",", "self", ".", "count", "=", "0.", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.accumulate": [[16, 46], ["src_files.helper_functions.distributed.reduce_tensor.detach", "src_files.helper_functions.distributed.reduce_tensor.detach", "src_files.helper_functions.distributed.reduce_tensor.float", "src_files.helper_functions.distributed.reduce_tensor.item", "src_files.helper_functions.distributed.reduce_tensor.item", "torch.no_grad", "metrics.AccuracySemanticSoftmaxMet.semantic_softmax_processor.split_logits_to_semantic_logits", "metrics.AccuracySemanticSoftmaxMet.semantic_softmax_processor.convert_targets_to_semantic_targets", "range", "sum", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.reduce_tensor", "src_files.helper_functions.distributed.reduce_tensor", "len", "logits_i.argmax", "torch.sum", "accuracy_valid_list.append", "src_files.helper_functions.distributed.num_distrib", "src_files.helper_functions.distributed.num_distrib", "accuracy_list.append", "accuracy_list.append"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.convert_targets_to_semantic_targets", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "def", "accumulate", "(", "self", ",", "logits", ",", "targs", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "semantic_logit_list", "=", "self", ".", "semantic_softmax_processor", ".", "split_logits_to_semantic_logits", "(", "logits", ")", "\n", "semantic_targets_tensor", "=", "self", ".", "semantic_softmax_processor", ".", "convert_targets_to_semantic_targets", "(", "targs", ")", "\n", "accuracy_list", "=", "[", "]", "\n", "accuracy_valid_list", "=", "[", "]", "\n", "result", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "semantic_logit_list", ")", ")", ":", "# scanning hirarchy_level_list", "\n", "                ", "logits_i", "=", "semantic_logit_list", "[", "i", "]", "\n", "targets_i", "=", "semantic_targets_tensor", "[", ":", ",", "i", "]", "\n", "pred_i", "=", "logits_i", ".", "argmax", "(", "dim", "=", "-", "1", ")", "\n", "ind_valid", "=", "(", "targets_i", ">=", "0", ")", "\n", "num_valids", "=", "torch", ".", "sum", "(", "ind_valid", ")", "\n", "accuracy_valid_list", ".", "append", "(", "num_valids", ")", "\n", "if", "num_valids", ">", "0", ":", "\n", "                    ", "accuracy_list", ".", "append", "(", "(", "pred_i", "[", "ind_valid", "]", "==", "targets_i", "[", "ind_valid", "]", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "accuracy_list", ".", "append", "(", "0", ")", "\n", "", "result", "+=", "accuracy_list", "[", "-", "1", "]", "*", "accuracy_valid_list", "[", "-", "1", "]", "\n", "", "num_valids_total", "=", "sum", "(", "accuracy_valid_list", ")", "\n", "\n", "", "result", "=", "result", ".", "detach", "(", ")", "\n", "num_valids_total", "=", "num_valids_total", ".", "detach", "(", ")", "\n", "num_valids_total", "=", "num_valids_total", ".", "float", "(", ")", "\n", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "            ", "result", "=", "reduce_tensor", "(", "result", ",", "num_distrib", "(", ")", ")", "\n", "num_valids_total", "=", "reduce_tensor", "(", "num_valids_total", ",", "num_distrib", "(", ")", ")", "\n", "\n", "", "self", ".", "total", "+=", "result", ".", "item", "(", ")", "\n", "self", ".", "count", "+=", "num_valids_total", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.value": [[47, 50], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total", "/", "self", ".", "count", "*", "100", "if", "self", ".", "count", "!=", "0", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.metrics.AccuracySemanticSoftmaxMet.name": [[51, 54], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "\"semantic_accuracy\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantic_loss.SemanticSoftmaxLoss.__init__": [[6, 10], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "semantic_softmax_processor", ")", ":", "\n", "        ", "super", "(", "SemanticSoftmaxLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "semantic_softmax_processor", "=", "semantic_softmax_processor", "\n", "self", ".", "args", "=", "semantic_softmax_processor", ".", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantic_loss.SemanticSoftmaxLoss.forward": [[11, 49], ["semantic_loss.SemanticSoftmaxLoss.semantic_softmax_processor.split_logits_to_semantic_logits", "semantic_loss.SemanticSoftmaxLoss.semantic_softmax_processor.convert_targets_to_semantic_targets", "range", "enumerate", "len", "torch.log_softmax", "torch.log_softmax", "targets_i.clone", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_.mul_().add_", "torch.zeros_like().scatter_.mul_().add_", "cross_entropy_loss_tot.sum", "cross_entropy_loss_tot.sum.mean", "losses_list.append", "logits_i.size", "targets_i.clone.unsqueeze", "torch.zeros_like().scatter_.mul", "torch.zeros_like().scatter_.mul", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like().scatter_.mul_", "torch.zeros_like().scatter_.mul_"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.split_logits_to_semantic_logits", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.semantic.semantics.ImageNet21kSemanticSoftmax.convert_targets_to_semantic_targets"], ["", "def", "forward", "(", "self", ",", "logits", ",", "targets", ")", ":", "\n", "        ", "\"\"\"\n        Calculates the semantic cross-entropy loss distance between logits and targers\n        \"\"\"", "\n", "\n", "if", "not", "self", ".", "training", ":", "\n", "            ", "return", "0", "\n", "\n", "", "semantic_logit_list", "=", "self", ".", "semantic_softmax_processor", ".", "split_logits_to_semantic_logits", "(", "logits", ")", "\n", "semantic_targets_tensor", "=", "self", ".", "semantic_softmax_processor", ".", "convert_targets_to_semantic_targets", "(", "targets", ")", "\n", "\n", "losses_list", "=", "[", "]", "\n", "# scanning hirarchy_level_list", "\n", "for", "i", "in", "range", "(", "len", "(", "semantic_logit_list", ")", ")", ":", "\n", "            ", "logits_i", "=", "semantic_logit_list", "[", "i", "]", "\n", "targets_i", "=", "semantic_targets_tensor", "[", ":", ",", "i", "]", "\n", "\n", "# generate probs", "\n", "log_preds", "=", "F", ".", "log_softmax", "(", "logits_i", ",", "dim", "=", "1", ")", "\n", "\n", "# generate targets (with protections)", "\n", "targets_i_valid", "=", "targets_i", ".", "clone", "(", ")", "\n", "targets_i_valid", "[", "targets_i_valid", "<", "0", "]", "=", "0", "\n", "num_classes", "=", "logits_i", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "targets_classes", "=", "torch", ".", "zeros_like", "(", "logits_i", ")", ".", "scatter_", "(", "1", ",", "targets_i_valid", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "targets_classes", ".", "mul_", "(", "1", "-", "self", ".", "args", ".", "label_smooth", ")", ".", "add_", "(", "self", ".", "args", ".", "label_smooth", "/", "num_classes", ")", "\n", "\n", "cross_entropy_loss_tot", "=", "-", "targets_classes", ".", "mul", "(", "log_preds", ")", "\n", "cross_entropy_loss_tot", "*=", "(", "(", "targets_i", ">=", "0", ")", ".", "unsqueeze", "(", "1", ")", ")", "\n", "cross_entropy_loss", "=", "cross_entropy_loss_tot", ".", "sum", "(", "dim", "=", "-", "1", ")", "# sum over classes", "\n", "loss_i", "=", "cross_entropy_loss", ".", "mean", "(", ")", "# mean over batch", "\n", "losses_list", ".", "append", "(", "loss_i", ")", "\n", "\n", "", "total_sum", "=", "0", "\n", "for", "i", ",", "loss_h", "in", "enumerate", "(", "losses_list", ")", ":", "# summing over hirarchies", "\n", "            ", "total_sum", "+=", "loss_h", "*", "self", ".", "semantic_softmax_processor", ".", "normalization_factor_list", "[", "i", "]", "\n", "\n", "", "return", "total_sum", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.loss_functions.losses.CrossEntropyLS.__init__": [[5, 9], ["torch.Module.__init__", "torch.LogSoftmax", "torch.LogSoftmax"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "eps", ":", "float", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLS", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.loss_functions.losses.CrossEntropyLS.forward": [[10, 18], ["losses.CrossEntropyLS.logsoftmax", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_.mul_().add_", "torch.zeros_like().scatter_.mul_().add_", "cross_entropy_loss_tot.sum().mean", "inputs.size", "target.long().unsqueeze", "torch.zeros_like().scatter_.mul", "torch.zeros_like().scatter_.mul", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like().scatter_.mul_", "torch.zeros_like().scatter_.mul_", "cross_entropy_loss_tot.sum", "target.long"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "target", ")", ":", "\n", "        ", "num_classes", "=", "inputs", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "log_preds", "=", "self", ".", "logsoftmax", "(", "inputs", ")", "\n", "targets_classes", "=", "torch", ".", "zeros_like", "(", "inputs", ")", ".", "scatter_", "(", "1", ",", "target", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "targets_classes", ".", "mul_", "(", "1", "-", "self", ".", "eps", ")", ".", "add_", "(", "self", ".", "eps", "/", "num_classes", ")", "\n", "cross_entropy_loss_tot", "=", "-", "targets_classes", ".", "mul", "(", "log_preds", ")", "\n", "cross_entropy_loss", "=", "cross_entropy_loss_tot", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "return", "cross_entropy_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.optimizers.create_optimizer.create_optimizer": [[8, 12], ["src_files.helper_functions.general_helper_functions.add_weight_decay", "torch.optim.Adam"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.add_weight_decay"], ["def", "create_optimizer", "(", "model", ",", "args", ")", ":", "\n", "    ", "parameters", "=", "add_weight_decay", "(", "model", ",", "args", ".", "weight_decay", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", "=", "parameters", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "0", ")", "# true wd, filter_bias_and_bn", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.optimizers.create_optimizer.create_optimizer_sgd": [[13, 17], ["src_files.helper_functions.general_helper_functions.add_weight_decay", "torch.optim.SGD"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.add_weight_decay"], ["", "def", "create_optimizer_sgd", "(", "model", ",", "args", ")", ":", "\n", "    ", "parameters", "=", "add_weight_decay", "(", "model", ",", "args", ".", "weight_decay", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "params", "=", "parameters", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "0", ")", "# true wd, filter_bias_and_bn", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.load_model_weights": [[9, 25], ["torch.load", "model.state_dict", "model.state_dict", "src_files.helper_functions.distributed.print_at_master", "p.data.copy_", "src_files.helper_functions.distributed.print_at_master"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master"], ["def", "load_model_weights", "(", "model", ",", "model_path", ")", ":", "\n", "    ", "state", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "'cpu'", ")", "\n", "for", "key", "in", "model", ".", "state_dict", "(", ")", ":", "\n", "        ", "if", "'num_batches_tracked'", "in", "key", ":", "\n", "            ", "continue", "\n", "", "p", "=", "model", ".", "state_dict", "(", ")", "[", "key", "]", "\n", "if", "key", "in", "state", "[", "'state_dict'", "]", ":", "\n", "            ", "ip", "=", "state", "[", "'state_dict'", "]", "[", "key", "]", "\n", "if", "p", ".", "shape", "==", "ip", ".", "shape", ":", "\n", "                ", "p", ".", "data", ".", "copy_", "(", "ip", ".", "data", ")", "# Copy the data of parameters", "\n", "", "else", ":", "\n", "                ", "print_at_master", "(", "\n", "'could not load layer: {}, mismatch shape {} ,{}'", ".", "format", "(", "key", ",", "(", "p", ".", "shape", ")", ",", "(", "ip", ".", "shape", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "print_at_master", "(", "'could not load layer: {}, not in checkpoint'", ".", "format", "(", "key", ")", ")", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model": [[27, 59], ["src_files.helper_functions.distributed.print_at_master", "args.model_name.lower", "print", "tresnet.TResnetM", "factory.load_model_weights", "tresnet.TResnetL", "ofa.model_zoo.ofa_flops_595m_s", "timm.create_model", "dict", "timm.models.vision_transformer._create_vision_transformer", "timm.create_model", "print", "exit"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResnetM", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.load_model_weights", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResnetL", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.ofa_flops_595m_s", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.utils.factory.create_model"], ["", "def", "create_model", "(", "args", ")", ":", "\n", "    ", "print_at_master", "(", "'creating model {}...'", ".", "format", "(", "args", ".", "model_name", ")", ")", "\n", "\n", "model_params", "=", "{", "'args'", ":", "args", ",", "'num_classes'", ":", "args", ".", "num_classes", "}", "\n", "args", "=", "model_params", "[", "'args'", "]", "\n", "args", ".", "model_name", "=", "args", ".", "model_name", ".", "lower", "(", ")", "\n", "\n", "if", "args", ".", "model_name", "==", "'tresnet_m'", ":", "\n", "        ", "model", "=", "TResnetM", "(", "model_params", ")", "\n", "", "elif", "args", ".", "model_name", "==", "'tresnet_l'", ":", "\n", "        ", "model", "=", "TResnetL", "(", "model_params", ")", "\n", "", "elif", "args", ".", "model_name", "==", "'ofa_flops_595m_s'", ":", "\n", "        ", "model", "=", "ofa_flops_595m_s", "(", "model_params", ")", "\n", "", "elif", "args", ".", "model_name", "==", "'resnet50'", ":", "\n", "        ", "model", "=", "timm", ".", "create_model", "(", "'resnet50'", ",", "pretrained", "=", "False", ",", "num_classes", "=", "args", ".", "num_classes", ")", "\n", "", "elif", "args", ".", "model_name", "==", "'vit_base_patch16_224'", ":", "# notice - qkv_bias==False currently", "\n", "        ", "model_kwargs", "=", "dict", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "representation_size", "=", "None", ",", "qkv_bias", "=", "False", ")", "\n", "model", "=", "timm", ".", "models", ".", "vision_transformer", ".", "_create_vision_transformer", "(", "'vit_base_patch16_224_in21k'", ",", "\n", "pretrained", "=", "False", ",", "\n", "num_classes", "=", "args", ".", "num_classes", ",", "**", "model_kwargs", ")", "\n", "", "elif", "args", ".", "model_name", "==", "'mobilenetv3_large_100'", ":", "\n", "        ", "model", "=", "timm", ".", "create_model", "(", "'mobilenetv3_large_100'", ",", "pretrained", "=", "False", ",", "num_classes", "=", "args", ".", "num_classes", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"model: {} not found !!\"", ".", "format", "(", "args", ".", "model_name", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "if", "args", ".", "model_path", "and", "args", ".", "model_path", "!=", "''", ":", "# make sure to load pretrained ImageNet-1K model", "\n", "        ", "model", "=", "load_model_weights", "(", "model", ",", "args", ".", "model_path", ")", "\n", "", "print", "(", "'done\\n'", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.bottleneck_head.__init__": [[11, 17], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "tresnet.bottleneck_head.embedding_generator.append", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ",", "bottleneck_features", "=", "200", ")", ":", "\n", "        ", "super", "(", "bottleneck_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_generator", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "embedding_generator", ".", "append", "(", "nn", ".", "Linear", "(", "num_features", ",", "bottleneck_features", ")", ")", "\n", "self", ".", "embedding_generator", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "embedding_generator", ")", "\n", "self", ".", "FC", "=", "nn", ".", "Linear", "(", "bottleneck_features", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.bottleneck_head.forward": [[18, 22], ["tresnet.bottleneck_head.embedding_generator", "tresnet.bottleneck_head.FC"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "embedding", "=", "self", ".", "embedding_generator", "(", "x", ")", "\n", "logits", "=", "self", ".", "FC", "(", "self", ".", "embedding", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.BasicBlock.__init__": [[43, 60], ["torch.nn.Module.__init__", "tresnet.conv2d_ABN", "torch.ReLU", "torch.ReLU", "max", "tresnet.conv2d_ABN", "layers.general_layers.SEModule", "tresnet.conv2d_ABN", "torch.Sequential", "torch.Sequential", "tresnet.conv2d_ABN", "anti_alias_layer"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "use_se", "=", "True", ",", "anti_alias_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "stride", "==", "1", ":", "\n", "            ", "self", ".", "conv1", "=", "conv2d_ABN", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "activation_param", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "if", "anti_alias_layer", "is", "None", ":", "\n", "                ", "self", ".", "conv1", "=", "conv2d_ABN", "(", "inplanes", ",", "planes", ",", "stride", "=", "2", ",", "activation_param", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "conv2d_ABN", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "activation_param", "=", "1e-3", ")", ",", "\n", "anti_alias_layer", "(", "channels", "=", "planes", ",", "filt_size", "=", "3", ",", "stride", "=", "2", ")", ")", "\n", "\n", "", "", "self", ".", "conv2", "=", "conv2d_ABN", "(", "planes", ",", "planes", ",", "stride", "=", "1", ",", "activation", "=", "\"identity\"", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "reduce_layer_planes", "=", "max", "(", "planes", "*", "self", ".", "expansion", "//", "4", ",", "64", ")", "\n", "self", ".", "se", "=", "SEModule", "(", "planes", "*", "self", ".", "expansion", ",", "reduce_layer_planes", ")", "if", "use_se", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.BasicBlock.forward": [[61, 77], ["tresnet.BasicBlock.conv1", "tresnet.BasicBlock.conv2", "tresnet.BasicBlock.relu", "tresnet.BasicBlock.downsample", "tresnet.BasicBlock.se"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "residual", "=", "x", "\n", "\n", "", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "se", "is", "not", "None", ":", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "out", "+=", "residual", "\n", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.Bottleneck.__init__": [[82, 107], ["torch.nn.Module.__init__", "tresnet.conv2d_ABN", "tresnet.conv2d_ABN", "torch.ReLU", "torch.ReLU", "max", "tresnet.conv2d_ABN", "layers.general_layers.SEModule", "tresnet.conv2d_ABN", "torch.Sequential", "torch.Sequential", "tresnet.conv2d_ABN", "anti_alias_layer"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "use_se", "=", "True", ",", "anti_alias_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d_ABN", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "activation", "=", "\"leaky_relu\"", ",", "\n", "activation_param", "=", "1e-3", ")", "\n", "if", "stride", "==", "1", ":", "\n", "            ", "self", ".", "conv2", "=", "conv2d_ABN", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activation", "=", "\"leaky_relu\"", ",", "\n", "activation_param", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "            ", "if", "anti_alias_layer", "is", "None", ":", "\n", "                ", "self", ".", "conv2", "=", "conv2d_ABN", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "activation", "=", "\"leaky_relu\"", ",", "\n", "activation_param", "=", "1e-3", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "conv2d_ABN", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "activation", "=", "\"leaky_relu\"", ",", "activation_param", "=", "1e-3", ")", ",", "\n", "anti_alias_layer", "(", "channels", "=", "planes", ",", "filt_size", "=", "3", ",", "stride", "=", "2", ")", ")", "\n", "\n", "", "", "self", ".", "conv3", "=", "conv2d_ABN", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "activation", "=", "\"identity\"", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "reduce_layer_planes", "=", "max", "(", "planes", "*", "self", ".", "expansion", "//", "8", ",", "64", ")", "\n", "self", ".", "se", "=", "SEModule", "(", "planes", ",", "reduce_layer_planes", ")", "if", "use_se", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.Bottleneck.forward": [[108, 123], ["tresnet.Bottleneck.conv1", "tresnet.Bottleneck.conv2", "tresnet.Bottleneck.conv3", "tresnet.Bottleneck.relu", "tresnet.Bottleneck.downsample", "tresnet.Bottleneck.se"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "residual", "=", "x", "\n", "\n", "", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "if", "self", ".", "se", "is", "not", "None", ":", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "out", "+", "residual", "# no inplace", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet.__init__": [[127, 185], ["torch.nn.Module.__init__", "layers.general_layers.SpaceToDepthModule", "layers.avg_pool.FastAvgPool2d", "int", "int", "tresnet.conv2d_ABN", "tresnet.TResNet._make_layer", "tresnet.TResNet._make_layer", "tresnet.TResNet._make_layer", "tresnet.TResNet._make_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "tresnet.TResNet.modules", "tresnet.TResNet.modules", "collections.OrderedDict", "collections.OrderedDict", "tresnet.bottleneck_head", "torch.Linear", "torch.Linear", "collections.OrderedDict", "isinstance", "isinstance", "isinstance", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "m.weight.data.normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet._make_layer", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet._make_layer", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet._make_layer", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "width_factor", "=", "1.0", ",", "\n", "do_bottleneck_head", "=", "False", ",", "bottleneck_features", "=", "512", ",", "first_two_layers", "=", "BasicBlock", ")", ":", "\n", "        ", "super", "(", "TResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# JIT layers", "\n", "space_to_depth", "=", "SpaceToDepthModule", "(", ")", "\n", "anti_alias_layer", "=", "AntiAliasDownsampleLayer", "\n", "global_pool_layer", "=", "FastAvgPool2d", "(", "flatten", "=", "True", ")", "\n", "\n", "# TResnet stages", "\n", "self", ".", "inplanes", "=", "int", "(", "64", "*", "width_factor", ")", "\n", "self", ".", "planes", "=", "int", "(", "64", "*", "width_factor", ")", "\n", "conv1", "=", "conv2d_ABN", "(", "in_chans", "*", "16", ",", "self", ".", "planes", ",", "stride", "=", "1", ",", "kernel_size", "=", "3", ")", "\n", "layer1", "=", "self", ".", "_make_layer", "(", "first_two_layers", ",", "self", ".", "planes", ",", "layers", "[", "0", "]", ",", "stride", "=", "1", ",", "use_se", "=", "True", ",", "\n", "anti_alias_layer", "=", "anti_alias_layer", ")", "# 56x56", "\n", "layer2", "=", "self", ".", "_make_layer", "(", "first_two_layers", ",", "self", ".", "planes", "*", "2", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "use_se", "=", "True", ",", "\n", "anti_alias_layer", "=", "anti_alias_layer", ")", "# 28x28", "\n", "layer3", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "self", ".", "planes", "*", "4", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "use_se", "=", "True", ",", "\n", "anti_alias_layer", "=", "anti_alias_layer", ")", "# 14x14", "\n", "layer4", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "self", ".", "planes", "*", "8", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "use_se", "=", "False", ",", "\n", "anti_alias_layer", "=", "anti_alias_layer", ")", "# 7x7", "\n", "\n", "# body", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'SpaceToDepth'", ",", "space_to_depth", ")", ",", "\n", "(", "'conv1'", ",", "conv1", ")", ",", "\n", "(", "'layer1'", ",", "layer1", ")", ",", "\n", "(", "'layer2'", ",", "layer2", ")", ",", "\n", "(", "'layer3'", ",", "layer3", ")", ",", "\n", "(", "'layer4'", ",", "layer4", ")", "]", ")", ")", "\n", "\n", "# head", "\n", "self", ".", "embeddings", "=", "[", "]", "\n", "self", ".", "global_pool", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "(", "'global_pool_layer'", ",", "global_pool_layer", ")", "]", ")", ")", "\n", "self", ".", "num_features", "=", "(", "self", ".", "planes", "*", "8", ")", "*", "Bottleneck", ".", "expansion", "\n", "if", "do_bottleneck_head", ":", "\n", "            ", "fc", "=", "bottleneck_head", "(", "self", ".", "num_features", ",", "num_classes", ",", "\n", "bottleneck_features", "=", "bottleneck_features", ")", "\n", "", "else", ":", "\n", "            ", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "num_features", ",", "num_classes", ")", "\n", "\n", "", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "(", "'fc'", ",", "fc", ")", "]", ")", ")", "\n", "\n", "# model initilization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'leaky_relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "InPlaceABN", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# residual connections special initialization", "\n", "", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                ", "m", ".", "conv2", "[", "1", "]", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros_like", "(", "m", ".", "conv2", "[", "1", "]", ".", "weight", ")", ")", "# BN to zero", "\n", "", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                ", "m", ".", "conv3", "[", "1", "]", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros_like", "(", "m", ".", "conv3", "[", "1", "]", ".", "weight", ")", ")", "# BN to zero", "\n", "", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet._make_layer": [[186, 204], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "layers.append", "tresnet.conv2d_ABN", "block", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "use_se", "=", "True", ",", "anti_alias_layer", "=", "None", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "layers", "=", "[", "]", "\n", "if", "stride", "==", "2", ":", "\n", "# avg pooling before 1x1 conv", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "False", ")", ")", "\n", "", "layers", "+=", "[", "conv2d_ABN", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "\n", "activation", "=", "\"identity\"", ")", "]", "\n", "downsample", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "use_se", "=", "use_se", ",", "\n", "anti_alias_layer", "=", "anti_alias_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "layers", ".", "append", "(", "\n", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "use_se", "=", "use_se", ",", "anti_alias_layer", "=", "anti_alias_layer", ")", ")", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResNet.forward": [[205, 210], ["tresnet.TResNet.body", "tresnet.TResNet.global_pool", "tresnet.TResNet.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "self", ".", "embeddings", "=", "self", ".", "global_pool", "(", "x", ")", "\n", "logits", "=", "self", ".", "head", "(", "self", ".", "embeddings", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d": [[24, 29], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["", "", "def", "conv2d", "(", "ni", ",", "nf", ",", "stride", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "ni", ",", "nf", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nf", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d_ABN": [[32, 37], ["torch.Sequential", "torch.Conv2d", "inplace_abn.InPlaceABN"], "function", ["None"], ["", "def", "conv2d_ABN", "(", "ni", ",", "nf", ",", "stride", ",", "activation", "=", "\"leaky_relu\"", ",", "kernel_size", "=", "3", ",", "activation_param", "=", "1e-2", ",", "groups", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "ni", ",", "nf", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "kernel_size", "//", "2", ",", "groups", "=", "groups", ",", "\n", "bias", "=", "False", ")", ",", "\n", "InPlaceABN", "(", "num_features", "=", "nf", ",", "activation", "=", "activation", ",", "activation_param", "=", "activation_param", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResnetM": [[212, 219], ["tresnet.TResNet"], "function", ["None"], ["", "", "def", "TResnetM", "(", "model_params", ")", ":", "\n", "    ", "\"\"\"Constructs a medium TResnet model.\n    \"\"\"", "\n", "in_chans", "=", "3", "\n", "num_classes", "=", "model_params", "[", "'num_classes'", "]", "\n", "model", "=", "TResNet", "(", "layers", "=", "[", "3", ",", "4", ",", "11", ",", "3", "]", ",", "num_classes", "=", "num_classes", ",", "in_chans", "=", "in_chans", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.TResnetL": [[221, 229], ["tresnet.TResNet"], "function", ["None"], ["", "def", "TResnetL", "(", "model_params", ")", ":", "\n", "    ", "\"\"\"Constructs a large TResnet model.\n    \"\"\"", "\n", "in_chans", "=", "3", "\n", "num_classes", "=", "model_params", "[", "'num_classes'", "]", "\n", "layers_list", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", "\n", "model", "=", "TResNet", "(", "layers", "=", "layers_list", ",", "num_classes", "=", "num_classes", ",", "in_chans", "=", "in_chans", ",", "first_two_layers", "=", "Bottleneck", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.avg_pool.FastAvgPool2d.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "flatten", "=", "False", ")", ":", "\n", "        ", "super", "(", "FastAvgPool2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "flatten", "=", "flatten", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.avg_pool.FastAvgPool2d.forward": [[12, 18], ["x.size", "x.view().mean", "x.view().mean().view", "x.size", "x.size", "x.view", "x.view().mean", "x.view", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "flatten", ":", "\n", "            ", "in_size", "=", "x", ".", "size", "(", ")", "\n", "return", "x", ".", "view", "(", "(", "in_size", "[", "0", "]", ",", "in_size", "[", "1", "]", ",", "-", "1", ")", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "mean", "(", "-", "1", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.AntiAliasDownsampleLayer.__init__": [[9, 16], ["torch.Module.__init__", "anti_aliasing.DownsampleJIT", "anti_aliasing.Downsample"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "remove_model_jit", ":", "bool", "=", "False", ",", "filt_size", ":", "int", "=", "3", ",", "stride", ":", "int", "=", "2", ",", "\n", "channels", ":", "int", "=", "0", ")", ":", "\n", "        ", "super", "(", "AntiAliasDownsampleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "remove_model_jit", ":", "\n", "            ", "self", ".", "op", "=", "DownsampleJIT", "(", "filt_size", ",", "stride", ",", "channels", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "op", "=", "Downsample", "(", "filt_size", ",", "stride", ",", "channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.AntiAliasDownsampleLayer.forward": [[17, 19], ["anti_aliasing.AntiAliasDownsampleLayer.op"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.DownsampleJIT.__init__": [[23, 35], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "filt[].repeat().cuda().half", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "filt[].repeat().cuda", "filt[].repeat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filt_size", ":", "int", "=", "3", ",", "stride", ":", "int", "=", "2", ",", "channels", ":", "int", "=", "0", ")", ":", "\n", "        ", "self", ".", "stride", "=", "stride", "\n", "self", ".", "filt_size", "=", "filt_size", "\n", "self", ".", "channels", "=", "channels", "\n", "\n", "assert", "self", ".", "filt_size", "==", "3", "\n", "assert", "stride", "==", "2", "\n", "a", "=", "torch", ".", "tensor", "(", "[", "1.", ",", "2.", ",", "1.", "]", ")", "\n", "\n", "filt", "=", "(", "a", "[", ":", ",", "None", "]", "*", "a", "[", "None", ",", ":", "]", ")", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "filt", "=", "filt", "/", "torch", ".", "sum", "(", "filt", ")", "\n", "self", ".", "filt", "=", "filt", "[", "None", ",", "None", ",", ":", ",", ":", "]", ".", "repeat", "(", "(", "self", ".", "channels", ",", "1", ",", "1", ",", "1", ")", ")", ".", "cuda", "(", ")", ".", "half", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.DownsampleJIT.__call__": [[36, 41], ["torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "anti_aliasing.DownsampleJIT.filt.float"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d"], ["", "def", "__call__", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "input", ".", "dtype", "!=", "self", ".", "filt", ".", "dtype", ":", "\n", "            ", "self", ".", "filt", "=", "self", ".", "filt", ".", "float", "(", ")", "\n", "", "input_pad", "=", "F", ".", "pad", "(", "input", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "'reflect'", ")", "\n", "return", "F", ".", "conv2d", "(", "input_pad", ",", "self", ".", "filt", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "groups", "=", "input", ".", "shape", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.Downsample.__init__": [[44, 57], ["torch.Module.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "filt[].repeat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "filt_size", "=", "3", ",", "stride", "=", "2", ",", "channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "Downsample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "filt_size", "=", "filt_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "channels", "=", "channels", "\n", "\n", "\n", "assert", "self", ".", "filt_size", "==", "3", "\n", "a", "=", "torch", ".", "tensor", "(", "[", "1.", ",", "2.", ",", "1.", "]", ")", "\n", "\n", "filt", "=", "(", "a", "[", ":", ",", "None", "]", "*", "a", "[", "None", ",", ":", "]", ")", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "filt", "=", "filt", "/", "torch", ".", "sum", "(", "filt", ")", "\n", "self", ".", "filt", "=", "filt", "[", "None", ",", "None", ",", ":", ",", ":", "]", ".", "repeat", "(", "(", "self", ".", "channels", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.anti_aliasing.Downsample.forward": [[58, 61], ["torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.tresnet.tresnet.conv2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input_pad", "=", "F", ".", "pad", "(", "input", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "'reflect'", ")", "\n", "return", "F", ".", "conv2d", "(", "input_pad", ",", "self", ".", "filt", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "input", ".", "shape", "[", "1", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.Flatten.forward": [[9, 11], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.DepthToSpace.__init__": [[15, 18], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bs", "=", "block_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.DepthToSpace.forward": [[19, 25], ["x.view.view.size", "x.view.view.view", "x.view.view.permute().contiguous", "x.view.view.view", "x.view.view.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "self", ".", "bs", ",", "self", ".", "bs", ",", "C", "//", "(", "self", ".", "bs", "**", "2", ")", ",", "H", ",", "W", ")", "# (N, bs, bs, C//bs^2, H, W)", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "4", ",", "1", ",", "5", ",", "2", ")", ".", "contiguous", "(", ")", "# (N, C//bs^2, H, bs, W, bs)", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", "//", "(", "self", ".", "bs", "**", "2", ")", ",", "H", "*", "self", ".", "bs", ",", "W", "*", "self", ".", "bs", ")", "# (N, C//bs^2, H * bs, W * bs)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SpaceToDepthModule.__init__": [[28, 34], ["torch.Module.__init__", "general_layers.SpaceToDepthJit", "general_layers.SpaceToDepth"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "remove_model_jit", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "not", "remove_model_jit", ":", "\n", "            ", "self", ".", "op", "=", "SpaceToDepthJit", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "op", "=", "SpaceToDepth", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SpaceToDepthModule.forward": [[35, 37], ["general_layers.SpaceToDepthModule.op"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SpaceToDepth.__init__": [[40, 44], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block_size", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "block_size", "==", "4", "\n", "self", ".", "bs", "=", "block_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SpaceToDepth.forward": [[45, 51], ["x.view.view.size", "x.view.view.view", "x.view.view.permute().contiguous", "x.view.view.view", "x.view.view.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", ",", "H", "//", "self", ".", "bs", ",", "self", ".", "bs", ",", "W", "//", "self", ".", "bs", ",", "self", ".", "bs", ")", "# (N, C, H//bs, bs, W//bs, bs)", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "5", ",", "1", ",", "2", ",", "4", ")", ".", "contiguous", "(", ")", "# (N, bs, bs, C, H//bs, W//bs)", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", "*", "(", "self", ".", "bs", "**", "2", ")", ",", "H", "//", "self", ".", "bs", ",", "W", "//", "self", ".", "bs", ")", "# (N, C*bs^2, H//bs, W//bs)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SpaceToDepthJit.__call__": [[55, 62], ["x.view.view.size", "x.view.view.view", "x.view.view.permute().contiguous", "x.view.view.view", "x.view.view.permute"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", ":", "\n", "# assuming hard-coded that block_size==4 for acceleration", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", ",", "H", "//", "4", ",", "4", ",", "W", "//", "4", ",", "4", ")", "# (N, C, H//bs, bs, W//bs, bs)", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "5", ",", "1", ",", "2", ",", "4", ")", ".", "contiguous", "(", ")", "# (N, bs, bs, C, H//bs, W//bs)", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "C", "*", "16", ",", "H", "//", "4", ",", "W", "//", "4", ")", "# (N, C*bs^2, H//bs, W//bs)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.hard_sigmoid.__init__": [[65, 68], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "hard_sigmoid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.hard_sigmoid.forward": [[69, 74], ["x.add_().clamp_().div_", "torch.relu6", "torch.relu6", "torch.relu6", "x.add_().clamp_", "x.add_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inplace", ":", "\n", "            ", "return", "x", ".", "add_", "(", "3.", ")", ".", "clamp_", "(", "0.", ",", "6.", ")", ".", "div_", "(", "6.", ")", "\n", "", "else", ":", "\n", "            ", "return", "F", ".", "relu6", "(", "x", "+", "3.", ")", "/", "6.", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SEModule.__init__": [[78, 86], ["torch.Module.__init__", "src_files.models.tresnet.layers.avg_pool.FastAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction_channels", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "FastAvgPool2d", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "channels", ",", "reduction_channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "inplace", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "reduction_channels", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "# self.activation = hard_sigmoid(inplace=inplace)", "\n", "self", ".", "activation", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.layers.general_layers.SEModule.forward": [[87, 94], ["general_layers.SEModule.avg_pool", "general_layers.SEModule.fc1", "general_layers.SEModule.relu", "general_layers.SEModule.fc2", "general_layers.SEModule.activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_se", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x_se2", "=", "self", ".", "fc1", "(", "x_se", ")", "\n", "x_se2", "=", "self", ".", "relu", "(", "x_se2", ")", "\n", "x_se", "=", "self", ".", "fc2", "(", "x_se2", ")", "\n", "x_se", "=", "self", ".", "activation", "(", "x_se", ")", "\n", "return", "x", "*", "x_se", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileInvertedResidualBlock.__init__": [[20, 25], ["src_files.models.ofa.utils.MyModule.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mobile_inverted_conv", ",", "shortcut", ")", ":", "\n", "        ", "super", "(", "MobileInvertedResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mobile_inverted_conv", "=", "mobile_inverted_conv", "\n", "self", ".", "shortcut", "=", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileInvertedResidualBlock.forward": [[26, 34], ["isinstance", "isinstance", "model_zoo.MobileInvertedResidualBlock.mobile_inverted_conv", "model_zoo.MobileInvertedResidualBlock.mobile_inverted_conv", "model_zoo.MobileInvertedResidualBlock.shortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "mobile_inverted_conv", "is", "None", "or", "isinstance", "(", "self", ".", "mobile_inverted_conv", ",", "ZeroLayer", ")", ":", "\n", "            ", "res", "=", "x", "\n", "", "elif", "self", ".", "shortcut", "is", "None", "or", "isinstance", "(", "self", ".", "shortcut", ",", "ZeroLayer", ")", ":", "\n", "            ", "res", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "res", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileInvertedResidualBlock.module_str": [[35, 40], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'(%s, %s)'", "%", "(", "\n", "self", ".", "mobile_inverted_conv", ".", "module_str", "if", "self", ".", "mobile_inverted_conv", "is", "not", "None", "else", "None", ",", "\n", "self", ".", "shortcut", ".", "module_str", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileInvertedResidualBlock.config": [[42, 48], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MobileInvertedResidualBlock", ".", "__name__", ",", "\n", "'mobile_inverted_conv'", ":", "self", ".", "mobile_inverted_conv", ".", "config", "if", "self", ".", "mobile_inverted_conv", "is", "not", "None", "else", "None", ",", "\n", "'shortcut'", ":", "self", ".", "shortcut", ".", "config", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileInvertedResidualBlock.build_from_config": [[50, 55], ["set_layer_from_config", "set_layer_from_config", "model_zoo.MobileInvertedResidualBlock"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "mobile_inverted_conv", "=", "set_layer_from_config", "(", "config", "[", "'mobile_inverted_conv'", "]", ")", "\n", "shortcut", "=", "set_layer_from_config", "(", "config", "[", "'shortcut'", "]", ")", "\n", "return", "MobileInvertedResidualBlock", "(", "mobile_inverted_conv", ",", "shortcut", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.__init__": [[59, 68], ["src_files.models.ofa.utils.MyNetwork.__init__", "nn.ModuleList", "nn.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "first_conv", ",", "blocks", ",", "final_expand_layer", ",", "feature_mix_layer", ",", "classifier", ")", ":", "\n", "        ", "super", "(", "MobileNetV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first_conv", "=", "first_conv", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "blocks", ")", "\n", "self", ".", "final_expand_layer", "=", "final_expand_layer", "\n", "self", ".", "feature_mix_layer", "=", "feature_mix_layer", "\n", "self", ".", "classifier", "=", "classifier", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.forward": [[69, 81], ["model_zoo.MobileNetV3.first_conv", "model_zoo.MobileNetV3.final_expand_layer", "model_zoo.MobileNetV3.pool", "model_zoo.MobileNetV3.feature_mix_layer", "model_zoo.MobileNetV3.classifier", "block.view", "block", "int", "int", "block.size", "block.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "first_conv", "(", "x", ")", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "x", "=", "self", ".", "final_expand_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "# x = x.mean(3, keepdim=True).mean(2, keepdim=True)  # global average pooling", "\n", "x", "=", "self", ".", "feature_mix_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "int", "(", "x", ".", "size", "(", "0", ")", ")", ",", "int", "(", "x", ".", "size", "(", "1", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.module_str": [[82, 91], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "_str", "=", "self", ".", "first_conv", ".", "module_str", "+", "'\\n'", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "_str", "+=", "block", ".", "module_str", "+", "'\\n'", "\n", "", "_str", "+=", "self", ".", "final_expand_layer", ".", "module_str", "+", "'\\n'", "\n", "_str", "+=", "self", ".", "feature_mix_layer", ".", "module_str", "+", "'\\n'", "\n", "_str", "+=", "self", ".", "classifier", ".", "module_str", "\n", "return", "_str", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.config": [[92, 104], ["model_zoo.MobileNetV3.get_bn_param"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.get_bn_param"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MobileNetV3", ".", "__name__", ",", "\n", "'bn'", ":", "self", ".", "get_bn_param", "(", ")", ",", "\n", "'first_conv'", ":", "self", ".", "first_conv", ".", "config", ",", "\n", "'blocks'", ":", "[", "\n", "block", ".", "config", "for", "block", "in", "self", ".", "blocks", "\n", "]", ",", "\n", "'final_expand_layer'", ":", "self", ".", "final_expand_layer", ".", "config", ",", "\n", "'feature_mix_layer'", ":", "self", ".", "feature_mix_layer", ".", "config", ",", "\n", "'classifier'", ":", "self", ".", "classifier", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.build_from_config": [[106, 124], ["set_layer_from_config", "set_layer_from_config", "set_layer_from_config", "set_layer_from_config", "model_zoo.MobileNetV3", "blocks.append", "MobileNetV3.set_bn_param", "MobileNetV3.set_bn_param", "model_zoo.MobileInvertedResidualBlock.build_from_config"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.set_bn_param", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.set_bn_param", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.build_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "first_conv", "=", "set_layer_from_config", "(", "config", "[", "'first_conv'", "]", ")", "\n", "final_expand_layer", "=", "set_layer_from_config", "(", "config", "[", "'final_expand_layer'", "]", ")", "\n", "feature_mix_layer", "=", "set_layer_from_config", "(", "config", "[", "'feature_mix_layer'", "]", ")", "\n", "classifier", "=", "set_layer_from_config", "(", "config", "[", "'classifier'", "]", ")", "\n", "\n", "blocks", "=", "[", "]", "\n", "for", "block_config", "in", "config", "[", "'blocks'", "]", ":", "\n", "            ", "blocks", ".", "append", "(", "MobileInvertedResidualBlock", ".", "build_from_config", "(", "block_config", ")", ")", "\n", "\n", "", "net", "=", "MobileNetV3", "(", "first_conv", ",", "blocks", ",", "final_expand_layer", ",", "feature_mix_layer", ",", "classifier", ")", "\n", "if", "'bn'", "in", "config", ":", "\n", "            ", "net", ".", "set_bn_param", "(", "**", "config", "[", "'bn'", "]", ")", "\n", "", "else", ":", "\n", "            ", "net", ".", "set_bn_param", "(", "momentum", "=", "0.1", ",", "eps", "=", "1e-3", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.MobileNetV3.zero_last_gamma": [[125, 131], ["model_zoo.MobileNetV3.modules", "isinstance", "isinstance", "isinstance", "m.mobile_inverted_conv.point_linear.bn.weight.data.zero_"], "methods", ["None"], ["", "def", "zero_last_gamma", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "MobileInvertedResidualBlock", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ".", "mobile_inverted_conv", ",", "MBInvertedConvLayer", ")", "and", "isinstance", "(", "m", ".", "shortcut", ",", "\n", "IdentityLayer", ")", ":", "\n", "                    ", "m", ".", "mobile_inverted_conv", ".", "point_linear", ".", "bn", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.ofa_specialized": [[133, 151], ["json.load", "model_zoo.MobileNetV3.build_from_config", "MobileNetV3.build_from_config.init_model", "open", "json.load", "os.path.join", "open", "os.path.join"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.build_from_config", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.init_model"], ["", "", "", "", "", "def", "ofa_specialized", "(", "net_id", ",", "num_classes", "=", "None", ")", ":", "\n", "    ", "import", "src_files", ".", "models", ".", "ofa", ".", "layers", "as", "layers", "\n", "\n", "layers", ".", "build_activation", "=", "src_files", ".", "models", ".", "ofa", ".", "utils", ".", "build_activation", "\n", "layers", ".", "SEModule", "=", "src_files", ".", "models", ".", "ofa", ".", "utils", ".", "SEModule", "\n", "\n", "net_config", "=", "json", ".", "load", "(", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "'./src_files/models/ofa/specialized_models_configs/'", "+", "net_id", ",", "'net.config'", ")", ")", ")", "\n", "net_config", "[", "'classifier'", "]", "[", "'out_features'", "]", "=", "num_classes", "\n", "net", "=", "MobileNetV3", ".", "build_from_config", "(", "net_config", ")", "\n", "\n", "# model init", "\n", "net", ".", "init_model", "(", "'he_fout'", ")", "\n", "\n", "image_size", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "'./src_files/models/ofa/specialized_models_configs/'", "+", "net_id", ",", "'run.config'", ")", ")", ")", "[", "\n", "'image_size'", "]", "\n", "return", "net", ",", "image_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.ofa_flops_595m_s": [[154, 158], ["model_zoo.ofa_specialized"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.model_zoo.ofa_specialized"], ["", "def", "ofa_flops_595m_s", "(", "model_params", ")", ":", "\n", "    ", "net", ",", "image_size", "=", "ofa_specialized", "(", "\"flops@595M_top1@80.0_finetune@75\"", ",", "\n", "num_classes", "=", "model_params", "[", "'num_classes'", "]", ")", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.__init__": [[36, 79], ["src_files.models.ofa.utils.MyModule.__init__", "src_files.models.ofa.utils.build_activation", "layers.My2DLayer.weight_op", "torch.Dropout2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.My2DLayer.add_module", "layers.My2DLayer.add_module", "layers.My2DLayer.add_module"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.build_activation", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.weight_op"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "My2DLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n", "", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout2d", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# weight", "\n", "", "modules", "[", "'weight'", "]", "=", "self", ".", "weight_op", "(", ")", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "# dropout before weight operation", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.ops_list": [[80, 83], ["layers.My2DLayer.ops_order.split"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.bn_before_weight": [[84, 92], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "return", "False", "\n", "", "", "raise", "ValueError", "(", "'Invalid ops_order: %s'", "%", "self", ".", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.weight_op": [[93, 95], ["None"], "methods", ["None"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.forward": [[98, 103], ["layers.My2DLayer._modules.values", "module"], "methods", ["None"], ["def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# similar to nn.Sequential", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.module_str": [[104, 107], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.config": [[108, 117], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n", "'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.My2DLayer.build_from_config": [[119, 122], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ConvLayer.__init__": [[126, 138], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "# default normal 3x3_Conv with bn and relu", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "has_shuffle", "=", "has_shuffle", "\n", "\n", "super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ConvLayer.weight_op": [[139, 156], ["src_files.models.ofa.utils.get_same_padding", "isinstance", "collections.OrderedDict", "torch.Conv2d", "src_files.models.ofa.utils.ShuffleLayer"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n", "if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ConvLayer.module_str": [[157, 175], ["isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "groups", "==", "1", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "conv_str", "=", "'%dx%d_DilatedConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "conv_str", "=", "'%dx%d_Conv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "conv_str", "=", "'%dx%d_DilatedGroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "conv_str", "=", "'%dx%d_GroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "", "conv_str", "+=", "'_O%d'", "%", "self", ".", "out_channels", "\n", "return", "conv_str", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ConvLayer.config": [[176, 187], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "ConvLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ConvLayer.build_from_config": [[189, 192], ["layers.ConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.DepthConvLayer.__init__": [[196, 209], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "# default normal 3x3_DepthConv with bn and relu", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "has_shuffle", "=", "has_shuffle", "\n", "\n", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.DepthConvLayer.weight_op": [[211, 230], ["src_files.models.ofa.utils.get_same_padding", "isinstance", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "src_files.models.ofa.utils.ShuffleLayer"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'depth_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "in_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "in_channels", ",", "bias", "=", "False", "\n", ")", "\n", "weight_dict", "[", "'point_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "1", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n", "if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.DepthConvLayer.module_str": [[231, 243], ["isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "dilation", ">", "1", ":", "\n", "            ", "conv_str", "=", "'%dx%d_DilatedDepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "conv_str", "=", "'%dx%d_DepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "conv_str", "+=", "'_O%d'", "%", "self", ".", "out_channels", "\n", "return", "conv_str", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.DepthConvLayer.config": [[244, 255], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "DepthConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.DepthConvLayer.build_from_config": [[257, 260], ["layers.DepthConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "DepthConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.PoolingLayer.__init__": [[264, 272], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "pool_type", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "pool_type", "=", "pool_type", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "super", "(", "PoolingLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.PoolingLayer.weight_op": [[273, 290], ["collections.OrderedDict", "src_files.models.ofa.utils.get_same_padding", "torch.AvgPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "# same padding if `stride == 1`", "\n", "            ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "padding", "=", "0", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "if", "self", ".", "pool_type", "==", "'avg'", ":", "\n", "            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "AvgPool2d", "(", "\n", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "count_include_pad", "=", "False", "\n", ")", "\n", "", "elif", "self", ".", "pool_type", "==", "'max'", ":", "\n", "            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "MaxPool2d", "(", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.PoolingLayer.module_str": [[291, 298], ["isinstance", "layers.PoolingLayer.pool_type.upper"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "return", "'%dx%d_%sPool'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ",", "self", ".", "pool_type", ".", "upper", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.PoolingLayer.config": [[299, 307], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "PoolingLayer", ".", "__name__", ",", "\n", "'pool_type'", ":", "self", ".", "pool_type", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "**", "super", "(", "PoolingLayer", ",", "self", ")", ".", "config", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.PoolingLayer.build_from_config": [[309, 312], ["layers.PoolingLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "PoolingLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.__init__": [[316, 319], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "IdentityLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.weight_op": [[320, 322], ["None"], "methods", ["None"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.module_str": [[323, 326], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Identity'", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.config": [[327, 332], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "IdentityLayer", ".", "__name__", ",", "\n", "**", "super", "(", "IdentityLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.IdentityLayer.build_from_config": [[334, 337], ["layers.IdentityLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "IdentityLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.__init__": [[341, 386], ["src_files.models.ofa.utils.MyModule.__init__", "src_files.models.ofa.utils.build_activation", "torch.Dropout", "torch.Conv2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "layers.LinearLayer.add_module", "layers.LinearLayer.add_module", "layers.LinearLayer.add_module"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.build_activation"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "LinearLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "in_features", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "out_features", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n", "", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", "and", "False", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# linear", "\n", "# modules['weight'] = {'linear': nn.Linear(self.in_features, self.out_features, self.bias)}", "\n", "", "modules", "[", "'weight'", "]", "=", "{", "'linear'", ":", "nn", ".", "Conv2d", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ",", "1", ",", "1", ",", "0", ",", "self", ".", "bias", ")", "}", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.ops_list": [[387, 390], ["layers.LinearLayer.ops_order.split"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.bn_before_weight": [[391, 399], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "return", "False", "\n", "", "", "raise", "ValueError", "(", "'Invalid ops_order: %s'", "%", "self", ".", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.forward": [[400, 404], ["layers.LinearLayer._modules.values", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.module_str": [[405, 408], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'%dx%d_Linear'", "%", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.config": [[409, 420], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "LinearLayer", ".", "__name__", ",", "\n", "'in_features'", ":", "self", ".", "in_features", ",", "\n", "'out_features'", ":", "self", ".", "out_features", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n", "'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.LinearLayer.build_from_config": [[422, 425], ["layers.LinearLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "LinearLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ZeroLayer.__init__": [[429, 432], ["src_files.models.ofa.utils.MyModule.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ZeroLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ZeroLayer.forward": [[433, 435], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "ValueError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ZeroLayer.module_str": [[436, 439], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Zero'", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ZeroLayer.config": [[440, 445], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ZeroLayer", ".", "__name__", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.ZeroLayer.build_from_config": [[447, 450], ["layers.ZeroLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ZeroLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.MBInvertedConvLayer.__init__": [[454, 495], ["src_files.models.ofa.utils.MyModule.__init__", "src_files.models.ofa.utils.get_same_padding", "torch.Sequential", "torch.Sequential", "round", "torch.Sequential", "depth_conv_modules.append", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "torch.Conv2d", "torch.BatchNorm2d", "src_files.models.ofa.utils.build_activation", "src_files.models.ofa.utils.SEModule", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "src_files.models.ofa.utils.build_activation"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.build_activation", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.build_activation"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "expand_ratio", "=", "6", ",", "mid_channels", "=", "None", ",", "act_func", "=", "'relu6'", ",", "use_se", "=", "False", ")", ":", "\n", "        ", "super", "(", "MBInvertedConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expand_ratio", "=", "expand_ratio", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "use_se", "=", "use_se", "\n", "\n", "if", "self", ".", "mid_channels", "is", "None", ":", "\n", "            ", "feature_dim", "=", "round", "(", "self", ".", "in_channels", "*", "self", ".", "expand_ratio", ")", "\n", "", "else", ":", "\n", "            ", "feature_dim", "=", "self", ".", "mid_channels", "\n", "\n", "", "if", "self", ".", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_channels", ",", "feature_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "build_activation", "(", "self", ".", "act_func", ",", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "pad", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "depth_conv_modules", "=", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "feature_dim", ",", "kernel_size", ",", "stride", ",", "pad", ",", "groups", "=", "feature_dim", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "build_activation", "(", "self", ".", "act_func", ",", "inplace", "=", "True", ")", ")", "\n", "]", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "depth_conv_modules", ".", "append", "(", "(", "'se'", ",", "SEModule", "(", "feature_dim", ")", ")", ")", "\n", "", "self", ".", "depth_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "depth_conv_modules", ")", ")", "\n", "\n", "self", ".", "point_linear", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "out_channels", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", ",", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.MBInvertedConvLayer.forward": [[497, 503], ["layers.MBInvertedConvLayer.depth_conv", "layers.MBInvertedConvLayer.point_linear", "layers.MBInvertedConvLayer.inverted_bottleneck"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inverted_bottleneck", ":", "\n", "            ", "x", "=", "self", ".", "inverted_bottleneck", "(", "x", ")", "\n", "", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "point_linear", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.MBInvertedConvLayer.module_str": [[504, 515], ["layers.MBInvertedConvLayer.act_func.upper"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mid_channels", "is", "None", ":", "\n", "            ", "expand_ratio", "=", "self", ".", "expand_ratio", "\n", "", "else", ":", "\n", "            ", "expand_ratio", "=", "self", ".", "mid_channels", "//", "self", ".", "in_channels", "\n", "", "layer_str", "=", "'%dx%d_MBConv%d_%s'", "%", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ",", "expand_ratio", ",", "self", ".", "act_func", ".", "upper", "(", ")", ")", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "layer_str", "=", "'SE_'", "+", "layer_str", "\n", "", "layer_str", "+=", "'_O%d'", "%", "self", ".", "out_channels", "\n", "return", "layer_str", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.MBInvertedConvLayer.config": [[516, 528], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MBInvertedConvLayer", ".", "__name__", ",", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'expand_ratio'", ":", "self", ".", "expand_ratio", ",", "\n", "'mid_channels'", ":", "self", ".", "mid_channels", ",", "\n", "'act_func'", ":", "self", ".", "act_func", ",", "\n", "'use_se'", ":", "self", ".", "use_se", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.MBInvertedConvLayer.build_from_config": [[530, 533], ["layers.MBInvertedConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "MBInvertedConvLayer", "(", "**", "config", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.layers.set_layer_from_config": [[16, 33], ["layer_config.pop", "layer.build_from_config"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.build_from_config"], ["def", "set_layer_from_config", "(", "layer_config", ")", ":", "\n", "    ", "if", "layer_config", "is", "None", ":", "\n", "        ", "return", "None", "\n", "\n", "", "name2layer", "=", "{", "\n", "ConvLayer", ".", "__name__", ":", "ConvLayer", ",", "\n", "DepthConvLayer", ".", "__name__", ":", "DepthConvLayer", ",", "\n", "PoolingLayer", ".", "__name__", ":", "PoolingLayer", ",", "\n", "IdentityLayer", ".", "__name__", ":", "IdentityLayer", ",", "\n", "LinearLayer", ".", "__name__", ":", "LinearLayer", ",", "\n", "ZeroLayer", ".", "__name__", ":", "ZeroLayer", ",", "\n", "MBInvertedConvLayer", ".", "__name__", ":", "MBInvertedConvLayer", ",", "\n", "}", "\n", "\n", "layer_name", "=", "layer_config", ".", "pop", "(", "'name'", ")", "\n", "layer", "=", "name2layer", "[", "layer_name", "]", "\n", "return", "layer", ".", "build_from_config", "(", "layer_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.AverageMeter.__init__": [[46, 51], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.AverageMeter.reset": [[52, 57], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.AverageMeter.update": [[58, 63], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyModule.forward": [[67, 69], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyModule.module_str": [[70, 73], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyModule.config": [[74, 77], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyModule.build_from_config": [[78, 81], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.forward": [[85, 87], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.module_str": [[88, 91], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.config": [[92, 95], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.build_from_config": [[96, 99], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.zero_last_gamma": [[100, 102], ["None"], "methods", ["None"], ["", "def", "zero_last_gamma", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.set_bn_param": [[105, 111], ["utils.MyNetwork.modules", "isinstance", "isinstance"], "methods", ["None"], ["def", "set_bn_param", "(", "self", ",", "momentum", ",", "eps", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "momentum", "=", "momentum", "\n", "m", ".", "eps", "=", "eps", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.get_bn_param": [[112, 120], ["utils.MyNetwork.modules", "isinstance", "isinstance"], "methods", ["None"], ["", "def", "get_bn_param", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "return", "{", "\n", "'momentum'", ":", "m", ".", "momentum", ",", "\n", "'eps'", ":", "m", ".", "eps", ",", "\n", "}", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.init_model": [[121, 143], ["utils.MyNetwork.modules", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_", "isinstance", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "math.sqrt", "m.weight.data.normal_", "m.weight.data.uniform_", "math.sqrt", "math.sqrt", "m.bias.data.zero_", "m.weight.size"], "methods", ["None"], ["", "def", "init_model", "(", "self", ",", "model_init", ")", ":", "\n", "        ", "\"\"\" Conv2d, BatchNorm2d, BatchNorm1d, Linear, \"\"\"", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "if", "model_init", "==", "'he_fout'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "model_init", "==", "'he_fin'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "in_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "NotImplementedError", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "m", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.get_parameters": [[144, 171], ["utils.MyNetwork.named_parameters", "utils.MyNetwork.named_parameters", "utils.MyNetwork.named_parameters", "ValueError"], "methods", ["None"], ["", "", "", "", "def", "get_parameters", "(", "self", ",", "keys", "=", "None", ",", "mode", "=", "'include'", ",", "exclude_set", "=", "None", ")", ":", "\n", "        ", "if", "exclude_set", "is", "None", ":", "\n", "            ", "exclude_set", "=", "{", "}", "\n", "", "if", "keys", "is", "None", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "if", "name", "not", "in", "exclude_set", ":", "\n", "                    ", "yield", "param", "\n", "", "", "", "elif", "mode", "==", "'include'", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "flag", "=", "False", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "if", "key", "in", "name", ":", "\n", "                        ", "flag", "=", "True", "\n", "break", "\n", "", "", "if", "flag", "and", "name", "not", "in", "exclude_set", ":", "\n", "                    ", "yield", "param", "\n", "", "", "", "elif", "mode", "==", "'exclude'", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "flag", "=", "True", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "if", "key", "in", "name", ":", "\n", "                        ", "flag", "=", "False", "\n", "break", "\n", "", "", "if", "flag", "and", "name", "not", "in", "exclude_set", ":", "\n", "                    ", "yield", "param", "\n", "", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'do not support: %s'", "%", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.weight_parameters": [[172, 174], ["utils.MyNetwork.get_parameters"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.MyNetwork.get_parameters"], ["", "", "def", "weight_parameters", "(", "self", ",", "exclude_set", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "get_parameters", "(", "exclude_set", "=", "exclude_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.ShuffleLayer.__init__": [[229, 232], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.ShuffleLayer.forward": [[233, 242], ["x.view.view.size", "x.view.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view.view", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "self", ".", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "self", ".", "groups", ",", "channels_per_group", ",", "height", ",", "width", ")", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.bottleneck_head.__init__": [[245, 249], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ",", "bottleneck_features", "=", "200", ")", ":", "\n", "        ", "super", "(", "bottleneck_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_generator", "=", "nn", ".", "Conv2d", "(", "num_features", ",", "bottleneck_features", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "FC", "=", "nn", ".", "Conv2d", "(", "bottleneck_features", ",", "num_classes", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.bottleneck_head.forward": [[250, 254], ["utils.bottleneck_head.embedding_generator", "utils.bottleneck_head.FC"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "embedding", "=", "self", ".", "embedding_generator", "(", "x", ")", "\n", "logits", "=", "self", ".", "FC", "(", "self", ".", "embedding", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.Hswish.__init__": [[277, 280], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "Hswish", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.Hswish.forward": [[281, 283], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.Hsigmoid.__init__": [[287, 290], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplace", "=", "True", ")", ":", "\n", "        ", "super", "(", "Hsigmoid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.Hsigmoid.forward": [[293, 295], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.SEModule.__init__": [[300, 314], ["torch.Module.__init__", "utils.make_divisible", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "utils.Hsigmoid"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.make_divisible"], ["def", "__init__", "(", "self", ",", "channel", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "reduction", "=", "SEModule", ".", "REDUCTION", "\n", "num_mid", "=", "make_divisible", "(", "self", ".", "channel", "//", "self", ".", "reduction", ",", "divisor", "=", "8", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'reduce'", ",", "nn", ".", "Conv2d", "(", "self", ".", "channel", ",", "num_mid", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'expand'", ",", "nn", ".", "Conv2d", "(", "num_mid", ",", "self", ".", "channel", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", ")", ",", "\n", "(", "'h_sigmoid'", ",", "Hsigmoid", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.SEModule.forward": [[315, 319], ["utils.SEModule.pool", "utils.SEModule.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "pool", "(", "x", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.accuracy": [[24, 38], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\" Computes the precision@k for the specified values of k \"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.download_url": [[176, 187], ["os.path.expanduser", "os.path.join", "url.split", "os.path.exists", "os.makedirs", "sys.stderr.write", "urlretrieve", "os.path.exists"], "function", ["None"], ["", "", "def", "download_url", "(", "url", ",", "model_dir", "=", "'~/.torch/'", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "target_dir", "=", "url", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "model_dir", "=", "os", ".", "path", ".", "expanduser", "(", "model_dir", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "model_dir", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "target_dir", ")", "\n", "cached_file", "=", "model_dir", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cached_file", ")", "or", "overwrite", ":", "\n", "        ", "sys", ".", "stderr", ".", "write", "(", "'Downloading: \"{}\" to {}\\n'", ".", "format", "(", "url", ",", "cached_file", ")", ")", "\n", "urlretrieve", "(", "url", ",", "cached_file", ")", "\n", "", "return", "cached_file", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.download_file": [[189, 194], ["sys.stderr.write", "urlretrieve", "os.path.exists"], "function", ["None"], ["", "def", "download_file", "(", "url", ",", "cached_file", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "cached_file", ")", "or", "overwrite", ":", "\n", "        ", "sys", ".", "stderr", ".", "write", "(", "'Downloading: \"{}\" to {}\\n'", ".", "format", "(", "url", ",", "cached_file", ")", ")", "\n", "urlretrieve", "(", "url", ",", "cached_file", ")", "\n", "", "return", "cached_file", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding": [[196, 205], ["isinstance", "isinstance", "utils.get_same_padding", "utils.get_same_padding", "len"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.get_same_padding"], ["", "def", "get_same_padding", "(", "kernel_size", ")", ":", "\n", "    ", "if", "isinstance", "(", "kernel_size", ",", "tuple", ")", ":", "\n", "        ", "assert", "len", "(", "kernel_size", ")", "==", "2", ",", "'invalid kernel size: %s'", "%", "kernel_size", "\n", "p1", "=", "get_same_padding", "(", "kernel_size", "[", "0", "]", ")", "\n", "p2", "=", "get_same_padding", "(", "kernel_size", "[", "1", "]", ")", "\n", "return", "p1", ",", "p2", "\n", "", "assert", "isinstance", "(", "kernel_size", ",", "int", ")", ",", "'kernel size should be either `int` or `tuple`'", "\n", "assert", "kernel_size", "%", "2", ">", "0", ",", "'kernel size should be odd number'", "\n", "return", "kernel_size", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.make_divisible": [[207, 225], ["max", "int"], "function", ["None"], ["", "def", "make_divisible", "(", "v", ",", "divisor", ",", "min_val", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function is taken from the original tf repo.\n    It ensures that all layers have a channel number that is divisible by 8\n    It can be seen here:\n    https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n    :param v:\n    :param divisor:\n    :param min_val:\n    :return:\n    \"\"\"", "\n", "if", "min_val", "is", "None", ":", "\n", "        ", "min_val", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_val", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.ofa.utils.build_activation": [[256, 273], ["torch.ReLU", "torch.ReLU6", "torch.Tanh", "torch.Sigmoid", "utils.Hswish", "utils.Hsigmoid", "ValueError"], "function", ["None"], ["", "", "def", "build_activation", "(", "act_func", ",", "inplace", "=", "True", ")", ":", "\n", "    ", "if", "act_func", "==", "'relu'", ":", "\n", "        ", "return", "nn", ".", "ReLU", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "==", "'relu6'", ":", "\n", "        ", "return", "nn", ".", "ReLU6", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "==", "'tanh'", ":", "\n", "        ", "return", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "act_func", "==", "'sigmoid'", ":", "\n", "        ", "return", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "act_func", "==", "'h_swish'", ":", "\n", "        ", "return", "Hswish", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "==", "'h_sigmoid'", ":", "\n", "        ", "return", "Hsigmoid", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'do not support: %s'", "%", "act_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.get_dist_info": [[6, 15], ["torch.is_available", "torch.is_initialized", "torch.get_rank", "torch.get_world_size"], "function", ["None"], ["def", "get_dist_info", "(", ")", ":", "\n", "    ", "initialized", "=", "dist", ".", "is_available", "(", ")", "and", "dist", ".", "is_initialized", "(", ")", "\n", "if", "initialized", ":", "\n", "        ", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "else", ":", "\n", "        ", "rank", "=", "0", "\n", "world_size", "=", "1", "\n", "", "return", "rank", ",", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.is_master": [[17, 20], ["distributed.get_dist_info"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.get_dist_info"], ["", "def", "is_master", "(", ")", ":", "\n", "    ", "rank", ",", "_", "=", "get_dist_info", "(", ")", "\n", "return", "rank", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master": [[22, 25], ["distributed.is_master", "print"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.is_master"], ["", "def", "print_at_master", "(", "str", ")", ":", "\n", "    ", "if", "is_master", "(", ")", ":", "\n", "        ", "print", "(", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.setup_distrib": [[27, 31], ["distributed.num_distrib", "torch.cuda.set_device", "torch.cuda.set_device", "torch.distributed.init_process_group", "torch.distributed.init_process_group"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "", "def", "setup_distrib", "(", "args", ")", ":", "\n", "    ", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "        ", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "local_rank", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "'nccl'", ",", "init_method", "=", "'env://'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.to_ddp": [[33, 37], ["distributed.num_distrib", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["", "", "def", "to_ddp", "(", "model", ",", "args", ")", ":", "\n", "    ", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "args", ".", "local_rank", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.reduce_tensor": [[39, 44], ["tensor.clone", "torch.distributed.all_reduce", "torch.distributed.all_reduce"], "function", ["None"], ["", "def", "reduce_tensor", "(", "tensor", ",", "n", ")", ":", "\n", "    ", "rt", "=", "tensor", ".", "clone", "(", ")", "\n", "torch", ".", "distributed", ".", "all_reduce", "(", "rt", ",", "op", "=", "torch", ".", "distributed", ".", "ReduceOp", ".", "SUM", ")", "\n", "rt", "/=", "n", "\n", "return", "rt", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib": [[46, 48], ["int", "os.environ.get"], "function", ["None"], ["", "def", "num_distrib", "(", ")", ":", "\n", "    ", "return", "int", "(", "os", ".", "environ", ".", "get", "(", "'WORLD_SIZE'", ",", "0", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.augmentations.CutoutPIL.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cutout_factor", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "cutout_factor", "=", "cutout_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.augmentations.CutoutPIL.__call__": [[11, 27], ["PIL.ImageDraw.Draw", "int", "int", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "PIL.ImageDraw.Draw.rectangle", "random.randint", "random.randint", "random.randint"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "img_draw", "=", "ImageDraw", ".", "Draw", "(", "x", ")", "\n", "h", ",", "w", "=", "x", ".", "size", "[", "0", "]", ",", "x", ".", "size", "[", "1", "]", "# HWC", "\n", "h_cutout", "=", "int", "(", "self", ".", "cutout_factor", "*", "h", "+", "0.5", ")", "\n", "w_cutout", "=", "int", "(", "self", ".", "cutout_factor", "*", "w", "+", "0.5", ")", "\n", "y_c", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x_c", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y_c", "-", "h_cutout", "//", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y_c", "+", "h_cutout", "//", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x_c", "-", "w_cutout", "//", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x_c", "+", "w_cutout", "//", "2", ",", "0", ",", "w", ")", "\n", "fill_color", "=", "(", "random", ".", "randint", "(", "0", ",", "255", ")", ",", "random", ".", "randint", "(", "0", ",", "255", ")", ",", "random", ".", "randint", "(", "0", ",", "255", ")", ")", "\n", "img_draw", ".", "rectangle", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ",", "fill", "=", "fill_color", ")", "\n", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.__init__": [[19, 21], ["general_helper_functions.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.reset": [[22, 27], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.AverageMeter.update": [[28, 33], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.add_weight_decay": [[1, 14], ["model.named_parameters", "name.endswith", "no_decay.append", "decay.append", "len"], "function", ["None"], ["def", "add_weight_decay", "(", "model", ",", "weight_decay", "=", "1e-4", ",", "skip_list", "=", "(", ")", ")", ":", "\n", "    ", "decay", "=", "[", "]", "\n", "no_decay", "=", "[", "]", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "not", "param", ".", "requires_grad", ":", "\n", "            ", "continue", "# frozen weights", "\n", "", "if", "len", "(", "param", ".", "shape", ")", "==", "1", "or", "name", ".", "endswith", "(", "\".bias\"", ")", "or", "name", "in", "skip_list", ":", "\n", "            ", "no_decay", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "decay", ".", "append", "(", "param", ")", "\n", "", "", "return", "[", "\n", "{", "'params'", ":", "no_decay", ",", "'weight_decay'", ":", "0.", "}", ",", "\n", "{", "'params'", ":", "decay", ",", "'weight_decay'", ":", "weight_decay", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.accuracy": [[35, 43], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.reshape().expand_as", "target.reshape", "correct[].reshape().float().sum", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the accuracy over the k top predictions for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "reshape", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "return", "[", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "*", "100.", "/", "batch_size", "for", "k", "in", "topk", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.general_helper_functions.silence_PIL_warnings": [[45, 49], ["wa.filterwarnings"], "function", ["None"], ["", "def", "silence_PIL_warnings", "(", ")", ":", "\n", "    ", "import", "PIL", "\n", "wa", "=", "PIL", ".", "Image", ".", "warnings", "\n", "wa", ".", "filterwarnings", "(", "\"ignore\"", ",", "\"(Possibly )?corrupt EXIF data\"", ",", "UserWarning", ")", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__init__": [[53, 56], ["torch.cuda.Stream"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "loader", "=", "loader", "\n", "self", ".", "stream", "=", "torch", ".", "cuda", ".", "Stream", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__iter__": [[57, 85], ["torch.cuda.current_stream().wait_stream", "input.record_stream", "target.record_stream", "torch.cuda.stream", "batch[].cuda", "batch[].cuda", "torch.cuda.current_stream", "torch.cuda.current_stream", "torch.cuda.current_stream"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "first", "=", "True", "\n", "for", "batch", "in", "self", ".", "loader", ":", "\n", "            ", "with", "torch", ".", "cuda", ".", "stream", "(", "self", ".", "stream", ")", ":", "# stream - parallel", "\n", "                ", "self", ".", "next_input", "=", "batch", "[", "0", "]", ".", "cuda", "(", "non_blocking", "=", "True", ")", "# note - (0-1) normalization in .ToTensor()", "\n", "self", ".", "next_target", "=", "batch", "[", "1", "]", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n", "", "if", "not", "first", ":", "\n", "                ", "yield", "input", ",", "target", "# prev", "\n", "", "else", ":", "\n", "                ", "first", "=", "False", "\n", "\n", "", "torch", ".", "cuda", ".", "current_stream", "(", ")", ".", "wait_stream", "(", "self", ".", "stream", ")", "\n", "input", "=", "self", ".", "next_input", "\n", "target", "=", "self", ".", "next_target", "\n", "\n", "# Ensures that the tensor memory is not reused for another tensor until all current work queued on stream are complete.", "\n", "input", ".", "record_stream", "(", "torch", ".", "cuda", ".", "current_stream", "(", ")", ")", "\n", "target", ".", "record_stream", "(", "torch", ".", "cuda", ".", "current_stream", "(", ")", ")", "\n", "\n", "# final batch", "\n", "", "yield", "input", ",", "target", "\n", "\n", "# cleaning at the end of the epoch", "\n", "del", "self", ".", "next_input", "\n", "del", "self", ".", "next_target", "\n", "self", ".", "next_input", "=", "None", "\n", "self", ".", "next_target", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.__len__": [[86, 88], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.sampler": [[89, 92], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "sampler", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "loader", ".", "sampler", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.dataset": [[93, 96], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dataset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "loader", ".", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.set_epoch": [[97, 99], ["data_loader.PrefetchLoader.loader.sampler.set_epoch"], "methods", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.PrefetchLoader.set_epoch"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.data_loading.data_loader.create_data_loaders": [[12, 50], ["os.path.join", "torchvision.transforms.Compose", "os.path.join", "torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "torchvision.datasets.ImageFolder", "src_files.helper_functions.distributed.print_at_master", "src_files.helper_functions.distributed.print_at_master", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data_loader.PrefetchLoader", "data_loader.PrefetchLoader", "src_files.helper_functions.distributed.num_distrib", "torch.utils.data.distributed.DistributedSampler", "timm.data.loader.OrderedDistributedSampler", "torchvision.transforms.Resize", "src_files.helper_functions.augmentations.CutoutPIL", "randaugment.RandAugment", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "len", "len"], "function", ["home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.print_at_master", "home.repos.pwc.inspect_result.Alibaba-MIIL_ImageNet21K.helper_functions.distributed.num_distrib"], ["def", "create_data_loaders", "(", "args", ")", ":", "\n", "    ", "data_path_train", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'imagenet21k_train'", ")", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ")", ",", "\n", "CutoutPIL", "(", "cutout_factor", "=", "0.5", ")", ",", "\n", "RandAugment", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "data_path_val", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'imagenet21k_val'", ")", "\n", "val_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", "\n", "\n", "train_dataset", "=", "ImageFolder", "(", "data_path_train", ",", "transform", "=", "train_transform", ")", "\n", "val_dataset", "=", "ImageFolder", "(", "data_path_val", ",", "transform", "=", "val_transform", ")", "\n", "print_at_master", "(", "\"length train dataset: {}\"", ".", "format", "(", "len", "(", "train_dataset", ")", ")", ")", "\n", "print_at_master", "(", "\"length val dataset: {}\"", ".", "format", "(", "len", "(", "val_dataset", ")", ")", ")", "\n", "\n", "sampler_train", "=", "None", "\n", "sampler_val", "=", "None", "\n", "if", "num_distrib", "(", ")", ">", "1", ":", "\n", "        ", "sampler_train", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_dataset", ")", "\n", "sampler_val", "=", "OrderedDistributedSampler", "(", "val_dataset", ")", "\n", "\n", "# Pytorch Data loader", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "sampler_train", "is", "None", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "True", ",", "sampler", "=", "sampler_train", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "val_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "pin_memory", "=", "False", ",", "sampler", "=", "sampler_val", ")", "\n", "\n", "train_loader", "=", "PrefetchLoader", "(", "train_loader", ")", "\n", "val_loader", "=", "PrefetchLoader", "(", "val_loader", ")", "\n", "return", "train_loader", ",", "val_loader", "\n", "\n"]]}