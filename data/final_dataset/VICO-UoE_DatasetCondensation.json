{"home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Swish.__init__": [[11, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Swish.forward": [[14, 16], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "*", "torch", ".", "sigmoid", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.MLP.__init__": [[20, 25], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Linear", "(", "28", "*", "28", "*", "1", "if", "channel", "==", "1", "else", "32", "*", "32", "*", "3", ",", "128", ")", "\n", "self", ".", "fc_2", "=", "nn", ".", "Linear", "(", "128", ",", "128", ")", "\n", "self", ".", "fc_3", "=", "nn", ".", "Linear", "(", "128", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.MLP.forward": [[26, 32], ["x.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "networks.MLP.fc_3", "x.size", "networks.MLP.fc_1", "networks.MLP.fc_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc_1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc_2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc_3", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet.__init__": [[37, 43], ["torch.Module.__init__", "networks.ConvNet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "num_classes", ",", "net_width", ",", "net_depth", ",", "net_act", ",", "net_norm", ",", "net_pooling", ",", "im_size", "=", "(", "32", ",", "32", ")", ")", ":", "\n", "        ", "super", "(", "ConvNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", ",", "shape_feat", "=", "self", ".", "_make_layers", "(", "channel", ",", "net_width", ",", "net_depth", ",", "net_norm", ",", "net_act", ",", "net_pooling", ",", "im_size", ")", "\n", "num_feat", "=", "shape_feat", "[", "0", "]", "*", "shape_feat", "[", "1", "]", "*", "shape_feat", "[", "2", "]", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "num_feat", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet.forward": [[44, 49], ["networks.ConvNet.features", "networks.ConvNet.view", "networks.ConvNet.classifier", "networks.ConvNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet.embed": [[50, 54], ["networks.ConvNet.features", "out.view.view.view", "out.view.view.size"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_activation": [[55, 66], ["torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "networks.Swish", "exit"], "methods", ["None"], ["", "def", "_get_activation", "(", "self", ",", "net_act", ")", ":", "\n", "        ", "if", "net_act", "==", "'sigmoid'", ":", "\n", "            ", "return", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "net_act", "==", "'relu'", ":", "\n", "            ", "return", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "net_act", "==", "'leakyrelu'", ":", "\n", "            ", "return", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", "\n", "", "elif", "net_act", "==", "'swish'", ":", "\n", "            ", "return", "Swish", "(", ")", "\n", "", "else", ":", "\n", "            ", "exit", "(", "'unknown activation function: %s'", "%", "net_act", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_pooling": [[67, 76], ["torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "exit"], "methods", ["None"], ["", "", "def", "_get_pooling", "(", "self", ",", "net_pooling", ")", ":", "\n", "        ", "if", "net_pooling", "==", "'maxpooling'", ":", "\n", "            ", "return", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "elif", "net_pooling", "==", "'avgpooling'", ":", "\n", "            ", "return", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "elif", "net_pooling", "==", "'none'", ":", "\n", "            ", "return", "None", "\n", "", "else", ":", "\n", "            ", "exit", "(", "'unknown net_pooling: %s'", "%", "net_pooling", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_normlayer": [[77, 91], ["torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "exit"], "methods", ["None"], ["", "", "def", "_get_normlayer", "(", "self", ",", "net_norm", ",", "shape_feat", ")", ":", "\n", "# shape_feat = (c*h*w)", "\n", "        ", "if", "net_norm", "==", "'batchnorm'", ":", "\n", "            ", "return", "nn", ".", "BatchNorm2d", "(", "shape_feat", "[", "0", "]", ",", "affine", "=", "True", ")", "\n", "", "elif", "net_norm", "==", "'layernorm'", ":", "\n", "            ", "return", "nn", ".", "LayerNorm", "(", "shape_feat", ",", "elementwise_affine", "=", "True", ")", "\n", "", "elif", "net_norm", "==", "'instancenorm'", ":", "\n", "            ", "return", "nn", ".", "GroupNorm", "(", "shape_feat", "[", "0", "]", ",", "shape_feat", "[", "0", "]", ",", "affine", "=", "True", ")", "\n", "", "elif", "net_norm", "==", "'groupnorm'", ":", "\n", "            ", "return", "nn", ".", "GroupNorm", "(", "4", ",", "shape_feat", "[", "0", "]", ",", "affine", "=", "True", ")", "\n", "", "elif", "net_norm", "==", "'none'", ":", "\n", "            ", "return", "None", "\n", "", "else", ":", "\n", "            ", "exit", "(", "'unknown net_norm: %s'", "%", "net_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._make_layers": [[92, 111], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "networks.ConvNet._get_activation", "networks.ConvNet._get_normlayer", "networks.ConvNet._get_pooling"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_activation", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_normlayer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ConvNet._get_pooling"], ["", "", "def", "_make_layers", "(", "self", ",", "channel", ",", "net_width", ",", "net_depth", ",", "net_norm", ",", "net_act", ",", "net_pooling", ",", "im_size", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "channel", "\n", "if", "im_size", "[", "0", "]", "==", "28", ":", "\n", "            ", "im_size", "=", "(", "32", ",", "32", ")", "\n", "", "shape_feat", "=", "[", "in_channels", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", "]", "\n", "for", "d", "in", "range", "(", "net_depth", ")", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "net_width", ",", "kernel_size", "=", "3", ",", "padding", "=", "3", "if", "channel", "==", "1", "and", "d", "==", "0", "else", "1", ")", "]", "\n", "shape_feat", "[", "0", "]", "=", "net_width", "\n", "if", "net_norm", "!=", "'none'", ":", "\n", "                ", "layers", "+=", "[", "self", ".", "_get_normlayer", "(", "net_norm", ",", "shape_feat", ")", "]", "\n", "", "layers", "+=", "[", "self", ".", "_get_activation", "(", "net_act", ")", "]", "\n", "in_channels", "=", "net_width", "\n", "if", "net_pooling", "!=", "'none'", ":", "\n", "                ", "layers", "+=", "[", "self", ".", "_get_pooling", "(", "net_pooling", ")", "]", "\n", "shape_feat", "[", "1", "]", "//=", "2", "\n", "shape_feat", "[", "2", "]", "//=", "2", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", ",", "shape_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.LeNet.__init__": [[116, 129], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "6", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", "if", "channel", "==", "1", "else", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "kernel_size", "=", "5", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Linear", "(", "16", "*", "5", "*", "5", ",", "120", ")", "\n", "self", ".", "fc_2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc_3", "=", "nn", ".", "Linear", "(", "84", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.LeNet.forward": [[130, 137], ["networks.LeNet.features", "networks.LeNet.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "networks.LeNet.fc_3", "networks.LeNet.size", "networks.LeNet.fc_1", "networks.LeNet.fc_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc_1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc_2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc_3", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNet.__init__": [[142, 160], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "4", "if", "channel", "==", "1", "else", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "192", "*", "4", "*", "4", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNet.forward": [[161, 166], ["networks.AlexNet.features", "networks.AlexNet.view", "networks.AlexNet.fc", "networks.AlexNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNet.embed": [[167, 171], ["networks.AlexNet.features", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNetBN.__init__": [[175, 198], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "AlexNetBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "4", "if", "channel", "==", "1", "else", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "192", "*", "4", "*", "4", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNetBN.forward": [[199, 204], ["networks.AlexNetBN.features", "networks.AlexNetBN.view", "networks.AlexNetBN.fc", "networks.AlexNetBN.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.AlexNetBN.embed": [[205, 209], ["networks.AlexNetBN.features", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG.__init__": [[219, 224], ["torch.Module.__init__", "networks.VGG._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "channel", ",", "num_classes", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg_vgg", "[", "vgg_name", "]", ",", "norm", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", "if", "vgg_name", "!=", "'VGGS'", "else", "128", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG.forward": [[225, 230], ["networks.VGG.features", "networks.VGG.view", "networks.VGG.classifier", "networks.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG.embed": [[231, 235], ["networks.VGG.features", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG._make_layers": [[236, 249], ["enumerate", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ",", "norm", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "self", ".", "channel", "\n", "for", "ic", ",", "x", "in", "enumerate", "(", "cfg", ")", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "3", "if", "self", ".", "channel", "==", "1", "and", "ic", "==", "0", "else", "1", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "x", ",", "x", ",", "affine", "=", "True", ")", "if", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.BasicBlock_AP.__init__": [[269, 284], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "BasicBlock_AP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# modification", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "# modification", "\n", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.BasicBlock_AP.forward": [[286, 294], ["torch.relu", "torch.relu", "torch.relu", "networks.BasicBlock_AP.bn2", "networks.BasicBlock_AP.shortcut", "torch.relu", "torch.relu", "torch.relu", "networks.BasicBlock_AP.bn1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "networks.BasicBlock_AP.conv2", "networks.BasicBlock_AP.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "stride", "!=", "1", ":", "# modification", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Bottleneck_AP.__init__": [[299, 316], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "Bottleneck_AP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# modification", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "# modification", "\n", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Bottleneck_AP.forward": [[318, 327], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "networks.Bottleneck_AP.bn3", "networks.Bottleneck_AP.shortcut", "torch.relu", "torch.relu", "torch.relu", "networks.Bottleneck_AP.bn1", "networks.Bottleneck_AP.bn2", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "networks.Bottleneck_AP.conv3", "networks.Bottleneck_AP.conv1", "networks.Bottleneck_AP.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "if", "self", ".", "stride", "!=", "1", ":", "# modification", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet_AP.__init__": [[330, 342], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "networks.ResNet_AP._make_layer", "networks.ResNet_AP._make_layer", "networks.ResNet_AP._make_layer", "networks.ResNet_AP._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "channel", "=", "3", ",", "num_classes", "=", "10", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "ResNet_AP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "norm", "=", "norm", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "channel", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "64", ",", "64", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", "*", "3", "*", "3", "if", "channel", "==", "1", "else", "512", "*", "block", ".", "expansion", "*", "4", "*", "4", ",", "num_classes", ")", "# modification", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet_AP._make_layer": [[343, 350], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ",", "self", ".", "norm", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet_AP.forward": [[351, 361], ["torch.relu", "torch.relu", "torch.relu", "networks.ResNet_AP.layer1", "networks.ResNet_AP.layer2", "networks.ResNet_AP.layer3", "networks.ResNet_AP.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "networks.ResNet_AP.view", "networks.ResNet_AP.classifier", "networks.ResNet_AP.bn1", "networks.ResNet_AP.size", "networks.ResNet_AP.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "# modification", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet_AP.embed": [[362, 371], ["torch.relu", "torch.relu", "torch.relu", "networks.ResNet_AP.layer1", "networks.ResNet_AP.layer2", "networks.ResNet_AP.layer3", "networks.ResNet_AP.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "networks.ResNet_AP.bn1", "out.view.view.size", "networks.ResNet_AP.conv1"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "# modification", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.BasicBlock.__init__": [[384, 397], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.BasicBlock.forward": [[399, 405], ["torch.relu", "torch.relu", "torch.relu", "networks.BasicBlock.bn2", "networks.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "networks.BasicBlock.bn1", "networks.BasicBlock.conv2", "networks.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Bottleneck.__init__": [[410, 425], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "GroupNorm", "(", "planes", ",", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "GroupNorm", "(", "self", ".", "expansion", "*", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.Bottleneck.forward": [[427, 434], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "networks.Bottleneck.bn3", "networks.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "networks.Bottleneck.bn1", "networks.Bottleneck.bn2", "networks.Bottleneck.conv3", "networks.Bottleneck.conv1", "networks.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet.__init__": [[437, 449], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "networks.ResNet._make_layer", "networks.ResNet._make_layer", "networks.ResNet._make_layer", "networks.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "channel", "=", "3", ",", "num_classes", "=", "10", ",", "norm", "=", "'instancenorm'", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "norm", "=", "norm", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "channel", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "GroupNorm", "(", "64", ",", "64", ",", "affine", "=", "True", ")", "if", "self", ".", "norm", "==", "'instancenorm'", "else", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet._make_layer": [[450, 457], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ",", "self", ".", "norm", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet.forward": [[458, 468], ["torch.relu", "torch.relu", "torch.relu", "networks.ResNet.layer1", "networks.ResNet.layer2", "networks.ResNet.layer3", "networks.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "networks.ResNet.view", "networks.ResNet.classifier", "networks.ResNet.bn1", "networks.ResNet.size", "networks.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet.embed": [[469, 478], ["torch.relu", "torch.relu", "torch.relu", "networks.ResNet.layer1", "networks.ResNet.layer2", "networks.ResNet.layer3", "networks.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "networks.ResNet.bn1", "out.view.view.size", "networks.ResNet.conv1"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG11": [[251, 253], ["networks.VGG"], "function", ["None"], ["", "", "def", "VGG11", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG11'", ",", "channel", ",", "num_classes", ")", "\n", "", "def", "VGG11BN", "(", "channel", ",", "num_classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG11BN": [[253, 255], ["networks.VGG"], "function", ["None"], ["", "def", "VGG11BN", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG11'", ",", "channel", ",", "num_classes", ",", "norm", "=", "'batchnorm'", ")", "\n", "", "def", "VGG13", "(", "channel", ",", "num_classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG13": [[255, 257], ["networks.VGG"], "function", ["None"], ["", "def", "VGG13", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG13'", ",", "channel", ",", "num_classes", ")", "\n", "", "def", "VGG16", "(", "channel", ",", "num_classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG16": [[257, 259], ["networks.VGG"], "function", ["None"], ["", "def", "VGG16", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG16'", ",", "channel", ",", "num_classes", ")", "\n", "", "def", "VGG19", "(", "channel", ",", "num_classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG19": [[259, 261], ["networks.VGG"], "function", ["None"], ["", "def", "VGG19", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG19'", ",", "channel", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18BN_AP": [[372, 374], ["networks.ResNet_AP"], "function", ["None"], ["", "", "def", "ResNet18BN_AP", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet_AP", "(", "BasicBlock_AP", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "norm", "=", "'batchnorm'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18_AP": [[375, 377], ["networks.ResNet_AP"], "function", ["None"], ["", "def", "ResNet18_AP", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet_AP", "(", "BasicBlock_AP", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18BN": [[480, 482], ["networks.ResNet"], "function", ["None"], ["", "", "def", "ResNet18BN", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "norm", "=", "'batchnorm'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18": [[483, 485], ["networks.ResNet"], "function", ["None"], ["", "def", "ResNet18", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet34": [[486, 488], ["networks.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet50": [[489, 491], ["networks.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet101": [[492, 494], ["networks.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet152": [[495, 497], ["networks.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", "channel", ",", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.main.main": [[12, 232], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "utils.get_loops", "utils.ParamDiffAug", "print", "utils.get_dataset", "utils.get_eval_pool", "dict", "range", "print", "torch.cuda.is_available", "torch.cuda.is_available", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "numpy.arange().tolist", "print", "print", "print", "enumerate", "torch.cat().to", "torch.cat().to", "torch.tensor", "torch.tensor", "range", "range", "torch.randn", "torch.randn", "torch.tensor().view", "torch.tensor().view", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.zero_grad", "torch.CrossEntropyLoss().to", "print", "range", "print", "torch.unsqueeze", "torch.unsqueeze", "indices_class[].append", "print", "print", "print", "range", "print", "utils.get_network().to", "get_network().to.train", "list", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.zero_grad", "range", "numpy.arange", "range", "range", "range", "torch.cat", "torch.cat", "numpy.random.permutation", "torch.tensor", "torch.tensor", "torch.CrossEntropyLoss", "utils.get_time", "os.path.join", "copy.deepcopy", "range", "torchvision.utils.save_image", "get_network().to.parameters", "get_network().to.parameters", "get_network().to.modules", "torch.tensor().to", "torch.tensor().to", "range", "torch.optim.SGD.zero_grad", "torch.tensor().to.backward", "torch.optim.SGD.step", "torch.tensor().to.item", "utils.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "print", "data_save.append", "torch.save", "torch.save", "len", "len", "get_images().detach", "print", "range", "print", "torch.randn.detach().cpu", "utils.get_network", "torch.cat", "torch.cat", "get_network().to.train", "get_network().to.", "get_network().to.modules", "main.main.get_images"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_loops", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_dataset", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_eval_pool", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_time", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_network"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Parameter Processing'", ")", "\n", "parser", ".", "add_argument", "(", "'--method'", ",", "type", "=", "str", ",", "default", "=", "'DC'", ",", "help", "=", "'DC/DSA'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'CIFAR10'", ",", "help", "=", "'dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'ConvNet'", ",", "help", "=", "'model'", ")", "\n", "parser", ".", "add_argument", "(", "'--ipc'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'image(s) per class'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_mode'", ",", "type", "=", "str", ",", "default", "=", "'S'", ",", "help", "=", "'eval_mode'", ")", "# S: the same to training model, M: multi architectures,  W: net width, D: net depth, A: activation function, P: pooling layer, N: normalization layer,", "\n", "parser", ".", "add_argument", "(", "'--num_exp'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'the number of experiments'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_eval'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'the number of evaluating randomly initialized models'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_eval_train'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "help", "=", "'epochs to train a model with synthetic data'", ")", "\n", "parser", ".", "add_argument", "(", "'--Iteration'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'training iterations'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_img'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'learning rate for updating synthetic images'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_net'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'learning rate for updating network parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_real'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'batch size for real data'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_train'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'batch size for training networks'", ")", "\n", "parser", ".", "add_argument", "(", "'--init'", ",", "type", "=", "str", ",", "default", "=", "'noise'", ",", "help", "=", "'noise/real: initialize synthetic images from random noise or randomly sampled real images.'", ")", "\n", "parser", ".", "add_argument", "(", "'--dsa_strategy'", ",", "type", "=", "str", ",", "default", "=", "'None'", ",", "help", "=", "'differentiable Siamese augmentation strategy'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'data'", ",", "help", "=", "'dataset path'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "'result'", ",", "help", "=", "'path to save results'", ")", "\n", "parser", ".", "add_argument", "(", "'--dis_metric'", ",", "type", "=", "str", ",", "default", "=", "'ours'", ",", "help", "=", "'distance metric'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "outer_loop", ",", "args", ".", "inner_loop", "=", "get_loops", "(", "args", ".", "ipc", ")", "\n", "args", ".", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "args", ".", "dsa_param", "=", "ParamDiffAug", "(", ")", "\n", "args", ".", "dsa", "=", "True", "if", "args", ".", "method", "==", "'DSA'", "else", "False", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "data_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "data_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "save_path", ")", "\n", "\n", "", "eval_it_pool", "=", "np", ".", "arange", "(", "0", ",", "args", ".", "Iteration", "+", "1", ",", "500", ")", ".", "tolist", "(", ")", "if", "args", ".", "eval_mode", "==", "'S'", "or", "args", ".", "eval_mode", "==", "'SS'", "else", "[", "args", ".", "Iteration", "]", "# The list of iterations when we evaluate models and record results.", "\n", "print", "(", "'eval_it_pool: '", ",", "eval_it_pool", ")", "\n", "channel", ",", "im_size", ",", "num_classes", ",", "class_names", ",", "mean", ",", "std", ",", "dst_train", ",", "dst_test", ",", "testloader", "=", "get_dataset", "(", "args", ".", "dataset", ",", "args", ".", "data_path", ")", "\n", "model_eval_pool", "=", "get_eval_pool", "(", "args", ".", "eval_mode", ",", "args", ".", "model", ",", "args", ".", "model", ")", "\n", "\n", "\n", "accs_all_exps", "=", "dict", "(", ")", "# record performances of all experiments", "\n", "for", "key", "in", "model_eval_pool", ":", "\n", "        ", "accs_all_exps", "[", "key", "]", "=", "[", "]", "\n", "\n", "", "data_save", "=", "[", "]", "\n", "\n", "\n", "for", "exp", "in", "range", "(", "args", ".", "num_exp", ")", ":", "\n", "        ", "print", "(", "'\\n================== Exp %d ==================\\n '", "%", "exp", ")", "\n", "print", "(", "'Hyper-parameters: \\n'", ",", "args", ".", "__dict__", ")", "\n", "print", "(", "'Evaluation model pool: '", ",", "model_eval_pool", ")", "\n", "\n", "''' organize the real dataset '''", "\n", "images_all", "=", "[", "]", "\n", "labels_all", "=", "[", "]", "\n", "indices_class", "=", "[", "[", "]", "for", "c", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "images_all", "=", "[", "torch", ".", "unsqueeze", "(", "dst_train", "[", "i", "]", "[", "0", "]", ",", "dim", "=", "0", ")", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "labels_all", "=", "[", "dst_train", "[", "i", "]", "[", "1", "]", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "for", "i", ",", "lab", "in", "enumerate", "(", "labels_all", ")", ":", "\n", "            ", "indices_class", "[", "lab", "]", ".", "append", "(", "i", ")", "\n", "", "images_all", "=", "torch", ".", "cat", "(", "images_all", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_all", "=", "torch", ".", "tensor", "(", "labels_all", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "args", ".", "device", ")", "\n", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "            ", "print", "(", "'class c = %d: %d real images'", "%", "(", "c", ",", "len", "(", "indices_class", "[", "c", "]", ")", ")", ")", "\n", "\n", "", "def", "get_images", "(", "c", ",", "n", ")", ":", "# get random n images from class c", "\n", "            ", "idx_shuffle", "=", "np", ".", "random", ".", "permutation", "(", "indices_class", "[", "c", "]", ")", "[", ":", "n", "]", "\n", "return", "images_all", "[", "idx_shuffle", "]", "\n", "\n", "", "for", "ch", "in", "range", "(", "channel", ")", ":", "\n", "            ", "print", "(", "'real images channel %d, mean = %.4f, std = %.4f'", "%", "(", "ch", ",", "torch", ".", "mean", "(", "images_all", "[", ":", ",", "ch", "]", ")", ",", "torch", ".", "std", "(", "images_all", "[", ":", ",", "ch", "]", ")", ")", ")", "\n", "\n", "\n", "", "''' initialize the synthetic data '''", "\n", "image_syn", "=", "torch", ".", "randn", "(", "size", "=", "(", "num_classes", "*", "args", ".", "ipc", ",", "channel", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ")", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "True", ",", "device", "=", "args", ".", "device", ")", "\n", "label_syn", "=", "torch", ".", "tensor", "(", "[", "np", ".", "ones", "(", "args", ".", "ipc", ")", "*", "i", "for", "i", "in", "range", "(", "num_classes", ")", "]", ",", "dtype", "=", "torch", ".", "long", ",", "requires_grad", "=", "False", ",", "device", "=", "args", ".", "device", ")", ".", "view", "(", "-", "1", ")", "# [0,0,0, 1,1,1, ..., 9,9,9]", "\n", "\n", "if", "args", ".", "init", "==", "'real'", ":", "\n", "            ", "print", "(", "'initialize synthetic data from random real images'", ")", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "                ", "image_syn", ".", "data", "[", "c", "*", "args", ".", "ipc", ":", "(", "c", "+", "1", ")", "*", "args", ".", "ipc", "]", "=", "get_images", "(", "c", ",", "args", ".", "ipc", ")", ".", "detach", "(", ")", ".", "data", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'initialize synthetic data from random noise'", ")", "\n", "\n", "\n", "", "''' training '''", "\n", "optimizer_img", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "image_syn", ",", "]", ",", "lr", "=", "args", ".", "lr_img", ",", "momentum", "=", "0.5", ")", "# optimizer_img for synthetic data", "\n", "optimizer_img", ".", "zero_grad", "(", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "print", "(", "'%s training begins'", "%", "get_time", "(", ")", ")", "\n", "\n", "for", "it", "in", "range", "(", "args", ".", "Iteration", "+", "1", ")", ":", "\n", "\n", "            ", "''' Evaluate synthetic data '''", "\n", "if", "it", "in", "eval_it_pool", ":", "\n", "                ", "for", "model_eval", "in", "model_eval_pool", ":", "\n", "                    ", "print", "(", "'-------------------------\\nEvaluation\\nmodel_train = %s, model_eval = %s, iteration = %d'", "%", "(", "args", ".", "model", ",", "model_eval", ",", "it", ")", ")", "\n", "if", "args", ".", "dsa", ":", "\n", "                        ", "args", ".", "epoch_eval_train", "=", "1000", "\n", "args", ".", "dc_aug_param", "=", "None", "\n", "print", "(", "'DSA augmentation strategy: \\n'", ",", "args", ".", "dsa_strategy", ")", "\n", "print", "(", "'DSA augmentation parameters: \\n'", ",", "args", ".", "dsa_param", ".", "__dict__", ")", "\n", "", "else", ":", "\n", "                        ", "args", ".", "dc_aug_param", "=", "get_daparam", "(", "args", ".", "dataset", ",", "args", ".", "model", ",", "model_eval", ",", "args", ".", "ipc", ")", "# This augmentation parameter set is only for DC method. It will be muted when args.dsa is True.", "\n", "print", "(", "'DC augmentation parameters: \\n'", ",", "args", ".", "dc_aug_param", ")", "\n", "\n", "", "if", "args", ".", "dsa", "or", "args", ".", "dc_aug_param", "[", "'strategy'", "]", "!=", "'none'", ":", "\n", "                        ", "args", ".", "epoch_eval_train", "=", "1000", "# Training with data augmentation needs more epochs.", "\n", "", "else", ":", "\n", "                        ", "args", ".", "epoch_eval_train", "=", "300", "\n", "\n", "", "accs", "=", "[", "]", "\n", "for", "it_eval", "in", "range", "(", "args", ".", "num_eval", ")", ":", "\n", "                        ", "net_eval", "=", "get_network", "(", "model_eval", ",", "channel", ",", "num_classes", ",", "im_size", ")", ".", "to", "(", "args", ".", "device", ")", "# get a random model", "\n", "image_syn_eval", ",", "label_syn_eval", "=", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "label_syn", ".", "detach", "(", ")", ")", "# avoid any unaware modification", "\n", "_", ",", "acc_train", ",", "acc_test", "=", "evaluate_synset", "(", "it_eval", ",", "net_eval", ",", "image_syn_eval", ",", "label_syn_eval", ",", "testloader", ",", "args", ")", "\n", "accs", ".", "append", "(", "acc_test", ")", "\n", "", "print", "(", "'Evaluate %d random %s, mean = %.4f std = %.4f\\n-------------------------'", "%", "(", "len", "(", "accs", ")", ",", "model_eval", ",", "np", ".", "mean", "(", "accs", ")", ",", "np", ".", "std", "(", "accs", ")", ")", ")", "\n", "\n", "if", "it", "==", "args", ".", "Iteration", ":", "# record the final results", "\n", "                        ", "accs_all_exps", "[", "model_eval", "]", "+=", "accs", "\n", "\n", "", "", "''' visualize and save '''", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'vis_%s_%s_%s_%dipc_exp%d_iter%d.png'", "%", "(", "args", ".", "method", ",", "args", ".", "dataset", ",", "args", ".", "model", ",", "args", ".", "ipc", ",", "exp", ",", "it", ")", ")", "\n", "image_syn_vis", "=", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "for", "ch", "in", "range", "(", "channel", ")", ":", "\n", "                    ", "image_syn_vis", "[", ":", ",", "ch", "]", "=", "image_syn_vis", "[", ":", ",", "ch", "]", "*", "std", "[", "ch", "]", "+", "mean", "[", "ch", "]", "\n", "", "image_syn_vis", "[", "image_syn_vis", "<", "0", "]", "=", "0.0", "\n", "image_syn_vis", "[", "image_syn_vis", ">", "1", "]", "=", "1.0", "\n", "save_image", "(", "image_syn_vis", ",", "save_name", ",", "nrow", "=", "args", ".", "ipc", ")", "# Trying normalize = True/False may get better visual effects.", "\n", "\n", "\n", "", "''' Train synthetic data '''", "\n", "net", "=", "get_network", "(", "args", ".", "model", ",", "channel", ",", "num_classes", ",", "im_size", ")", ".", "to", "(", "args", ".", "device", ")", "# get a random model", "\n", "net", ".", "train", "(", ")", "\n", "net_parameters", "=", "list", "(", "net", ".", "parameters", "(", ")", ")", "\n", "optimizer_net", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_net", ")", "# optimizer_img for synthetic data", "\n", "optimizer_net", ".", "zero_grad", "(", ")", "\n", "loss_avg", "=", "0", "\n", "args", ".", "dc_aug_param", "=", "None", "# Mute the DC augmentation when learning synthetic data (in inner-loop epoch function) in oder to be consistent with DC paper.", "\n", "\n", "\n", "for", "ol", "in", "range", "(", "args", ".", "outer_loop", ")", ":", "\n", "\n", "                ", "''' freeze the running mu and sigma for BatchNorm layers '''", "\n", "# Synthetic data batch, e.g. only 1 image/batch, is too small to obtain stable mu and sigma.", "\n", "# So, we calculate and freeze mu and sigma for BatchNorm layer with real data batch ahead.", "\n", "# This would make the training with BatchNorm layers easier.", "\n", "\n", "BN_flag", "=", "False", "\n", "BNSizePC", "=", "16", "# for batch normalization", "\n", "for", "module", "in", "net", ".", "modules", "(", ")", ":", "\n", "                    ", "if", "'BatchNorm'", "in", "module", ".", "_get_name", "(", ")", ":", "#BatchNorm", "\n", "                        ", "BN_flag", "=", "True", "\n", "", "", "if", "BN_flag", ":", "\n", "                    ", "img_real", "=", "torch", ".", "cat", "(", "[", "get_images", "(", "c", ",", "BNSizePC", ")", "for", "c", "in", "range", "(", "num_classes", ")", "]", ",", "dim", "=", "0", ")", "\n", "net", ".", "train", "(", ")", "# for updating the mu, sigma of BatchNorm", "\n", "output_real", "=", "net", "(", "img_real", ")", "# get running mu, sigma", "\n", "for", "module", "in", "net", ".", "modules", "(", ")", ":", "\n", "                        ", "if", "'BatchNorm'", "in", "module", ".", "_get_name", "(", ")", ":", "#BatchNorm", "\n", "                            ", "module", ".", "eval", "(", ")", "# fix mu and sigma of every BatchNorm layer", "\n", "\n", "\n", "", "", "", "''' update synthetic data '''", "\n", "loss", "=", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "                    ", "img_real", "=", "get_images", "(", "c", ",", "args", ".", "batch_real", ")", "\n", "lab_real", "=", "torch", ".", "ones", "(", "(", "img_real", ".", "shape", "[", "0", "]", ",", ")", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "*", "c", "\n", "img_syn", "=", "image_syn", "[", "c", "*", "args", ".", "ipc", ":", "(", "c", "+", "1", ")", "*", "args", ".", "ipc", "]", ".", "reshape", "(", "(", "args", ".", "ipc", ",", "channel", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ")", ")", "\n", "lab_syn", "=", "torch", ".", "ones", "(", "(", "args", ".", "ipc", ",", ")", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "*", "c", "\n", "\n", "if", "args", ".", "dsa", ":", "\n", "                        ", "seed", "=", "int", "(", "time", ".", "time", "(", ")", "*", "1000", ")", "%", "100000", "\n", "img_real", "=", "DiffAugment", "(", "img_real", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "img_syn", "=", "DiffAugment", "(", "img_syn", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "\n", "", "output_real", "=", "net", "(", "img_real", ")", "\n", "loss_real", "=", "criterion", "(", "output_real", ",", "lab_real", ")", "\n", "gw_real", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_real", ",", "net_parameters", ")", "\n", "gw_real", "=", "list", "(", "(", "_", ".", "detach", "(", ")", ".", "clone", "(", ")", "for", "_", "in", "gw_real", ")", ")", "\n", "\n", "output_syn", "=", "net", "(", "img_syn", ")", "\n", "loss_syn", "=", "criterion", "(", "output_syn", ",", "lab_syn", ")", "\n", "gw_syn", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_syn", ",", "net_parameters", ",", "create_graph", "=", "True", ")", "\n", "\n", "loss", "+=", "match_loss", "(", "gw_syn", ",", "gw_real", ",", "args", ")", "\n", "\n", "", "optimizer_img", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_img", ".", "step", "(", ")", "\n", "loss_avg", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "if", "ol", "==", "args", ".", "outer_loop", "-", "1", ":", "\n", "                    ", "break", "\n", "\n", "\n", "", "''' update network '''", "\n", "image_syn_train", ",", "label_syn_train", "=", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "label_syn", ".", "detach", "(", ")", ")", "# avoid any unaware modification", "\n", "dst_syn_train", "=", "TensorDataset", "(", "image_syn_train", ",", "label_syn_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dst_syn_train", ",", "batch_size", "=", "args", ".", "batch_train", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ")", "\n", "for", "il", "in", "range", "(", "args", ".", "inner_loop", ")", ":", "\n", "                    ", "epoch", "(", "'train'", ",", "trainloader", ",", "net", ",", "optimizer_net", ",", "criterion", ",", "args", ",", "aug", "=", "True", "if", "args", ".", "dsa", "else", "False", ")", "\n", "\n", "\n", "", "", "loss_avg", "/=", "(", "num_classes", "*", "args", ".", "outer_loop", ")", "\n", "\n", "if", "it", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "'%s iter = %04d, loss = %.4f'", "%", "(", "get_time", "(", ")", ",", "it", ",", "loss_avg", ")", ")", "\n", "\n", "", "if", "it", "==", "args", ".", "Iteration", ":", "# only record the final results", "\n", "                ", "data_save", ".", "append", "(", "[", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "label_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "]", ")", "\n", "torch", ".", "save", "(", "{", "'data'", ":", "data_save", ",", "'accs_all_exps'", ":", "accs_all_exps", ",", "}", ",", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'res_%s_%s_%s_%dipc.pt'", "%", "(", "args", ".", "method", ",", "args", ".", "dataset", ",", "args", ".", "model", ",", "args", ".", "ipc", ")", ")", ")", "\n", "\n", "\n", "", "", "", "print", "(", "'\\n==================== Final Results ====================\\n'", ")", "\n", "for", "key", "in", "model_eval_pool", ":", "\n", "        ", "accs", "=", "accs_all_exps", "[", "key", "]", "\n", "print", "(", "'Run %d experiments, train on %s, evaluate %d random %s, mean  = %.2f%%  std = %.2f%%'", "%", "(", "args", ".", "num_exp", ",", "args", ".", "model", ",", "len", "(", "accs", ")", ",", "key", ",", "np", ".", "mean", "(", "accs", ")", "*", "100", ",", "np", ".", "std", "(", "accs", ")", "*", "100", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.main_DM.main": [[12, 211], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "utils.get_loops", "utils.ParamDiffAug", "print", "utils.get_dataset", "utils.get_eval_pool", "dict", "range", "print", "torch.cuda.is_available", "torch.cuda.is_available", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "numpy.arange().tolist", "print", "print", "print", "enumerate", "torch.cat().to", "torch.cat().to", "torch.tensor", "torch.tensor", "range", "range", "torch.randn", "torch.randn", "torch.tensor().view", "torch.tensor().view", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD.zero_grad", "print", "range", "print", "torch.unsqueeze", "torch.unsqueeze", "indices_class[].append", "print", "print", "print", "range", "print", "utils.get_network().to", "get_network().to.train", "list", "torch.optim.SGD.zero_grad", "torch.tensor().to.backward", "torch.optim.SGD.step", "torch.tensor().to.item", "numpy.arange", "range", "range", "range", "torch.cat", "torch.cat", "numpy.random.permutation", "torch.tensor", "torch.tensor", "utils.get_time", "os.path.join", "copy.deepcopy", "range", "torchvision.utils.save_image", "get_network().to.parameters", "torch.tensor().to", "torch.tensor().to", "range", "torch.tensor().to", "torch.tensor().to", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "embed().detach", "embed", "torch.sum", "torch.sum", "print", "data_save.append", "torch.save", "torch.save", "len", "len", "get_images().detach", "print", "print", "print", "range", "print", "torch.randn.detach().cpu", "utils.get_network", "torch.cuda.device_count", "torch.cuda.device_count", "main_DM.main.get_images"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_loops", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_dataset", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_eval_pool", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_time", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet.embed", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_network"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Parameter Processing'", ")", "\n", "parser", ".", "add_argument", "(", "'--method'", ",", "type", "=", "str", ",", "default", "=", "'DM'", ",", "help", "=", "'DC/DSA/DM'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'CIFAR10'", ",", "help", "=", "'dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'ConvNet'", ",", "help", "=", "'model'", ")", "\n", "parser", ".", "add_argument", "(", "'--ipc'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'image(s) per class'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_mode'", ",", "type", "=", "str", ",", "default", "=", "'S'", ",", "help", "=", "'eval_mode'", ")", "# S: the same to training model, M: multi architectures,  W: net width, D: net depth, A: activation function, P: pooling layer, N: normalization layer,", "\n", "parser", ".", "add_argument", "(", "'--num_exp'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'the number of experiments'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_eval'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'the number of evaluating randomly initialized models'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_eval_train'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'epochs to train a model with synthetic data'", ")", "# it can be small for speeding up with little performance drop", "\n", "parser", ".", "add_argument", "(", "'--Iteration'", ",", "type", "=", "int", ",", "default", "=", "20000", ",", "help", "=", "'training iterations'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_img'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "'learning rate for updating synthetic images'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_net'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'learning rate for updating network parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_real'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'batch size for real data'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_train'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'batch size for training networks'", ")", "\n", "parser", ".", "add_argument", "(", "'--init'", ",", "type", "=", "str", ",", "default", "=", "'real'", ",", "help", "=", "'noise/real: initialize synthetic images from random noise or randomly sampled real images.'", ")", "\n", "parser", ".", "add_argument", "(", "'--dsa_strategy'", ",", "type", "=", "str", ",", "default", "=", "'color_crop_cutout_flip_scale_rotate'", ",", "help", "=", "'differentiable Siamese augmentation strategy'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'data'", ",", "help", "=", "'dataset path'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "'result'", ",", "help", "=", "'path to save results'", ")", "\n", "parser", ".", "add_argument", "(", "'--dis_metric'", ",", "type", "=", "str", ",", "default", "=", "'ours'", ",", "help", "=", "'distance metric'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "outer_loop", ",", "args", ".", "inner_loop", "=", "get_loops", "(", "args", ".", "ipc", ")", "\n", "args", ".", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "args", ".", "dsa_param", "=", "ParamDiffAug", "(", ")", "\n", "args", ".", "dsa", "=", "False", "if", "args", ".", "dsa_strategy", "in", "[", "'none'", ",", "'None'", "]", "else", "True", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "data_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "data_path", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "save_path", ")", "\n", "\n", "", "eval_it_pool", "=", "np", ".", "arange", "(", "0", ",", "args", ".", "Iteration", "+", "1", ",", "2000", ")", ".", "tolist", "(", ")", "if", "args", ".", "eval_mode", "==", "'S'", "or", "args", ".", "eval_mode", "==", "'SS'", "else", "[", "args", ".", "Iteration", "]", "# The list of iterations when we evaluate models and record results.", "\n", "print", "(", "'eval_it_pool: '", ",", "eval_it_pool", ")", "\n", "channel", ",", "im_size", ",", "num_classes", ",", "class_names", ",", "mean", ",", "std", ",", "dst_train", ",", "dst_test", ",", "testloader", "=", "get_dataset", "(", "args", ".", "dataset", ",", "args", ".", "data_path", ")", "\n", "model_eval_pool", "=", "get_eval_pool", "(", "args", ".", "eval_mode", ",", "args", ".", "model", ",", "args", ".", "model", ")", "\n", "\n", "\n", "accs_all_exps", "=", "dict", "(", ")", "# record performances of all experiments", "\n", "for", "key", "in", "model_eval_pool", ":", "\n", "        ", "accs_all_exps", "[", "key", "]", "=", "[", "]", "\n", "\n", "", "data_save", "=", "[", "]", "\n", "\n", "\n", "for", "exp", "in", "range", "(", "args", ".", "num_exp", ")", ":", "\n", "        ", "print", "(", "'\\n================== Exp %d ==================\\n '", "%", "exp", ")", "\n", "print", "(", "'Hyper-parameters: \\n'", ",", "args", ".", "__dict__", ")", "\n", "print", "(", "'Evaluation model pool: '", ",", "model_eval_pool", ")", "\n", "\n", "''' organize the real dataset '''", "\n", "images_all", "=", "[", "]", "\n", "labels_all", "=", "[", "]", "\n", "indices_class", "=", "[", "[", "]", "for", "c", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "images_all", "=", "[", "torch", ".", "unsqueeze", "(", "dst_train", "[", "i", "]", "[", "0", "]", ",", "dim", "=", "0", ")", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "labels_all", "=", "[", "dst_train", "[", "i", "]", "[", "1", "]", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "for", "i", ",", "lab", "in", "enumerate", "(", "labels_all", ")", ":", "\n", "            ", "indices_class", "[", "lab", "]", ".", "append", "(", "i", ")", "\n", "", "images_all", "=", "torch", ".", "cat", "(", "images_all", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_all", "=", "torch", ".", "tensor", "(", "labels_all", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "args", ".", "device", ")", "\n", "\n", "\n", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "            ", "print", "(", "'class c = %d: %d real images'", "%", "(", "c", ",", "len", "(", "indices_class", "[", "c", "]", ")", ")", ")", "\n", "\n", "", "def", "get_images", "(", "c", ",", "n", ")", ":", "# get random n images from class c", "\n", "            ", "idx_shuffle", "=", "np", ".", "random", ".", "permutation", "(", "indices_class", "[", "c", "]", ")", "[", ":", "n", "]", "\n", "return", "images_all", "[", "idx_shuffle", "]", "\n", "\n", "", "for", "ch", "in", "range", "(", "channel", ")", ":", "\n", "            ", "print", "(", "'real images channel %d, mean = %.4f, std = %.4f'", "%", "(", "ch", ",", "torch", ".", "mean", "(", "images_all", "[", ":", ",", "ch", "]", ")", ",", "torch", ".", "std", "(", "images_all", "[", ":", ",", "ch", "]", ")", ")", ")", "\n", "\n", "\n", "", "''' initialize the synthetic data '''", "\n", "image_syn", "=", "torch", ".", "randn", "(", "size", "=", "(", "num_classes", "*", "args", ".", "ipc", ",", "channel", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ")", ",", "dtype", "=", "torch", ".", "float", ",", "requires_grad", "=", "True", ",", "device", "=", "args", ".", "device", ")", "\n", "label_syn", "=", "torch", ".", "tensor", "(", "[", "np", ".", "ones", "(", "args", ".", "ipc", ")", "*", "i", "for", "i", "in", "range", "(", "num_classes", ")", "]", ",", "dtype", "=", "torch", ".", "long", ",", "requires_grad", "=", "False", ",", "device", "=", "args", ".", "device", ")", ".", "view", "(", "-", "1", ")", "# [0,0,0, 1,1,1, ..., 9,9,9]", "\n", "\n", "if", "args", ".", "init", "==", "'real'", ":", "\n", "            ", "print", "(", "'initialize synthetic data from random real images'", ")", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "                ", "image_syn", ".", "data", "[", "c", "*", "args", ".", "ipc", ":", "(", "c", "+", "1", ")", "*", "args", ".", "ipc", "]", "=", "get_images", "(", "c", ",", "args", ".", "ipc", ")", ".", "detach", "(", ")", ".", "data", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'initialize synthetic data from random noise'", ")", "\n", "\n", "\n", "", "''' training '''", "\n", "optimizer_img", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "image_syn", ",", "]", ",", "lr", "=", "args", ".", "lr_img", ",", "momentum", "=", "0.5", ")", "# optimizer_img for synthetic data", "\n", "optimizer_img", ".", "zero_grad", "(", ")", "\n", "print", "(", "'%s training begins'", "%", "get_time", "(", ")", ")", "\n", "\n", "for", "it", "in", "range", "(", "args", ".", "Iteration", "+", "1", ")", ":", "\n", "\n", "            ", "''' Evaluate synthetic data '''", "\n", "if", "it", "in", "eval_it_pool", ":", "\n", "                ", "for", "model_eval", "in", "model_eval_pool", ":", "\n", "                    ", "print", "(", "'-------------------------\\nEvaluation\\nmodel_train = %s, model_eval = %s, iteration = %d'", "%", "(", "args", ".", "model", ",", "model_eval", ",", "it", ")", ")", "\n", "\n", "print", "(", "'DSA augmentation strategy: \\n'", ",", "args", ".", "dsa_strategy", ")", "\n", "print", "(", "'DSA augmentation parameters: \\n'", ",", "args", ".", "dsa_param", ".", "__dict__", ")", "\n", "\n", "accs", "=", "[", "]", "\n", "for", "it_eval", "in", "range", "(", "args", ".", "num_eval", ")", ":", "\n", "                        ", "net_eval", "=", "get_network", "(", "model_eval", ",", "channel", ",", "num_classes", ",", "im_size", ")", ".", "to", "(", "args", ".", "device", ")", "# get a random model", "\n", "image_syn_eval", ",", "label_syn_eval", "=", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "label_syn", ".", "detach", "(", ")", ")", "# avoid any unaware modification", "\n", "_", ",", "acc_train", ",", "acc_test", "=", "evaluate_synset", "(", "it_eval", ",", "net_eval", ",", "image_syn_eval", ",", "label_syn_eval", ",", "testloader", ",", "args", ")", "\n", "accs", ".", "append", "(", "acc_test", ")", "\n", "", "print", "(", "'Evaluate %d random %s, mean = %.4f std = %.4f\\n-------------------------'", "%", "(", "len", "(", "accs", ")", ",", "model_eval", ",", "np", ".", "mean", "(", "accs", ")", ",", "np", ".", "std", "(", "accs", ")", ")", ")", "\n", "\n", "if", "it", "==", "args", ".", "Iteration", ":", "# record the final results", "\n", "                        ", "accs_all_exps", "[", "model_eval", "]", "+=", "accs", "\n", "\n", "", "", "''' visualize and save '''", "\n", "save_name", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'vis_%s_%s_%s_%dipc_exp%d_iter%d.png'", "%", "(", "args", ".", "method", ",", "args", ".", "dataset", ",", "args", ".", "model", ",", "args", ".", "ipc", ",", "exp", ",", "it", ")", ")", "\n", "image_syn_vis", "=", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "for", "ch", "in", "range", "(", "channel", ")", ":", "\n", "                    ", "image_syn_vis", "[", ":", ",", "ch", "]", "=", "image_syn_vis", "[", ":", ",", "ch", "]", "*", "std", "[", "ch", "]", "+", "mean", "[", "ch", "]", "\n", "", "image_syn_vis", "[", "image_syn_vis", "<", "0", "]", "=", "0.0", "\n", "image_syn_vis", "[", "image_syn_vis", ">", "1", "]", "=", "1.0", "\n", "save_image", "(", "image_syn_vis", ",", "save_name", ",", "nrow", "=", "args", ".", "ipc", ")", "# Trying normalize = True/False may get better visual effects.", "\n", "\n", "\n", "\n", "", "''' Train synthetic data '''", "\n", "net", "=", "get_network", "(", "args", ".", "model", ",", "channel", ",", "num_classes", ",", "im_size", ")", ".", "to", "(", "args", ".", "device", ")", "# get a random model", "\n", "net", ".", "train", "(", ")", "\n", "for", "param", "in", "list", "(", "net", ".", "parameters", "(", ")", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "embed", "=", "net", ".", "module", ".", "embed", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", "else", "net", ".", "embed", "# for GPU parallel", "\n", "\n", "loss_avg", "=", "0", "\n", "\n", "''' update synthetic data '''", "\n", "if", "'BN'", "not", "in", "args", ".", "model", ":", "# for ConvNet", "\n", "                ", "loss", "=", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "                    ", "img_real", "=", "get_images", "(", "c", ",", "args", ".", "batch_real", ")", "\n", "img_syn", "=", "image_syn", "[", "c", "*", "args", ".", "ipc", ":", "(", "c", "+", "1", ")", "*", "args", ".", "ipc", "]", ".", "reshape", "(", "(", "args", ".", "ipc", ",", "channel", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ")", ")", "\n", "\n", "if", "args", ".", "dsa", ":", "\n", "                        ", "seed", "=", "int", "(", "time", ".", "time", "(", ")", "*", "1000", ")", "%", "100000", "\n", "img_real", "=", "DiffAugment", "(", "img_real", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "img_syn", "=", "DiffAugment", "(", "img_syn", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "\n", "", "output_real", "=", "embed", "(", "img_real", ")", ".", "detach", "(", ")", "\n", "output_syn", "=", "embed", "(", "img_syn", ")", "\n", "\n", "loss", "+=", "torch", ".", "sum", "(", "(", "torch", ".", "mean", "(", "output_real", ",", "dim", "=", "0", ")", "-", "torch", ".", "mean", "(", "output_syn", ",", "dim", "=", "0", ")", ")", "**", "2", ")", "\n", "\n", "", "", "else", ":", "# for ConvNetBN", "\n", "                ", "images_real_all", "=", "[", "]", "\n", "images_syn_all", "=", "[", "]", "\n", "loss", "=", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "for", "c", "in", "range", "(", "num_classes", ")", ":", "\n", "                    ", "img_real", "=", "get_images", "(", "c", ",", "args", ".", "batch_real", ")", "\n", "img_syn", "=", "image_syn", "[", "c", "*", "args", ".", "ipc", ":", "(", "c", "+", "1", ")", "*", "args", ".", "ipc", "]", ".", "reshape", "(", "(", "args", ".", "ipc", ",", "channel", ",", "im_size", "[", "0", "]", ",", "im_size", "[", "1", "]", ")", ")", "\n", "\n", "if", "args", ".", "dsa", ":", "\n", "                        ", "seed", "=", "int", "(", "time", ".", "time", "(", ")", "*", "1000", ")", "%", "100000", "\n", "img_real", "=", "DiffAugment", "(", "img_real", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "img_syn", "=", "DiffAugment", "(", "img_syn", ",", "args", ".", "dsa_strategy", ",", "seed", "=", "seed", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "\n", "", "images_real_all", ".", "append", "(", "img_real", ")", "\n", "images_syn_all", ".", "append", "(", "img_syn", ")", "\n", "\n", "", "images_real_all", "=", "torch", ".", "cat", "(", "images_real_all", ",", "dim", "=", "0", ")", "\n", "images_syn_all", "=", "torch", ".", "cat", "(", "images_syn_all", ",", "dim", "=", "0", ")", "\n", "\n", "output_real", "=", "embed", "(", "images_real_all", ")", ".", "detach", "(", ")", "\n", "output_syn", "=", "embed", "(", "images_syn_all", ")", "\n", "\n", "loss", "+=", "torch", ".", "sum", "(", "(", "torch", ".", "mean", "(", "output_real", ".", "reshape", "(", "num_classes", ",", "args", ".", "batch_real", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "-", "torch", ".", "mean", "(", "output_syn", ".", "reshape", "(", "num_classes", ",", "args", ".", "ipc", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ")", "**", "2", ")", "\n", "\n", "\n", "\n", "", "optimizer_img", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_img", ".", "step", "(", ")", "\n", "loss_avg", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "\n", "loss_avg", "/=", "(", "num_classes", ")", "\n", "\n", "if", "it", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "'%s iter = %04d, loss = %.4f'", "%", "(", "get_time", "(", ")", ",", "it", ",", "loss_avg", ")", ")", "\n", "\n", "", "if", "it", "==", "args", ".", "Iteration", ":", "# only record the final results", "\n", "                ", "data_save", ".", "append", "(", "[", "copy", ".", "deepcopy", "(", "image_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "label_syn", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "]", ")", "\n", "torch", ".", "save", "(", "{", "'data'", ":", "data_save", ",", "'accs_all_exps'", ":", "accs_all_exps", ",", "}", ",", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'res_%s_%s_%s_%dipc.pt'", "%", "(", "args", ".", "method", ",", "args", ".", "dataset", ",", "args", ".", "model", ",", "args", ".", "ipc", ")", ")", ")", "\n", "\n", "\n", "", "", "", "print", "(", "'\\n==================== Final Results ====================\\n'", ")", "\n", "for", "key", "in", "model_eval_pool", ":", "\n", "        ", "accs", "=", "accs_all_exps", "[", "key", "]", "\n", "print", "(", "'Run %d experiments, train on %s, evaluate %d random %s, mean  = %.2f%%  std = %.2f%%'", "%", "(", "args", ".", "num_exp", ",", "args", ".", "model", ",", "len", "(", "accs", ")", ",", "key", ",", "np", ".", "mean", "(", "accs", ")", "*", "100", ",", "np", ".", "std", "(", "accs", ")", "*", "100", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.TensorDataset.__init__": [[106, 109], ["images.detach().float", "labels.detach", "images.detach"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "images", ",", "labels", ")", ":", "# images: n x c x h x w tensor", "\n", "        ", "self", ".", "images", "=", "images", ".", "detach", "(", ")", ".", "float", "(", ")", "\n", "self", ".", "labels", "=", "labels", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.TensorDataset.__getitem__": [[110, 112], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "images", "[", "index", "]", ",", "self", ".", "labels", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.TensorDataset.__len__": [[113, 115], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "images", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.ParamDiffAug.__init__": [[475, 485], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "aug_mode", "=", "'S'", "#'multiple or single'", "\n", "self", ".", "prob_flip", "=", "0.5", "\n", "self", ".", "ratio_scale", "=", "1.2", "\n", "self", ".", "ratio_rotate", "=", "15.0", "\n", "self", ".", "ratio_crop_pad", "=", "0.125", "\n", "self", ".", "ratio_cutout", "=", "0.5", "# the size would be 0.5x0.5", "\n", "self", ".", "brightness", "=", "1.0", "\n", "self", ".", "saturation", "=", "2.0", "\n", "self", ".", "contrast", "=", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_dataset": [[12, 102], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "str", "torchvision.transforms.Compose", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "range", "torchvision.transforms.Compose", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "str", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "range", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.load", "torch.load", "torch.load", "labels_train.detach.detach", "range", "utils.TensorDataset", "labels_val.detach.detach", "range", "utils.TensorDataset", "exit", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "images_train.detach().float", "images_val.detach().float", "images_train.detach", "images_val.detach"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "data_path", ")", ":", "\n", "    ", "if", "dataset", "==", "'MNIST'", ":", "\n", "        ", "channel", "=", "1", "\n", "im_size", "=", "(", "28", ",", "28", ")", "\n", "num_classes", "=", "10", "\n", "mean", "=", "[", "0.1307", "]", "\n", "std", "=", "[", "0.3081", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "dst_train", "=", "datasets", ".", "MNIST", "(", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "# no augmentation", "\n", "dst_test", "=", "datasets", ".", "MNIST", "(", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "class_names", "=", "[", "str", "(", "c", ")", "for", "c", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "", "elif", "dataset", "==", "'FashionMNIST'", ":", "\n", "        ", "channel", "=", "1", "\n", "im_size", "=", "(", "28", ",", "28", ")", "\n", "num_classes", "=", "10", "\n", "mean", "=", "[", "0.2861", "]", "\n", "std", "=", "[", "0.3530", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "dst_train", "=", "datasets", ".", "FashionMNIST", "(", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "# no augmentation", "\n", "dst_test", "=", "datasets", ".", "FashionMNIST", "(", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "class_names", "=", "dst_train", ".", "classes", "\n", "\n", "", "elif", "dataset", "==", "'SVHN'", ":", "\n", "        ", "channel", "=", "3", "\n", "im_size", "=", "(", "32", ",", "32", ")", "\n", "num_classes", "=", "10", "\n", "mean", "=", "[", "0.4377", ",", "0.4438", ",", "0.4728", "]", "\n", "std", "=", "[", "0.1980", ",", "0.2010", ",", "0.1970", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "dst_train", "=", "datasets", ".", "SVHN", "(", "data_path", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "# no augmentation", "\n", "dst_test", "=", "datasets", ".", "SVHN", "(", "data_path", ",", "split", "=", "'test'", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "class_names", "=", "[", "str", "(", "c", ")", "for", "c", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "", "elif", "dataset", "==", "'CIFAR10'", ":", "\n", "        ", "channel", "=", "3", "\n", "im_size", "=", "(", "32", ",", "32", ")", "\n", "num_classes", "=", "10", "\n", "mean", "=", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", "\n", "std", "=", "[", "0.2023", ",", "0.1994", ",", "0.2010", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "dst_train", "=", "datasets", ".", "CIFAR10", "(", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "# no augmentation", "\n", "dst_test", "=", "datasets", ".", "CIFAR10", "(", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "class_names", "=", "dst_train", ".", "classes", "\n", "\n", "", "elif", "dataset", "==", "'CIFAR100'", ":", "\n", "        ", "channel", "=", "3", "\n", "im_size", "=", "(", "32", ",", "32", ")", "\n", "num_classes", "=", "100", "\n", "mean", "=", "[", "0.5071", ",", "0.4866", ",", "0.4409", "]", "\n", "std", "=", "[", "0.2673", ",", "0.2564", ",", "0.2762", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "]", ")", "\n", "dst_train", "=", "datasets", ".", "CIFAR100", "(", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "# no augmentation", "\n", "dst_test", "=", "datasets", ".", "CIFAR100", "(", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "class_names", "=", "dst_train", ".", "classes", "\n", "\n", "", "elif", "dataset", "==", "'TinyImageNet'", ":", "\n", "        ", "channel", "=", "3", "\n", "im_size", "=", "(", "64", ",", "64", ")", "\n", "num_classes", "=", "200", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "data", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'tinyimagenet.pt'", ")", ",", "map_location", "=", "'cpu'", ")", "\n", "\n", "class_names", "=", "data", "[", "'classes'", "]", "\n", "\n", "images_train", "=", "data", "[", "'images_train'", "]", "\n", "labels_train", "=", "data", "[", "'labels_train'", "]", "\n", "images_train", "=", "images_train", ".", "detach", "(", ")", ".", "float", "(", ")", "/", "255.0", "\n", "labels_train", "=", "labels_train", ".", "detach", "(", ")", "\n", "for", "c", "in", "range", "(", "channel", ")", ":", "\n", "            ", "images_train", "[", ":", ",", "c", "]", "=", "(", "images_train", "[", ":", ",", "c", "]", "-", "mean", "[", "c", "]", ")", "/", "std", "[", "c", "]", "\n", "", "dst_train", "=", "TensorDataset", "(", "images_train", ",", "labels_train", ")", "# no augmentation", "\n", "\n", "images_val", "=", "data", "[", "'images_val'", "]", "\n", "labels_val", "=", "data", "[", "'labels_val'", "]", "\n", "images_val", "=", "images_val", ".", "detach", "(", ")", ".", "float", "(", ")", "/", "255.0", "\n", "labels_val", "=", "labels_val", ".", "detach", "(", ")", "\n", "\n", "for", "c", "in", "range", "(", "channel", ")", ":", "\n", "            ", "images_val", "[", ":", ",", "c", "]", "=", "(", "images_val", "[", ":", ",", "c", "]", "-", "mean", "[", "c", "]", ")", "/", "std", "[", "c", "]", "\n", "\n", "", "dst_test", "=", "TensorDataset", "(", "images_val", ",", "labels_val", ")", "# no augmentation", "\n", "\n", "", "else", ":", "\n", "        ", "exit", "(", "'unknown dataset: %s'", "%", "dataset", ")", "\n", "\n", "\n", "", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dst_test", ",", "batch_size", "=", "256", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "channel", ",", "im_size", ",", "num_classes", ",", "class_names", ",", "mean", ",", "std", ",", "dst_train", ",", "dst_test", ",", "testloader", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_default_convnet_setting": [[118, 121], ["None"], "function", ["None"], ["", "", "def", "get_default_convnet_setting", "(", ")", ":", "\n", "    ", "net_width", ",", "net_depth", ",", "net_act", ",", "net_norm", ",", "net_pooling", "=", "128", ",", "3", ",", "'relu'", ",", "'instancenorm'", ",", "'avgpooling'", "\n", "return", "net_width", ",", "net_depth", ",", "net_act", ",", "net_norm", ",", "net_pooling", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_network": [[124, 210], ["torch.random.manual_seed", "torch.random.manual_seed", "torch.random.manual_seed", "utils.get_default_convnet_setting", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "networks.ConvNet.to", "networks.MLP", "int", "networks.ConvNet", "torch.DataParallel", "networks.LeNet", "time.time", "networks.AlexNet", "networks.AlexNetBN", "networks.VGG11", "networks.VGG11BN", "networks.ResNet18", "networks.ResNet18BN_AP", "networks.ResNet18BN", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "networks.ConvNet", "exit"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_default_convnet_setting", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG11", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.VGG11BN", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18BN_AP", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.networks.ResNet18BN"], ["", "def", "get_network", "(", "model", ",", "channel", ",", "num_classes", ",", "im_size", "=", "(", "32", ",", "32", ")", ")", ":", "\n", "    ", "torch", ".", "random", ".", "manual_seed", "(", "int", "(", "time", ".", "time", "(", ")", "*", "1000", ")", "%", "100000", ")", "\n", "net_width", ",", "net_depth", ",", "net_act", ",", "net_norm", ",", "net_pooling", "=", "get_default_convnet_setting", "(", ")", "\n", "\n", "if", "model", "==", "'MLP'", ":", "\n", "        ", "net", "=", "MLP", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'ConvNet'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'LeNet'", ":", "\n", "        ", "net", "=", "LeNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'AlexNet'", ":", "\n", "        ", "net", "=", "AlexNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'AlexNetBN'", ":", "\n", "        ", "net", "=", "AlexNetBN", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'VGG11'", ":", "\n", "        ", "net", "=", "VGG11", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'VGG11BN'", ":", "\n", "        ", "net", "=", "VGG11BN", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'ResNet18'", ":", "\n", "        ", "net", "=", "ResNet18", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'ResNet18BN_AP'", ":", "\n", "        ", "net", "=", "ResNet18BN_AP", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "model", "==", "'ResNet18BN'", ":", "\n", "        ", "net", "=", "ResNet18BN", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ")", "\n", "\n", "", "elif", "model", "==", "'ConvNetD1'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "1", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetD2'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "2", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetD3'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "3", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetD4'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "4", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "\n", "", "elif", "model", "==", "'ConvNetW32'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "32", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetW64'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "64", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetW128'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "128", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetW256'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "256", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "\n", "", "elif", "model", "==", "'ConvNetAS'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "'sigmoid'", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetAR'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "'relu'", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetAL'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "'leakyrelu'", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetASwish'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "'swish'", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetASwishBN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "'swish'", ",", "net_norm", "=", "'batchnorm'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "\n", "", "elif", "model", "==", "'ConvNetNN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "'none'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetBN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "'batchnorm'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetLN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "'layernorm'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetIN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "'instancenorm'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetGN'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "'groupnorm'", ",", "net_pooling", "=", "net_pooling", ",", "im_size", "=", "im_size", ")", "\n", "\n", "", "elif", "model", "==", "'ConvNetNP'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "'none'", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetMP'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "'maxpooling'", ",", "im_size", "=", "im_size", ")", "\n", "", "elif", "model", "==", "'ConvNetAP'", ":", "\n", "        ", "net", "=", "ConvNet", "(", "channel", "=", "channel", ",", "num_classes", "=", "num_classes", ",", "net_width", "=", "net_width", ",", "net_depth", "=", "net_depth", ",", "net_act", "=", "net_act", ",", "net_norm", "=", "net_norm", ",", "net_pooling", "=", "'avgpooling'", ",", "im_size", "=", "im_size", ")", "\n", "\n", "", "else", ":", "\n", "        ", "net", "=", "None", "\n", "exit", "(", "'unknown model: %s'", "%", "model", ")", "\n", "\n", "", "gpu_num", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "gpu_num", ">", "0", ":", "\n", "        ", "device", "=", "'cuda'", "\n", "if", "gpu_num", ">", "1", ":", "\n", "            ", "net", "=", "nn", ".", "DataParallel", "(", "net", ")", "\n", "", "", "else", ":", "\n", "        ", "device", "=", "'cpu'", "\n", "", "net", "=", "net", ".", "to", "(", "device", ")", "\n", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_time": [[213, 215], ["str", "time.strftime", "time.localtime"], "function", ["None"], ["", "def", "get_time", "(", ")", ":", "\n", "    ", "return", "str", "(", "time", ".", "strftime", "(", "\"[%Y-%m-%d %H:%M:%S]\"", ",", "time", ".", "localtime", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.distance_wb": [[218, 236], ["torch.sum", "torch.sum", "torch.sum", "len", "gwr.reshape.reshape", "gws.reshape.reshape", "len", "gwr.reshape.reshape", "gws.reshape.reshape", "len", "torch.sum", "torch.sum", "torch.sum", "len", "gwr.reshape.reshape", "gws.reshape.reshape", "torch.tensor", "torch.tensor", "torch.tensor", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "distance_wb", "(", "gwr", ",", "gws", ")", ":", "\n", "    ", "shape", "=", "gwr", ".", "shape", "\n", "if", "len", "(", "shape", ")", "==", "4", ":", "# conv, out*in*h*w", "\n", "        ", "gwr", "=", "gwr", ".", "reshape", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", "*", "shape", "[", "3", "]", ")", "\n", "gws", "=", "gws", ".", "reshape", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", "*", "shape", "[", "3", "]", ")", "\n", "", "elif", "len", "(", "shape", ")", "==", "3", ":", "# layernorm, C*h*w", "\n", "        ", "gwr", "=", "gwr", ".", "reshape", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", ")", "\n", "gws", "=", "gws", ".", "reshape", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", "*", "shape", "[", "2", "]", ")", "\n", "", "elif", "len", "(", "shape", ")", "==", "2", ":", "# linear, out*in", "\n", "        ", "tmp", "=", "'do nothing'", "\n", "", "elif", "len", "(", "shape", ")", "==", "1", ":", "# batchnorm/instancenorm, C; groupnorm x, bias", "\n", "        ", "gwr", "=", "gwr", ".", "reshape", "(", "1", ",", "shape", "[", "0", "]", ")", "\n", "gws", "=", "gws", ".", "reshape", "(", "1", ",", "shape", "[", "0", "]", ")", "\n", "return", "torch", ".", "tensor", "(", "0", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "gwr", ".", "device", ")", "\n", "\n", "", "dis_weight", "=", "torch", ".", "sum", "(", "1", "-", "torch", ".", "sum", "(", "gwr", "*", "gws", ",", "dim", "=", "-", "1", ")", "/", "(", "torch", ".", "norm", "(", "gwr", ",", "dim", "=", "-", "1", ")", "*", "torch", ".", "norm", "(", "gws", ",", "dim", "=", "-", "1", ")", "+", "0.000001", ")", ")", "\n", "dis", "=", "dis_weight", "\n", "return", "dis", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.match_loss": [[239, 272], ["torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "range", "torch.tensor", "torch.tensor", "torch.tensor", "len", "utils.distance_wb", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "len", "torch.cat.append", "torch.cat.append", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "exit", "gw_real[].reshape", "gw_syn[].reshape", "len", "torch.cat.append", "torch.cat.append", "gw_real[].reshape", "gw_syn[].reshape", "torch.sum", "torch.sum", "torch.sum", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.distance_wb"], ["", "def", "match_loss", "(", "gw_syn", ",", "gw_real", ",", "args", ")", ":", "\n", "    ", "dis", "=", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "if", "args", ".", "dis_metric", "==", "'ours'", ":", "\n", "        ", "for", "ig", "in", "range", "(", "len", "(", "gw_real", ")", ")", ":", "\n", "            ", "gwr", "=", "gw_real", "[", "ig", "]", "\n", "gws", "=", "gw_syn", "[", "ig", "]", "\n", "dis", "+=", "distance_wb", "(", "gwr", ",", "gws", ")", "\n", "\n", "", "", "elif", "args", ".", "dis_metric", "==", "'mse'", ":", "\n", "        ", "gw_real_vec", "=", "[", "]", "\n", "gw_syn_vec", "=", "[", "]", "\n", "for", "ig", "in", "range", "(", "len", "(", "gw_real", ")", ")", ":", "\n", "            ", "gw_real_vec", ".", "append", "(", "gw_real", "[", "ig", "]", ".", "reshape", "(", "(", "-", "1", ")", ")", ")", "\n", "gw_syn_vec", ".", "append", "(", "gw_syn", "[", "ig", "]", ".", "reshape", "(", "(", "-", "1", ")", ")", ")", "\n", "", "gw_real_vec", "=", "torch", ".", "cat", "(", "gw_real_vec", ",", "dim", "=", "0", ")", "\n", "gw_syn_vec", "=", "torch", ".", "cat", "(", "gw_syn_vec", ",", "dim", "=", "0", ")", "\n", "dis", "=", "torch", ".", "sum", "(", "(", "gw_syn_vec", "-", "gw_real_vec", ")", "**", "2", ")", "\n", "\n", "", "elif", "args", ".", "dis_metric", "==", "'cos'", ":", "\n", "        ", "gw_real_vec", "=", "[", "]", "\n", "gw_syn_vec", "=", "[", "]", "\n", "for", "ig", "in", "range", "(", "len", "(", "gw_real", ")", ")", ":", "\n", "            ", "gw_real_vec", ".", "append", "(", "gw_real", "[", "ig", "]", ".", "reshape", "(", "(", "-", "1", ")", ")", ")", "\n", "gw_syn_vec", ".", "append", "(", "gw_syn", "[", "ig", "]", ".", "reshape", "(", "(", "-", "1", ")", ")", ")", "\n", "", "gw_real_vec", "=", "torch", ".", "cat", "(", "gw_real_vec", ",", "dim", "=", "0", ")", "\n", "gw_syn_vec", "=", "torch", ".", "cat", "(", "gw_syn_vec", ",", "dim", "=", "0", ")", "\n", "dis", "=", "1", "-", "torch", ".", "sum", "(", "gw_real_vec", "*", "gw_syn_vec", ",", "dim", "=", "-", "1", ")", "/", "(", "torch", ".", "norm", "(", "gw_real_vec", ",", "dim", "=", "-", "1", ")", "*", "torch", ".", "norm", "(", "gw_syn_vec", ",", "dim", "=", "-", "1", ")", "+", "0.000001", ")", "\n", "\n", "", "else", ":", "\n", "        ", "exit", "(", "'unknown distance function: %s'", "%", "args", ".", "dis_metric", ")", "\n", "\n", "", "return", "dis", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_loops": [[275, 294], ["exit"], "function", ["None"], ["", "def", "get_loops", "(", "ipc", ")", ":", "\n", "# Get the two hyper-parameters of outer-loop and inner-loop.", "\n", "# The following values are empirically good.", "\n", "    ", "if", "ipc", "==", "1", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "1", ",", "1", "\n", "", "elif", "ipc", "==", "10", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "10", ",", "50", "\n", "", "elif", "ipc", "==", "20", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "20", ",", "25", "\n", "", "elif", "ipc", "==", "30", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "30", ",", "20", "\n", "", "elif", "ipc", "==", "40", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "40", ",", "15", "\n", "", "elif", "ipc", "==", "50", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "50", ",", "10", "\n", "", "else", ":", "\n", "        ", "outer_loop", ",", "inner_loop", "=", "0", ",", "0", "\n", "exit", "(", "'loop hyper-parameters are not defined for %d ipc'", "%", "ipc", ")", "\n", "", "return", "outer_loop", ",", "inner_loop", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.epoch": [[297, 334], ["net.to.to", "criterion.to.to", "enumerate", "net.to.train", "net.to.eval", "datum[].float().to", "datum[].long().to", "net.to.", "criterion.to.", "numpy.sum", "numpy.equal", "criterion.item", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "datum[].float", "utils.DiffAugment", "utils.augment", "datum[].long", "numpy.argmax", "datum[].long().to.cpu().data.numpy", "net.cpu().data.numpy", "datum[].long().to.cpu", "net.cpu"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.DiffAugment", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.augment"], ["", "def", "epoch", "(", "mode", ",", "dataloader", ",", "net", ",", "optimizer", ",", "criterion", ",", "args", ",", "aug", ")", ":", "\n", "    ", "loss_avg", ",", "acc_avg", ",", "num_exp", "=", "0", ",", "0", ",", "0", "\n", "net", "=", "net", ".", "to", "(", "args", ".", "device", ")", "\n", "criterion", "=", "criterion", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "        ", "net", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "        ", "net", ".", "eval", "(", ")", "\n", "\n", "", "for", "i_batch", ",", "datum", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "img", "=", "datum", "[", "0", "]", ".", "float", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "if", "aug", ":", "\n", "            ", "if", "args", ".", "dsa", ":", "\n", "                ", "img", "=", "DiffAugment", "(", "img", ",", "args", ".", "dsa_strategy", ",", "param", "=", "args", ".", "dsa_param", ")", "\n", "", "else", ":", "\n", "                ", "img", "=", "augment", "(", "img", ",", "args", ".", "dc_aug_param", ",", "device", "=", "args", ".", "device", ")", "\n", "", "", "lab", "=", "datum", "[", "1", "]", ".", "long", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "n_b", "=", "lab", ".", "shape", "[", "0", "]", "\n", "\n", "output", "=", "net", "(", "img", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "lab", ")", "\n", "acc", "=", "np", ".", "sum", "(", "np", ".", "equal", "(", "np", ".", "argmax", "(", "output", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "axis", "=", "-", "1", ")", ",", "lab", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ")", ")", "\n", "\n", "loss_avg", "+=", "loss", ".", "item", "(", ")", "*", "n_b", "\n", "acc_avg", "+=", "acc", "\n", "num_exp", "+=", "n_b", "\n", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "", "loss_avg", "/=", "num_exp", "\n", "acc_avg", "/=", "num_exp", "\n", "\n", "return", "loss_avg", ",", "acc_avg", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.evaluate_synset": [[337, 362], ["net.to.to", "images_train.to.to", "labels_train.to.to", "float", "int", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.CrossEntropyLoss().to", "utils.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "time.time", "range", "utils.epoch", "print", "net.to.parameters", "utils.epoch", "time.time", "torch.CrossEntropyLoss", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "net.to.parameters", "utils.get_time", "int"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.epoch", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.epoch", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_time"], ["", "def", "evaluate_synset", "(", "it_eval", ",", "net", ",", "images_train", ",", "labels_train", ",", "testloader", ",", "args", ")", ":", "\n", "    ", "net", "=", "net", ".", "to", "(", "args", ".", "device", ")", "\n", "images_train", "=", "images_train", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_train", "=", "labels_train", ".", "to", "(", "args", ".", "device", ")", "\n", "lr", "=", "float", "(", "args", ".", "lr_net", ")", "\n", "Epoch", "=", "int", "(", "args", ".", "epoch_eval_train", ")", "\n", "lr_schedule", "=", "[", "Epoch", "//", "2", "+", "1", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0.0005", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "dst_train", "=", "TensorDataset", "(", "images_train", ",", "labels_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dst_train", ",", "batch_size", "=", "args", ".", "batch_train", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "ep", "in", "range", "(", "Epoch", "+", "1", ")", ":", "\n", "        ", "loss_train", ",", "acc_train", "=", "epoch", "(", "'train'", ",", "trainloader", ",", "net", ",", "optimizer", ",", "criterion", ",", "args", ",", "aug", "=", "True", ")", "\n", "if", "ep", "in", "lr_schedule", ":", "\n", "            ", "lr", "*=", "0.1", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0.0005", ")", "\n", "\n", "", "", "time_train", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "loss_test", ",", "acc_test", "=", "epoch", "(", "'test'", ",", "testloader", ",", "net", ",", "optimizer", ",", "criterion", ",", "args", ",", "aug", "=", "False", ")", "\n", "print", "(", "'%s Evaluate_%02d: epoch = %04d train time = %d s train loss = %.6f train acc = %.4f, test acc = %.4f'", "%", "(", "get_time", "(", ")", ",", "it_eval", ",", "Epoch", ",", "int", "(", "time_train", ")", ",", "loss_train", ",", "acc_train", ",", "acc_test", ")", ")", "\n", "\n", "return", "net", ",", "acc_train", ",", "acc_test", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.augment": [[365, 425], ["range", "strategy.split", "range", "mean.append", "torch.zeros", "torch.zeros", "torch.zeros", "range", "int", "int", "max", "torch.zeros", "torch.zeros", "torch.zeros", "int", "int", "int", "int", "scipy.ndimage.interpolation.rotate", "int", "int", "torch.tensor", "torch.tensor", "torch.tensor", "float", "torch.interpolate", "images[].cpu().data.numpy", "numpy.random.permutation", "utils.augment.cropfun"], "function", ["None"], ["", "def", "augment", "(", "images", ",", "dc_aug_param", ",", "device", ")", ":", "\n", "# This can be sped up in the future.", "\n", "\n", "    ", "if", "dc_aug_param", "!=", "None", "and", "dc_aug_param", "[", "'strategy'", "]", "!=", "'none'", ":", "\n", "        ", "scale", "=", "dc_aug_param", "[", "'scale'", "]", "\n", "crop", "=", "dc_aug_param", "[", "'crop'", "]", "\n", "rotate", "=", "dc_aug_param", "[", "'rotate'", "]", "\n", "noise", "=", "dc_aug_param", "[", "'noise'", "]", "\n", "strategy", "=", "dc_aug_param", "[", "'strategy'", "]", "\n", "\n", "shape", "=", "images", ".", "shape", "\n", "mean", "=", "[", "]", "\n", "for", "c", "in", "range", "(", "shape", "[", "1", "]", ")", ":", "\n", "            ", "mean", ".", "append", "(", "float", "(", "torch", ".", "mean", "(", "images", "[", ":", ",", "c", "]", ")", ")", ")", "\n", "\n", "", "def", "cropfun", "(", "i", ")", ":", "\n", "            ", "im_", "=", "torch", ".", "zeros", "(", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", "+", "crop", "*", "2", ",", "shape", "[", "3", "]", "+", "crop", "*", "2", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "for", "c", "in", "range", "(", "shape", "[", "1", "]", ")", ":", "\n", "                ", "im_", "[", "c", "]", "=", "mean", "[", "c", "]", "\n", "", "im_", "[", ":", ",", "crop", ":", "crop", "+", "shape", "[", "2", "]", ",", "crop", ":", "crop", "+", "shape", "[", "3", "]", "]", "=", "images", "[", "i", "]", "\n", "r", ",", "c", "=", "np", ".", "random", ".", "permutation", "(", "crop", "*", "2", ")", "[", "0", "]", ",", "np", ".", "random", ".", "permutation", "(", "crop", "*", "2", ")", "[", "0", "]", "\n", "images", "[", "i", "]", "=", "im_", "[", ":", ",", "r", ":", "r", "+", "shape", "[", "2", "]", ",", "c", ":", "c", "+", "shape", "[", "3", "]", "]", "\n", "\n", "", "def", "scalefun", "(", "i", ")", ":", "\n", "            ", "h", "=", "int", "(", "(", "np", ".", "random", ".", "uniform", "(", "1", "-", "scale", ",", "1", "+", "scale", ")", ")", "*", "shape", "[", "2", "]", ")", "\n", "w", "=", "int", "(", "(", "np", ".", "random", ".", "uniform", "(", "1", "-", "scale", ",", "1", "+", "scale", ")", ")", "*", "shape", "[", "2", "]", ")", "\n", "tmp", "=", "F", ".", "interpolate", "(", "images", "[", "i", ":", "i", "+", "1", "]", ",", "[", "h", ",", "w", "]", ",", ")", "[", "0", "]", "\n", "mhw", "=", "max", "(", "h", ",", "w", ",", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ")", "\n", "im_", "=", "torch", ".", "zeros", "(", "shape", "[", "1", "]", ",", "mhw", ",", "mhw", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "r", "=", "int", "(", "(", "mhw", "-", "h", ")", "/", "2", ")", "\n", "c", "=", "int", "(", "(", "mhw", "-", "w", ")", "/", "2", ")", "\n", "im_", "[", ":", ",", "r", ":", "r", "+", "h", ",", "c", ":", "c", "+", "w", "]", "=", "tmp", "\n", "r", "=", "int", "(", "(", "mhw", "-", "shape", "[", "2", "]", ")", "/", "2", ")", "\n", "c", "=", "int", "(", "(", "mhw", "-", "shape", "[", "3", "]", ")", "/", "2", ")", "\n", "images", "[", "i", "]", "=", "im_", "[", ":", ",", "r", ":", "r", "+", "shape", "[", "2", "]", ",", "c", ":", "c", "+", "shape", "[", "3", "]", "]", "\n", "\n", "", "def", "rotatefun", "(", "i", ")", ":", "\n", "            ", "im_", "=", "scipyrotate", "(", "images", "[", "i", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "angle", "=", "np", ".", "random", ".", "randint", "(", "-", "rotate", ",", "rotate", ")", ",", "axes", "=", "(", "-", "2", ",", "-", "1", ")", ",", "cval", "=", "np", ".", "mean", "(", "mean", ")", ")", "\n", "r", "=", "int", "(", "(", "im_", ".", "shape", "[", "-", "2", "]", "-", "shape", "[", "-", "2", "]", ")", "/", "2", ")", "\n", "c", "=", "int", "(", "(", "im_", ".", "shape", "[", "-", "1", "]", "-", "shape", "[", "-", "1", "]", ")", "/", "2", ")", "\n", "images", "[", "i", "]", "=", "torch", ".", "tensor", "(", "im_", "[", ":", ",", "r", ":", "r", "+", "shape", "[", "-", "2", "]", ",", "c", ":", "c", "+", "shape", "[", "-", "1", "]", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "\n", "", "def", "noisefun", "(", "i", ")", ":", "\n", "            ", "images", "[", "i", "]", "=", "images", "[", "i", "]", "+", "noise", "*", "torch", ".", "randn", "(", "shape", "[", "1", ":", "]", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "device", ")", "\n", "\n", "\n", "", "augs", "=", "strategy", ".", "split", "(", "'_'", ")", "\n", "\n", "for", "i", "in", "range", "(", "shape", "[", "0", "]", ")", ":", "\n", "            ", "choice", "=", "np", ".", "random", ".", "permutation", "(", "augs", ")", "[", "0", "]", "# randomly implement one augmentation", "\n", "if", "choice", "==", "'crop'", ":", "\n", "                ", "cropfun", "(", "i", ")", "\n", "", "elif", "choice", "==", "'scale'", ":", "\n", "                ", "scalefun", "(", "i", ")", "\n", "", "elif", "choice", "==", "'rotate'", ":", "\n", "                ", "rotatefun", "(", "i", ")", "\n", "", "elif", "choice", "==", "'noise'", ":", "\n", "                ", "noisefun", "(", "i", ")", "\n", "\n", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_daparam": [[428, 446], ["dict"], "function", ["None"], ["", "def", "get_daparam", "(", "dataset", ",", "model", ",", "model_eval", ",", "ipc", ")", ":", "\n", "# We find that augmentation doesn't always benefit the performance.", "\n", "# So we do augmentation for some of the settings.", "\n", "\n", "    ", "dc_aug_param", "=", "dict", "(", ")", "\n", "dc_aug_param", "[", "'crop'", "]", "=", "4", "\n", "dc_aug_param", "[", "'scale'", "]", "=", "0.2", "\n", "dc_aug_param", "[", "'rotate'", "]", "=", "45", "\n", "dc_aug_param", "[", "'noise'", "]", "=", "0.001", "\n", "dc_aug_param", "[", "'strategy'", "]", "=", "'none'", "\n", "\n", "if", "dataset", "==", "'MNIST'", ":", "\n", "        ", "dc_aug_param", "[", "'strategy'", "]", "=", "'crop_scale_rotate'", "\n", "\n", "", "if", "model_eval", "in", "[", "'ConvNetBN'", "]", ":", "# Data augmentation makes model training with Batch Norm layer easier.", "\n", "        ", "dc_aug_param", "[", "'strategy'", "]", "=", "'crop_noise'", "\n", "\n", "", "return", "dc_aug_param", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_eval_pool": [[448, 472], ["print", "model.index"], "function", ["None"], ["", "def", "get_eval_pool", "(", "eval_mode", ",", "model", ",", "model_eval", ")", ":", "\n", "    ", "if", "eval_mode", "==", "'M'", ":", "# multiple architectures", "\n", "        ", "model_eval_pool", "=", "[", "'MLP'", ",", "'ConvNet'", ",", "'LeNet'", ",", "'AlexNet'", ",", "'VGG11'", ",", "'ResNet18'", "]", "\n", "", "elif", "eval_mode", "==", "'B'", ":", "# multiple architectures with BatchNorm for DM experiments", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetBN'", ",", "'ConvNetASwishBN'", ",", "'AlexNetBN'", ",", "'VGG11BN'", ",", "'ResNet18BN'", "]", "\n", "", "elif", "eval_mode", "==", "'W'", ":", "# ablation study on network width", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetW32'", ",", "'ConvNetW64'", ",", "'ConvNetW128'", ",", "'ConvNetW256'", "]", "\n", "", "elif", "eval_mode", "==", "'D'", ":", "# ablation study on network depth", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetD1'", ",", "'ConvNetD2'", ",", "'ConvNetD3'", ",", "'ConvNetD4'", "]", "\n", "", "elif", "eval_mode", "==", "'A'", ":", "# ablation study on network activation function", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetAS'", ",", "'ConvNetAR'", ",", "'ConvNetAL'", ",", "'ConvNetASwish'", "]", "\n", "", "elif", "eval_mode", "==", "'P'", ":", "# ablation study on network pooling layer", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetNP'", ",", "'ConvNetMP'", ",", "'ConvNetAP'", "]", "\n", "", "elif", "eval_mode", "==", "'N'", ":", "# ablation study on network normalization layer", "\n", "        ", "model_eval_pool", "=", "[", "'ConvNetNN'", ",", "'ConvNetBN'", ",", "'ConvNetLN'", ",", "'ConvNetIN'", ",", "'ConvNetGN'", "]", "\n", "", "elif", "eval_mode", "==", "'S'", ":", "# itself", "\n", "        ", "if", "'BN'", "in", "model", ":", "\n", "            ", "print", "(", "'Attention: Here I will replace BN with IN in evaluation, as the synthetic set is too small to measure BN hyper-parameters.'", ")", "\n", "", "model_eval_pool", "=", "[", "model", "[", ":", "model", ".", "index", "(", "'BN'", ")", "]", "]", "if", "'BN'", "in", "model", "else", "[", "model", "]", "\n", "", "elif", "eval_mode", "==", "'SS'", ":", "# itself", "\n", "        ", "model_eval_pool", "=", "[", "model", "]", "\n", "", "else", ":", "\n", "        ", "model_eval_pool", "=", "[", "model_eval", "]", "\n", "", "return", "model_eval_pool", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug": [[487, 493], ["torch.random.manual_seed", "torch.random.manual_seed", "torch.random.manual_seed"], "function", ["None"], ["", "", "def", "set_seed_DiffAug", "(", "param", ")", ":", "\n", "    ", "if", "param", ".", "latestseed", "==", "-", "1", ":", "\n", "        ", "return", "\n", "", "else", ":", "\n", "        ", "torch", ".", "random", ".", "manual_seed", "(", "param", ".", "latestseed", ")", "\n", "param", ".", "latestseed", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.DiffAugment": [[495, 521], ["f.contiguous", "strategy.split", "strategy.split", "utils.set_seed_DiffAug", "exit", "f", "f", "torch.randint().item", "torch.randint().item", "torch.randint().item", "torch.randint", "torch.randint", "torch.randint", "len"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "", "def", "DiffAugment", "(", "x", ",", "strategy", "=", "''", ",", "seed", "=", "-", "1", ",", "param", "=", "None", ")", ":", "\n", "    ", "if", "strategy", "==", "'None'", "or", "strategy", "==", "'none'", "or", "strategy", "==", "''", ":", "\n", "        ", "return", "x", "\n", "\n", "", "if", "seed", "==", "-", "1", ":", "\n", "        ", "param", ".", "Siamese", "=", "False", "\n", "", "else", ":", "\n", "        ", "param", ".", "Siamese", "=", "True", "\n", "\n", "", "param", ".", "latestseed", "=", "seed", "\n", "\n", "if", "strategy", ":", "\n", "        ", "if", "param", ".", "aug_mode", "==", "'M'", ":", "# original", "\n", "            ", "for", "p", "in", "strategy", ".", "split", "(", "'_'", ")", ":", "\n", "                ", "for", "f", "in", "AUGMENT_FNS", "[", "p", "]", ":", "\n", "                    ", "x", "=", "f", "(", "x", ",", "param", ")", "\n", "", "", "", "elif", "param", ".", "aug_mode", "==", "'S'", ":", "\n", "            ", "pbties", "=", "strategy", ".", "split", "(", "'_'", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "p", "=", "pbties", "[", "torch", ".", "randint", "(", "0", ",", "len", "(", "pbties", ")", ",", "size", "=", "(", "1", ",", ")", ")", ".", "item", "(", ")", "]", "\n", "for", "f", "in", "AUGMENT_FNS", "[", "p", "]", ":", "\n", "                ", "x", "=", "f", "(", "x", ",", "param", ")", "\n", "", "", "else", ":", "\n", "            ", "exit", "(", "'unknown augmentation mode: %s'", "%", "param", ".", "aug_mode", ")", "\n", "", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_scale": [[524, 540], ["utils.set_seed_DiffAug", "utils.set_seed_DiffAug", "torch.tensor", "torch.tensor", "torch.tensor", "torch.affine_grid().to", "torch.grid_sample", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "range", "torch.affine_grid"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_scale", "(", "x", ",", "param", ")", ":", "\n", "# x>1, max scale", "\n", "# sx, sy: (0, +oo), 1: orignial size, 0.5: enlarge 2 times", "\n", "    ", "ratio", "=", "param", ".", "ratio_scale", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "sx", "=", "torch", ".", "rand", "(", "x", ".", "shape", "[", "0", "]", ")", "*", "(", "ratio", "-", "1.0", "/", "ratio", ")", "+", "1.0", "/", "ratio", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "sy", "=", "torch", ".", "rand", "(", "x", ".", "shape", "[", "0", "]", ")", "*", "(", "ratio", "-", "1.0", "/", "ratio", ")", "+", "1.0", "/", "ratio", "\n", "theta", "=", "[", "[", "[", "sx", "[", "i", "]", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "sy", "[", "i", "]", ",", "0", "]", ",", "]", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", "]", "\n", "theta", "=", "torch", ".", "tensor", "(", "theta", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "theta", "[", ":", "]", "=", "theta", "[", "0", "]", "\n", "", "grid", "=", "F", ".", "affine_grid", "(", "theta", ",", "x", ".", "shape", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_rotate": [[542, 554], ["utils.set_seed_DiffAug", "torch.tensor", "torch.tensor", "torch.tensor", "torch.affine_grid().to", "torch.grid_sample", "float", "range", "torch.affine_grid", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.rand", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_rotate", "(", "x", ",", "param", ")", ":", "# [-180, 180], 90: anticlockwise 90 degree", "\n", "    ", "ratio", "=", "param", ".", "ratio_rotate", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "theta", "=", "(", "torch", ".", "rand", "(", "x", ".", "shape", "[", "0", "]", ")", "-", "0.5", ")", "*", "2", "*", "ratio", "/", "180", "*", "float", "(", "np", ".", "pi", ")", "\n", "theta", "=", "[", "[", "[", "torch", ".", "cos", "(", "theta", "[", "i", "]", ")", ",", "torch", ".", "sin", "(", "-", "theta", "[", "i", "]", ")", ",", "0", "]", ",", "\n", "[", "torch", ".", "sin", "(", "theta", "[", "i", "]", ")", ",", "torch", ".", "cos", "(", "theta", "[", "i", "]", ")", ",", "0", "]", ",", "]", "for", "i", "in", "range", "(", "x", ".", "shape", "[", "0", "]", ")", "]", "\n", "theta", "=", "torch", ".", "tensor", "(", "theta", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "theta", "[", ":", "]", "=", "theta", "[", "0", "]", "\n", "", "grid", "=", "F", ".", "affine_grid", "(", "theta", ",", "x", ".", "shape", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_flip": [[556, 563], ["utils.set_seed_DiffAug", "torch.rand", "torch.rand", "torch.rand", "torch.where", "torch.where", "torch.where", "x.size", "x.flip"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_flip", "(", "x", ",", "param", ")", ":", "\n", "    ", "prob", "=", "param", ".", "prob_flip", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "randf", "=", "torch", ".", "rand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "randf", "[", ":", "]", "=", "randf", "[", "0", "]", "\n", "", "return", "torch", ".", "where", "(", "randf", "<", "prob", ",", "x", ".", "flip", "(", "3", ")", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_brightness": [[565, 573], ["utils.set_seed_DiffAug", "torch.rand", "torch.rand", "torch.rand", "x.size"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_brightness", "(", "x", ",", "param", ")", ":", "\n", "    ", "ratio", "=", "param", ".", "brightness", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "randb", "=", "torch", ".", "rand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "randb", "[", ":", "]", "=", "randb", "[", "0", "]", "\n", "", "x", "=", "x", "+", "(", "randb", "-", "0.5", ")", "*", "ratio", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_saturation": [[575, 584], ["x.mean", "utils.set_seed_DiffAug", "torch.rand", "torch.rand", "torch.rand", "x.size"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_saturation", "(", "x", ",", "param", ")", ":", "\n", "    ", "ratio", "=", "param", ".", "saturation", "\n", "x_mean", "=", "x", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "rands", "=", "torch", ".", "rand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "rands", "[", ":", "]", "=", "rands", "[", "0", "]", "\n", "", "x", "=", "(", "x", "-", "x_mean", ")", "*", "(", "rands", "*", "ratio", ")", "+", "x_mean", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_contrast": [[586, 595], ["x.mean", "utils.set_seed_DiffAug", "torch.rand", "torch.rand", "torch.rand", "x.size"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_contrast", "(", "x", ",", "param", ")", ":", "\n", "    ", "ratio", "=", "param", ".", "contrast", "\n", "x_mean", "=", "x", ".", "mean", "(", "dim", "=", "[", "1", ",", "2", ",", "3", "]", ",", "keepdim", "=", "True", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "randc", "=", "torch", ".", "rand", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "randc", "[", ":", "]", "=", "randc", "[", "0", "]", "\n", "", "x", "=", "(", "x", "-", "x_mean", ")", "*", "(", "randc", "+", "ratio", ")", "+", "x_mean", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_crop": [[597, 618], ["utils.set_seed_DiffAug", "torch.randint", "torch.randint", "torch.randint", "utils.set_seed_DiffAug", "torch.randint", "torch.randint", "torch.randint", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.pad", "[].permute", "int", "int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "[].permute.size", "[].permute.size", "[].permute.size", "[].permute.size", "[].permute.size", "[].permute.size", "[].permute.size", "F.pad.permute().contiguous", "[].permute.size", "[].permute.size", "F.pad.permute"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_crop", "(", "x", ",", "param", ")", ":", "\n", "# The image is padded on its surrounding and then cropped.", "\n", "    ", "ratio", "=", "param", ".", "ratio_crop_pad", "\n", "shift_x", ",", "shift_y", "=", "int", "(", "x", ".", "size", "(", "2", ")", "*", "ratio", "+", "0.5", ")", ",", "int", "(", "x", ".", "size", "(", "3", ")", "*", "ratio", "+", "0.5", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "translation_x", "=", "torch", ".", "randint", "(", "-", "shift_x", ",", "shift_x", "+", "1", ",", "size", "=", "[", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", "]", ",", "device", "=", "x", ".", "device", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "translation_y", "=", "torch", ".", "randint", "(", "-", "shift_y", ",", "shift_y", "+", "1", ",", "size", "=", "[", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", "]", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "translation_x", "[", ":", "]", "=", "translation_x", "[", "0", "]", "\n", "translation_y", "[", ":", "]", "=", "translation_y", "[", "0", "]", "\n", "", "grid_batch", ",", "grid_x", ",", "grid_y", "=", "torch", ".", "meshgrid", "(", "\n", "torch", ".", "arange", "(", "x", ".", "size", "(", "0", ")", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", "torch", ".", "arange", "(", "x", ".", "size", "(", "2", ")", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", "torch", ".", "arange", "(", "x", ".", "size", "(", "3", ")", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", ")", "\n", "grid_x", "=", "torch", ".", "clamp", "(", "grid_x", "+", "translation_x", "+", "1", ",", "0", ",", "x", ".", "size", "(", "2", ")", "+", "1", ")", "\n", "grid_y", "=", "torch", ".", "clamp", "(", "grid_y", "+", "translation_y", "+", "1", ",", "0", ",", "x", ".", "size", "(", "3", ")", "+", "1", ")", "\n", "x_pad", "=", "F", ".", "pad", "(", "x", ",", "[", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "x", "=", "x_pad", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "[", "grid_batch", ",", "grid_x", ",", "grid_y", "]", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.rand_cutout": [[620, 641], ["utils.set_seed_DiffAug", "torch.randint", "torch.randint", "torch.randint", "utils.set_seed_DiffAug", "torch.randint", "torch.randint", "torch.randint", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.ones", "torch.ones", "torch.ones", "int", "int", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "x.size", "x.size", "x.size", "torch.ones.unsqueeze", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size", "x.size"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.set_seed_DiffAug"], ["", "def", "rand_cutout", "(", "x", ",", "param", ")", ":", "\n", "    ", "ratio", "=", "param", ".", "ratio_cutout", "\n", "cutout_size", "=", "int", "(", "x", ".", "size", "(", "2", ")", "*", "ratio", "+", "0.5", ")", ",", "int", "(", "x", ".", "size", "(", "3", ")", "*", "ratio", "+", "0.5", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "offset_x", "=", "torch", ".", "randint", "(", "0", ",", "x", ".", "size", "(", "2", ")", "+", "(", "1", "-", "cutout_size", "[", "0", "]", "%", "2", ")", ",", "size", "=", "[", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", "]", ",", "device", "=", "x", ".", "device", ")", "\n", "set_seed_DiffAug", "(", "param", ")", "\n", "offset_y", "=", "torch", ".", "randint", "(", "0", ",", "x", ".", "size", "(", "3", ")", "+", "(", "1", "-", "cutout_size", "[", "1", "]", "%", "2", ")", ",", "size", "=", "[", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", "]", ",", "device", "=", "x", ".", "device", ")", "\n", "if", "param", ".", "Siamese", ":", "# Siamese augmentation:", "\n", "        ", "offset_x", "[", ":", "]", "=", "offset_x", "[", "0", "]", "\n", "offset_y", "[", ":", "]", "=", "offset_y", "[", "0", "]", "\n", "", "grid_batch", ",", "grid_x", ",", "grid_y", "=", "torch", ".", "meshgrid", "(", "\n", "torch", ".", "arange", "(", "x", ".", "size", "(", "0", ")", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", "torch", ".", "arange", "(", "cutout_size", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", "torch", ".", "arange", "(", "cutout_size", "[", "1", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "x", ".", "device", ")", ",", "\n", ")", "\n", "grid_x", "=", "torch", ".", "clamp", "(", "grid_x", "+", "offset_x", "-", "cutout_size", "[", "0", "]", "//", "2", ",", "min", "=", "0", ",", "max", "=", "x", ".", "size", "(", "2", ")", "-", "1", ")", "\n", "grid_y", "=", "torch", ".", "clamp", "(", "grid_y", "+", "offset_y", "-", "cutout_size", "[", "1", "]", "//", "2", ",", "min", "=", "0", ",", "max", "=", "x", ".", "size", "(", "3", ")", "-", "1", ")", "\n", "mask", "=", "torch", ".", "ones", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "mask", "[", "grid_batch", ",", "grid_x", ",", "grid_y", "]", "=", "0", "\n", "x", "=", "x", "*", "mask", ".", "unsqueeze", "(", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.CL_DM.main": [[10, 155], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "utils.ParamDiffAug", "utils.get_dataset", "enumerate", "torch.cat().to", "torch.tensor", "print", "print", "print", "numpy.zeros", "range", "range", "print", "print", "print", "print", "torch.cuda.is_available", "os.path.exists", "os.mkdir", "torch.unsqueeze", "indices_class[].append", "numpy.random.seed", "numpy.random.permutation().tolist", "print", "print", "print", "print", "print", "range", "range", "range", "range", "torch.cat", "numpy.random.permutation", "range", "print", "print", "torch.cat().to", "torch.cat().to", "print", "range", "torch.cat().to", "torch.tensor", "utils.TensorDataset", "torch.utils.data.DataLoader", "print", "range", "print", "len", "len", "numpy.random.permutation", "os.path.join", "print", "len", "int", "utils.get_network", "net_eval.to.to", "copy.deepcopy", "copy.deepcopy", "utils.evaluate_synset", "gc.collect", "accs.append", "torch.cat", "torch.tensor", "torch.load", "os.path.join", "print", "torch.cat", "torch.cat", "torch.cat().to.append", "torch.tensor.append", "torch.cat", "torch.cat().to.detach", "torch.cat().to.detach", "numpy.mean", "numpy.std", "range", "range", "torch.load", "os.path.join", "print", "exit", "torch.unsqueeze", "len", "numpy.mean", "numpy.std", "CL_DM.main.get_images"], "function", ["home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_dataset", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.get_network", "home.repos.pwc.inspect_result.VICO-UoE_DatasetCondensation.None.utils.evaluate_synset"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Parameter Processing'", ")", "\n", "parser", ".", "add_argument", "(", "'--method'", ",", "type", "=", "str", ",", "default", "=", "'random'", ",", "help", "=", "'random/herding/DSA/DM'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'CIFAR100'", ",", "help", "=", "'dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'ConvNet'", ",", "help", "=", "'model'", ")", "\n", "parser", ".", "add_argument", "(", "'--ipc'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "help", "=", "'image(s) per class'", ")", "\n", "parser", ".", "add_argument", "(", "'--steps'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "help", "=", "'5/10-step learning'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_eval'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'evaluation number'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_eval_train'", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "'epochs to train a model with synthetic data'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_net'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "'learning rate for updating network parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_train'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "help", "=", "'batch size for training networks'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "type", "=", "str", ",", "default", "=", "'./../data'", ",", "help", "=", "'dataset path'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "device", "=", "'cuda'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "args", ".", "dsa_param", "=", "ParamDiffAug", "(", ")", "\n", "args", ".", "dsa", "=", "True", "# augment images for all methods", "\n", "args", ".", "dsa_strategy", "=", "'color_crop_cutout_flip_scale_rotate'", "# for CIFAR10/100", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "data_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "data_path", ")", "\n", "\n", "", "channel", ",", "im_size", ",", "num_classes", ",", "class_names", ",", "mean", ",", "std", ",", "dst_train", ",", "dst_test", ",", "testloader", "=", "get_dataset", "(", "args", ".", "dataset", ",", "args", ".", "data_path", ")", "\n", "\n", "\n", "''' all training data '''", "\n", "images_all", "=", "[", "]", "\n", "labels_all", "=", "[", "]", "\n", "indices_class", "=", "[", "[", "]", "for", "c", "in", "range", "(", "num_classes", ")", "]", "\n", "\n", "images_all", "=", "[", "torch", ".", "unsqueeze", "(", "dst_train", "[", "i", "]", "[", "0", "]", ",", "dim", "=", "0", ")", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "labels_all", "=", "[", "dst_train", "[", "i", "]", "[", "1", "]", "for", "i", "in", "range", "(", "len", "(", "dst_train", ")", ")", "]", "\n", "for", "i", ",", "lab", "in", "enumerate", "(", "labels_all", ")", ":", "\n", "        ", "indices_class", "[", "lab", "]", ".", "append", "(", "i", ")", "\n", "", "images_all", "=", "torch", ".", "cat", "(", "images_all", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_all", "=", "torch", ".", "tensor", "(", "labels_all", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "args", ".", "device", ")", "\n", "\n", "# for c in range(num_classes):", "\n", "#     print('class c = %d: %d real images' % (c, len(indices_class[c])))", "\n", "\n", "def", "get_images", "(", "c", ",", "n", ")", ":", "# get random n images from class c", "\n", "        ", "idx_shuffle", "=", "np", ".", "random", ".", "permutation", "(", "indices_class", "[", "c", "]", ")", "[", ":", "n", "]", "\n", "return", "images_all", "[", "idx_shuffle", "]", "\n", "\n", "", "print", "(", ")", "\n", "print", "(", "'=================================================================================='", ")", "\n", "print", "(", "'method: '", ",", "args", ".", "method", ")", "\n", "results", "=", "np", ".", "zeros", "(", "(", "args", ".", "steps", ",", "5", "*", "args", ".", "num_eval", ")", ")", "\n", "\n", "for", "seed_cl", "in", "range", "(", "5", ")", ":", "\n", "        ", "num_classes_step", "=", "num_classes", "//", "args", ".", "steps", "\n", "np", ".", "random", ".", "seed", "(", "seed_cl", ")", "\n", "class_order", "=", "np", ".", "random", ".", "permutation", "(", "num_classes", ")", ".", "tolist", "(", ")", "\n", "print", "(", "'========================================='", ")", "\n", "print", "(", "'seed: '", ",", "seed_cl", ")", "\n", "print", "(", "'class_order: '", ",", "class_order", ")", "\n", "print", "(", "'augmentation strategy: \\n'", ",", "args", ".", "dsa_strategy", ")", "\n", "print", "(", "'augmentation parameters: \\n'", ",", "args", ".", "dsa_param", ".", "__dict__", ")", "\n", "\n", "if", "args", ".", "method", "==", "'random'", ":", "\n", "            ", "images_train_all", "=", "[", "]", "\n", "labels_train_all", "=", "[", "]", "\n", "for", "step", "in", "range", "(", "args", ".", "steps", ")", ":", "\n", "                ", "classes_current", "=", "class_order", "[", "step", "*", "num_classes_step", ":", "(", "step", "+", "1", ")", "*", "num_classes_step", "]", "\n", "images_train_all", "+=", "[", "torch", ".", "cat", "(", "[", "get_images", "(", "c", ",", "args", ".", "ipc", ")", "for", "c", "in", "classes_current", "]", ",", "dim", "=", "0", ")", "]", "\n", "labels_train_all", "+=", "[", "torch", ".", "tensor", "(", "[", "c", "for", "c", "in", "classes_current", "for", "i", "in", "range", "(", "args", ".", "ipc", ")", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "args", ".", "device", ")", "]", "\n", "\n", "", "", "elif", "args", ".", "method", "==", "'herding'", ":", "\n", "            ", "fname", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'metasets'", ",", "'cl_data'", ",", "'cl_herding_CIFAR100_ConvNet_20ipc_%dsteps_seed%d.pt'", "%", "(", "args", ".", "steps", ",", "seed_cl", ")", ")", "\n", "data", "=", "torch", ".", "load", "(", "fname", ",", "map_location", "=", "'cpu'", ")", "[", "'data'", "]", "\n", "images_train_all", "=", "[", "data", "[", "step", "]", "[", "0", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "labels_train_all", "=", "[", "data", "[", "step", "]", "[", "1", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "print", "(", "'use data: '", ",", "fname", ")", "\n", "\n", "", "elif", "args", ".", "method", "==", "'DSA'", ":", "\n", "            ", "fname", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'metasets'", ",", "'cl_data'", ",", "'cl_res_DSA_CIFAR100_ConvNet_20ipc_%dsteps_seed%d.pt'", "%", "(", "args", ".", "steps", ",", "seed_cl", ")", ")", "\n", "data", "=", "torch", ".", "load", "(", "fname", ",", "map_location", "=", "'cpu'", ")", "[", "'data'", "]", "\n", "images_train_all", "=", "[", "data", "[", "step", "]", "[", "0", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "labels_train_all", "=", "[", "data", "[", "step", "]", "[", "1", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "print", "(", "'use data: '", ",", "fname", ")", "\n", "\n", "", "elif", "args", ".", "method", "==", "'DM'", ":", "\n", "            ", "fname", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'metasets'", ",", "'cl_data'", ",", "'cl_DM_CIFAR100_ConvNet_20ipc_%dsteps_seed%d.pt'", "%", "(", "args", ".", "steps", ",", "seed_cl", ")", ")", "\n", "data", "=", "torch", ".", "load", "(", "fname", ",", "map_location", "=", "'cpu'", ")", "[", "'data'", "]", "\n", "images_train_all", "=", "[", "data", "[", "step", "]", "[", "0", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "labels_train_all", "=", "[", "data", "[", "step", "]", "[", "1", "]", "for", "step", "in", "range", "(", "args", ".", "steps", ")", "]", "\n", "print", "(", "'use data: '", ",", "fname", ")", "\n", "\n", "", "else", ":", "\n", "            ", "exit", "(", "'unknown method: %s'", "%", "args", ".", "method", ")", "\n", "\n", "\n", "", "for", "step", "in", "range", "(", "args", ".", "steps", ")", ":", "\n", "            ", "print", "(", "'\\n-----------------------------\\nmethod %s seed %d step %d '", "%", "(", "args", ".", "method", ",", "seed_cl", ",", "step", ")", ")", "\n", "\n", "classes_seen", "=", "class_order", "[", ":", "(", "step", "+", "1", ")", "*", "num_classes_step", "]", "\n", "print", "(", "'classes_seen: '", ",", "classes_seen", ")", "\n", "\n", "\n", "''' train data '''", "\n", "images_train", "=", "torch", ".", "cat", "(", "images_train_all", "[", ":", "step", "+", "1", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_train", "=", "torch", ".", "cat", "(", "labels_train_all", "[", ":", "step", "+", "1", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "print", "(", "'train data size: '", ",", "images_train", ".", "shape", ")", "\n", "\n", "\n", "''' test data '''", "\n", "images_test", "=", "[", "]", "\n", "labels_test", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dst_test", ")", ")", ":", "\n", "                ", "lab", "=", "int", "(", "dst_test", "[", "i", "]", "[", "1", "]", ")", "\n", "if", "lab", "in", "classes_seen", ":", "\n", "                    ", "images_test", ".", "append", "(", "torch", ".", "unsqueeze", "(", "dst_test", "[", "i", "]", "[", "0", "]", ",", "dim", "=", "0", ")", ")", "\n", "labels_test", ".", "append", "(", "dst_test", "[", "i", "]", "[", "1", "]", ")", "\n", "\n", "", "", "images_test", "=", "torch", ".", "cat", "(", "images_test", ",", "dim", "=", "0", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "labels_test", "=", "torch", ".", "tensor", "(", "labels_test", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "args", ".", "device", ")", "\n", "dst_test_current", "=", "TensorDataset", "(", "images_test", ",", "labels_test", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dst_test_current", ",", "batch_size", "=", "256", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "\n", "print", "(", "'test set size: '", ",", "images_test", ".", "shape", ")", "\n", "\n", "\n", "''' train model on the newest memory '''", "\n", "accs", "=", "[", "]", "\n", "for", "ep_eval", "in", "range", "(", "args", ".", "num_eval", ")", ":", "\n", "                ", "net_eval", "=", "get_network", "(", "args", ".", "model", ",", "channel", ",", "num_classes", ",", "im_size", ")", "\n", "net_eval", "=", "net_eval", ".", "to", "(", "args", ".", "device", ")", "\n", "img_syn_eval", "=", "copy", ".", "deepcopy", "(", "images_train", ".", "detach", "(", ")", ")", "\n", "lab_syn_eval", "=", "copy", ".", "deepcopy", "(", "labels_train", ".", "detach", "(", ")", ")", "\n", "\n", "_", ",", "acc_train", ",", "acc_test", "=", "evaluate_synset", "(", "ep_eval", ",", "net_eval", ",", "img_syn_eval", ",", "lab_syn_eval", ",", "testloader", ",", "args", ")", "\n", "del", "net_eval", ",", "img_syn_eval", ",", "lab_syn_eval", "\n", "gc", ".", "collect", "(", ")", "# to reduce memory cost", "\n", "accs", ".", "append", "(", "acc_test", ")", "\n", "results", "[", "step", ",", "seed_cl", "*", "args", ".", "num_eval", "+", "ep_eval", "]", "=", "acc_test", "\n", "", "print", "(", "'Evaluate %d random %s, mean = %.4f std = %.4f'", "%", "(", "len", "(", "accs", ")", ",", "args", ".", "model", ",", "np", ".", "mean", "(", "accs", ")", ",", "np", ".", "std", "(", "accs", ")", ")", ")", "\n", "\n", "\n", "", "", "results_str", "=", "''", "\n", "for", "step", "in", "range", "(", "args", ".", "steps", ")", ":", "\n", "        ", "results_str", "+=", "'& %.1f$\\pm$%.1f  '", "%", "(", "np", ".", "mean", "(", "results", "[", "step", "]", ")", "*", "100", ",", "np", ".", "std", "(", "results", "[", "step", "]", ")", "*", "100", ")", "\n", "", "print", "(", "'\\n\\n'", ")", "\n", "print", "(", "'%d step learning %s perforamnce:'", "%", "(", "args", ".", "steps", ",", "args", ".", "method", ")", ")", "\n", "print", "(", "results_str", ")", "\n", "print", "(", "'Done'", ")", "\n", "\n"]]}