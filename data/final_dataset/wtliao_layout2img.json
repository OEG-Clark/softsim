{"home.repos.pwc.inspect_result.wtliao_layout2img.None.train_lostGan.get_dataset": [[24, 35], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_lostGan.main": [[37, 172], ["os.path.join", "train_lostGan.get_dataset", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_v1_orig.ResnetGenerator128().to", "model.rcnn_discriminator_orig.CombineDiscriminator128().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "enumerate", "model.resnet_generator_v1_orig.ResnetGenerator128", "model.rcnn_discriminator_orig.CombineDiscriminator128", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "l1_loss().mean.item", "vgg_loss().mean.item", "d_loss_real.item", "d_loss_robj.item", "d_loss_fake.item", "d_loss_fobj.item", "g_loss_fake.item", "g_loss_obj.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "img_size", ")", ")", "\n", "# data loader", "\n", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "ResnetGenerator128", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "parallel", "=", "True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.__init__": [[7, 9], ["os.path.abspath"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "folder", "=", "\"/home/liao/work_code/LostGANs/samples/tmp/edit\"", ")", ":", "\n", "        ", "self", ".", "folder_path", "=", "os", ".", "path", ".", "abspath", "(", "folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.files_in_folder": [[10, 18], ["os.walk", "file.endswith", "os.path.join", "file_list.append"], "methods", ["None"], ["", "def", "files_in_folder", "(", "self", ",", "mypath", ",", "extension", "=", "''", ")", ":", "\n", "        ", "file_list", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "mypath", ")", ":", "\n", "            ", "for", "file", "in", "files", ":", "\n", "                ", "if", "file", ".", "endswith", "(", "extension", ")", "and", "(", "'_pic.'", "not", "in", "file", ")", ":", "\n", "                    ", "file_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "file", ")", "\n", "file_list", ".", "append", "(", "file_path", ")", "\n", "", "", "", "return", "file_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.plot_save_numpy_arrya": [[19, 23], ["matplotlib.imsave", "print"], "methods", ["None"], ["", "def", "plot_save_numpy_arrya", "(", "self", ",", "data", ",", "export_path", "=", "''", ")", ":", "\n", "        ", "if", "export_path", ":", "\n", "            ", "plt", ".", "imsave", "(", "export_path", ",", "data", ")", "\n", "print", "(", "\"-----> Fig has been saved as: {}\\n\"", ".", "format", "(", "export_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.run": [[24, 37], ["mask_visualize.draw_mask.files_in_folder", "print", "numpy.load", "numpy.squeeze", "numpy.argmax", "os.path.dirname", "os.path.join", "mask_visualize.draw_mask.plot_save_numpy_arrya", "os.path.basename().split", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.files_in_folder", "home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.plot_save_numpy_arrya"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "file_list", "=", "self", ".", "files_in_folder", "(", "self", ".", "folder_path", ",", "'.npy'", ")", "\n", "for", "f_path", "in", "file_list", ":", "\n", "            ", "print", "(", "\"Analyzing file {}.....\"", ".", "format", "(", "f_path", ")", ")", "\n", "data", "=", "np", ".", "load", "(", "f_path", ")", "\n", "# print(data.shape)", "\n", "data", "=", "np", ".", "squeeze", "(", "data", ")", "\n", "mask", "=", "np", ".", "argmax", "(", "data", "[", ":", ",", ":", ",", ":", "]", ",", "axis", "=", "0", ")", "\n", "f1", "=", "os", ".", "path", ".", "dirname", "(", "f_path", ")", "\n", "f2", "=", "os", ".", "path", ".", "basename", "(", "f_path", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'_pic.png'", "\n", "pic_path", "=", "os", ".", "path", ".", "join", "(", "f1", ",", "f2", ")", "\n", "self", ".", "plot_save_numpy_arrya", "(", "mask", ",", "pic_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.manual_result_visulization.show_results": [[4, 19], ["enumerate", "matplotlib.show", "results.items", "matplotlib.figure", "matplotlib.suptitle", "enumerate", "results[].items", "matplotlib.subplot", "matplotlib.pie", "matplotlib.title", "len"], "function", ["None"], ["def", "show_results", "(", "experiment", ")", ":", "\n", "    ", "results", "=", "experiment", "[", "'results'", "]", "\n", "labels", "=", "experiment", "[", "'labels'", "]", "\n", "\n", "for", "i", ",", "(", "dataset", ",", "d_value", ")", "in", "enumerate", "(", "results", ".", "items", "(", ")", ")", ":", "\n", "        ", "f", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16.", ",", "10.", ")", ")", "\n", "plt", ".", "suptitle", "(", "dataset", ",", "fontsize", "=", "20", ",", "fontweight", "=", "'bold'", ")", "\n", "girds", "=", "{", "6", ":", "(", "2", ",", "3", ")", ",", "12", ":", "(", "3", ",", "4", ")", "}", "[", "len", "(", "results", "[", "dataset", "]", ")", "]", "\n", "for", "idx", ",", "(", "n", ",", "n_value", ")", "in", "enumerate", "(", "results", "[", "dataset", "]", ".", "items", "(", ")", ")", ":", "\n", "            ", "plt", ".", "subplot", "(", "girds", "[", "0", "]", ",", "girds", "[", "1", "]", ",", "idx", "+", "1", ")", "\n", "plt", ".", "pie", "(", "n_value", ",", "explode", "=", "(", "0.05", ",", "0", ")", ",", "labels", "=", "labels", ",", "\n", "colors", "=", "[", "'coral'", ",", "'skyblue'", "]", ",", "autopct", "=", "'%.1f%%'", ",", "shadow", "=", "False", ",", "\n", "startangle", "=", "90", ",", "textprops", "=", "{", "'fontsize'", ":", "12", ",", "'color'", ":", "'k'", "}", ")", "\n", "plt", ".", "title", "(", "n", ",", "fontsize", "=", "14", ",", "fontweight", "=", "'bold'", ")", "\n", "", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.manual_result_visulization.show_results_inbar": [[20, 41], ["np.arange", "np.array", "np.array", "np.array", "np.array", "matplotlib.bar", "matplotlib.bar", "matplotlib.bar", "matplotlib.bar", "matplotlib.legend", "matplotlib.show", "list", "list", "list", "list", "list", "[].keys", "[].values", "[].values", "[].values", "[].values"], "function", ["None"], ["", "def", "show_results_inbar", "(", "experiment", ")", ":", "\n", "    ", "results", "=", "experiment", "[", "'results'", "]", "\n", "labels", "=", "list", "(", "experiments", "[", "0", "]", "[", "'results'", "]", "[", "'coco'", "]", ".", "keys", "(", ")", ")", "+", "[", "'mean'", "]", "\n", "size", "=", "11", "\n", "\n", "x", "=", "np", ".", "arange", "(", "size", ")", "\n", "r1", "=", "np", ".", "array", "(", "list", "(", "experiments", "[", "0", "]", "[", "'results'", "]", "[", "'coco'", "]", ".", "values", "(", ")", ")", ")", "\n", "r2", "=", "np", ".", "array", "(", "list", "(", "experiments", "[", "0", "]", "[", "'results'", "]", "[", "'vg'", "]", ".", "values", "(", ")", ")", ")", "\n", "r3", "=", "np", ".", "array", "(", "list", "(", "experiments", "[", "1", "]", "[", "'results'", "]", "[", "'coco'", "]", ".", "values", "(", ")", ")", ")", "\n", "r4", "=", "np", ".", "array", "(", "list", "(", "experiments", "[", "1", "]", "[", "'results'", "]", "[", "'vg'", "]", ".", "values", "(", ")", ")", ")", "\n", "\n", "total_width", ",", "n", "=", "0.8", ",", "3", "\n", "width", "=", "total_width", "/", "n", "\n", "x", "=", "x", "-", "(", "total_width", "-", "width", ")", "/", "2", "\n", "\n", "plt", ".", "bar", "(", "x", ",", "r1", ",", "width", "=", "width", ",", "label", "=", "'Ours-D on COCO'", ")", "\n", "plt", ".", "bar", "(", "x", "+", "width", ",", "r2", ",", "width", "=", "width", ",", "label", "=", "'Ours-D on VG'", ")", "\n", "plt", ".", "bar", "(", "x", "+", "2", "*", "width", ",", "r3", ",", "width", "=", "width", ",", "label", "=", "'Ours-ED on COCO'", ")", "\n", "plt", ".", "bar", "(", "x", "+", "3", "*", "width", ",", "r4", ",", "width", "=", "width", ",", "label", "=", "'Ours-ED on VG'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_graph_context_app.get_dataset": [[25, 36], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_graph_context_app.main": [[38, 222], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_graph_context_app.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_graph.graph_aware_generator().to", "model.rcnn_discriminator_vg.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "netD.state_dict.update", "model.sync_batchnorm.DataParallelWithCallback.load_state_dict", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "nn.DataParallel.state_dict", "netD.state_dict.update", "nn.DataParallel.load_state_dict", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "print", "print", "enumerate", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.resnet_generator_graph.graph_aware_generator", "model.rcnn_discriminator_vg.CombineDiscriminator128_app", "os.path.join", "os.path.join", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "collections.OrderedDict.items", "collections.OrderedDict.items", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "d_loss_real.item", "d_loss_robj.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "g_loss_fake.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "len", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", "+", "'_no_geo'", ",", "str", "(", "img_size", ")", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "graph_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "if", "args", ".", "checkpoint", "is", "not", "None", ":", "\n", "        ", "checkpoint_G", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_{}.pth'", ".", "format", "(", "args", ".", "checkpoint", ")", ")", ")", "\n", "checkpoint_D", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_{}.pth'", ".", "format", "(", "args", ".", "checkpoint", ")", ")", ")", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "checkpoint_G", ")", ",", "\"checkpoint_G does not exist\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "checkpoint_D", ")", ",", "\"checkpoint_D does not exist\"", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "checkpoint_G", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "state_dict", "=", "torch", ".", "load", "(", "checkpoint_D", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_dict", "=", "netD", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netD", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "\n", "# parallel = False", "\n", "", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "4", ",", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "print", "(", "\"==================================\"", ")", "\n", "print", "(", "\"      Training {}/{} epoch        \"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "total_epoch", ")", ")", "\n", "print", "(", "\"==================================\"", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "# print(d_loss_robj)", "\n", "# print(d_loss_robj_app)", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", "}", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_last.pth'", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_last.pth'", ")", ")", "\n", "# save model", "\n", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_ours.get_dataloader": [[16, 34], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader_ours.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset", "open", "json.load"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "with", "open", "(", "\"./datasets/vg/vocab.json\"", ",", "\"r\"", ")", "as", "read_file", ":", "\n", "            ", "vocab", "=", "json", ".", "load", "(", "read_file", ")", "\n", "", "dataset", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "\n", "h5_path", "=", "'./datasets/vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_ours.main": [[36, 80], ["torch.device", "torch.device", "torch.device", "test_ours.get_dataloader", "model.resnet_generator_v1.background_foreground_generator", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "model.resnet_generator_v1.background_foreground_generator.state_dict", "netG.state_dict.update", "model.resnet_generator_v1.background_foreground_generator.load_state_dict", "model.resnet_generator_v1.background_foreground_generator.to", "model.resnet_generator_v1.background_foreground_generator.eval", "enumerate", "os.path.exists", "os.makedirs", "range", "collections.OrderedDict.items", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "label_f.long().to", "bbox_f.float", "label_b.long().to", "bbox_b.float", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "model.resnet_generator_v1.background_foreground_generator.", "imageio.imwrite", "label.long().to", "label_f.long", "label_b.long", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "if", "args", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "background_cls", "=", "92", "\n", "foreground_cls", "=", "91", "\n", "\n", "", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ",", "img_size", "=", "64", ")", "\n", "\n", "#netG = ResnetGenerator128(num_classes=num_classes, output_dim=3).cuda()", "\n", "netG", "=", "background_foreground_generator", "(", "background_cla", "=", "background_cls", ",", "foreground_cla", "=", "foreground_cls", ",", "output_dim", "=", "3", ")", "\n", "\n", "# if not os.path.isfile(args.model_path):", "\n", "#     return", "\n", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "to", "(", "device", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "        ", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", ",", "label_f", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_f", ".", "float", "(", ")", ",", "label_b", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_b", ".", "float", "(", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "            ", "z_f", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "z_b", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "y_f", "=", "label_f", ",", "y_b", "=", "label_b", ")", "\n", "# misc.imsave(\"{save_path}/sample_{idx}.jpg\".format(save_path=args.sample_path, idx=idx),", "\n", "#            fake_images[0].cpu().detach().numpy().transpose(1, 2, 0)*0.5+0.5)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_{i}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "i", "=", "i", ")", ",", "\n", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_LostGAN.get_dataloader": [[17, 35], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_LostGAN.main": [[37, 84], ["torch.device", "torch.device", "torch.device", "os.path.join", "test_LostGAN.get_dataloader", "model.resnet_generator_v2.ResnetGenerator128().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "ResnetGenerator128().to.state_dict", "netG.state_dict.update", "ResnetGenerator128().to.load_state_dict", "ResnetGenerator128().to.cuda", "ResnetGenerator128().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_v2.ResnetGenerator128", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "ResnetGenerator128().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "args", ".", "num_img", "=", "1", "if", "args", ".", "dataset", "==", "'vg'", "else", "5", "\n", "\n", "args", ".", "sample_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "sample_path", ",", "'128_{}'", ".", "format", "(", "args", ".", "num_img", ")", ")", "\n", "\n", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "ResnetGenerator128", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "\n", "# z_obj = torch.from_numpy(truncted_random(num_o=num_o, thres=thres)).float().cuda()", "\n", "# z_im = torch.from_numpy(truncted_random(num_o=1, thres=thres)).view(1, -1).float().cuda()", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "# imageio.imwrite(\"{save_path}/sample_{idx}_numb_{numb}.jpg\".format(save_path=args.sample_path, idx=1292, numb=j), fake_images_uint)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_obj_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "1292", ",", "numb", "=", "idx", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_part.get_dataloader": [[16, 34], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset", "open", "json.load"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "with", "open", "(", "\"./datasets/vg/vocab.json\"", ",", "\"r\"", ")", "as", "read_file", ":", "\n", "            ", "vocab", "=", "json", ".", "load", "(", "read_file", ")", "\n", "", "dataset", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "\n", "h5_path", "=", "'./datasets/vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_part.main": [[36, 77], ["torch.device", "torch.device", "torch.device", "test_context_part.get_dataloader", "model.resnet_generator_part.context_aware_generator_part().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "context_aware_generator_part().to.state_dict", "netG.state_dict.update", "context_aware_generator_part().to.load_state_dict", "context_aware_generator_part().to.cuda", "context_aware_generator_part().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_part.context_aware_generator_part", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "context_aware_generator_part().to.forward", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "context_aware_generator_part", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "\n", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app_v2.get_dataloader": [[16, 34], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "10", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app_v2.main": [[36, 82], ["torch.device", "torch.device", "torch.device", "test_context_app_v2.get_dataloader", "model.resnet_generator_app_v2.ResnetGenerator128_context().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "ResnetGenerator128_context().to.state_dict", "netG.state_dict.update", "ResnetGenerator128_context().to.load_state_dict", "ResnetGenerator128_context().to.cuda", "ResnetGenerator128_context().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_app_v2.ResnetGenerator128_context", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "ResnetGenerator128_context().to.forward", "img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "11", "\n", "\n", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "ResnetGenerator128_context", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "# args.model_path = args.model_path.format(args.dataset, args.load_eopch)", "\n", "# args.sample_path = args.sample_path.format(args.dataset, args.load_eopch)", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "# imageio.imwrite(\"{save_path}/sample_{idx}_numb_{numb}.jpg\".format(save_path=args.sample_path, idx=idx, numb=j), fake_images[0].cpu().detach().numpy().transpose(1, 2, 0) * 0.5 + 0.5)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "# img_orig = imagenet_deprocess_orig(real_images)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_nogeo.get_dataset": [[25, 36], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_nogeo.main": [[38, 179], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_context_nogeo.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_vg.context_aware_generator().to", "model.rcnn_discriminator_app.CombineDiscriminator128().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "enumerate", "model.resnet_generator_vg.context_aware_generator", "model.rcnn_discriminator_app.CombineDiscriminator128", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "l1_loss().mean.item", "vgg_loss().mean.item", "d_loss_real.item", "d_loss_robj.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "g_loss_fake.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "args", ".", "img_size", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "args", ".", "img_size", ")", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "parallel", "=", "True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "10", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.setup.get_extensions": [[17, 57], ["os.path.dirname", "os.path.join", "glob.glob", "glob.glob", "glob.glob", "os.path.abspath", "os.path.join", "os.path.join", "os.path.join", "torch.cuda.is_available", "os.path.join", "extension"], "function", ["None"], ["def", "get_extensions", "(", ")", ":", "\n", "    ", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "extensions_dir", "=", "os", ".", "path", ".", "join", "(", "this_dir", ",", "\"model\"", ",", "\"csrc\"", ")", "\n", "\n", "main_file", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "extensions_dir", ",", "\"*.cpp\"", ")", ")", "\n", "source_cpu", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "extensions_dir", ",", "\"cpu\"", ",", "\"*.cpp\"", ")", ")", "\n", "source_cuda", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "extensions_dir", ",", "\"cuda\"", ",", "\"*.cu\"", ")", ")", "\n", "\n", "sources", "=", "main_file", "+", "source_cpu", "\n", "extension", "=", "CppExtension", "\n", "\n", "extra_compile_args", "=", "{", "\"cxx\"", ":", "[", "]", "}", "\n", "define_macros", "=", "[", "]", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "CUDA_HOME", "is", "not", "None", ":", "\n", "        ", "extension", "=", "CUDAExtension", "\n", "sources", "+=", "source_cuda", "\n", "define_macros", "+=", "[", "(", "\"WITH_CUDA\"", ",", "None", ")", "]", "\n", "extra_compile_args", "[", "\"nvcc\"", "]", "=", "[", "\n", "\"-DCUDA_HAS_FP16=1\"", ",", "\n", "\"-D__CUDA_NO_HALF_OPERATORS__\"", ",", "\n", "\"-D__CUDA_NO_HALF_CONVERSIONS__\"", ",", "\n", "\"-D__CUDA_NO_HALF2_OPERATORS__\"", ",", "\n", "]", "\n", "\n", "", "sources", "=", "[", "os", ".", "path", ".", "join", "(", "extensions_dir", ",", "s", ")", "for", "s", "in", "sources", "]", "\n", "\n", "include_dirs", "=", "[", "extensions_dir", "]", "\n", "\n", "ext_modules", "=", "[", "\n", "extension", "(", "\n", "\"model.roi_layers._C\"", ",", "\n", "sources", ",", "\n", "include_dirs", "=", "include_dirs", ",", "\n", "define_macros", "=", "define_macros", ",", "\n", "extra_compile_args", "=", "extra_compile_args", ",", "\n", ")", "\n", "]", "\n", "\n", "return", "ext_modules", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app.get_dataloader": [[17, 35], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app.main": [[37, 82], ["torch.device", "torch.device", "torch.device", "test_context_app.get_dataloader", "model.resnet_generator_context.context_aware_generator().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "context_aware_generator().to.state_dict", "netG.state_dict.update", "context_aware_generator().to.load_state_dict", "context_aware_generator().to.cuda", "context_aware_generator().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_context.context_aware_generator", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "context_aware_generator().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "# args.model_path = args.model_path.format(args.dataset, args.load_eopch)", "\n", "# args.sample_path = args.sample_path.format(args.dataset, args.load_eopch)", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "# imageio.imwrite(\"{save_path}/sample_{idx}_numb_{numb}.jpg\".format(save_path=args.sample_path, idx=idx, numb=j), fake_images[0].cpu().detach().numpy().transpose(1, 2, 0)* 0.5 + 0.5)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "# pbar.update(1)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app_v2.get_dataset": [[25, 36], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app_v2.main": [[38, 218], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_context_app_v2.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_app_v2.ResnetGenerator128_context().to", "model.rcnn_discriminator_app.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "netD.state_dict.update", "model.sync_batchnorm.DataParallelWithCallback.load_state_dict", "model.sync_batchnorm.DataParallelWithCallback.cuda", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "nn.DataParallel.state_dict", "netD.state_dict.update", "nn.DataParallel.load_state_dict", "nn.DataParallel.cuda", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "enumerate", "model.resnet_generator_app_v2.ResnetGenerator128_context", "model.rcnn_discriminator_app.CombineDiscriminator128_app", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.isfile", "os.path.isfile", "collections.OrderedDict.items", "collections.OrderedDict.items", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "img_size", ")", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "ResnetGenerator128_context", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "args", ".", "checkpoint_epoch", "is", "not", "None", ":", "\n", "        ", "load_G", "=", "args", ".", "out_path", "+", "'/model/G_{}.pth'", ".", "format", "(", "args", ".", "checkpoint_epoch", ")", "\n", "load_D", "=", "args", ".", "out_path", "+", "'/model/D_{}.pth'", ".", "format", "(", "args", ".", "checkpoint_epoch", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "load_G", ")", "or", "not", "os", ".", "path", ".", "isfile", "(", "load_D", ")", ":", "\n", "            ", "return", "\n", "\n", "# load generator", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "load_G", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "netG", ".", "cuda", "(", ")", "\n", "\n", "# load discriminator", "\n", "state_dict", "=", "torch", ".", "load", "(", "load_D", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netD", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netD", ".", "load_state_dict", "(", "model_dict", ")", "\n", "netD", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "checkpoint_epoch", "=", "0", "\n", "\n", "# parallel = False", "\n", "", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "checkpoint_epoch", ",", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "print", "(", "\"Epoch {}/{}\"", ".", "format", "(", "epoch", ",", "args", ".", "total_epoch", ")", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "# print(d_loss_robj)", "\n", "# print(d_loss_robj_app)", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_app.get_dataloader": [[17, 35], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_app.main": [[37, 87], ["torch.device", "torch.device", "torch.device", "args.model_path.format", "args.sample_path.format", "test_app.get_dataloader", "model.resnet_generator_v2.ResnetGenerator128().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "ResnetGenerator128().to.state_dict", "netG.state_dict.update", "ResnetGenerator128().to.load_state_dict", "ResnetGenerator128().to.cuda", "ResnetGenerator128().to.eval", "print", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_v2.ResnetGenerator128", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "ResnetGenerator128().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "model_path", "=", "args", ".", "model_path", ".", "format", "(", "args", ".", "dataset", ",", "args", ".", "model_idx", ")", "\n", "args", ".", "sample_path", "=", "args", ".", "sample_path", ".", "format", "(", "args", ".", "dataset", ",", "args", ".", "model_idx", ")", "\n", "if", "args", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "args", ".", "sample_path", "+=", "'_5'", "\n", "\n", "", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "ResnetGenerator128", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "\n", "# z_obj = torch.from_numpy(truncted_random(num_o=num_o, thres=thres)).float().cuda()", "\n", "# z_im = torch.from_numpy(truncted_random(num_o=1, thres=thres)).view(1, -1).float().cuda()", "\n", "print", "(", "args", ".", "num_img", ")", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "# imageio.imwrite(\"{save_path}/sample_{idx}_obj2_{numb}.jpg\".format(save_path=args.sample_path, idx=1292, numb=idx), fake_images_uint)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app.get_dataset": [[24, 35], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app.main": [[37, 196], ["os.path.join", "train_context_app.get_dataset", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_context.context_aware_generator().to", "model.rcnn_discriminator_app.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "enumerate", "model.resnet_generator_context.context_aware_generator", "model.rcnn_discriminator_app.CombineDiscriminator128_app", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "d_loss_real.item", "d_loss_robj.item", "d_loss_robj_app.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "d_loss_fobj_app.item", "g_loss_fake.item", "g_loss_obj_app.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", "+", "'_1gpu'", ",", "str", "(", "img_size", ")", ")", "\n", "\n", "# data loader", "\n", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "", "print", "(", "\"{} GPUs, {} workers are used\"", ".", "format", "(", "num_gpus", ",", "num_workers", ")", ")", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "# if os.path.isfile(args.checkpoint):", "\n", "#     state_dict = torch.load(args.checkpoint)", "\n", "\n", "# parallel = True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "# writer = None", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "print", "(", "\"Epoch {}/{}\"", ".", "format", "(", "epoch", ",", "args", ".", "total_epoch", ")", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "# print(d_loss_robj)", "\n", "# print(d_loss_robj_app)", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "# print(\"d_loss_real={:.3f}, d_loss_robj={:.3f}, d_loss_robj_app={:.3f}\".format(d_loss_real.item(), d_loss_robj.item(), d_loss_robj_app.item()))", "\n", "# print(\"d_loss_fake={:.3f}, d_loss_fobj={:.3f}, d_loss_fobj_app={:.3f}\".format(d_loss_fake.item(), d_loss_fobj.item(), d_loss_fobj_app.item()))", "\n", "# print(\"g_loss_fake={:.3f}, g_loss_obj={:.3f}, g_loss_obj_app={:.3f}\".format(g_loss_fake.item(), g_loss_obj.item(), g_loss_obj_app.item()))", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "if", "writer", "is", "not", "None", ":", "\n", "                    ", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"robj_app\"", ":", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "\"fobj_app\"", ":", "d_loss_fobj_app", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj_app\"", ":", "g_loss_obj_app", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_part.get_dataset": [[24, 35], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "h5_path", "=", "'./datasets/vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "10", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_part.main": [[37, 172], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_context_part.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_part.context_aware_generator_part().to", "CombineDiscriminator128().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "os.path.exists", "os.makedirs", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "enumerate", "model.resnet_generator_part.context_aware_generator_part", "CombineDiscriminator128", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "l1_loss().mean.item", "vgg_loss().mean.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "img_size", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "\n", "", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "4", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "context_aware_generator_part", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "# parallel = False", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "print", "(", "\"Epoch {}/{}\"", ".", "format", "(", "epoch", ",", "args", ".", "total_epoch", ")", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_graph_context_app.get_dataloader": [[28, 46], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_graph_context_app.main": [[48, 97], ["torch.device", "torch.device", "torch.device", "args.model_path.format", "args.sample_path.format", "test_graph_context_app.get_dataloader", "model.resnet_generator_graph.graph_aware_generator().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "graph_aware_generator().to.state_dict", "netG.state_dict.update", "graph_aware_generator().to.load_state_dict", "graph_aware_generator().to.cuda", "graph_aware_generator().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_graph.graph_aware_generator", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "graph_aware_generator().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "args", ".", "num_img", "=", "1", "if", "args", ".", "dataset", "==", "'vg'", "else", "5", "\n", "\n", "args", ".", "model_path", "=", "args", ".", "model_path", ".", "format", "(", "args", ".", "load_eopch", ")", "\n", "args", ".", "sample_path", "=", "args", ".", "sample_path", ".", "format", "(", "args", ".", "load_eopch", ")", "\n", "\n", "if", "args", ".", "num_img", ">", "1", ":", "\n", "        ", "args", ".", "sample_path", "+=", "'_{}'", ".", "format", "(", "args", ".", "num_img", ")", "\n", "\n", "", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "graph_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "# import ipdb; ipdb.set_trace()", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "# z_obj = torch.from_numpy(truncted_random(num_o=num_o, thres=thres)).float().cuda()", "\n", "# z_im = torch.from_numpy(truncted_random(num_o=1, thres=thres)).view(1, -1).float().cuda()", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "# img_orig = imagenet_deprocess_orig(real_images)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_lpips.main": [[11, 42], ["transform.append", "torchvision.Compose", "os.listdir", "len", "print", "lpips.LPIPS", "net.cuda.cuda", "net.cuda.eval", "numpy.asarray", "numpy.mean", "numpy.std", "print", "torchvision.ToTensor", "torchvision.Normalize", "torch.no_grad", "tqdm.tqdm", "range", "T.Compose.", "orig_image.unsqueeze.cuda", "orig_image.unsqueeze.unsqueeze", "range", "PIL.Image.open().convert", "T.Compose.", "generated_image.unsqueeze.cuda", "generated_image.unsqueeze.unsqueeze", "net.cuda.squeeze", "scores.append", "PIL.Image.open().convert", "net().squeeze.cpu().numpy", "PIL.Image.open", "net.cuda.", "os.path.join", "PIL.Image.open", "net().squeeze.cpu", "os.path.join", "str"], "function", ["None"], ["def", "main", "(", "args", ")", ":", "\n", "\n", "    ", "IMAGENET_MEAN", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "IMAGENET_STD", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "[", "T", ".", "ToTensor", "(", ")", "]", "\n", "transform", ".", "append", "(", "T", ".", "Normalize", "(", "mean", "=", "IMAGENET_MEAN", ",", "std", "=", "IMAGENET_STD", ")", ")", "\n", "im_transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "\n", "orig_images", "=", "os", ".", "listdir", "(", "args", ".", "orig_image_path", ")", "\n", "N", "=", "len", "(", "orig_images", ")", "\n", "print", "(", "N", ")", "\n", "net", "=", "lpips", ".", "LPIPS", "(", "net", "=", "'alex'", ")", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "net", ".", "eval", "(", ")", "\n", "scores", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "        ", "for", "i", "in", "tqdm", "(", "range", "(", "N", ")", ")", ":", "\n", "            ", "orig_image", "=", "im_transform", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "orig_image_path", ",", "orig_images", "[", "i", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "orig_image", "=", "orig_image", ".", "cuda", "(", ")", "\n", "orig_image", "=", "orig_image", ".", "unsqueeze", "(", "0", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "generated_image_number", ")", ":", "\n", "                ", "generated_image", "=", "im_transform", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "generated_image_path", ",", "orig_images", "[", "i", "]", "[", ":", "-", "4", "]", "+", "'_numb_'", "+", "str", "(", "j", ")", "+", "'.jpg'", ")", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "generated_image", "=", "generated_image", ".", "cuda", "(", ")", "\n", "generated_image", "=", "generated_image", ".", "unsqueeze", "(", "0", ")", "\n", "score", "=", "net", "(", "orig_image", ",", "generated_image", ")", ".", "squeeze", "(", ")", "\n", "scores", ".", "append", "(", "score", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "", "", "scores_all", "=", "np", ".", "asarray", "(", "scores", ")", "\n", "scores_mean", "=", "np", ".", "mean", "(", "scores_all", ")", "\n", "scores_std", "=", "np", ".", "std", "(", "scores_all", ")", "\n", "print", "(", "'mean diversity scores = %4.2f%% +- %4.2f%%'", "%", "(", "scores_mean", ",", "scores_std", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_ours_context_bg.get_dataloader": [[16, 34], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader_ours.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset", "open", "json.load"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "with", "open", "(", "\"./datasets/vg/vocab.json\"", ",", "\"r\"", ")", "as", "read_file", ":", "\n", "            ", "vocab", "=", "json", ".", "load", "(", "read_file", ")", "\n", "", "dataset", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "\n", "h5_path", "=", "'./datasets/vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_ours_context_bg.main": [[36, 80], ["torch.device", "torch.device", "torch.device", "test_ours_context_bg.get_dataloader", "background_foreground_generator", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "background_foreground_generator.state_dict", "netG.state_dict.update", "background_foreground_generator.load_state_dict", "background_foreground_generator.to", "background_foreground_generator.eval", "enumerate", "os.path.exists", "os.makedirs", "tqdm.tqdm", "range", "collections.OrderedDict.items", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "label_f.long().to", "bbox_f.float", "label_b.long().to", "bbox_b.float", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "background_foreground_generator.", "imageio.imwrite", "label.long().to", "label_f.long", "label_b.long", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "if", "args", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "background_cls", "=", "92", "\n", "foreground_cls", "=", "91", "\n", "\n", "", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ",", "img_size", "=", "64", ")", "\n", "\n", "#netG = ResnetGenerator128(num_classes=num_classes, output_dim=3).cuda()", "\n", "netG", "=", "background_foreground_generator", "(", "background_cla", "=", "background_cls", ",", "foreground_cla", "=", "foreground_cls", ",", "output_dim", "=", "3", ")", "\n", "\n", "# if not os.path.isfile(args.model_path):", "\n", "#     return", "\n", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "to", "(", "device", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "        ", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", ",", "label_f", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_f", ".", "float", "(", ")", ",", "label_b", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_b", ".", "float", "(", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "            ", "z_f", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "z_b", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "y_f", "=", "label_f", ",", "y_b", "=", "label_b", ")", "\n", "# misc.imsave(\"{save_path}/sample_{idx}.jpg\".format(save_path=args.sample_path, idx=idx),", "\n", "#            fake_images[0].cpu().detach().numpy().transpose(1, 2, 0)*0.5+0.5)", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_{i}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "i", "=", "i", ")", ",", "\n", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_app.get_dataset": [[24, 35], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_app.main": [[37, 196], ["os.path.join", "train_app.get_dataset", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_v2.ResnetGenerator128().to", "model.rcnn_discriminator_app.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "enumerate", "model.resnet_generator_v2.ResnetGenerator128", "model.rcnn_discriminator_app.CombineDiscriminator128_app", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "d_loss_real.item", "d_loss_robj.item", "d_loss_robj_app.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "d_loss_fobj_app.item", "g_loss_fake.item", "g_loss_obj_app.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", "+", "'_1gpu'", ",", "str", "(", "img_size", ")", ")", "\n", "\n", "# data loader", "\n", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "", "print", "(", "\"{} GPUs, {} workers are used\"", ".", "format", "(", "num_gpus", ",", "num_workers", ")", ")", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "ResnetGenerator128", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "# if os.path.isfile(args.checkpoint):", "\n", "#     state_dict = torch.load(args.checkpoint)", "\n", "\n", "# parallel = True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "# writer = None", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "print", "(", "\"Epoch {}/{}\"", ".", "format", "(", "epoch", ",", "args", ".", "total_epoch", ")", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "# print(d_loss_robj)", "\n", "# print(d_loss_robj_app)", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "# print(\"d_loss_real={:.3f}, d_loss_robj={:.3f}, d_loss_robj_app={:.3f}\".format(d_loss_real.item(), d_loss_robj.item(), d_loss_robj_app.item()))", "\n", "# print(\"d_loss_fake={:.3f}, d_loss_fobj={:.3f}, d_loss_fobj_app={:.3f}\".format(d_loss_fake.item(), d_loss_fobj.item(), d_loss_fobj_app.item()))", "\n", "# print(\"g_loss_fake={:.3f}, g_loss_obj={:.3f}, g_loss_obj_app={:.3f}\".format(g_loss_fake.item(), g_loss_obj.item(), g_loss_obj_app.item()))", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "if", "writer", "is", "not", "None", ":", "\n", "                    ", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"robj_app\"", ":", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "\"fobj_app\"", ":", "d_loss_fobj_app", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj_app\"", ":", "g_loss_obj_app", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.main": [[40, 80], ["sum", "ValueError", "numpy.load", "numpy.split", "IS.get_inception_score", "print", "print", "IS.load_images", "IS.get_inception_score", "print", "print", "open", "IS.load_images", "IS.get_inception_score", "print", "print", "print", "sorted", "line.strip", "os.listdir", "os.path.join", "IS.load_images", "IS.get_inception_score", "print", "print", "print", "fn.startswith", "os.path.isdir"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.get_inception_score", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.load_images", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.get_inception_score", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.load_images", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.get_inception_score", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.load_images", "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.get_inception_score"], ["def", "main", "(", "args", ")", ":", "\n", "    ", "got_npy_file", "=", "args", ".", "input_npy_file", "is", "not", "None", "\n", "got_image_dir", "=", "args", ".", "input_image_dir", "is", "not", "None", "\n", "got_image_dir_list", "=", "args", ".", "input_image_dir_list", "is", "not", "None", "\n", "got_image_superdir", "=", "args", ".", "input_image_superdir", "is", "not", "None", "\n", "inputs", "=", "[", "got_npy_file", ",", "got_image_dir", ",", "got_image_dir_list", ",", "got_image_superdir", "]", "\n", "if", "sum", "(", "inputs", ")", "!=", "1", ":", "\n", "        ", "raise", "ValueError", "(", "'Must give exactly one input type'", ")", "\n", "\n", "", "if", "args", ".", "input_npy_file", "is", "not", "None", ":", "\n", "        ", "images", "=", "np", ".", "load", "(", "args", ".", "input_npy_file", ")", "\n", "images", "=", "np", ".", "split", "(", "images", ",", "images", ".", "shape", "[", "0", "]", ",", "axis", "=", "0", ")", "\n", "images", "=", "[", "img", "[", "0", "]", "for", "img", "in", "images", "]", "\n", "mean", ",", "std", "=", "get_inception_score", "(", "args", ",", "images", ")", "\n", "print", "(", "'Inception mean: '", ",", "mean", ")", "\n", "print", "(", "'Inception std: '", ",", "std", ")", "\n", "", "elif", "args", ".", "input_image_dir", "is", "not", "None", ":", "\n", "        ", "images", "=", "load_images", "(", "args", ",", "args", ".", "input_image_dir", ")", "\n", "mean", ",", "std", "=", "get_inception_score", "(", "args", ",", "images", ")", "\n", "print", "(", "'Inception mean: '", ",", "mean", ")", "\n", "print", "(", "'Inception std: '", ",", "std", ")", "\n", "", "elif", "got_image_dir_list", ":", "\n", "        ", "with", "open", "(", "args", ".", "input_image_dir_list", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "dir_list", "=", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "f", "]", "\n", "", "for", "image_dir", "in", "dir_list", ":", "\n", "            ", "images", "=", "load_images", "(", "args", ",", "image_dir", ")", "\n", "mean", ",", "std", "=", "get_inception_score", "(", "args", ",", "images", ")", "\n", "print", "(", "'Inception mean: '", ",", "mean", ")", "\n", "print", "(", "'Inception std: '", ",", "std", ")", "\n", "print", "(", ")", "\n", "", "", "elif", "got_image_superdir", ":", "\n", "        ", "for", "fn", "in", "sorted", "(", "os", ".", "listdir", "(", "args", ".", "input_image_superdir", ")", ")", ":", "\n", "            ", "if", "not", "fn", ".", "startswith", "(", "'result'", ")", ":", "continue", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "input_image_superdir", ",", "fn", ",", "'images'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "image_dir", ")", ":", "continue", "\n", "images", "=", "load_images", "(", "args", ",", "image_dir", ")", "\n", "mean", ",", "std", "=", "get_inception_score", "(", "args", ",", "images", ")", "\n", "print", "(", "'Inception mean: '", ",", "mean", ")", "\n", "print", "(", "'Inception std: '", ",", "std", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.load_images": [[82, 102], ["print", "os.listdir", "print", "[].lower", "os.path.join", "scipy.misc.imread", "images.append", "print", "scipy.misc.imresize", "len", "len", "os.path.splitext"], "function", ["None"], ["", "", "", "def", "load_images", "(", "args", ",", "image_dir", ")", ":", "\n", "    ", "print", "(", "'Loading images from '", ",", "image_dir", ")", "\n", "images", "=", "[", "]", "\n", "args", ".", "tensor_layout", "=", "'NHWC'", "\n", "for", "fn", "in", "os", ".", "listdir", "(", "image_dir", ")", ":", "\n", "        ", "ext", "=", "os", ".", "path", ".", "splitext", "(", "fn", ")", "[", "1", "]", ".", "lower", "(", ")", "\n", "if", "ext", "not", "in", "IMAGE_EXTS", ":", "\n", "            ", "continue", "\n", "", "img_path", "=", "os", ".", "path", ".", "join", "(", "image_dir", ",", "fn", ")", "\n", "img", "=", "imread", "(", "img_path", ")", "\n", "# img = PIL.ImageOps.mirror(img_path)", "\n", "# print(img.shape)", "\n", "if", "len", "(", "img", ".", "shape", ")", "!=", "3", "or", "img", ".", "shape", "[", "2", "]", "!=", "3", ":", "\n", "            ", "print", "(", "'skip one channel image'", ")", "\n", "continue", "\n", "", "if", "args", ".", "image_size", "is", "not", "None", ":", "\n", "            ", "img", "=", "imresize", "(", "img", ",", "(", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ")", "\n", "", "images", ".", "append", "(", "img", ")", "\n", "", "print", "(", "'Found %d images'", "%", "len", "(", "images", ")", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS.get_inception_score": [[111, 149], ["print", "type", "type", "len", "images[].min", "images[].max", "img.astype.astype", "inps.append", "tensorflow.Session", "int", "tqdm.trange", "numpy.concatenate", "range", "numpy.expand_dims", "math.ceil", "sys.stdout.write", "sys.stdout.write", "sys.stdout.flush", "sys.stdout.flush", "numpy.concatenate", "sess.run", "np.concatenate.append", "numpy.mean", "scores.append", "numpy.mean", "numpy.std", "inp.transpose.transpose", "numpy.sum", "numpy.exp", "float", "float", "min", "numpy.log", "numpy.log", "len", "len", "numpy.expand_dims", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.mask_visualize.draw_mask.run"], ["def", "get_inception_score", "(", "args", ",", "images", ")", ":", "\n", "    ", "splits", "=", "args", ".", "num_splits", "\n", "layout", "=", "args", ".", "tensor_layout", "\n", "\n", "assert", "(", "type", "(", "images", ")", "==", "list", ")", "\n", "assert", "(", "type", "(", "images", "[", "0", "]", ")", "==", "np", ".", "ndarray", ")", "\n", "assert", "(", "len", "(", "images", "[", "0", "]", ".", "shape", ")", "==", "3", ")", "\n", "print", "(", "images", "[", "0", "]", ".", "min", "(", ")", ",", "images", "[", "0", "]", ".", "max", "(", ")", ",", "images", "[", "0", "]", ".", "dtype", ")", "\n", "# assert(np.max(images[0]) > 10)", "\n", "# assert(np.min(images[0]) >= 0.0)", "\n", "inps", "=", "[", "]", "\n", "for", "img", "in", "images", ":", "\n", "        ", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "inps", ".", "append", "(", "np", ".", "expand_dims", "(", "img", ",", "0", ")", ")", "\n", "", "bs", "=", "1", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "preds", "=", "[", "]", "\n", "n_batches", "=", "int", "(", "math", ".", "ceil", "(", "float", "(", "len", "(", "inps", ")", ")", "/", "float", "(", "bs", ")", ")", ")", "\n", "n_preds", "=", "0", "\n", "for", "i", "in", "trange", "(", "n_batches", ",", "bar_format", "=", "\"{desc:<5}{percentage:3.0f}%|{bar:10}{r_bar}\"", ")", ":", "\n", "            ", "sys", ".", "stdout", ".", "write", "(", "\".\"", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "inp", "=", "inps", "[", "(", "i", "*", "bs", ")", ":", "min", "(", "(", "i", "+", "1", ")", "*", "bs", ",", "len", "(", "inps", ")", ")", "]", "\n", "inp", "=", "np", ".", "concatenate", "(", "inp", ",", "0", ")", "\n", "if", "layout", "==", "'NCHW'", ":", "\n", "                ", "inp", "=", "inp", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "", "pred", "=", "sess", ".", "run", "(", "softmax", ",", "{", "'ExpandDims:0'", ":", "inp", "}", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "n_preds", "+=", "pred", ".", "shape", "[", "0", "]", "\n", "# print('Ran %d / %d images' % (n_preds, len(images)))", "\n", "", "preds", "=", "np", ".", "concatenate", "(", "preds", ",", "0", ")", "\n", "scores", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "splits", ")", ":", "\n", "            ", "part", "=", "preds", "[", "(", "i", "*", "preds", ".", "shape", "[", "0", "]", "//", "splits", ")", ":", "(", "(", "i", "+", "1", ")", "*", "preds", ".", "shape", "[", "0", "]", "//", "splits", ")", ",", ":", "]", "\n", "kl", "=", "part", "*", "(", "np", ".", "log", "(", "part", ")", "-", "np", ".", "log", "(", "np", ".", "expand_dims", "(", "np", ".", "mean", "(", "part", ",", "0", ")", ",", "0", ")", ")", ")", "\n", "kl", "=", "np", ".", "mean", "(", "np", ".", "sum", "(", "kl", ",", "1", ")", ")", "\n", "scores", ".", "append", "(", "np", ".", "exp", "(", "kl", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "scores", ")", ",", "np", ".", "std", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.IS._init_inception": [[152, 192], ["os.path.join", "tarfile.open().extractall", "os.path.exists", "os.makedirs", "DATA_URL.split", "os.path.exists", "six.moves.urllib.request.urlretrieve", "print", "os.stat", "print", "tensorflow.gfile.FastGFile", "tensorflow.GraphDef", "tf.GraphDef.ParseFromString", "tensorflow.import_graph_def", "tensorflow.Session", "sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name.graph.get_operations", "enumerate", "tensorflow.matmul", "tensorflow.nn.softmax", "sys.stdout.write", "sys.stdout.write", "sys.stdout.flush", "sys.stdout.flush", "tarfile.open", "os.path.join", "f.read", "tensorflow.squeeze", "o.get_shape", "enumerate", "o.set_shape", "sess.graph.get_operation_by_name", "tensorflow.TensorShape", "new_shape.append", "new_shape.append", "float", "float"], "function", ["None"], ["", "", "def", "_init_inception", "(", ")", ":", "\n", "    ", "global", "softmax", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "MODEL_DIR", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "MODEL_DIR", ")", "\n", "", "filename", "=", "DATA_URL", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "MODEL_DIR", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "filepath", ")", ":", "\n", "        ", "def", "_progress", "(", "count", ",", "block_size", ",", "total_size", ")", ":", "\n", "            ", "sys", ".", "stdout", ".", "write", "(", "'\\r>> Downloading %s %.1f%%'", "%", "(", "\n", "filename", ",", "float", "(", "count", "*", "block_size", ")", "/", "float", "(", "total_size", ")", "*", "100.0", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "filepath", ",", "_", "=", "urllib", ".", "request", ".", "urlretrieve", "(", "DATA_URL", ",", "filepath", ",", "_progress", ")", "\n", "print", "(", ")", "\n", "statinfo", "=", "os", ".", "stat", "(", "filepath", ")", "\n", "print", "(", "'Succesfully downloaded'", ",", "filename", ",", "statinfo", ".", "st_size", ",", "'bytes.'", ")", "\n", "", "tarfile", ".", "open", "(", "filepath", ",", "'r:gz'", ")", ".", "extractall", "(", "MODEL_DIR", ")", "\n", "with", "tf", ".", "gfile", ".", "FastGFile", "(", "os", ".", "path", ".", "join", "(", "\n", "MODEL_DIR", ",", "'classify_image_graph_def.pb'", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "graph_def", "=", "tf", ".", "GraphDef", "(", ")", "\n", "graph_def", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "_", "=", "tf", ".", "import_graph_def", "(", "graph_def", ",", "name", "=", "''", ")", "\n", "# Works with an arbitrary minibatch size.", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "pool3", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "'pool_3:0'", ")", "\n", "ops", "=", "pool3", ".", "graph", ".", "get_operations", "(", ")", "\n", "for", "op_idx", ",", "op", "in", "enumerate", "(", "ops", ")", ":", "\n", "            ", "for", "o", "in", "op", ".", "outputs", ":", "\n", "                ", "shape", "=", "o", ".", "get_shape", "(", ")", "\n", "shape", "=", "[", "s", ".", "value", "for", "s", "in", "shape", "]", "\n", "new_shape", "=", "[", "]", "\n", "for", "j", ",", "s", "in", "enumerate", "(", "shape", ")", ":", "\n", "                    ", "if", "s", "==", "1", "and", "j", "==", "0", ":", "\n", "                        ", "new_shape", ".", "append", "(", "None", ")", "\n", "", "else", ":", "\n", "                        ", "new_shape", ".", "append", "(", "s", ")", "\n", "", "", "o", ".", "set_shape", "(", "tf", ".", "TensorShape", "(", "new_shape", ")", ")", "\n", "", "", "w", "=", "sess", ".", "graph", ".", "get_operation_by_name", "(", "\"softmax/logits/MatMul\"", ")", ".", "inputs", "[", "1", "]", "\n", "logits", "=", "tf", ".", "matmul", "(", "tf", ".", "squeeze", "(", "pool3", ",", "[", "1", ",", "2", "]", ")", ",", "w", ")", "\n", "softmax", "=", "tf", ".", "nn", ".", "softmax", "(", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app_nogeo.get_dataset": [[25, 39], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open('./datasets/vg/vocab.json','r') as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_context_app_nogeo.main": [[41, 195], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_context_app_nogeo.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_vg.context_aware_generator().to", "model.rcnn_discriminator_app.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "enumerate", "model.resnet_generator_vg.context_aware_generator", "model.rcnn_discriminator_app.CombineDiscriminator128_app", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "nn.DataParallel.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "d_loss_real.item", "d_loss_robj.item", "d_loss_robj_app.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "d_loss_fobj_app.item", "g_loss_fake.item", "g_loss_obj_app.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", "+", "'_no_geo'", ",", "str", "(", "img_size", ")", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "# parallel = False", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "# print(d_loss_robj)", "\n", "# print(d_loss_robj_app)", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "10000", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"robj_app\"", ":", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "\"fobj_app\"", ":", "d_loss_fobj_app", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj_app\"", ":", "g_loss_obj_app", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "200", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "torch", ".", "save", "(", "netD", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'D_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours_d.get_dataset": [[24, 35], ["data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "h5_path", "=", "'./data/tmp/preprocess_vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "30", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours_d.main": [[37, 188], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_ours_d.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_v2.ResnetGenerator128().to", "model.rcnn_discriminator_app.CombineDiscriminator128_app().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "enumerate", "model.resnet_generator_v2.ResnetGenerator128", "model.rcnn_discriminator_app.CombineDiscriminator128_app", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "tensorboardX.SummaryWriter.add_scalars", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "label.squeeze", "g_out_fake.mean", "g_out_obj.mean", "g_out_obj_app.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "d_loss_robj_app.item", "d_loss_fobj_app.item", "g_loss_obj_app.item", "l1_loss().mean.item", "vgg_loss().mean.item", "d_loss_real.item", "d_loss_robj.item", "d_loss_robj_app.item", "d_loss.item", "d_loss_fake.item", "d_loss_fobj.item", "d_loss_fobj_app.item", "g_loss_fake.item", "g_loss_obj.item", "g_loss.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "args", ".", "img_size", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_app", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "args", ".", "img_size", ")", ")", "\n", "\n", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "netG", "=", "ResnetGenerator128", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128_app", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "parallel", "=", "True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", ",", "d_out_robj_app", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "d_loss_robj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj_app", ")", ".", "mean", "(", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "fake_images", "=", "netG", "(", "z", ",", "bbox", ",", "y", "=", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "d_out_fake", ",", "d_out_fobj", ",", "d_out_fobj_app", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj_app", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj_app", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "+", "lamb_app", "*", "(", "d_loss_robj_app", "+", "d_loss_fobj_app", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", ",", "g_out_obj_app", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "g_loss_obj_app", "=", "-", "g_out_obj_app", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "+", "lamb_app", "*", "g_loss_obj_app", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             d_obj_real_app: {:.4f}, d_obj_fake_app: {:.4f}, g_obj_fake_app: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "d_loss_fobj_app", ".", "item", "(", ")", ",", "\n", "g_loss_obj_app", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"             pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_real\"", ",", "{", "\"real\"", ":", "d_loss_real", ".", "item", "(", ")", ",", "\n", "\"robj\"", ":", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "\"robj_app\"", ":", "d_loss_robj_app", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "d_loss", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"D_loss_fake\"", ",", "{", "\"fake\"", ":", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "\"fobj\"", ":", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "\"fobj_app\"", ":", "d_loss_fobj_app", ".", "item", "(", ")", "}", ")", "\n", "writer", ".", "add_scalars", "(", "\"G_loss\"", ",", "{", "\"fake\"", ":", "g_loss_fake", ".", "item", "(", ")", ",", "\n", "\"obj\"", ":", "g_loss_obj", ".", "item", "(", ")", ",", "\n", "\"loss\"", ":", "g_loss", ".", "item", "(", ")", "}", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app_nogeo.get_dataloader": [[28, 46], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "# with open(\"./datasets/vg/vocab.json\", \"r\") as read_file:", "\n", "#     vocab = json.load(read_file)", "\n", "        ", "dataset", "=", "VgSceneGraphDataset", "(", "vocab_json", "=", "'./data/tmp/vocab.json'", ",", "\n", "h5_path", "=", "'./data/tmp/preprocess_vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context_app_nogeo.main": [[48, 97], ["torch.device", "torch.device", "torch.device", "args.model_path.format", "args.sample_path.format", "test_context_app_nogeo.get_dataloader", "model.resnet_generator_vg.context_aware_generator().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "context_aware_generator().to.state_dict", "netG.state_dict.update", "context_aware_generator().to.load_state_dict", "context_aware_generator().to.cuda", "context_aware_generator().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_vg.context_aware_generator", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "context_aware_generator().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "args", ".", "num_img", "=", "1", "if", "args", ".", "dataset", "==", "'vg'", "else", "5", "\n", "\n", "args", ".", "model_path", "=", "args", ".", "model_path", ".", "format", "(", "args", ".", "dataset", ",", "args", ".", "load_eopch", ")", "\n", "args", ".", "sample_path", "=", "args", ".", "sample_path", ".", "format", "(", "args", ".", "dataset", ",", "args", ".", "load_eopch", ")", "\n", "\n", "if", "args", ".", "num_img", ">", "1", ":", "\n", "        ", "args", ".", "sample_path", "+=", "'_{}'", ".", "format", "(", "args", ".", "num_img", ")", "\n", "\n", "", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "# z_obj = torch.from_numpy(truncted_random(num_o=num_o, thres=thres)).float().cuda()", "\n", "# z_im = torch.from_numpy(truncted_random(num_o=1, thres=thres)).view(1, -1).float().cuda()", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "# img_orig = imagenet_deprocess_orig(real_images)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours_layout2img.get_dataset": [[23, 34], ["data.cocostuff_loader_ours.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "h5_path", "=", "'./datasets/vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "10", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours_layout2img.main": [[36, 165], ["train_ours_layout2img.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_v1.background_foreground_generator().to", "CombineDiscriminator128().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "enumerate", "model.resnet_generator_v1.background_foreground_generator", "CombineDiscriminator128", "dict", "dict", "os.path.join", "os.path.join", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "label_f.long().to", "bbox_f.float", "label_b.long().to", "bbox_b.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "g_out_fake.mean", "g_out_obj.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label_f.long", "label_b.long", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "l1_loss().mean.item", "vgg_loss().mean.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "128", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "if", "args", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "background_cls", "=", "92", "\n", "foreground_cls", "=", "91", "\n", "", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "# data loader", "\n", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "#netG = ResnetGenerator128(num_classes=num_classes, output_dim=3).to(device)", "\n", "netG", "=", "background_foreground_generator", "(", "background_cla", "=", "background_cls", ",", "foreground_cla", "=", "foreground_cls", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "netD", "=", "CombineDiscriminator128", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "parallel", "=", "True", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "#real_images, label, bbox = real_images.to(device), label.long().to(device).unsqueeze(-1), bbox.float()", "\n", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", ",", "label_f", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_f", ".", "float", "(", ")", ",", "label_b", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_b", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "\n", "z_f", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "z_b", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "# fake_images = netG(z, bbox, y=label.squeeze(dim=-1))", "\n", "fake_images", "=", "netG", "(", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "y_f", "=", "label_f", ",", "y_b", "=", "label_b", ")", "\n", "# print(fake_images.shape)", "\n", "d_out_fake", ",", "d_out_fobj", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.generate_original_image.imagenet_deprocess": [[29, 37], ["torchvision.Compose", "torchvision.Normalize", "torchvision.Normalize", "transforms.append"], "function", ["None"], ["def", "imagenet_deprocess", "(", "rescale_image", "=", "True", ")", ":", "\n", "    ", "transforms", "=", "[", "\n", "T", ".", "Normalize", "(", "mean", "=", "[", "0", ",", "0", ",", "0", "]", ",", "std", "=", "INV_IMAGENET_STD", ")", ",", "\n", "T", ".", "Normalize", "(", "mean", "=", "INV_IMAGENET_MEAN", ",", "std", "=", "[", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "]", "\n", "if", "rescale_image", ":", "\n", "        ", "transforms", ".", "append", "(", "rescale", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_layout2img.main": [[17, 213], ["torch.device", "torch.device", "torch.device", "utils.model_saver.prepare_dir", "models.generator.Generator().to", "models.discriminator.ImageDiscriminator().to", "models.discriminator.ObjectDiscriminator().to", "models.discriminator.add_sn", "models.discriminator.add_sn", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "utils.model_saver.load_model", "utils.model_saver.load_model", "utils.model_saver.load_model", "iter", "data.vg_custom_mask.get_dataloader", "Generator().to.parameters", "models.discriminator.add_sn.parameters", "models.discriminator.add_sn.parameters", "range", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "data.coco_custom_mask.get_dataloader", "models.generator.Generator", "models.discriminator.ImageDiscriminator", "models.discriminator.ObjectDiscriminator", "tensorboardX.SummaryWriter", "torch.randn", "torch.randn", "torch.randn", "Generator().to.", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "torch.cross_entropy", "models.discriminator.add_sn.zero_grad", "models.discriminator.add_sn.zero_grad", "d_loss.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "d_loss.item", "F.binary_cross_entropy_with_logits.item", "d_image_adv_loss_fake.item", "F.binary_cross_entropy_with_logits.item", "d_object_adv_loss_fake.item", "F.cross_entropy.item", "Generator().to.", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "mu.pow().add_().mul_().add_().add_", "torch.sum().mul_", "torch.sum().mul_", "torch.sum().mul_", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "torch.cross_entropy", "models.discriminator.add_sn.", "torch.binary_cross_entropy_with_logits", "torch.cross_entropy", "Generator().to.zero_grad", "g_loss.backward", "torch.optim.Adam.step", "g_loss.item", "g_image_adv_loss_fake.item", "g_object_adv_loss.item", "g_object_cls_loss.item", "torch.abs().mean.item", "torch.abs().mean.item", "torch.sum().mul_.item", "tensorboardX.SummaryWriter.close", "next", "objs.size", "imgs.to", "objs.to", "boxes.to", "masks.to", "torch.randn.to", "img_rec.detach", "torch.full_like", "torch.full_like", "torch.full_like", "img_rand.detach", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "crops_input_rec.detach", "torch.full_like", "torch.full_like", "torch.full_like", "crops_rand.detach", "torch.full_like", "torch.full_like", "torch.full_like", "crops_input.detach", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "loss.items", "print", "loss.items", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "utils.model_saver.save_model", "utils.model_saver.save_model", "utils.model_saver.save_model", "iter", "next", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "mu.pow().add_().mul_().add_", "torch.sum", "torch.sum", "torch.sum", "tensorboardX.SummaryWriter.add_scalar", "utils.data.imagenet_deprocess_batch().float", "utils.data.imagenet_deprocess_batch().float", "utils.data.imagenet_deprocess_batch().float", "utils.data.imagenet_deprocess_batch().float", "utils.data.imagenet_deprocess_batch().float", "utils.data.imagenet_deprocess_batch().float", "mu.pow().add_().mul_", "utils.data.imagenet_deprocess_batch", "utils.data.imagenet_deprocess_batch", "utils.data.imagenet_deprocess_batch", "utils.data.imagenet_deprocess_batch", "utils.data.imagenet_deprocess_batch", "utils.data.imagenet_deprocess_batch", "mu.pow().add_", "logvar.exp", "mu.pow"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.prepare_dir", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.add_sn", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.add_sn", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.load_model", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.load_model", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.load_model", "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.save_model", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.save_model", "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.save_model", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch"], ["def", "main", "(", "config", ")", ":", "\n", "    ", "cudnn", ".", "benchmark", "=", "True", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "log_save_dir", ",", "model_save_dir", ",", "sample_save_dir", ",", "result_save_dir", "=", "prepare_dir", "(", "config", ".", "exp_name", ")", "\n", "\n", "if", "config", ".", "dataset", "==", "'vg'", ":", "\n", "        ", "data_loader", ",", "_", "=", "get_dataloader_vg", "(", "batch_size", "=", "config", ".", "batch_size", ",", "VG_DIR", "=", "config", ".", "vg_dir", ")", "\n", "", "elif", "config", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "data_loader", ",", "_", "=", "get_dataloader_coco", "(", "batch_size", "=", "config", ".", "batch_size", ",", "COCO_DIR", "=", "config", ".", "coco_dir", ")", "\n", "", "vocab_num", "=", "data_loader", ".", "dataset", ".", "num_objects", "\n", "\n", "assert", "config", ".", "clstm_layers", ">", "0", "\n", "\n", "netG", "=", "Generator", "(", "num_embeddings", "=", "vocab_num", ",", "\n", "embedding_dim", "=", "config", ".", "embedding_dim", ",", "\n", "z_dim", "=", "config", ".", "z_dim", ",", "\n", "clstm_layers", "=", "config", ".", "clstm_layers", ")", ".", "to", "(", "device", ")", "\n", "netD_image", "=", "ImageDiscriminator", "(", "conv_dim", "=", "config", ".", "embedding_dim", ")", ".", "to", "(", "device", ")", "\n", "netD_object", "=", "ObjectDiscriminator", "(", "n_class", "=", "vocab_num", ")", ".", "to", "(", "device", ")", "\n", "\n", "netD_image", "=", "add_sn", "(", "netD_image", ")", "\n", "netD_object", "=", "add_sn", "(", "netD_object", ")", "\n", "\n", "netG_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "netG", ".", "parameters", "(", ")", ",", "config", ".", "learning_rate", ",", "[", "0.5", ",", "0.999", "]", ")", "\n", "netD_image_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "netD_image", ".", "parameters", "(", ")", ",", "config", ".", "learning_rate", ",", "[", "0.5", ",", "0.999", "]", ")", "\n", "netD_object_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "netD_object", ".", "parameters", "(", ")", ",", "config", ".", "learning_rate", ",", "[", "0.5", ",", "0.999", "]", ")", "\n", "\n", "start_iter", "=", "load_model", "(", "netG", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netG'", ",", "iter", "=", "config", ".", "resume_iter", ")", "\n", "_", "=", "load_model", "(", "netD_image", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netD_image'", ",", "iter", "=", "config", ".", "resume_iter", ")", "\n", "_", "=", "load_model", "(", "netD_object", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netD_object'", ",", "iter", "=", "config", ".", "resume_iter", ")", "\n", "\n", "data_iter", "=", "iter", "(", "data_loader", ")", "\n", "\n", "if", "start_iter", "<", "config", ".", "niter", ":", "\n", "\n", "        ", "if", "config", ".", "use_tensorboard", ":", "\n", "            ", "writer", "=", "SummaryWriter", "(", "log_save_dir", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "start_iter", ",", "config", ".", "niter", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "batch", "=", "next", "(", "data_iter", ")", "\n", "", "except", ":", "\n", "                ", "data_iter", "=", "iter", "(", "data_loader", ")", "\n", "batch", "=", "next", "(", "data_iter", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             1. Preprocess input data                                #", "\n", "# =================================================================================== #", "\n", "", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", "=", "batch", "\n", "z", "=", "torch", ".", "randn", "(", "objs", ".", "size", "(", "0", ")", ",", "config", ".", "z_dim", ")", "\n", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z", "=", "imgs", ".", "to", "(", "device", ")", ",", "objs", ".", "to", "(", "device", ")", ",", "boxes", ".", "to", "(", "device", ")", ",", "masks", ".", "to", "(", "device", ")", ",", "obj_to_img", ",", "z", ".", "to", "(", "device", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                             2. Train the discriminator                              #", "\n", "# =================================================================================== #", "\n", "\n", "# Generate fake image", "\n", "output", "=", "netG", "(", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z", ")", "\n", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "=", "output", "\n", "\n", "# Compute image adv loss with fake images.", "\n", "out_logits", "=", "netD_image", "(", "img_rec", ".", "detach", "(", ")", ")", "\n", "d_image_adv_loss_fake_rec", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "0", ")", ")", "\n", "\n", "out_logits", "=", "netD_image", "(", "img_rand", ".", "detach", "(", ")", ")", "\n", "d_image_adv_loss_fake_rand", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "0", ")", ")", "\n", "\n", "d_image_adv_loss_fake", "=", "0.5", "*", "d_image_adv_loss_fake_rec", "+", "0.5", "*", "d_image_adv_loss_fake_rand", "\n", "\n", "# Compute image src loss with real images rec.", "\n", "out_logits", "=", "netD_image", "(", "imgs", ")", "\n", "d_image_adv_loss_real", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "1", ")", ")", "\n", "\n", "# Compute object sn adv loss with fake rec crops", "\n", "out_logits", ",", "_", "=", "netD_object", "(", "crops_input_rec", ".", "detach", "(", ")", ",", "objs", ")", "\n", "g_object_adv_loss_rec", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "0", ")", ")", "\n", "\n", "# Compute object sn adv loss with fake rand crops", "\n", "out_logits", ",", "_", "=", "netD_object", "(", "crops_rand", ".", "detach", "(", ")", ",", "objs", ")", "\n", "d_object_adv_loss_fake_rand", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "0", ")", ")", "\n", "\n", "d_object_adv_loss_fake", "=", "0.5", "*", "g_object_adv_loss_rec", "+", "0.5", "*", "d_object_adv_loss_fake_rand", "\n", "\n", "# Compute object sn adv loss with real crops.", "\n", "out_logits_src", ",", "out_logits_cls", "=", "netD_object", "(", "crops_input", ".", "detach", "(", ")", ",", "objs", ")", "\n", "d_object_adv_loss_real", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits_src", ",", "torch", ".", "full_like", "(", "out_logits_src", ",", "1", ")", ")", "\n", "d_object_cls_loss_real", "=", "F", ".", "cross_entropy", "(", "out_logits_cls", ",", "objs", ")", "\n", "\n", "# Backward and optimizloe.", "\n", "d_loss", "=", "0", "\n", "d_loss", "+=", "config", ".", "lambda_img_adv", "*", "(", "d_image_adv_loss_fake", "+", "d_image_adv_loss_real", ")", "\n", "d_loss", "+=", "config", ".", "lambda_obj_adv", "*", "(", "d_object_adv_loss_fake", "+", "d_object_adv_loss_real", ")", "\n", "d_loss", "+=", "config", ".", "lambda_obj_cls", "*", "d_object_cls_loss_real", "\n", "\n", "netD_image", ".", "zero_grad", "(", ")", "\n", "netD_object", ".", "zero_grad", "(", ")", "\n", "\n", "d_loss", ".", "backward", "(", ")", "\n", "\n", "netD_image_optimizer", ".", "step", "(", ")", "\n", "netD_object_optimizer", ".", "step", "(", ")", "\n", "\n", "# Logging.", "\n", "loss", "=", "{", "}", "\n", "loss", "[", "'D/loss'", "]", "=", "d_loss", ".", "item", "(", ")", "\n", "loss", "[", "'D/image_adv_loss_real'", "]", "=", "d_image_adv_loss_real", ".", "item", "(", ")", "\n", "loss", "[", "'D/image_adv_loss_fake'", "]", "=", "d_image_adv_loss_fake", ".", "item", "(", ")", "\n", "loss", "[", "'D/object_adv_loss_real'", "]", "=", "d_object_adv_loss_real", ".", "item", "(", ")", "\n", "loss", "[", "'D/object_adv_loss_fake'", "]", "=", "d_object_adv_loss_fake", ".", "item", "(", ")", "\n", "loss", "[", "'D/object_cls_loss_real'", "]", "=", "d_object_cls_loss_real", ".", "item", "(", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                               3. Train the generator                                #", "\n", "# =================================================================================== #", "\n", "# Generate fake image", "\n", "output", "=", "netG", "(", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z", ")", "\n", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "=", "output", "\n", "\n", "# reconstruction loss of ae and img", "\n", "g_img_rec_loss", "=", "torch", ".", "abs", "(", "img_rec", "-", "imgs", ")", ".", "mean", "(", ")", "\n", "g_z_rec_loss", "=", "torch", ".", "abs", "(", "z_rand_rec", "-", "z", ")", ".", "mean", "(", ")", "\n", "\n", "# kl loss", "\n", "kl_element", "=", "mu", ".", "pow", "(", "2", ")", ".", "add_", "(", "logvar", ".", "exp", "(", ")", ")", ".", "mul_", "(", "-", "1", ")", ".", "add_", "(", "1", ")", ".", "add_", "(", "logvar", ")", "\n", "g_kl_loss", "=", "torch", ".", "sum", "(", "kl_element", ")", ".", "mul_", "(", "-", "0.5", ")", "\n", "\n", "# Compute image adv loss with fake images.", "\n", "out_logits", "=", "netD_image", "(", "img_rec", ")", "\n", "g_image_adv_loss_fake_rec", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "1", ")", ")", "\n", "\n", "out_logits", "=", "netD_image", "(", "img_rand", ")", "\n", "g_image_adv_loss_fake_rand", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits", ",", "torch", ".", "full_like", "(", "out_logits", ",", "1", ")", ")", "\n", "\n", "g_image_adv_loss_fake", "=", "0.5", "*", "g_image_adv_loss_fake_rec", "+", "0.5", "*", "g_image_adv_loss_fake_rand", "\n", "\n", "# Compute object adv loss with fake images.", "\n", "out_logits_src", ",", "out_logits_cls", "=", "netD_object", "(", "crops_input_rec", ",", "objs", ")", "\n", "g_object_adv_loss_rec", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits_src", ",", "torch", ".", "full_like", "(", "out_logits_src", ",", "1", ")", ")", "\n", "g_object_cls_loss_rec", "=", "F", ".", "cross_entropy", "(", "out_logits_cls", ",", "objs", ")", "\n", "\n", "out_logits_src", ",", "out_logits_cls", "=", "netD_object", "(", "crops_rand", ",", "objs", ")", "\n", "g_object_adv_loss_rand", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "out_logits_src", ",", "torch", ".", "full_like", "(", "out_logits_src", ",", "1", ")", ")", "\n", "g_object_cls_loss_rand", "=", "F", ".", "cross_entropy", "(", "out_logits_cls", ",", "objs", ")", "\n", "\n", "g_object_adv_loss", "=", "0.5", "*", "g_object_adv_loss_rec", "+", "0.5", "*", "g_object_adv_loss_rand", "\n", "g_object_cls_loss", "=", "0.5", "*", "g_object_cls_loss_rec", "+", "0.5", "*", "g_object_cls_loss_rand", "\n", "\n", "# Backward and optimize.", "\n", "g_loss", "=", "0", "\n", "g_loss", "+=", "config", ".", "lambda_img_rec", "*", "g_img_rec_loss", "\n", "g_loss", "+=", "config", ".", "lambda_z_rec", "*", "g_z_rec_loss", "\n", "g_loss", "+=", "config", ".", "lambda_img_adv", "*", "g_image_adv_loss_fake", "\n", "g_loss", "+=", "config", ".", "lambda_obj_adv", "*", "g_object_adv_loss", "\n", "g_loss", "+=", "config", ".", "lambda_obj_cls", "*", "g_object_cls_loss", "\n", "g_loss", "+=", "config", ".", "lambda_kl", "*", "g_kl_loss", "\n", "\n", "netG", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "netG_optimizer", ".", "step", "(", ")", "\n", "\n", "loss", "[", "'G/loss'", "]", "=", "g_loss", ".", "item", "(", ")", "\n", "loss", "[", "'G/image_adv_loss'", "]", "=", "g_image_adv_loss_fake", ".", "item", "(", ")", "\n", "loss", "[", "'G/object_adv_loss'", "]", "=", "g_object_adv_loss", ".", "item", "(", ")", "\n", "loss", "[", "'G/object_cls_loss'", "]", "=", "g_object_cls_loss", ".", "item", "(", ")", "\n", "loss", "[", "'G/rec_img'", "]", "=", "g_img_rec_loss", ".", "item", "(", ")", "\n", "loss", "[", "'G/rec_z'", "]", "=", "g_z_rec_loss", ".", "item", "(", ")", "\n", "loss", "[", "'G/kl'", "]", "=", "g_kl_loss", ".", "item", "(", ")", "\n", "\n", "# =================================================================================== #", "\n", "#                               4. Log                                                #", "\n", "# =================================================================================== #", "\n", "if", "(", "i", "+", "1", ")", "%", "config", ".", "log_step", "==", "0", ":", "\n", "                ", "log", "=", "'iter [{:06d}/{:06d}]'", ".", "format", "(", "i", "+", "1", ",", "config", ".", "niter", ")", "\n", "for", "tag", ",", "roi_value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                    ", "log", "+=", "\", {}: {:.4f}\"", ".", "format", "(", "tag", ",", "roi_value", ")", "\n", "", "print", "(", "log", ")", "\n", "\n", "", "if", "(", "i", "+", "1", ")", "%", "config", ".", "tensorboard_step", "==", "0", "and", "config", ".", "use_tensorboard", ":", "\n", "                ", "for", "tag", ",", "roi_value", "in", "loss", ".", "items", "(", ")", ":", "\n", "                    ", "writer", ".", "add_scalar", "(", "tag", ",", "roi_value", ",", "i", "+", "1", ")", "\n", "", "writer", ".", "add_image", "(", "'Result/crop_real'", ",", "imagenet_deprocess_batch", "(", "crops_input", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "'Result/crop_real_rec'", ",", "imagenet_deprocess_batch", "(", "crops_input_rec", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "'Result/crop_rand'", ",", "imagenet_deprocess_batch", "(", "crops_rand", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "'Result/img_real'", ",", "imagenet_deprocess_batch", "(", "imgs", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "'Result/img_real_rec'", ",", "imagenet_deprocess_batch", "(", "img_rec", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "'Result/img_fake_rand'", ",", "imagenet_deprocess_batch", "(", "img_rand", ")", ".", "float", "(", ")", "/", "255", ",", "i", "+", "1", ")", "\n", "\n", "", "if", "(", "i", "+", "1", ")", "%", "config", ".", "save_step", "==", "0", ":", "\n", "                ", "save_model", "(", "netG", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netG'", ",", "iter", "=", "i", "+", "1", ",", "save_num", "=", "5", ",", "save_step", "=", "config", ".", "save_step", ")", "\n", "save_model", "(", "netD_image", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netD_image'", ",", "iter", "=", "i", "+", "1", ",", "save_num", "=", "5", ",", "save_step", "=", "config", ".", "save_step", ")", "\n", "save_model", "(", "netD_object", ",", "model_dir", "=", "model_save_dir", ",", "appendix", "=", "'netD_object'", ",", "iter", "=", "i", "+", "1", ",", "save_num", "=", "5", ",", "save_step", "=", "config", ".", "save_step", ")", "\n", "\n", "", "", "if", "config", ".", "use_tensorboard", ":", "\n", "            ", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset": [[24, 35], ["data.cocostuff_loader_ours.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset"], "function", ["None"], ["def", "get_dataset", "(", "dataset", ",", "img_size", ")", ":", "\n", "    ", "if", "dataset", "==", "\"coco\"", ":", "\n", "        ", "data", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/train2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_train2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_train2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "True", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "data", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "h5_path", "=", "'./datasets/vg/train.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "max_objects", "=", "10", ",", "left_right_flip", "=", "True", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.main": [[37, 180], ["os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "train_ours.get_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "model.resnet_generator_v1.background_foreground_generator().to", "CombineDiscriminator64().to", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict().items", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "tensorboardX.SummaryWriter", "utils.logger.setup_logger", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "time.time", "utils.util.VGGLoss", "torch.DataParallel", "torch.DataParallel", "range", "str", "os.path.exists", "os.makedirs", "model.sync_batchnorm.DataParallelWithCallback", "torch.DataParallel", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "os.path.join", "torch.L1Loss", "model.sync_batchnorm.DataParallelWithCallback.train", "nn.DataParallel.train", "print", "print", "enumerate", "model.resnet_generator_v1.background_foreground_generator", "CombineDiscriminator64", "dict", "dict", "os.path.join", "os.path.join", "tqdm.tqdm", "nn.DataParallel.zero_grad", "nn.DataParallel.", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "model.sync_batchnorm.DataParallelWithCallback.", "nn.DataParallel.", "d_loss.backward", "torch.optim.Adam.step", "torch.save", "torch.save", "torch.save", "model.sync_batchnorm.DataParallelWithCallback.named_parameters", "nn.DataParallel.named_parameters", "real_images.to", "label.long().to().unsqueeze", "bbox.float", "label_f.long().to", "bbox_f.float", "label_b.long().to", "bbox_b.float", "real_images.to", "label.long().to", "netG.detach", "model.sync_batchnorm.DataParallelWithCallback.zero_grad", "nn.DataParallel.", "nn.DataParallel.mean", "nn.DataParallel.mean", "g_loss.backward", "torch.optim.Adam.step", "str", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "utils.logger.setup_logger.info", "tensorboardX.SummaryWriter.add_image", "tensorboardX.SummaryWriter.add_image", "model.sync_batchnorm.DataParallelWithCallback.state_dict", "os.path.join", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "g_out_fake.mean", "g_out_obj.mean", "time.time", "datetime.timedelta", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "label.long().to", "label_f.long", "label_b.long", "label.long", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "real_images.size", "real_images.size", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "nn.DataParallel.", "nn.DataParallel.", "d_loss_real.item", "d_loss_fake.item", "g_loss_fake.item", "d_loss_robj.item", "d_loss_fobj.item", "g_loss_obj.item", "l1_loss().mean.item", "vgg_loss().mean.item", "label.long", "len", "len", "real_images.cpu", "netG.cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.train_ours.get_dataset", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger"], ["", "def", "main", "(", "args", ")", ":", "\n", "# parameters", "\n", "    ", "img_size", "=", "args", ".", "img_size", "\n", "z_dim", "=", "128", "\n", "lamb_obj", "=", "1.0", "\n", "lamb_img", "=", "0.1", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "if", "args", ".", "dataset", "==", "'coco'", ":", "\n", "        ", "background_cls", "=", "92", "\n", "foreground_cls", "=", "91", "\n", "", "num_obj", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "args", ".", "out_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "args", ".", "dataset", ",", "str", "(", "args", ".", "img_size", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "out_path", ")", "\n", "\n", "", "num_gpus", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "num_workers", "=", "2", "\n", "if", "num_gpus", ">", "1", ":", "\n", "        ", "parallel", "=", "True", "\n", "args", ".", "batch_size", "=", "args", ".", "batch_size", "*", "num_gpus", "\n", "num_workers", "=", "num_workers", "*", "num_gpus", "\n", "", "else", ":", "\n", "        ", "parallel", "=", "False", "\n", "\n", "# data loader", "\n", "", "train_data", "=", "get_dataset", "(", "args", ".", "dataset", ",", "img_size", ")", "\n", "\n", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_data", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# Load model", "\n", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "#netG = ResnetGenerator128(num_classes=num_classes, output_dim=3).to(device)", "\n", "netG", "=", "background_foreground_generator", "(", "background_cla", "=", "background_cls", ",", "foreground_cla", "=", "foreground_cls", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "# netD = CombineDiscriminator128(num_classes=num_classes).to(device)", "\n", "netD", "=", "CombineDiscriminator64", "(", "num_classes", "=", "num_classes", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "parallel", ":", "\n", "        ", "netG", "=", "DataParallelWithCallback", "(", "netG", ")", "\n", "netD", "=", "nn", ".", "DataParallel", "(", "netD", ")", "\n", "\n", "", "g_lr", ",", "d_lr", "=", "args", ".", "g_lr", ",", "args", ".", "d_lr", "\n", "gen_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netG", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "if", "'mapping'", "in", "key", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "*", "0.1", "}", "]", "\n", "", "else", ":", "\n", "                ", "gen_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "g_lr", "}", "]", "\n", "\n", "", "", "", "g_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gen_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "dis_parameters", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "dict", "(", "netD", ".", "named_parameters", "(", ")", ")", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ".", "requires_grad", ":", "\n", "            ", "dis_parameters", "+=", "[", "{", "'params'", ":", "[", "value", "]", ",", "'lr'", ":", "d_lr", "}", "]", "\n", "", "", "d_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "dis_parameters", ",", "betas", "=", "(", "0", ",", "0.999", ")", ")", "\n", "\n", "# make dirs", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "out_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "out_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ")", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'log'", ")", ")", "\n", "\n", "logger", "=", "setup_logger", "(", "\"lostGAN\"", ",", "args", ".", "out_path", ",", "0", ")", "\n", "logger", ".", "info", "(", "netG", ")", "\n", "logger", ".", "info", "(", "netD", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "vgg_loss", "=", "VGGLoss", "(", ")", "\n", "vgg_loss", "=", "nn", ".", "DataParallel", "(", "vgg_loss", ")", "\n", "l1_loss", "=", "nn", ".", "DataParallel", "(", "nn", ".", "L1Loss", "(", ")", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "total_epoch", ")", ":", "\n", "        ", "netG", ".", "train", "(", ")", "\n", "netD", ".", "train", "(", ")", "\n", "print", "(", "\"============================\"", ")", "\n", "print", "(", "\"Training {}th epoch\"", ".", "format", "(", "epoch", ")", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "tqdm", "(", "dataloader", ")", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "data", "\n", "# print(real_images.shape)", "\n", "# print(label.shape)", "\n", "# print(bbox.shape)", "\n", "# real_images, label, bbox = real_images.to(device), label.long().to(device).unsqueeze(-1), bbox.float()", "\n", "real_images", ",", "label", ",", "bbox", ",", "label_f", ",", "bbox_f", ",", "label_b", ",", "bbox_b", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "bbox", ".", "float", "(", ")", ",", "label_f", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_f", ".", "float", "(", ")", ",", "label_b", ".", "long", "(", ")", ".", "to", "(", "device", ")", ",", "bbox_b", ".", "float", "(", ")", "\n", "\n", "# update D network", "\n", "netD", ".", "zero_grad", "(", ")", "\n", "real_images", ",", "label", "=", "real_images", ".", "to", "(", "device", ")", ",", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "d_out_real", ",", "d_out_robj", "=", "netD", "(", "real_images", ",", "bbox", ",", "label", ")", "\n", "d_loss_real", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_real", ")", ".", "mean", "(", ")", "\n", "d_loss_robj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "-", "d_out_robj", ")", ".", "mean", "(", ")", "\n", "\n", "z_f", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "z_b", "=", "torch", ".", "randn", "(", "real_images", ".", "size", "(", "0", ")", ",", "num_obj", ",", "z_dim", ")", ".", "to", "(", "device", ")", "\n", "# fake_images = netG(z, bbox, y=label.squeeze(dim=-1))", "\n", "fake_images", "=", "netG", "(", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "y_f", "=", "label_f", ",", "y_b", "=", "label_b", ")", "\n", "# print(fake_images.shape)", "\n", "d_out_fake", ",", "d_out_fobj", "=", "netD", "(", "fake_images", ".", "detach", "(", ")", ",", "bbox", ",", "label", ")", "\n", "d_loss_fake", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fake", ")", ".", "mean", "(", ")", "\n", "d_loss_fobj", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "(", "1.0", "+", "d_out_fobj", ")", ".", "mean", "(", ")", "\n", "\n", "d_loss", "=", "lamb_obj", "*", "(", "d_loss_robj", "+", "d_loss_fobj", ")", "+", "lamb_img", "*", "(", "d_loss_real", "+", "d_loss_fake", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "\n", "# update G network", "\n", "if", "(", "idx", "%", "1", ")", "==", "0", ":", "\n", "                ", "netG", ".", "zero_grad", "(", ")", "\n", "g_out_fake", ",", "g_out_obj", "=", "netD", "(", "fake_images", ",", "bbox", ",", "label", ")", "\n", "g_loss_fake", "=", "-", "g_out_fake", ".", "mean", "(", ")", "\n", "g_loss_obj", "=", "-", "g_out_obj", ".", "mean", "(", ")", "\n", "\n", "pixel_loss", "=", "l1_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "feat_loss", "=", "vgg_loss", "(", "fake_images", ",", "real_images", ")", ".", "mean", "(", ")", "\n", "\n", "g_loss", "=", "g_loss_obj", "*", "lamb_obj", "+", "g_loss_fake", "*", "lamb_img", "+", "pixel_loss", "+", "feat_loss", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optimizer", ".", "step", "(", ")", "\n", "\n", "", "if", "(", "idx", "+", "1", ")", "%", "500", "==", "0", ":", "\n", "                ", "elapsed", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Time Elapsed: [{}]\"", ".", "format", "(", "elapsed", ")", ")", "\n", "logger", ".", "info", "(", "\"Step[{}/{}], d_out_real: {:.4f}, d_out_fake: {:.4f}, g_out_fake: {:.4f} \"", ".", "format", "(", "epoch", "+", "1", ",", "\n", "idx", "+", "1", ",", "\n", "d_loss_real", ".", "item", "(", ")", ",", "\n", "d_loss_fake", ".", "item", "(", ")", ",", "\n", "g_loss_fake", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"d_obj_real: {:.4f}, d_obj_fake: {:.4f}, g_obj_fake: {:.4f} \"", ".", "format", "(", "\n", "d_loss_robj", ".", "item", "(", ")", ",", "\n", "d_loss_fobj", ".", "item", "(", ")", ",", "\n", "g_loss_obj", ".", "item", "(", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"pixel_loss: {:.4f}, feat_loss: {:.4f}\"", ".", "format", "(", "pixel_loss", ".", "item", "(", ")", ",", "feat_loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "writer", ".", "add_image", "(", "\"real images\"", ",", "make_grid", "(", "real_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "writer", ".", "add_image", "(", "\"fake images\"", ",", "make_grid", "(", "fake_images", ".", "cpu", "(", ")", ".", "data", "*", "0.5", "+", "0.5", ",", "nrow", "=", "4", ")", ",", "epoch", "*", "len", "(", "dataloader", ")", "+", "idx", "+", "1", ")", "\n", "\n", "# save model", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "5", "==", "0", ":", "\n", "            ", "torch", ".", "save", "(", "netG", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "out_path", ",", "'model/'", ",", "'G_%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader": [[18, 36], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "data.cocostuff_loader.CocoSceneGraphDataset", "data.vg.VgSceneGraphDataset", "open", "json.load"], "function", ["None"], ["def", "get_dataloader", "(", "dataset", "=", "'coco'", ",", "img_size", "=", "128", ")", ":", "\n", "    ", "if", "dataset", "==", "'coco'", ":", "\n", "        ", "dataset", "=", "CocoSceneGraphDataset", "(", "image_dir", "=", "'./datasets/coco/images/val2017/'", ",", "\n", "instances_json", "=", "'./datasets/coco/annotations/instances_val2017.json'", ",", "\n", "stuff_json", "=", "'./datasets/coco/annotations/stuff_val2017.json'", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "img_size", ",", "img_size", ")", ",", "left_right_flip", "=", "False", ")", "\n", "", "elif", "dataset", "==", "'vg'", ":", "\n", "        ", "with", "open", "(", "\"./datasets/vg/vocab.json\"", ",", "\"r\"", ")", "as", "read_file", ":", "\n", "            ", "vocab", "=", "json", ".", "load", "(", "read_file", ")", "\n", "", "dataset", "=", "VgSceneGraphDataset", "(", "vocab", "=", "vocab", ",", "\n", "h5_path", "=", "'./datasets/vg/val.h5'", ",", "\n", "image_dir", "=", "'./datasets/vg/images/'", ",", "\n", "image_size", "=", "(", "128", ",", "128", ")", ",", "left_right_flip", "=", "False", ",", "max_objects", "=", "30", ")", "\n", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "batch_size", "=", "1", ",", "\n", "drop_last", "=", "True", ",", "shuffle", "=", "False", ",", "num_workers", "=", "1", ")", "\n", "return", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.main": [[38, 79], ["torch.device", "torch.device", "torch.device", "test_context.get_dataloader", "model.resnet_generator_context.context_aware_generator().to", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "context_aware_generator().to.state_dict", "netG.state_dict.update", "context_aware_generator().to.load_state_dict", "context_aware_generator().to.cuda", "context_aware_generator().to.eval", "os.path.isfile", "os.path.exists", "os.makedirs", "tqdm.tqdm", "enumerate", "model.resnet_generator_context.context_aware_generator", "collections.OrderedDict.items", "range", "real_images.cuda", "label.long().unsqueeze().cuda", "bbox.float", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "torch.from_numpy().view().float().cuda", "context_aware_generator().to.forward", "skimage.img_as_ubyte", "imageio.imwrite", "pbar.update", "get_dataloader.__len__", "label.squeeze", "label.long().unsqueeze", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "torch.from_numpy().view().float", "fake_images[].cpu().detach().numpy().transpose", "label.long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "utils.util.truncted_random", "fake_images[].cpu().detach().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "utils.util.truncted_random", "fake_images[].cpu().detach", "fake_images[].cpu"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.None.test_context.get_dataloader", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random", "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "num_classes", "=", "184", "if", "args", ".", "dataset", "==", "'coco'", "else", "179", "\n", "num_o", "=", "8", "if", "args", ".", "dataset", "==", "'coco'", "else", "31", "\n", "\n", "dataloader", "=", "get_dataloader", "(", "args", ".", "dataset", ")", "\n", "\n", "netG", "=", "context_aware_generator", "(", "num_classes", "=", "num_classes", ",", "output_dim", "=", "3", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_path", ")", ":", "\n", "        ", "return", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ")", "\n", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`nvidia", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model_dict", "=", "netG", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "new_state_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "netG", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "netG", ".", "cuda", "(", ")", "\n", "netG", ".", "eval", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "sample_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "sample_path", ")", "\n", "", "thres", "=", "2.0", "\n", "with", "tqdm", "(", "total", "=", "dataloader", ".", "__len__", "(", ")", "*", "args", ".", "num_img", ")", "as", "pbar", ":", "\n", "        ", "for", "idx", ",", "data", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "real_images", ",", "label", ",", "bbox", "=", "data", "\n", "real_images", ",", "label", ",", "bbox", "=", "real_images", ".", "cuda", "(", ")", ",", "label", ".", "long", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "cuda", "(", ")", ",", "bbox", ".", "float", "(", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_img", ")", ":", "\n", "\n", "                ", "z_obj", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "num_o", ",", "thres", "=", "thres", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "z_im", "=", "torch", ".", "from_numpy", "(", "truncted_random", "(", "num_o", "=", "1", ",", "thres", "=", "thres", ")", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "fake_images", "=", "netG", ".", "forward", "(", "z_obj", ",", "bbox", ",", "z_im", ",", "label", ".", "squeeze", "(", "dim", "=", "-", "1", ")", ")", "\n", "fake_images_uint", "=", "img_as_ubyte", "(", "fake_images", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "*", "0.5", "+", "0.5", ")", "\n", "imageio", ".", "imwrite", "(", "\"{save_path}/sample_{idx}_numb_{numb}.jpg\"", ".", "format", "(", "save_path", "=", "args", ".", "sample_path", ",", "idx", "=", "idx", ",", "numb", "=", "j", ")", ",", "fake_images_uint", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.logger.setup_logger": [[9, 28], ["logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "os.path.join"], "function", ["None"], ["def", "setup_logger", "(", "name", ",", "save_dir", ",", "distributed_rank", ",", "filename", "=", "\"log.txt\"", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "name", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "# don't log results for the non-master process", "\n", "if", "distributed_rank", ">", "0", ":", "\n", "        ", "return", "logger", "\n", "", "ch", "=", "logging", ".", "StreamHandler", "(", "stream", "=", "sys", ".", "stdout", ")", "\n", "ch", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\"%(asctime)s %(name)s %(levelname)s: %(message)s\"", ")", "\n", "ch", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "ch", ")", "\n", "\n", "if", "save_dir", ":", "\n", "        ", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "filename", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "", "return", "logger", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.stn": [[11, 16], ["torch.nn.functional.affine_grid", "torch.nn.functional.affine_grid", "torch.nn.functional.grid_sample", "torch.nn.functional.grid_sample", "torch.Size", "torch.Size"], "function", ["None"], ["def", "stn", "(", "image", ",", "transformation_matrix", ",", "size", ")", ":", "\n", "    ", "grid", "=", "torch", ".", "nn", ".", "functional", ".", "affine_grid", "(", "transformation_matrix", ",", "torch", ".", "Size", "(", "size", ")", ")", "\n", "out_image", "=", "torch", ".", "nn", ".", "functional", ".", "grid_sample", "(", "image", ",", "grid", ")", "\n", "\n", "return", "out_image", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.crop_bbox": [[18, 48], ["feats.size", "tensor_linspace().view().expand().cuda", "tensor_linspace().view().expand().cuda", "bbox.size", "bbox.size", "bilinear.bilinear_sample", "tensor_linspace().view().expand", "tensor_linspace().view().expand", "torch.stack", "torch.stack", "torch.grid_sample", "tensor_linspace().view", "tensor_linspace().view", "bilinear.tensor_linspace", "bilinear.tensor_linspace"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.bilinear_sample", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.tensor_linspace", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.tensor_linspace"], ["", "def", "crop_bbox", "(", "feats", ",", "bbox", ",", "HH", ",", "WW", "=", "None", ",", "backend", "=", "'cudnn'", ")", ":", "\n", "    ", "\"\"\"\n    Take differentiable crops of feats specified by bbox.\n    Inputs:\n        - feats: Tensor of shape (N, C, H, W)\n        - bbox: Bounding box coordinates of shape (N, 4) in the format\n        [x0, y0, x1, y1] in the [0, 1] coordinate space.\n        - HH, WW: Size of the output crops.\n    Returns:\n        - crops: Tensor of shape (N, C, HH, WW) where crops[i] is the portion of\n        feats[i] specified by bbox[i], reshaped to (HH, WW) using bilinear sampling.\n    \"\"\"", "\n", "N", "=", "feats", ".", "size", "(", "0", ")", "\n", "assert", "bbox", ".", "size", "(", "0", ")", "==", "N", "\n", "assert", "bbox", ".", "size", "(", "1", ")", "==", "4", "\n", "if", "WW", "is", "None", ":", "WW", "=", "HH", "\n", "# if backend == 'cudnn':", "\n", "# Change box from [0, 1] to [-1, 1] coordinate system", "\n", "#    bbox = 2 * bbox - 1", "\n", "x0", ",", "y0", "=", "2", "*", "bbox", "[", ":", ",", "0", "]", "-", "1", ",", "2", "*", "bbox", "[", ":", ",", "1", "]", "-", "1", "\n", "x1", ",", "y1", "=", "2", "*", "(", "bbox", "[", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", "0", "]", ")", "-", "1", ",", "2", "*", "(", "bbox", "[", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", "1", "]", ")", "-", "1", "\n", "\n", "X", "=", "tensor_linspace", "(", "x0", ",", "x1", ",", "steps", "=", "WW", ")", ".", "view", "(", "N", ",", "1", ",", "WW", ")", ".", "expand", "(", "N", ",", "HH", ",", "WW", ")", ".", "cuda", "(", "device", "=", "feats", ".", "device", ")", "\n", "Y", "=", "tensor_linspace", "(", "y0", ",", "y1", ",", "steps", "=", "HH", ")", ".", "view", "(", "N", ",", "HH", ",", "1", ")", ".", "expand", "(", "N", ",", "HH", ",", "WW", ")", ".", "cuda", "(", "device", "=", "feats", ".", "device", ")", "\n", "\n", "if", "backend", "==", "'jj'", ":", "\n", "        ", "return", "bilinear_sample", "(", "feats", ",", "X", ",", "Y", ")", "\n", "", "elif", "backend", "==", "'cudnn'", ":", "\n", "        ", "grid", "=", "torch", ".", "stack", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "3", ")", "\n", "return", "F", ".", "grid_sample", "(", "feats", ",", "grid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.tensor_linspace": [[50, 78], ["torch.linspace().to", "torch.linspace().to", "start_w.view().expand.view().expand", "torch.linspace().to", "torch.linspace().to", "end_w.view().expand.view().expand", "start.contiguous().view().expand.contiguous().view().expand", "end.contiguous().view().expand.contiguous().view().expand", "start.contiguous().view().expand.size", "end.contiguous().view().expand.size", "start.contiguous().view().expand.size", "start.contiguous().view().expand.size", "start.contiguous().view().expand.dim", "torch.linspace", "torch.linspace", "start_w.view().expand.view", "torch.linspace", "torch.linspace", "end_w.view().expand.view", "start.contiguous().view().expand.contiguous().view", "end.contiguous().view().expand.contiguous().view", "start.contiguous().view().expand.contiguous", "end.contiguous().view().expand.contiguous"], "function", ["None"], ["", "", "def", "tensor_linspace", "(", "start", ",", "end", ",", "steps", "=", "10", ")", ":", "\n", "    ", "\"\"\"\n    Vectorized version of torch.linspace.\n    Inputs:\n        - start: Tensor of any shape\n        - end: Tensor of the same shape as start\n        - steps: Integer\n    Returns:\n        - out: Tensor of shape start.size() + (steps,), such that\n        out.select(-1, 0) == start, out.select(-1, -1) == end,\n        and the other elements of out linearly interpolate between\n        start and end.\n    \"\"\"", "\n", "assert", "start", ".", "size", "(", ")", "==", "end", ".", "size", "(", ")", "\n", "view_size", "=", "start", ".", "size", "(", ")", "+", "(", "1", ",", ")", "\n", "w_size", "=", "(", "1", ",", ")", "*", "start", ".", "dim", "(", ")", "+", "(", "steps", ",", ")", "\n", "out_size", "=", "start", ".", "size", "(", ")", "+", "(", "steps", ",", ")", "\n", "\n", "start_w", "=", "torch", ".", "linspace", "(", "1", ",", "0", ",", "steps", "=", "steps", ")", ".", "to", "(", "start", ")", "\n", "start_w", "=", "start_w", ".", "view", "(", "w_size", ")", ".", "expand", "(", "out_size", ")", "\n", "end_w", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "steps", ")", ".", "to", "(", "start", ")", "\n", "end_w", "=", "end_w", ".", "view", "(", "w_size", ")", ".", "expand", "(", "out_size", ")", "\n", "\n", "start", "=", "start", ".", "contiguous", "(", ")", ".", "view", "(", "view_size", ")", ".", "expand", "(", "out_size", ")", "\n", "end", "=", "end", ".", "contiguous", "(", ")", ".", "view", "(", "view_size", ")", ".", "expand", "(", "out_size", ")", "\n", "\n", "out", "=", "start_w", "*", "start", "+", "end_w", "*", "end", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.bilinear_sample": [[80, 135], ["feats.size", "X.mul.size", "X.mul.mul", "Y.mul.mul", "X.mul.floor().clamp", "Y.mul.floor().clamp", "feats.view", "feats.view.gather().view", "feats.view.gather().view", "feats.view.gather().view", "feats.view.gather().view", "X.mul.size", "Y.mul.size", "X.mul.size", "X.mul.floor", "Y.mul.floor", "feats.view.gather", "feats.view.gather", "feats.view.gather", "feats.view.gather", "y0x0_idx.long", "y1x0_idx.long", "y0x1_idx.long", "y1x1_idx.long"], "function", ["None"], ["", "def", "bilinear_sample", "(", "feats", ",", "X", ",", "Y", ")", ":", "\n", "    ", "\"\"\"\n    Perform bilinear sampling on the features in feats using the sampling grid\n    given by X and Y.\n    Inputs:\n        - feats: Tensor holding input feature map, of shape (N, C, H, W)\n        - X, Y: Tensors holding x and y coordinates of the sampling\n        grids; both have shape shape (N, HH, WW) and have elements in the range [0, 1].\n    Returns:\n        - out: Tensor of shape (B, C, HH, WW) where out[i] is computed\n        by sampling from feats[idx[i]] using the sampling grid (X[i], Y[i]).\n    \"\"\"", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "feats", ".", "size", "(", ")", "\n", "assert", "X", ".", "size", "(", ")", "==", "Y", ".", "size", "(", ")", "\n", "assert", "X", ".", "size", "(", "0", ")", "==", "N", "\n", "_", ",", "HH", ",", "WW", "=", "X", ".", "size", "(", ")", "\n", "\n", "X", "=", "X", ".", "mul", "(", "W", ")", "\n", "Y", "=", "Y", ".", "mul", "(", "H", ")", "\n", "\n", "# Get the x and y coordinates for the four samples", "\n", "x0", "=", "X", ".", "floor", "(", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "W", "-", "1", ")", "\n", "x1", "=", "(", "x0", "+", "1", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "W", "-", "1", ")", "\n", "y0", "=", "Y", ".", "floor", "(", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "H", "-", "1", ")", "\n", "y1", "=", "(", "y0", "+", "1", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "H", "-", "1", ")", "\n", "\n", "# In numpy we could do something like feats[i, :, y0, x0] to pull out", "\n", "# the elements of feats at coordinates y0 and x0, but PyTorch doesn't", "\n", "# yet support this style of indexing. Instead we have to use the gather", "\n", "# method, which only allows us to index along one dimension at a time;", "\n", "# therefore we will collapse the features (BB, C, H, W) into (BB, C, H * W)", "\n", "# and index along the last dimension. Below we generate linear indices into", "\n", "# the collapsed last dimension for each of the four combinations we need.", "\n", "y0x0_idx", "=", "(", "W", "*", "y0", "+", "x0", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y1x0_idx", "=", "(", "W", "*", "y1", "+", "x0", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y0x1_idx", "=", "(", "W", "*", "y0", "+", "x1", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y1x1_idx", "=", "(", "W", "*", "y1", "+", "x1", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "\n", "# Actually use gather to pull out the values from feats corresponding", "\n", "# to our four samples, then reshape them to (BB, C, HH, WW)", "\n", "feats_flat", "=", "feats", ".", "view", "(", "N", ",", "C", ",", "H", "*", "W", ")", "\n", "v1", "=", "feats_flat", ".", "gather", "(", "2", ",", "y0x0_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v2", "=", "feats_flat", ".", "gather", "(", "2", ",", "y1x0_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v3", "=", "feats_flat", ".", "gather", "(", "2", ",", "y0x1_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v4", "=", "feats_flat", ".", "gather", "(", "2", ",", "y1x1_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "\n", "# Compute the weights for the four samples", "\n", "w1", "=", "(", "(", "x1", "-", "X", ")", "*", "(", "y1", "-", "Y", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w2", "=", "(", "(", "x1", "-", "X", ")", "*", "(", "Y", "-", "y0", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w3", "=", "(", "(", "X", "-", "x0", ")", "*", "(", "y1", "-", "Y", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w4", "=", "(", "(", "X", "-", "x0", ")", "*", "(", "Y", "-", "y0", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "\n", "# Multiply the samples by the weights to give our interpolated results.", "\n", "out", "=", "w1", "*", "v1", "+", "w2", "*", "v2", "+", "w3", "*", "v3", "+", "w4", "*", "v4", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.masks_to_layout": [[137, 159], ["boxes.size", "masks.size", "_boxes_to_grid().float().cuda", "masks.float().view", "torch.grid_sample", "F.grid_sample.view", "masks.size", "_boxes_to_grid().float", "masks.float", "bilinear._boxes_to_grid", "boxes.view"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._boxes_to_grid"], ["", "def", "masks_to_layout", "(", "boxes", ",", "masks", ",", "H", ",", "W", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inputs:\n        - boxes: Tensor of shape (b, num_o, 4) giving bounding boxes in the format\n            [x0, y0, x1, y1] in the [0, 1] coordinate space\n        - masks: Tensor of shape (b, num_o, M, M) giving binary masks for each object\n        - H, W: Size of the output image.\n    Returns:\n        - out: Tensor of shape (N, num_o, H, W)\n    \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "boxes", ".", "size", "(", ")", "\n", "M", "=", "masks", ".", "size", "(", "2", ")", "\n", "assert", "masks", ".", "size", "(", ")", "==", "(", "b", ",", "num_o", ",", "M", ",", "M", ")", "\n", "if", "W", "is", "None", ":", "\n", "        ", "W", "=", "H", "\n", "\n", "", "grid", "=", "_boxes_to_grid", "(", "boxes", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", ",", "H", ",", "W", ")", ".", "float", "(", ")", ".", "cuda", "(", "device", "=", "masks", ".", "device", ")", "\n", "\n", "img_in", "=", "masks", ".", "float", "(", ")", ".", "view", "(", "b", "*", "num_o", ",", "1", ",", "M", ",", "M", ")", "\n", "sampled", "=", "F", ".", "grid_sample", "(", "img_in", ",", "grid", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "return", "sampled", ".", "view", "(", "b", ",", "num_o", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear._boxes_to_grid": [[161, 193], ["boxes.view.size", "boxes.view.view", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "X.expand.expand", "Y.expand.expand", "torch.stack", "torch.stack", "grid.mul().sub.mul().sub", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "grid.mul().sub.mul", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["None"], ["", "def", "_boxes_to_grid", "(", "boxes", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - boxes: FloatTensor of shape (O, 4) giving boxes in the [x0, y0, x1, y1]\n      format in the [0, 1] coordinate space\n    - H, W: Scalars giving size of output\n    Returns:\n    - grid: FloatTensor of shape (O, H, W, 2) suitable for passing to grid_sample\n    \"\"\"", "\n", "O", "=", "boxes", ".", "size", "(", "0", ")", "\n", "\n", "boxes", "=", "boxes", ".", "view", "(", "O", ",", "4", ",", "1", ",", "1", ")", "\n", "\n", "# All these are (O, 1, 1)", "\n", "x0", ",", "y0", "=", "boxes", "[", ":", ",", "0", "]", ",", "boxes", "[", ":", ",", "1", "]", "\n", "ww", ",", "hh", "=", "boxes", "[", ":", ",", "2", "]", ",", "boxes", "[", ":", ",", "3", "]", "\n", "\n", "X", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "W", ")", ".", "view", "(", "1", ",", "1", ",", "W", ")", ".", "to", "(", "boxes", ")", "\n", "Y", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "H", ")", ".", "view", "(", "1", ",", "H", ",", "1", ")", ".", "to", "(", "boxes", ")", "\n", "\n", "X", "=", "(", "X", "-", "x0", ")", "/", "ww", "# (O, 1, W)", "\n", "Y", "=", "(", "Y", "-", "y0", ")", "/", "hh", "# (O, H, 1)", "\n", "\n", "# Stack does not broadcast its arguments so we need to expand explicitly", "\n", "X", "=", "X", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n", "Y", "=", "Y", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n", "grid", "=", "torch", ".", "stack", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "3", ")", "# (O, H, W, 2)", "\n", "\n", "# Right now grid is in [0, 1] space; transform to [-1, 1]", "\n", "grid", "=", "grid", ".", "mul", "(", "2", ")", ".", "sub", "(", "1", ")", "\n", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.bilinear.compute_transformation_matrix": [[195, 211], ["torch.cuda.FloatTensor().fill_", "torch.cuda.FloatTensor().fill_", "torch.cat().view", "torch.cat().view", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cat", "torch.cat", "scale_x.unsqueeze", "t_x.unsqueeze", "scale_y.unsqueeze", "t_y.unsqueeze"], "function", ["None"], ["", "def", "compute_transformation_matrix", "(", "bbox", ")", ":", "\n", "    ", "x", ",", "y", "=", "bbox", "[", ":", ",", "0", "]", ",", "bbox", "[", ":", ",", "1", "]", "\n", "w", ",", "h", "=", "bbox", "[", ":", ",", "2", "]", ",", "bbox", "[", ":", ",", "3", "]", "\n", "\n", "scale_x", "=", "w", "\n", "scale_y", "=", "h", "\n", "\n", "t_x", "=", "2", "*", "(", "(", "x", "+", "0.5", "*", "w", ")", "-", "0.5", ")", "\n", "t_y", "=", "2", "*", "(", "(", "y", "+", "0.5", "*", "h", ")", "-", "0.5", ")", "\n", "\n", "zeros", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "bbox", ".", "shape", "[", "0", "]", ",", "1", ")", ".", "fill_", "(", "0", ")", "\n", "\n", "transformation_matrix", "=", "torch", ".", "cat", "(", "[", "scale_x", ".", "unsqueeze", "(", "-", "1", ")", ",", "zeros", ",", "t_x", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "zeros", ",", "scale_y", ".", "unsqueeze", "(", "-", "1", ")", ",", "t_y", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "1", ")", ".", "view", "(", "-", "1", ",", "2", ",", "3", ")", "\n", "\n", "return", "transformation_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.Vgg19.__init__": [[50, 71], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.vgg19", "util.Vgg19.slice1.add_module", "util.Vgg19.slice2.add_module", "util.Vgg19.slice3.add_module", "util.Vgg19.slice4.add_module", "util.Vgg19.slice5.add_module", "util.Vgg19.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "super", "(", "Vgg19", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "7", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "7", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "21", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "21", ",", "30", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.Vgg19.forward": [[72, 80], ["util.Vgg19.slice1", "util.Vgg19.slice2", "util.Vgg19.slice3", "util.Vgg19.slice4", "util.Vgg19.slice5"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h_relu1", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu2", "=", "self", ".", "slice2", "(", "h_relu1", ")", "\n", "h_relu3", "=", "self", ".", "slice3", "(", "h_relu2", ")", "\n", "h_relu4", "=", "self", ".", "slice4", "(", "h_relu3", ")", "\n", "h_relu5", "=", "self", ".", "slice5", "(", "h_relu4", ")", "\n", "out", "=", "[", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.VGGLoss.__init__": [[83, 88], ["torch.Module.__init__", "Vgg19().cuda", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "util.Vgg19"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VGGLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vgg", "=", "Vgg19", "(", ")", ".", "cuda", "(", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "weights", "=", "[", "1.0", "/", "32", ",", "1.0", "/", "16", ",", "1.0", "/", "8", ",", "1.0", "/", "4", ",", "1.0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.VGGLoss.forward": [[89, 95], ["range", "util.VGGLoss.vgg", "util.VGGLoss.vgg", "len", "util.VGGLoss.criterion", "y_vgg[].detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x_vgg", ",", "y_vgg", "=", "self", ".", "vgg", "(", "x", ")", ",", "self", ".", "vgg", "(", "y", ")", "\n", "loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "x_vgg", ")", ")", ":", "\n", "            ", "loss", "+=", "self", ".", "weights", "[", "i", "]", "*", "self", ".", "criterion", "(", "x_vgg", "[", "i", "]", ",", "y_vgg", "[", "i", "]", ".", "detach", "(", ")", ")", "\n", "", "return", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.crop_resize": [[8, 37], ["list", "bbox.size", "range", "torch.cat", "torch.cat", "torch.cat", "list", "range", "torch.interpolate", "list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.min", "torch.min", "torch.min", "list.append", "label[].unsqueeze", "int", "int", "int", "int"], "function", ["None"], ["def", "crop_resize", "(", "image", ",", "bbox", ",", "imsize", "=", "64", ",", "cropsize", "=", "28", ",", "label", "=", "None", ")", ":", "\n", "    ", "\"\"\"\"\n    :param image: (b, 3, h, w)\n    :param bbox: (b, o, 4)\n    :param imsize: input image size\n    :param cropsize: image size after crop\n    :param label:\n    :return: crop_images: (b*o, 3, h, w)\n    \"\"\"", "\n", "crop_images", "=", "list", "(", ")", "\n", "b", ",", "o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "        ", "rlabel", "=", "list", "(", ")", "\n", "", "for", "idx", "in", "range", "(", "b", ")", ":", "\n", "        ", "for", "odx", "in", "range", "(", "o", ")", ":", "\n", "            ", "if", "torch", ".", "min", "(", "bbox", "[", "idx", ",", "odx", "]", ")", "<", "0", ":", "\n", "                ", "continue", "\n", "", "crop_image", "=", "image", "[", "idx", ":", "idx", "+", "1", ",", ":", ",", "int", "(", "imsize", "*", "bbox", "[", "idx", ",", "odx", ",", "1", "]", ")", ":", "int", "(", "imsize", "*", "(", "bbox", "[", "idx", ",", "odx", ",", "1", "]", "+", "bbox", "[", "idx", ",", "odx", ",", "3", "]", ")", ")", ",", "\n", "int", "(", "imsize", "*", "bbox", "[", "idx", ",", "odx", ",", "0", "]", ")", ":", "int", "(", "imsize", "*", "(", "bbox", "[", "idx", ",", "odx", ",", "0", "]", "+", "bbox", "[", "idx", ",", "odx", ",", "2", "]", ")", ")", "]", "\n", "crop_image", "=", "F", ".", "interpolate", "(", "crop_image", ",", "size", "=", "(", "cropsize", ",", "cropsize", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "crop_images", ".", "append", "(", "crop_image", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "                ", "rlabel", ".", "append", "(", "label", "[", "idx", ",", "odx", ",", ":", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "# print(rlabel)", "\n", "", "", "", "if", "label", "is", "not", "None", ":", "\n", "#if len(rlabel) % 2 == 1:", "\n", "#    return torch.cat(crop_images[:-1], dim=0), torch.cat(rlabel[:-1], dim=0)", "\n", "        ", "return", "torch", ".", "cat", "(", "crop_images", ",", "dim", "=", "0", ")", ",", "torch", ".", "cat", "(", "rlabel", ",", "dim", "=", "0", ")", "\n", "", "return", "torch", ".", "cat", "(", "crop_images", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils.util.truncted_random": [[39, 46], ["range", "numpy.ones", "range", "numpy.random.normal"], "function", ["None"], ["", "def", "truncted_random", "(", "num_o", "=", "8", ",", "thres", "=", "1.0", ")", ":", "\n", "    ", "z", "=", "np", ".", "ones", "(", "(", "1", ",", "num_o", ",", "128", ")", ")", "*", "100", "\n", "for", "i", "in", "range", "(", "num_o", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "128", ")", ":", "\n", "            ", "while", "z", "[", "0", ",", "i", ",", "j", "]", ">", "thres", "or", "z", "[", "0", ",", "i", ",", "j", "]", "<", "-", "thres", ":", "\n", "                ", "z", "[", "0", ",", "i", ",", "j", "]", "=", "np", ".", "random", ".", "normal", "(", ")", "\n", "", "", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.Resize.__init__": [[71, 78], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "interp", "=", "PIL", ".", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "tuple", ")", ":", "\n", "            ", "H", ",", "W", "=", "size", "\n", "self", ".", "size", "=", "(", "W", ",", "H", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "self", ".", "interp", "=", "interp", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.Resize.__call__": [[79, 81], ["img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "self", ".", "interp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.imagenet_preprocess": [[29, 31], ["torchvision.Normalize"], "function", ["None"], ["def", "imagenet_preprocess", "(", ")", ":", "\n", "    ", "return", "T", ".", "Normalize", "(", "mean", "=", "IMAGENET_MEAN", ",", "std", "=", "IMAGENET_STD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.rescale": [[33, 36], ["x.sub().div", "x.min", "x.max", "x.sub"], "function", ["None"], ["", "def", "rescale", "(", "x", ")", ":", "\n", "    ", "lo", ",", "hi", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "return", "x", ".", "sub", "(", "lo", ")", ".", "div", "(", "hi", "-", "lo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.imagenet_deprocess": [[38, 46], ["torchvision.Compose", "torchvision.Normalize", "torchvision.Normalize", "transforms.append"], "function", ["None"], ["", "def", "imagenet_deprocess", "(", "rescale_image", "=", "True", ")", ":", "\n", "    ", "transforms", "=", "[", "\n", "T", ".", "Normalize", "(", "mean", "=", "[", "0", ",", "0", ",", "0", "]", ",", "std", "=", "INV_IMAGENET_STD", ")", ",", "\n", "T", ".", "Normalize", "(", "mean", "=", "INV_IMAGENET_MEAN", ",", "std", "=", "[", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "]", "\n", "if", "rescale_image", ":", "\n", "        ", "transforms", ".", "append", "(", "rescale", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.imagenet_deprocess_batch": [[48, 68], ["isinstance", "imgs.cpu().clone.cpu().clone", "data.imagenet_deprocess", "range", "torch.cat", "imgs.cpu().clone.size", "img_de.mul().clamp().byte.mul().clamp().byte", "torch.cat.append", "imgs.cpu().clone.cpu", "imagenet_deprocess.", "img_de.mul().clamp().byte.mul().clamp", "img_de.mul().clamp().byte.mul"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess"], ["", "def", "imagenet_deprocess_batch", "(", "imgs", ",", "rescale", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - imgs: FloatTensor of shape (N, C, H, W) giving preprocessed images\n\n    Output:\n    - imgs_de: ByteTensor of shape (N, C, H, W) giving deprocessed images\n      in the range [0, 255]\n    \"\"\"", "\n", "if", "isinstance", "(", "imgs", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "data", "\n", "", "imgs", "=", "imgs", ".", "cpu", "(", ")", ".", "clone", "(", ")", "\n", "deprocess_fn", "=", "imagenet_deprocess", "(", "rescale_image", "=", "rescale", ")", "\n", "imgs_de", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "img_de", "=", "deprocess_fn", "(", "imgs", "[", "i", "]", ")", "[", "None", "]", "\n", "img_de", "=", "img_de", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", "\n", "imgs_de", ".", "append", "(", "img_de", ")", "\n", "", "imgs_de", "=", "torch", ".", "cat", "(", "imgs_de", ",", "dim", "=", "0", ")", "\n", "return", "imgs_de", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.unpack_var": [[83, 87], ["isinstance"], "function", ["None"], ["", "", "def", "unpack_var", "(", "v", ")", ":", "\n", "    ", "if", "isinstance", "(", "v", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "return", "v", ".", "data", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.data.split_graph_batch": [[89, 117], ["data.unpack_var", "data.unpack_var", "data.unpack_var", "range", "data.unpack_var", "unpack_var.max", "triples[].clone", "triples_out.append", "enumerate", "o_idxs.size", "obj_data_out[].append"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var"], ["", "def", "split_graph_batch", "(", "triples", ",", "obj_data", ",", "obj_to_img", ",", "triple_to_img", ")", ":", "\n", "    ", "triples", "=", "unpack_var", "(", "triples", ")", "\n", "obj_data", "=", "[", "unpack_var", "(", "o", ")", "for", "o", "in", "obj_data", "]", "\n", "obj_to_img", "=", "unpack_var", "(", "obj_to_img", ")", "\n", "triple_to_img", "=", "unpack_var", "(", "triple_to_img", ")", "\n", "\n", "triples_out", "=", "[", "]", "\n", "obj_data_out", "=", "[", "[", "]", "for", "_", "in", "obj_data", "]", "\n", "obj_offset", "=", "0", "\n", "N", "=", "obj_to_img", ".", "max", "(", ")", "+", "1", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "o_idxs", "=", "(", "obj_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "t_idxs", "=", "(", "triple_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "cur_triples", "=", "triples", "[", "t_idxs", "]", ".", "clone", "(", ")", "\n", "cur_triples", "[", ":", ",", "0", "]", "-=", "obj_offset", "\n", "cur_triples", "[", ":", ",", "2", "]", "-=", "obj_offset", "\n", "triples_out", ".", "append", "(", "cur_triples", ")", "\n", "\n", "for", "j", ",", "o_data", "in", "enumerate", "(", "obj_data", ")", ":", "\n", "            ", "cur_o_data", "=", "None", "\n", "if", "o_data", "is", "not", "None", ":", "\n", "                ", "cur_o_data", "=", "o_data", "[", "o_idxs", "]", "\n", "", "obj_data_out", "[", "j", "]", ".", "append", "(", "cur_o_data", ")", "\n", "\n", "", "obj_offset", "+=", "o_idxs", ".", "size", "(", "0", ")", "\n", "\n", "", "return", "triples_out", ",", "obj_data_out", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.miscs.draw_bbox_batch": [[6, 24], ["torch.from_numpy().float().to.cpu().numpy", "numpy.ascontiguousarray", "zip", "numpy.stack", "numpy.transpose", "torch.from_numpy().float().to", "numpy.transpose", "results.append", "torch.from_numpy().float().to.cpu", "all", "torch.from_numpy().float", "miscs.draw_bbox", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.miscs.draw_bbox"], ["def", "draw_bbox_batch", "(", "images", ",", "bbox_sets", ")", ":", "\n", "    ", "device", "=", "images", ".", "device", "\n", "results", "=", "[", "]", "\n", "images", "=", "images", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "images", "=", "np", ".", "ascontiguousarray", "(", "np", ".", "transpose", "(", "images", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "image", ",", "bbox_set", "in", "zip", "(", "images", ",", "bbox_sets", ")", ":", "\n", "        ", "for", "bbox", "in", "bbox_set", ":", "\n", "            ", "if", "all", "(", "bbox", "==", "0", ")", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "image", "=", "draw_bbox", "(", "image", ",", "bbox", ")", "\n", "\n", "", "", "results", ".", "append", "(", "image", ")", "\n", "\n", "", "images", "=", "np", ".", "stack", "(", "results", ",", "axis", "=", "0", ")", "\n", "images", "=", "np", ".", "transpose", "(", "images", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "images", "=", "torch", ".", "from_numpy", "(", "images", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.miscs.draw_bbox": [[26, 39], ["PIL.Image.fromarray", "PIL.ImageDraw.Draw", "ImageDraw.Draw.rectangle", "numpy.uint8", "round", "round", "round", "round", "numpy.array", "float", "float", "float", "float"], "function", ["None"], ["", "def", "draw_bbox", "(", "image", ",", "bbox", ")", ":", "\n", "    ", "im", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", "*", "255", ")", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "im", ")", "\n", "\n", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "c1", "=", "(", "round", "(", "float", "(", "bbox", "[", "0", "]", "*", "w", ")", ")", ",", "round", "(", "float", "(", "bbox", "[", "1", "]", "*", "h", ")", ")", ")", "\n", "c2", "=", "(", "round", "(", "float", "(", "bbox", "[", "2", "]", "*", "w", ")", ")", ",", "round", "(", "float", "(", "bbox", "[", "3", "]", "*", "h", ")", ")", ")", "\n", "\n", "draw", ".", "rectangle", "(", "[", "c1", ",", "c2", "]", ",", "outline", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "\n", "output", "=", "np", ".", "array", "(", "im", ")", "/", "255", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.miscs.str2bool": [[40, 42], ["v.lower"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "return", "v", ".", "lower", "(", ")", "==", "'true'", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.prepare_dir": [[7, 23], ["pathlib.Path().exists", "pathlib.Path().mkdir", "pathlib.Path().exists", "pathlib.Path().mkdir", "pathlib.Path().exists", "pathlib.Path().mkdir", "pathlib.Path().exists", "pathlib.Path().mkdir", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "function", ["None"], ["def", "prepare_dir", "(", "name", ")", ":", "\n", "    ", "log_save_dir", "=", "'checkpoints/tmp/{}/logs'", ".", "format", "(", "name", ")", "\n", "model_save_dir", "=", "'checkpoints/tmp/{}/models'", ".", "format", "(", "name", ")", "\n", "sample_save_dir", "=", "'checkpoints/tmp/{}/samples'", ".", "format", "(", "name", ")", "\n", "result_save_dir", "=", "'checkpoints/tmp/{}/results'", ".", "format", "(", "name", ")", "\n", "\n", "if", "not", "Path", "(", "log_save_dir", ")", ".", "exists", "(", ")", ":", "\n", "        ", "Path", "(", "log_save_dir", ")", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "", "if", "not", "Path", "(", "model_save_dir", ")", ".", "exists", "(", ")", ":", "\n", "        ", "Path", "(", "model_save_dir", ")", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "", "if", "not", "Path", "(", "sample_save_dir", ")", ".", "exists", "(", ")", ":", "\n", "        ", "Path", "(", "sample_save_dir", ")", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "", "if", "not", "Path", "(", "result_save_dir", ")", ".", "exists", "(", ")", ":", "\n", "        ", "Path", "(", "result_save_dir", ")", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "\n", "", "return", "log_save_dir", ",", "model_save_dir", ",", "sample_save_dir", ",", "result_save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.load_model": [[25, 81], ["print", "os.listdir", "print", "model.load_state_dict", "int", "os.listdir", "os.path.isdir", "len", "os.path.isdir", "print", "file.endswith", "torch.load", "file.endswith", "model.load_state_dict", "print", "print", "print", "os.listdir", "len", "print", "torch.load", "os.listdir", "re.search().group().split", "len", "int", "re.search().group().split", "len", "os.path.join", "int", "os.path.join", "re.search().group", "re.search().group", "re.search", "re.search"], "function", ["None"], ["", "def", "load_model", "(", "model", ",", "model_dir", "=", "None", ",", "appendix", "=", "None", ",", "iter", "=", "'l'", ")", ":", "\n", "\n", "    ", "load_iter", "=", "None", "\n", "load_model", "=", "None", "\n", "\n", "if", "iter", "==", "'s'", "or", "not", "os", ".", "path", ".", "isdir", "(", "model_dir", ")", "or", "len", "(", "os", ".", "listdir", "(", "model_dir", ")", ")", "==", "0", ":", "\n", "        ", "load_iter", "=", "0", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "model_dir", ")", ":", "\n", "            ", "print", "(", "'models dir not exist'", ")", "\n", "", "elif", "len", "(", "os", ".", "listdir", "(", "model_dir", ")", ")", "==", "0", ":", "\n", "            ", "print", "(", "'models dir is empty'", ")", "\n", "\n", "", "print", "(", "'train from scratch.'", ")", "\n", "return", "load_iter", "\n", "\n", "# load latest epoch", "\n", "", "if", "iter", "==", "'l'", ":", "\n", "        ", "for", "file", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "            ", "if", "appendix", "is", "not", "None", "and", "appendix", "not", "in", "file", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "file", ".", "endswith", "(", "'.pkl'", ")", ":", "\n", "                ", "current_iter", "=", "re", ".", "search", "(", "'iter-\\d+'", ",", "file", ")", ".", "group", "(", "0", ")", ".", "split", "(", "'-'", ")", "[", "1", "]", "\n", "\n", "if", "len", "(", "current_iter", ")", ">", "0", ":", "\n", "                    ", "current_iter", "=", "int", "(", "current_iter", ")", "\n", "\n", "if", "load_iter", "is", "None", "or", "current_iter", ">", "load_iter", ":", "\n", "                        ", "load_iter", "=", "current_iter", "\n", "load_model", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "file", ")", "\n", "", "", "else", ":", "\n", "                    ", "continue", "\n", "\n", "", "", "", "print", "(", "'load from iter: %d'", "%", "load_iter", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_model", ")", ")", "\n", "\n", "return", "load_iter", "\n", "# from given iter", "\n", "", "else", ":", "\n", "        ", "iter", "=", "int", "(", "iter", ")", "\n", "for", "file", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "            ", "if", "file", ".", "endswith", "(", "'.pkl'", ")", ":", "\n", "                ", "current_iter", "=", "re", ".", "search", "(", "'iter-\\d+'", ",", "file", ")", ".", "group", "(", "0", ")", ".", "split", "(", "'-'", ")", "[", "1", "]", "\n", "if", "len", "(", "current_iter", ")", ">", "0", ":", "\n", "                    ", "if", "int", "(", "current_iter", ")", "==", "iter", ":", "\n", "                        ", "load_iter", "=", "iter", "\n", "load_model", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "file", ")", "\n", "break", "\n", "", "", "", "", "if", "load_model", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_model", ")", ")", "\n", "print", "(", "'load from iter: %d'", "%", "load_iter", ")", "\n", "", "else", ":", "\n", "            ", "load_iter", "=", "0", "\n", "print", "(", "'there is not saved models of iter %d'", "%", "iter", ")", "\n", "print", "(", "'train from scratch.'", ")", "\n", "", "return", "load_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.utils_layout2img.model_saver.save_model": [[83, 104], ["range", "os.listdir", "torch.save", "print", "os.path.isdir", "os.makedirs", "file.endswith", "os.path.join", "os.path.join", "model.state_dict", "re.search().group().split", "len", "int", "os.remove", "re.search().group", "os.path.join", "re.search"], "function", ["None"], ["", "", "def", "save_model", "(", "model", ",", "model_dir", "=", "None", ",", "appendix", "=", "None", ",", "iter", "=", "1", ",", "save_num", "=", "5", ",", "save_step", "=", "1000", ")", ":", "\n", "    ", "iter_idx", "=", "range", "(", "iter", ",", "iter", "-", "save_num", "*", "save_step", ",", "-", "save_step", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "\n", "", "for", "file", "in", "os", ".", "listdir", "(", "model_dir", ")", ":", "\n", "        ", "if", "file", ".", "endswith", "(", "'.pkl'", ")", ":", "\n", "            ", "current_iter", "=", "re", ".", "search", "(", "'iter-\\d+'", ",", "file", ")", ".", "group", "(", "0", ")", ".", "split", "(", "'-'", ")", "[", "1", "]", "\n", "if", "len", "(", "current_iter", ")", ">", "0", ":", "\n", "                ", "if", "int", "(", "current_iter", ")", "not", "in", "iter_idx", ":", "\n", "                    ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "model_dir", ",", "file", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "continue", "\n", "\n", "", "", "", "if", "appendix", ":", "\n", "        ", "model_name", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'iter-%d_%s.pkl'", "%", "(", "iter", ",", "appendix", ")", ")", "\n", "", "else", ":", "\n", "        ", "model_name", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "'iter-%d.pkl'", "%", "iter", ")", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_name", ")", "\n", "print", "(", "\"save {}\"", ".", "format", "(", "model_name", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.OptimizedBlock.__init__": [[32, 45], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "OptimizedBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "resi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "learnable_sc", "=", "(", "dim_in", "!=", "dim_out", ")", "or", "downsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "sc", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.OptimizedBlock.residual": [[46, 52], ["discriminator.OptimizedBlock.resi", "discriminator._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "", "def", "residual", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "resi", "(", "h", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "h", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.OptimizedBlock.shortcut": [[53, 58], ["discriminator.OptimizedBlock.sc", "discriminator._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "x", ")", "\n", "", "return", "self", ".", "sc", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.OptimizedBlock.forward": [[59, 61], ["discriminator.OptimizedBlock.residual", "discriminator.OptimizedBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ResidualBlock.__init__": [[66, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "resi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_in", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "\n", "self", ".", "learnable_sc", "=", "(", "dim_in", "!=", "dim_out", ")", "or", "downsample", "\n", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "sc", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ResidualBlock.residual": [[81, 87], ["discriminator.ResidualBlock.resi", "discriminator._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "", "def", "residual", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "resi", "(", "h", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "h", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ResidualBlock.shortcut": [[88, 97], ["discriminator.ResidualBlock.sc", "discriminator._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "x", "=", "self", ".", "sc", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "return", "_downsample", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "return", "x", "\n", "", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ResidualBlock.forward": [[98, 100], ["discriminator.ResidualBlock.residual", "discriminator.ResidualBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ImageDiscriminator.__init__": [[103, 121], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "discriminator.OptimizedBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "ImageDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ch", "=", "conv_dim", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# (3, 64, 64) -> (64, 32, 32)", "\n", "OptimizedBlock", "(", "3", ",", "self", ".", "ch", ",", "downsample", "=", "True", ")", ",", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "ResidualBlock", "(", "self", ".", "ch", ",", "self", ".", "ch", "*", "2", ",", "downsample", "=", "True", ")", ",", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "2", ",", "self", ".", "ch", "*", "4", ",", "downsample", "=", "True", ")", ",", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "4", ",", "self", ".", "ch", "*", "8", ",", "downsample", "=", "True", ")", ",", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "8", ",", "self", ".", "ch", "*", "16", ",", "downsample", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "self", ".", "ch", "*", "16", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ImageDiscriminator.forward": [[124, 133], ["discriminator.ImageDiscriminator.main", "discriminator.ImageDiscriminator.relu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "discriminator.ImageDiscriminator.classifier", "discriminator.ImageDiscriminator.view"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "x", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "# (1024, 2, 2) -> (1024,)", "\n", "h", "=", "torch", ".", "sum", "(", "h", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "\n", "output", "=", "self", ".", "classifier", "(", "h", ")", "\n", "\n", "return", "output", ".", "view", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ObjectDiscriminator.__init__": [[136, 154], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "discriminator.OptimizedBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock", "discriminator.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "n_class", "=", "0", ",", "downsample_first", "=", "False", ")", ":", "\n", "        ", "super", "(", "ObjectDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "OptimizedBlock", "(", "3", ",", "conv_dim", ",", "downsample", "=", "downsample_first", ")", ",", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "ResidualBlock", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "downsample", "=", "True", ")", ",", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "ResidualBlock", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "downsample", "=", "True", ")", ",", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "ResidualBlock", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "downsample", "=", "True", ")", ",", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "ResidualBlock", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "downsample", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "classifier_src", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "1", ")", "\n", "self", ".", "classifier_cls", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "n_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.ObjectDiscriminator.forward": [[160, 171], ["discriminator.ObjectDiscriminator.main", "discriminator.ObjectDiscriminator.relu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "discriminator.ObjectDiscriminator.classifier_src", "discriminator.ObjectDiscriminator.classifier_cls", "discriminator.ObjectDiscriminator.view"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "main", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "# (1024, 2, 2) -> (1024,)", "\n", "h", "=", "torch", ".", "sum", "(", "h", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "\n", "output_src", "=", "self", ".", "classifier_src", "(", "h", ")", "\n", "output_cls", "=", "self", ".", "classifier_cls", "(", "h", ")", "\n", "\n", "return", "output_src", ".", "view", "(", "-", "1", ")", ",", "output_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator.add_sn": [[15, 23], ["m.named_children", "isinstance", "m.add_module", "torch.utils.spectral_norm", "discriminator.add_sn"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.add_sn"], ["def", "add_sn", "(", "m", ")", ":", "\n", "    ", "for", "name", ",", "c", "in", "m", ".", "named_children", "(", ")", ":", "\n", "        ", "m", ".", "add_module", "(", "name", ",", "add_sn", "(", "c", ")", ")", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "ConvTranspose2d", ",", "nn", ".", "Linear", ",", "nn", ".", "Embedding", ")", ")", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "m", ")", "\n", "", "else", ":", "\n", "        ", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator._downsample": [[25, 27], ["torch.avg_pool2d"], "function", ["None"], ["", "", "def", "_downsample", "(", "x", ")", ":", "\n", "    ", "return", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.boxes_to_layout": [[28, 62], ["vecs.size", "layout._boxes_to_grid", "vecs.view().expand", "torch.grid_sample", "layout._pool_samples", "vecs.view"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._boxes_to_grid", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._pool_samples"], ["def", "boxes_to_layout", "(", "vecs", ",", "boxes", ",", "obj_to_img", ",", "H", ",", "W", "=", "None", ",", "pooling", "=", "'sum'", ")", ":", "\n", "    ", "\"\"\"\n    Inputs:\n    - vecs: Tensor of shape (O, D) giving vectors\n    - boxes: Tensor of shape (O, 4) giving bounding boxes in the format\n      [x0, y0, x1, y1] in the [0, 1] coordinate space\n    - obj_to_img: LongTensor of shape (O,) mapping each element of vecs to\n      an image, where each element is in the range [0, N). If obj_to_img[i] = j\n      then vecs[i] belongs to image j.\n    - H, W: Size of the output\n\n    Returns:\n    - out: Tensor of shape (N, D, H, W)\n    \"\"\"", "\n", "O", ",", "D", "=", "vecs", ".", "size", "(", ")", "\n", "if", "W", "is", "None", ":", "\n", "        ", "W", "=", "H", "\n", "\n", "", "grid", "=", "_boxes_to_grid", "(", "boxes", ",", "H", ",", "W", ")", "\n", "\n", "# If we don't add extra spatial dimensions here then out-of-bounds", "\n", "# elements won't be automatically set to 0", "\n", "img_in", "=", "vecs", ".", "view", "(", "O", ",", "D", ",", "1", ",", "1", ")", ".", "expand", "(", "O", ",", "D", ",", "8", ",", "8", ")", "\n", "sampled", "=", "F", ".", "grid_sample", "(", "img_in", ",", "grid", ")", "# (O, D, H, W)", "\n", "\n", "# Explicitly masking makes everything quite a bit slower.", "\n", "# If we rely on implicit masking the interpolated boxes end up", "\n", "# blurred around the edges, but it should be fine.", "\n", "# mask = ((X < 0) + (X > 1) + (Y < 0) + (Y > 1)).clamp(max=1)", "\n", "# sampled[mask[:, None]] = 0", "\n", "\n", "out", "=", "_pool_samples", "(", "sampled", ",", "obj_to_img", ",", "pooling", "=", "pooling", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout": [[64, 90], ["vecs.size", "masks.size", "layout._boxes_to_grid", "torch.grid_sample", "layout._pool_samples", "masks.size", "vecs.view", "masks.float().view", "masks.float"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._boxes_to_grid", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._pool_samples"], ["", "def", "masks_to_layout", "(", "vecs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "H", ",", "W", "=", "None", ",", "pooling", "=", "'sum'", ")", ":", "\n", "    ", "\"\"\"\n    Inputs:\n    - vecs: Tensor of shape (O, D) giving vectors\n    - boxes: Tensor of shape (O, 4) giving bounding boxes in the format\n      [x0, y0, x1, y1] in the [0, 1] coordinate space\n    - masks: Tensor of shape (O, M, M) giving binary masks for each object\n    - obj_to_img: LongTensor of shape (O,) mapping objects to images\n    - H, W: Size of the output image.\n\n    Returns:\n    - out: Tensor of shape (N, D, H, W)\n    \"\"\"", "\n", "O", ",", "D", "=", "vecs", ".", "size", "(", ")", "\n", "M", "=", "masks", ".", "size", "(", "1", ")", "\n", "assert", "masks", ".", "size", "(", ")", "==", "(", "O", ",", "M", ",", "M", ")", "\n", "if", "W", "is", "None", ":", "\n", "        ", "W", "=", "H", "\n", "\n", "", "grid", "=", "_boxes_to_grid", "(", "boxes", ",", "H", ",", "W", ")", "\n", "\n", "img_in", "=", "vecs", ".", "view", "(", "O", ",", "D", ",", "1", ",", "1", ")", "*", "masks", ".", "float", "(", ")", ".", "view", "(", "O", ",", "1", ",", "M", ",", "M", ")", "\n", "sampled", "=", "F", ".", "grid_sample", "(", "img_in", ",", "grid", ")", "\n", "\n", "out", "=", "_pool_samples", "(", "sampled", ",", "obj_to_img", ",", "pooling", "=", "pooling", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._boxes_to_grid": [[92, 127], ["boxes.view.size", "boxes.view.view", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "torch.linspace().view().to", "X.expand.expand", "Y.expand.expand", "torch.stack", "torch.stack", "torch.stack", "grid.mul().sub.mul().sub", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "grid.mul().sub.mul", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["None"], ["", "def", "_boxes_to_grid", "(", "boxes", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - boxes: FloatTensor of shape (O, 4) giving boxes in the [x0, y0, x1, y1]\n      format in the [0, 1] coordinate space\n    - H, W: Scalars giving size of output\n\n    Returns:\n    - grid: FloatTensor of shape (O, H, W, 2) suitable for passing to grid_sample\n    \"\"\"", "\n", "O", "=", "boxes", ".", "size", "(", "0", ")", "\n", "\n", "boxes", "=", "boxes", ".", "view", "(", "O", ",", "4", ",", "1", ",", "1", ")", "\n", "\n", "# All these are (O, 1, 1)", "\n", "x0", ",", "y0", "=", "boxes", "[", ":", ",", "0", "]", ",", "boxes", "[", ":", ",", "1", "]", "\n", "x1", ",", "y1", "=", "boxes", "[", ":", ",", "2", "]", ",", "boxes", "[", ":", ",", "3", "]", "\n", "ww", "=", "x1", "-", "x0", "\n", "hh", "=", "y1", "-", "y0", "\n", "\n", "X", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "W", ")", ".", "view", "(", "1", ",", "1", ",", "W", ")", ".", "to", "(", "boxes", ")", "\n", "Y", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "H", ")", ".", "view", "(", "1", ",", "H", ",", "1", ")", ".", "to", "(", "boxes", ")", "\n", "\n", "X", "=", "(", "X", "-", "x0", ")", "/", "ww", "# (O, 1, W)", "\n", "Y", "=", "(", "Y", "-", "y0", ")", "/", "hh", "# (O, H, 1)", "\n", "\n", "# Stack does not broadcast its arguments so we need to expand explicitly", "\n", "X", "=", "X", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n", "Y", "=", "Y", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n", "grid", "=", "torch", ".", "stack", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "3", ")", "# (O, H, W, 2)", "\n", "\n", "# Right now grid is in [0, 1] space; transform to [-1, 1]", "\n", "grid", "=", "grid", ".", "mul", "(", "2", ")", ".", "sub", "(", "1", ")", "\n", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout._pool_samples": [[129, 161], ["samples.size", "torch.zeros", "torch.zeros", "torch.zeros", "obj_to_img.view().expand", "out.scatter_add.scatter_add", "obj_to_img.data.max().item", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "obj_counts.clamp.scatter_add", "print", "obj_counts.clamp.clamp", "obj_to_img.view", "obj_counts.clamp.view", "ValueError", "obj_to_img.data.max"], "function", ["None"], ["", "def", "_pool_samples", "(", "samples", ",", "obj_to_img", ",", "pooling", "=", "'sum'", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - samples: FloatTensor of shape (O, D, H, W)\n    - obj_to_img: LongTensor of shape (O,) with each element in the range\n      [0, N) mapping elements of samples to output images\n\n    Output:\n    - pooled: FloatTensor of shape (N, D, H, W)\n    \"\"\"", "\n", "dtype", ",", "device", "=", "samples", ".", "dtype", ",", "samples", ".", "device", "\n", "O", ",", "D", ",", "H", ",", "W", "=", "samples", ".", "size", "(", ")", "\n", "N", "=", "obj_to_img", ".", "data", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", "\n", "\n", "# Use scatter_add to sum the sampled outputs for each image", "\n", "out", "=", "torch", ".", "zeros", "(", "N", ",", "D", ",", "H", ",", "W", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "idx", "=", "obj_to_img", ".", "view", "(", "O", ",", "1", ",", "1", ",", "1", ")", ".", "expand", "(", "O", ",", "D", ",", "H", ",", "W", ")", "\n", "out", "=", "out", ".", "scatter_add", "(", "0", ",", "idx", ",", "samples", ")", "\n", "\n", "if", "pooling", "==", "'avg'", ":", "\n", "# Divide each output mask by the number of objects; use scatter_add again", "\n", "# to count the number of objects per image.", "\n", "        ", "ones", "=", "torch", ".", "ones", "(", "O", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "obj_counts", "=", "torch", ".", "zeros", "(", "N", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "\n", "obj_counts", "=", "obj_counts", ".", "scatter_add", "(", "0", ",", "obj_to_img", ",", "ones", ")", "\n", "print", "(", "obj_counts", ")", "\n", "obj_counts", "=", "obj_counts", ".", "clamp", "(", "min", "=", "1", ")", "\n", "out", "=", "out", "/", "obj_counts", ".", "view", "(", "N", ",", "1", ",", "1", ",", "1", ")", "\n", "", "elif", "pooling", "!=", "'sum'", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid pooling \"%s\"'", "%", "pooling", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConditionalBatchNorm2d.__init__": [[52, 59], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Embedding", "torch.Embedding", "generator2.ConditionalBatchNorm2d.embed.weight.data[].normal_", "generator2.ConditionalBatchNorm2d.embed.weight.data[].zero_"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "affine", "=", "False", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "num_features", "*", "2", ")", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", ":", "num_features", "]", ".", "normal_", "(", "1", ",", "0.02", ")", "# Initialise scale at N(1, 0.02)", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", "num_features", ":", "]", ".", "zero_", "(", ")", "# Initialise bias at 0", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConditionalBatchNorm2d.forward": [[60, 65], ["generator2.ConditionalBatchNorm2d.bn", "generator2.ConditionalBatchNorm2d.embed().chunk", "beta.view", "generator2.ConditionalBatchNorm2d.embed", "gamma.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn", "(", "x", ")", "\n", "gamma", ",", "beta", "=", "self", ".", "embed", "(", "y", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "out", "=", "gamma", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "*", "out", "+", "beta", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ResidualBlock.__init__": [[70, 78], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ResidualBlock.forward": [[79, 81], ["generator2.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTMCell.__init__": [[85, 118], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "\"\"\"\n        Initialize ConvLSTM cell.\n\n        Parameters\n        ----------\n        input_size: (int, int)\n            Height and width of input tensor as (height, width).\n        input_dim: int\n            Number of channels of input tensor.\n        hidden_dim: int\n            Number of channels of hidden state.\n        kernel_size: (int, int)\n            Size of the convolutional kernel.\n        bias: bool\n            Whether or not to add the bias.\n        \"\"\"", "\n", "\n", "super", "(", "ConvLSTMCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "padding", "=", "kernel_size", "[", "0", "]", "//", "2", ",", "kernel_size", "[", "1", "]", "//", "2", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "input_dim", "+", "self", ".", "hidden_dim", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "hidden_dim", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "bias", "=", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTMCell.forward": [[119, 135], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator2.ConvLSTMCell.conv", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "cur_state", ")", ":", "\n", "        ", "h_cur", ",", "c_cur", "=", "cur_state", "\n", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "input_tensor", ",", "h_cur", "]", ",", "dim", "=", "1", ")", "# concatenate along channel axis", "\n", "\n", "combined_conv", "=", "self", ".", "conv", "(", "combined", ")", "\n", "cc_i", ",", "cc_f", ",", "cc_o", ",", "cc_g", "=", "torch", ".", "split", "(", "combined_conv", ",", "self", ".", "hidden_dim", ",", "dim", "=", "1", ")", "\n", "i", "=", "torch", ".", "sigmoid", "(", "cc_i", ")", "\n", "f", "=", "torch", ".", "sigmoid", "(", "cc_f", ")", "\n", "o", "=", "torch", ".", "sigmoid", "(", "cc_o", ")", "\n", "g", "=", "torch", ".", "tanh", "(", "cc_g", ")", "\n", "\n", "c_next", "=", "f", "*", "c_cur", "+", "i", "*", "g", "\n", "h_next", "=", "o", "*", "torch", ".", "tanh", "(", "c_next", ")", "\n", "\n", "return", "h_next", ",", "c_next", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTMCell.init_hidden": [[136, 139], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "return", "(", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ",", "\n", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTM.__init__": [[143, 180], ["torch.Module.__init__", "generator2.ConvLSTM._check_kernel_size_consistency", "isinstance", "generator2.ConvLSTM._extend_for_multilayer", "generator2.ConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator2.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "batch_first", "=", "False", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "batch_first", "=", "batch_first", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTM.forward": [[181, 231], ["input_tensor.size", "range", "input_tensor.permute", "NotImplementedError", "generator2.ConvLSTM._init_hidden", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "output_inner.append", "input_tensor.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        input_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "if", "not", "self", ".", "batch_first", ":", "\n", "# (t, b, c, h, w) -> (b, t, c, h, w)", "\n", "            ", "input_tensor", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "\n", "\n", "# Implement stateful ConvLSTM", "\n", "", "if", "hidden_state", "is", "not", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "else", ":", "\n", "            ", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "input_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "input_tensor", ".", "device", ")", "\n", "\n", "", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "input_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "input_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "            ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "            ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "return", "layer_output_list", ",", "last_state_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTM._init_hidden": [[232, 237], ["range", "init_states.append", "generator2.ConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTM._check_kernel_size_consistency": [[238, 243], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.ConvLSTM._extend_for_multilayer": [[244, 249], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutConvLSTM.__init__": [[253, 289], ["torch.Module.__init__", "generator2.LayoutConvLSTM._check_kernel_size_consistency", "generator2.LayoutConvLSTM._extend_for_multilayer", "generator2.LayoutConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "isinstance", "isinstance", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator2.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "LayoutConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", "or", "isinstance", "(", "hidden_dim", ",", "tuple", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", ",", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutConvLSTM.forward": [[290, 368], ["obj_tensor.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "len", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator2.LayoutConvLSTM._init_hidden", "obj_tensor.size", "range", "all_layer_output_list.append", "all_last_state_list.append", "torch.cat.append", "torch.cat.append", "torch.unsqueeze.append", "torch.unsqueeze.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "obj_tensor.size", "output_inner.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "obj_tensor", ",", "obj_to_img", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        obj_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "# split input_tensor into list according to obj_to_img", "\n", "O", "=", "obj_tensor", ".", "size", "(", "0", ")", "\n", "previous_img_id", "=", "0", "\n", "\n", "layouts_list", "=", "[", "]", "\n", "temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "O", ")", ":", "\n", "            ", "current_img_id", "=", "obj_to_img", "[", "i", "]", "\n", "if", "current_img_id", "==", "previous_img_id", ":", "\n", "                ", "temp", ".", "append", "(", "obj_tensor", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "temp", "=", "[", "obj_tensor", "[", "i", "]", "]", "\n", "previous_img_id", "=", "current_img_id", "\n", "# append last one", "\n", "", "", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "\n", "N", "=", "len", "(", "layouts_list", ")", "\n", "# print(N)", "\n", "all_layer_output_list", ",", "all_last_state_list", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "obj_tensor", "=", "layouts_list", "[", "i", "]", "\n", "# print(obj_tensor.shape)", "\n", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "obj_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "obj_tensor", ".", "device", ")", "\n", "\n", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "obj_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "obj_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "                ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                    ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "                ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "all_layer_output_list", ".", "append", "(", "layer_output_list", ")", "\n", "all_last_state_list", ".", "append", "(", "last_state_list", ")", "\n", "\n", "# concate last output to form a tensor", "\n", "", "batch_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "batch_output", ".", "append", "(", "all_last_state_list", "[", "i", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "", "batch_output", "=", "torch", ".", "cat", "(", "batch_output", ",", "dim", "=", "0", ")", "\n", "\n", "return", "batch_output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutConvLSTM._init_hidden": [[369, 374], ["range", "init_states.append", "generator2.LayoutConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutConvLSTM._check_kernel_size_consistency": [[375, 380], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutConvLSTM._extend_for_multilayer": [[381, 386], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.CropEncoder.__init__": [[389, 415], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "class_num", "=", "10", ")", ":", "\n", "# default: (3, 32, 32) -> (256, 8, 8)", "\n", "        ", "super", "(", "CropEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "16", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "16", ",", "class_num", ")", "\n", "# pool", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "# 256 -> 8", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "self", ".", "fc_logvar", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.CropEncoder.forward": [[416, 444], ["generator2.CropEncoder.c1", "generator2.CropEncoder.activation", "generator2.CropEncoder.c2", "generator2.CropEncoder.activation", "generator2.CropEncoder.c3", "generator2.CropEncoder.activation", "generator2.CropEncoder.c4", "generator2.CropEncoder.activation", "generator2.CropEncoder.conv5", "generator2.CropEncoder.activation", "generator2.CropEncoder.pool", "x.view.view.view", "generator2.CropEncoder.fc_mu", "generator2.CropEncoder.fc_logvar", "generator2.CropEncoder.mul().exp_", "get_z_random().to", "get_z_random().to.mul().add_", "generator2.CropEncoder.bn1", "generator2.CropEncoder.bn1", "generator2.CropEncoder.bn2", "generator2.CropEncoder.bn2", "generator2.CropEncoder.bn3", "generator2.CropEncoder.bn3", "generator2.CropEncoder.bn4", "generator2.CropEncoder.bn4", "generator2.CropEncoder.bn5", "generator2.CropEncoder.bn5", "x.view.view.size", "generator2.CropEncoder.mul", "generator2.get_z_random", "get_z_random().to.mul", "generator2.CropEncoder.mul().exp_.size", "generator2.CropEncoder.mul().exp_.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.get_z_random"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", "=", "None", ")", ":", "\n", "        ", "x", "=", "imgs", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn1", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn2", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn3", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn4", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn5", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "mu", "=", "self", ".", "fc_mu", "(", "x", ")", "\n", "logvar", "=", "self", ".", "fc_logvar", "(", "x", ")", "\n", "\n", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "get_z_random", "(", "std", ".", "size", "(", "0", ")", ",", "std", ".", "size", "(", "1", ")", ")", ".", "to", "(", "imgs", ".", "device", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "\n", "return", "z", ",", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutEncoder.__init__": [[447, 479], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Embedding", "torch.Embedding", "models2.transformer.transformer_encoder", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.LayoutConvLSTM", "layers.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator2.ConditionalBatchNorm2d", "generator2.LayoutConvLSTM", "generator2.ResidualBlock", "generator2.LayoutConvLSTM"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "embedding_dim", "=", "64", ",", "class_num", "=", "10", ",", "resi_num", "=", "6", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "LayoutEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "class_num", ",", "embedding_dim", ")", "\n", "self", ".", "transformer_encoder", "=", "transformer_encoder", "(", "3", ")", "\n", "if", "clstm_layers", "==", "1", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "2", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "3", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "# Bottleneck layers.", "\n", "for", "i", "in", "range", "(", "resi_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "64", ",", "dim_out", "=", "64", ")", ")", "\n", "", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "# (emb+z, 64, 64) -> (64, 64, 64)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "embedding_dim", "+", "z_dim", ",", "conv_dim", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 64, 64) -> (128, 32, 32)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 32, 32) -> (256, 16, 16)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 16, 16) -> (512, 8, 8)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "self", ".", "c5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.LayoutEncoder.forward": [[480, 521], ["generator2.LayoutEncoder.embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator2.LayoutEncoder.c1", "generator2.LayoutEncoder.bn1", "generator2.LayoutEncoder.activation", "generator2.LayoutEncoder.c2", "generator2.LayoutEncoder.bn2", "generator2.LayoutEncoder.activation", "generator2.LayoutEncoder.c3", "generator2.LayoutEncoder.bn3", "generator2.LayoutEncoder.activation", "generator2.LayoutEncoder.c4", "generator2.LayoutEncoder.bn4", "generator2.featuremap_composition", "h_sum.contiguous().view.contiguous().view.permute", "h_sum.contiguous().view.contiguous().view.contiguous().view", "generator2.LayoutEncoder.transformer_encoder", "generator2.LayoutEncoder.permute().contiguous().view", "generator2.LayoutEncoder.c5", "generator2.LayoutEncoder.bn5", "generator2.LayoutEncoder.activation", "generator2.LayoutEncoder.residual", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "h_sum.contiguous().view.contiguous().view.contiguous", "generator2.LayoutEncoder.permute().contiguous", "generator2.LayoutEncoder.permute"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.featuremap_composition", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual"], ["", "def", "forward", "(", "self", ",", "objs", ",", "masks", ",", "obj_to_img", ",", "z", ")", ":", "\n", "# prepare mask fm", "\n", "        ", "embeddings", "=", "self", ".", "embedding", "(", "objs", ")", "\n", "embeddings_z", "=", "torch", ".", "cat", "(", "(", "embeddings", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "h", "=", "embeddings_z", ".", "view", "(", "embeddings_z", ".", "size", "(", "0", ")", ",", "embeddings_z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "*", "masks", "\n", "# print(h.shape)", "\n", "# downsample layout", "\n", "h", "=", "self", ".", "c1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "h", "=", "self", ".", "bn4", "(", "h", ",", "objs", ")", "\n", "# print(h.shape)", "\n", "h_sum", "=", "featuremap_composition", "(", "h", ",", "obj_to_img", ")", "\n", "h_sum", "=", "h_sum", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "h_sum", "=", "h_sum", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "64", ",", "512", ")", "\n", "# print(h_sum.shape)", "\n", "h_sum_refine", "=", "self", ".", "transformer_encoder", "(", "h_sum", ")", "\n", "# print(h_sum_refine.shape)", "\n", "h_sum_refine", "=", "h_sum_refine", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "512", ",", "8", ",", "8", ")", "\n", "# print(h_sum_refine.shape)", "\n", "h_sum_refine", "=", "self", ".", "c5", "(", "h_sum_refine", ")", "\n", "h_sum_refine", "=", "self", ".", "bn5", "(", "h_sum_refine", ")", "\n", "h_sum_refine", "=", "self", ".", "activation", "(", "h_sum_refine", ")", "\n", "# print(h_sum_refine.shape)", "\n", "\n", "# clstm fusion (O, 512, 8, 8) -> (n, 64, 8, 8)", "\n", "# replace this lstm with transformer", "\n", "#h = self.clstm(h, obj_to_img)", "\n", "# print(h.shape)", "\n", "# residual block", "\n", "h", "=", "self", ".", "residual", "(", "h_sum_refine", ")", "\n", "# print(h.shape)", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.Decoder.__init__": [[524, 542], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# (64, 8, 8) -> (256, 8, 8)", "\n", "self", ".", "c0", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 8, 8) -> (256, 16, 16)", "\n", "self", ".", "dc1", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 16, 16) -> (128, 32, 32)", "\n", "self", ".", "dc2", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "\n", "# (128, 32, 32) -> (64, 64, 64)", "\n", "self", ".", "dc3", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "1", ")", "\n", "# (64, 64, 64) -> (3, 64, 64)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "1", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.Decoder.forward": [[543, 559], ["generator2.Decoder.c0", "generator2.Decoder.bn0", "generator2.Decoder.activation", "generator2.Decoder.dc1", "generator2.Decoder.bn1", "generator2.Decoder.activation", "generator2.Decoder.dc2", "generator2.Decoder.bn2", "generator2.Decoder.activation", "generator2.Decoder.dc3", "generator2.Decoder.bn3", "generator2.Decoder.activation", "generator2.Decoder.c4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "h", "=", "hidden", "\n", "h", "=", "self", ".", "c0", "(", "h", ")", "\n", "h", "=", "self", ".", "bn0", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.Generator.__init__": [[562, 569], ["torch.Module.__init__", "generator2.CropEncoder", "generator2.LayoutEncoder", "generator2.Decoder"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", "=", "64", ",", "z_dim", "=", "8", ",", "obj_size", "=", "32", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obj_size", "=", "obj_size", "\n", "# (3, 32, 32) -> (256, 4, 4) -> 8", "\n", "self", ".", "crop_encoder", "=", "CropEncoder", "(", "z_dim", "=", "z_dim", ",", "class_num", "=", "num_embeddings", ")", "\n", "self", ".", "layout_encoder", "=", "LayoutEncoder", "(", "z_dim", "=", "z_dim", ",", "embedding_dim", "=", "embedding_dim", ",", "class_num", "=", "num_embeddings", ",", "clstm_layers", "=", "clstm_layers", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", ")", "\n", "# self.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.Generator.forward": [[571, 590], ["models2.bilinear.crop_bbox_batch", "generator2.Generator.crop_encoder", "generator2.Generator.layout_encoder", "generator2.Generator.layout_encoder", "generator2.Generator.decoder", "generator2.Generator.decoder", "models2.bilinear.crop_bbox_batch", "generator2.Generator.crop_encoder", "models2.bilinear.crop_bbox_batch"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", ":", "\n", "        ", "crops_input", "=", "crop_bbox_batch", "(", "imgs", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "z_rec", ",", "mu", ",", "logvar", "=", "self", ".", "crop_encoder", "(", "crops_input", ",", "objs", ")", "\n", "# print(z_rec.shape)", "\n", "# print(z_rand.shape)", "\n", "\n", "# (n, clstm_dim*2, 8, 8)", "\n", "h_rec", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rec", ")", "\n", "h_rand", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", "\n", "\n", "img_rec", "=", "self", ".", "decoder", "(", "h_rec", ")", "\n", "img_rand", "=", "self", ".", "decoder", "(", "h_rand", ")", "\n", "\n", "crops_rand", "=", "crop_bbox_batch", "(", "img_rand", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "_", ",", "z_rand_rec", ",", "_", "=", "self", ".", "crop_encoder", "(", "crops_rand", ",", "objs", ")", "\n", "\n", "crops_input_rec", "=", "crop_bbox_batch", "(", "img_rec", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "\n", "return", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.featuremap_composition": [[7, 28], ["range", "obj_num.append", "max", "torch.zeros().cuda", "torch.zeros().cuda", "range", "z.size", "len", "z[].sum", "obj_num.append", "torch.zeros", "torch.zeros", "len", "z.size"], "function", ["None"], ["def", "featuremap_composition", "(", "z", ",", "obj_to_img", ")", ":", "\n", "    ", "obj_num", "=", "[", "]", "\n", "ref", "=", "0", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "z", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "if", "obj_to_img", "[", "i", "]", "==", "ref", ":", "\n", "            ", "count", "+=", "1", "\n", "", "else", ":", "\n", "            ", "obj_num", ".", "append", "(", "count", ")", "\n", "ref", "=", "obj_to_img", "[", "i", "]", "\n", "count", "=", "1", "\n", "", "", "obj_num", ".", "append", "(", "count", ")", "\n", "L", "=", "max", "(", "obj_num", ")", "\n", "holder", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "z", ".", "size", "(", "1", ")", ",", "8", ",", "8", ")", ".", "cuda", "(", ")", "\n", "#mask = torch.zeros(len(obj_num),L)", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "obj_num", ")", ")", ":", "\n", "        ", "holder", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "z", "[", "start", ":", "start", "+", "obj_num", "[", "i", "]", "]", ".", "sum", "(", "0", ")", "\n", "#mask[i,:obj_num[i]] = 1", "\n", "start", "=", "start", "+", "obj_num", "[", "i", "]", "\n", "", "return", "holder", "# ,mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.get_z_random": [[30, 36], ["torch.randn", "torch.randn", "torch.rand", "torch.rand"], "function", ["None"], ["", "def", "get_z_random", "(", "batch_size", ",", "z_dim", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "if", "random_type", "==", "'uni'", ":", "\n", "        ", "z", "=", "torch", ".", "rand", "(", "batch_size", ",", "z_dim", ")", "*", "2.0", "-", "1.0", "\n", "", "elif", "random_type", "==", "'gauss'", ":", "\n", "        ", "z", "=", "torch", ".", "randn", "(", "batch_size", ",", "z_dim", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator2.transform_z_flat": [[38, 49], ["torch.zeros().to", "torch.zeros().to", "range", "idx.view.view", "idx.view.size", "torch.zeros", "torch.zeros", "idx.view.dim", "z_flat.size"], "function", ["None"], ["", "def", "transform_z_flat", "(", "batch_size", ",", "time_step", ",", "z_flat", ",", "obj_to_img", ")", ":", "\n", "# restore z to batch with padding", "\n", "    ", "z", "=", "torch", ".", "zeros", "(", "batch_size", ",", "time_step", ",", "z_flat", ".", "size", "(", "1", ")", ")", ".", "to", "(", "z_flat", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "idx", "=", "(", "obj_to_img", ".", "data", "==", "i", ")", ".", "nonzero", "(", ")", "\n", "if", "idx", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "n", "=", "idx", ".", "size", "(", "0", ")", "\n", "z", "[", "i", ",", ":", "n", "]", "=", "z_flat", "[", "idx", "]", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.BoxMultiHeadedAttention.__init__": [[130, 156], ["torch.Module.__init__", "generator_app.clones", "generator_app.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "# matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.BoxMultiHeadedAttention.forward": [[157, 216], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "generator_app.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "generator_app.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "generator_app.BoxMultiHeadedAttention.layer_norm0", "generator_app.BoxMultiHeadedAttention.dropout", "generator_app.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "# if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "# tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "# print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "# print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "# if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "# print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ScaledDotProductAttention.__init__": [[221, 226], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ScaledDotProductAttention.forward": [[227, 245], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "generator_app.ScaledDotProductAttention.softmax", "generator_app.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.MultiHeadAttention.__init__": [[250, 270], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "generator_app.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.MultiHeadAttention.forward": [[271, 301], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "generator_app.MultiHeadAttention.w_qs().view", "generator_app.MultiHeadAttention.w_ks().view", "generator_app.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "generator_app.MultiHeadAttention.attention", "generator_app.MultiHeadAttention.view", "generator_app.MultiHeadAttention.permute().contiguous().view", "generator_app.MultiHeadAttention.layer_norm0", "generator_app.MultiHeadAttention.dropout", "generator_app.MultiHeadAttention.layer_norm", "generator_app.MultiHeadAttention.fc", "generator_app.MultiHeadAttention.w_qs", "generator_app.MultiHeadAttention.w_ks", "generator_app.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "generator_app.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "generator_app.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1).expand(mask.size(0),q.size(1),mask.size(1))", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConditionalBatchNorm2d.__init__": [[383, 390], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Embedding", "torch.Embedding", "torch.Embedding", "generator_app.ConditionalBatchNorm2d.embed.weight.data[].normal_", "generator_app.ConditionalBatchNorm2d.embed.weight.data[].zero_"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "affine", "=", "False", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "num_features", "*", "2", ")", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", ":", "num_features", "]", ".", "normal_", "(", "1", ",", "0.02", ")", "# Initialise scale at N(1, 0.02)", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", "num_features", ":", "]", ".", "zero_", "(", ")", "# Initialise bias at 0", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConditionalBatchNorm2d.forward": [[391, 396], ["generator_app.ConditionalBatchNorm2d.bn", "generator_app.ConditionalBatchNorm2d.embed().chunk", "beta.view", "generator_app.ConditionalBatchNorm2d.embed", "gamma.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn", "(", "x", ")", "\n", "gamma", ",", "beta", "=", "self", ".", "embed", "(", "y", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "out", "=", "gamma", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "*", "out", "+", "beta", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ResidualBlock.__init__": [[401, 409], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ResidualBlock.forward": [[410, 412], ["generator_app.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTMCell.__init__": [[416, 449], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "\"\"\"\n        Initialize ConvLSTM cell.\n\n        Parameters\n        ----------\n        input_size: (int, int)\n            Height and width of input tensor as (height, width).\n        input_dim: int\n            Number of channels of input tensor.\n        hidden_dim: int\n            Number of channels of hidden state.\n        kernel_size: (int, int)\n            Size of the convolutional kernel.\n        bias: bool\n            Whether or not to add the bias.\n        \"\"\"", "\n", "\n", "super", "(", "ConvLSTMCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "padding", "=", "kernel_size", "[", "0", "]", "//", "2", ",", "kernel_size", "[", "1", "]", "//", "2", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "input_dim", "+", "self", ".", "hidden_dim", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "hidden_dim", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "bias", "=", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTMCell.forward": [[450, 466], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator_app.ConvLSTMCell.conv", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "cur_state", ")", ":", "\n", "        ", "h_cur", ",", "c_cur", "=", "cur_state", "\n", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "input_tensor", ",", "h_cur", "]", ",", "dim", "=", "1", ")", "# concatenate along channel axis", "\n", "\n", "combined_conv", "=", "self", ".", "conv", "(", "combined", ")", "\n", "cc_i", ",", "cc_f", ",", "cc_o", ",", "cc_g", "=", "torch", ".", "split", "(", "combined_conv", ",", "self", ".", "hidden_dim", ",", "dim", "=", "1", ")", "\n", "i", "=", "torch", ".", "sigmoid", "(", "cc_i", ")", "\n", "f", "=", "torch", ".", "sigmoid", "(", "cc_f", ")", "\n", "o", "=", "torch", ".", "sigmoid", "(", "cc_o", ")", "\n", "g", "=", "torch", ".", "tanh", "(", "cc_g", ")", "\n", "\n", "c_next", "=", "f", "*", "c_cur", "+", "i", "*", "g", "\n", "h_next", "=", "o", "*", "torch", ".", "tanh", "(", "c_next", ")", "\n", "\n", "return", "h_next", ",", "c_next", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTMCell.init_hidden": [[467, 470], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "return", "(", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ",", "\n", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTM.__init__": [[474, 511], ["torch.Module.__init__", "generator_app.ConvLSTM._check_kernel_size_consistency", "isinstance", "generator_app.ConvLSTM._extend_for_multilayer", "generator_app.ConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator_app.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "batch_first", "=", "False", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "batch_first", "=", "batch_first", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTM.forward": [[512, 562], ["input_tensor.size", "range", "input_tensor.permute", "NotImplementedError", "generator_app.ConvLSTM._init_hidden", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "output_inner.append", "input_tensor.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        input_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "if", "not", "self", ".", "batch_first", ":", "\n", "# (t, b, c, h, w) -> (b, t, c, h, w)", "\n", "            ", "input_tensor", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "\n", "\n", "# Implement stateful ConvLSTM", "\n", "", "if", "hidden_state", "is", "not", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "else", ":", "\n", "            ", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "input_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "input_tensor", ".", "device", ")", "\n", "\n", "", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "input_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "input_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "            ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "            ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "return", "layer_output_list", ",", "last_state_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTM._init_hidden": [[563, 568], ["range", "init_states.append", "generator_app.ConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTM._check_kernel_size_consistency": [[569, 574], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.ConvLSTM._extend_for_multilayer": [[575, 580], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutConvLSTM.__init__": [[584, 620], ["torch.Module.__init__", "generator_app.LayoutConvLSTM._check_kernel_size_consistency", "generator_app.LayoutConvLSTM._extend_for_multilayer", "generator_app.LayoutConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "isinstance", "isinstance", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator_app.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "LayoutConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", "or", "isinstance", "(", "hidden_dim", ",", "tuple", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", ",", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutConvLSTM.forward": [[621, 699], ["obj_tensor.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "len", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator_app.LayoutConvLSTM._init_hidden", "obj_tensor.size", "range", "all_layer_output_list.append", "all_last_state_list.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.unsqueeze.append", "torch.unsqueeze.append", "torch.unsqueeze.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "obj_tensor.size", "output_inner.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "obj_tensor", ",", "obj_to_img", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        obj_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "# split input_tensor into list according to obj_to_img", "\n", "O", "=", "obj_tensor", ".", "size", "(", "0", ")", "\n", "previous_img_id", "=", "0", "\n", "\n", "layouts_list", "=", "[", "]", "\n", "temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "O", ")", ":", "\n", "            ", "current_img_id", "=", "obj_to_img", "[", "i", "]", "\n", "if", "current_img_id", "==", "previous_img_id", ":", "\n", "                ", "temp", ".", "append", "(", "obj_tensor", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "temp", "=", "[", "obj_tensor", "[", "i", "]", "]", "\n", "previous_img_id", "=", "current_img_id", "\n", "# append last one", "\n", "", "", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "\n", "N", "=", "len", "(", "layouts_list", ")", "\n", "# print(N)", "\n", "all_layer_output_list", ",", "all_last_state_list", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "obj_tensor", "=", "layouts_list", "[", "i", "]", "\n", "# print(obj_tensor.shape)", "\n", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "obj_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "obj_tensor", ".", "device", ")", "\n", "\n", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "obj_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "obj_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "                ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                    ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "                ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "all_layer_output_list", ".", "append", "(", "layer_output_list", ")", "\n", "all_last_state_list", ".", "append", "(", "last_state_list", ")", "\n", "\n", "# concate last output to form a tensor", "\n", "", "batch_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "batch_output", ".", "append", "(", "all_last_state_list", "[", "i", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "", "batch_output", "=", "torch", ".", "cat", "(", "batch_output", ",", "dim", "=", "0", ")", "\n", "\n", "return", "batch_output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutConvLSTM._init_hidden": [[700, 705], ["range", "init_states.append", "generator_app.LayoutConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutConvLSTM._check_kernel_size_consistency": [[706, 711], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutConvLSTM._extend_for_multilayer": [[712, 717], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.CropEncoder.__init__": [[720, 746], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "class_num", "=", "10", ")", ":", "\n", "# default: (3, 32, 32) -> (256, 8, 8)", "\n", "        ", "super", "(", "CropEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "16", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "16", ",", "class_num", ")", "\n", "# pool", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "# 256 -> 8", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "self", ".", "fc_logvar", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.CropEncoder.forward": [[747, 775], ["generator_app.CropEncoder.c1", "generator_app.CropEncoder.activation", "generator_app.CropEncoder.c2", "generator_app.CropEncoder.activation", "generator_app.CropEncoder.c3", "generator_app.CropEncoder.activation", "generator_app.CropEncoder.c4", "generator_app.CropEncoder.activation", "generator_app.CropEncoder.conv5", "generator_app.CropEncoder.activation", "generator_app.CropEncoder.pool", "x.view.view.view", "generator_app.CropEncoder.fc_mu", "generator_app.CropEncoder.fc_logvar", "generator_app.CropEncoder.mul().exp_", "get_z_random().to", "get_z_random().to.mul().add_", "generator_app.CropEncoder.bn1", "generator_app.CropEncoder.bn1", "generator_app.CropEncoder.bn2", "generator_app.CropEncoder.bn2", "generator_app.CropEncoder.bn3", "generator_app.CropEncoder.bn3", "generator_app.CropEncoder.bn4", "generator_app.CropEncoder.bn4", "generator_app.CropEncoder.bn5", "generator_app.CropEncoder.bn5", "x.view.view.size", "generator_app.CropEncoder.mul", "generator_app.get_z_random", "get_z_random().to.mul", "generator_app.CropEncoder.mul().exp_.size", "generator_app.CropEncoder.mul().exp_.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.get_z_random"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", "=", "None", ")", ":", "\n", "        ", "x", "=", "imgs", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn1", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn2", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn3", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn4", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn5", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "mu", "=", "self", ".", "fc_mu", "(", "x", ")", "\n", "logvar", "=", "self", ".", "fc_logvar", "(", "x", ")", "\n", "\n", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "get_z_random", "(", "std", ".", "size", "(", "0", ")", ",", "std", ".", "size", "(", "1", ")", ")", ".", "to", "(", "imgs", ".", "device", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "\n", "return", "z", ",", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutEncoder.__init__": [[778, 811], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Embedding", "torch.Embedding", "torch.Embedding", "models2.transformer.transformer_encoder", "generator_app.MultiHeadAttention", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.LayoutConvLSTM", "layers.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator_app.ConditionalBatchNorm2d", "generator_app.LayoutConvLSTM", "generator_app.ResidualBlock", "generator_app.LayoutConvLSTM"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "embedding_dim", "=", "64", ",", "class_num", "=", "10", ",", "resi_num", "=", "6", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "LayoutEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "class_num", ",", "embedding_dim", ")", "\n", "self", ".", "transformer_encoder", "=", "transformer_encoder", "(", "3", ")", "\n", "self", ".", "context", "=", "MultiHeadAttention", "(", "1", ",", "embedding_dim", "+", "z_dim", ",", "embedding_dim", "+", "z_dim", ",", "embedding_dim", "+", "z_dim", ",", "dropout", "=", "0.0", ")", "\n", "if", "clstm_layers", "==", "1", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "2", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "3", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "# Bottleneck layers.", "\n", "for", "i", "in", "range", "(", "resi_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "64", ",", "dim_out", "=", "64", ")", ")", "\n", "", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "# (emb+z, 64, 64) -> (64, 64, 64)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "embedding_dim", "+", "z_dim", ",", "conv_dim", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 64, 64) -> (128, 32, 32)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 32, 32) -> (256, 16, 16)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 16, 16) -> (512, 8, 8)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "self", ".", "c5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.LayoutEncoder.forward": [[812, 862], ["generator_app.LayoutEncoder.embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator_app.feature_vector_split", "generator_app.LayoutEncoder.context", "generator_app.feature_vector_combine", "generator_app.LayoutEncoder.c1", "generator_app.LayoutEncoder.bn1", "generator_app.LayoutEncoder.activation", "generator_app.LayoutEncoder.c2", "generator_app.LayoutEncoder.bn2", "generator_app.LayoutEncoder.activation", "generator_app.LayoutEncoder.c3", "generator_app.LayoutEncoder.bn3", "generator_app.LayoutEncoder.activation", "generator_app.LayoutEncoder.c4", "generator_app.LayoutEncoder.bn4", "generator_app.featuremap_composition", "h_sum.contiguous().view.contiguous().view.permute", "h_sum.contiguous().view.contiguous().view.contiguous().view", "generator_app.LayoutEncoder.transformer_encoder", "generator_app.LayoutEncoder.permute().contiguous().view", "generator_app.LayoutEncoder.c5", "generator_app.LayoutEncoder.bn5", "generator_app.LayoutEncoder.activation", "generator_app.LayoutEncoder.residual", "feature_vector_combine.view", "feature_vector_combine.size", "feature_vector_combine.size", "h_sum.contiguous().view.contiguous().view.contiguous", "generator_app.LayoutEncoder.permute().contiguous", "generator_app.LayoutEncoder.permute"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.feature_vector_split", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.feature_vector_combine", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.featuremap_composition", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual"], ["", "def", "forward", "(", "self", ",", "objs", ",", "masks", ",", "obj_to_img", ",", "z", ")", ":", "\n", "# prepare mask fm", "\n", "        ", "embeddings", "=", "self", ".", "embedding", "(", "objs", ")", "\n", "\n", "embeddings_z", "=", "torch", ".", "cat", "(", "(", "embeddings", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "# print(embeddings_z.shape)", "\n", "embeddings_z", ",", "fill_mask", "=", "feature_vector_split", "(", "embeddings_z", ",", "obj_to_img", ")", "\n", "# print(embeddings_z.shape)", "\n", "embeddings_z", "=", "self", ".", "context", "(", "embeddings_z", ",", "embeddings_z", ",", "embeddings_z", ",", "fill_mask", ")", "\n", "# print(embeddings_z.shape)", "\n", "embeddings_z", "=", "feature_vector_combine", "(", "embeddings_z", ",", "fill_mask", ")", "\n", "# print(embeddings_z.shape)", "\n", "h", "=", "embeddings_z", ".", "view", "(", "embeddings_z", ".", "size", "(", "0", ")", ",", "embeddings_z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "*", "masks", "\n", "# print(h.shape)", "\n", "# downsample layout", "\n", "h", "=", "self", ".", "c1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "h", "=", "self", ".", "bn4", "(", "h", ",", "objs", ")", "\n", "# print(h.shape)", "\n", "h_sum", "=", "featuremap_composition", "(", "h", ",", "obj_to_img", ")", "\n", "# print(h_sum.shape)", "\n", "h_sum", "=", "h_sum", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "h_sum", "=", "h_sum", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "64", ",", "512", ")", "\n", "# print(h_sum.shape)", "\n", "h_sum_refine", "=", "self", ".", "transformer_encoder", "(", "h_sum", ")", "\n", "# print(h_sum_refine.shape)", "\n", "h_sum_refine", "=", "h_sum_refine", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "512", ",", "8", ",", "8", ")", "\n", "# print(h_sum_refine.shape)", "\n", "h_sum_refine", "=", "self", ".", "c5", "(", "h_sum_refine", ")", "\n", "h_sum_refine", "=", "self", ".", "bn5", "(", "h_sum_refine", ")", "\n", "h_sum_refine", "=", "self", ".", "activation", "(", "h_sum_refine", ")", "\n", "# print(h_sum_refine.shape)", "\n", "\n", "# clstm fusion (O, 512, 8, 8) -> (n, 64, 8, 8)", "\n", "# replace this lstm with transformer", "\n", "#h = self.clstm(h, obj_to_img)", "\n", "# print(h.shape)", "\n", "# residual block", "\n", "h", "=", "self", ".", "residual", "(", "h_sum_refine", ")", "\n", "# print(h.shape)", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Decoder.__init__": [[865, 883], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# (64, 8, 8) -> (256, 8, 8)", "\n", "self", ".", "c0", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 8, 8) -> (256, 16, 16)", "\n", "self", ".", "dc1", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 16, 16) -> (128, 32, 32)", "\n", "self", ".", "dc2", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "\n", "# (128, 32, 32) -> (64, 64, 64)", "\n", "self", ".", "dc3", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "1", ")", "\n", "# (64, 64, 64) -> (3, 64, 64)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "1", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Decoder.forward": [[884, 900], ["generator_app.Decoder.c0", "generator_app.Decoder.bn0", "generator_app.Decoder.activation", "generator_app.Decoder.dc1", "generator_app.Decoder.bn1", "generator_app.Decoder.activation", "generator_app.Decoder.dc2", "generator_app.Decoder.bn2", "generator_app.Decoder.activation", "generator_app.Decoder.dc3", "generator_app.Decoder.bn3", "generator_app.Decoder.activation", "generator_app.Decoder.c4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "h", "=", "hidden", "\n", "h", "=", "self", ".", "c0", "(", "h", ")", "\n", "h", "=", "self", ".", "bn0", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Generator.__init__": [[903, 910], ["torch.Module.__init__", "generator_app.CropEncoder", "generator_app.LayoutEncoder", "generator_app.Decoder"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", "=", "64", ",", "z_dim", "=", "8", ",", "obj_size", "=", "32", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obj_size", "=", "obj_size", "\n", "# (3, 32, 32) -> (256, 4, 4) -> 8", "\n", "self", ".", "crop_encoder", "=", "CropEncoder", "(", "z_dim", "=", "z_dim", ",", "class_num", "=", "num_embeddings", ")", "\n", "self", ".", "layout_encoder", "=", "LayoutEncoder", "(", "z_dim", "=", "z_dim", ",", "embedding_dim", "=", "embedding_dim", ",", "class_num", "=", "num_embeddings", ",", "clstm_layers", "=", "clstm_layers", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", ")", "\n", "# self.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Generator.forward": [[912, 931], ["models2.bilinear.crop_bbox_batch", "generator_app.Generator.crop_encoder", "generator_app.Generator.layout_encoder", "generator_app.Generator.layout_encoder", "generator_app.Generator.decoder", "generator_app.Generator.decoder", "models2.bilinear.crop_bbox_batch", "generator_app.Generator.crop_encoder", "models2.bilinear.crop_bbox_batch"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", ":", "\n", "        ", "crops_input", "=", "crop_bbox_batch", "(", "imgs", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "z_rec", ",", "mu", ",", "logvar", "=", "self", ".", "crop_encoder", "(", "crops_input", ",", "objs", ")", "\n", "# print(z_rec.shape)", "\n", "# print(z_rand.shape)", "\n", "\n", "# (n, clstm_dim*2, 8, 8)", "\n", "h_rec", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rec", ")", "\n", "h_rand", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", "\n", "\n", "img_rec", "=", "self", ".", "decoder", "(", "h_rec", ")", "\n", "img_rand", "=", "self", ".", "decoder", "(", "h_rand", ")", "\n", "\n", "crops_rand", "=", "crop_bbox_batch", "(", "img_rand", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "_", ",", "z_rand_rec", ",", "_", "=", "self", ".", "crop_encoder", "(", "crops_rand", ",", "objs", ")", "\n", "\n", "crops_input_rec", "=", "crop_bbox_batch", "(", "img_rec", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "\n", "return", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Generator_context.__init__": [[934, 942], ["torch.Module.__init__", "generator_app.CropEncoder", "generator_app.LayoutEncoder", "generator_app.Decoder"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", "=", "64", ",", "z_dim", "=", "8", ",", "obj_size", "=", "32", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "Generator_context", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obj_size", "=", "obj_size", "\n", "# (3, 32, 32) -> (256, 4, 4) -> 8", "\n", "\n", "self", ".", "crop_encoder", "=", "CropEncoder", "(", "z_dim", "=", "z_dim", ",", "class_num", "=", "num_embeddings", ")", "\n", "self", ".", "layout_encoder", "=", "LayoutEncoder", "(", "z_dim", "=", "z_dim", ",", "embedding_dim", "=", "embedding_dim", ",", "class_num", "=", "num_embeddings", ",", "clstm_layers", "=", "clstm_layers", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", ")", "\n", "# self.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.Generator_context.forward": [[944, 963], ["models2.bilinear.crop_bbox_batch", "generator_app.Generator_context.crop_encoder", "generator_app.Generator_context.layout_encoder", "generator_app.Generator_context.layout_encoder", "generator_app.Generator_context.decoder", "generator_app.Generator_context.decoder", "models2.bilinear.crop_bbox_batch", "generator_app.Generator_context.crop_encoder", "models2.bilinear.crop_bbox_batch"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", ":", "\n", "        ", "crops_input", "=", "crop_bbox_batch", "(", "imgs", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "z_rec", ",", "mu", ",", "logvar", "=", "self", ".", "crop_encoder", "(", "crops_input", ",", "objs", ")", "\n", "# print(z_rec.shape)", "\n", "# print(z_rand.shape)", "\n", "\n", "# (n, clstm_dim*2, 8, 8)", "\n", "h_rec", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rec", ")", "\n", "h_rand", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", "\n", "\n", "img_rec", "=", "self", ".", "decoder", "(", "h_rec", ")", "\n", "img_rand", "=", "self", ".", "decoder", "(", "h_rand", ")", "\n", "\n", "crops_rand", "=", "crop_bbox_batch", "(", "img_rand", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "_", ",", "z_rand_rec", ",", "_", "=", "self", ".", "crop_encoder", "(", "crops_rand", ",", "objs", ")", "\n", "\n", "crops_input_rec", "=", "crop_bbox_batch", "(", "img_rec", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "\n", "return", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.clones": [[9, 12], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.BoxRelationalEmbedding": [[14, 74], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "# returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "# follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "# cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.box_attention": [[76, 122], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "w_g.masked_fill.masked_fill", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "numpy.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.log", "torch.log", "torch.log", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "torch.clamp", "torch.clamp", "torch.clamp", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "# print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "# print(w_q.shape)", "\n", "# print(w_k.shape)", "\n", "# attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "# print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_g", "=", "w_g", ".", "masked_fill", "(", "mask", "==", "0", ",", "0", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "# print(w_g.shape)", "\n", "# print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "# print(w_a)", "\n", "# print(w_g)", "\n", "w_mn", "=", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "w_g", ",", "min", "=", "1e-6", ")", ")", "+", "w_a", "\n", "#w_mn = w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.feature_vector_combine": [[303, 312], ["range", "torch.stack", "torch.stack", "torch.stack", "z.size", "range", "z.size", "all_feat.append"], "function", ["None"], ["", "", "def", "feature_vector_combine", "(", "z", ",", "mask", ")", ":", "\n", "    ", "all_feat", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "z", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "z", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "if", "mask", "[", "i", ",", "j", "]", "!=", "0", ":", "\n", "                ", "all_feat", ".", "append", "(", "z", "[", "i", ",", "j", "]", ")", "\n", "\n", "", "", "", "return", "torch", ".", "stack", "(", "all_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.feature_vector_split": [[314, 336], ["range", "obj_num.append", "max", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "range", "z.size", "len", "obj_num.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "z.size", "len"], "function", ["None"], ["", "def", "feature_vector_split", "(", "z", ",", "obj_to_img", ")", ":", "\n", "    ", "obj_num", "=", "[", "]", "\n", "ref", "=", "0", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "z", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "if", "obj_to_img", "[", "i", "]", "==", "ref", ":", "\n", "            ", "count", "+=", "1", "\n", "", "else", ":", "\n", "            ", "obj_num", ".", "append", "(", "count", ")", "\n", "ref", "=", "obj_to_img", "[", "i", "]", "\n", "count", "=", "1", "\n", "", "", "obj_num", ".", "append", "(", "count", ")", "\n", "L", "=", "max", "(", "obj_num", ")", "\n", "holder", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "L", ",", "z", ".", "size", "(", "1", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "mask", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "L", ")", ".", "cuda", "(", ")", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "obj_num", ")", ")", ":", "\n", "        ", "holder", "[", "i", ",", ":", "obj_num", "[", "i", "]", ",", ":", "]", "=", "z", "[", "start", ":", "start", "+", "obj_num", "[", "i", "]", "]", "\n", "mask", "[", "i", ",", ":", "obj_num", "[", "i", "]", "]", "=", "1", "\n", "start", "=", "start", "+", "obj_num", "[", "i", "]", "\n", "", "return", "holder", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.featuremap_composition": [[338, 359], ["range", "obj_num.append", "max", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "range", "z.size", "len", "z[].sum", "obj_num.append", "torch.zeros", "torch.zeros", "torch.zeros", "len", "z.size"], "function", ["None"], ["", "def", "featuremap_composition", "(", "z", ",", "obj_to_img", ")", ":", "\n", "    ", "obj_num", "=", "[", "]", "\n", "ref", "=", "0", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "z", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "if", "obj_to_img", "[", "i", "]", "==", "ref", ":", "\n", "            ", "count", "+=", "1", "\n", "", "else", ":", "\n", "            ", "obj_num", ".", "append", "(", "count", ")", "\n", "ref", "=", "obj_to_img", "[", "i", "]", "\n", "count", "=", "1", "\n", "", "", "obj_num", ".", "append", "(", "count", ")", "\n", "L", "=", "max", "(", "obj_num", ")", "\n", "holder", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "z", ".", "size", "(", "1", ")", ",", "8", ",", "8", ")", ".", "cuda", "(", ")", "\n", "#mask = torch.zeros(len(obj_num),L)", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "obj_num", ")", ")", ":", "\n", "        ", "holder", "[", "i", ",", ":", ",", ":", ",", ":", "]", "=", "z", "[", "start", ":", "start", "+", "obj_num", "[", "i", "]", "]", ".", "sum", "(", "0", ")", "\n", "#mask[i,:obj_num[i]] = 1", "\n", "start", "=", "start", "+", "obj_num", "[", "i", "]", "\n", "", "return", "holder", "# ,mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.get_z_random": [[361, 367], ["torch.randn", "torch.randn", "torch.randn", "torch.rand", "torch.rand", "torch.rand"], "function", ["None"], ["", "def", "get_z_random", "(", "batch_size", ",", "z_dim", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "if", "random_type", "==", "'uni'", ":", "\n", "        ", "z", "=", "torch", ".", "rand", "(", "batch_size", ",", "z_dim", ")", "*", "2.0", "-", "1.0", "\n", "", "elif", "random_type", "==", "'gauss'", ":", "\n", "        ", "z", "=", "torch", ".", "randn", "(", "batch_size", ",", "z_dim", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator_app.transform_z_flat": [[369, 380], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "idx.view.view", "idx.view.size", "torch.zeros", "torch.zeros", "torch.zeros", "idx.view.dim", "z_flat.size"], "function", ["None"], ["", "def", "transform_z_flat", "(", "batch_size", ",", "time_step", ",", "z_flat", ",", "obj_to_img", ")", ":", "\n", "# restore z to batch with padding", "\n", "    ", "z", "=", "torch", ".", "zeros", "(", "batch_size", ",", "time_step", ",", "z_flat", ".", "size", "(", "1", ")", ")", ".", "to", "(", "z_flat", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "idx", "=", "(", "obj_to_img", ".", "data", "==", "i", ")", ".", "nonzero", "(", ")", "\n", "if", "idx", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "n", "=", "idx", ".", "size", "(", "0", ")", "\n", "z", "[", "i", ",", ":", "n", "]", "=", "z_flat", "[", "idx", "]", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch": [[26, 58], ["feats.size", "bbox.size", "torch.zeros", "torch.zeros", "range", "bilinear.crop_bbox_batch_cudnn", "idx.view.view", "idx.view.size", "feats[].view().expand().contiguous", "bilinear.crop_bbox", "idx.view.dim", "feats[].view().expand", "feats[].view"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch_cudnn", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox"], ["\n", "N", "=", "feats", ".", "size", "(", "0", ")", "\n", "assert", "bbox", ".", "size", "(", "0", ")", "==", "N", "\n", "assert", "bbox", ".", "size", "(", "1", ")", "==", "4", "\n", "if", "WW", "is", "None", ":", "WW", "=", "HH", "\n", "# if backend == 'cudnn':", "\n", "# Change box from [0, 1] to [-1, 1] coordinate system", "\n", "#    bbox = 2 * bbox - 1", "\n", "x0", ",", "y0", "=", "2", "*", "bbox", "[", ":", ",", "0", "]", "-", "1", ",", "2", "*", "bbox", "[", ":", ",", "1", "]", "-", "1", "\n", "x1", ",", "y1", "=", "2", "*", "(", "bbox", "[", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", "0", "]", ")", "-", "1", ",", "2", "*", "(", "bbox", "[", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", "1", "]", ")", "-", "1", "\n", "\n", "X", "=", "tensor_linspace", "(", "x0", ",", "x1", ",", "steps", "=", "WW", ")", ".", "view", "(", "N", ",", "1", ",", "WW", ")", ".", "expand", "(", "N", ",", "HH", ",", "WW", ")", ".", "cuda", "(", "device", "=", "feats", ".", "device", ")", "\n", "Y", "=", "tensor_linspace", "(", "y0", ",", "y1", ",", "steps", "=", "HH", ")", ".", "view", "(", "N", ",", "HH", ",", "1", ")", ".", "expand", "(", "N", ",", "HH", ",", "WW", ")", ".", "cuda", "(", "device", "=", "feats", ".", "device", ")", "\n", "\n", "if", "backend", "==", "'jj'", ":", "\n", "        ", "return", "bilinear_sample", "(", "feats", ",", "X", ",", "Y", ")", "\n", "", "elif", "backend", "==", "'cudnn'", ":", "\n", "        ", "grid", "=", "torch", ".", "stack", "(", "[", "X", ",", "Y", "]", ",", "dim", "=", "3", ")", "\n", "return", "F", ".", "grid_sample", "(", "feats", ",", "grid", ")", "\n", "\n", "\n", "", "", "def", "tensor_linspace", "(", "start", ",", "end", ",", "steps", "=", "10", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear._invperm": [[60, 65], ["p.size", "torch.arange().type_as", "torch.arange().type_as", "torch.arange", "torch.arange"], "function", ["None"], ["\n", "assert", "start", ".", "size", "(", ")", "==", "end", ".", "size", "(", ")", "\n", "view_size", "=", "start", ".", "size", "(", ")", "+", "(", "1", ",", ")", "\n", "w_size", "=", "(", "1", ",", ")", "*", "start", ".", "dim", "(", ")", "+", "(", "steps", ",", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch_cudnn": [[67, 99], ["feats.size", "bbox.size", "feats.data.type", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bilinear.crop_bbox", "torch.cat", "torch.cat", "torch.arange().type_as", "torch.arange().type_as", "idx.view.view", "idx.view.size", "feats[].view().expand().contiguous", "torch.cat.append", "torch.cat.append", "torch.cat.append", "idx.view.dim", "torch.arange", "torch.arange", "bilinear._invperm", "feats[].view().expand", "feats[].view"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear._invperm"], ["\n", "start_w", "=", "torch", ".", "linspace", "(", "1", ",", "0", ",", "steps", "=", "steps", ")", ".", "to", "(", "start", ")", "\n", "start_w", "=", "start_w", ".", "view", "(", "w_size", ")", ".", "expand", "(", "out_size", ")", "\n", "end_w", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "steps", ")", ".", "to", "(", "start", ")", "\n", "end_w", "=", "end_w", ".", "view", "(", "w_size", ")", ".", "expand", "(", "out_size", ")", "\n", "\n", "start", "=", "start", ".", "contiguous", "(", ")", ".", "view", "(", "view_size", ")", ".", "expand", "(", "out_size", ")", "\n", "end", "=", "end", ".", "contiguous", "(", ")", ".", "view", "(", "view_size", ")", ".", "expand", "(", "out_size", ")", "\n", "\n", "out", "=", "start_w", "*", "start", "+", "end_w", "*", "end", "\n", "return", "out", "\n", "\n", "\n", "", "def", "bilinear_sample", "(", "feats", ",", "X", ",", "Y", ")", ":", "\n", "    ", "\"\"\"\n    Perform bilinear sampling on the features in feats using the sampling grid\n    given by X and Y.\n    Inputs:\n        - feats: Tensor holding input feature map, of shape (N, C, H, W)\n        - X, Y: Tensors holding x and y coordinates of the sampling\n        grids; both have shape shape (N, HH, WW) and have elements in the range [0, 1].\n    Returns:\n        - out: Tensor of shape (B, C, HH, WW) where out[i] is computed\n        by sampling from feats[idx[i]] using the sampling grid (X[i], Y[i]).\n    \"\"\"", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "feats", ".", "size", "(", ")", "\n", "assert", "X", ".", "size", "(", ")", "==", "Y", ".", "size", "(", ")", "\n", "assert", "X", ".", "size", "(", "0", ")", "==", "N", "\n", "_", ",", "HH", ",", "WW", "=", "X", ".", "size", "(", ")", "\n", "\n", "X", "=", "X", ".", "mul", "(", "W", ")", "\n", "Y", "=", "Y", ".", "mul", "(", "H", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox": [[101, 131], ["feats.size", "tensor_linspace().view().expand", "tensor_linspace().view().expand", "bbox.size", "bbox.size", "bilinear.bilinear_sample", "tensor_linspace().view", "tensor_linspace().view", "torch.stack", "torch.stack", "torch.grid_sample", "bilinear.tensor_linspace", "bilinear.tensor_linspace"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.bilinear_sample", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.tensor_linspace", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.tensor_linspace"], ["x0", "=", "X", ".", "floor", "(", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "W", "-", "1", ")", "\n", "x1", "=", "(", "x0", "+", "1", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "W", "-", "1", ")", "\n", "y0", "=", "Y", ".", "floor", "(", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "H", "-", "1", ")", "\n", "y1", "=", "(", "y0", "+", "1", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "H", "-", "1", ")", "\n", "\n", "# In numpy we could do something like feats[i, :, y0, x0] to pull out", "\n", "# the elements of feats at coordinates y0 and x0, but PyTorch doesn't", "\n", "# yet support this style of indexing. Instead we have to use the gather", "\n", "# method, which only allows us to index along one dimension at a time;", "\n", "# therefore we will collapse the features (BB, C, H, W) into (BB, C, H * W)", "\n", "# and index along the last dimension. Below we generate linear indices into", "\n", "# the collapsed last dimension for each of the four combinations we need.", "\n", "y0x0_idx", "=", "(", "W", "*", "y0", "+", "x0", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y1x0_idx", "=", "(", "W", "*", "y1", "+", "x0", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y0x1_idx", "=", "(", "W", "*", "y0", "+", "x1", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "y1x1_idx", "=", "(", "W", "*", "y1", "+", "x1", ")", ".", "view", "(", "N", ",", "1", ",", "HH", "*", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", "*", "WW", ")", "\n", "\n", "# Actually use gather to pull out the values from feats corresponding", "\n", "# to our four samples, then reshape them to (BB, C, HH, WW)", "\n", "feats_flat", "=", "feats", ".", "view", "(", "N", ",", "C", ",", "H", "*", "W", ")", "\n", "v1", "=", "feats_flat", ".", "gather", "(", "2", ",", "y0x0_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v2", "=", "feats_flat", ".", "gather", "(", "2", ",", "y1x0_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v3", "=", "feats_flat", ".", "gather", "(", "2", ",", "y0x1_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "v4", "=", "feats_flat", ".", "gather", "(", "2", ",", "y1x1_idx", ".", "long", "(", ")", ")", ".", "view", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "\n", "# Compute the weights for the four samples", "\n", "w1", "=", "(", "(", "x1", "-", "X", ")", "*", "(", "y1", "-", "Y", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w2", "=", "(", "(", "x1", "-", "X", ")", "*", "(", "Y", "-", "y0", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w3", "=", "(", "(", "X", "-", "x0", ")", "*", "(", "y1", "-", "Y", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "w4", "=", "(", "(", "X", "-", "x0", ")", "*", "(", "Y", "-", "y0", ")", ")", ".", "view", "(", "N", ",", "1", ",", "HH", ",", "WW", ")", ".", "expand", "(", "N", ",", "C", ",", "HH", ",", "WW", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.uncrop_bbox": [[133, 186], ["x0.contiguous().view().expand.contiguous().view().expand", "x1.contiguous().view().expand.contiguous().view().expand", "ww.view().expand.view().expand", "y0.contiguous().view().expand.contiguous().view().expand", "y1.contiguous().view().expand.contiguous().view().expand", "hh.view().expand.view().expand", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "out_mask.view().expand.view().expand", "X.view().expand.view().expand", "Y.view().expand.view().expand", "bilinear.bilinear_sample", "feats.size", "feats.size", "bbox.size", "bbox.size", "x0.contiguous().view().expand.contiguous().view", "x1.contiguous().view().expand.contiguous().view", "ww.view().expand.view", "y0.contiguous().view().expand.contiguous().view", "y1.contiguous().view().expand.contiguous().view", "hh.view().expand.view", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "out_mask.view().expand.view", "X.view().expand.view", "Y.view().expand.view", "x0.contiguous().view().expand.contiguous", "x1.contiguous().view().expand.contiguous", "y0.contiguous().view().expand.contiguous", "y1.contiguous().view().expand.contiguous", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.bilinear_sample"], ["out", "=", "w1", "*", "v1", "+", "w2", "*", "v2", "+", "w3", "*", "v3", "+", "w4", "*", "v4", "\n", "return", "out", "\n", "\n", "\n", "", "def", "masks_to_layout", "(", "boxes", ",", "masks", ",", "H", ",", "W", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Inputs:\n        - boxes: Tensor of shape (b, num_o, 4) giving bounding boxes in the format\n            [x0, y0, x1, y1] in the [0, 1] coordinate space\n        - masks: Tensor of shape (b, num_o, M, M) giving binary masks for each object\n        - H, W: Size of the output image.\n    Returns:\n        - out: Tensor of shape (N, num_o, H, W)\n    \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "boxes", ".", "size", "(", ")", "\n", "M", "=", "masks", ".", "size", "(", "2", ")", "\n", "assert", "masks", ".", "size", "(", ")", "==", "(", "b", ",", "num_o", ",", "M", ",", "M", ")", "\n", "if", "W", "is", "None", ":", "\n", "        ", "W", "=", "H", "\n", "\n", "", "grid", "=", "_boxes_to_grid", "(", "boxes", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", ",", "H", ",", "W", ")", ".", "float", "(", ")", ".", "cuda", "(", "device", "=", "masks", ".", "device", ")", "\n", "\n", "img_in", "=", "masks", ".", "float", "(", ")", ".", "view", "(", "b", "*", "num_o", ",", "1", ",", "M", ",", "M", ")", "\n", "sampled", "=", "F", ".", "grid_sample", "(", "img_in", ",", "grid", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "return", "sampled", ".", "view", "(", "b", ",", "num_o", ",", "H", ",", "W", ")", "\n", "\n", "\n", "", "def", "_boxes_to_grid", "(", "boxes", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - boxes: FloatTensor of shape (O, 4) giving boxes in the [x0, y0, x1, y1]\n      format in the [0, 1] coordinate space\n    - H, W: Scalars giving size of output\n    Returns:\n    - grid: FloatTensor of shape (O, H, W, 2) suitable for passing to grid_sample\n    \"\"\"", "\n", "O", "=", "boxes", ".", "size", "(", "0", ")", "\n", "\n", "boxes", "=", "boxes", ".", "view", "(", "O", ",", "4", ",", "1", ",", "1", ")", "\n", "\n", "# All these are (O, 1, 1)", "\n", "x0", ",", "y0", "=", "boxes", "[", ":", ",", "0", "]", ",", "boxes", "[", ":", ",", "1", "]", "\n", "ww", ",", "hh", "=", "boxes", "[", ":", ",", "2", "]", ",", "boxes", "[", ":", ",", "3", "]", "\n", "\n", "X", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "W", ")", ".", "view", "(", "1", ",", "1", ",", "W", ")", ".", "to", "(", "boxes", ")", "\n", "Y", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "H", ")", ".", "view", "(", "1", ",", "H", ",", "1", ")", ".", "to", "(", "boxes", ")", "\n", "\n", "X", "=", "(", "X", "-", "x0", ")", "/", "ww", "# (O, 1, W)", "\n", "Y", "=", "(", "Y", "-", "y0", ")", "/", "hh", "# (O, H, 1)", "\n", "\n", "# Stack does not broadcast its arguments so we need to expand explicitly", "\n", "X", "=", "X", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n", "Y", "=", "Y", ".", "expand", "(", "O", ",", "H", ",", "W", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.bilinear_sample": [[188, 244], ["feats.size", "X.mul.size", "X.mul.mul", "Y.mul.mul", "X.mul.floor().clamp", "Y.mul.floor().clamp", "feats.view", "feats.view.gather().view", "feats.view.gather().view", "feats.view.gather().view", "feats.view.gather().view", "X.mul.size", "Y.mul.size", "X.mul.size", "X.mul.floor", "Y.mul.floor", "feats.view.gather", "feats.view.gather", "feats.view.gather", "feats.view.gather", "y0x0_idx.long", "y1x0_idx.long", "y0x1_idx.long", "y1x1_idx.long"], "function", ["None"], ["\n", "# Right now grid is in [0, 1] space; transform to [-1, 1]", "\n", "grid", "=", "grid", ".", "mul", "(", "2", ")", ".", "sub", "(", "1", ")", "\n", "\n", "return", "grid", "\n", "\n", "\n", "", "def", "compute_transformation_matrix", "(", "bbox", ")", ":", "\n", "    ", "x", ",", "y", "=", "bbox", "[", ":", ",", "0", "]", ",", "bbox", "[", ":", ",", "1", "]", "\n", "w", ",", "h", "=", "bbox", "[", ":", ",", "2", "]", ",", "bbox", "[", ":", ",", "3", "]", "\n", "\n", "scale_x", "=", "w", "\n", "scale_y", "=", "h", "\n", "\n", "t_x", "=", "2", "*", "(", "(", "x", "+", "0.5", "*", "w", ")", "-", "0.5", ")", "\n", "t_y", "=", "2", "*", "(", "(", "y", "+", "0.5", "*", "h", ")", "-", "0.5", ")", "\n", "\n", "zeros", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "bbox", ".", "shape", "[", "0", "]", ",", "1", ")", ".", "fill_", "(", "0", ")", "\n", "\n", "transformation_matrix", "=", "torch", ".", "cat", "(", "[", "scale_x", ".", "unsqueeze", "(", "-", "1", ")", ",", "zeros", ",", "t_x", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "zeros", ",", "scale_y", ".", "unsqueeze", "(", "-", "1", ")", ",", "t_y", ".", "unsqueeze", "(", "-", "1", ")", "]", ",", "1", ")", ".", "view", "(", "-", "1", ",", "2", ",", "3", ")", "\n", "\n", "return", "transformation_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.tensor_linspace": [[246, 276], ["torch.linspace().to", "torch.linspace().to", "start_w.view().expand.view().expand", "torch.linspace().to", "torch.linspace().to", "end_w.view().expand.view().expand", "start.contiguous().view().expand.contiguous().view().expand", "end.contiguous().view().expand.contiguous().view().expand", "start.contiguous().view().expand.size", "end.contiguous().view().expand.size", "start.contiguous().view().expand.size", "start.contiguous().view().expand.size", "start.contiguous().view().expand.dim", "torch.linspace", "torch.linspace", "start_w.view().expand.view", "torch.linspace", "torch.linspace", "end_w.view().expand.view", "start.contiguous().view().expand.contiguous().view", "end.contiguous().view().expand.contiguous().view", "start.contiguous().view().expand.contiguous", "end.contiguous().view().expand.contiguous"], "function", ["None"], []], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.Flatten.forward": [[61, 63], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.Flatten.__repr__": [[64, 66], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'Flatten()'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.Unflatten.__init__": [[69, 72], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "super", "(", "Unflatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.Unflatten.forward": [[73, 75], ["x.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "*", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.Unflatten.__repr__": [[76, 79], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "size_str", "=", "', '", ".", "join", "(", "'%d'", "%", "d", "for", "d", "in", "self", ".", "size", ")", "\n", "return", "'Unflatten(%s)'", "%", "size_str", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.GlobalAvgPool.forward": [[82, 85], ["x.view().mean", "x.size", "x.size", "x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", "\n", "return", "x", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.ResidualBlock.__init__": [[88, 108], ["torch.Module.__init__", "layers._get_padding", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.get_normalization_2d", "layers.get_activation", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "layers.get_normalization_2d", "layers.get_activation", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "layers._init_conv"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._get_padding", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_normalization_2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_activation", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_normalization_2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_activation", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._init_conv"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "normalization", "=", "'batch'", ",", "activation", "=", "'relu'", ",", "\n", "padding", "=", "'same'", ",", "kernel_size", "=", "3", ",", "init", "=", "'default'", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "K", "=", "kernel_size", "\n", "P", "=", "_get_padding", "(", "K", ",", "padding", ")", "\n", "C", "=", "channels", "\n", "self", ".", "padding", "=", "P", "\n", "layers", "=", "[", "\n", "get_normalization_2d", "(", "C", ",", "normalization", ")", ",", "\n", "get_activation", "(", "activation", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C", ",", "C", ",", "kernel_size", "=", "K", ",", "padding", "=", "P", ")", ",", "\n", "get_normalization_2d", "(", "C", ",", "normalization", ")", ",", "\n", "get_activation", "(", "activation", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C", ",", "C", ",", "kernel_size", "=", "K", ",", "padding", "=", "P", ")", ",", "\n", "]", "\n", "layers", "=", "[", "layer", "for", "layer", "in", "layers", "if", "layer", "is", "not", "None", "]", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "_init_conv", "(", "layer", ",", "method", "=", "init", ")", "\n", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.ResidualBlock.forward": [[109, 116], ["layers.ResidualBlock.net", "layers.ResidualBlock.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "P", "=", "self", ".", "padding", "\n", "shortcut", "=", "x", "\n", "if", "P", "==", "0", ":", "\n", "            ", "shortcut", "=", "x", "[", ":", ",", ":", ",", "P", ":", "-", "P", ",", "P", ":", "-", "P", "]", "\n", "", "y", "=", "self", ".", "net", "(", "x", ")", "\n", "return", "shortcut", "+", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_normalization_2d": [[22, 31], ["torch.InstanceNorm2d", "torch.BatchNorm2d", "ValueError"], "function", ["None"], ["def", "get_normalization_2d", "(", "channels", ",", "normalization", ")", ":", "\n", "    ", "if", "normalization", "==", "'instance'", ":", "\n", "        ", "return", "nn", ".", "InstanceNorm2d", "(", "channels", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", "\n", "", "elif", "normalization", "==", "'batch'", ":", "\n", "        ", "return", "nn", ".", "BatchNorm2d", "(", "channels", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", "\n", "", "elif", "normalization", "==", "'none'", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Unrecognized normalization type \"%s\"'", "%", "normalization", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_activation": [[33, 47], ["name.lower().startswith", "name.lower", "ValueError", "name.lower", "float", "name.lower", "name.split"], "function", ["None"], ["", "", "def", "get_activation", "(", "name", ")", ":", "\n", "    ", "kwargs", "=", "{", "}", "\n", "if", "name", ".", "lower", "(", ")", ".", "startswith", "(", "'leakyrelu'", ")", ":", "\n", "        ", "if", "'-'", "in", "name", ":", "\n", "            ", "slope", "=", "float", "(", "name", ".", "split", "(", "'-'", ")", "[", "1", "]", ")", "\n", "kwargs", "=", "{", "'negative_slope'", ":", "slope", "}", "\n", "", "", "name", "=", "'leakyrelu'", "\n", "activations", "=", "{", "\n", "'relu'", ":", "nn", ".", "ReLU", ",", "\n", "'leakyrelu'", ":", "nn", ".", "LeakyReLU", ",", "\n", "}", "\n", "if", "name", ".", "lower", "(", ")", "not", "in", "activations", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid activation \"%s\"'", "%", "name", ")", "\n", "", "return", "activations", "[", "name", ".", "lower", "(", ")", "]", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._init_conv": [[49, 58], ["isinstance", "torch.init.kaiming_normal", "torch.init.kaiming_uniform"], "function", ["None"], ["", "def", "_init_conv", "(", "layer", ",", "method", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "return", "\n", "", "if", "method", "==", "'default'", ":", "\n", "        ", "return", "\n", "", "elif", "method", "==", "'kaiming-normal'", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal", "(", "layer", ".", "weight", ")", "\n", "", "elif", "method", "==", "'kaiming-uniform'", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_uniform", "(", "layer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._get_padding": [[118, 125], ["None"], "function", ["None"], ["", "", "def", "_get_padding", "(", "K", ",", "mode", ")", ":", "\n", "    ", "\"\"\" Helper method to compute padding size \"\"\"", "\n", "if", "mode", "==", "'valid'", ":", "\n", "        ", "return", "0", "\n", "", "elif", "mode", "==", "'same'", ":", "\n", "# assert K % 2 == 1, 'Invalid kernel size %d for \"same\" padding' % K", "\n", "        ", "return", "(", "K", "-", "1", ")", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.build_cnn": [[127, 212], ["isinstance", "enumerate", "arch.split.split", "int", "print", "torch.Sequential", "len", "layers._get_padding", "torch.Conv2d", "layers.append", "layers._init_conv", "layers.append", "layers.append", "int", "len", "layers.ResidualBlock", "layers.append", "layers.get_normalization_2d", "layers.get_activation", "s[].split", "len", "int", "layers.append", "torch.Upsample", "int", "layers.append", "torch.MaxPool2d", "s.split", "layers.append", "ValueError", "torch.AvgPool2d", "int", "int", "layers.append", "torch.Linear", "len", "layers.append", "layers.Flatten", "layers.get_activation"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._get_padding", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers._init_conv", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_normalization_2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_activation", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.get_activation"], ["", "", "def", "build_cnn", "(", "arch", ",", "normalization", "=", "'batch'", ",", "activation", "=", "'relu'", ",", "padding", "=", "'same'", ",", "\n", "pooling", "=", "'max'", ",", "init", "=", "'default'", ")", ":", "\n", "    ", "\"\"\"\n    Build a CNN from an architecture string, which is a list of layer\n    specification strings. The overall architecture can be given as a list or as\n    a comma-separated string.\n\n    All convolutions *except for the first* are preceeded by normalization and\n    nonlinearity.\n\n    All other layers support the following:\n    - IX: Indicates that the number of input channels to the network is X.\n          Can only be used at the first layer; if not present then we assume\n          3 input channels.\n    - CK-X: KxK convolution with X output channels\n    - CK-X-S: KxK convolution with X output channels and stride S\n    - R: Residual block keeping the same number of channels\n    - UX: Nearest-neighbor upsampling with factor X\n    - PX: Spatial pooling with factor X\n    - FC-X-Y: Flatten followed by fully-connected layer\n\n    Returns a tuple of:\n    - cnn: An nn.Sequential\n    - channels: Number of output channels\n    \"\"\"", "\n", "if", "isinstance", "(", "arch", ",", "str", ")", ":", "\n", "        ", "arch", "=", "arch", ".", "split", "(", "','", ")", "\n", "", "cur_C", "=", "3", "\n", "if", "len", "(", "arch", ")", ">", "0", "and", "arch", "[", "0", "]", "[", "0", "]", "==", "'I'", ":", "\n", "        ", "cur_C", "=", "int", "(", "arch", "[", "0", "]", "[", "1", ":", "]", ")", "\n", "arch", "=", "arch", "[", "1", ":", "]", "\n", "\n", "", "first_conv", "=", "True", "\n", "flat", "=", "False", "\n", "layers", "=", "[", "]", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "arch", ")", ":", "\n", "        ", "if", "s", "[", "0", "]", "==", "'C'", ":", "\n", "            ", "if", "not", "first_conv", ":", "\n", "                ", "layers", ".", "append", "(", "get_normalization_2d", "(", "cur_C", ",", "normalization", ")", ")", "\n", "layers", ".", "append", "(", "get_activation", "(", "activation", ")", ")", "\n", "", "first_conv", "=", "False", "\n", "vals", "=", "[", "int", "(", "i", ")", "for", "i", "in", "s", "[", "1", ":", "]", ".", "split", "(", "'-'", ")", "]", "\n", "if", "len", "(", "vals", ")", "==", "2", ":", "\n", "                ", "K", ",", "next_C", "=", "vals", "\n", "stride", "=", "1", "\n", "", "elif", "len", "(", "vals", ")", "==", "3", ":", "\n", "                ", "K", ",", "next_C", ",", "stride", "=", "vals", "\n", "# K, next_C = (int(i) for i in s[1:].split('-'))", "\n", "", "P", "=", "_get_padding", "(", "K", ",", "padding", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "cur_C", ",", "next_C", ",", "kernel_size", "=", "K", ",", "padding", "=", "P", ",", "stride", "=", "stride", ")", "\n", "layers", ".", "append", "(", "conv", ")", "\n", "_init_conv", "(", "layers", "[", "-", "1", "]", ",", "init", ")", "\n", "cur_C", "=", "next_C", "\n", "", "elif", "s", "[", "0", "]", "==", "'R'", ":", "\n", "            ", "norm", "=", "'none'", "if", "first_conv", "else", "normalization", "\n", "res", "=", "ResidualBlock", "(", "cur_C", ",", "normalization", "=", "norm", ",", "activation", "=", "activation", ",", "\n", "padding", "=", "padding", ",", "init", "=", "init", ")", "\n", "layers", ".", "append", "(", "res", ")", "\n", "first_conv", "=", "False", "\n", "", "elif", "s", "[", "0", "]", "==", "'U'", ":", "\n", "            ", "factor", "=", "int", "(", "s", "[", "1", ":", "]", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "factor", ",", "mode", "=", "'nearest'", ")", ")", "\n", "", "elif", "s", "[", "0", "]", "==", "'P'", ":", "\n", "            ", "factor", "=", "int", "(", "s", "[", "1", ":", "]", ")", "\n", "if", "pooling", "==", "'max'", ":", "\n", "                ", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "factor", ",", "stride", "=", "factor", ")", "\n", "", "elif", "pooling", "==", "'avg'", ":", "\n", "                ", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "factor", ",", "stride", "=", "factor", ")", "\n", "", "layers", ".", "append", "(", "pool", ")", "\n", "", "elif", "s", "[", ":", "2", "]", "==", "'FC'", ":", "\n", "            ", "_", ",", "Din", ",", "Dout", "=", "s", ".", "split", "(", "'-'", ")", "\n", "Din", ",", "Dout", "=", "int", "(", "Din", ")", ",", "int", "(", "Dout", ")", "\n", "if", "not", "flat", ":", "\n", "                ", "layers", ".", "append", "(", "Flatten", "(", ")", ")", "\n", "", "flat", "=", "True", "\n", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "Din", ",", "Dout", ")", ")", "\n", "if", "i", "+", "1", "<", "len", "(", "arch", ")", ":", "\n", "                ", "layers", ".", "append", "(", "get_activation", "(", "activation", ")", ")", "\n", "", "cur_C", "=", "Dout", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid layer \"%s\"'", "%", "s", ")", "\n", "", "", "layers", "=", "[", "layer", "for", "layer", "in", "layers", "if", "layer", "is", "not", "None", "]", "\n", "for", "layer", "in", "layers", ":", "\n", "        ", "print", "(", "layer", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", ",", "cur_C", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layers.build_mlp": [[214, 231], ["range", "torch.Sequential", "layers.append", "len", "torch.Linear", "layers.append", "len", "layers.append", "layers.append", "torch.Dropout", "torch.BatchNorm1d", "torch.ReLU", "layers.append", "torch.LeakyReLU"], "function", ["None"], ["", "def", "build_mlp", "(", "dim_list", ",", "activation", "=", "'relu'", ",", "batch_norm", "=", "'none'", ",", "\n", "dropout", "=", "0", ",", "final_nonlinearity", "=", "True", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dim_list", ")", "-", "1", ")", ":", "\n", "        ", "dim_in", ",", "dim_out", "=", "dim_list", "[", "i", "]", ",", "dim_list", "[", "i", "+", "1", "]", "\n", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ")", "\n", "final_layer", "=", "(", "i", "==", "len", "(", "dim_list", ")", "-", "2", ")", "\n", "if", "not", "final_layer", "or", "final_nonlinearity", ":", "\n", "            ", "if", "batch_norm", "==", "'batch'", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", ")", "\n", "", "if", "activation", "==", "'relu'", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "activation", "==", "'leakyrelu'", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "LeakyReLU", "(", ")", ")", "\n", "", "", "if", "dropout", ">", "0", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConditionalBatchNorm2d.__init__": [[28, 35], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Embedding", "torch.Embedding", "generator.ConditionalBatchNorm2d.embed.weight.data[].normal_", "generator.ConditionalBatchNorm2d.embed.weight.data[].zero_"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "affine", "=", "False", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "num_features", "*", "2", ")", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", ":", "num_features", "]", ".", "normal_", "(", "1", ",", "0.02", ")", "# Initialise scale at N(1, 0.02)", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", "num_features", ":", "]", ".", "zero_", "(", ")", "# Initialise bias at 0", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConditionalBatchNorm2d.forward": [[36, 41], ["generator.ConditionalBatchNorm2d.bn", "generator.ConditionalBatchNorm2d.embed().chunk", "beta.view", "generator.ConditionalBatchNorm2d.embed", "gamma.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn", "(", "x", ")", "\n", "gamma", ",", "beta", "=", "self", ".", "embed", "(", "y", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "out", "=", "gamma", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "*", "out", "+", "beta", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ResidualBlock.__init__": [[46, 54], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ResidualBlock.forward": [[55, 57], ["generator.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTMCell.__init__": [[61, 94], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "\"\"\"\n        Initialize ConvLSTM cell.\n\n        Parameters\n        ----------\n        input_size: (int, int)\n            Height and width of input tensor as (height, width).\n        input_dim: int\n            Number of channels of input tensor.\n        hidden_dim: int\n            Number of channels of hidden state.\n        kernel_size: (int, int)\n            Size of the convolutional kernel.\n        bias: bool\n            Whether or not to add the bias.\n        \"\"\"", "\n", "\n", "super", "(", "ConvLSTMCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "padding", "=", "kernel_size", "[", "0", "]", "//", "2", ",", "kernel_size", "[", "1", "]", "//", "2", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "input_dim", "+", "self", ".", "hidden_dim", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "hidden_dim", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "bias", "=", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTMCell.forward": [[95, 111], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.ConvLSTMCell.conv", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "cur_state", ")", ":", "\n", "        ", "h_cur", ",", "c_cur", "=", "cur_state", "\n", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "input_tensor", ",", "h_cur", "]", ",", "dim", "=", "1", ")", "# concatenate along channel axis", "\n", "\n", "combined_conv", "=", "self", ".", "conv", "(", "combined", ")", "\n", "cc_i", ",", "cc_f", ",", "cc_o", ",", "cc_g", "=", "torch", ".", "split", "(", "combined_conv", ",", "self", ".", "hidden_dim", ",", "dim", "=", "1", ")", "\n", "i", "=", "torch", ".", "sigmoid", "(", "cc_i", ")", "\n", "f", "=", "torch", ".", "sigmoid", "(", "cc_f", ")", "\n", "o", "=", "torch", ".", "sigmoid", "(", "cc_o", ")", "\n", "g", "=", "torch", ".", "tanh", "(", "cc_g", ")", "\n", "\n", "c_next", "=", "f", "*", "c_cur", "+", "i", "*", "g", "\n", "h_next", "=", "o", "*", "torch", ".", "tanh", "(", "c_next", ")", "\n", "\n", "return", "h_next", ",", "c_next", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTMCell.init_hidden": [[112, 115], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "return", "(", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ",", "\n", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTM.__init__": [[119, 156], ["torch.Module.__init__", "generator.ConvLSTM._check_kernel_size_consistency", "isinstance", "generator.ConvLSTM._extend_for_multilayer", "generator.ConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "batch_first", "=", "False", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "batch_first", "=", "batch_first", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTM.forward": [[157, 207], ["input_tensor.size", "range", "input_tensor.permute", "NotImplementedError", "generator.ConvLSTM._init_hidden", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "output_inner.append", "input_tensor.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        input_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "if", "not", "self", ".", "batch_first", ":", "\n", "# (t, b, c, h, w) -> (b, t, c, h, w)", "\n", "            ", "input_tensor", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "\n", "\n", "# Implement stateful ConvLSTM", "\n", "", "if", "hidden_state", "is", "not", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "else", ":", "\n", "            ", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "input_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "input_tensor", ".", "device", ")", "\n", "\n", "", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "input_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "input_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "            ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "            ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "return", "layer_output_list", ",", "last_state_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTM._init_hidden": [[208, 213], ["range", "init_states.append", "generator.ConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTM._check_kernel_size_consistency": [[214, 219], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.ConvLSTM._extend_for_multilayer": [[220, 225], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutConvLSTM.__init__": [[229, 265], ["torch.Module.__init__", "generator.LayoutConvLSTM._check_kernel_size_consistency", "generator.LayoutConvLSTM._extend_for_multilayer", "generator.LayoutConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "isinstance", "isinstance", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "LayoutConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", "or", "isinstance", "(", "hidden_dim", ",", "tuple", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", ",", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutConvLSTM.forward": [[266, 344], ["obj_tensor.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "len", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator.LayoutConvLSTM._init_hidden", "obj_tensor.size", "range", "all_layer_output_list.append", "all_last_state_list.append", "torch.cat.append", "torch.cat.append", "torch.unsqueeze.append", "torch.unsqueeze.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "obj_tensor.size", "output_inner.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "obj_tensor", ",", "obj_to_img", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        obj_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "# split input_tensor into list according to obj_to_img", "\n", "O", "=", "obj_tensor", ".", "size", "(", "0", ")", "\n", "previous_img_id", "=", "0", "\n", "\n", "layouts_list", "=", "[", "]", "\n", "temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "O", ")", ":", "\n", "            ", "current_img_id", "=", "obj_to_img", "[", "i", "]", "\n", "if", "current_img_id", "==", "previous_img_id", ":", "\n", "                ", "temp", ".", "append", "(", "obj_tensor", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "temp", "=", "[", "obj_tensor", "[", "i", "]", "]", "\n", "previous_img_id", "=", "current_img_id", "\n", "# append last one", "\n", "", "", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "\n", "N", "=", "len", "(", "layouts_list", ")", "\n", "#print(N)", "\n", "all_layer_output_list", ",", "all_last_state_list", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "obj_tensor", "=", "layouts_list", "[", "i", "]", "\n", "#print(obj_tensor.shape)", "\n", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "obj_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "obj_tensor", ".", "device", ")", "\n", "\n", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "obj_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "obj_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "                ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                    ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "                ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "all_layer_output_list", ".", "append", "(", "layer_output_list", ")", "\n", "all_last_state_list", ".", "append", "(", "last_state_list", ")", "\n", "\n", "# concate last output to form a tensor", "\n", "", "batch_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "batch_output", ".", "append", "(", "all_last_state_list", "[", "i", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "", "batch_output", "=", "torch", ".", "cat", "(", "batch_output", ",", "dim", "=", "0", ")", "\n", "\n", "return", "batch_output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutConvLSTM._init_hidden": [[345, 350], ["range", "init_states.append", "generator.LayoutConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutConvLSTM._check_kernel_size_consistency": [[351, 356], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutConvLSTM._extend_for_multilayer": [[357, 362], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.CropEncoder.__init__": [[365, 391], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "class_num", "=", "10", ")", ":", "\n", "# default: (3, 32, 32) -> (256, 8, 8)", "\n", "        ", "super", "(", "CropEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "16", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "16", ",", "class_num", ")", "\n", "# pool", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "# 256 -> 8", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "self", ".", "fc_logvar", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.CropEncoder.forward": [[392, 420], ["generator.CropEncoder.c1", "generator.CropEncoder.activation", "generator.CropEncoder.c2", "generator.CropEncoder.activation", "generator.CropEncoder.c3", "generator.CropEncoder.activation", "generator.CropEncoder.c4", "generator.CropEncoder.activation", "generator.CropEncoder.conv5", "generator.CropEncoder.activation", "generator.CropEncoder.pool", "x.view.view.view", "generator.CropEncoder.fc_mu", "generator.CropEncoder.fc_logvar", "generator.CropEncoder.mul().exp_", "get_z_random().to", "get_z_random().to.mul().add_", "generator.CropEncoder.bn1", "generator.CropEncoder.bn1", "generator.CropEncoder.bn2", "generator.CropEncoder.bn2", "generator.CropEncoder.bn3", "generator.CropEncoder.bn3", "generator.CropEncoder.bn4", "generator.CropEncoder.bn4", "generator.CropEncoder.bn5", "generator.CropEncoder.bn5", "x.view.view.size", "generator.CropEncoder.mul", "generator.get_z_random", "get_z_random().to.mul", "generator.CropEncoder.mul().exp_.size", "generator.CropEncoder.mul().exp_.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.get_z_random"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", "=", "None", ")", ":", "\n", "        ", "x", "=", "imgs", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn1", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn2", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn3", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn4", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn5", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "mu", "=", "self", ".", "fc_mu", "(", "x", ")", "\n", "logvar", "=", "self", ".", "fc_logvar", "(", "x", ")", "\n", "\n", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "get_z_random", "(", "std", ".", "size", "(", "0", ")", ",", "std", ".", "size", "(", "1", ")", ")", ".", "to", "(", "imgs", ".", "device", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "\n", "return", "z", ",", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutEncoder.__init__": [[423, 452], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Embedding", "torch.Embedding", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "generator.LayoutConvLSTM", "layers.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator.ConditionalBatchNorm2d", "generator.LayoutConvLSTM", "generator.ResidualBlock", "generator.LayoutConvLSTM"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "embedding_dim", "=", "64", ",", "class_num", "=", "10", ",", "resi_num", "=", "6", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "LayoutEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "embedding", "=", "nn", ".", "Embedding", "(", "class_num", ",", "embedding_dim", ")", "\n", "if", "clstm_layers", "==", "1", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "2", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "", "elif", "clstm_layers", "==", "3", ":", "\n", "            ", "self", ".", "clstm", "=", "LayoutConvLSTM", "(", "8", ",", "512", ",", "[", "128", ",", "64", ",", "64", "]", ",", "(", "5", ",", "5", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "# Bottleneck layers.", "\n", "for", "i", "in", "range", "(", "resi_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "64", ",", "dim_out", "=", "64", ")", ")", "\n", "", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "# (emb+z, 64, 64) -> (64, 64, 64)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "embedding_dim", "+", "z_dim", ",", "conv_dim", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 64, 64) -> (128, 32, 32)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 32, 32) -> (256, 16, 16)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 16, 16) -> (512, 8, 8)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.LayoutEncoder.forward": [[453, 478], ["generator.LayoutEncoder.embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "generator.LayoutEncoder.c1", "generator.LayoutEncoder.bn1", "generator.LayoutEncoder.activation", "generator.LayoutEncoder.c2", "generator.LayoutEncoder.bn2", "generator.LayoutEncoder.activation", "generator.LayoutEncoder.c3", "generator.LayoutEncoder.bn3", "generator.LayoutEncoder.activation", "generator.LayoutEncoder.c4", "generator.LayoutEncoder.bn4", "generator.LayoutEncoder.clstm", "generator.LayoutEncoder.residual", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual"], ["", "def", "forward", "(", "self", ",", "objs", ",", "masks", ",", "obj_to_img", ",", "z", ")", ":", "\n", "# prepare mask fm", "\n", "        ", "embeddings", "=", "self", ".", "embedding", "(", "objs", ")", "\n", "embeddings_z", "=", "torch", ".", "cat", "(", "(", "embeddings", ",", "z", ")", ",", "dim", "=", "1", ")", "\n", "h", "=", "embeddings_z", ".", "view", "(", "embeddings_z", ".", "size", "(", "0", ")", ",", "embeddings_z", ".", "size", "(", "1", ")", ",", "1", ",", "1", ")", "*", "masks", "\n", "print", "(", "h", ".", "shape", ")", "\n", "# downsample layout", "\n", "h", "=", "self", ".", "c1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ",", "objs", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "h", "=", "self", ".", "bn4", "(", "h", ",", "objs", ")", "\n", "# clstm fusion (O, 512, 8, 8) -> (n, 64, 8, 8)", "\n", "h", "=", "self", ".", "clstm", "(", "h", ",", "obj_to_img", ")", "\n", "# residual block", "\n", "h", "=", "self", ".", "residual", "(", "h", ")", "\n", "#print(h.shape)", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.Decoder.__init__": [[481, 499], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# (64, 8, 8) -> (256, 8, 8)", "\n", "self", ".", "c0", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 8, 8) -> (256, 16, 16)", "\n", "self", ".", "dc1", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "\n", "# (256, 16, 16) -> (128, 32, 32)", "\n", "self", ".", "dc2", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "\n", "# (128, 32, 32) -> (64, 64, 64)", "\n", "self", ".", "dc3", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "1", ")", "\n", "# (64, 64, 64) -> (3, 64, 64)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "1", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.Decoder.forward": [[500, 516], ["generator.Decoder.c0", "generator.Decoder.bn0", "generator.Decoder.activation", "generator.Decoder.dc1", "generator.Decoder.bn1", "generator.Decoder.activation", "generator.Decoder.dc2", "generator.Decoder.bn2", "generator.Decoder.activation", "generator.Decoder.dc3", "generator.Decoder.bn3", "generator.Decoder.activation", "generator.Decoder.c4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "h", "=", "hidden", "\n", "h", "=", "self", ".", "c0", "(", "h", ")", "\n", "h", "=", "self", ".", "bn0", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.Generator.__init__": [[519, 526], ["torch.Module.__init__", "generator.CropEncoder", "generator.LayoutEncoder", "generator.Decoder"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", "=", "64", ",", "z_dim", "=", "8", ",", "obj_size", "=", "32", ",", "clstm_layers", "=", "3", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obj_size", "=", "obj_size", "\n", "# (3, 32, 32) -> (256, 4, 4) -> 8", "\n", "self", ".", "crop_encoder", "=", "CropEncoder", "(", "z_dim", "=", "z_dim", ",", "class_num", "=", "num_embeddings", ")", "\n", "self", ".", "layout_encoder", "=", "LayoutEncoder", "(", "z_dim", "=", "z_dim", ",", "embedding_dim", "=", "embedding_dim", ",", "class_num", "=", "num_embeddings", ",", "clstm_layers", "=", "clstm_layers", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", ")", "\n", "# self.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.Generator.forward": [[528, 547], ["models2.bilinear.crop_bbox_batch", "generator.Generator.crop_encoder", "print", "print", "generator.Generator.layout_encoder", "generator.Generator.layout_encoder", "generator.Generator.decoder", "generator.Generator.decoder", "models2.bilinear.crop_bbox_batch", "generator.Generator.crop_encoder", "models2.bilinear.crop_bbox_batch"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", ":", "\n", "        ", "crops_input", "=", "crop_bbox_batch", "(", "imgs", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "z_rec", ",", "mu", ",", "logvar", "=", "self", ".", "crop_encoder", "(", "crops_input", ",", "objs", ")", "\n", "print", "(", "z_rec", ".", "shape", ")", "\n", "print", "(", "z_rand", ".", "shape", ")", "\n", "\n", "# (n, clstm_dim*2, 8, 8)", "\n", "h_rec", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rec", ")", "\n", "h_rand", "=", "self", ".", "layout_encoder", "(", "objs", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", "\n", "\n", "img_rec", "=", "self", ".", "decoder", "(", "h_rec", ")", "\n", "img_rand", "=", "self", ".", "decoder", "(", "h_rand", ")", "\n", "\n", "crops_rand", "=", "crop_bbox_batch", "(", "img_rand", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "_", ",", "z_rand_rec", ",", "_", "=", "self", ".", "crop_encoder", "(", "crops_rand", ",", "objs", ")", "\n", "\n", "crops_input_rec", "=", "crop_bbox_batch", "(", "img_rec", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "\n", "return", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.get_z_random": [[6, 12], ["torch.randn", "torch.randn", "torch.rand", "torch.rand"], "function", ["None"], ["def", "get_z_random", "(", "batch_size", ",", "z_dim", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "if", "random_type", "==", "'uni'", ":", "\n", "        ", "z", "=", "torch", ".", "rand", "(", "batch_size", ",", "z_dim", ")", "*", "2.0", "-", "1.0", "\n", "", "elif", "random_type", "==", "'gauss'", ":", "\n", "        ", "z", "=", "torch", ".", "randn", "(", "batch_size", ",", "z_dim", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator.transform_z_flat": [[14, 25], ["torch.zeros().to", "torch.zeros().to", "range", "idx.view.view", "idx.view.size", "torch.zeros", "torch.zeros", "idx.view.dim", "z_flat.size"], "function", ["None"], ["", "def", "transform_z_flat", "(", "batch_size", ",", "time_step", ",", "z_flat", ",", "obj_to_img", ")", ":", "\n", "# restore z to batch with padding", "\n", "    ", "z", "=", "torch", ".", "zeros", "(", "batch_size", ",", "time_step", ",", "z_flat", ".", "size", "(", "1", ")", ")", ".", "to", "(", "z_flat", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "idx", "=", "(", "obj_to_img", ".", "data", "==", "i", ")", ".", "nonzero", "(", ")", "\n", "if", "idx", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "n", "=", "idx", ".", "size", "(", "0", ")", "\n", "z", "[", "i", ",", ":", "n", "]", "=", "z_flat", "[", "idx", "]", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.OptimizedBlock.__init__": [[32, 45], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "OptimizedBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "resi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "learnable_sc", "=", "(", "dim_in", "!=", "dim_out", ")", "or", "downsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "sc", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.OptimizedBlock.residual": [[46, 52], ["discriminator_app.OptimizedBlock.resi", "discriminator_app._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "", "def", "residual", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "resi", "(", "h", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "h", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.OptimizedBlock.shortcut": [[53, 58], ["discriminator_app.OptimizedBlock.sc", "discriminator_app._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "x", ")", "\n", "", "return", "self", ".", "sc", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.OptimizedBlock.forward": [[59, 61], ["discriminator_app.OptimizedBlock.residual", "discriminator_app.OptimizedBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ResidualBlock.__init__": [[66, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "resi", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_in", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ")", "\n", "\n", "self", ".", "learnable_sc", "=", "(", "dim_in", "!=", "dim_out", ")", "or", "downsample", "\n", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "sc", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ResidualBlock.residual": [[81, 87], ["discriminator_app.ResidualBlock.resi", "discriminator_app._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "", "def", "residual", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "resi", "(", "h", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "h", "=", "_downsample", "(", "h", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ResidualBlock.shortcut": [[88, 97], ["discriminator_app.ResidualBlock.sc", "discriminator_app._downsample"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "x", "=", "self", ".", "sc", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "return", "_downsample", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "return", "x", "\n", "", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ResidualBlock.forward": [[98, 100], ["discriminator_app.ResidualBlock.residual", "discriminator_app.ResidualBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "x", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ImageDiscriminator.__init__": [[103, 121], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "discriminator_app.OptimizedBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "ImageDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ch", "=", "conv_dim", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# (3, 64, 64) -> (64, 32, 32)", "\n", "OptimizedBlock", "(", "3", ",", "self", ".", "ch", ",", "downsample", "=", "True", ")", ",", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "ResidualBlock", "(", "self", ".", "ch", ",", "self", ".", "ch", "*", "2", ",", "downsample", "=", "True", ")", ",", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "2", ",", "self", ".", "ch", "*", "4", ",", "downsample", "=", "True", ")", ",", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "4", ",", "self", ".", "ch", "*", "8", ",", "downsample", "=", "True", ")", ",", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "ResidualBlock", "(", "self", ".", "ch", "*", "8", ",", "self", ".", "ch", "*", "16", ",", "downsample", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "self", ".", "ch", "*", "16", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ImageDiscriminator.forward": [[124, 133], ["discriminator_app.ImageDiscriminator.main", "discriminator_app.ImageDiscriminator.relu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "discriminator_app.ImageDiscriminator.classifier", "discriminator_app.ImageDiscriminator.view"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "main", "(", "x", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "# (1024, 2, 2) -> (1024,)", "\n", "h", "=", "torch", ".", "sum", "(", "h", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "\n", "output", "=", "self", ".", "classifier", "(", "h", ")", "\n", "\n", "return", "output", ".", "view", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ObjectDiscriminator.__init__": [[136, 165], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "discriminator_app.OptimizedBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock", "discriminator_app.ResidualBlock", "discriminator_app.OptimizedBlock", "discriminator_app.ResidualBlock", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "n_class", "=", "0", ",", "downsample_first", "=", "False", ")", ":", "\n", "        ", "super", "(", "ObjectDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "OptimizedBlock", "(", "3", ",", "conv_dim", ",", "downsample", "=", "downsample_first", ")", ",", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "ResidualBlock", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "downsample", "=", "True", ")", ",", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "ResidualBlock", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "downsample", "=", "True", ")", ",", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "ResidualBlock", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "downsample", "=", "True", ")", ",", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "ResidualBlock", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "downsample", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "app_conv", "=", "nn", ".", "Sequential", "(", "\n", "OptimizedBlock", "(", "3", ",", "conv_dim", ",", "downsample", "=", "downsample_first", ")", ",", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "ResidualBlock", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "downsample", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "l_y_app", "=", "nn", ".", "Embedding", "(", "n_class", ",", "conv_dim", "*", "2", ")", "\n", "\n", "self", ".", "classifier_src", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "1", ")", "\n", "self", ".", "classifier_cls", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "n_class", ")", "\n", "self", ".", "app", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "4", ",", "1", ")", "\n", "\n", "if", "n_class", ">", "0", ":", "\n", "            ", "self", ".", "l_y", "=", "nn", ".", "Embedding", "(", "num_embeddings", "=", "n_class", ",", "embedding_dim", "=", "conv_dim", "*", "16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.ObjectDiscriminator.forward": [[168, 188], ["discriminator_app.ObjectDiscriminator.relu", "app_feat.view.view.size", "app_feat.view.view.view", "discriminator_app.ObjectDiscriminator.l_y_app().unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "discriminator_app.ObjectDiscriminator.main", "discriminator_app.ObjectDiscriminator.relu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "discriminator_app.ObjectDiscriminator.classifier_src", "discriminator_app.ObjectDiscriminator.classifier_cls", "discriminator_app.ObjectDiscriminator.app_conv", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "discriminator_app.ObjectDiscriminator.app().sum", "discriminator_app.ObjectDiscriminator.view", "app_feat.view.view.permute", "discriminator_app.ObjectDiscriminator.l_y_app().unsqueeze", "discriminator_app.ObjectDiscriminator.app", "discriminator_app.ObjectDiscriminator.l_y_app"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "        ", "h", "=", "x", "\n", "##app discriminator", "\n", "app_feat", "=", "self", ".", "relu", "(", "self", ".", "app_conv", "(", "h", ")", ")", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", "=", "app_feat", ".", "size", "(", ")", "\n", "app_feat", "=", "app_feat", ".", "view", "(", "s1", ",", "s2", ",", "s3", "*", "s4", ")", "\n", "app_gram", "=", "torch", ".", "bmm", "(", "app_feat", ",", "app_feat", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "/", "s2", "\n", "app_y", "=", "self", ".", "l_y_app", "(", "y", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "s1", ",", "s2", ",", "s2", ")", "\n", "app_all", "=", "torch", ".", "cat", "(", "[", "app_gram", ",", "app_y", "]", ",", "dim", "=", "-", "1", ")", "\n", "out_app", "=", "self", ".", "app", "(", "app_all", ")", ".", "sum", "(", "1", ")", "/", "s2", "\n", "###", "\n", "h", "=", "self", ".", "main", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "# (1024, 2, 2) -> (1024,)", "\n", "h", "=", "torch", ".", "sum", "(", "h", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "\n", "output_src", "=", "self", ".", "classifier_src", "(", "h", ")", "\n", "output_cls", "=", "self", ".", "classifier_cls", "(", "h", ")", "\n", "\n", "return", "output_src", ".", "view", "(", "-", "1", ")", ",", "output_cls", ",", "out_app", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.add_sn": [[15, 23], ["m.named_children", "isinstance", "m.add_module", "torch.utils.spectral_norm", "discriminator_app.add_sn"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app.add_sn"], ["def", "add_sn", "(", "m", ")", ":", "\n", "    ", "for", "name", ",", "c", "in", "m", ".", "named_children", "(", ")", ":", "\n", "        ", "m", ".", "add_module", "(", "name", ",", "add_sn", "(", "c", ")", ")", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "ConvTranspose2d", ",", "nn", ".", "Linear", ",", "nn", ".", "Embedding", ")", ")", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "m", ")", "\n", "", "else", ":", "\n", "        ", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.discriminator_app._downsample": [[25, 27], ["torch.avg_pool2d"], "function", ["None"], ["", "", "def", "_downsample", "(", "x", ")", ":", "\n", "    ", "return", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.ScaledDotProductAttention.__init__": [[16, 21], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.ScaledDotProductAttention.forward": [[22, 40], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "transformer.ScaledDotProductAttention.softmax", "transformer.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.MultiHeadAttention.__init__": [[45, 65], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "transformer.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.MultiHeadAttention.forward": [[66, 93], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "transformer.MultiHeadAttention.w_qs().view", "transformer.MultiHeadAttention.w_ks().view", "transformer.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "transformer.MultiHeadAttention.attention", "transformer.MultiHeadAttention.view", "transformer.MultiHeadAttention.permute().contiguous().view", "transformer.MultiHeadAttention.layer_norm0", "transformer.MultiHeadAttention.dropout", "transformer.MultiHeadAttention.layer_norm", "transformer.MultiHeadAttention.fc", "transformer.MultiHeadAttention.w_qs", "transformer.MultiHeadAttention.w_ks", "transformer.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "transformer.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "transformer.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.MultiHeadAttention_d0.__init__": [[98, 113], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "transformer.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.MultiHeadAttention_d0.forward": [[118, 142], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "transformer.MultiHeadAttention_d0.w_qs().view", "transformer.MultiHeadAttention_d0.w_ks().view", "transformer.MultiHeadAttention_d0.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "transformer.MultiHeadAttention_d0.attention", "transformer.MultiHeadAttention_d0.view", "transformer.MultiHeadAttention_d0.permute().contiguous().view", "transformer.MultiHeadAttention_d0.layer_norm", "transformer.MultiHeadAttention_d0.w_qs", "transformer.MultiHeadAttention_d0.w_ks", "transformer.MultiHeadAttention_d0.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "transformer.MultiHeadAttention_d0.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "transformer.MultiHeadAttention_d0.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "\n", "#output = self.dropout(self.fc(output))", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.transformer_encoder.__init__": [[145, 149], ["torch.Module.__init__", "transformer.MultiHeadAttention", "transformer.clones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ")", ":", "\n", "        ", "super", "(", "transformer_encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "base", "=", "MultiHeadAttention", "(", "4", ",", "512", ",", "128", ",", "128", ")", "\n", "self", ".", "layers", "=", "clones", "(", "base", ",", "num_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.transformer_encoder.forward": [[150, 154], ["layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "x", ",", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.transformer_decoder.__init__": [[157, 166], ["torch.Module.__init__", "transformer.MultiHeadAttention", "torch.Parameter().cuda", "torch.Parameter().cuda", "torch.Parameter().cuda", "transformer.MultiHeadAttention_d0", "transformer.MultiHeadAttention", "transformer.clones", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ")", ":", "\n", "        ", "super", "(", "transformer_decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "base", "=", "MultiHeadAttention", "(", "1", ",", "192", ",", "64", ",", "192", ")", "\n", "#base0 = MultiHeadAttention_d0(1,64,64,64)", "\n", "self", ".", "q", "=", "nn", ".", "Parameter", "(", "torch", ".", "rand", "(", "1", ",", "64", ",", "192", ")", ")", ".", "cuda", "(", ")", "\n", "#self.q = self.q.cuda()", "\n", "self", ".", "layer0", "=", "MultiHeadAttention_d0", "(", "1", ",", "192", ",", "64", ",", "192", ")", "\n", "self", ".", "layer1", "=", "MultiHeadAttention", "(", "1", ",", "192", ",", "64", ",", "192", ")", "\n", "self", ".", "layers", "=", "clones", "(", "base", ",", "num_layers", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.transformer_decoder.forward": [[167, 178], ["transformer.transformer_decoder.layer0", "layer.size", "q.expand.expand.expand", "transformer.transformer_decoder.layer1", "layer", "mask.cuda"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", ")", ":", "\n", "        ", "q", "=", "self", ".", "layer0", "(", "self", ".", "q", ",", "self", ".", "q", ",", "self", ".", "q", ")", "\n", "n", "=", "x", ".", "size", "(", "0", ")", "\n", "# print(q.shape)", "\n", "q", "=", "q", ".", "expand", "(", "n", ",", "64", ",", "192", ")", "\n", "# print(x.shape)", "\n", "x", "=", "self", ".", "layer1", "(", "q", ",", "x", ",", "x", ",", "mask", "=", "mask", ".", "cuda", "(", ")", ")", "\n", "# print(x.shape)", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ",", "x", ",", "x", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.transformer.clones": [[8, 11], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.generate_latent.__init__": [[9, 13], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embd_dim", ",", "pos_dim", ",", "num_class", ")", ":", "\n", "        ", "super", "(", "generate_latent", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pos_embd", "=", "nn", ".", "Linear", "(", "4", ",", "pos_dim", ")", "\n", "self", ".", "class_embd", "=", "nn", ".", "Embedding", "(", "num_class", ",", "embd_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.generate_latent.forward": [[14, 18], ["generator1.generate_latent.pos_embd", "generator1.generate_latent.class_embd", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "cla", ",", "pos", ",", "z", ")", ":", "\n", "        ", "pos_embd", "=", "self", ".", "pos_embd", "(", "pos", ")", "\n", "cla_embd", "=", "self", ".", "class_embd", "(", "cla", ")", "\n", "return", "torch", ".", "cat", "(", "[", "cla_embd", ",", "z", "]", ",", "dim", "=", "1", ")", ",", "pos_embd", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConditionalBatchNorm2d.__init__": [[65, 72], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Embedding", "torch.Embedding", "generator1.ConditionalBatchNorm2d.embed.weight.data[].normal_", "generator1.ConditionalBatchNorm2d.embed.weight.data[].zero_"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_features", ",", "affine", "=", "False", ")", "\n", "self", ".", "embed", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "num_features", "*", "2", ")", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", ":", "num_features", "]", ".", "normal_", "(", "1", ",", "0.02", ")", "# Initialise scale at N(1, 0.02)", "\n", "self", ".", "embed", ".", "weight", ".", "data", "[", ":", ",", "num_features", ":", "]", ".", "zero_", "(", ")", "# Initialise bias at 0", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConditionalBatchNorm2d.forward": [[73, 78], ["generator1.ConditionalBatchNorm2d.bn", "generator1.ConditionalBatchNorm2d.embed().chunk", "beta.view", "generator1.ConditionalBatchNorm2d.embed", "gamma.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn", "(", "x", ")", "\n", "gamma", ",", "beta", "=", "self", ".", "embed", "(", "y", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "out", "=", "gamma", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "*", "out", "+", "beta", ".", "view", "(", "-", "1", ",", "self", ".", "num_features", ",", "1", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ResidualBlock.__init__": [[83, 97], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim_in", "=", "dim_in", "\n", "self", ".", "dim_out", "=", "dim_out", "\n", "if", "dim_in", "!=", "dim_out", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ResidualBlock.forward": [[98, 104], ["generator1.ResidualBlock.main", "generator1.ResidualBlock.conv", "generator1.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "dim_in", "==", "self", ".", "dim_out", ":", "\n", "\n", "            ", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.__init__": [[108, 141], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "\"\"\"\n        Initialize ConvLSTM cell.\n\n        Parameters\n        ----------\n        input_size: (int, int)\n            Height and width of input tensor as (height, width).\n        input_dim: int\n            Number of channels of input tensor.\n        hidden_dim: int\n            Number of channels of hidden state.\n        kernel_size: (int, int)\n            Size of the convolutional kernel.\n        bias: bool\n            Whether or not to add the bias.\n        \"\"\"", "\n", "\n", "super", "(", "ConvLSTMCell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "padding", "=", "kernel_size", "[", "0", "]", "//", "2", ",", "kernel_size", "[", "1", "]", "//", "2", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "self", ".", "input_dim", "+", "self", ".", "hidden_dim", ",", "\n", "out_channels", "=", "4", "*", "self", ".", "hidden_dim", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "bias", "=", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.forward": [[142, 158], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator1.ConvLSTMCell.conv", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "cur_state", ")", ":", "\n", "        ", "h_cur", ",", "c_cur", "=", "cur_state", "\n", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "input_tensor", ",", "h_cur", "]", ",", "dim", "=", "1", ")", "# concatenate along channel axis", "\n", "\n", "combined_conv", "=", "self", ".", "conv", "(", "combined", ")", "\n", "cc_i", ",", "cc_f", ",", "cc_o", ",", "cc_g", "=", "torch", ".", "split", "(", "combined_conv", ",", "self", ".", "hidden_dim", ",", "dim", "=", "1", ")", "\n", "i", "=", "torch", ".", "sigmoid", "(", "cc_i", ")", "\n", "f", "=", "torch", ".", "sigmoid", "(", "cc_f", ")", "\n", "o", "=", "torch", ".", "sigmoid", "(", "cc_o", ")", "\n", "g", "=", "torch", ".", "tanh", "(", "cc_g", ")", "\n", "\n", "c_next", "=", "f", "*", "c_cur", "+", "i", "*", "g", "\n", "h_next", "=", "o", "*", "torch", ".", "tanh", "(", "c_next", ")", "\n", "\n", "return", "h_next", ",", "c_next", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden": [[159, 162], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "return", "(", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ",", "\n", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "hidden_dim", ",", "self", ".", "height", ",", "self", ".", "width", ")", ".", "to", "(", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTM.__init__": [[166, 203], ["torch.Module.__init__", "generator1.ConvLSTM._check_kernel_size_consistency", "isinstance", "generator1.ConvLSTM._extend_for_multilayer", "generator1.ConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator1.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "batch_first", "=", "False", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "batch_first", "=", "batch_first", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTM.forward": [[204, 254], ["input_tensor.size", "range", "input_tensor.permute", "NotImplementedError", "generator1.ConvLSTM._init_hidden", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "output_inner.append", "input_tensor.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        input_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "if", "not", "self", ".", "batch_first", ":", "\n", "# (t, b, c, h, w) -> (b, t, c, h, w)", "\n", "            ", "input_tensor", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ",", "4", ")", "\n", "\n", "# Implement stateful ConvLSTM", "\n", "", "if", "hidden_state", "is", "not", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "else", ":", "\n", "            ", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "input_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "input_tensor", ".", "device", ")", "\n", "\n", "", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "input_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "input_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "            ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "            ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "return", "layer_output_list", ",", "last_state_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTM._init_hidden": [[255, 260], ["range", "init_states.append", "generator1.ConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTM._check_kernel_size_consistency": [[261, 266], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTM._extend_for_multilayer": [[267, 272], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM.__init__": [[276, 312], ["torch.Module.__init__", "generator1.LayoutConvLSTM._check_kernel_size_consistency", "generator1.LayoutConvLSTM._extend_for_multilayer", "generator1.LayoutConvLSTM._extend_for_multilayer", "range", "torch.ModuleList", "torch.ModuleList", "isinstance", "isinstance", "len", "isinstance", "ValueError", "cell_list.append", "len", "len", "generator1.ConvLSTMCell"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "input_dim", ",", "hidden_dim", ",", "kernel_size", ",", "bias", "=", "True", ",", "return_all_layers", "=", "False", ")", ":", "\n", "        ", "super", "(", "LayoutConvLSTM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_check_kernel_size_consistency", "(", "kernel_size", ")", "\n", "\n", "if", "isinstance", "(", "hidden_dim", ",", "list", ")", "or", "isinstance", "(", "hidden_dim", ",", "tuple", ")", ":", "\n", "            ", "num_layers", "=", "len", "(", "hidden_dim", ")", "\n", "", "elif", "isinstance", "(", "hidden_dim", ",", "int", ")", ":", "\n", "            ", "num_layers", "=", "1", "\n", "\n", "# Make sure that both `kernel_size` and `hidden_dim` are lists having len == num_layers", "\n", "", "kernel_size", "=", "self", ".", "_extend_for_multilayer", "(", "kernel_size", ",", "num_layers", ")", "\n", "hidden_dim", "=", "self", ".", "_extend_for_multilayer", "(", "hidden_dim", ",", "num_layers", ")", "\n", "if", "not", "len", "(", "kernel_size", ")", "==", "len", "(", "hidden_dim", ")", "==", "num_layers", ":", "\n", "            ", "raise", "ValueError", "(", "'Inconsistent list length.'", ")", "\n", "\n", "", "self", ".", "height", ",", "self", ".", "width", "=", "input_size", ",", "input_size", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "return_all_layers", "=", "return_all_layers", "\n", "\n", "cell_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "num_layers", ")", ":", "\n", "            ", "cur_input_dim", "=", "self", ".", "input_dim", "if", "i", "==", "0", "else", "self", ".", "hidden_dim", "[", "i", "-", "1", "]", "\n", "\n", "cell_list", ".", "append", "(", "ConvLSTMCell", "(", "input_size", "=", "(", "self", ".", "height", ",", "self", ".", "width", ")", ",", "\n", "input_dim", "=", "cur_input_dim", ",", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", "[", "i", "]", ",", "\n", "kernel_size", "=", "self", ".", "kernel_size", "[", "i", "]", ",", "\n", "bias", "=", "self", ".", "bias", ")", ")", "\n", "\n", "", "self", ".", "cell_list", "=", "nn", ".", "ModuleList", "(", "cell_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM.forward": [[313, 391], ["obj_tensor.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "len", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "generator1.LayoutConvLSTM._init_hidden", "obj_tensor.size", "range", "all_layer_output_list.append", "all_last_state_list.append", "torch.cat.append", "torch.cat.append", "torch.unsqueeze.append", "torch.unsqueeze.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "layouts_list.append", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "layer_output_list.append", "last_state_list.append", "obj_tensor.size", "output_inner.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden"], ["", "def", "forward", "(", "self", ",", "obj_tensor", ",", "obj_to_img", ",", "hidden_state", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n\n        Parameters\n        ----------\n        obj_tensor: todo\n            5-D Tensor either of shape (t, b, c, h, w) or (b, t, c, h, w)\n        hidden_state: todo\n            None. todo implement stateful\n\n        Returns\n        -------\n        last_state_list, layer_output\n        \"\"\"", "\n", "# split input_tensor into list according to obj_to_img", "\n", "O", "=", "obj_tensor", ".", "size", "(", "0", ")", "\n", "previous_img_id", "=", "0", "\n", "\n", "layouts_list", "=", "[", "]", "\n", "temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "O", ")", ":", "\n", "            ", "current_img_id", "=", "obj_to_img", "[", "i", "]", "\n", "if", "current_img_id", "==", "previous_img_id", ":", "\n", "                ", "temp", ".", "append", "(", "obj_tensor", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                ", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "temp", "=", "[", "obj_tensor", "[", "i", "]", "]", "\n", "previous_img_id", "=", "current_img_id", "\n", "# append last one", "\n", "", "", "temp", "=", "torch", ".", "stack", "(", "temp", ",", "dim", "=", "0", ")", "\n", "temp", "=", "torch", ".", "unsqueeze", "(", "temp", ",", "0", ")", "\n", "layouts_list", ".", "append", "(", "temp", ")", "\n", "\n", "N", "=", "len", "(", "layouts_list", ")", "\n", "# print(N)", "\n", "all_layer_output_list", ",", "all_last_state_list", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "obj_tensor", "=", "layouts_list", "[", "i", "]", "\n", "# print(obj_tensor.shape)", "\n", "hidden_state", "=", "self", ".", "_init_hidden", "(", "batch_size", "=", "obj_tensor", ".", "size", "(", "0", ")", ",", "device", "=", "obj_tensor", ".", "device", ")", "\n", "\n", "layer_output_list", "=", "[", "]", "\n", "last_state_list", "=", "[", "]", "\n", "\n", "seq_len", "=", "obj_tensor", ".", "size", "(", "1", ")", "\n", "cur_layer_input", "=", "obj_tensor", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "\n", "                ", "h", ",", "c", "=", "hidden_state", "[", "layer_idx", "]", "\n", "output_inner", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "seq_len", ")", ":", "\n", "                    ", "h", ",", "c", "=", "self", ".", "cell_list", "[", "layer_idx", "]", "(", "input_tensor", "=", "cur_layer_input", "[", ":", ",", "t", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "cur_state", "=", "[", "h", ",", "c", "]", ")", "\n", "output_inner", ".", "append", "(", "h", ")", "\n", "\n", "", "layer_output", "=", "torch", ".", "stack", "(", "output_inner", ",", "dim", "=", "1", ")", "\n", "cur_layer_input", "=", "layer_output", "\n", "\n", "layer_output_list", ".", "append", "(", "layer_output", ")", "\n", "last_state_list", ".", "append", "(", "[", "h", ",", "c", "]", ")", "\n", "\n", "", "if", "not", "self", ".", "return_all_layers", ":", "\n", "                ", "layer_output_list", "=", "layer_output_list", "[", "-", "1", ":", "]", "\n", "last_state_list", "=", "last_state_list", "[", "-", "1", ":", "]", "\n", "\n", "", "all_layer_output_list", ".", "append", "(", "layer_output_list", ")", "\n", "all_last_state_list", ".", "append", "(", "last_state_list", ")", "\n", "\n", "# concate last output to form a tensor", "\n", "", "batch_output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "            ", "batch_output", ".", "append", "(", "all_last_state_list", "[", "i", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "", "batch_output", "=", "torch", ".", "cat", "(", "batch_output", ",", "dim", "=", "0", ")", "\n", "\n", "return", "batch_output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._init_hidden": [[392, 397], ["range", "init_states.append", "generator1.LayoutConvLSTM.cell_list[].init_hidden"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.ConvLSTMCell.init_hidden"], ["", "def", "_init_hidden", "(", "self", ",", "batch_size", ",", "device", ")", ":", "\n", "        ", "init_states", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "init_states", ".", "append", "(", "self", ".", "cell_list", "[", "i", "]", ".", "init_hidden", "(", "batch_size", ",", "device", ")", ")", "\n", "", "return", "init_states", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._check_kernel_size_consistency": [[398, 403], ["ValueError", "isinstance", "isinstance", "all", "isinstance"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_check_kernel_size_consistency", "(", "kernel_size", ")", ":", "\n", "        ", "if", "not", "(", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "\n", "(", "isinstance", "(", "kernel_size", ",", "list", ")", "and", "all", "(", "[", "isinstance", "(", "elem", ",", "tuple", ")", "for", "elem", "in", "kernel_size", "]", ")", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "'`kernel_size` must be tuple or list of tuples'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutConvLSTM._extend_for_multilayer": [[404, 409], ["isinstance"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_extend_for_multilayer", "(", "param", ",", "num_layers", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "param", ",", "list", ")", ":", "\n", "            ", "param", "=", "[", "param", "]", "*", "num_layers", "\n", "", "return", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.CropEncoder.__init__": [[412, 438], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator1.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator1.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator1.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator1.ConditionalBatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "generator1.ConditionalBatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "class_num", "=", "10", ")", ":", "\n", "# default: (3, 32, 32) -> (256, 8, 8)", "\n", "        ", "super", "(", "CropEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "# (3, 32, 32) -> (64, 32, 32)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", ",", "class_num", ")", "\n", "# (64, 32, 32) -> (128, 16, 16)", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "2", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "2", ",", "class_num", ")", "\n", "# (128, 16, 16) -> (256, 8, 8)", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "2", ",", "conv_dim", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "4", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "4", ",", "class_num", ")", "\n", "# (256, 8, 8) -> (512, 4, 4)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "4", ",", "conv_dim", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "8", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "8", ",", "class_num", ")", "\n", "# (512, 4, 4) -> (1024, 2, 2)", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv2d", "(", "conv_dim", "*", "8", ",", "conv_dim", "*", "16", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "*", "16", ")", "if", "class_num", "==", "0", "else", "ConditionalBatchNorm2d", "(", "conv_dim", "*", "16", ",", "class_num", ")", "\n", "# pool", "\n", "self", ".", "pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "\n", "# 256 -> 8", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "self", ".", "fc_logvar", "=", "nn", ".", "Linear", "(", "conv_dim", "*", "16", ",", "z_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.CropEncoder.forward": [[439, 467], ["generator1.CropEncoder.c1", "generator1.CropEncoder.activation", "generator1.CropEncoder.c2", "generator1.CropEncoder.activation", "generator1.CropEncoder.c3", "generator1.CropEncoder.activation", "generator1.CropEncoder.c4", "generator1.CropEncoder.activation", "generator1.CropEncoder.conv5", "generator1.CropEncoder.activation", "generator1.CropEncoder.pool", "x.view.view.view", "generator1.CropEncoder.fc_mu", "generator1.CropEncoder.fc_logvar", "generator1.CropEncoder.mul().exp_", "get_z_random().to", "get_z_random().to.mul().add_", "generator1.CropEncoder.bn1", "generator1.CropEncoder.bn1", "generator1.CropEncoder.bn2", "generator1.CropEncoder.bn2", "generator1.CropEncoder.bn3", "generator1.CropEncoder.bn3", "generator1.CropEncoder.bn4", "generator1.CropEncoder.bn4", "generator1.CropEncoder.bn5", "generator1.CropEncoder.bn5", "x.view.view.size", "generator1.CropEncoder.mul", "generator1.get_z_random", "get_z_random().to.mul", "generator1.CropEncoder.mul().exp_.size", "generator1.CropEncoder.mul().exp_.size"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.get_z_random"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", "=", "None", ")", ":", "\n", "        ", "x", "=", "imgs", "\n", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn1", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn2", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn3", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "c4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn4", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "if", "objs", "is", "None", "else", "self", ".", "bn5", "(", "x", ",", "objs", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "mu", "=", "self", ".", "fc_mu", "(", "x", ")", "\n", "logvar", "=", "self", ".", "fc_logvar", "(", "x", ")", "\n", "\n", "std", "=", "logvar", ".", "mul", "(", "0.5", ")", ".", "exp_", "(", ")", "\n", "eps", "=", "get_z_random", "(", "std", ".", "size", "(", "0", ")", ",", "std", ".", "size", "(", "1", ")", ")", ".", "to", "(", "imgs", ".", "device", ")", "\n", "z", "=", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "\n", "return", "z", ",", "mu", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutEncoder.__init__": [[470, 491], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "generator1.ResidualBlock", "generator1.ResidualBlock"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "z_dim", "=", "8", ",", "embedding_dim", "=", "64", ",", "pos_dim", "=", "64", ",", "resi_num", "=", "6", ")", ":", "\n", "        ", "super", "(", "LayoutEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "# Bottleneck layers.", "\n", "in_dim", "=", "64", "\n", "out_dim", "=", "64", "\n", "for", "i", "in", "range", "(", "resi_num", ")", ":", "\n", "            ", "if", "(", "i", "+", "1", ")", "%", "2", "==", "0", ":", "\n", "                ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "in_dim", ",", "dim_out", "=", "out_dim", "*", "2", ")", ")", "\n", "in_dim", "=", "in_dim", "*", "2", "\n", "out_dim", "=", "out_dim", "*", "2", "\n", "", "else", ":", "\n", "\n", "                ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "in_dim", ",", "dim_out", "=", "out_dim", ")", ")", "\n", "", "", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "# (emb+z, 64, 64) -> (64, 64, 64)", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "embedding_dim", "+", "z_dim", "+", "pos_dim", ",", "conv_dim", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", ")", "# if class_num == 0 else ConditionalBatchNorm2d(conv_dim, class_num)", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.LayoutEncoder.forward": [[492, 513], ["generator1.LayoutEncoder.c1", "generator1.LayoutEncoder.bn1", "generator1.LayoutEncoder.activation", "generator1.LayoutEncoder.residual"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "# prepare mask fm", "\n", "#B = z.size(0)", "\n", "#objs = torch.arange(B).cuda()", "\n", "#embeddings = self.embedding(objs)", "\n", "#embeddings_z = torch.cat((embeddings, z), dim=1)", "\n", "#h = embeddings_z.view(embeddings_z.size(0), embeddings_z.size(1), 1, 1) * masks", "\n", "# print(h.shape)", "\n", "# downsample layout", "\n", "        ", "h", "=", "self", ".", "c1", "(", "z", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "\n", "# print(h.shape)", "\n", "# clstm fusion (O, 512, 8, 8) -> (n, 64, 8, 8)", "\n", "#h = self.clstm(h, obj_to_img)", "\n", "# residual block", "\n", "h", "=", "self", ".", "residual", "(", "h", ")", "\n", "# print(h.shape)", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.Decoder.__init__": [[516, 534], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_dim", "=", "512", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# (64, 8, 8) -> (256, 8, 8)", "\n", "self", ".", "c0", "=", "nn", ".", "Conv2d", "(", "conv_dim", ",", "conv_dim", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "//", "2", ")", "\n", "# (256, 8, 8) -> (256, 16, 16)", "\n", "self", ".", "dc1", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "//", "2", ",", "conv_dim", "//", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "//", "2", ")", "\n", "# (256, 16, 16) -> (128, 32, 32)", "\n", "self", ".", "dc2", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "//", "2", ",", "conv_dim", "//", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "//", "4", ")", "\n", "# (128, 32, 32) -> (64, 64, 64)", "\n", "self", ".", "dc3", "=", "nn", ".", "ConvTranspose2d", "(", "conv_dim", "//", "4", ",", "conv_dim", "//", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "conv_dim", "//", "8", ")", "\n", "# (64, 64, 64) -> (3, 64, 64)", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "conv_dim", "//", "8", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.Decoder.forward": [[535, 551], ["generator1.Decoder.c0", "generator1.Decoder.bn0", "generator1.Decoder.activation", "generator1.Decoder.dc1", "generator1.Decoder.bn1", "generator1.Decoder.activation", "generator1.Decoder.dc2", "generator1.Decoder.bn2", "generator1.Decoder.activation", "generator1.Decoder.dc3", "generator1.Decoder.bn3", "generator1.Decoder.activation", "generator1.Decoder.c4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "h", "=", "hidden", "\n", "h", "=", "self", ".", "c0", "(", "h", ")", "\n", "h", "=", "self", ".", "bn0", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc1", "(", "h", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc2", "(", "h", ")", "\n", "h", "=", "self", ".", "bn2", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "dc3", "(", "h", ")", "\n", "h", "=", "self", ".", "bn3", "(", "h", ")", "\n", "h", "=", "self", ".", "activation", "(", "h", ")", "\n", "h", "=", "self", ".", "c4", "(", "h", ")", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.Generator.__init__": [[554, 564], ["torch.Module.__init__", "generator1.CropEncoder", "generator1.generate_latent", "models2.transformer.transformer_decoder", "generator1.LayoutEncoder", "generator1.Decoder"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_embeddings", ",", "embedding_dim", "=", "64", ",", "z_dim", "=", "8", ",", "pos_dim", "=", "64", ",", "obj_size", "=", "32", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obj_size", "=", "obj_size", "\n", "# (3, 32, 32) -> (256, 4, 4) -> 8", "\n", "self", ".", "crop_encoder", "=", "CropEncoder", "(", "z_dim", "=", "z_dim", ",", "class_num", "=", "num_embeddings", ")", "\n", "self", ".", "latent_generator", "=", "generate_latent", "(", "embedding_dim", ",", "pos_dim", ",", "num_embeddings", ")", "\n", "#self.transformer_encoder = transformer_encoder(3)", "\n", "self", ".", "transformer_decoder", "=", "transformer_decoder", "(", "3", ")", "\n", "self", ".", "layout_encoder", "=", "LayoutEncoder", "(", "z_dim", "=", "z_dim", ",", "embedding_dim", "=", "embedding_dim", ",", "pos_dim", "=", "pos_dim", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "conv_dim", "=", "512", ")", "\n", "# self.apply(weights_init)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.Generator.forward": [[566, 599], ["models2.bilinear.crop_bbox_batch", "generator1.Generator.crop_encoder", "generator1.Generator.latent_generator", "generator1.Generator.latent_generator", "generator1.featuremap_composition", "print", "print", "generator1.featuremap_composition", "generator1.Generator.transformer_decoder", "generator1.Generator.transformer_decoder", "feat.permute().contiguous().view.permute().contiguous().view.size", "feat.permute().contiguous().view.permute().contiguous().view.size", "feat.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "feat_rand.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "generator1.Generator.layout_encoder", "generator1.Generator.layout_encoder", "generator1.Generator.decoder", "generator1.Generator.decoder", "models2.bilinear.crop_bbox_batch", "generator1.Generator.crop_encoder", "models2.bilinear.crop_bbox_batch", "feat.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "feat_rand.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "feat.permute().contiguous().view.permute().contiguous().view.permute", "feat_rand.permute().contiguous().view.permute().contiguous().view.permute"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.featuremap_composition", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.featuremap_composition", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.bilinear.crop_bbox_batch"], ["", "def", "forward", "(", "self", ",", "imgs", ",", "objs", ",", "boxes", ",", "masks", ",", "obj_to_img", ",", "z_rand", ")", ":", "\n", "        ", "crops_input", "=", "crop_bbox_batch", "(", "imgs", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "z_rec", ",", "mu", ",", "logvar", "=", "self", ".", "crop_encoder", "(", "crops_input", ",", "objs", ")", "\n", "# print(z_rec.shape)", "\n", "\n", "# semantic and spatial information", "\n", "latent_z", ",", "pos_z", "=", "self", ".", "latent_generator", "(", "objs", ",", "boxes", ",", "z_rec", ")", "\n", "# print(latent_z.shape)", "\n", "latent_z_rand", ",", "pos_z_rand", "=", "self", ".", "latent_generator", "(", "objs", ",", "boxes", ",", "z_rand", ")", "\n", "composed_z", ",", "mask", "=", "featuremap_composition", "(", "latent_z", ",", "obj_to_img", ")", "\n", "print", "(", "composed_z", ".", "shape", ")", "\n", "print", "(", "mask", ".", "shape", ")", "\n", "composed_z_rand", ",", "mask_rand", "=", "featuremap_composition", "(", "latent_z_rand", ",", "obj_to_img", ")", "\n", "feat", "=", "self", ".", "transformer_decoder", "(", "composed_z", ",", "mask", ")", "\n", "feat_rand", "=", "self", ".", "transformer_decoder", "(", "composed_z_rand", ",", "mask", ")", "\n", "B", "=", "feat", ".", "size", "(", "0", ")", "\n", "C", "=", "feat", ".", "size", "(", "2", ")", "\n", "feat", "=", "feat", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "C", ",", "8", ",", "8", ")", "\n", "feat_rand", "=", "feat_rand", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "C", ",", "8", ",", "8", ")", "\n", "# print(feat.shape)", "\n", "h_rec", "=", "self", ".", "layout_encoder", "(", "feat", ")", "\n", "# print(h_rec.shape)", "\n", "h_rand", "=", "self", ".", "layout_encoder", "(", "feat_rand", ")", "\n", "\n", "img_rec", "=", "self", ".", "decoder", "(", "h_rec", ")", "\n", "img_rand", "=", "self", ".", "decoder", "(", "h_rand", ")", "\n", "\n", "crops_rand", "=", "crop_bbox_batch", "(", "img_rand", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "_", ",", "z_rand_rec", ",", "_", "=", "self", ".", "crop_encoder", "(", "crops_rand", ",", "objs", ")", "\n", "\n", "crops_input_rec", "=", "crop_bbox_batch", "(", "img_rec", ",", "boxes", ",", "obj_to_img", ",", "self", ".", "obj_size", ")", "\n", "\n", "return", "crops_input", ",", "crops_input_rec", ",", "crops_rand", ",", "img_rec", ",", "img_rand", ",", "mu", ",", "logvar", ",", "z_rand_rec", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.featuremap_composition": [[20, 41], ["range", "obj_num.append", "max", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros", "range", "z.size", "len", "len", "obj_num.append", "torch.zeros", "torch.zeros", "len", "z.size"], "function", ["None"], ["", "", "def", "featuremap_composition", "(", "z", ",", "obj_to_img", ")", ":", "\n", "    ", "obj_num", "=", "[", "]", "\n", "ref", "=", "0", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "z", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "if", "obj_to_img", "[", "i", "]", "==", "ref", ":", "\n", "            ", "count", "+=", "1", "\n", "", "else", ":", "\n", "            ", "obj_num", ".", "append", "(", "count", ")", "\n", "ref", "=", "obj_to_img", "[", "i", "]", "\n", "count", "=", "1", "\n", "", "", "obj_num", ".", "append", "(", "count", ")", "\n", "L", "=", "max", "(", "obj_num", ")", "\n", "holder", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "L", ",", "z", ".", "size", "(", "1", ")", ")", ".", "cuda", "(", ")", "\n", "mask", "=", "torch", ".", "zeros", "(", "len", "(", "obj_num", ")", ",", "L", ")", "\n", "start", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "obj_num", ")", ")", ":", "\n", "        ", "holder", "[", "i", ",", ":", "obj_num", "[", "i", "]", ",", ":", "]", "=", "z", "[", "start", ":", "start", "+", "obj_num", "[", "i", "]", ",", ":", "]", "\n", "mask", "[", "i", ",", ":", "obj_num", "[", "i", "]", "]", "=", "1", "\n", "start", "=", "start", "+", "obj_num", "[", "i", "]", "\n", "", "return", "holder", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.get_z_random": [[43, 49], ["torch.randn", "torch.randn", "torch.rand", "torch.rand"], "function", ["None"], ["", "def", "get_z_random", "(", "batch_size", ",", "z_dim", ",", "random_type", "=", "'gauss'", ")", ":", "\n", "    ", "if", "random_type", "==", "'uni'", ":", "\n", "        ", "z", "=", "torch", ".", "rand", "(", "batch_size", ",", "z_dim", ")", "*", "2.0", "-", "1.0", "\n", "", "elif", "random_type", "==", "'gauss'", ":", "\n", "        ", "z", "=", "torch", ".", "randn", "(", "batch_size", ",", "z_dim", ")", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.generator1.transform_z_flat": [[51, 62], ["torch.zeros().to", "torch.zeros().to", "range", "idx.view.view", "idx.view.size", "torch.zeros", "torch.zeros", "idx.view.dim", "z_flat.size"], "function", ["None"], ["", "def", "transform_z_flat", "(", "batch_size", ",", "time_step", ",", "z_flat", ",", "obj_to_img", ")", ":", "\n", "# restore z to batch with padding", "\n", "    ", "z", "=", "torch", ".", "zeros", "(", "batch_size", ",", "time_step", ",", "z_flat", ".", "size", "(", "1", ")", ")", ".", "to", "(", "z_flat", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "idx", "=", "(", "obj_to_img", ".", "data", "==", "i", ")", ".", "nonzero", "(", ")", "\n", "if", "idx", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "n", "=", "idx", ".", "size", "(", "0", ")", "\n", "z", "[", "i", ",", ":", "n", "]", "=", "z_flat", "[", "idx", "]", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphConvolution.__init__": [[19, 29], ["torch.nn.modules.module.Module.__init__", "Parameter", "resnet_generator_graph.GraphConvolution.reset_parameters", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "Parameter", "resnet_generator_graph.GraphConvolution.register_parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphConvolution.reset_parameters": [[30, 35], ["resnet_generator_graph.GraphConvolution.weight.data.uniform_", "math.sqrt", "resnet_generator_graph.GraphConvolution.bias.data.uniform_", "resnet_generator_graph.GraphConvolution.weight.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphConvolution.forward": [[36, 43], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "spmm", "(", "adj", ",", "support", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "return", "output", "+", "self", ".", "bias", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphConvolution.__repr__": [[44, 48], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphFunc.__init__": [[73, 81], ["torch.Module.__init__", "resnet_generator_graph.GraphConvolution", "resnet_generator_graph.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "z_dim", ")", ":", "\n", "        ", "super", "(", "GraphFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\"\"\"\n        DeepSets Function\n        \"\"\"", "\n", "self", ".", "gc1", "=", "GraphConvolution", "(", "z_dim", ",", "z_dim", "*", "4", ")", "\n", "self", ".", "gc2", "=", "GraphConvolution", "(", "z_dim", "*", "4", ",", "z_dim", ")", "\n", "self", ".", "z_dim", "=", "z_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.GraphFunc.forward": [[82, 123], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "np.unique", "resnet_generator_graph.normalize", "resnet_generator_graph.sparse_mx_to_torch_sparse_tensor", "torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "torch.dropout", "resnet_generator_graph.GraphFunc.gc2", "set_output_list.append", "graph_label[].cpu().numpy", "[].tolist", "len", "scipy.coo_matrix", "np.concatenate", "scipy.coo_matrix", "scipy.coo_matrix.multiply", "resnet_generator_graph.GraphFunc.gc1", "len", "np.concatenate.append", "scipy.coo_matrix.T.multiply", "scipy.eye", "graph_label[].cpu", "np.array", "np.array", "np.ones", "np.where", "list", "np.array", "np.array", "itertools.permutations", "graph_label[].cpu().numpy", "graph_label[].cpu"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.normalize", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.sparse_mx_to_torch_sparse_tensor"], ["", "def", "forward", "(", "self", ",", "graph_input_raw", ",", "graph_label", ")", ":", "\n", "#import ipdb; ipdb.set_trace()", "\n", "        ", "\"\"\"\n        set_input, seq_length, set_size, dim\n        \"\"\"", "\n", "set_length", ",", "set_size", ",", "dim", "=", "graph_input_raw", ".", "shape", "\n", "assert", "(", "dim", "==", "self", ".", "z_dim", ")", "\n", "set_output_list", "=", "[", "]", "\n", "\n", "for", "g_index", "in", "range", "(", "set_length", ")", ":", "\n", "            ", "graph_input", "=", "graph_input_raw", "[", "g_index", ",", ":", "]", "\n", "# construct the adj matrix", "\n", "unique_class", "=", "np", ".", "unique", "(", "graph_label", "[", "g_index", ",", ":", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "edge_set", "=", "[", "]", "\n", "for", "c", "in", "unique_class", ":", "\n", "                ", "current_index", "=", "np", ".", "where", "(", "graph_label", "[", "g_index", ",", ":", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "==", "c", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "if", "len", "(", "current_index", ")", ">", "1", ":", "\n", "                    ", "edge_set", ".", "append", "(", "np", ".", "array", "(", "list", "(", "permutations", "(", "current_index", ",", "2", ")", ")", ")", ")", "\n", "\n", "", "", "if", "len", "(", "edge_set", ")", "==", "0", ":", "\n", "                ", "adj", "=", "sp", ".", "coo_matrix", "(", "(", "np", ".", "array", "(", "[", "0", "]", ")", ",", "(", "np", ".", "array", "(", "[", "0", "]", ")", ",", "np", ".", "array", "(", "[", "0", "]", ")", ")", ")", ",", "\n", "shape", "=", "(", "graph_label", "[", "g_index", ",", ":", "]", ".", "shape", "[", "0", "]", ",", "graph_label", "[", "g_index", ",", ":", "]", ".", "shape", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "edge_set", "=", "np", ".", "concatenate", "(", "edge_set", ",", "0", ")", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "(", "np", ".", "ones", "(", "edge_set", ".", "shape", "[", "0", "]", ")", ",", "(", "edge_set", "[", ":", ",", "0", "]", ",", "edge_set", "[", ":", ",", "1", "]", ")", ")", ",", "\n", "shape", "=", "(", "graph_label", "[", "g_index", ",", ":", "]", ".", "shape", "[", "0", "]", ",", "graph_label", "[", "g_index", ",", ":", "]", ".", "shape", "[", "0", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "", "adj", "=", "adj", "+", "adj", ".", "T", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "-", "adj", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "\n", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "\n", "# do GCN process", "\n", "residual", "=", "graph_input", "\n", "graph_input", "=", "F", ".", "relu", "(", "self", ".", "gc1", "(", "graph_input", ",", "adj", ")", ")", "\n", "graph_input", "=", "F", ".", "dropout", "(", "graph_input", ",", "0.5", ",", "training", "=", "self", ".", "training", ")", "\n", "graph_input", "=", "self", ".", "gc2", "(", "graph_input", ",", "adj", ")", "\n", "set_output", "=", "residual", "+", "graph_input", "\n", "set_output_list", ".", "append", "(", "set_output", ")", "\n", "\n", "", "return", "torch", ".", "stack", "(", "set_output_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.BoxMultiHeadedAttention.__init__": [[244, 270], ["torch.Module.__init__", "resnet_generator_graph.clones", "resnet_generator_graph.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "#matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.BoxMultiHeadedAttention.forward": [[272, 331], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "resnet_generator_graph.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "resnet_generator_graph.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "resnet_generator_graph.BoxMultiHeadedAttention.layer_norm0", "resnet_generator_graph.BoxMultiHeadedAttention.dropout", "resnet_generator_graph.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "#if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "#tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "#print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "#print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "#if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "##print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ScaledDotProductAttention.__init__": [[336, 341], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ScaledDotProductAttention.forward": [[342, 360], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "resnet_generator_graph.ScaledDotProductAttention.softmax", "resnet_generator_graph.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "#if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "#print(mask.shape)", "\n", "#print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "#print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.MultiHeadAttention.__init__": [[364, 384], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "resnet_generator_graph.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "np.sqrt", "np.sqrt", "np.sqrt", "np.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.MultiHeadAttention.forward": [[385, 412], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "resnet_generator_graph.MultiHeadAttention.w_qs().view", "resnet_generator_graph.MultiHeadAttention.w_ks().view", "resnet_generator_graph.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "resnet_generator_graph.MultiHeadAttention.attention", "resnet_generator_graph.MultiHeadAttention.view", "resnet_generator_graph.MultiHeadAttention.permute().contiguous().view", "resnet_generator_graph.MultiHeadAttention.layer_norm0", "resnet_generator_graph.MultiHeadAttention.dropout", "resnet_generator_graph.MultiHeadAttention.layer_norm", "resnet_generator_graph.MultiHeadAttention.fc", "resnet_generator_graph.MultiHeadAttention.w_qs", "resnet_generator_graph.MultiHeadAttention.w_ks", "resnet_generator_graph.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "resnet_generator_graph.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "resnet_generator_graph.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "#print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator64.__init__": [[414, 439], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_graph.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator64.forward": [[440, 468], ["resnet_generator_graph.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.ResnetGenerator64.mapping", "resnet_generator_graph.ResnetGenerator64.mask_regress", "resnet_generator_graph.ResnetGenerator64.fc().view", "resnet_generator_graph.ResnetGenerator64.res2", "resnet_generator_graph.ResnetGenerator64.res3", "resnet_generator_graph.ResnetGenerator64.res4", "resnet_generator_graph.ResnetGenerator64.res5", "resnet_generator_graph.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator64.init_parameter": [[469, 475], ["resnet_generator_graph.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128.__init__": [[478, 503], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_graph.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128.forward": [[504, 543], ["z.view.view.view", "resnet_generator_graph.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.ResnetGenerator128.mapping", "resnet_generator_graph.ResnetGenerator128.mask_regress", "resnet_generator_graph.ResnetGenerator128.fc().view", "resnet_generator_graph.ResnetGenerator128.res1", "resnet_generator_graph.ResnetGenerator128.res2", "resnet_generator_graph.ResnetGenerator128.res3", "resnet_generator_graph.ResnetGenerator128.res4", "resnet_generator_graph.ResnetGenerator128.res5", "resnet_generator_graph.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_graph.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128.init_parameter": [[544, 550], ["resnet_generator_graph.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128_nf.__init__": [[552, 574], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_graph.ResnetGenerator128_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "#print(self.mapping)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128_nf.forward": [[576, 615], ["z.view.view.view", "resnet_generator_graph.ResnetGenerator128_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.ResnetGenerator128_nf.mapping", "resnet_generator_graph.ResnetGenerator128_nf.mask_regress", "resnet_generator_graph.ResnetGenerator128_nf.fc().view", "resnet_generator_graph.ResnetGenerator128_nf.res1", "resnet_generator_graph.ResnetGenerator128_nf.res2", "resnet_generator_graph.ResnetGenerator128_nf.res3", "resnet_generator_graph.ResnetGenerator128_nf.res4", "resnet_generator_graph.ResnetGenerator128_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.ResnetGenerator128_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_graph.ResnetGenerator128_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.ResnetGenerator128_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "#print(y)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResnetGenerator128_nf.init_parameter": [[616, 622], ["resnet_generator_graph.ResnetGenerator128_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock.__init__": [[625, 637], ["torch.Module.__init__", "resnet_generator_graph.conv2d", "resnet_generator_graph.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock.residual": [[638, 649], ["resnet_generator_graph.ResBlock.b1", "resnet_generator_graph.ResBlock.activation", "resnet_generator_graph.ResBlock.conv1", "resnet_generator_graph.ResBlock.b2", "resnet_generator_graph.ResBlock.activation", "resnet_generator_graph.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock.shortcut": [[650, 656], ["resnet_generator_graph.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock.forward": [[657, 659], ["resnet_generator_graph.ResBlock.residual", "resnet_generator_graph.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_part.__init__": [[661, 673], ["torch.Module.__init__", "resnet_generator_graph.conv2d", "resnet_generator_graph.conv2d", "SpatialAdaptiveSynBatchNorm2d_part", "SpatialAdaptiveSynBatchNorm2d_part", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_part.residual": [[674, 685], ["resnet_generator_graph.ResBlock_part.b1", "resnet_generator_graph.ResBlock_part.activation", "resnet_generator_graph.ResBlock_part.conv1", "resnet_generator_graph.ResBlock_part.b2", "resnet_generator_graph.ResBlock_part.activation", "resnet_generator_graph.ResBlock_part.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_part.shortcut": [[686, 692], ["resnet_generator_graph.ResBlock_part.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_part.forward": [[693, 695], ["resnet_generator_graph.ResBlock_part.residual", "resnet_generator_graph.ResBlock_part.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_1.__init__": [[697, 715], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "ResBlock_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "SynchronizedBatchNorm2d", "(", "in_ch", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv1", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv2", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv3", ".", "weight", ".", "data", ",", "1.", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "SynchronizedBatchNorm2d", "(", "in_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv1", ",", "\n", "SynchronizedBatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.ResBlock_1.forward": [[716, 719], ["resnet_generator_graph.ResBlock_1.model", "resnet_generator_graph.ResBlock_1.conv3", "resnet_generator_graph.ResBlock_1.relu", "resnet_generator_graph.ResBlock_1.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "+", "(", "self", ".", "conv3", "(", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.background_foreground_generator.__init__": [[729, 738], ["torch.Module.__init__", "resnet_generator_graph.ResnetGenerator128_nf", "resnet_generator_graph.ResnetGenerator128_nf", "resnet_generator_graph.ResBlock_1", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "background_cla", ",", "foreground_cla", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "background_foreground_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "background_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "background_cla", ")", "\n", "self", ".", "foreground_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "foreground_cla", ")", "\n", "self", ".", "combination", "=", "ResBlock_1", "(", "64", "*", "2", ",", "64", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "64", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "z_im_f", "=", "None", ",", "y_f", "=", "None", ",", "z_im_b", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.background_foreground_generator.forward": [[738, 745], ["resnet_generator_graph.background_foreground_generator.background_g", "resnet_generator_graph.background_foreground_generator.foreground_g", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.background_foreground_generator.combination", "resnet_generator_graph.background_foreground_generator.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "z_im_f", "=", "None", ",", "y_f", "=", "None", ",", "z_im_b", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n", "        ", "background_feat", "=", "self", ".", "background_g", "(", "z_b", ",", "bbox_b", ",", "z_im", "=", "z_im_b", ",", "y", "=", "y_b", ")", "\n", "foreground_feat", "=", "self", ".", "foreground_g", "(", "z_f", ",", "bbox_f", ",", "z_im", "=", "z_im_f", ",", "y", "=", "y_f", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "background_feat", ",", "foreground_feat", ")", ",", "dim", "=", "1", ")", "\n", "feat", "=", "self", ".", "combination", "(", "feat", ")", "\n", "im", "=", "self", ".", "final", "(", "feat", ")", "\n", "return", "im", "\n", "", "", "class", "context_aware_generator", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator.__init__": [[746, 773], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_graph.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_graph.context_aware_generator.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator.forward": [[774, 824], ["z.view.view.view", "resnet_generator_graph.context_aware_generator.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.context_aware_generator.mapping().view", "resnet_generator_graph.context_aware_generator.context", "w.view.view.view", "resnet_generator_graph.context_aware_generator.mask_regress", "resnet_generator_graph.context_aware_generator.fc().view", "resnet_generator_graph.context_aware_generator.res1", "resnet_generator_graph.context_aware_generator.res2", "resnet_generator_graph.context_aware_generator.res3", "resnet_generator_graph.context_aware_generator.res4", "resnet_generator_graph.context_aware_generator.res5", "resnet_generator_graph.context_aware_generator.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.context_aware_generator.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_graph.context_aware_generator.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.context_aware_generator.mapping", "resnet_generator_graph.context_aware_generator.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "#import ipdb; ipdb.set_trace()", "\n", "#print(z.shape)", "\n", "#print(bbox.shape)", "\n", "#print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "#print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "###context aware w", "\n", "#print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "#print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "#print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "#print(bbox.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "", "def", "init_parameter", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator.init_parameter": [[824, 830], ["resnet_generator_graph.context_aware_generator.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator_part.__init__": [[832, 859], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_graph.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock_part", "resnet_generator_graph.ResBlock_part", "resnet_generator_graph.ResBlock_part", "resnet_generator_graph.ResBlock_part", "resnet_generator_graph.ResBlock_part", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MaskRegressNet_part", "resnet_generator_graph.context_aware_generator_part.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock_part", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock_part", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock_part", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet_part", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator_part.forward": [[860, 913], ["z.view.view.view", "resnet_generator_graph.context_aware_generator_part.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.context_aware_generator_part.mapping().view", "resnet_generator_graph.context_aware_generator_part.context", "w.view.view.view", "resnet_generator_graph.context_aware_generator_part.mask_regress", "resnet_generator_graph.context_aware_generator_part.fc().view", "resnet_generator_graph.context_aware_generator_part.res1", "resnet_generator_graph.context_aware_generator_part.res2", "resnet_generator_graph.context_aware_generator_part.res3", "resnet_generator_graph.context_aware_generator_part.res4", "resnet_generator_graph.context_aware_generator_part.res5", "resnet_generator_graph.context_aware_generator_part.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.context_aware_generator_part.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_graph.context_aware_generator_part.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.context_aware_generator_part.mapping", "resnet_generator_graph.context_aware_generator_part.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "#import ipdb; ipdb.set_trace()", "\n", "#print(z.shape)", "\n", "#print(bbox.shape)", "\n", "#print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "#print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "###context aware w", "\n", "#print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "#print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "#print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", ",", "bbox1", ",", "bbox2", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "#print(bbox.shape)", "\n", "#print(bbox1.shape)", "\n", "#print(bbox2.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "", "def", "init_parameter", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.context_aware_generator_part.init_parameter": [[913, 919], ["resnet_generator_graph.context_aware_generator_part.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.graph_aware_generator.__init__": [[921, 948], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_graph.GraphFunc", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "resnet_generator_graph.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_graph.graph_aware_generator.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_graph.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "graph_aware_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "GraphFunc", "(", "num_w", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.graph_aware_generator.forward": [[949, 999], ["z.view.view.view", "resnet_generator_graph.graph_aware_generator.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_graph.graph_aware_generator.mapping().view", "resnet_generator_graph.graph_aware_generator.context", "w.view.view.view", "resnet_generator_graph.graph_aware_generator.mask_regress", "resnet_generator_graph.graph_aware_generator.fc().view", "resnet_generator_graph.graph_aware_generator.res1", "resnet_generator_graph.graph_aware_generator.res2", "resnet_generator_graph.graph_aware_generator.res3", "resnet_generator_graph.graph_aware_generator.res4", "resnet_generator_graph.graph_aware_generator.res5", "resnet_generator_graph.graph_aware_generator.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.graph_aware_generator.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_graph.graph_aware_generator.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_graph.graph_aware_generator.mapping", "resnet_generator_graph.graph_aware_generator.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "#import ipdb; ipdb.set_trace()", "\n", "#print(z.shape)", "\n", "#print(bbox.shape)", "\n", "#print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "#print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "###context aware w", "\n", "#print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "y", ")", "\n", "#print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "#print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "#print(bbox.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "", "def", "init_parameter", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.graph_aware_generator.init_parameter": [[999, 1005], ["resnet_generator_graph.graph_aware_generator.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.normalize": [[50, 58], ["np.array", "np.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "np.power", "np.isinf"], "function", ["None"], ["", "", "def", "normalize", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.sparse_mx_to_torch_sparse_tensor": [[60, 71], ["sparse_mx.tocoo().astype.tocoo().astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Size", "torch.Size", "torch.Size", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "np.vstack().astype", "torch.sparse.FloatTensor().cuda", "torch.sparse.FloatTensor().cuda", "torch.sparse.FloatTensor().cuda", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "sparse_mx.tocoo().astype.tocoo", "np.vstack", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor"], "function", ["None"], ["", "def", "sparse_mx_to_torch_sparse_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "\"\"\"Convert a scipy sparse matrix to a torch sparse tensor.\"\"\"", "\n", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "vstack", "(", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", ")", "\n", "values", "=", "torch", ".", "from_numpy", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.clones": [[125, 128], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["", "", "def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.BoxRelationalEmbedding": [[129, 189], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "#returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "#follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "#cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.box_attention": [[190, 236], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "w_g.masked_fill.masked_fill", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "np.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.log", "torch.log", "torch.log", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "torch.clamp", "torch.clamp", "torch.clamp", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "#print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "#print(w_q.shape)", "\n", "#print(w_k.shape)", "\n", "#attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "#print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_g", "=", "w_g", ".", "masked_fill", "(", "mask", "==", "0", ",", "0", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "#print(w_g.shape)", "\n", "#print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "#print(w_a)", "\n", "#print(w_g)", "\n", "w_mn", "=", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "w_g", ",", "min", "=", "1e-6", ")", ")", "+", "w_a", "\n", "#w_mn = w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_graph.conv2d": [[721, 727], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression.MaskRegressNet.__init__": [[12, 37], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj_feat", "=", "128", ",", "mask_size", "=", "16", ",", "map_size", "=", "64", ")", ":", "\n", "        ", "super", "(", "MaskRegressNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "obj_feat", ",", "128", "*", "4", "*", "4", ")", ")", "\n", "conv1", "=", "list", "(", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv1", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "conv1", ")", "\n", "\n", "conv2", "=", "list", "(", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv2", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "conv2", ")", "\n", "\n", "conv3", "=", "list", "(", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "*", "conv3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression.MaskRegressNet.forward": [[38, 56], ["bbox.size", "obj_feat.view.view.view", "mask_regression.MaskRegressNet.fc", "mask_regression.MaskRegressNet.conv1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression.MaskRegressNet.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression.MaskRegressNet.conv3", "x.view.view.view", "masks_to_layout().view", "x.view.view.view", "masks_to_layout"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout"], ["", "def", "forward", "(", "self", ",", "obj_feat", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param obj_feat: (b*num_o, feat_dim)\n        :param bbox: (b, num_o, 4)\n        :return: bbmap: (b, num_o, map_size, map_size)\n        \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "obj_feat", "=", "obj_feat", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "obj_feat", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ".", "view", "(", "b", "*", "num_o", ",", "128", ",", "4", ",", "4", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "8", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "16", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "\n", "bbmap", "=", "masks_to_layout", "(", "bbox", ",", "x", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "return", "bbmap", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression.MaskRegressNetv2.__init__": [[59, 84], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj_feat", "=", "128", ",", "mask_size", "=", "16", ",", "map_size", "=", "64", ")", ":", "\n", "        ", "super", "(", "MaskRegressNetv2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "obj_feat", ",", "256", "*", "4", "*", "4", ")", ")", "\n", "conv1", "=", "list", "(", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "conv1", ")", "\n", "\n", "conv2", "=", "list", "(", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "conv2", ")", "\n", "\n", "conv3", "=", "list", "(", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "*", "conv3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression.MaskRegressNetv2.forward": [[85, 103], ["bbox.size", "obj_feat.view.view.view", "mask_regression.MaskRegressNetv2.fc", "mask_regression.MaskRegressNetv2.conv1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression.MaskRegressNetv2.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression.MaskRegressNetv2.conv3", "x.view.view.view", "masks_to_layout().view", "x.view.view.view", "masks_to_layout"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout"], ["", "def", "forward", "(", "self", ",", "obj_feat", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param obj_feat: (b*num_o, feat_dim)\n        :param bbox: (b, num_o, 4)\n        :return: bbmap: (b, num_o, map_size, map_size)\n        \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "obj_feat", "=", "obj_feat", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "obj_feat", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ".", "view", "(", "b", "*", "num_o", ",", "256", ",", "4", ",", "4", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "8", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "16", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "\n", "bbmap", "=", "masks_to_layout", "(", "bbox", ",", "x", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "return", "bbmap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator64.__init__": [[10, 35], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1_bk.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_bk.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator64.forward": [[36, 64], ["resnet_generator_v1_bk.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1_bk.ResnetGenerator64.mapping", "resnet_generator_v1_bk.ResnetGenerator64.mask_regress", "resnet_generator_v1_bk.ResnetGenerator64.fc().view", "resnet_generator_v1_bk.ResnetGenerator64.res2", "resnet_generator_v1_bk.ResnetGenerator64.res3", "resnet_generator_v1_bk.ResnetGenerator64.res4", "resnet_generator_v1_bk.ResnetGenerator64.res5", "resnet_generator_v1_bk.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_bk.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator64.init_parameter": [[65, 71], ["resnet_generator_v1_bk.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator128.__init__": [[74, 99], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "resnet_generator_v1_bk.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1_bk.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_bk.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator128.forward": [[100, 138], ["z.view.view.view", "resnet_generator_v1_bk.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1_bk.ResnetGenerator128.mapping", "resnet_generator_v1_bk.ResnetGenerator128.mask_regress", "resnet_generator_v1_bk.ResnetGenerator128.fc().view", "resnet_generator_v1_bk.ResnetGenerator128.res1", "resnet_generator_v1_bk.ResnetGenerator128.res2", "resnet_generator_v1_bk.ResnetGenerator128.res3", "resnet_generator_v1_bk.ResnetGenerator128.res4", "resnet_generator_v1_bk.ResnetGenerator128.res5", "resnet_generator_v1_bk.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_bk.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v1_bk.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_bk.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResnetGenerator128.init_parameter": [[139, 145], ["resnet_generator_v1_bk.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResBlock.__init__": [[148, 160], ["torch.Module.__init__", "resnet_generator_v1_bk.conv2d", "resnet_generator_v1_bk.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_bk.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResBlock.residual": [[161, 172], ["resnet_generator_v1_bk.ResBlock.b1", "resnet_generator_v1_bk.ResBlock.activation", "resnet_generator_v1_bk.ResBlock.conv1", "resnet_generator_v1_bk.ResBlock.b2", "resnet_generator_v1_bk.ResBlock.activation", "resnet_generator_v1_bk.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResBlock.shortcut": [[173, 179], ["resnet_generator_v1_bk.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.ResBlock.forward": [[180, 182], ["resnet_generator_v1_bk.ResBlock.residual", "resnet_generator_v1_bk.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_bk.conv2d": [[184, 190], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64.__init__": [[10, 35], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64.forward": [[36, 64], ["resnet_generator_v1.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1.ResnetGenerator64.mapping", "resnet_generator_v1.ResnetGenerator64.mask_regress", "resnet_generator_v1.ResnetGenerator64.fc().view", "resnet_generator_v1.ResnetGenerator64.res2", "resnet_generator_v1.ResnetGenerator64.res3", "resnet_generator_v1.ResnetGenerator64.res4", "resnet_generator_v1.ResnetGenerator64.res5", "resnet_generator_v1.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64.init_parameter": [[65, 71], ["resnet_generator_v1.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128.__init__": [[74, 99], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128.forward": [[100, 138], ["z.view.view.view", "resnet_generator_v1.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1.ResnetGenerator128.mapping", "resnet_generator_v1.ResnetGenerator128.mask_regress", "resnet_generator_v1.ResnetGenerator128.fc().view", "resnet_generator_v1.ResnetGenerator128.res1", "resnet_generator_v1.ResnetGenerator128.res2", "resnet_generator_v1.ResnetGenerator128.res3", "resnet_generator_v1.ResnetGenerator128.res4", "resnet_generator_v1.ResnetGenerator128.res5", "resnet_generator_v1.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v1.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128.init_parameter": [[139, 145], ["resnet_generator_v1.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128_nf.__init__": [[148, 169], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1.ResnetGenerator128_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128_nf.forward": [[170, 207], ["z.view.view.view", "resnet_generator_v1.ResnetGenerator128_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1.ResnetGenerator128_nf.mapping", "resnet_generator_v1.ResnetGenerator128_nf.mask_regress", "resnet_generator_v1.ResnetGenerator128_nf.fc().view", "resnet_generator_v1.ResnetGenerator128_nf.res1", "resnet_generator_v1.ResnetGenerator128_nf.res2", "resnet_generator_v1.ResnetGenerator128_nf.res3", "resnet_generator_v1.ResnetGenerator128_nf.res4", "resnet_generator_v1.ResnetGenerator128_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator128_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v1.ResnetGenerator128_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator128_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator128_nf.init_parameter": [[208, 214], ["resnet_generator_v1.ResnetGenerator128_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64_nf.__init__": [[217, 241], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "resnet_generator_v1.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1.ResnetGenerator64_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "# self.final = nn.Sequential(SynchronizedBatchNorm2d(ch),", "\n", "#                            nn.ReLU(),", "\n", "#                            conv2d(ch, output_dim, 3, 1, 1),", "\n", "#                            nn.Tanh())", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64_nf.forward": [[242, 278], ["z.view.view.view", "resnet_generator_v1.ResnetGenerator64_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1.ResnetGenerator64_nf.mapping", "resnet_generator_v1.ResnetGenerator64_nf.mask_regress", "resnet_generator_v1.ResnetGenerator64_nf.fc().view", "resnet_generator_v1.ResnetGenerator64_nf.res2", "resnet_generator_v1.ResnetGenerator64_nf.res3", "resnet_generator_v1.ResnetGenerator64_nf.res4", "resnet_generator_v1.ResnetGenerator64_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator64_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v1.ResnetGenerator64_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.ResnetGenerator64_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# x = self.final(x)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResnetGenerator64_nf.init_parameter": [[279, 285], ["resnet_generator_v1.ResnetGenerator64_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock.__init__": [[288, 300], ["torch.Module.__init__", "resnet_generator_v1.conv2d", "resnet_generator_v1.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock.residual": [[301, 312], ["resnet_generator_v1.ResBlock.b1", "resnet_generator_v1.ResBlock.activation", "resnet_generator_v1.ResBlock.conv1", "resnet_generator_v1.ResBlock.b2", "resnet_generator_v1.ResBlock.activation", "resnet_generator_v1.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock.shortcut": [[313, 319], ["resnet_generator_v1.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock.forward": [[320, 322], ["resnet_generator_v1.ResBlock.residual", "resnet_generator_v1.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock_1.__init__": [[325, 343], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "ResBlock_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "SynchronizedBatchNorm2d", "(", "in_ch", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv1", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv2", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv3", ".", "weight", ".", "data", ",", "1.", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "SynchronizedBatchNorm2d", "(", "in_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv1", ",", "\n", "SynchronizedBatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.ResBlock_1.forward": [[345, 348], ["resnet_generator_v1.ResBlock_1.model", "resnet_generator_v1.ResBlock_1.conv3", "resnet_generator_v1.ResBlock_1.relu", "resnet_generator_v1.ResBlock_1.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "+", "(", "self", ".", "conv3", "(", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.background_foreground_generator.__init__": [[359, 370], ["torch.Module.__init__", "resnet_generator_v1.ResnetGenerator64_nf", "resnet_generator_v1.ResnetGenerator64_nf", "resnet_generator_v1.ResBlock_1", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "background_cla", ",", "foreground_cla", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "background_foreground_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.background_g = ResnetGenerator128_nf(ch=64, z_dim=128, num_classes=background_cla)", "\n", "# self.foreground_g = ResnetGenerator128_nf(ch=64, z_dim=128, num_classes=foreground_cla)", "\n", "self", ".", "background_g", "=", "ResnetGenerator64_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "background_cla", ")", "\n", "self", ".", "foreground_g", "=", "ResnetGenerator64_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "foreground_cla", ")", "\n", "self", ".", "combination", "=", "ResBlock_1", "(", "64", "*", "2", ",", "64", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "64", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.background_foreground_generator.forward": [[371, 381], ["resnet_generator_v1.background_foreground_generator.background_g", "resnet_generator_v1.background_foreground_generator.foreground_g", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1.background_foreground_generator.combination", "resnet_generator_v1.background_foreground_generator.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "y_f", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        :params: z_f and z_g randam sample(noise) for fore-/background\n        \"\"\"", "\n", "background_feat", "=", "self", ".", "background_g", "(", "z_b", ",", "bbox_b", ",", "y", "=", "y_b", ")", "\n", "foreground_feat", "=", "self", ".", "foreground_g", "(", "z_f", ",", "bbox_f", ",", "y", "=", "y_f", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "background_feat", ",", "foreground_feat", ")", ",", "dim", "=", "1", ")", "\n", "feat", "=", "self", ".", "combination", "(", "feat", ")", "\n", "im", "=", "self", ".", "final", "(", "feat", ")", "\n", "return", "im", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1.conv2d": [[350, 356], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveInstanceNorm2d.__init__": [[9, 22], ["torch.Module.__init__", "norm_module_part.AdaptiveInstanceNorm2d.register_buffer", "norm_module_part.AdaptiveInstanceNorm2d.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "AdaptiveInstanceNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "# just dummy buffers, not used", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveInstanceNorm2d.forward": [[23, 38], ["norm_module_part.AdaptiveInstanceNorm2d.running_mean.repeat", "norm_module_part.AdaptiveInstanceNorm2d.running_var.repeat", "x.contiguous().view", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm.view", "x.size", "x.size", "norm_module_part.AdaptiveInstanceNorm2d.bias_proj().contiguous().view", "norm_module_part.AdaptiveInstanceNorm2d.weight_proj().contiguous().view", "x.contiguous", "norm_module_part.AdaptiveInstanceNorm2d.bias_proj().contiguous", "x.size", "x.size", "norm_module_part.AdaptiveInstanceNorm2d.weight_proj().contiguous", "norm_module_part.AdaptiveInstanceNorm2d.bias_proj", "norm_module_part.AdaptiveInstanceNorm2d.weight_proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "        ", "b", ",", "c", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", "\n", "running_mean", "=", "self", ".", "running_mean", ".", "repeat", "(", "b", ")", "\n", "running_var", "=", "self", ".", "running_var", ".", "repeat", "(", "b", ")", "\n", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "w", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "+", "1", ",", "self", ".", "bias_proj", "(", "w", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "# Apply instance norm", "\n", "x_reshaped", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "b", "*", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "out", "=", "F", ".", "batch_norm", "(", "\n", "x_reshaped", ",", "running_mean", ",", "running_var", ",", "weight", ",", "bias", ",", "\n", "True", ",", "self", ".", "momentum", ",", "self", ".", "eps", ")", "\n", "\n", "return", "out", ".", "view", "(", "b", ",", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveInstanceNorm2d.__repr__": [[39, 41], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveInstanceNorm2d.__init__": [[44, 57], ["torch.Module.__init__", "norm_module_part.SpatialAdaptiveInstanceNorm2d.register_buffer", "norm_module_part.SpatialAdaptiveInstanceNorm2d.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveInstanceNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "# just dummy buffers, not used", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveInstanceNorm2d.forward": [[58, 63], ["x.size", "norm_module_part.SpatialAdaptiveInstanceNorm2d.running_mean.repeat", "norm_module_part.SpatialAdaptiveInstanceNorm2d.running_var.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "running_mean", "=", "self", ".", "running_mean", ".", "repeat", "(", "b", ")", "\n", "running_var", "=", "self", ".", "running_var", ".", "repeat", "(", "b", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveBatchNorm2d.__init__": [[66, 73], ["torch.BatchNorm2d.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "AdaptiveBatchNorm2d", ",", "self", ")", ".", "__init__", "(", "\n", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", "\n", ")", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveBatchNorm2d.forward": [[74, 95], ["norm_module_part.AdaptiveBatchNorm2d._check_input_dim", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm.size", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand", "norm_module_part.AdaptiveBatchNorm2d.bias_proj", "norm_module_part.AdaptiveBatchNorm2d.weight_proj", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze", "norm_module_part.AdaptiveBatchNorm2d.num_batches_tracked.item", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "        ", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "exponential_average_factor", "=", "0.0", "\n", "if", "self", ".", "training", "and", "self", ".", "track_running_stats", ":", "\n", "            ", "self", ".", "num_batches_tracked", "+=", "1", "\n", "if", "self", ".", "momentum", "is", "None", ":", "# use cumulative moving average", "\n", "                ", "exponential_average_factor", "=", "1.0", "/", "self", ".", "num_batches_tracked", ".", "item", "(", ")", "\n", "", "else", ":", "# use exponential moving average", "\n", "                ", "exponential_average_factor", "=", "self", ".", "momentum", "\n", "\n", "", "", "output", "=", "F", ".", "batch_norm", "(", "x", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "\n", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "self", ".", "training", "or", "not", "self", ".", "track_running_stats", ",", "\n", "exponential_average_factor", ",", "self", ".", "eps", ")", "\n", "\n", "size", "=", "output", ".", "size", "(", ")", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "w", ")", "+", "1", ",", "self", ".", "bias_proj", "(", "w", ")", "\n", "weight", "=", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "size", ")", "\n", "bias", "=", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "size", ")", "\n", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.AdaptiveBatchNorm2d.__repr__": [[96, 98], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveBatchNorm2d.__init__": [[101, 109], ["torch.BatchNorm2d.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveBatchNorm2d", ",", "self", ")", ".", "__init__", "(", "\n", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", "\n", ")", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveBatchNorm2d.forward": [[110, 144], ["norm_module_part.SpatialAdaptiveBatchNorm2d._check_input_dim", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.interpolate.size", "x.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "norm_module_part.SpatialAdaptiveBatchNorm2d.weight_proj", "norm_module_part.SpatialAdaptiveBatchNorm2d.bias_proj", "weight.view", "bias.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "norm_module_part.SpatialAdaptiveBatchNorm2d.num_batches_tracked.item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.interpolate.unsqueeze", "bias.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "bias.unsqueeze", "weight.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["", "def", "forward", "(", "self", ",", "x", ",", "vector", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param x: input feature map (b, c, h, w)\n        :param vector: latent vector (b*o, dim_w)\n        :param bbox: bbox map (b, o, h, w)\n        :return:\n        \"\"\"", "\n", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "exponential_average_factor", "=", "0.0", "\n", "if", "self", ".", "training", "and", "self", ".", "track_running_stats", ":", "\n", "            ", "self", ".", "num_batches_tracked", "+=", "1", "\n", "if", "self", ".", "momentum", "is", "None", ":", "# use cumulative moving average", "\n", "                ", "exponential_average_factor", "=", "1.0", "/", "self", ".", "num_batches_tracked", ".", "item", "(", ")", "\n", "", "else", ":", "# use exponential moving average", "\n", "                ", "exponential_average_factor", "=", "self", ".", "momentum", "\n", "\n", "", "", "output", "=", "F", ".", "batch_norm", "(", "x", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "\n", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "self", ".", "training", "or", "not", "self", ".", "track_running_stats", ",", "\n", "exponential_average_factor", ",", "self", ".", "eps", ")", "\n", "\n", "b", ",", "o", ",", "_", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "bbox", "=", "F", ".", "interpolate", "(", "bbox", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "# calculate weight and bias", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "vector", ")", ",", "self", ".", "bias_proj", "(", "vector", ")", "\n", "\n", "weight", ",", "bias", "=", "weight", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "weight", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "bias", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveBatchNorm2d.__repr__": [[145, 147], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d.__init__": [[153, 162], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "batchnorm_func", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "batchnorm_func", "=", "SynchronizedBatchNorm2d", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveSynBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# projection layer", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "weight_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", ")", "\n", "self", ".", "batch_norm2d", "=", "batchnorm_func", "(", "num_features", ",", "eps", "=", "eps", ",", "momentum", "=", "momentum", ",", "\n", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d.forward": [[163, 187], ["norm_module_part.SpatialAdaptiveSynBatchNorm2d.batch_norm2d", "torch.interpolate.size", "x.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "norm_module_part.SpatialAdaptiveSynBatchNorm2d.weight_proj", "norm_module_part.SpatialAdaptiveSynBatchNorm2d.bias_proj", "weight.view", "bias.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.interpolate.unsqueeze", "bias.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "bias.unsqueeze", "weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "vector", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param x: input feature map (b, c, h, w)\n        :param vector: latent vector (b*o, dim_w)\n        :param bbox: bbox map (b, o, h, w)\n        :return:\n        \"\"\"", "\n", "# self._check_input_dim(x)", "\n", "output", "=", "self", ".", "batch_norm2d", "(", "x", ")", "\n", "\n", "b", ",", "o", ",", "bh", ",", "bw", "=", "bbox", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "if", "bh", "!=", "h", "or", "bw", "!=", "w", ":", "\n", "            ", "bbox", "=", "F", ".", "interpolate", "(", "bbox", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "# calculate weight and bias", "\n", "", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "vector", ")", ",", "self", ".", "bias_proj", "(", "vector", ")", "\n", "\n", "weight", ",", "bias", "=", "weight", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "weight", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "bias", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d.__repr__": [[188, 190], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "", "", "class", "SpatialAdaptiveSynBatchNorm2d_part", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.__init__": [[191, 200], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "batchnorm_func", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "batchnorm_func", "=", "SynchronizedBatchNorm2d", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveSynBatchNorm2d_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# projection layer", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "weight_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", "*", "3", ")", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", "*", "3", ")", ")", "\n", "self", ".", "batch_norm2d", "=", "batchnorm_func", "(", "num_features", ",", "eps", "=", "eps", ",", "momentum", "=", "momentum", ",", "\n", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.forward": [[201, 247], ["norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.batch_norm2d", "torch.interpolate.size", "x.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.weight_proj", "norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.bias_proj", "weight.view", "bias.view", "weight1.view", "bias1.view", "weight2.view", "bias2.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.interpolate.unsqueeze", "bias.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "bias1.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "bias2.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight1.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight2.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "bias.unsqueeze", "bias1.unsqueeze", "bias2.unsqueeze", "weight.unsqueeze", "weight1.unsqueeze", "weight2.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "vector", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "\"\"\"\n        :param x: input feature map (b, c, h, w)\n        :param vector: latent vector (b*o, dim_w)\n        :param bbox: bbox map (b, o, h, w)\n        :return:\n        \"\"\"", "\n", "# self._check_input_dim(x)", "\n", "#print(vector.shape)", "\n", "output", "=", "self", ".", "batch_norm2d", "(", "x", ")", "\n", "#print(output.shape)", "\n", "\n", "b", ",", "o", ",", "bh", ",", "bw", "=", "bbox", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "if", "bh", "!=", "h", "or", "bw", "!=", "w", ":", "\n", "            ", "bbox", "=", "F", ".", "interpolate", "(", "bbox", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "bbox1", "=", "F", ".", "interpolate", "(", "bbox1", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "bbox2", "=", "F", ".", "interpolate", "(", "bbox2", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "# calculate weight and bias", "\n", "", "weight_all", ",", "bias_all", "=", "self", ".", "weight_proj", "(", "vector", ")", ",", "self", ".", "bias_proj", "(", "vector", ")", "\n", "#print(weight_all.shape)", "\n", "#print(bias_all.shape)", "\n", "weight", ",", "bias", "=", "weight_all", "[", ":", ",", ":", "self", ".", "num_features", "]", ",", "bias_all", "[", ":", ",", ":", "self", ".", "num_features", "]", "\n", "weight1", ",", "bias1", "=", "weight_all", "[", ":", ",", "self", ".", "num_features", ":", "2", "*", "self", ".", "num_features", "]", ",", "bias_all", "[", ":", ",", "self", ".", "num_features", ":", "2", "*", "self", ".", "num_features", "]", "\n", "weight2", ",", "bias2", "=", "weight_all", "[", ":", ",", "2", "*", "self", ".", "num_features", ":", "]", ",", "bias_all", "[", ":", ",", "2", "*", "self", ".", "num_features", ":", "]", "\n", "\n", "weight", ",", "bias", "=", "weight", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "weight1", ",", "bias1", "=", "weight1", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias1", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "weight2", ",", "bias2", "=", "weight2", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias2", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "weight", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "weight1", "=", "torch", ".", "sum", "(", "bbox1", ".", "unsqueeze", "(", "2", ")", "*", "weight1", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox1", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "weight2", "=", "torch", ".", "sum", "(", "bbox2", ".", "unsqueeze", "(", "2", ")", "*", "weight2", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox2", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "#print(weight.shape)", "\n", "#print(weight1.shape)", "\n", "bias", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "bias1", "=", "torch", ".", "sum", "(", "bbox1", ".", "unsqueeze", "(", "2", ")", "*", "bias1", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox1", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "bias2", "=", "torch", ".", "sum", "(", "bbox2", ".", "unsqueeze", "(", "2", ")", "*", "bias2", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox2", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "#print(bias.shape)", "\n", "return", "(", "weight", "*", "output", "+", "bias", ")", "+", "(", "weight1", "*", "output", "+", "bias1", ")", "+", "(", "weight2", "*", "output", "+", "bias2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module_part.SpatialAdaptiveSynBatchNorm2d_part.__repr__": [[248, 250], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.BoxMultiHeadedAttention.__init__": [[127, 153], ["torch.Module.__init__", "resnet_generator_context.clones", "resnet_generator_context.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "# matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.BoxMultiHeadedAttention.forward": [[154, 213], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "resnet_generator_context.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "resnet_generator_context.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "resnet_generator_context.BoxMultiHeadedAttention.layer_norm0", "resnet_generator_context.BoxMultiHeadedAttention.dropout", "resnet_generator_context.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "# if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "# tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "# print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "# print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "# if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "# print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ScaledDotProductAttention.__init__": [[218, 223], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ScaledDotProductAttention.forward": [[224, 242], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "resnet_generator_context.ScaledDotProductAttention.softmax", "resnet_generator_context.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.MultiHeadAttention.__init__": [[247, 267], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "resnet_generator_context.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "np.sqrt", "np.sqrt", "np.sqrt", "np.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.MultiHeadAttention.forward": [[268, 295], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "resnet_generator_context.MultiHeadAttention.w_qs().view", "resnet_generator_context.MultiHeadAttention.w_ks().view", "resnet_generator_context.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "resnet_generator_context.MultiHeadAttention.attention", "resnet_generator_context.MultiHeadAttention.view", "resnet_generator_context.MultiHeadAttention.permute().contiguous().view", "resnet_generator_context.MultiHeadAttention.layer_norm0", "resnet_generator_context.MultiHeadAttention.dropout", "resnet_generator_context.MultiHeadAttention.layer_norm", "resnet_generator_context.MultiHeadAttention.fc", "resnet_generator_context.MultiHeadAttention.w_qs", "resnet_generator_context.MultiHeadAttention.w_ks", "resnet_generator_context.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "resnet_generator_context.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "resnet_generator_context.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128.__init__": [[298, 323], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_context.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_context.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128.forward": [[324, 363], ["print", "z.view.view.view", "resnet_generator_context.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_context.ResnetGenerator128.mapping", "resnet_generator_context.ResnetGenerator128.mask_regress", "resnet_generator_context.ResnetGenerator128.fc().view", "resnet_generator_context.ResnetGenerator128.res1", "resnet_generator_context.ResnetGenerator128.res2", "resnet_generator_context.ResnetGenerator128.res3", "resnet_generator_context.ResnetGenerator128.res4", "resnet_generator_context.ResnetGenerator128.res5", "resnet_generator_context.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_context.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "print", "(", "y", ".", "shape", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128.init_parameter": [[364, 370], ["resnet_generator_context.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128_nf.__init__": [[373, 394], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_context.ResnetGenerator128_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "# print(self.mapping)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128_nf.forward": [[396, 436], ["z.view.view.view", "resnet_generator_context.ResnetGenerator128_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_context.ResnetGenerator128_nf.mapping", "resnet_generator_context.ResnetGenerator128_nf.mask_regress", "resnet_generator_context.ResnetGenerator128_nf.fc().view", "resnet_generator_context.ResnetGenerator128_nf.res1", "resnet_generator_context.ResnetGenerator128_nf.res2", "resnet_generator_context.ResnetGenerator128_nf.res3", "resnet_generator_context.ResnetGenerator128_nf.res4", "resnet_generator_context.ResnetGenerator128_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.ResnetGenerator128_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_context.ResnetGenerator128_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.ResnetGenerator128_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator128_nf.init_parameter": [[437, 443], ["resnet_generator_context.ResnetGenerator128_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator64.__init__": [[445, 470], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_context.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_context.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator64.forward": [[471, 499], ["resnet_generator_context.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_context.ResnetGenerator64.mapping", "resnet_generator_context.ResnetGenerator64.mask_regress", "resnet_generator_context.ResnetGenerator64.fc().view", "resnet_generator_context.ResnetGenerator64.res2", "resnet_generator_context.ResnetGenerator64.res3", "resnet_generator_context.ResnetGenerator64.res4", "resnet_generator_context.ResnetGenerator64.res5", "resnet_generator_context.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResnetGenerator64.init_parameter": [[500, 506], ["resnet_generator_context.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "", "", "", "", "class", "ResBlock", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock.__init__": [[507, 519], ["torch.Module.__init__", "resnet_generator_context.conv2d", "resnet_generator_context.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_context.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock.residual": [[520, 531], ["resnet_generator_context.ResBlock.b1", "resnet_generator_context.ResBlock.activation", "resnet_generator_context.ResBlock.conv1", "resnet_generator_context.ResBlock.b2", "resnet_generator_context.ResBlock.activation", "resnet_generator_context.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock.shortcut": [[532, 538], ["resnet_generator_context.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock.forward": [[539, 541], ["resnet_generator_context.ResBlock.residual", "resnet_generator_context.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock_1.__init__": [[544, 562], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "ResBlock_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "SynchronizedBatchNorm2d", "(", "in_ch", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv1", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv2", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv3", ".", "weight", ".", "data", ",", "1.", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "SynchronizedBatchNorm2d", "(", "in_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv1", ",", "\n", "SynchronizedBatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.ResBlock_1.forward": [[564, 567], ["resnet_generator_context.ResBlock_1.model", "resnet_generator_context.ResBlock_1.conv3", "resnet_generator_context.ResBlock_1.relu", "resnet_generator_context.ResBlock_1.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "+", "(", "self", ".", "conv3", "(", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.background_foreground_generator.__init__": [[578, 587], ["torch.Module.__init__", "resnet_generator_context.ResnetGenerator128_nf", "resnet_generator_context.ResnetGenerator128_nf", "resnet_generator_context.ResBlock_1", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_context.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "background_cla", ",", "foreground_cla", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "background_foreground_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "background_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "background_cla", ")", "\n", "self", ".", "foreground_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "foreground_cla", ")", "\n", "self", ".", "combination", "=", "ResBlock_1", "(", "64", "*", "2", ",", "64", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "64", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.background_foreground_generator.forward": [[588, 595], ["resnet_generator_context.background_foreground_generator.background_g", "resnet_generator_context.background_foreground_generator.foreground_g", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.background_foreground_generator.combination", "resnet_generator_context.background_foreground_generator.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "z_im_f", "=", "None", ",", "y_f", "=", "None", ",", "z_im_b", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n", "        ", "background_feat", "=", "self", ".", "background_g", "(", "z_b", ",", "bbox_b", ",", "z_im", "=", "z_im_b", ",", "y", "=", "y_b", ")", "\n", "foreground_feat", "=", "self", ".", "foreground_g", "(", "z_f", ",", "bbox_f", ",", "z_im", "=", "z_im_f", ",", "y", "=", "y_f", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "background_feat", ",", "foreground_feat", ")", ",", "dim", "=", "1", ")", "\n", "feat", "=", "self", ".", "combination", "(", "feat", ")", "\n", "im", "=", "self", ".", "final", "(", "feat", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.context_aware_generator.__init__": [[598, 625], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_context.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "resnet_generator_context.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_context.context_aware_generator.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_context.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.context_aware_generator.forward": [[626, 675], ["z.view.view.view", "resnet_generator_context.context_aware_generator.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_context.context_aware_generator.mapping().view", "resnet_generator_context.context_aware_generator.context", "w.view.view.view", "resnet_generator_context.context_aware_generator.mask_regress", "resnet_generator_context.context_aware_generator.fc().view", "resnet_generator_context.context_aware_generator.res1", "resnet_generator_context.context_aware_generator.res2", "resnet_generator_context.context_aware_generator.res3", "resnet_generator_context.context_aware_generator.res4", "resnet_generator_context.context_aware_generator.res5", "resnet_generator_context.context_aware_generator.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.context_aware_generator.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_context.context_aware_generator.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_context.context_aware_generator.mapping", "resnet_generator_context.context_aware_generator.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "# print(z.shape)", "\n", "# print(bbox.shape)", "\n", "# print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# context aware w", "\n", "# print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "# print(bbox.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.context_aware_generator.init_parameter": [[676, 682], ["resnet_generator_context.context_aware_generator.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.clones": [[10, 13], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.BoxRelationalEmbedding": [[15, 75], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "# returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "# follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "# cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.box_attention": [[77, 119], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "np.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.log", "torch.log", "torch.log", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "torch.clamp", "torch.clamp", "torch.clamp", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "# print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "# print(w_q.shape)", "\n", "# print(w_k.shape)", "\n", "# attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "# print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "# print(w_g.shape)", "\n", "# print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "w_mn", "=", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "w_g", ",", "min", "=", "1e-6", ")", ")", "+", "w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_context.conv2d": [[569, 575], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator64.__init__": [[10, 35], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1_orig.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_orig.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator64.forward": [[36, 64], ["resnet_generator_v1_orig.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1_orig.ResnetGenerator64.mapping", "resnet_generator_v1_orig.ResnetGenerator64.mask_regress", "resnet_generator_v1_orig.ResnetGenerator64.fc().view", "resnet_generator_v1_orig.ResnetGenerator64.res2", "resnet_generator_v1_orig.ResnetGenerator64.res3", "resnet_generator_v1_orig.ResnetGenerator64.res4", "resnet_generator_v1_orig.ResnetGenerator64.res5", "resnet_generator_v1_orig.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_orig.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator64.init_parameter": [[65, 71], ["resnet_generator_v1_orig.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator128.__init__": [[74, 99], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "resnet_generator_v1_orig.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_v1_orig.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_orig.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator128.forward": [[100, 138], ["z.view.view.view", "resnet_generator_v1_orig.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v1_orig.ResnetGenerator128.mapping", "resnet_generator_v1_orig.ResnetGenerator128.mask_regress", "resnet_generator_v1_orig.ResnetGenerator128.fc().view", "resnet_generator_v1_orig.ResnetGenerator128.res1", "resnet_generator_v1_orig.ResnetGenerator128.res2", "resnet_generator_v1_orig.ResnetGenerator128.res3", "resnet_generator_v1_orig.ResnetGenerator128.res4", "resnet_generator_v1_orig.ResnetGenerator128.res5", "resnet_generator_v1_orig.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_orig.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v1_orig.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v1_orig.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResnetGenerator128.init_parameter": [[139, 145], ["resnet_generator_v1_orig.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResBlock.__init__": [[148, 160], ["torch.Module.__init__", "resnet_generator_v1_orig.conv2d", "resnet_generator_v1_orig.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v1_orig.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResBlock.residual": [[161, 172], ["resnet_generator_v1_orig.ResBlock.b1", "resnet_generator_v1_orig.ResBlock.activation", "resnet_generator_v1_orig.ResBlock.conv1", "resnet_generator_v1_orig.ResBlock.b2", "resnet_generator_v1_orig.ResBlock.activation", "resnet_generator_v1_orig.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResBlock.shortcut": [[173, 179], ["resnet_generator_v1_orig.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.ResBlock.forward": [[180, 182], ["resnet_generator_v1_orig.ResBlock.residual", "resnet_generator_v1_orig.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v1_orig.conv2d": [[184, 190], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNet.__init__": [[12, 37], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj_feat", "=", "128", ",", "mask_size", "=", "16", ",", "map_size", "=", "64", ")", ":", "\n", "        ", "super", "(", "MaskRegressNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "obj_feat", ",", "128", "*", "4", "*", "4", ")", ")", "\n", "conv1", "=", "list", "(", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv1", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "conv1", ")", "\n", "\n", "conv2", "=", "list", "(", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv2", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "conv2", ")", "\n", "\n", "conv3", "=", "list", "(", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "*", "conv3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNet.forward": [[38, 56], ["bbox.size", "obj_feat.view.view.view", "mask_regression_part.MaskRegressNet.fc", "mask_regression_part.MaskRegressNet.conv1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNet.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNet.conv3", "x.view.view.view", "masks_to_layout().view", "x.view.view.view", "masks_to_layout"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout"], ["", "def", "forward", "(", "self", ",", "obj_feat", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param obj_feat: (b*num_o, feat_dim)\n        :param bbox: (b, num_o, 4)\n        :return: bbmap: (b, num_o, map_size, map_size)\n        \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "obj_feat", "=", "obj_feat", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "obj_feat", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ".", "view", "(", "b", "*", "num_o", ",", "128", ",", "4", ",", "4", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "8", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "16", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "\n", "bbmap", "=", "masks_to_layout", "(", "bbox", ",", "x", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "return", "bbmap", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNet_part.__init__": [[58, 84], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj_feat", "=", "128", ",", "mask_size", "=", "16", ",", "map_size", "=", "64", ")", ":", "\n", "        ", "super", "(", "MaskRegressNet_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "obj_feat", ",", "128", "*", "4", "*", "4", ")", ")", "\n", "conv1", "=", "list", "(", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv1", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "conv1", ")", "\n", "\n", "conv2", "=", "list", "(", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv2", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "conv2", ")", "\n", "\n", "conv3", "=", "list", "(", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "SynchronizedBatchNorm2d", "(", "128", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "####number of parts=3", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "128", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "*", "conv3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNet_part.forward": [[85, 111], ["bbox.size", "obj_feat.view.view.view", "mask_regression_part.MaskRegressNet_part.fc", "mask_regression_part.MaskRegressNet_part.conv1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNet_part.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNet_part.conv3", "mask1.view", "mask2.view", "mask3.view", "masks_to_layout().view", "masks_to_layout().view", "masks_to_layout().view", "mask_regression_part.MaskRegressNet_part.view", "masks_to_layout", "masks_to_layout", "masks_to_layout"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout", "home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout"], ["", "def", "forward", "(", "self", ",", "obj_feat", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param obj_feat: (b*num_o, feat_dim)\n        :param bbox: (b, num_o, 4)\n        :return: bbmap: (b, num_o, map_size, map_size)\n        \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "obj_feat", "=", "obj_feat", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "obj_feat", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ".", "view", "(", "b", "*", "num_o", ",", "128", ",", "4", ",", "4", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "8", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "16", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "mask1", "=", "x", "[", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "mask2", "=", "x", "[", ":", ",", "1", ",", ":", ",", ":", "]", "\n", "mask3", "=", "x", "[", ":", ",", "2", ",", ":", ",", ":", "]", "\n", "#print(x.shape)", "\n", "x1", "=", "mask1", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "x2", "=", "mask2", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "x3", "=", "mask3", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "\n", "bbmap1", "=", "masks_to_layout", "(", "bbox", ",", "x1", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "bbmap2", "=", "masks_to_layout", "(", "bbox", ",", "x2", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "bbmap3", "=", "masks_to_layout", "(", "bbox", ",", "x3", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "return", "bbmap1", ",", "bbmap2", ",", "bbmap3", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNetv2.__init__": [[114, 139], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "obj_feat", "=", "128", ",", "mask_size", "=", "16", ",", "map_size", "=", "64", ")", ":", "\n", "        ", "super", "(", "MaskRegressNetv2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "map_size", "=", "map_size", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "obj_feat", ",", "256", "*", "4", "*", "4", ")", ")", "\n", "conv1", "=", "list", "(", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv1", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "*", "conv1", ")", "\n", "\n", "conv2", "=", "list", "(", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv2", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "*", "conv2", ")", "\n", "\n", "conv3", "=", "list", "(", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "InstanceNorm2d", "(", "256", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ")", ")", "\n", "conv3", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "*", "conv3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.mask_regression_part.MaskRegressNetv2.forward": [[140, 158], ["bbox.size", "obj_feat.view.view.view", "mask_regression_part.MaskRegressNetv2.fc", "mask_regression_part.MaskRegressNetv2.conv1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNetv2.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "mask_regression_part.MaskRegressNetv2.conv3", "x.view.view.view", "masks_to_layout().view", "x.view.view.view", "masks_to_layout"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model_layout2img.layout.masks_to_layout"], ["", "def", "forward", "(", "self", ",", "obj_feat", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param obj_feat: (b*num_o, feat_dim)\n        :param bbox: (b, num_o, 4)\n        :return: bbmap: (b, num_o, map_size, map_size)\n        \"\"\"", "\n", "b", ",", "num_o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "obj_feat", "=", "obj_feat", ".", "view", "(", "b", "*", "num_o", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "obj_feat", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ".", "view", "(", "b", "*", "num_o", ",", "256", ",", "4", ",", "4", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "8", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "16", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "b", ",", "num_o", ",", "16", ",", "16", ")", "\n", "\n", "bbmap", "=", "masks_to_layout", "(", "bbox", ",", "x", ",", "self", ".", "map_size", ")", ".", "view", "(", "b", ",", "num_o", ",", "self", ".", "map_size", ",", "self", ".", "map_size", ")", "\n", "return", "bbmap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveInstanceNorm2d.__init__": [[9, 22], ["torch.Module.__init__", "norm_module.AdaptiveInstanceNorm2d.register_buffer", "norm_module.AdaptiveInstanceNorm2d.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "AdaptiveInstanceNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "# just dummy buffers, not used", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveInstanceNorm2d.forward": [[23, 38], ["norm_module.AdaptiveInstanceNorm2d.running_mean.repeat", "norm_module.AdaptiveInstanceNorm2d.running_var.repeat", "x.contiguous().view", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm.view", "x.size", "x.size", "norm_module.AdaptiveInstanceNorm2d.bias_proj().contiguous().view", "norm_module.AdaptiveInstanceNorm2d.weight_proj().contiguous().view", "x.contiguous", "norm_module.AdaptiveInstanceNorm2d.bias_proj().contiguous", "x.size", "x.size", "norm_module.AdaptiveInstanceNorm2d.weight_proj().contiguous", "norm_module.AdaptiveInstanceNorm2d.bias_proj", "norm_module.AdaptiveInstanceNorm2d.weight_proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "        ", "b", ",", "c", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", "\n", "running_mean", "=", "self", ".", "running_mean", ".", "repeat", "(", "b", ")", "\n", "running_var", "=", "self", ".", "running_var", ".", "repeat", "(", "b", ")", "\n", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "w", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "+", "1", ",", "self", ".", "bias_proj", "(", "w", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "# Apply instance norm", "\n", "x_reshaped", "=", "x", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "b", "*", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n", "out", "=", "F", ".", "batch_norm", "(", "\n", "x_reshaped", ",", "running_mean", ",", "running_var", ",", "weight", ",", "bias", ",", "\n", "True", ",", "self", ".", "momentum", ",", "self", ".", "eps", ")", "\n", "\n", "return", "out", ".", "view", "(", "b", ",", "c", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveInstanceNorm2d.__repr__": [[39, 41], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveInstanceNorm2d.__init__": [[44, 57], ["torch.Module.__init__", "norm_module.SpatialAdaptiveInstanceNorm2d.register_buffer", "norm_module.SpatialAdaptiveInstanceNorm2d.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveInstanceNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "# just dummy buffers, not used", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveInstanceNorm2d.forward": [[58, 63], ["x.size", "norm_module.SpatialAdaptiveInstanceNorm2d.running_mean.repeat", "norm_module.SpatialAdaptiveInstanceNorm2d.running_var.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "running_mean", "=", "self", ".", "running_mean", ".", "repeat", "(", "b", ")", "\n", "running_var", "=", "self", ".", "running_var", ".", "repeat", "(", "b", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveBatchNorm2d.__init__": [[66, 73], ["torch.BatchNorm2d.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "AdaptiveBatchNorm2d", ",", "self", ")", ".", "__init__", "(", "\n", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", "\n", ")", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveBatchNorm2d.forward": [[74, 95], ["norm_module.AdaptiveBatchNorm2d._check_input_dim", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm.size", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand", "norm_module.AdaptiveBatchNorm2d.bias_proj", "norm_module.AdaptiveBatchNorm2d.weight_proj", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze", "norm_module.AdaptiveBatchNorm2d.num_batches_tracked.item", "weight.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze", "bias.unsqueeze().unsqueeze().expand.unsqueeze().unsqueeze().expand.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "        ", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "exponential_average_factor", "=", "0.0", "\n", "if", "self", ".", "training", "and", "self", ".", "track_running_stats", ":", "\n", "            ", "self", ".", "num_batches_tracked", "+=", "1", "\n", "if", "self", ".", "momentum", "is", "None", ":", "# use cumulative moving average", "\n", "                ", "exponential_average_factor", "=", "1.0", "/", "self", ".", "num_batches_tracked", ".", "item", "(", ")", "\n", "", "else", ":", "# use exponential moving average", "\n", "                ", "exponential_average_factor", "=", "self", ".", "momentum", "\n", "\n", "", "", "output", "=", "F", ".", "batch_norm", "(", "x", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "\n", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "self", ".", "training", "or", "not", "self", ".", "track_running_stats", ",", "\n", "exponential_average_factor", ",", "self", ".", "eps", ")", "\n", "\n", "size", "=", "output", ".", "size", "(", ")", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "w", ")", "+", "1", ",", "self", ".", "bias_proj", "(", "w", ")", "\n", "weight", "=", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "size", ")", "\n", "bias", "=", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand", "(", "size", ")", "\n", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.AdaptiveBatchNorm2d.__repr__": [[96, 98], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveBatchNorm2d.__init__": [[101, 109], ["torch.BatchNorm2d.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveBatchNorm2d", ",", "self", ")", ".", "__init__", "(", "\n", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", "\n", ")", "\n", "# projection layer", "\n", "self", ".", "weight_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveBatchNorm2d.forward": [[110, 144], ["norm_module.SpatialAdaptiveBatchNorm2d._check_input_dim", "torch.batch_norm", "torch.batch_norm", "torch.batch_norm", "torch.interpolate.size", "x.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "norm_module.SpatialAdaptiveBatchNorm2d.weight_proj", "norm_module.SpatialAdaptiveBatchNorm2d.bias_proj", "weight.view", "bias.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "norm_module.SpatialAdaptiveBatchNorm2d.num_batches_tracked.item", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.interpolate.unsqueeze", "bias.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "bias.unsqueeze", "weight.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["", "def", "forward", "(", "self", ",", "x", ",", "vector", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param x: input feature map (b, c, h, w)\n        :param vector: latent vector (b*o, dim_w)\n        :param bbox: bbox map (b, o, h, w)\n        :return:\n        \"\"\"", "\n", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "exponential_average_factor", "=", "0.0", "\n", "if", "self", ".", "training", "and", "self", ".", "track_running_stats", ":", "\n", "            ", "self", ".", "num_batches_tracked", "+=", "1", "\n", "if", "self", ".", "momentum", "is", "None", ":", "# use cumulative moving average", "\n", "                ", "exponential_average_factor", "=", "1.0", "/", "self", ".", "num_batches_tracked", ".", "item", "(", ")", "\n", "", "else", ":", "# use exponential moving average", "\n", "                ", "exponential_average_factor", "=", "self", ".", "momentum", "\n", "\n", "", "", "output", "=", "F", ".", "batch_norm", "(", "x", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "\n", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "self", ".", "training", "or", "not", "self", ".", "track_running_stats", ",", "\n", "exponential_average_factor", ",", "self", ".", "eps", ")", "\n", "\n", "b", ",", "o", ",", "_", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "bbox", "=", "F", ".", "interpolate", "(", "bbox", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "# calculate weight and bias", "\n", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "vector", ")", ",", "self", ".", "bias_proj", "(", "vector", ")", "\n", "\n", "weight", ",", "bias", "=", "weight", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "weight", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "bias", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveBatchNorm2d.__repr__": [[145, 147], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveSynBatchNorm2d.__init__": [[153, 162], ["torch.Module.__init__", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "batchnorm_func", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "num_w", "=", "512", ",", "batchnorm_func", "=", "SynchronizedBatchNorm2d", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "False", ",", "\n", "track_running_stats", "=", "True", ")", ":", "\n", "        ", "super", "(", "SpatialAdaptiveSynBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# projection layer", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "weight_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", ")", "\n", "self", ".", "bias_proj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "num_w", ",", "num_features", ")", ")", "\n", "self", ".", "batch_norm2d", "=", "batchnorm_func", "(", "num_features", ",", "eps", "=", "eps", ",", "momentum", "=", "momentum", ",", "\n", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveSynBatchNorm2d.forward": [[163, 187], ["norm_module.SpatialAdaptiveSynBatchNorm2d.batch_norm2d", "torch.interpolate.size", "x.size", "torch.interpolate", "torch.interpolate", "torch.interpolate", "norm_module.SpatialAdaptiveSynBatchNorm2d.weight_proj", "norm_module.SpatialAdaptiveSynBatchNorm2d.bias_proj", "weight.view", "bias.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.interpolate.unsqueeze", "bias.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "torch.interpolate.unsqueeze", "weight.unsqueeze().unsqueeze", "torch.interpolate.unsqueeze", "bias.unsqueeze", "weight.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "vector", ",", "bbox", ")", ":", "\n", "        ", "\"\"\"\n        :param x: input feature map (b, c, h, w)\n        :param vector: latent vector (b*o, dim_w)\n        :param bbox: bbox map (b, o, h, w)\n        :return:\n        \"\"\"", "\n", "# self._check_input_dim(x)", "\n", "output", "=", "self", ".", "batch_norm2d", "(", "x", ")", "\n", "\n", "b", ",", "o", ",", "bh", ",", "bw", "=", "bbox", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "if", "bh", "!=", "h", "or", "bw", "!=", "w", ":", "\n", "            ", "bbox", "=", "F", ".", "interpolate", "(", "bbox", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "# calculate weight and bias", "\n", "", "weight", ",", "bias", "=", "self", ".", "weight_proj", "(", "vector", ")", ",", "self", ".", "bias_proj", "(", "vector", ")", "\n", "\n", "weight", ",", "bias", "=", "weight", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", ",", "bias", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "weight", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "weight", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "+", "1", "\n", "bias", "=", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", "*", "bias", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "/", "(", "torch", ".", "sum", "(", "bbox", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "False", ")", "+", "1e-6", ")", "\n", "return", "weight", "*", "output", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.norm_module.SpatialAdaptiveSynBatchNorm2d.__repr__": [[188, 190], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "str", "(", "self", ".", "num_features", ")", "+", "')'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.BoxMultiHeadedAttention.__init__": [[129, 155], ["torch.Module.__init__", "resnet_generator_app_v2.clones", "resnet_generator_app_v2.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "# matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.BoxMultiHeadedAttention.forward": [[156, 215], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "resnet_generator_app_v2.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "resnet_generator_app_v2.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "resnet_generator_app_v2.BoxMultiHeadedAttention.layer_norm0", "resnet_generator_app_v2.BoxMultiHeadedAttention.dropout", "resnet_generator_app_v2.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "# if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "# tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "# print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "# print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "# if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "# print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ScaledDotProductAttention.__init__": [[220, 225], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ScaledDotProductAttention.forward": [[226, 244], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "resnet_generator_app_v2.ScaledDotProductAttention.softmax", "resnet_generator_app_v2.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.MultiHeadAttention.__init__": [[249, 269], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "resnet_generator_app_v2.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "np.sqrt", "np.sqrt", "np.sqrt", "np.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.MultiHeadAttention.forward": [[270, 297], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "resnet_generator_app_v2.MultiHeadAttention.w_qs().view", "resnet_generator_app_v2.MultiHeadAttention.w_ks().view", "resnet_generator_app_v2.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "resnet_generator_app_v2.MultiHeadAttention.attention", "resnet_generator_app_v2.MultiHeadAttention.view", "resnet_generator_app_v2.MultiHeadAttention.permute().contiguous().view", "resnet_generator_app_v2.MultiHeadAttention.layer_norm0", "resnet_generator_app_v2.MultiHeadAttention.dropout", "resnet_generator_app_v2.MultiHeadAttention.layer_norm", "resnet_generator_app_v2.MultiHeadAttention.fc", "resnet_generator_app_v2.MultiHeadAttention.w_qs", "resnet_generator_app_v2.MultiHeadAttention.w_ks", "resnet_generator_app_v2.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "resnet_generator_app_v2.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "resnet_generator_app_v2.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128.__init__": [[300, 332], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "mask_regression.MaskRegressNetv2", "resnet_generator_app_v2.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_app_v2.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "psp_module", "=", "True", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "predict_mask", "=", "False", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "BatchNorm", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "alpha1", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha3", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha4", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNetv2", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128.forward": [[333, 391], ["resnet_generator_app_v2.ResnetGenerator128.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_app_v2.ResnetGenerator128.mapping", "resnet_generator_app_v2.ResnetGenerator128.mask_regress", "resnet_generator_app_v2.bbox_mask", "resnet_generator_app_v2.ResnetGenerator128.fc().view", "resnet_generator_app_v2.ResnetGenerator128.res1", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128.res2", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128.res3", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128.res4", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128.res5", "resnet_generator_app_v2.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_app_v2.ResnetGenerator128.size", "resnet_generator_app_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128.size", "resnet_generator_app_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128.size", "resnet_generator_app_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128.size", "resnet_generator_app_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_app_v2.ResnetGenerator128.fc", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128.sigmoid().expand", "y.view", "y.view", "y.view", "y.view", "resnet_generator_app_v2.ResnetGenerator128.sigmoid", "resnet_generator_app_v2.ResnetGenerator128.sigmoid", "resnet_generator_app_v2.ResnetGenerator128.sigmoid", "resnet_generator_app_v2.ResnetGenerator128.sigmoid"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bmask", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "", "bbox_mask_", "=", "bbox_mask", "(", "z", ",", "bbox", ",", "64", ",", "64", ")", "\n", "\n", "# 4x4", "\n", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", ",", "stage_mask", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bmask", ")", "\n", "\n", "# 16x16", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha1", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha1", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha1", ")", "+", "seman_bbox", "*", "alpha1", "\n", "x", ",", "stage_mask", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 32x32", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha2", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha2", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha2", ")", "+", "seman_bbox", "*", "alpha2", "\n", "x", ",", "stage_mask", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 64x64", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha3", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha3", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha3", ")", "+", "seman_bbox", "*", "alpha3", "\n", "x", ",", "stage_mask", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 128x128", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha4", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha4", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha4", ")", "+", "seman_bbox", "*", "alpha4", "\n", "x", ",", "_", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128.init_parameter": [[392, 398], ["resnet_generator_app_v2.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128_context.__init__": [[401, 434], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_app_v2.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "mask_regression.MaskRegressNetv2", "resnet_generator_app_v2.ResnetGenerator128_context.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_app_v2.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_context", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "psp_module", "=", "True", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "predict_mask", "=", "False", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "BatchNorm", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "alpha1", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha3", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha4", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNetv2", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128_context.forward": [[435, 500], ["resnet_generator_app_v2.ResnetGenerator128_context.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_app_v2.ResnetGenerator128_context.mapping().view", "resnet_generator_app_v2.ResnetGenerator128_context.context", "w.view.view.view", "resnet_generator_app_v2.ResnetGenerator128_context.mask_regress", "resnet_generator_app_v2.bbox_mask", "resnet_generator_app_v2.ResnetGenerator128_context.fc().view", "resnet_generator_app_v2.ResnetGenerator128_context.res1", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128_context.res2", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128_context.res3", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128_context.res4", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator128_context.res5", "resnet_generator_app_v2.ResnetGenerator128_context.final", "z.view.view.size", "z.view.view.size", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_app_v2.ResnetGenerator128_context.size", "resnet_generator_app_v2.ResnetGenerator128_context.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128_context.size", "resnet_generator_app_v2.ResnetGenerator128_context.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128_context.size", "resnet_generator_app_v2.ResnetGenerator128_context.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator128_context.size", "resnet_generator_app_v2.ResnetGenerator128_context.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_app_v2.ResnetGenerator128_context.mapping", "resnet_generator_app_v2.ResnetGenerator128_context.fc", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid().expand", "y.view", "y.view", "y.view", "y.view", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid", "resnet_generator_app_v2.ResnetGenerator128_context.sigmoid"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "\n", "# context transformation", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bmask", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "", "bbox_mask_", "=", "bbox_mask", "(", "z", ",", "bbox", ",", "64", ",", "64", ")", "\n", "\n", "# 4x4", "\n", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", ",", "stage_mask", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bmask", ")", "\n", "\n", "# 16x16", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha1", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha1", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha1", ")", "+", "seman_bbox", "*", "alpha1", "\n", "x", ",", "stage_mask", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 32x32", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha2", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha2", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha2", ")", "+", "seman_bbox", "*", "alpha2", "\n", "x", ",", "stage_mask", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 64x64", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha3", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha3", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha3", ")", "+", "seman_bbox", "*", "alpha3", "\n", "x", ",", "stage_mask", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 128x128", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha4", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha4", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha4", ")", "+", "seman_bbox", "*", "alpha4", "\n", "x", ",", "_", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator128_context.init_parameter": [[501, 507], ["resnet_generator_app_v2.ResnetGenerator128_context.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator256.__init__": [[510, 543], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "resnet_generator_app_v2.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "mask_regression.MaskRegressNetv2", "resnet_generator_app_v2.ResnetGenerator256.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_app_v2.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res6", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "predict_mask", "=", "False", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "BatchNorm", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "alpha1", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha3", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha4", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha5", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNetv2", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator256.forward": [[544, 619], ["resnet_generator_app_v2.ResnetGenerator256.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_app_v2.ResnetGenerator256.mapping", "resnet_generator_app_v2.ResnetGenerator256.mask_regress", "resnet_generator_app_v2.bbox_mask", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_app_v2.ResnetGenerator256.mapping", "resnet_generator_app_v2.ResnetGenerator256.fc().view", "resnet_generator_app_v2.ResnetGenerator256.res1", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator256.res2", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator256.res3", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator256.res4", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator256.res5", "resnet_generator_app_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_app_v2.ResnetGenerator256.res6", "resnet_generator_app_v2.ResnetGenerator256.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "resnet_generator_app_v2.ResnetGenerator256.size", "resnet_generator_app_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator256.size", "resnet_generator_app_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator256.size", "resnet_generator_app_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator256.size", "resnet_generator_app_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator256.size", "resnet_generator_app_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_app_v2.ResnetGenerator256.fc", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_app_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_app_v2.ResnetGenerator256.sigmoid().expand", "y.view", "y.view", "y.view", "y.view", "y.view", "resnet_generator_app_v2.ResnetGenerator256.sigmoid", "resnet_generator_app_v2.ResnetGenerator256.sigmoid", "resnet_generator_app_v2.ResnetGenerator256.sigmoid", "resnet_generator_app_v2.ResnetGenerator256.sigmoid", "resnet_generator_app_v2.ResnetGenerator256.sigmoid"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ",", "include_mask_loss", "=", "False", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# preprocess bbox", "\n", "bmask", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "", "bbox_mask_", "=", "bbox_mask", "(", "z", ",", "bbox", ",", "128", ",", "128", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# 4x4", "\n", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "# label mask", "\n", "x", ",", "stage_mask", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bmask", ")", "\n", "\n", "# 16x16", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha1", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha1", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha1", ")", "+", "seman_bbox", "*", "alpha1", "\n", "x", ",", "stage_mask", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 32x32", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha2", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha2", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha2", ")", "+", "seman_bbox", "*", "alpha2", "\n", "x", ",", "stage_mask", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 64x64", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha3", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha3", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha3", ")", "+", "seman_bbox", "*", "alpha3", "\n", "x", ",", "stage_mask", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 128x128", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha4", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha4", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha4", ")", "+", "seman_bbox", "*", "alpha4", "\n", "x", ",", "stage_mask", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 256x256", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha5", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha5", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha5", ")", "+", "seman_bbox", "*", "alpha5", "\n", "x", ",", "_", "=", "self", ".", "res6", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResnetGenerator256.init_parameter": [[620, 626], ["resnet_generator_app_v2.ResnetGenerator256.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResBlock.__init__": [[629, 652], ["torch.Module.__init__", "resnet_generator_app_v2.conv2d", "resnet_generator_app_v2.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_app_v2.conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet_generator_app_v2.PSPModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ",", "predict_mask", "=", "True", ",", "psp_module", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ",", "batchnorm_func", "=", "BatchNorm", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ",", "batchnorm_func", "=", "BatchNorm", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "predict_mask", "=", "predict_mask", "\n", "if", "self", ".", "predict_mask", ":", "\n", "            ", "if", "psp_module", ":", "\n", "                ", "self", ".", "conv_mask", "=", "nn", ".", "Sequential", "(", "PSPModule", "(", "out_ch", ",", "100", ")", ",", "\n", "nn", ".", "Conv2d", "(", "100", ",", "184", ",", "kernel_size", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_mask", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "out_ch", ",", "100", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "BatchNorm", "(", "100", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "100", ",", "184", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResBlock.residual": [[653, 664], ["resnet_generator_app_v2.ResBlock.b1", "resnet_generator_app_v2.ResBlock.activation", "resnet_generator_app_v2.ResBlock.conv1", "resnet_generator_app_v2.ResBlock.b2", "resnet_generator_app_v2.ResBlock.activation", "resnet_generator_app_v2.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "", "", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResBlock.shortcut": [[665, 671], ["resnet_generator_app_v2.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.ResBlock.forward": [[672, 679], ["resnet_generator_app_v2.ResBlock.residual", "resnet_generator_app_v2.ResBlock.shortcut", "resnet_generator_app_v2.ResBlock.conv_mask"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "out_feat", "=", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "if", "self", ".", "predict_mask", ":", "\n", "            ", "mask", "=", "self", ".", "conv_mask", "(", "out_feat", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "None", "\n", "", "return", "out_feat", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.PSPModule.__init__": [[730, 740], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "resnet_generator_app_v2.PSPModule._make_stage", "len"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.PSPModule._make_stage"], ["def", "__init__", "(", "self", ",", "features", ",", "out_features", "=", "512", ",", "sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ")", ":", "\n", "        ", "super", "(", "PSPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stages", "=", "[", "]", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stage", "(", "features", ",", "out_features", ",", "size", ")", "for", "size", "in", "sizes", "]", ")", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "features", "+", "len", "(", "sizes", ")", "*", "out_features", ",", "out_features", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "out_features", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.PSPModule._make_stage": [[742, 747], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "features", ",", "out_features", ",", "size", ")", ":", "\n", "        ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "features", ",", "out_features", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_features", ")", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ",", "bn", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.PSPModule.forward": [[748, 753], ["resnet_generator_app_v2.PSPModule.bottleneck", "feats.size", "feats.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.interpolate", "torch.interpolate", "torch.interpolate", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "h", ",", "w", "=", "feats", ".", "size", "(", "2", ")", ",", "feats", ".", "size", "(", "3", ")", "\n", "priors", "=", "[", "F", ".", "interpolate", "(", "input", "=", "stage", "(", "feats", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "for", "stage", "in", "self", ".", "stages", "]", "+", "[", "feats", "]", "\n", "bottle", "=", "self", ".", "bottleneck", "(", "torch", ".", "cat", "(", "priors", ",", "1", ")", ")", "\n", "return", "bottle", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.clones": [[12, 15], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.BoxRelationalEmbedding": [[17, 77], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "# returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "# follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "# cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.box_attention": [[79, 121], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "np.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.log", "torch.log", "torch.log", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "torch.clamp", "torch.clamp", "torch.clamp", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "# print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "# print(w_q.shape)", "\n", "# print(w_k.shape)", "\n", "# attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "# print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "# print(w_g.shape)", "\n", "# print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "w_mn", "=", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "w_g", ",", "min", "=", "1e-6", ")", ")", "+", "w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.conv2d": [[681, 687], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.batched_index_select": [[689, 695], ["list", "index.expand.expand", "torch.gather", "torch.gather", "torch.gather"], "function", ["None"], ["", "", "def", "batched_index_select", "(", "input", ",", "dim", ",", "index", ")", ":", "\n", "    ", "expanse", "=", "list", "(", "input", ".", "shape", ")", "\n", "expanse", "[", "0", "]", "=", "-", "1", "\n", "expanse", "[", "dim", "]", "=", "-", "1", "\n", "index", "=", "index", ".", "expand", "(", "expanse", ")", "\n", "return", "torch", ".", "gather", "(", "input", ",", "dim", ",", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_app_v2.bbox_mask": [[697, 722], ["bbox.to.to", "bbox.to.size", "bbox.to.float().view", "x0.contiguous().view().expand.contiguous().view().expand", "ww.contiguous().view().expand.contiguous().view().expand", "y0.contiguous().view().expand.contiguous().view().expand", "hh.contiguous().view().expand.contiguous().view().expand", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "torch.linspace().view().expand().to", "out_mask.view", "bbox.to.float", "x0.contiguous().view().expand.contiguous().view", "ww.contiguous().view().expand.contiguous().view", "y0.contiguous().view().expand.contiguous().view", "hh.contiguous().view().expand.contiguous().view", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "x0.contiguous().view().expand.contiguous", "ww.contiguous().view().expand.contiguous", "y0.contiguous().view().expand.contiguous", "hh.contiguous().view().expand.contiguous", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["None"], ["", "def", "bbox_mask", "(", "x", ",", "bbox", ",", "H", ",", "W", ")", ":", "\n", "    ", "bbox", "=", "bbox", ".", "to", "(", "x", ".", "device", ")", "\n", "b", ",", "o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "N", "=", "b", "*", "o", "\n", "\n", "bbox_1", "=", "bbox", ".", "float", "(", ")", ".", "view", "(", "-", "1", ",", "4", ")", "\n", "x0", ",", "y0", "=", "bbox_1", "[", ":", ",", "0", "]", ",", "bbox_1", "[", ":", ",", "1", "]", "\n", "ww", ",", "hh", "=", "bbox_1", "[", ":", ",", "2", "]", ",", "bbox_1", "[", ":", ",", "3", "]", "\n", "\n", "x0", "=", "x0", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ")", "\n", "ww", "=", "ww", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ")", "\n", "y0", "=", "y0", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "W", ")", "\n", "hh", "=", "hh", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "W", ")", "\n", "\n", "X", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "W", ")", ".", "view", "(", "1", ",", "W", ")", ".", "expand", "(", "N", ",", "W", ")", ".", "to", "(", "x", ".", "device", ")", "# cuda(device=x.device)", "\n", "Y", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "H", ")", ".", "view", "(", "1", ",", "H", ")", ".", "expand", "(", "N", ",", "H", ")", ".", "to", "(", "x", ".", "device", ")", "# cuda(device=x.device)", "\n", "\n", "X", "=", "(", "X", "-", "x0", ")", "/", "ww", "\n", "Y", "=", "(", "Y", "-", "y0", ")", "/", "hh", "\n", "\n", "X_out_mask", "=", "(", "(", "X", "<", "0", ")", "+", "(", "X", ">", "1", ")", ")", ".", "view", "(", "N", ",", "1", ",", "W", ")", ".", "expand", "(", "N", ",", "H", ",", "W", ")", "\n", "Y_out_mask", "=", "(", "(", "Y", "<", "0", ")", "+", "(", "Y", ">", "1", ")", ")", ".", "view", "(", "N", ",", "H", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ",", "W", ")", "\n", "\n", "out_mask", "=", "1", "-", "(", "X_out_mask", "+", "Y_out_mask", ")", ".", "float", "(", ")", ".", "clamp", "(", "max", "=", "1", ")", "\n", "return", "out_mask", ".", "view", "(", "b", ",", "o", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator128.__init__": [[19, 40], ["torch.Module.__init__", "rcnn_discriminator_orig.OptimizedBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "torchvision.ops.RoIAlign", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l7", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "4.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator128.forward": [[41, 81], ["bbox.size", "rcnn_discriminator_orig.ResnetDiscriminator128.block1", "rcnn_discriminator_orig.ResnetDiscriminator128.block2", "rcnn_discriminator_orig.ResnetDiscriminator128.block3", "rcnn_discriminator_orig.ResnetDiscriminator128.block4", "rcnn_discriminator_orig.ResnetDiscriminator128.block5", "rcnn_discriminator_orig.ResnetDiscriminator128.block6", "rcnn_discriminator_orig.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator128.l7", "rcnn_discriminator_orig.ResnetDiscriminator128.block_obj3", "rcnn_discriminator_orig.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_orig.ResnetDiscriminator128.roi_align_s", "rcnn_discriminator_orig.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_orig.ResnetDiscriminator128.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_orig.ResnetDiscriminator128.block_obj5", "rcnn_discriminator_orig.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator128.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator128.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_orig.ResnetDiscriminator128.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block3", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l7", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "64", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "64", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj3", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "obj_feat_s", ")", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj4", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj5", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator64.__init__": [[84, 103], ["torch.Module.__init__", "rcnn_discriminator_orig.OptimizedBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "rcnn_discriminator_orig.ResnetDiscriminator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "input_dim", ",", "ch", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_im", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "# object path", "\n", "self", ".", "roi_align", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "2.0", ",", "0", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "8", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "8", ")", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator64.forward": [[104, 129], ["bbox.size", "rcnn_discriminator_orig.ResnetDiscriminator64.block1", "rcnn_discriminator_orig.ResnetDiscriminator64.block2", "rcnn_discriminator_orig.ResnetDiscriminator64.block3", "rcnn_discriminator_orig.ResnetDiscriminator64.block4", "rcnn_discriminator_orig.ResnetDiscriminator64.block5", "rcnn_discriminator_orig.ResnetDiscriminator64.activation", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "rcnn_discriminator_orig.ResnetDiscriminator64.l_im", "rcnn_discriminator_orig.ResnetDiscriminator64.roi_align", "rcnn_discriminator_orig.ResnetDiscriminator64.block_obj4", "rcnn_discriminator_orig.ResnetDiscriminator64.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator64.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator64.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_orig.ResnetDiscriminator64.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l_im", "(", "x", ")", "\n", "\n", "# obj path", "\n", "obj_feat", "=", "self", ".", "roi_align", "(", "x1", ",", "bbox", ")", "\n", "obj_feat", "=", "self", ".", "block_obj4", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator64.init_parameter": [[130, 136], ["rcnn_discriminator_orig.ResnetDiscriminator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator256.__init__": [[139, 161], ["torch.Module.__init__", "rcnn_discriminator_orig.OptimizedBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ROIAlign", "ROIAlign", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "rcnn_discriminator_orig.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block7", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l8", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "16.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResnetDiscriminator256.forward": [[162, 204], ["bbox.size", "rcnn_discriminator_orig.ResnetDiscriminator256.block1", "rcnn_discriminator_orig.ResnetDiscriminator256.block2", "rcnn_discriminator_orig.ResnetDiscriminator256.block3", "rcnn_discriminator_orig.ResnetDiscriminator256.block4", "rcnn_discriminator_orig.ResnetDiscriminator256.block5", "rcnn_discriminator_orig.ResnetDiscriminator256.block6", "rcnn_discriminator_orig.ResnetDiscriminator256.block7", "rcnn_discriminator_orig.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator256.l8", "rcnn_discriminator_orig.ResnetDiscriminator256.block_obj4", "rcnn_discriminator_orig.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_orig.ResnetDiscriminator256.roi_align_s", "rcnn_discriminator_orig.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_orig.ResnetDiscriminator256.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_orig.ResnetDiscriminator256.block_obj6", "rcnn_discriminator_orig.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator256.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_orig.ResnetDiscriminator256.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_orig.ResnetDiscriminator256.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 256x256", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block5", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block7", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l8", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "128", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "128", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj5", "(", "obj_feat_s", ")", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj5", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj6", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.OptimizedBlock.__init__": [[207, 214], ["torch.Module.__init__", "rcnn_discriminator_orig.conv2d", "rcnn_discriminator_orig.conv2d", "rcnn_discriminator_orig.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "OptimizedBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.OptimizedBlock.forward": [[215, 222], ["rcnn_discriminator_orig.OptimizedBlock.activation", "rcnn_discriminator_orig.OptimizedBlock.conv2", "rcnn_discriminator_orig.OptimizedBlock.conv1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "rcnn_discriminator_orig.OptimizedBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "activation", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.OptimizedBlock.shortcut": [[223, 227], ["rcnn_discriminator_orig.OptimizedBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "self", ".", "c_sc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResBlock.__init__": [[230, 239], ["torch.Module.__init__", "rcnn_discriminator_orig.conv2d", "rcnn_discriminator_orig.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "rcnn_discriminator_orig.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "learnable_sc", "=", "(", "in_ch", "!=", "out_ch", ")", "or", "downsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResBlock.residual": [[240, 247], ["rcnn_discriminator_orig.ResBlock.conv1", "rcnn_discriminator_orig.ResBlock.conv2", "rcnn_discriminator_orig.ResBlock.activation", "rcnn_discriminator_orig.ResBlock.activation", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "", "def", "residual", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "conv1", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResBlock.shortcut": [[248, 254], ["rcnn_discriminator_orig.ResBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.ResBlock.forward": [[255, 257], ["rcnn_discriminator_orig.ResBlock.residual", "rcnn_discriminator_orig.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator256.__init__": [[260, 263], ["torch.Module.__init__", "rcnn_discriminator_orig.ResnetDiscriminator256"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator256", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator256.forward": [[264, 280], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_orig.CombineDiscriminator256.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator128.__init__": [[283, 286], ["torch.Module.__init__", "rcnn_discriminator_orig.ResnetDiscriminator128"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator128", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator128.forward": [[287, 303], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_orig.CombineDiscriminator128.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.to", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "to", "(", "idx", ".", "device", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator64.__init__": [[306, 309], ["torch.Module.__init__", "rcnn_discriminator_orig.ResnetDiscriminator64"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator64", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.CombineDiscriminator64.forward": [[310, 326], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_orig.CombineDiscriminator64.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.to", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "to", "(", "idx", ".", "device", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_orig.conv2d": [[10, 16], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.BoxMultiHeadedAttention.__init__": [[127, 153], ["torch.Module.__init__", "resnet_generator_part.clones", "resnet_generator_part.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "# matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.BoxMultiHeadedAttention.forward": [[154, 213], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "resnet_generator_part.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "resnet_generator_part.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "resnet_generator_part.BoxMultiHeadedAttention.layer_norm0", "resnet_generator_part.BoxMultiHeadedAttention.dropout", "resnet_generator_part.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "# if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "# tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "# print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "# print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "# if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "# print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ScaledDotProductAttention.__init__": [[218, 223], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ScaledDotProductAttention.forward": [[224, 242], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "resnet_generator_part.ScaledDotProductAttention.softmax", "resnet_generator_part.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.MultiHeadAttention.__init__": [[247, 267], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "resnet_generator_part.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "np.sqrt", "np.sqrt", "np.sqrt", "np.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.MultiHeadAttention.forward": [[268, 295], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "resnet_generator_part.MultiHeadAttention.w_qs().view", "resnet_generator_part.MultiHeadAttention.w_ks().view", "resnet_generator_part.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "resnet_generator_part.MultiHeadAttention.attention", "resnet_generator_part.MultiHeadAttention.view", "resnet_generator_part.MultiHeadAttention.permute().contiguous().view", "resnet_generator_part.MultiHeadAttention.layer_norm0", "resnet_generator_part.MultiHeadAttention.dropout", "resnet_generator_part.MultiHeadAttention.layer_norm", "resnet_generator_part.MultiHeadAttention.fc", "resnet_generator_part.MultiHeadAttention.w_qs", "resnet_generator_part.MultiHeadAttention.w_ks", "resnet_generator_part.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "resnet_generator_part.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "resnet_generator_part.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator64.__init__": [[298, 323], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression_part.MaskRegressNet", "resnet_generator_part.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator64.forward": [[324, 352], ["resnet_generator_part.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_part.ResnetGenerator64.mapping", "resnet_generator_part.ResnetGenerator64.mask_regress", "resnet_generator_part.ResnetGenerator64.fc().view", "resnet_generator_part.ResnetGenerator64.res2", "resnet_generator_part.ResnetGenerator64.res3", "resnet_generator_part.ResnetGenerator64.res4", "resnet_generator_part.ResnetGenerator64.res5", "resnet_generator_part.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator64.init_parameter": [[353, 359], ["resnet_generator_part.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128.__init__": [[362, 387], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression_part.MaskRegressNet", "resnet_generator_part.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128.forward": [[388, 427], ["print", "z.view.view.view", "resnet_generator_part.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_part.ResnetGenerator128.mapping", "resnet_generator_part.ResnetGenerator128.mask_regress", "resnet_generator_part.ResnetGenerator128.fc().view", "resnet_generator_part.ResnetGenerator128.res1", "resnet_generator_part.ResnetGenerator128.res2", "resnet_generator_part.ResnetGenerator128.res3", "resnet_generator_part.ResnetGenerator128.res4", "resnet_generator_part.ResnetGenerator128.res5", "resnet_generator_part.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_part.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "print", "(", "y", ".", "shape", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128.init_parameter": [[428, 434], ["resnet_generator_part.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128_nf.__init__": [[437, 458], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression_part.MaskRegressNet", "resnet_generator_part.ResnetGenerator128_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "# print(self.mapping)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128_nf.forward": [[460, 498], ["z.view.view.view", "resnet_generator_part.ResnetGenerator128_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_part.ResnetGenerator128_nf.mapping", "resnet_generator_part.ResnetGenerator128_nf.mask_regress", "resnet_generator_part.ResnetGenerator128_nf.fc().view", "resnet_generator_part.ResnetGenerator128_nf.res1", "resnet_generator_part.ResnetGenerator128_nf.res2", "resnet_generator_part.ResnetGenerator128_nf.res3", "resnet_generator_part.ResnetGenerator128_nf.res4", "resnet_generator_part.ResnetGenerator128_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.ResnetGenerator128_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_part.ResnetGenerator128_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.ResnetGenerator128_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResnetGenerator128_nf.init_parameter": [[499, 505], ["resnet_generator_part.ResnetGenerator128_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock.__init__": [[508, 520], ["torch.Module.__init__", "resnet_generator_part.conv2d", "resnet_generator_part.conv2d", "norm_module_part.SpatialAdaptiveSynBatchNorm2d", "norm_module_part.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock.residual": [[521, 532], ["resnet_generator_part.ResBlock.b1", "resnet_generator_part.ResBlock.activation", "resnet_generator_part.ResBlock.conv1", "resnet_generator_part.ResBlock.b2", "resnet_generator_part.ResBlock.activation", "resnet_generator_part.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock.shortcut": [[533, 539], ["resnet_generator_part.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock.forward": [[540, 542], ["resnet_generator_part.ResBlock.residual", "resnet_generator_part.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_part.__init__": [[545, 557], ["torch.Module.__init__", "resnet_generator_part.conv2d", "resnet_generator_part.conv2d", "norm_module_part.SpatialAdaptiveSynBatchNorm2d_part", "norm_module_part.SpatialAdaptiveSynBatchNorm2d_part", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_part.residual": [[558, 569], ["resnet_generator_part.ResBlock_part.b1", "resnet_generator_part.ResBlock_part.activation", "resnet_generator_part.ResBlock_part.conv1", "resnet_generator_part.ResBlock_part.b2", "resnet_generator_part.ResBlock_part.activation", "resnet_generator_part.ResBlock_part.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_part.shortcut": [[570, 576], ["resnet_generator_part.ResBlock_part.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_part.forward": [[577, 579], ["resnet_generator_part.ResBlock_part.residual", "resnet_generator_part.ResBlock_part.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_1.__init__": [[582, 600], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "ResBlock_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "SynchronizedBatchNorm2d", "(", "in_ch", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv1", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv2", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv3", ".", "weight", ".", "data", ",", "1.", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "SynchronizedBatchNorm2d", "(", "in_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv1", ",", "\n", "SynchronizedBatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.ResBlock_1.forward": [[602, 605], ["resnet_generator_part.ResBlock_1.model", "resnet_generator_part.ResBlock_1.conv3", "resnet_generator_part.ResBlock_1.relu", "resnet_generator_part.ResBlock_1.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "+", "(", "self", ".", "conv3", "(", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.background_foreground_generator.__init__": [[616, 625], ["torch.Module.__init__", "resnet_generator_part.ResnetGenerator128_nf", "resnet_generator_part.ResnetGenerator128_nf", "resnet_generator_part.ResBlock_1", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "background_cla", ",", "foreground_cla", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "background_foreground_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "background_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "background_cla", ")", "\n", "self", ".", "foreground_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "foreground_cla", ")", "\n", "self", ".", "combination", "=", "ResBlock_1", "(", "64", "*", "2", ",", "64", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "64", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.background_foreground_generator.forward": [[626, 633], ["resnet_generator_part.background_foreground_generator.background_g", "resnet_generator_part.background_foreground_generator.foreground_g", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.background_foreground_generator.combination", "resnet_generator_part.background_foreground_generator.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "z_im_f", "=", "None", ",", "y_f", "=", "None", ",", "z_im_b", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n", "        ", "background_feat", "=", "self", ".", "background_g", "(", "z_b", ",", "bbox_b", ",", "z_im", "=", "z_im_b", ",", "y", "=", "y_b", ")", "\n", "foreground_feat", "=", "self", ".", "foreground_g", "(", "z_f", ",", "bbox_f", ",", "z_im", "=", "z_im_f", ",", "y", "=", "y_f", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "background_feat", ",", "foreground_feat", ")", ",", "dim", "=", "1", ")", "\n", "feat", "=", "self", ".", "combination", "(", "feat", ")", "\n", "im", "=", "self", ".", "final", "(", "feat", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator.__init__": [[636, 663], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_part.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "resnet_generator_part.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression_part.MaskRegressNet", "resnet_generator_part.context_aware_generator.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator.forward": [[664, 713], ["z.view.view.view", "resnet_generator_part.context_aware_generator.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_part.context_aware_generator.mapping().view", "resnet_generator_part.context_aware_generator.context", "w.view.view.view", "resnet_generator_part.context_aware_generator.mask_regress", "resnet_generator_part.context_aware_generator.fc().view", "resnet_generator_part.context_aware_generator.res1", "resnet_generator_part.context_aware_generator.res2", "resnet_generator_part.context_aware_generator.res3", "resnet_generator_part.context_aware_generator.res4", "resnet_generator_part.context_aware_generator.res5", "resnet_generator_part.context_aware_generator.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.context_aware_generator.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_part.context_aware_generator.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.context_aware_generator.mapping", "resnet_generator_part.context_aware_generator.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "# print(z.shape)", "\n", "# print(bbox.shape)", "\n", "# print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# context aware w", "\n", "# print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "# print(bbox.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator.init_parameter": [[714, 720], ["resnet_generator_part.context_aware_generator.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator_part.__init__": [[723, 750], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_part.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_part.ResBlock_part", "resnet_generator_part.ResBlock_part", "resnet_generator_part.ResBlock_part", "resnet_generator_part.ResBlock_part", "resnet_generator_part.ResBlock_part", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression_part.MaskRegressNet_part", "resnet_generator_part.context_aware_generator_part.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_part.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock_part", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock_part", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock_part", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet_part", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator_part.forward": [[751, 803], ["z.view.view.view", "resnet_generator_part.context_aware_generator_part.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_part.context_aware_generator_part.mapping().view", "resnet_generator_part.context_aware_generator_part.context", "w.view.view.view", "resnet_generator_part.context_aware_generator_part.mask_regress", "resnet_generator_part.context_aware_generator_part.fc().view", "resnet_generator_part.context_aware_generator_part.res1", "resnet_generator_part.context_aware_generator_part.res2", "resnet_generator_part.context_aware_generator_part.res3", "resnet_generator_part.context_aware_generator_part.res4", "resnet_generator_part.context_aware_generator_part.res5", "resnet_generator_part.context_aware_generator_part.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.context_aware_generator_part.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_part.context_aware_generator_part.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_part.context_aware_generator_part.mapping", "resnet_generator_part.context_aware_generator_part.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "# print(z.shape)", "\n", "# print(bbox.shape)", "\n", "# print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# context aware w", "\n", "# print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", ",", "bbox1", ",", "bbox2", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "# print(bbox.shape)", "\n", "# print(bbox1.shape)", "\n", "# print(bbox2.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.context_aware_generator_part.init_parameter": [[804, 810], ["resnet_generator_part.context_aware_generator_part.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.clones": [[10, 13], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.BoxRelationalEmbedding": [[15, 75], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "# returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "# follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "# cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.box_attention": [[77, 119], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "np.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.log", "torch.log", "torch.log", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "torch.clamp", "torch.clamp", "torch.clamp", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "# print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "# print(w_q.shape)", "\n", "# print(w_k.shape)", "\n", "# attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "# print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "# print(w_g.shape)", "\n", "# print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "w_mn", "=", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "w_g", ",", "min", "=", "1e-6", ")", ")", "+", "w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_part.conv2d": [[607, 613], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator128.__init__": [[13, 45], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "mask_regression.MaskRegressNetv2", "resnet_generator_v2.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v2.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "psp_module", "=", "True", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "predict_mask", "=", "False", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "BatchNorm", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "alpha1", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha3", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha4", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNetv2", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator128.forward": [[46, 109], ["resnet_generator_v2.ResnetGenerator128.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v2.ResnetGenerator128.mapping", "resnet_generator_v2.ResnetGenerator128.mask_regress", "resnet_generator_v2.bbox_mask", "resnet_generator_v2.ResnetGenerator128.fc().view", "resnet_generator_v2.ResnetGenerator128.res1", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator128.res2", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator128.res3", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator128.res4", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator128.res5", "resnet_generator_v2.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_v2.ResnetGenerator128.size", "resnet_generator_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator128.size", "resnet_generator_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator128.size", "resnet_generator_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator128.size", "resnet_generator_v2.ResnetGenerator128.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v2.ResnetGenerator128.fc", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_v2.ResnetGenerator128.sigmoid().expand", "resnet_generator_v2.ResnetGenerator128.sigmoid().expand", "y.view", "y.view", "y.view", "y.view", "resnet_generator_v2.ResnetGenerator128.sigmoid", "resnet_generator_v2.ResnetGenerator128.sigmoid", "resnet_generator_v2.ResnetGenerator128.sigmoid", "resnet_generator_v2.ResnetGenerator128.sigmoid"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bmask", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "", "bbox_mask_", "=", "bbox_mask", "(", "z", ",", "bbox", ",", "64", ",", "64", ")", "\n", "\n", "# 4x4", "\n", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", ",", "stage_mask", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bmask", ")", "\n", "\n", "# 16x16", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha1", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha1", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha1", ")", "+", "seman_bbox", "*", "alpha1", "\n", "x", ",", "stage_mask", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 32x32", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha2", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha2", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha2", ")", "+", "seman_bbox", "*", "alpha2", "\n", "x", ",", "stage_mask", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 64x64", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha3", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha3", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha3", ")", "+", "seman_bbox", "*", "alpha3", "\n", "x", ",", "stage_mask", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 128x128", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha4", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha4", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha4", ")", "+", "seman_bbox", "*", "alpha4", "\n", "x", ",", "_", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# save_path1 = 'samples/tmp/edit/apponly/1292_bmask2_0.npy'", "\n", "# save_path2 = 'samples/tmp/edit/apponly/1292_stage2_bbox_0.npy'", "\n", "# np.save(save_path1, bmask.cpu().detach().numpy())", "\n", "# np.save(save_path2, stage_bbox.cpu().detach().numpy())", "\n", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator128.init_parameter": [[110, 116], ["resnet_generator_v2.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator256.__init__": [[119, 152], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "resnet_generator_v2.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "mask_regression.MaskRegressNetv2", "resnet_generator_v2.ResnetGenerator256.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v2.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res6", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ",", "predict_mask", "=", "False", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "BatchNorm", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "alpha1", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha3", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha4", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "alpha5", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "184", ",", "1", ")", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNetv2", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator256.forward": [[153, 228], ["resnet_generator_v2.ResnetGenerator256.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v2.ResnetGenerator256.mapping", "resnet_generator_v2.ResnetGenerator256.mask_regress", "resnet_generator_v2.bbox_mask", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_v2.ResnetGenerator256.mapping", "resnet_generator_v2.ResnetGenerator256.fc().view", "resnet_generator_v2.ResnetGenerator256.res1", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator256.res2", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator256.res3", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator256.res4", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator256.res5", "resnet_generator_v2.batched_index_select", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "torch.gather().unsqueeze", "resnet_generator_v2.ResnetGenerator256.res6", "resnet_generator_v2.ResnetGenerator256.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "resnet_generator_v2.ResnetGenerator256.size", "resnet_generator_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator256.size", "resnet_generator_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator256.size", "resnet_generator_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator256.size", "resnet_generator_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator256.size", "resnet_generator_v2.ResnetGenerator256.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_v2.ResnetGenerator256.fc", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "y.view", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.interpolate", "torch.interpolate", "torch.interpolate", "resnet_generator_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_v2.ResnetGenerator256.sigmoid().expand", "resnet_generator_v2.ResnetGenerator256.sigmoid().expand", "y.view", "y.view", "y.view", "y.view", "y.view", "resnet_generator_v2.ResnetGenerator256.sigmoid", "resnet_generator_v2.ResnetGenerator256.sigmoid", "resnet_generator_v2.ResnetGenerator256.sigmoid", "resnet_generator_v2.ResnetGenerator256.sigmoid", "resnet_generator_v2.ResnetGenerator256.sigmoid"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ",", "include_mask_loss", "=", "False", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# preprocess bbox", "\n", "bmask", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "", "bbox_mask_", "=", "bbox_mask", "(", "z", ",", "bbox", ",", "128", ",", "128", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# 4x4", "\n", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "# label mask", "\n", "x", ",", "stage_mask", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bmask", ")", "\n", "\n", "# 16x16", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "alpha1", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha1", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha1", ")", "+", "seman_bbox", "*", "alpha1", "\n", "x", ",", "stage_mask", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 32x32", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha2", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha2", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha2", ")", "+", "seman_bbox", "*", "alpha2", "\n", "x", ",", "stage_mask", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 64x64", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha3", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha3", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha3", ")", "+", "seman_bbox", "*", "alpha3", "\n", "x", ",", "stage_mask", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 128x128", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha4", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha4", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha4", ")", "+", "seman_bbox", "*", "alpha4", "\n", "x", ",", "stage_mask", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "\n", "# 256x256", "\n", "hh", ",", "ww", "=", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "seman_bbox", "=", "batched_index_select", "(", "stage_mask", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ",", "1", ")", ")", "# size (b, num_o, h, w)", "\n", "seman_bbox", "=", "torch", ".", "sigmoid", "(", "seman_bbox", ")", "*", "F", ".", "interpolate", "(", "bbox_mask_", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "alpha5", "=", "torch", ".", "gather", "(", "self", ".", "sigmoid", "(", "self", ".", "alpha5", ")", ".", "expand", "(", "b", ",", "-", "1", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "index", "=", "y", ".", "view", "(", "b", ",", "o", ",", "1", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "stage_bbox", "=", "F", ".", "interpolate", "(", "bmask", ",", "size", "=", "(", "hh", ",", "ww", ")", ",", "mode", "=", "'bilinear'", ")", "*", "(", "1", "-", "alpha5", ")", "+", "seman_bbox", "*", "alpha5", "\n", "x", ",", "_", "=", "self", ".", "res6", "(", "x", ",", "w", ",", "stage_bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResnetGenerator256.init_parameter": [[229, 235], ["resnet_generator_v2.ResnetGenerator256.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResBlock.__init__": [[238, 261], ["torch.Module.__init__", "resnet_generator_v2.conv2d", "resnet_generator_v2.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_v2.conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet_generator_v2.PSPModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ",", "predict_mask", "=", "True", ",", "psp_module", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ",", "batchnorm_func", "=", "BatchNorm", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ",", "batchnorm_func", "=", "BatchNorm", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "predict_mask", "=", "predict_mask", "\n", "if", "self", ".", "predict_mask", ":", "\n", "            ", "if", "psp_module", ":", "\n", "                ", "self", ".", "conv_mask", "=", "nn", ".", "Sequential", "(", "PSPModule", "(", "out_ch", ",", "100", ")", ",", "\n", "nn", ".", "Conv2d", "(", "100", ",", "184", ",", "kernel_size", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv_mask", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "out_ch", ",", "100", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "BatchNorm", "(", "100", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "100", ",", "184", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResBlock.residual": [[262, 273], ["resnet_generator_v2.ResBlock.b1", "resnet_generator_v2.ResBlock.activation", "resnet_generator_v2.ResBlock.conv1", "resnet_generator_v2.ResBlock.b2", "resnet_generator_v2.ResBlock.activation", "resnet_generator_v2.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "", "", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResBlock.shortcut": [[274, 280], ["resnet_generator_v2.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.ResBlock.forward": [[281, 288], ["resnet_generator_v2.ResBlock.residual", "resnet_generator_v2.ResBlock.shortcut", "resnet_generator_v2.ResBlock.conv_mask"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "out_feat", "=", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "if", "self", ".", "predict_mask", ":", "\n", "            ", "mask", "=", "self", ".", "conv_mask", "(", "out_feat", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "None", "\n", "", "return", "out_feat", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.PSPModule.__init__": [[338, 348], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "resnet_generator_v2.PSPModule._make_stage", "len"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.PSPModule._make_stage"], ["def", "__init__", "(", "self", ",", "features", ",", "out_features", "=", "512", ",", "sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ")", ":", "\n", "        ", "super", "(", "PSPModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stages", "=", "[", "]", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stage", "(", "features", ",", "out_features", ",", "size", ")", "for", "size", "in", "sizes", "]", ")", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "features", "+", "len", "(", "sizes", ")", "*", "out_features", ",", "out_features", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "out_features", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout2d", "(", "0.1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.PSPModule._make_stage": [[350, 355], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "features", ",", "out_features", ",", "size", ")", ":", "\n", "        ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "features", ",", "out_features", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_features", ")", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ",", "bn", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.PSPModule.forward": [[356, 361], ["resnet_generator_v2.PSPModule.bottleneck", "feats.size", "feats.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.interpolate", "torch.interpolate", "torch.interpolate", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "h", ",", "w", "=", "feats", ".", "size", "(", "2", ")", ",", "feats", ".", "size", "(", "3", ")", "\n", "priors", "=", "[", "F", ".", "interpolate", "(", "input", "=", "stage", "(", "feats", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "for", "stage", "in", "self", ".", "stages", "]", "+", "[", "feats", "]", "\n", "bottle", "=", "self", ".", "bottleneck", "(", "torch", ".", "cat", "(", "priors", ",", "1", ")", ")", "\n", "return", "bottle", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.conv2d": [[290, 296], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.batched_index_select": [[298, 304], ["list", "index.expand.expand", "torch.gather", "torch.gather", "torch.gather"], "function", ["None"], ["", "", "def", "batched_index_select", "(", "input", ",", "dim", ",", "index", ")", ":", "\n", "    ", "expanse", "=", "list", "(", "input", ".", "shape", ")", "\n", "expanse", "[", "0", "]", "=", "-", "1", "\n", "expanse", "[", "dim", "]", "=", "-", "1", "\n", "index", "=", "index", ".", "expand", "(", "expanse", ")", "\n", "return", "torch", ".", "gather", "(", "input", ",", "dim", ",", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_v2.bbox_mask": [[306, 330], ["bbox.size", "bbox.float().view", "x0.contiguous().view().expand.contiguous().view().expand", "ww.contiguous().view().expand.contiguous().view().expand", "y0.contiguous().view().expand.contiguous().view().expand", "hh.contiguous().view().expand.contiguous().view().expand", "torch.linspace().view().expand().cuda", "torch.linspace().view().expand().cuda", "torch.linspace().view().expand().cuda", "torch.linspace().view().expand().cuda", "torch.linspace().view().expand().cuda", "torch.linspace().view().expand().cuda", "out_mask.view", "ww.contiguous().view().expand.to", "hh.contiguous().view().expand.to", "bbox.float", "x0.contiguous().view().expand.contiguous().view", "ww.contiguous().view().expand.contiguous().view", "y0.contiguous().view().expand.contiguous().view", "hh.contiguous().view().expand.contiguous().view", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "torch.linspace().view().expand", "x0.contiguous().view().expand.to", "y0.contiguous().view().expand.to", "x0.contiguous().view().expand.contiguous", "ww.contiguous().view().expand.contiguous", "y0.contiguous().view().expand.contiguous", "hh.contiguous().view().expand.contiguous", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace().view", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace"], "function", ["None"], ["", "def", "bbox_mask", "(", "x", ",", "bbox", ",", "H", ",", "W", ")", ":", "\n", "    ", "b", ",", "o", ",", "_", "=", "bbox", ".", "size", "(", ")", "\n", "N", "=", "b", "*", "o", "\n", "\n", "bbox_1", "=", "bbox", ".", "float", "(", ")", ".", "view", "(", "-", "1", ",", "4", ")", "\n", "x0", ",", "y0", "=", "bbox_1", "[", ":", ",", "0", "]", ",", "bbox_1", "[", ":", ",", "1", "]", "\n", "ww", ",", "hh", "=", "bbox_1", "[", ":", ",", "2", "]", ",", "bbox_1", "[", ":", ",", "3", "]", "\n", "\n", "x0", "=", "x0", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ")", "\n", "ww", "=", "ww", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ")", "\n", "y0", "=", "y0", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "W", ")", "\n", "hh", "=", "hh", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "1", ")", ".", "expand", "(", "N", ",", "W", ")", "\n", "\n", "X", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "W", ")", ".", "view", "(", "1", ",", "W", ")", ".", "expand", "(", "N", ",", "W", ")", ".", "cuda", "(", "device", "=", "x", ".", "device", ")", "\n", "Y", "=", "torch", ".", "linspace", "(", "0", ",", "1", ",", "steps", "=", "H", ")", ".", "view", "(", "1", ",", "H", ")", ".", "expand", "(", "N", ",", "H", ")", ".", "cuda", "(", "device", "=", "x", ".", "device", ")", "\n", "\n", "X", "=", "(", "X", "-", "x0", ".", "to", "(", "X", ".", "device", ")", ")", "/", "ww", ".", "to", "(", "X", ".", "device", ")", "\n", "Y", "=", "(", "Y", "-", "y0", ".", "to", "(", "Y", ".", "device", ")", ")", "/", "hh", ".", "to", "(", "Y", ".", "device", ")", "\n", "\n", "X_out_mask", "=", "(", "(", "X", "<", "0", ")", "+", "(", "X", ">", "1", ")", ")", ".", "view", "(", "N", ",", "1", ",", "W", ")", ".", "expand", "(", "N", ",", "H", ",", "W", ")", "\n", "Y_out_mask", "=", "(", "(", "Y", "<", "0", ")", "+", "(", "Y", ">", "1", ")", ")", ".", "view", "(", "N", ",", "H", ",", "1", ")", ".", "expand", "(", "N", ",", "H", ",", "W", ")", "\n", "\n", "out_mask", "=", "1", "-", "(", "X_out_mask", "+", "Y_out_mask", ")", ".", "float", "(", ")", ".", "clamp", "(", "max", "=", "1", ")", "\n", "return", "out_mask", ".", "view", "(", "b", ",", "o", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxMultiHeadedAttention.__init__": [[131, 157], ["torch.Module.__init__", "resnet_generator_vg.clones", "resnet_generator_vg.clones", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones"], ["def", "__init__", "(", "self", ",", "h", ",", "d_model", ",", "trignometric_embedding", "=", "True", ",", "legacy_extra_skip", "=", "False", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "\"Take in model size and number of heads.\"", "\n", "super", "(", "BoxMultiHeadedAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "d_model", "%", "h", "==", "0", "\n", "self", ".", "trignometric_embedding", "=", "trignometric_embedding", "\n", "self", ".", "legacy_extra_skip", "=", "legacy_extra_skip", "\n", "\n", "# We assume d_v always equals d_k", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "d_k", "=", "d_model", "//", "h", "\n", "self", ".", "d_v", "=", "d_model", "//", "h", "\n", "if", "self", ".", "trignometric_embedding", ":", "\n", "            ", "self", ".", "dim_g", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "dim_g", "=", "4", "\n", "", "geo_feature_dim", "=", "self", ".", "dim_g", "\n", "\n", "# matrices W_q, W_k, W_v, and one last projection layer", "\n", "self", ".", "linears", "=", "clones", "(", "nn", ".", "Linear", "(", "d_model", ",", "d_model", ")", ",", "4", ")", "\n", "self", ".", "WGs", "=", "clones", "(", "nn", ".", "Linear", "(", "geo_feature_dim", ",", "1", ",", "bias", "=", "True", ")", ",", "h", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "attn", "=", "None", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxMultiHeadedAttention.forward": [[158, 217], ["input_query.size", "input_key.size", "input_value.size", "input_query.size", "resnet_generator_vg.BoxRelationalEmbedding", "BoxRelationalEmbedding.view", "query.permute().contiguous().view", "key.permute().contiguous().view", "value.permute().contiguous().view", "list", "list.insert", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "resnet_generator_vg.box_attention", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "resnet_generator_vg.BoxMultiHeadedAttention.layer_norm0", "resnet_generator_vg.BoxMultiHeadedAttention.dropout", "resnet_generator_vg.BoxMultiHeadedAttention.layer_norm", "l().view", "l().view", "zip", "query.permute().contiguous", "key.permute().contiguous", "value.permute().contiguous", "x.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "l", "l", "query.permute", "key.permute", "value.permute", "x.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding", "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention"], ["", "def", "forward", "(", "self", ",", "input_query", ",", "input_key", ",", "input_value", ",", "input_box", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"Implements Figure 2 of Relation Network for Object Detection\"", "\n", "# if mask is not None:", "\n", "# Same mask applied to all h heads.", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "h", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "input_query", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "input_key", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "input_value", ".", "size", "(", ")", "\n", "\n", "nbatches", "=", "input_query", ".", "size", "(", "0", ")", "\n", "\n", "residual", "=", "input_query", "\n", "\n", "# tensor with entries R_mn given by a hardcoded embedding of the relative position between bbox_m and bbox_n", "\n", "relative_geometry_embeddings", "=", "BoxRelationalEmbedding", "(", "input_box", ",", "trignometric_embedding", "=", "self", ".", "trignometric_embedding", ")", "\n", "flatten_relative_geometry_embeddings", "=", "relative_geometry_embeddings", ".", "view", "(", "-", "1", ",", "self", ".", "dim_g", ")", "\n", "# print(flatten_relative_geometry_embeddings.shape)", "\n", "\n", "# 1) Do all the linear projections in batch from d_model => h x d_k", "\n", "query", ",", "key", ",", "value", "=", "[", "l", "(", "x", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", ",", "self", ".", "d_k", ")", "\n", "for", "l", ",", "x", "in", "zip", "(", "self", ".", "linears", ",", "(", "input_query", ",", "input_key", ",", "input_value", ")", ")", "]", "\n", "\n", "q", "=", "query", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "key", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "value", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "box_size_per_head", "=", "list", "(", "relative_geometry_embeddings", ".", "shape", "[", ":", "3", "]", ")", "\n", "box_size_per_head", ".", "insert", "(", "1", ",", "1", ")", "\n", "relative_geometry_weights_per_head", "=", "[", "l", "(", "flatten_relative_geometry_embeddings", ")", ".", "view", "(", "box_size_per_head", ")", "for", "l", "in", "self", ".", "WGs", "]", "\n", "relative_geometry_weights", "=", "torch", ".", "cat", "(", "(", "relative_geometry_weights_per_head", ")", ",", "1", ")", "\n", "relative_geometry_weights", "=", "F", ".", "relu", "(", "relative_geometry_weights", ")", "\n", "\n", "# 2) Apply attention on all the projected vectors in batch.", "\n", "x", ",", "self", ".", "box_attn", "=", "box_attention", "(", "q", ",", "k", ",", "v", ",", "relative_geometry_weights", ",", "mask", "=", "mask", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "# print(x.shape)", "\n", "\n", "# 3) \"Concat\" using a view and apply a final linear.", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "nbatches", ",", "-", "1", ",", "self", ".", "h", "*", "self", ".", "d_k", ")", "\n", "\n", "# An extra internal skip connection is added. This is only", "\n", "# kept here for compatibility with some legacy models. In", "\n", "# general, there is no advantage in using it, as there is", "\n", "# already an outer skip connection surrounding this layer.", "\n", "# if self.legacy_extra_skip:", "\n", "#    x = input_value + x", "\n", "# print(residual.shape)", "\n", "\n", "output", "=", "self", ".", "layer_norm0", "(", "x", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "linears", "[", "-", "1", "]", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ScaledDotProductAttention.__init__": [[222, 227], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Softmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ScaledDotProductAttention.forward": [[228, 246], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "resnet_generator_vg.ScaledDotProductAttention.softmax", "resnet_generator_vg.ScaledDotProductAttention.dropout", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "k.transpose", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "attn.masked_fill.masked_fill.masked_fill", "mask.unsqueeze().expand.unsqueeze().expand.size", "q.size", "mask.unsqueeze().expand.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", ")", ":", "\n", "\n", "# if mask is not None:", "\n", "#    mask = mask.unsqueeze(1)", "\n", "\n", "        ", "attn", "=", "torch", ".", "bmm", "(", "q", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "# print(mask.shape)", "\n", "# print(attn.shape)", "\n", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "# print(attn.shape)", "\n", "", "attn", "=", "attn", "/", "self", ".", "temperature", "\n", "log_attn", "=", "F", ".", "log_softmax", "(", "attn", ",", "2", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "attn", "=", "self", ".", "dropout", "(", "attn", ")", "\n", "output", "=", "torch", ".", "bmm", "(", "attn", ",", "v", ")", "\n", "return", "output", ",", "attn", ",", "log_attn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.MultiHeadAttention.__init__": [[251, 271], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "resnet_generator_vg.ScaledDotProductAttention", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.Dropout", "torch.Dropout", "torch.Dropout", "np.sqrt", "np.sqrt", "np.sqrt", "np.power"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["def", "__init__", "(", "self", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_qs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_ks", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_k", ")", ")", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "self", ".", "w_vs", ".", "weight", ",", "mean", "=", "0", ",", "std", "=", "np", ".", "sqrt", "(", "2.0", "/", "(", "d_model", "+", "d_v", ")", ")", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "np", ".", "power", "(", "d_k", ",", "0.5", ")", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "layer_norm0", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.MultiHeadAttention.forward": [[272, 299], ["q.permute().contiguous().view.permute().contiguous().view.size", "k.permute().contiguous().view.permute().contiguous().view.size", "v.permute().contiguous().view.permute().contiguous().view.size", "resnet_generator_vg.MultiHeadAttention.w_qs().view", "resnet_generator_vg.MultiHeadAttention.w_ks().view", "resnet_generator_vg.MultiHeadAttention.w_vs().view", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "resnet_generator_vg.MultiHeadAttention.attention", "resnet_generator_vg.MultiHeadAttention.view", "resnet_generator_vg.MultiHeadAttention.permute().contiguous().view", "resnet_generator_vg.MultiHeadAttention.layer_norm0", "resnet_generator_vg.MultiHeadAttention.dropout", "resnet_generator_vg.MultiHeadAttention.layer_norm", "resnet_generator_vg.MultiHeadAttention.fc", "resnet_generator_vg.MultiHeadAttention.w_qs", "resnet_generator_vg.MultiHeadAttention.w_ks", "resnet_generator_vg.MultiHeadAttention.w_vs", "q.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "k.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "v.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "resnet_generator_vg.MultiHeadAttention.permute().contiguous", "q.permute().contiguous().view.permute().contiguous().view.permute", "k.permute().contiguous().view.permute().contiguous().view.permute", "v.permute().contiguous().view.permute().contiguous().view.permute", "resnet_generator_vg.MultiHeadAttention.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "        ", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b0", ",", "len_q", ",", "_", "=", "q", ".", "size", "(", ")", "\n", "sz_b", ",", "len_k", ",", "_", "=", "k", ".", "size", "(", ")", "\n", "sz_b", ",", "len_v", ",", "_", "=", "v", ".", "size", "(", ")", "\n", "\n", "residual", "=", "q", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "q", "=", "q", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_q", ",", "d_k", ")", "# (n*b) x lq x dk", "\n", "k", "=", "k", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_k", ",", "d_k", ")", "# (n*b) x lk x dk", "\n", "v", "=", "v", ".", "permute", "(", "2", ",", "0", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "len_v", ",", "d_v", ")", "# (n*b) x lv x dv", "\n", "\n", "output", ",", "attn", ",", "log_attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "output", "=", "output", ".", "view", "(", "n_head", ",", "sz_b", ",", "len_q", ",", "d_v", ")", "\n", "output", "=", "output", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b0", ",", "len_q", ",", "-", "1", ")", "# b x lq x (n*dv)", "\n", "# print(output.shape)", "\n", "output", "=", "self", ".", "layer_norm0", "(", "output", "+", "residual", ")", "\n", "new_residual", "=", "output", "\n", "\n", "output", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "output", ")", ")", "\n", "output", "=", "self", ".", "layer_norm", "(", "output", "+", "new_residual", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator64.__init__": [[302, 327], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_vg.ResnetGenerator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "128", ")", "\n", "\n", "num_w", "=", "128", "+", "128", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator64.forward": [[328, 356], ["resnet_generator_vg.ResnetGenerator64.label_embedding", "z.view.view.view", "label_embedding.view.view.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_vg.ResnetGenerator64.mapping", "resnet_generator_vg.ResnetGenerator64.mask_regress", "resnet_generator_vg.ResnetGenerator64.fc().view", "resnet_generator_vg.ResnetGenerator64.res2", "resnet_generator_vg.ResnetGenerator64.res3", "resnet_generator_vg.ResnetGenerator64.res4", "resnet_generator_vg.ResnetGenerator64.res5", "resnet_generator_vg.ResnetGenerator64.final", "z.view.view.size", "z.view.view.size", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.ResnetGenerator64.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "\n", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator64.init_parameter": [[357, 363], ["resnet_generator_vg.ResnetGenerator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128.__init__": [[366, 391], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_vg.ResnetGenerator128.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128.forward": [[392, 431], ["print", "z.view.view.view", "resnet_generator_vg.ResnetGenerator128.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_vg.ResnetGenerator128.mapping", "resnet_generator_vg.ResnetGenerator128.mask_regress", "resnet_generator_vg.ResnetGenerator128.fc().view", "resnet_generator_vg.ResnetGenerator128.res1", "resnet_generator_vg.ResnetGenerator128.res2", "resnet_generator_vg.ResnetGenerator128.res3", "resnet_generator_vg.ResnetGenerator128.res4", "resnet_generator_vg.ResnetGenerator128.res5", "resnet_generator_vg.ResnetGenerator128.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.ResnetGenerator128.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_vg.ResnetGenerator128.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.ResnetGenerator128.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "print", "(", "y", ".", "shape", ")", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128.init_parameter": [[432, 438], ["resnet_generator_vg.ResnetGenerator128.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128_nf.__init__": [[441, 462], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_vg.ResnetGenerator128_nf.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResnetGenerator128_nf", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "# print(self.mapping)", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128_nf.forward": [[464, 502], ["z.view.view.view", "resnet_generator_vg.ResnetGenerator128_nf.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_vg.ResnetGenerator128_nf.mapping", "resnet_generator_vg.ResnetGenerator128_nf.mask_regress", "resnet_generator_vg.ResnetGenerator128_nf.fc().view", "resnet_generator_vg.ResnetGenerator128_nf.res1", "resnet_generator_vg.ResnetGenerator128_nf.res2", "resnet_generator_vg.ResnetGenerator128_nf.res3", "resnet_generator_vg.ResnetGenerator128_nf.res4", "resnet_generator_vg.ResnetGenerator128_nf.res5", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.ResnetGenerator128_nf.label_embedding", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_vg.ResnetGenerator128_nf.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.ResnetGenerator128_nf.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", "\n", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResnetGenerator128_nf.init_parameter": [[503, 509], ["resnet_generator_vg.ResnetGenerator128_nf.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock.__init__": [[512, 524], ["torch.Module.__init__", "resnet_generator_vg.conv2d", "resnet_generator_vg.conv2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "norm_module.SpatialAdaptiveSynBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock.residual": [[525, 536], ["resnet_generator_vg.ResBlock.b1", "resnet_generator_vg.ResBlock.activation", "resnet_generator_vg.ResBlock.conv1", "resnet_generator_vg.ResBlock.b2", "resnet_generator_vg.ResBlock.activation", "resnet_generator_vg.ResBlock.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock.shortcut": [[537, 543], ["resnet_generator_vg.ResBlock.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock.forward": [[544, 546], ["resnet_generator_vg.ResBlock.residual", "resnet_generator_vg.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_part.__init__": [[549, 561], ["torch.Module.__init__", "resnet_generator_vg.conv2d", "resnet_generator_vg.conv2d", "SpatialAdaptiveSynBatchNorm2d_part", "SpatialAdaptiveSynBatchNorm2d_part", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "h_ch", "=", "None", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "upsample", "=", "False", ",", "num_w", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResBlock_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "h_ch", "=", "h_ch", "if", "h_ch", "else", "out_ch", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "self", ".", "h_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "self", ".", "h_ch", ",", "out_ch", ",", "ksize", ",", "pad", "=", "pad", ")", "\n", "self", ".", "b1", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "in_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "b2", "=", "SpatialAdaptiveSynBatchNorm2d_part", "(", "self", ".", "h_ch", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "learnable_sc", "=", "in_ch", "!=", "out_ch", "or", "upsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_part.residual": [[562, 573], ["resnet_generator_vg.ResBlock_part.b1", "resnet_generator_vg.ResBlock_part.activation", "resnet_generator_vg.ResBlock_part.conv1", "resnet_generator_vg.ResBlock_part.b2", "resnet_generator_vg.ResBlock_part.activation", "resnet_generator_vg.ResBlock_part.conv2", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "b1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_part.shortcut": [[574, 580], ["resnet_generator_vg.ResBlock_part.c_sc", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_part.forward": [[581, 583], ["resnet_generator_vg.ResBlock_part.residual", "resnet_generator_vg.ResBlock_part.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_1.__init__": [[586, 604], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.init.xavier_uniform", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "ResBlock_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "SynchronizedBatchNorm2d", "(", "in_ch", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv1", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv2", ".", "weight", ".", "data", ",", "1.", ")", "\n", "nn", ".", "init", ".", "xavier_uniform", "(", "self", ".", "conv3", ".", "weight", ".", "data", ",", "1.", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "SynchronizedBatchNorm2d", "(", "in_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv1", ",", "\n", "SynchronizedBatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "self", ".", "conv2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.ResBlock_1.forward": [[606, 609], ["resnet_generator_vg.ResBlock_1.model", "resnet_generator_vg.ResBlock_1.conv3", "resnet_generator_vg.ResBlock_1.relu", "resnet_generator_vg.ResBlock_1.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "+", "(", "self", ".", "conv3", "(", "self", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.background_foreground_generator.__init__": [[620, 629], ["torch.Module.__init__", "resnet_generator_vg.ResnetGenerator128_nf", "resnet_generator_vg.ResnetGenerator128_nf", "resnet_generator_vg.ResBlock_1", "torch.Sequential", "torch.Sequential", "torch.Sequential", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "background_cla", ",", "foreground_cla", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "background_foreground_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "background_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "background_cla", ")", "\n", "self", ".", "foreground_g", "=", "ResnetGenerator128_nf", "(", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "foreground_cla", ")", "\n", "self", ".", "combination", "=", "ResBlock_1", "(", "64", "*", "2", ",", "64", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "64", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.background_foreground_generator.forward": [[630, 637], ["resnet_generator_vg.background_foreground_generator.background_g", "resnet_generator_vg.background_foreground_generator.foreground_g", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.background_foreground_generator.combination", "resnet_generator_vg.background_foreground_generator.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "bbox_f", ",", "z_b", ",", "bbox_b", ",", "z_im_f", "=", "None", ",", "y_f", "=", "None", ",", "z_im_b", "=", "None", ",", "y_b", "=", "None", ")", ":", "\n", "        ", "background_feat", "=", "self", ".", "background_g", "(", "z_b", ",", "bbox_b", ",", "z_im", "=", "z_im_b", ",", "y", "=", "y_b", ")", "\n", "foreground_feat", "=", "self", ".", "foreground_g", "(", "z_f", ",", "bbox_f", ",", "z_im", "=", "z_im_f", ",", "y", "=", "y_f", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "(", "background_feat", ",", "foreground_feat", ")", ",", "dim", "=", "1", ")", "\n", "feat", "=", "self", ".", "combination", "(", "feat", ")", "\n", "im", "=", "self", ".", "final", "(", "feat", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator.__init__": [[640, 667], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_vg.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "resnet_generator_vg.ResBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mask_regression.MaskRegressNet", "resnet_generator_vg.context_aware_generator.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator.forward": [[668, 720], ["z.view.view.view", "resnet_generator_vg.context_aware_generator.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_vg.context_aware_generator.mapping().view", "resnet_generator_vg.context_aware_generator.context", "w.view.view.view", "resnet_generator_vg.context_aware_generator.mask_regress", "resnet_generator_vg.context_aware_generator.fc().view", "resnet_generator_vg.context_aware_generator.res1", "resnet_generator_vg.context_aware_generator.res2", "resnet_generator_vg.context_aware_generator.res3", "resnet_generator_vg.context_aware_generator.res4", "resnet_generator_vg.context_aware_generator.res5", "resnet_generator_vg.context_aware_generator.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.context_aware_generator.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_vg.context_aware_generator.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.context_aware_generator.mapping", "resnet_generator_vg.context_aware_generator.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "# print(z.shape)", "\n", "# print(bbox.shape)", "\n", "# print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# context aware w", "\n", "# print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "# print(bbox.shape)", "\n", "\n", "# save_path = 'samples/tmp/edit/app/1292_bmask_0.npy'", "\n", "# np.save(save_path, bbox.cpu().detach().numpy())", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator.init_parameter": [[721, 727], ["resnet_generator_vg.context_aware_generator.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator_part.__init__": [[730, 757], ["torch.Module.__init__", "torch.Embedding", "torch.Embedding", "torch.Embedding", "resnet_generator_vg.BoxMultiHeadedAttention", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "resnet_generator_vg.ResBlock_part", "resnet_generator_vg.ResBlock_part", "resnet_generator_vg.ResBlock_part", "resnet_generator_vg.ResBlock_part", "resnet_generator_vg.ResBlock_part", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MaskRegressNet_part", "resnet_generator_vg.context_aware_generator_part.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "sync_batchnorm.SynchronizedBatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_generator_vg.conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "ch", "=", "64", ",", "z_dim", "=", "128", ",", "num_classes", "=", "10", ",", "output_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "context_aware_generator_part", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "label_embedding", "=", "nn", ".", "Embedding", "(", "num_classes", ",", "180", ")", "\n", "\n", "num_w", "=", "128", "+", "180", "\n", "self", ".", "context", "=", "BoxMultiHeadedAttention", "(", "1", ",", "num_w", ",", "dropout", "=", "0.0", ")", "\n", "self", ".", "fc", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "z_dim", ",", "4", "*", "4", "*", "16", "*", "ch", ")", ")", "\n", "\n", "self", ".", "res1", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res2", "=", "ResBlock_part", "(", "ch", "*", "16", ",", "ch", "*", "8", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res3", "=", "ResBlock_part", "(", "ch", "*", "8", ",", "ch", "*", "4", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res4", "=", "ResBlock_part", "(", "ch", "*", "4", ",", "ch", "*", "2", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "res5", "=", "ResBlock_part", "(", "ch", "*", "2", ",", "ch", "*", "1", ",", "upsample", "=", "True", ",", "num_w", "=", "num_w", ")", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "SynchronizedBatchNorm2d", "(", "ch", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "conv2d", "(", "ch", ",", "output_dim", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "# mapping function", "\n", "mapping", "=", "list", "(", ")", "\n", "self", ".", "mapping", "=", "nn", ".", "Sequential", "(", "*", "mapping", ")", "\n", "\n", "self", ".", "mask_regress", "=", "MaskRegressNet_part", "(", "num_w", ")", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator_part.forward": [[758, 810], ["z.view.view.view", "resnet_generator_vg.context_aware_generator_part.view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "resnet_generator_vg.context_aware_generator_part.mapping().view", "resnet_generator_vg.context_aware_generator_part.context", "w.view.view.view", "resnet_generator_vg.context_aware_generator_part.mask_regress", "resnet_generator_vg.context_aware_generator_part.fc().view", "resnet_generator_vg.context_aware_generator_part.res1", "resnet_generator_vg.context_aware_generator_part.res2", "resnet_generator_vg.context_aware_generator_part.res3", "resnet_generator_vg.context_aware_generator_part.res4", "resnet_generator_vg.context_aware_generator_part.res5", "resnet_generator_vg.context_aware_generator_part.final", "z.view.view.size", "z.view.view.size", "y.dim", "y.size", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.context_aware_generator_part.label_embedding", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "resnet_generator_vg.context_aware_generator_part.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet_generator_vg.context_aware_generator_part.mapping", "resnet_generator_vg.context_aware_generator_part.fc", "torch.cat().view.view", "torch.cat().view.view", "torch.cat().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "bbox", ",", "z_im", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "# print(z.shape)", "\n", "# print(bbox.shape)", "\n", "# print(y.shape)", "\n", "        ", "b", ",", "o", "=", "z", ".", "size", "(", "0", ")", ",", "z", ".", "size", "(", "1", ")", "\n", "# print(y.shape)", "\n", "if", "y", ".", "dim", "(", ")", "==", "3", ":", "\n", "            ", "_", ",", "_", ",", "num_label", "=", "y", ".", "size", "(", ")", "\n", "label_embedding", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "num_label", ")", ":", "\n", "                ", "label_embedding", ".", "append", "(", "self", ".", "label_embedding", "[", "idx", "]", "(", "y", "[", ":", ",", ":", ",", "idx", "]", ")", ")", "\n", "", "label_embedding", "=", "torch", ".", "cat", "(", "label_embedding", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "label_embedding", "=", "self", ".", "label_embedding", "(", "y", ")", "\n", "\n", "", "z", "=", "z", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "label_embedding", "=", "label_embedding", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "\n", "latent_vector", "=", "torch", ".", "cat", "(", "(", "z", ",", "label_embedding", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "\n", "w", "=", "self", ".", "mapping", "(", "latent_vector", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", ")", ".", "view", "(", "b", ",", "o", ",", "-", "1", ")", "\n", "# context aware w", "\n", "# print(w.shape)", "\n", "w", "=", "self", ".", "context", "(", "w", ",", "w", ",", "w", ",", "bbox", ",", "y", ")", "\n", "# print(w.shape)", "\n", "w", "=", "w", ".", "view", "(", "b", "*", "o", ",", "-", "1", ")", "\n", "# print(w.shape)", "\n", "# preprocess bbox", "\n", "bbox", ",", "bbox1", ",", "bbox2", "=", "self", ".", "mask_regress", "(", "w", ",", "bbox", ")", "\n", "\n", "# print(bbox.shape)", "\n", "# print(bbox1.shape)", "\n", "# print(bbox2.shape)", "\n", "\n", "if", "z_im", "is", "None", ":", "\n", "            ", "z_im", "=", "torch", ".", "randn", "(", "(", "b", ",", "128", ")", ",", "device", "=", "z", ".", "device", ")", "\n", "\n", "# 4x4", "\n", "", "x", "=", "self", ".", "fc", "(", "z_im", ")", ".", "view", "(", "b", ",", "-", "1", ",", "4", ",", "4", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "res1", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "res2", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 32x32", "\n", "x", "=", "self", ".", "res3", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "res4", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "res5", "(", "x", ",", "w", ",", "bbox", ",", "bbox1", ",", "bbox2", ")", "\n", "# to RGB", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.context_aware_generator_part.init_parameter": [[811, 817], ["resnet_generator_vg.context_aware_generator_part.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.clones": [[10, 13], ["torch.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["def", "clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.BoxRelationalEmbedding": [[15, 75], ["f_g.cuda.cuda", "f_g.cuda.size", "torch.chunk", "torch.chunk", "torch.chunk", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "delta_h.view.size", "delta_x.view.view", "delta_y.view.view", "delta_w.view.view", "delta_h.view.view", "torch.cat", "torch.cat", "torch.cat", "cx.view", "torch.abs", "torch.abs", "torch.abs", "cy.view", "torch.abs", "torch.abs", "torch.abs", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "dim_mat.view.view", "position_mat.view.view", "mul_mat.view.view", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cat", "torch.cat", "torch.cat", "w.view", "h.view", "torch.pow", "torch.pow", "torch.pow", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "BoxRelationalEmbedding", "(", "f_g", ",", "dim_g", "=", "64", ",", "wave_len", "=", "1000", ",", "trignometric_embedding", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Given a tensor with bbox coordinates for detected objects on each batch image,\n    this function computes a matrix for each image\n    with entry (i,j) given by a vector representation of the\n    displacement between the coordinates of bbox_i, and bbox_j\n    input: np.array of shape=(batch_size, max_nr_bounding_boxes, 4)\n    output: np.array of shape=(batch_size, max_nr_bounding_boxes, max_nr_bounding_boxes, 64)\n    \"\"\"", "\n", "# returns a relational embedding for each pair of bboxes, with dimension = dim_g", "\n", "# follow implementation of https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1014-L1055", "\n", "\n", "f_g", "=", "f_g", ".", "cuda", "(", ")", "\n", "\n", "batch_size", "=", "f_g", ".", "size", "(", "0", ")", "\n", "\n", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", "=", "torch", ".", "chunk", "(", "f_g", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "\n", "cx", "=", "(", "x_min", "+", "x_max", ")", "*", "0.5", "\n", "cy", "=", "(", "y_min", "+", "y_max", ")", "*", "0.5", "\n", "w", "=", "(", "x_max", "-", "x_min", ")", "+", "1.", "\n", "h", "=", "(", "y_max", "-", "y_min", ")", "+", "1.", "\n", "\n", "# cx.view(1,-1) transposes the vector cx, and so dim(delta_x) = (dim(cx), dim(cx))", "\n", "delta_x", "=", "cx", "-", "cx", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_x", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_x", "/", "w", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_x", "=", "torch", ".", "log", "(", "delta_x", ")", "\n", "\n", "delta_y", "=", "cy", "-", "cy", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", "\n", "delta_y", "=", "torch", ".", "clamp", "(", "torch", ".", "abs", "(", "delta_y", "/", "h", ")", ",", "min", "=", "1e-3", ")", "\n", "delta_y", "=", "torch", ".", "log", "(", "delta_y", ")", "\n", "\n", "delta_w", "=", "torch", ".", "log", "(", "w", "/", "w", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "delta_h", "=", "torch", ".", "log", "(", "h", "/", "h", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ")", "\n", "\n", "matrix_size", "=", "delta_h", ".", "size", "(", ")", "\n", "delta_x", "=", "delta_x", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_y", "=", "delta_y", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_w", "=", "delta_w", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "delta_h", "=", "delta_h", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "1", ")", "\n", "\n", "position_mat", "=", "torch", ".", "cat", "(", "(", "delta_x", ",", "delta_y", ",", "delta_w", ",", "delta_h", ")", ",", "-", "1", ")", "\n", "\n", "if", "trignometric_embedding", "==", "True", ":", "\n", "        ", "feat_range", "=", "torch", ".", "arange", "(", "dim_g", "/", "8", ")", ".", "cuda", "(", ")", "\n", "dim_mat", "=", "feat_range", "/", "(", "dim_g", "/", "8", ")", "\n", "dim_mat", "=", "1.", "/", "(", "torch", ".", "pow", "(", "wave_len", ",", "dim_mat", ")", ")", "\n", "\n", "dim_mat", "=", "dim_mat", ".", "view", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "position_mat", "=", "position_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "4", ",", "-", "1", ")", "\n", "position_mat", "=", "100.", "*", "position_mat", "\n", "\n", "mul_mat", "=", "position_mat", "*", "dim_mat", "\n", "mul_mat", "=", "mul_mat", ".", "view", "(", "batch_size", ",", "matrix_size", "[", "1", "]", ",", "matrix_size", "[", "2", "]", ",", "-", "1", ")", "\n", "sin_mat", "=", "torch", ".", "sin", "(", "mul_mat", ")", "\n", "cos_mat", "=", "torch", ".", "cos", "(", "mul_mat", ")", "\n", "embedding", "=", "torch", ".", "cat", "(", "(", "sin_mat", ",", "cos_mat", ")", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "embedding", "=", "position_mat", "\n", "", "return", "(", "embedding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.box_attention": [[77, 123], ["key.size", "key.transpose", "torch.matmul", "torch.matmul", "torch.matmul", "box_relation_embds_matrix.squeeze", "w_g.masked_fill.masked_fill", "torch.matmul", "torch.matmul", "torch.matmul", "mask.unsqueeze().expand.unsqueeze().expand", "value.size", "box_relation_embds_matrix.size", "np.sqrt", "scaled_dot.masked_fill.masked_fill", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "dropout", "mask.unsqueeze().expand.size", "query.size", "mask.unsqueeze().expand.size", "mask.unsqueeze().expand.unsqueeze"], "function", ["None"], ["", "def", "box_attention", "(", "query", ",", "key", ",", "value", ",", "box_relation_embds_matrix", ",", "mask", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "    ", "'''\n    Compute 'Scaled Dot Product Attention as in paper Relation Networks for Object Detection'.\n    Follow the implementation in https://github.com/heefe92/Relation_Networks-pytorch/blob/master/model.py#L1026-L1055\n    '''", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "mask", ".", "size", "(", "0", ")", ",", "query", ".", "size", "(", "1", ")", ",", "mask", ".", "size", "(", "1", ")", ")", "\n", "\n", "", "N", "=", "value", ".", "size", "(", ")", "[", ":", "2", "]", "\n", "dim_k", "=", "key", ".", "size", "(", "-", "1", ")", "\n", "dim_g", "=", "box_relation_embds_matrix", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "# print(mask.shape)", "\n", "\n", "w_q", "=", "query", "\n", "w_k", "=", "key", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "w_v", "=", "value", "\n", "# print(w_q.shape)", "\n", "# print(w_k.shape)", "\n", "# attention weights", "\n", "scaled_dot", "=", "torch", ".", "matmul", "(", "w_q", ",", "w_k", ")", "\n", "# print(scaled_dot.shape)", "\n", "scaled_dot", "=", "scaled_dot", "/", "np", ".", "sqrt", "(", "dim_k", ")", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "scaled_dot", "=", "scaled_dot", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "#w_g = box_relation_embds_matrix.view(N,N)", "\n", "", "w_g", "=", "box_relation_embds_matrix", ".", "squeeze", "(", "1", ")", "\n", "w_g", "=", "w_g", ".", "masked_fill", "(", "mask", "==", "0", ",", "0", ")", "\n", "w_a", "=", "scaled_dot", "\n", "#w_a = scaled_dot.view(N,N)", "\n", "# print(w_g.shape)", "\n", "# print(w_a.shape)", "\n", "\n", "# multiplying log of geometric weights by feature weights", "\n", "# print(w_a)", "\n", "# print(w_g)", "\n", "# w_mn = torch.log(torch.clamp(w_g, min=1e-6)) + w_a", "\n", "w_mn", "=", "w_a", "\n", "w_mn", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "w_mn", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "        ", "w_mn", "=", "dropout", "(", "w_mn", ")", "\n", "\n", "", "output", "=", "torch", ".", "matmul", "(", "w_mn", ",", "w_v", ")", "\n", "\n", "return", "output", ",", "w_mn", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.resnet_generator_vg.conv2d": [[611, 617], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["", "", "def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator128.__init__": [[19, 40], ["torch.Module.__init__", "rcnn_discriminator_app.OptimizedBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "torchvision.ops.RoIAlign", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l7", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "4.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator128.forward": [[41, 82], ["bbox.size", "rcnn_discriminator_app.ResnetDiscriminator128.block1", "rcnn_discriminator_app.ResnetDiscriminator128.block2", "rcnn_discriminator_app.ResnetDiscriminator128.block3", "rcnn_discriminator_app.ResnetDiscriminator128.block4", "rcnn_discriminator_app.ResnetDiscriminator128.block5", "rcnn_discriminator_app.ResnetDiscriminator128.block6", "rcnn_discriminator_app.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator128.l7", "rcnn_discriminator_app.ResnetDiscriminator128.block_obj3", "rcnn_discriminator_app.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator128.roi_align_s", "rcnn_discriminator_app.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator128.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_app.ResnetDiscriminator128.block_obj5", "rcnn_discriminator_app.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator128.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator128.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_app.ResnetDiscriminator128.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block3", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l7", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "64", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "64", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj3", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "obj_feat_s", ")", "\n", "# print(obj_feat_s.shape)", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj4", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj5", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator128_app.__init__": [[85, 110], ["torch.Module.__init__", "rcnn_discriminator_app.OptimizedBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "torchvision.ops.RoIAlign", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator128_app", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l7", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "4.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "# apperance discriminator", "\n", "self", ".", "app_conv", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l_y_app", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "8", ")", ")", "\n", "self", ".", "app", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator128_app.forward": [[111, 169], ["bbox.size", "rcnn_discriminator_app.ResnetDiscriminator128_app.block1", "rcnn_discriminator_app.ResnetDiscriminator128_app.block2", "rcnn_discriminator_app.ResnetDiscriminator128_app.block3", "rcnn_discriminator_app.ResnetDiscriminator128_app.block4", "rcnn_discriminator_app.ResnetDiscriminator128_app.block5", "rcnn_discriminator_app.ResnetDiscriminator128_app.block6", "rcnn_discriminator_app.ResnetDiscriminator128_app.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator128_app.l7", "rcnn_discriminator_app.ResnetDiscriminator128_app.block_obj3", "rcnn_discriminator_app.ResnetDiscriminator128_app.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator128_app.roi_align_s", "rcnn_discriminator_app.ResnetDiscriminator128_app.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator128_app.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_app.ResnetDiscriminator128_app.app_conv", "rcnn_discriminator_app.ResnetDiscriminator128_app.activation", "app_feat.view.view.size", "app_feat.view.view.view", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_y_app().unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_app.ResnetDiscriminator128_app.block_obj5", "rcnn_discriminator_app.ResnetDiscriminator128_app.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_obj", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "rcnn_discriminator_app.ResnetDiscriminator128_app.app().sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "app_feat.view.view.permute", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_y_app().unsqueeze", "rcnn_discriminator_app.ResnetDiscriminator128_app.app", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_y_app", "rcnn_discriminator_app.ResnetDiscriminator128_app.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block3", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l7", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "64", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "64", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj3", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "obj_feat_s", ")", "\n", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj4", "(", "x2", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "# apperance", "\n", "app_feat", "=", "self", ".", "app_conv", "(", "obj_feat", ")", "\n", "app_feat", "=", "self", ".", "activation", "(", "app_feat", ")", "\n", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", "=", "app_feat", ".", "size", "(", ")", "\n", "app_feat", "=", "app_feat", ".", "view", "(", "s1", ",", "s2", ",", "s3", "*", "s4", ")", "\n", "app_gram", "=", "torch", ".", "bmm", "(", "app_feat", ",", "app_feat", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "/", "s2", "\n", "\n", "app_y", "=", "self", ".", "l_y_app", "(", "y", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "s1", ",", "s2", ",", "s2", ")", "\n", "app_all", "=", "torch", ".", "cat", "(", "[", "app_gram", ",", "app_y", "]", ",", "dim", "=", "-", "1", ")", "\n", "out_app", "=", "self", ".", "app", "(", "app_all", ")", ".", "sum", "(", "1", ")", "/", "s2", "\n", "\n", "# original one for single instance", "\n", "obj_feat", "=", "self", ".", "block_obj5", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "# print(obj_feat.shape)", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", ",", "out_app", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator64.__init__": [[172, 191], ["torch.Module.__init__", "rcnn_discriminator_app.OptimizedBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ROIAlign", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "rcnn_discriminator_app.ResnetDiscriminator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "input_dim", ",", "ch", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_im", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "# object path", "\n", "self", ".", "roi_align", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "2.0", ",", "0", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "8", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "8", ")", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator64.forward": [[192, 217], ["bbox.size", "rcnn_discriminator_app.ResnetDiscriminator64.block1", "rcnn_discriminator_app.ResnetDiscriminator64.block2", "rcnn_discriminator_app.ResnetDiscriminator64.block3", "rcnn_discriminator_app.ResnetDiscriminator64.block4", "rcnn_discriminator_app.ResnetDiscriminator64.block5", "rcnn_discriminator_app.ResnetDiscriminator64.activation", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "rcnn_discriminator_app.ResnetDiscriminator64.l_im", "rcnn_discriminator_app.ResnetDiscriminator64.roi_align", "rcnn_discriminator_app.ResnetDiscriminator64.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator64.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator64.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator64.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_app.ResnetDiscriminator64.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l_im", "(", "x", ")", "\n", "\n", "# obj path", "\n", "obj_feat", "=", "self", ".", "roi_align", "(", "x1", ",", "bbox", ")", "\n", "obj_feat", "=", "self", ".", "block_obj4", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator64.init_parameter": [[218, 224], ["rcnn_discriminator_app.ResnetDiscriminator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator256.__init__": [[227, 249], ["torch.Module.__init__", "rcnn_discriminator_app.OptimizedBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ROIAlign", "ROIAlign", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "rcnn_discriminator_app.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block7", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l8", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "16.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResnetDiscriminator256.forward": [[250, 292], ["bbox.size", "rcnn_discriminator_app.ResnetDiscriminator256.block1", "rcnn_discriminator_app.ResnetDiscriminator256.block2", "rcnn_discriminator_app.ResnetDiscriminator256.block3", "rcnn_discriminator_app.ResnetDiscriminator256.block4", "rcnn_discriminator_app.ResnetDiscriminator256.block5", "rcnn_discriminator_app.ResnetDiscriminator256.block6", "rcnn_discriminator_app.ResnetDiscriminator256.block7", "rcnn_discriminator_app.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator256.l8", "rcnn_discriminator_app.ResnetDiscriminator256.block_obj4", "rcnn_discriminator_app.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_app.ResnetDiscriminator256.roi_align_s", "rcnn_discriminator_app.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_app.ResnetDiscriminator256.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_app.ResnetDiscriminator256.block_obj6", "rcnn_discriminator_app.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator256.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_app.ResnetDiscriminator256.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_app.ResnetDiscriminator256.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 256x256", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block5", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block7", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l8", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "128", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "128", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj5", "(", "obj_feat_s", ")", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj5", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj6", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.OptimizedBlock.__init__": [[295, 302], ["torch.Module.__init__", "rcnn_discriminator_app.conv2d", "rcnn_discriminator_app.conv2d", "rcnn_discriminator_app.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "OptimizedBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.OptimizedBlock.forward": [[303, 310], ["rcnn_discriminator_app.OptimizedBlock.activation", "rcnn_discriminator_app.OptimizedBlock.conv2", "rcnn_discriminator_app.OptimizedBlock.conv1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "rcnn_discriminator_app.OptimizedBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "activation", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.OptimizedBlock.shortcut": [[311, 315], ["rcnn_discriminator_app.OptimizedBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "self", ".", "c_sc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResBlock.__init__": [[318, 327], ["torch.Module.__init__", "rcnn_discriminator_app.conv2d", "rcnn_discriminator_app.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "rcnn_discriminator_app.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "learnable_sc", "=", "(", "in_ch", "!=", "out_ch", ")", "or", "downsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResBlock.residual": [[328, 335], ["rcnn_discriminator_app.ResBlock.conv1", "rcnn_discriminator_app.ResBlock.conv2", "rcnn_discriminator_app.ResBlock.activation", "rcnn_discriminator_app.ResBlock.activation", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "", "def", "residual", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "conv1", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResBlock.shortcut": [[336, 342], ["rcnn_discriminator_app.ResBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.ResBlock.forward": [[343, 345], ["rcnn_discriminator_app.ResBlock.residual", "rcnn_discriminator_app.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator256.__init__": [[348, 351], ["torch.Module.__init__", "rcnn_discriminator_app.ResnetDiscriminator256"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator256", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator256.forward": [[352, 368], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_app.CombineDiscriminator256.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator128.__init__": [[371, 374], ["torch.Module.__init__", "rcnn_discriminator_app.ResnetDiscriminator128"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator128", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator128.forward": [[375, 394], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "bbox.view.view.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_app.CombineDiscriminator128.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "#idx = idx.cuda()", "\n", "# print(bbox)", "\n", "bbox", "=", "bbox", ".", "cuda", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator128_app.__init__": [[397, 400], ["torch.Module.__init__", "rcnn_discriminator_app.ResnetDiscriminator128_app"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator128_app", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator128_app", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator128_app.forward": [[401, 422], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "bbox.view.view.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_app.CombineDiscriminator128_app.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "#idx = idx.cuda()", "\n", "# print(bbox)", "\n", "bbox", "=", "bbox", ".", "cuda", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "# print(bbox.shape)", "\n", "# print(label.shape)", "\n", "d_out_img", ",", "d_out_obj", ",", "out_app", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", ",", "out_app", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator64.__init__": [[425, 428], ["torch.Module.__init__", "rcnn_discriminator_app.ResnetDiscriminator64"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator64", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.CombineDiscriminator64.forward": [[429, 445], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_app.CombineDiscriminator64.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_app.conv2d": [[10, 16], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator128.__init__": [[19, 40], ["torch.Module.__init__", "rcnn_discriminator_vg.OptimizedBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "torchvision.ops.RoIAlign", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l7", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "4.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator128.forward": [[41, 82], ["bbox.size", "rcnn_discriminator_vg.ResnetDiscriminator128.block1", "rcnn_discriminator_vg.ResnetDiscriminator128.block2", "rcnn_discriminator_vg.ResnetDiscriminator128.block3", "rcnn_discriminator_vg.ResnetDiscriminator128.block4", "rcnn_discriminator_vg.ResnetDiscriminator128.block5", "rcnn_discriminator_vg.ResnetDiscriminator128.block6", "rcnn_discriminator_vg.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator128.l7", "rcnn_discriminator_vg.ResnetDiscriminator128.block_obj3", "rcnn_discriminator_vg.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator128.roi_align_s", "rcnn_discriminator_vg.ResnetDiscriminator128.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator128.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_vg.ResnetDiscriminator128.block_obj5", "rcnn_discriminator_vg.ResnetDiscriminator128.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator128.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator128.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_vg.ResnetDiscriminator128.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block3", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l7", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "64", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "64", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj3", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "obj_feat_s", ")", "\n", "# print(obj_feat_s.shape)", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj4", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj5", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator128_app.__init__": [[85, 110], ["torch.Module.__init__", "rcnn_discriminator_vg.OptimizedBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torchvision.ops.RoIAlign", "torchvision.ops.RoIAlign", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator128_app", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l7", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "4.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "RoIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "# apperance discriminator", "\n", "self", ".", "app_conv", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l_y_app", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "8", ")", ")", "\n", "self", ".", "app", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator128_app.forward": [[111, 169], ["bbox.size", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block1", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block2", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block3", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block4", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block5", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block6", "rcnn_discriminator_vg.ResnetDiscriminator128_app.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l7", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block_obj3", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator128_app.roi_align_s", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator128_app.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_vg.ResnetDiscriminator128_app.app_conv", "rcnn_discriminator_vg.ResnetDiscriminator128_app.activation", "app_feat.view.view.size", "app_feat.view.view.view", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_y_app().unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_vg.ResnetDiscriminator128_app.block_obj5", "rcnn_discriminator_vg.ResnetDiscriminator128_app.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_obj", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "rcnn_discriminator_vg.ResnetDiscriminator128_app.app().sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "app_feat.view.view.permute", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_y_app().unsqueeze", "rcnn_discriminator_vg.ResnetDiscriminator128_app.app", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_y_app", "rcnn_discriminator_vg.ResnetDiscriminator128_app.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block3", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l7", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "64", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "64", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj3", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "obj_feat_s", ")", "\n", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj4", "(", "x2", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "# apperance", "\n", "app_feat", "=", "self", ".", "app_conv", "(", "obj_feat", ")", "\n", "app_feat", "=", "self", ".", "activation", "(", "app_feat", ")", "\n", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", "=", "app_feat", ".", "size", "(", ")", "\n", "app_feat", "=", "app_feat", ".", "view", "(", "s1", ",", "s2", ",", "s3", "*", "s4", ")", "\n", "app_gram", "=", "torch", ".", "bmm", "(", "app_feat", ",", "app_feat", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "/", "s2", "\n", "\n", "app_y", "=", "self", ".", "l_y_app", "(", "y", ")", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "s1", ",", "s2", ",", "s2", ")", "\n", "app_all", "=", "torch", ".", "cat", "(", "[", "app_gram", ",", "app_y", "]", ",", "dim", "=", "-", "1", ")", "\n", "out_app", "=", "self", ".", "app", "(", "app_all", ")", ".", "sum", "(", "1", ")", "/", "s2", "\n", "\n", "# original one for single instance", "\n", "obj_feat", "=", "self", ".", "block_obj5", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "# print(obj_feat.shape)", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", ",", "out_app", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.__init__": [[172, 191], ["torch.Module.__init__", "rcnn_discriminator_vg.OptimizedBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ROIAlign", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "input_dim", ",", "ch", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_im", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "# object path", "\n", "self", ".", "roi_align", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "2.0", ",", "0", ")", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "8", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "8", ")", ")", "\n", "\n", "self", ".", "init_parameter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.forward": [[192, 217], ["bbox.size", "rcnn_discriminator_vg.ResnetDiscriminator64.block1", "rcnn_discriminator_vg.ResnetDiscriminator64.block2", "rcnn_discriminator_vg.ResnetDiscriminator64.block3", "rcnn_discriminator_vg.ResnetDiscriminator64.block4", "rcnn_discriminator_vg.ResnetDiscriminator64.block5", "rcnn_discriminator_vg.ResnetDiscriminator64.activation", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "rcnn_discriminator_vg.ResnetDiscriminator64.l_im", "rcnn_discriminator_vg.ResnetDiscriminator64.roi_align", "rcnn_discriminator_vg.ResnetDiscriminator64.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator64.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator64.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator64.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_vg.ResnetDiscriminator64.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 64x64", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 32x32", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block5", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l_im", "(", "x", ")", "\n", "\n", "# obj path", "\n", "obj_feat", "=", "self", ".", "roi_align", "(", "x1", ",", "bbox", ")", "\n", "obj_feat", "=", "self", ".", "block_obj4", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator64.init_parameter": [[218, 224], ["rcnn_discriminator_vg.ResnetDiscriminator64.named_parameters", "k[].dim", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "init_parameter", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "k", "[", "1", "]", ".", "dim", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "k", "[", "1", "]", ")", "\n", "", "if", "k", "[", "0", "]", "[", "-", "4", ":", "]", "==", "'bias'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "k", "[", "1", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator256.__init__": [[227, 249], ["torch.Module.__init__", "rcnn_discriminator_vg.OptimizedBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ROIAlign", "ROIAlign", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "rcnn_discriminator_vg.ResBlock", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "0", ",", "input_dim", "=", "3", ",", "ch", "=", "64", ")", ":", "\n", "        ", "super", "(", "ResnetDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "block1", "=", "OptimizedBlock", "(", "3", ",", "ch", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block2", "=", "ResBlock", "(", "ch", ",", "ch", "*", "2", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block3", "=", "ResBlock", "(", "ch", "*", "2", ",", "ch", "*", "4", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "block7", "=", "ResBlock", "(", "ch", "*", "16", ",", "ch", "*", "16", ",", "downsample", "=", "False", ")", "\n", "self", ".", "l8", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "roi_align_s", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "8.0", ",", "int", "(", "0", ")", ")", "\n", "self", ".", "roi_align_l", "=", "ROIAlign", "(", "(", "8", ",", "8", ")", ",", "1.0", "/", "16.0", ",", "int", "(", "0", ")", ")", "\n", "\n", "self", ".", "block_obj4", "=", "ResBlock", "(", "ch", "*", "4", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj5", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "8", ",", "downsample", "=", "False", ")", "\n", "self", ".", "block_obj6", "=", "ResBlock", "(", "ch", "*", "8", ",", "ch", "*", "16", ",", "downsample", "=", "True", ")", "\n", "self", ".", "l_obj", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Linear", "(", "ch", "*", "16", ",", "1", ")", ")", "\n", "self", ".", "l_y", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "nn", ".", "Embedding", "(", "num_classes", ",", "ch", "*", "16", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResnetDiscriminator256.forward": [[250, 292], ["bbox.size", "rcnn_discriminator_vg.ResnetDiscriminator256.block1", "rcnn_discriminator_vg.ResnetDiscriminator256.block2", "rcnn_discriminator_vg.ResnetDiscriminator256.block3", "rcnn_discriminator_vg.ResnetDiscriminator256.block4", "rcnn_discriminator_vg.ResnetDiscriminator256.block5", "rcnn_discriminator_vg.ResnetDiscriminator256.block6", "rcnn_discriminator_vg.ResnetDiscriminator256.block7", "rcnn_discriminator_vg.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator256.l8", "rcnn_discriminator_vg.ResnetDiscriminator256.block_obj4", "rcnn_discriminator_vg.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_vg.ResnetDiscriminator256.roi_align_s", "rcnn_discriminator_vg.ResnetDiscriminator256.block_obj5", "rcnn_discriminator_vg.ResnetDiscriminator256.roi_align_l", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rcnn_discriminator_vg.ResnetDiscriminator256.block_obj6", "rcnn_discriminator_vg.ResnetDiscriminator256.activation", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator256.l_obj", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "rcnn_discriminator_vg.ResnetDiscriminator256.l_y().view", "torch.sum.view", "torch.sum.view", "torch.sum.view", "rcnn_discriminator_vg.ResnetDiscriminator256.l_y"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", "=", "None", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "b", "=", "bbox", ".", "size", "(", "0", ")", "\n", "# 256x256", "\n", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "# 128x128", "\n", "x", "=", "self", ".", "block2", "(", "x", ")", "\n", "# 64x64", "\n", "x1", "=", "self", ".", "block3", "(", "x", ")", "\n", "# 32x32", "\n", "x2", "=", "self", ".", "block4", "(", "x1", ")", "\n", "# 16x16", "\n", "x", "=", "self", ".", "block5", "(", "x2", ")", "\n", "# 8x8", "\n", "x", "=", "self", ".", "block6", "(", "x", ")", "\n", "# 4x4", "\n", "x", "=", "self", ".", "block7", "(", "x", ")", "\n", "x", "=", "self", ".", "activation", "(", "x", ")", "\n", "x", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_im", "=", "self", ".", "l8", "(", "x", ")", "\n", "\n", "# obj path", "\n", "# seperate different path", "\n", "s_idx", "=", "(", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "<", "128", ")", "*", "(", "(", "bbox", "[", ":", ",", "4", "]", "-", "bbox", "[", ":", ",", "2", "]", ")", "<", "128", ")", "\n", "bbox_l", ",", "bbox_s", "=", "bbox", "[", "~", "s_idx", "]", ",", "bbox", "[", "s_idx", "]", "\n", "y_l", ",", "y_s", "=", "y", "[", "~", "s_idx", "]", ",", "y", "[", "s_idx", "]", "\n", "\n", "obj_feat_s", "=", "self", ".", "block_obj4", "(", "x1", ")", "\n", "obj_feat_s", "=", "self", ".", "block_obj5", "(", "obj_feat_s", ")", "\n", "obj_feat_s", "=", "self", ".", "roi_align_s", "(", "obj_feat_s", ",", "bbox_s", ")", "\n", "\n", "obj_feat_l", "=", "self", ".", "block_obj5", "(", "x2", ")", "\n", "obj_feat_l", "=", "self", ".", "roi_align_l", "(", "obj_feat_l", ",", "bbox_l", ")", "\n", "\n", "obj_feat", "=", "torch", ".", "cat", "(", "[", "obj_feat_l", ",", "obj_feat_s", "]", ",", "dim", "=", "0", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "y_l", ",", "y_s", "]", ",", "dim", "=", "0", ")", "\n", "obj_feat", "=", "self", ".", "block_obj6", "(", "obj_feat", ")", "\n", "obj_feat", "=", "self", ".", "activation", "(", "obj_feat", ")", "\n", "obj_feat", "=", "torch", ".", "sum", "(", "obj_feat", ",", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "out_obj", "=", "self", ".", "l_obj", "(", "obj_feat", ")", "\n", "out_obj", "=", "out_obj", "+", "torch", ".", "sum", "(", "self", ".", "l_y", "(", "y", ")", ".", "view", "(", "b", ",", "-", "1", ")", "*", "obj_feat", ".", "view", "(", "b", ",", "-", "1", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "out_im", ",", "out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.OptimizedBlock.__init__": [[295, 302], ["torch.Module.__init__", "rcnn_discriminator_vg.conv2d", "rcnn_discriminator_vg.conv2d", "rcnn_discriminator_vg.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "OptimizedBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.OptimizedBlock.forward": [[303, 310], ["rcnn_discriminator_vg.OptimizedBlock.activation", "rcnn_discriminator_vg.OptimizedBlock.conv2", "rcnn_discriminator_vg.OptimizedBlock.conv1", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "rcnn_discriminator_vg.OptimizedBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "activation", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.OptimizedBlock.shortcut": [[311, 315], ["rcnn_discriminator_vg.OptimizedBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "self", ".", "c_sc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.__init__": [[318, 327], ["torch.Module.__init__", "rcnn_discriminator_vg.conv2d", "rcnn_discriminator_vg.conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "rcnn_discriminator_vg.conv2d"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "ksize", "=", "3", ",", "pad", "=", "1", ",", "downsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "conv2", "=", "conv2d", "(", "out_ch", ",", "out_ch", ",", "ksize", ",", "1", ",", "pad", ")", "\n", "self", ".", "activation", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "learnable_sc", "=", "(", "in_ch", "!=", "out_ch", ")", "or", "downsample", "\n", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "self", ".", "c_sc", "=", "conv2d", "(", "in_ch", ",", "out_ch", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual": [[328, 335], ["rcnn_discriminator_vg.ResBlock.conv1", "rcnn_discriminator_vg.ResBlock.conv2", "rcnn_discriminator_vg.ResBlock.activation", "rcnn_discriminator_vg.ResBlock.activation", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "", "def", "residual", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "x", "=", "in_feat", "\n", "x", "=", "self", ".", "conv1", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv2", "(", "self", ".", "activation", "(", "x", ")", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut": [[336, 342], ["rcnn_discriminator_vg.ResBlock.c_sc", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "shortcut", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "learnable_sc", ":", "\n", "            ", "x", "=", "self", ".", "c_sc", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.forward": [[343, 345], ["rcnn_discriminator_vg.ResBlock.residual", "rcnn_discriminator_vg.ResBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.residual", "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.ResBlock.shortcut"], ["", "def", "forward", "(", "self", ",", "in_feat", ")", ":", "\n", "        ", "return", "self", ".", "residual", "(", "in_feat", ")", "+", "self", ".", "shortcut", "(", "in_feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator256.__init__": [[348, 351], ["torch.Module.__init__", "rcnn_discriminator_vg.ResnetDiscriminator256"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator256", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator256", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator256.forward": [[352, 368], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_vg.CombineDiscriminator256.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator128.__init__": [[371, 374], ["torch.Module.__init__", "rcnn_discriminator_vg.ResnetDiscriminator128"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator128", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator128", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator128.forward": [[375, 394], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "bbox.view.view.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_vg.CombineDiscriminator128.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "#idx = idx.cuda()", "\n", "# print(bbox)", "\n", "bbox", "=", "bbox", ".", "cuda", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator128_app.__init__": [[397, 400], ["torch.Module.__init__", "rcnn_discriminator_vg.ResnetDiscriminator128_app"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator128_app", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator128_app", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator128_app.forward": [[401, 422], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "bbox.view.view.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_vg.CombineDiscriminator128_app.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "#idx = idx.cuda()", "\n", "# print(bbox)", "\n", "bbox", "=", "bbox", ".", "cuda", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "# print(bbox.shape)", "\n", "# print(label.shape)", "\n", "d_out_img", ",", "d_out_obj", ",", "out_app", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", ",", "out_app", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator64.__init__": [[425, 428], ["torch.Module.__init__", "rcnn_discriminator_vg.ResnetDiscriminator64"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "81", ")", ":", "\n", "        ", "super", "(", "CombineDiscriminator64", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "obD", "=", "ResnetDiscriminator64", "(", "num_classes", "=", "num_classes", ",", "input_dim", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.CombineDiscriminator64.forward": [[429, 445], ["torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.arange().view().expand().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bbox.view.view.view", "label.view.view.view", "rcnn_discriminator_vg.CombineDiscriminator64.obD", "images.size", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "torch.arange().view().expand", "bbox.view.view.float", "bbox.view.view.size", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "images.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "images.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "images", ",", "bbox", ",", "label", ",", "mask", "=", "None", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "images", ".", "size", "(", "0", ")", ",", "\n", "device", "=", "images", ".", "device", ")", ".", "view", "(", "images", ".", "size", "(", "0", ")", ",", "\n", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "bbox", ".", "size", "(", "1", ")", ",", "-", "1", ")", ".", "float", "(", ")", "\n", "bbox", "[", ":", ",", ":", ",", "2", "]", "=", "bbox", "[", ":", ",", ":", ",", "2", "]", "+", "bbox", "[", ":", ",", ":", ",", "0", "]", "\n", "bbox", "[", ":", ",", ":", ",", "3", "]", "=", "bbox", "[", ":", ",", ":", ",", "3", "]", "+", "bbox", "[", ":", ",", ":", ",", "1", "]", "\n", "bbox", "=", "bbox", "*", "images", ".", "size", "(", "2", ")", "\n", "bbox", "=", "torch", ".", "cat", "(", "(", "idx", ",", "bbox", ".", "float", "(", ")", ")", ",", "dim", "=", "2", ")", "\n", "bbox", "=", "bbox", ".", "view", "(", "-", "1", ",", "5", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "\n", "idx", "=", "(", "label", "!=", "0", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "bbox", "=", "bbox", "[", "idx", "]", "\n", "label", "=", "label", "[", "idx", "]", "\n", "d_out_img", ",", "d_out_obj", "=", "self", ".", "obD", "(", "images", ",", "label", ",", "bbox", ")", "\n", "return", "d_out_img", ",", "d_out_obj", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.model.rcnn_discriminator_vg.conv2d": [[10, 16], ["torch.Conv2d", "torch.utils.spectral_norm"], "function", ["None"], ["def", "conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "pad", "=", "1", ",", "spectral_norm", "=", "True", ")", ":", "\n", "    ", "conv", "=", "nn", ".", "Conv2d", "(", "in_feat", ",", "out_feat", ",", "kernel_size", ",", "stride", ",", "pad", ")", "\n", "if", "spectral_norm", ":", "\n", "        ", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "conv", ",", "eps", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "return", "conv", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.DataParallelWithCallback.replicate": [[64, 68], ["super().replicate", "replicate.execute_replication_callbacks"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.DataParallelWithCallback.replicate", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.execute_replication_callbacks"], ["def", "replicate", "(", "self", ",", "module", ",", "device_ids", ")", ":", "\n", "        ", "modules", "=", "super", "(", "DataParallelWithCallback", ",", "self", ")", ".", "replicate", "(", "module", ",", "device_ids", ")", "\n", "execute_replication_callbacks", "(", "modules", ")", "\n", "return", "modules", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.execute_replication_callbacks": [[27, 48], ["len", "enumerate", "list", "replicate.CallbackContext", "enumerate", "master_copy.modules", "range", "module.modules", "hasattr", "m.__data_parallel_replicate__"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm.__data_parallel_replicate__"], ["", "def", "execute_replication_callbacks", "(", "modules", ")", ":", "\n", "    ", "\"\"\"\n    Execute an replication callback `__data_parallel_replicate__` on each module created by original replication.\n\n    The callback will be invoked with arguments `__data_parallel_replicate__(ctx, copy_id)`\n\n    Note that, as all modules are isomorphism, we assign each sub-module with a context\n    (shared among multiple copies of this module on different devices).\n    Through this context, different copies can share some information.\n\n    We guarantee that the callback on the master copy (the first copy) will be called ahead of calling the callback\n    of any slave copies.\n    \"\"\"", "\n", "master_copy", "=", "modules", "[", "0", "]", "\n", "nr_modules", "=", "len", "(", "list", "(", "master_copy", ".", "modules", "(", ")", ")", ")", "\n", "ctxs", "=", "[", "CallbackContext", "(", ")", "for", "_", "in", "range", "(", "nr_modules", ")", "]", "\n", "\n", "for", "i", ",", "module", "in", "enumerate", "(", "modules", ")", ":", "\n", "        ", "for", "j", ",", "m", "in", "enumerate", "(", "module", ".", "modules", "(", ")", ")", ":", "\n", "            ", "if", "hasattr", "(", "m", ",", "'__data_parallel_replicate__'", ")", ":", "\n", "                ", "m", ".", "__data_parallel_replicate__", "(", "ctxs", "[", "j", "]", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.patch_replication_callback": [[70, 95], ["isinstance", "functools.wraps", "old_replicate", "replicate.execute_replication_callbacks"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.replicate.execute_replication_callbacks"], ["", "", "def", "patch_replication_callback", "(", "data_parallel", ")", ":", "\n", "    ", "\"\"\"\n    Monkey-patch an existing `DataParallel` object. Add the replication callback.\n    Useful when you have customized `DataParallel` implementation.\n\n    Examples:\n        > sync_bn = SynchronizedBatchNorm1d(10, eps=1e-5, affine=False)\n        > sync_bn = DataParallel(sync_bn, device_ids=[0, 1])\n        > patch_replication_callback(sync_bn)\n        # this is equivalent to\n        > sync_bn = SynchronizedBatchNorm1d(10, eps=1e-5, affine=False)\n        > sync_bn = DataParallelWithCallback(sync_bn, device_ids=[0, 1])\n    \"\"\"", "\n", "\n", "assert", "isinstance", "(", "data_parallel", ",", "DataParallel", ")", "\n", "\n", "old_replicate", "=", "data_parallel", ".", "replicate", "\n", "\n", "@", "functools", ".", "wraps", "(", "old_replicate", ")", "\n", "def", "new_replicate", "(", "module", ",", "device_ids", ")", ":", "\n", "        ", "modules", "=", "old_replicate", "(", "module", ",", "device_ids", ")", "\n", "execute_replication_callbacks", "(", "modules", ")", "\n", "return", "modules", "\n", "\n", "", "data_parallel", ".", "replicate", "=", "new_replicate", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.__init__": [[21, 25], ["threading.Lock", "threading.Condition"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_result", "=", "None", "\n", "self", ".", "_lock", "=", "threading", ".", "Lock", "(", ")", "\n", "self", ".", "_cond", "=", "threading", ".", "Condition", "(", "self", ".", "_lock", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.put": [[26, 31], ["comm.FutureResult._cond.notify"], "methods", ["None"], ["", "def", "put", "(", "self", ",", "result", ")", ":", "\n", "        ", "with", "self", ".", "_lock", ":", "\n", "            ", "assert", "self", ".", "_result", "is", "None", ",", "'Previous result has\\'t been fetched.'", "\n", "self", ".", "_result", "=", "result", "\n", "self", ".", "_cond", ".", "notify", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get": [[32, 40], ["comm.FutureResult._cond.wait"], "methods", ["None"], ["", "", "def", "get", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "_lock", ":", "\n", "            ", "if", "self", ".", "_result", "is", "None", ":", "\n", "                ", "self", ".", "_cond", ".", "wait", "(", ")", "\n", "\n", "", "res", "=", "self", ".", "_result", "\n", "self", ".", "_result", "=", "None", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SlavePipe.run_slave": [[49, 54], ["comm.SlavePipe.queue.put", "comm.SlavePipe.result.get", "comm.SlavePipe.queue.put"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.put", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.put"], ["def", "run_slave", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "queue", ".", "put", "(", "(", "self", ".", "identifier", ",", "msg", ")", ")", "\n", "ret", "=", "self", ".", "result", ".", "get", "(", ")", "\n", "self", ".", "queue", ".", "put", "(", "True", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.__init__": [[67, 77], ["queue.Queue", "collections.OrderedDict"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "master_callback", ")", ":", "\n", "        ", "\"\"\"\n\n        Args:\n            master_callback: a callback to be invoked after having collected messages from slave devices.\n        \"\"\"", "\n", "self", ".", "_master_callback", "=", "master_callback", "\n", "self", ".", "_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "self", ".", "_registry", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "self", ".", "_activated", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.__getstate__": [[78, 80], ["None"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "return", "{", "'master_callback'", ":", "self", ".", "_master_callback", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.__setstate__": [[81, 83], ["comm.SyncMaster.__init__"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "__init__", "(", "state", "[", "'master_callback'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.register_slave": [[84, 101], ["comm.FutureResult", "_MasterRegistry", "comm.SlavePipe", "comm.SyncMaster._queue.empty", "comm.SyncMaster._registry.clear"], "methods", ["None"], ["", "def", "register_slave", "(", "self", ",", "identifier", ")", ":", "\n", "        ", "\"\"\"\n        Register an slave device.\n\n        Args:\n            identifier: an identifier, usually is the device id.\n\n        Returns: a `SlavePipe` object which can be used to communicate with the master device.\n\n        \"\"\"", "\n", "if", "self", ".", "_activated", ":", "\n", "            ", "assert", "self", ".", "_queue", ".", "empty", "(", ")", ",", "'Queue is not clean before next initialization.'", "\n", "self", ".", "_activated", "=", "False", "\n", "self", ".", "_registry", ".", "clear", "(", ")", "\n", "", "future", "=", "FutureResult", "(", ")", "\n", "self", ".", "_registry", "[", "identifier", "]", "=", "_MasterRegistry", "(", "future", ")", "\n", "return", "SlavePipe", "(", "identifier", ",", "self", ".", "_queue", ",", "future", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.run_master": [[102, 134], ["range", "comm.SyncMaster._master_callback", "range", "intermediates.append", "comm.SyncMaster._registry[].result.put", "comm.SyncMaster._queue.get", "comm.SyncMaster._queue.get"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.put", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get"], ["", "def", "run_master", "(", "self", ",", "master_msg", ")", ":", "\n", "        ", "\"\"\"\n        Main entry for the master device in each forward pass.\n        The messages were first collected from each devices (including the master device), and then\n        an callback will be invoked to compute the message to be sent back to each devices\n        (including the master device).\n\n        Args:\n            master_msg: the message that the master want to send to itself. This will be placed as the first\n            message when calling `master_callback`. For detailed usage, see `_SynchronizedBatchNorm` for an example.\n\n        Returns: the message to be sent back to the master device.\n\n        \"\"\"", "\n", "self", ".", "_activated", "=", "True", "\n", "\n", "intermediates", "=", "[", "(", "0", ",", "master_msg", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "nr_slaves", ")", ":", "\n", "            ", "intermediates", ".", "append", "(", "self", ".", "_queue", ".", "get", "(", ")", ")", "\n", "\n", "", "results", "=", "self", ".", "_master_callback", "(", "intermediates", ")", "\n", "assert", "results", "[", "0", "]", "[", "0", "]", "==", "0", ",", "'The first result should belongs to the master.'", "\n", "\n", "for", "i", ",", "res", "in", "results", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "continue", "\n", "", "self", ".", "_registry", "[", "i", "]", ".", "result", ".", "put", "(", "res", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "nr_slaves", ")", ":", "\n", "            ", "assert", "self", ".", "_queue", ".", "get", "(", ")", "is", "True", "\n", "\n", "", "return", "results", "[", "0", "]", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.nr_slaves": [[135, 138], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "nr_slaves", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_registry", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.unittest.TorchTestCase.assertTensorClose": [[16, 29], ["float", "unittest.TorchTestCase.assertTrue", "float", "torch.allclose"], "methods", ["None"], ["    ", "def", "assertTensorClose", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "adiff", "=", "float", "(", "(", "x", "-", "y", ")", ".", "abs", "(", ")", ".", "max", "(", ")", ")", "\n", "if", "(", "y", "==", "0", ")", ".", "all", "(", ")", ":", "\n", "            ", "rdiff", "=", "'NaN'", "\n", "", "else", ":", "\n", "            ", "rdiff", "=", "float", "(", "(", "adiff", "/", "y", ")", ".", "abs", "(", ")", ".", "max", "(", ")", ")", "\n", "\n", "", "message", "=", "(", "\n", "'Tensor close check failed\\n'", "\n", "'adiff={}\\n'", "\n", "'rdiff={}\\n'", "\n", ")", ".", "format", "(", "adiff", ",", "rdiff", ")", "\n", "self", ".", "assertTrue", "(", "torch", ".", "allclose", "(", "x", ",", "y", ")", ",", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm.__init__": [[39, 47], ["torch.nn.modules.batchnorm._BatchNorm.__init__", "comm.SyncMaster"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "_SynchronizedBatchNorm", ",", "self", ")", ".", "__init__", "(", "num_features", ",", "eps", "=", "eps", ",", "momentum", "=", "momentum", ",", "affine", "=", "affine", ")", "\n", "\n", "self", ".", "_sync_master", "=", "SyncMaster", "(", "self", ".", "_data_parallel_master", ")", "\n", "\n", "self", ".", "_is_parallel", "=", "False", "\n", "self", ".", "_parallel_id", "=", "None", "\n", "self", ".", "_slave_pipe", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm.forward": [[48, 79], ["input.view.view.size", "input.view.view.view", "batchnorm._sum_ft", "batchnorm._sum_ft", "output.view", "torch.batch_norm", "torch.batch_norm", "input.view.view.size", "input.view.view.size", "input.view.view.size", "batchnorm._SynchronizedBatchNorm._sync_master.run_master", "batchnorm._SynchronizedBatchNorm._slave_pipe.run_slave", "_ChildMessage", "_ChildMessage", "batchnorm._unsqueeze_ft", "batchnorm._unsqueeze_ft", "batchnorm._unsqueeze_ft", "batchnorm._unsqueeze_ft", "batchnorm._unsqueeze_ft"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._sum_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._sum_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.run_master", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SlavePipe.run_slave", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# If it is not parallel computation or is in evaluation mode, use PyTorch's implementation.", "\n", "        ", "if", "not", "(", "self", ".", "_is_parallel", "and", "self", ".", "training", ")", ":", "\n", "            ", "return", "F", ".", "batch_norm", "(", "\n", "input", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "self", ".", "training", ",", "self", ".", "momentum", ",", "self", ".", "eps", ")", "\n", "\n", "# Resize the input to (B, C, -1).", "\n", "", "input_shape", "=", "input", ".", "size", "(", ")", "\n", "input", "=", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "self", ".", "num_features", ",", "-", "1", ")", "\n", "\n", "# Compute the sum and square-sum.", "\n", "sum_size", "=", "input", ".", "size", "(", "0", ")", "*", "input", ".", "size", "(", "2", ")", "\n", "input_sum", "=", "_sum_ft", "(", "input", ")", "\n", "input_ssum", "=", "_sum_ft", "(", "input", "**", "2", ")", "\n", "\n", "# Reduce-and-broadcast the statistics.", "\n", "if", "self", ".", "_parallel_id", "==", "0", ":", "\n", "            ", "mean", ",", "inv_std", "=", "self", ".", "_sync_master", ".", "run_master", "(", "_ChildMessage", "(", "input_sum", ",", "input_ssum", ",", "sum_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "mean", ",", "inv_std", "=", "self", ".", "_slave_pipe", ".", "run_slave", "(", "_ChildMessage", "(", "input_sum", ",", "input_ssum", ",", "sum_size", ")", ")", "\n", "\n", "# Compute the output.", "\n", "", "if", "self", ".", "affine", ":", "\n", "# MJY:: Fuse the multiplication for speed.", "\n", "            ", "output", "=", "(", "input", "-", "_unsqueeze_ft", "(", "mean", ")", ")", "*", "_unsqueeze_ft", "(", "inv_std", "*", "self", ".", "weight", ")", "+", "_unsqueeze_ft", "(", "self", ".", "bias", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "(", "input", "-", "_unsqueeze_ft", "(", "mean", ")", ")", "*", "_unsqueeze_ft", "(", "inv_std", ")", "\n", "\n", "# Reshape it.", "\n", "", "return", "output", ".", "view", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm.__data_parallel_replicate__": [[80, 89], ["ctx.sync_master.register_slave"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.SyncMaster.register_slave"], ["", "def", "__data_parallel_replicate__", "(", "self", ",", "ctx", ",", "copy_id", ")", ":", "\n", "        ", "self", ".", "_is_parallel", "=", "True", "\n", "self", ".", "_parallel_id", "=", "copy_id", "\n", "\n", "# parallel_id == 0 means master device.", "\n", "if", "self", ".", "_parallel_id", "==", "0", ":", "\n", "            ", "ctx", ".", "sync_master", "=", "self", ".", "_sync_master", "\n", "", "else", ":", "\n", "            ", "self", ".", "_slave_pipe", "=", "ctx", ".", "sync_master", ".", "register_slave", "(", "copy_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm._data_parallel_master": [[90, 112], ["sorted", "sum", "torch.nn.parallel._functions.ReduceAddCoalesced.apply", "torch.nn.parallel._functions.ReduceAddCoalesced.apply", "batchnorm._SynchronizedBatchNorm._compute_mean_std", "torch.nn.parallel._functions.Broadcast.apply", "torch.nn.parallel._functions.Broadcast.apply", "enumerate", "i[].sum.get_device", "outputs.append", "i[].sum.get_device", "_MasterMessage"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm._compute_mean_std"], ["", "", "def", "_data_parallel_master", "(", "self", ",", "intermediates", ")", ":", "\n", "        ", "\"\"\"Reduce the sum and square-sum, compute the statistics, and broadcast it.\"\"\"", "\n", "\n", "# Always using same \"device order\" makes the ReduceAdd operation faster.", "\n", "# Thanks to:: Tete Xiao (http://tetexiao.com/)", "\n", "intermediates", "=", "sorted", "(", "intermediates", ",", "key", "=", "lambda", "i", ":", "i", "[", "1", "]", ".", "sum", ".", "get_device", "(", ")", ")", "\n", "\n", "to_reduce", "=", "[", "i", "[", "1", "]", "[", ":", "2", "]", "for", "i", "in", "intermediates", "]", "\n", "to_reduce", "=", "[", "j", "for", "i", "in", "to_reduce", "for", "j", "in", "i", "]", "# flatten", "\n", "target_gpus", "=", "[", "i", "[", "1", "]", ".", "sum", ".", "get_device", "(", ")", "for", "i", "in", "intermediates", "]", "\n", "\n", "sum_size", "=", "sum", "(", "[", "i", "[", "1", "]", ".", "sum_size", "for", "i", "in", "intermediates", "]", ")", "\n", "sum_", ",", "ssum", "=", "ReduceAddCoalesced", ".", "apply", "(", "target_gpus", "[", "0", "]", ",", "2", ",", "*", "to_reduce", ")", "\n", "mean", ",", "inv_std", "=", "self", ".", "_compute_mean_std", "(", "sum_", ",", "ssum", ",", "sum_size", ")", "\n", "\n", "broadcasted", "=", "Broadcast", ".", "apply", "(", "target_gpus", ",", "mean", ",", "inv_std", ")", "\n", "\n", "outputs", "=", "[", "]", "\n", "for", "i", ",", "rec", "in", "enumerate", "(", "intermediates", ")", ":", "\n", "            ", "outputs", ".", "append", "(", "(", "rec", "[", "0", "]", ",", "_MasterMessage", "(", "*", "broadcasted", "[", "i", "*", "2", ":", "i", "*", "2", "+", "2", "]", ")", ")", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._SynchronizedBatchNorm._compute_mean_std": [[113, 126], ["bias_var.clamp"], "methods", ["None"], ["", "def", "_compute_mean_std", "(", "self", ",", "sum_", ",", "ssum", ",", "size", ")", ":", "\n", "        ", "\"\"\"Compute the mean and standard-deviation with sum and square-sum. This method\n        also maintains the moving average on the master device.\"\"\"", "\n", "assert", "size", ">", "1", ",", "'BatchNorm computes unbiased standard-deviation, which requires size > 1.'", "\n", "mean", "=", "sum_", "/", "size", "\n", "sumvar", "=", "ssum", "-", "sum_", "*", "mean", "\n", "unbias_var", "=", "sumvar", "/", "(", "size", "-", "1", ")", "\n", "bias_var", "=", "sumvar", "/", "size", "\n", "\n", "self", ".", "running_mean", "=", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "+", "self", ".", "momentum", "*", "mean", ".", "data", "\n", "self", ".", "running_var", "=", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "+", "self", ".", "momentum", "*", "unbias_var", ".", "data", "\n", "\n", "return", "mean", ",", "bias_var", ".", "clamp", "(", "self", ".", "eps", ")", "**", "-", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d._check_input_dim": [[184, 189], ["super()._check_input_dim", "ValueError", "input.dim", "input.dim", "input.dim"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "dim", "(", ")", "!=", "2", "and", "input", ".", "dim", "(", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "'expected 2D or 3D input (got {}D input)'", "\n", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "\n", "", "super", "(", "SynchronizedBatchNorm1d", ",", "self", ")", ".", "_check_input_dim", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d._check_input_dim": [[247, 252], ["super()._check_input_dim", "input.dim", "ValueError", "input.dim"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "dim", "(", ")", "!=", "4", ":", "\n", "            ", "raise", "ValueError", "(", "'expected 4D input (got {}D input)'", "\n", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "\n", "", "super", "(", "SynchronizedBatchNorm2d", ",", "self", ")", ".", "_check_input_dim", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim": [[311, 316], ["super()._check_input_dim", "input.dim", "ValueError", "input.dim"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d._check_input_dim"], ["def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "input", ".", "dim", "(", ")", "!=", "5", ":", "\n", "            ", "raise", "ValueError", "(", "'expected 5D input (got {}D input)'", "\n", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "\n", "", "super", "(", "SynchronizedBatchNorm3d", ",", "self", ")", ".", "_check_input_dim", "(", "input", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._sum_ft": [[24, 27], ["tensor.sum().sum", "tensor.sum"], "function", ["None"], ["def", "_sum_ft", "(", "tensor", ")", ":", "\n", "    ", "\"\"\"sum over the first and last dimention\"\"\"", "\n", "return", "tensor", ".", "sum", "(", "dim", "=", "0", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm._unsqueeze_ft": [[29, 32], ["tensor.unsqueeze().unsqueeze", "tensor.unsqueeze"], "function", ["None"], ["", "def", "_unsqueeze_ft", "(", "tensor", ")", ":", "\n", "    ", "\"\"\"add new dementions at the front and the tail\"\"\"", "\n", "return", "tensor", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.__init__": [[27, 38], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "batchnorm_reimpl.BatchNorm2dReimpl.register_buffer", "batchnorm_reimpl.BatchNorm2dReimpl.register_buffer", "batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters"], ["def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "num_features", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats": [[39, 42], ["batchnorm_reimpl.BatchNorm2dReimpl.running_mean.zero_", "batchnorm_reimpl.BatchNorm2dReimpl.running_var.fill_"], "methods", ["None"], ["", "def", "reset_running_stats", "(", "self", ")", ":", "\n", "        ", "self", ".", "running_mean", ".", "zero_", "(", ")", "\n", "self", ".", "running_var", ".", "fill_", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters": [[43, 47], ["batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", "torch.uniform_", "torch.uniform_", "torch.uniform_", "torch.zeros_", "torch.zeros_", "torch.zeros_"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset_running_stats", "(", ")", "\n", "init", ".", "uniform_", "(", "self", ".", "weight", ")", "\n", "init", ".", "zeros_", "(", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward": [[48, 74], ["input_.permute().contiguous().view.permute().contiguous().view.size", "input_.permute().contiguous().view.permute().contiguous().view.permute().contiguous().view", "input_.permute().contiguous().view.permute().contiguous().view.sum", "input_.permute().contiguous().view.permute().contiguous().view.pow().sum", "output.view().permute().contiguous", "batchnorm_reimpl.BatchNorm2dReimpl.bias.unsqueeze", "input_.permute().contiguous().view.permute().contiguous().view.permute().contiguous", "input_.permute().contiguous().view.permute().contiguous().view.pow", "mean.detach", "unbias_var.detach", "batchnorm_reimpl.BatchNorm2dReimpl.weight.unsqueeze", "output.view().permute", "inv_std.unsqueeze", "input_.permute().contiguous().view.permute().contiguous().view.permute", "mean.unsqueeze", "output.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_", ")", ":", "\n", "        ", "batchsize", ",", "channels", ",", "height", ",", "width", "=", "input_", ".", "size", "(", ")", "\n", "numel", "=", "batchsize", "*", "height", "*", "width", "\n", "input_", "=", "input_", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "channels", ",", "numel", ")", "\n", "sum_", "=", "input_", ".", "sum", "(", "1", ")", "\n", "sum_of_square", "=", "input_", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", "\n", "mean", "=", "sum_", "/", "numel", "\n", "sumvar", "=", "sum_of_square", "-", "sum_", "*", "mean", "\n", "\n", "self", ".", "running_mean", "=", "(", "\n", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "\n", "+", "self", ".", "momentum", "*", "mean", ".", "detach", "(", ")", "\n", ")", "\n", "unbias_var", "=", "sumvar", "/", "(", "numel", "-", "1", ")", "\n", "self", ".", "running_var", "=", "(", "\n", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "\n", "+", "self", ".", "momentum", "*", "unbias_var", ".", "detach", "(", ")", "\n", ")", "\n", "\n", "bias_var", "=", "sumvar", "/", "numel", "\n", "inv_std", "=", "1", "/", "(", "bias_var", "+", "self", ".", "eps", ")", ".", "pow", "(", "0.5", ")", "\n", "output", "=", "(", "\n", "(", "input_", "-", "mean", ".", "unsqueeze", "(", "1", ")", ")", "*", "inv_std", ".", "unsqueeze", "(", "1", ")", "*", "\n", "self", ".", "weight", ".", "unsqueeze", "(", "1", ")", "+", "self", ".", "bias", ".", "unsqueeze", "(", "1", ")", ")", "\n", "\n", "return", "output", ".", "view", "(", "channels", ",", "batchsize", ",", "height", ",", "width", ")", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.main": [[78, 150], ["os.path.join", "print", "preprocess_vg.remove_small_images", "preprocess_vg.load_aliases", "preprocess_vg.load_aliases", "print", "preprocess_vg.create_object_vocab", "print", "preprocess_vg.create_attribute_vocab", "preprocess_vg.filter_objects", "print", "print", "preprocess_vg.create_rel_vocab", "print", "preprocess_vg.encode_graphs", "print", "encode_graphs.items", "print", "os.path.exists", "os.makedirs", "open", "json.load", "open", "json.load", "open", "json.load", "open", "json.load", "open", "json.load", "list", "os.path.join", "print", "print", "open", "json.dump", "len", "split_arrays[].astype", "h5py.File", "split_arrays.items", "print", "preprocess_vg.get_image_paths", "h5py.special_dtype", "h5_file.create_dataset", "enumerate", "print", "h5_file.create_dataset", "len"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.remove_small_images", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.load_aliases", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.load_aliases", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_object_vocab", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_attribute_vocab", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.filter_objects", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_rel_vocab", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.encode_graphs", "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.get_image_paths"], ["def", "main", "(", "args", ")", ":", "\n", "    ", "args", ".", "output_h5_dir", "=", "os", ".", "path", ".", "join", "(", "'data'", ",", "'tmp/preprocess_vg'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "output_h5_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "output_h5_dir", ")", "\n", "\n", "", "print", "(", "'Loading image info from \"%s\"'", "%", "args", ".", "images_json", ")", "\n", "with", "open", "(", "args", ".", "images_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "images", "=", "json", ".", "load", "(", "f", ")", "\n", "", "image_id_to_image", "=", "{", "i", "[", "'image_id'", "]", ":", "i", "for", "i", "in", "images", "}", "\n", "\n", "with", "open", "(", "args", ".", "splits_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "splits", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# Filter images for being too small", "\n", "", "splits", "=", "remove_small_images", "(", "args", ",", "image_id_to_image", ",", "splits", ")", "\n", "\n", "obj_aliases", "=", "load_aliases", "(", "args", ".", "object_aliases", ")", "\n", "rel_aliases", "=", "load_aliases", "(", "args", ".", "relationship_aliases", ")", "\n", "\n", "print", "(", "'Loading objects from \"%s\"'", "%", "args", ".", "objects_json", ")", "\n", "with", "open", "(", "args", ".", "objects_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "objects", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# Vocab for objects and relationships", "\n", "", "vocab", "=", "{", "}", "\n", "train_ids", "=", "splits", "[", "args", ".", "train_split", "]", "\n", "create_object_vocab", "(", "args", ",", "train_ids", ",", "objects", ",", "obj_aliases", ",", "vocab", ")", "\n", "\n", "print", "(", "'Loading attributes from \"%s\"'", "%", "args", ".", "attributes_json", ")", "\n", "with", "open", "(", "args", ".", "attributes_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "attributes", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# Vocab for attributes", "\n", "", "create_attribute_vocab", "(", "args", ",", "train_ids", ",", "attributes", ",", "vocab", ")", "\n", "\n", "object_id_to_obj", "=", "filter_objects", "(", "args", ",", "objects", ",", "obj_aliases", ",", "vocab", ",", "splits", ")", "\n", "print", "(", "'After filtering there are %d object instances'", "\n", "%", "len", "(", "object_id_to_obj", ")", ")", "\n", "\n", "print", "(", "'Loading relationshps from \"%s\"'", "%", "args", ".", "relationships_json", ")", "\n", "with", "open", "(", "args", ".", "relationships_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "relationships", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "create_rel_vocab", "(", "args", ",", "train_ids", ",", "relationships", ",", "object_id_to_obj", ",", "\n", "rel_aliases", ",", "vocab", ")", "\n", "\n", "print", "(", "'Encoding objects and relationships ...'", ")", "\n", "numpy_arrays", "=", "encode_graphs", "(", "args", ",", "splits", ",", "objects", ",", "relationships", ",", "vocab", ",", "\n", "object_id_to_obj", ",", "attributes", ")", "\n", "\n", "print", "(", "'Writing HDF5 output files'", ")", "\n", "for", "split_name", ",", "split_arrays", "in", "numpy_arrays", ".", "items", "(", ")", ":", "\n", "        ", "image_ids", "=", "list", "(", "split_arrays", "[", "'image_ids'", "]", ".", "astype", "(", "int", ")", ")", "\n", "h5_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "output_h5_dir", ",", "'%s.h5'", "%", "split_name", ")", "\n", "print", "(", "'Writing file \"%s\"'", "%", "h5_path", ")", "\n", "with", "h5py", ".", "File", "(", "h5_path", ",", "'w'", ")", "as", "h5_file", ":", "\n", "            ", "for", "name", ",", "ary", "in", "split_arrays", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "'Creating datset: '", ",", "name", ",", "ary", ".", "shape", ",", "ary", ".", "dtype", ")", "\n", "h5_file", ".", "create_dataset", "(", "name", ",", "data", "=", "ary", ")", "\n", "", "print", "(", "'Writing image paths'", ")", "\n", "image_paths", "=", "get_image_paths", "(", "image_id_to_image", ",", "image_ids", ")", "\n", "path_dtype", "=", "h5py", ".", "special_dtype", "(", "vlen", "=", "str", ")", "\n", "path_shape", "=", "(", "len", "(", "image_paths", ")", ",", ")", "\n", "path_dset", "=", "h5_file", ".", "create_dataset", "(", "'image_paths'", ",", "path_shape", ",", "\n", "dtype", "=", "path_dtype", ")", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "image_paths", ")", ":", "\n", "                ", "path_dset", "[", "i", "]", "=", "p", "\n", "", "", "print", "(", ")", "\n", "\n", "", "print", "(", "'Writing vocab to \"%s\"'", "%", "args", ".", "output_vocab_json", ")", "\n", "with", "open", "(", "args", ".", "output_vocab_json", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "vocab", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.remove_small_images": [[152, 169], ["splits.items", "print", "new_image_ids.append", "min"], "function", ["None"], ["", "", "def", "remove_small_images", "(", "args", ",", "image_id_to_image", ",", "splits", ")", ":", "\n", "    ", "new_splits", "=", "{", "}", "\n", "for", "split_name", ",", "image_ids", "in", "splits", ".", "items", "(", ")", ":", "\n", "        ", "new_image_ids", "=", "[", "]", "\n", "num_skipped", "=", "0", "\n", "for", "image_id", "in", "image_ids", ":", "\n", "            ", "image", "=", "image_id_to_image", "[", "image_id", "]", "\n", "height", ",", "width", "=", "image", "[", "'height'", "]", ",", "image", "[", "'width'", "]", "\n", "if", "min", "(", "height", ",", "width", ")", "<", "args", ".", "min_image_size", ":", "\n", "                ", "num_skipped", "+=", "1", "\n", "continue", "\n", "", "new_image_ids", ".", "append", "(", "image_id", ")", "\n", "", "new_splits", "[", "split_name", "]", "=", "new_image_ids", "\n", "print", "(", "'Removed %d images from split \"%s\" for being too small'", "%", "\n", "(", "num_skipped", ",", "split_name", ")", ")", "\n", "\n", "", "return", "new_splits", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.get_image_paths": [[171, 179], ["os.path.split", "os.path.join", "paths.append", "os.path.basename"], "function", ["None"], ["", "def", "get_image_paths", "(", "image_id_to_image", ",", "image_ids", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "for", "image_id", "in", "image_ids", ":", "\n", "        ", "image", "=", "image_id_to_image", "[", "image_id", "]", "\n", "base", ",", "filename", "=", "os", ".", "path", ".", "split", "(", "image", "[", "'url'", "]", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "basename", "(", "base", ")", ",", "filename", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.handle_images": [[181, 212], ["numpy.asarray", "h5_file.create_dataset", "numpy.asarray", "h5_file.create_dataset", "numpy.asarray", "h5_file.create_dataset", "open", "json.load", "set", "os.path.split", "os.path.join", "image_paths.append", "np.asarray.append", "np.asarray.append", "image_ids_out.append", "os.path.basename"], "function", ["None"], ["", "def", "handle_images", "(", "args", ",", "image_ids", ",", "h5_file", ")", ":", "\n", "    ", "with", "open", "(", "args", ".", "images_json", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "images", "=", "json", ".", "load", "(", "f", ")", "\n", "", "if", "image_ids", ":", "\n", "        ", "image_ids", "=", "set", "(", "image_ids", ")", "\n", "\n", "", "image_heights", ",", "image_widths", "=", "[", "]", ",", "[", "]", "\n", "image_ids_out", ",", "image_paths", "=", "[", "]", ",", "[", "]", "\n", "for", "image", "in", "images", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "if", "image_ids", "and", "image_id", "not", "in", "image_ids", ":", "\n", "            ", "continue", "\n", "", "height", ",", "width", "=", "image", "[", "'height'", "]", ",", "image", "[", "'width'", "]", "\n", "\n", "base", ",", "filename", "=", "os", ".", "path", ".", "split", "(", "image", "[", "'url'", "]", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "basename", "(", "base", ")", ",", "filename", ")", "\n", "image_paths", ".", "append", "(", "path", ")", "\n", "image_heights", ".", "append", "(", "height", ")", "\n", "image_widths", ".", "append", "(", "width", ")", "\n", "image_ids_out", ".", "append", "(", "image_id", ")", "\n", "\n", "", "image_ids_np", "=", "np", ".", "asarray", "(", "image_ids_out", ",", "dtype", "=", "int", ")", "\n", "h5_file", ".", "create_dataset", "(", "'image_ids'", ",", "data", "=", "image_ids_np", ")", "\n", "\n", "image_heights", "=", "np", ".", "asarray", "(", "image_heights", ",", "dtype", "=", "int", ")", "\n", "h5_file", ".", "create_dataset", "(", "'image_heights'", ",", "data", "=", "image_heights", ")", "\n", "\n", "image_widths", "=", "np", ".", "asarray", "(", "image_widths", ",", "dtype", "=", "int", ")", "\n", "h5_file", ".", "create_dataset", "(", "'image_widths'", ",", "data", "=", "image_widths", ")", "\n", "\n", "return", "image_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.load_aliases": [[214, 223], ["print", "open", "s.strip", "line.split"], "function", ["None"], ["", "def", "load_aliases", "(", "alias_path", ")", ":", "\n", "    ", "aliases", "=", "{", "}", "\n", "print", "(", "'Loading aliases from \"%s\"'", "%", "alias_path", ")", "\n", "with", "open", "(", "alias_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "[", "s", ".", "strip", "(", ")", "for", "s", "in", "line", ".", "split", "(", "','", ")", "]", "\n", "for", "s", "in", "line", ":", "\n", "                ", "aliases", "[", "s", "]", "=", "line", "[", "0", "]", "\n", "", "", "", "return", "aliases", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_object_vocab": [[225, 254], ["set", "print", "collections.Counter", "collections.Counter.most_common", "print", "enumerate", "object_idx_to_name.append", "len", "set", "collections.Counter.update", "object_names.append", "set.add", "len", "aliases.get"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get"], ["", "def", "create_object_vocab", "(", "args", ",", "image_ids", ",", "objects", ",", "aliases", ",", "vocab", ")", ":", "\n", "    ", "image_ids", "=", "set", "(", "image_ids", ")", "\n", "\n", "print", "(", "'Making object vocab from %d training images'", "%", "len", "(", "image_ids", ")", ")", "\n", "object_name_counter", "=", "Counter", "(", ")", "\n", "for", "image", "in", "objects", ":", "\n", "        ", "if", "image", "[", "'image_id'", "]", "not", "in", "image_ids", ":", "\n", "            ", "continue", "\n", "", "for", "obj", "in", "image", "[", "'objects'", "]", ":", "\n", "            ", "names", "=", "set", "(", ")", "\n", "for", "name", "in", "obj", "[", "'names'", "]", ":", "\n", "                ", "names", ".", "add", "(", "aliases", ".", "get", "(", "name", ",", "name", ")", ")", "\n", "", "object_name_counter", ".", "update", "(", "names", ")", "\n", "\n", "", "", "object_names", "=", "[", "'__image__'", "]", "\n", "for", "name", ",", "count", "in", "object_name_counter", ".", "most_common", "(", ")", ":", "\n", "        ", "if", "count", ">=", "args", ".", "min_object_instances", ":", "\n", "            ", "object_names", ".", "append", "(", "name", ")", "\n", "", "", "print", "(", "'Found %d object categories with >= %d training instances'", "%", "\n", "(", "len", "(", "object_names", ")", ",", "args", ".", "min_object_instances", ")", ")", "\n", "\n", "object_name_to_idx", "=", "{", "}", "\n", "object_idx_to_name", "=", "[", "]", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "object_names", ")", ":", "\n", "        ", "object_name_to_idx", "[", "name", "]", "=", "idx", "\n", "object_idx_to_name", ".", "append", "(", "name", ")", "\n", "\n", "", "vocab", "[", "'object_name_to_idx'", "]", "=", "object_name_to_idx", "\n", "vocab", "[", "'object_idx_to_name'", "]", "=", "object_idx_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_attribute_vocab": [[256, 285], ["set", "print", "collections.Counter", "collections.Counter.most_common", "print", "enumerate", "attribute_idx_to_name.append", "len", "set", "attribute_names.append", "collections.Counter.update", "len", "set.add"], "function", ["None"], ["", "def", "create_attribute_vocab", "(", "args", ",", "image_ids", ",", "attributes", ",", "vocab", ")", ":", "\n", "    ", "image_ids", "=", "set", "(", "image_ids", ")", "\n", "print", "(", "'Making attribute vocab from %d training images'", "%", "len", "(", "image_ids", ")", ")", "\n", "attribute_name_counter", "=", "Counter", "(", ")", "\n", "for", "image", "in", "attributes", ":", "\n", "        ", "if", "image", "[", "'image_id'", "]", "not", "in", "image_ids", ":", "\n", "            ", "continue", "\n", "", "for", "attribute", "in", "image", "[", "'attributes'", "]", ":", "\n", "            ", "names", "=", "set", "(", ")", "\n", "try", ":", "\n", "                ", "for", "name", "in", "attribute", "[", "'attributes'", "]", ":", "\n", "                    ", "names", ".", "add", "(", "name", ")", "\n", "", "attribute_name_counter", ".", "update", "(", "names", ")", "\n", "", "except", "KeyError", ":", "\n", "                ", "pass", "\n", "", "", "", "attribute_names", "=", "[", "]", "\n", "for", "name", ",", "count", "in", "attribute_name_counter", ".", "most_common", "(", ")", ":", "\n", "        ", "if", "count", ">=", "args", ".", "min_attribute_instances", ":", "\n", "            ", "attribute_names", ".", "append", "(", "name", ")", "\n", "", "", "print", "(", "'Found %d attribute categories with >= %d training instances'", "%", "\n", "(", "len", "(", "attribute_names", ")", ",", "args", ".", "min_attribute_instances", ")", ")", "\n", "\n", "attribute_name_to_idx", "=", "{", "}", "\n", "attribute_idx_to_name", "=", "[", "]", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "attribute_names", ")", ":", "\n", "        ", "attribute_name_to_idx", "[", "name", "]", "=", "idx", "\n", "attribute_idx_to_name", ".", "append", "(", "name", ")", "\n", "", "vocab", "[", "'attribute_name_to_idx'", "]", "=", "attribute_name_to_idx", "\n", "vocab", "[", "'attribute_idx_to_name'", "]", "=", "attribute_idx_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.filter_objects": [[287, 323], ["set", "splits.values", "print", "set", "aliases.get"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get"], ["", "def", "filter_objects", "(", "args", ",", "objects", ",", "aliases", ",", "vocab", ",", "splits", ")", ":", "\n", "    ", "object_id_to_objects", "=", "{", "}", "\n", "all_image_ids", "=", "set", "(", ")", "\n", "for", "image_ids", "in", "splits", ".", "values", "(", ")", ":", "\n", "        ", "all_image_ids", "|=", "set", "(", "image_ids", ")", "\n", "\n", "", "object_name_to_idx", "=", "vocab", "[", "'object_name_to_idx'", "]", "\n", "object_id_to_obj", "=", "{", "}", "\n", "\n", "num_too_small", "=", "0", "\n", "for", "image", "in", "objects", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "if", "image_id", "not", "in", "all_image_ids", ":", "\n", "            ", "continue", "\n", "", "for", "obj", "in", "image", "[", "'objects'", "]", ":", "\n", "            ", "object_id", "=", "obj", "[", "'object_id'", "]", "\n", "final_name", "=", "None", "\n", "final_name_idx", "=", "None", "\n", "for", "name", "in", "obj", "[", "'names'", "]", ":", "\n", "                ", "name", "=", "aliases", ".", "get", "(", "name", ",", "name", ")", "\n", "if", "name", "in", "object_name_to_idx", ":", "\n", "                    ", "final_name", "=", "name", "\n", "final_name_idx", "=", "object_name_to_idx", "[", "final_name", "]", "\n", "break", "\n", "", "", "w", ",", "h", "=", "obj", "[", "'w'", "]", ",", "obj", "[", "'h'", "]", "\n", "too_small", "=", "(", "w", "<", "args", ".", "min_object_size", ")", "or", "(", "h", "<", "args", ".", "min_object_size", ")", "\n", "if", "too_small", ":", "\n", "                ", "num_too_small", "+=", "1", "\n", "", "if", "final_name", "is", "not", "None", "and", "not", "too_small", ":", "\n", "                ", "object_id_to_obj", "[", "object_id", "]", "=", "{", "\n", "'name'", ":", "final_name", ",", "\n", "'name_idx'", ":", "final_name_idx", ",", "\n", "'box'", ":", "[", "obj", "[", "'x'", "]", ",", "obj", "[", "'y'", "]", ",", "obj", "[", "'w'", "]", ",", "obj", "[", "'h'", "]", "]", ",", "\n", "}", "\n", "", "", "", "print", "(", "'Skipped %d objects with size < %d'", "%", "(", "num_too_small", ",", "args", ".", "min_object_size", ")", ")", "\n", "return", "object_id_to_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.create_rel_vocab": [[325, 360], ["collections.defaultdict", "set", "collections.defaultdict.items", "print", "enumerate", "pred_idx_to_name.append", "rel[].lower().strip", "rel_aliases.get", "pred_names.append", "len", "rel[].lower"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get"], ["", "def", "create_rel_vocab", "(", "args", ",", "image_ids", ",", "relationships", ",", "object_id_to_obj", ",", "\n", "rel_aliases", ",", "vocab", ")", ":", "\n", "    ", "pred_counter", "=", "defaultdict", "(", "int", ")", "\n", "image_ids_set", "=", "set", "(", "image_ids", ")", "\n", "for", "image", "in", "relationships", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "if", "image_id", "not", "in", "image_ids_set", ":", "\n", "            ", "continue", "\n", "", "for", "rel", "in", "image", "[", "'relationships'", "]", ":", "\n", "            ", "sid", "=", "rel", "[", "'subject'", "]", "[", "'object_id'", "]", "\n", "oid", "=", "rel", "[", "'object'", "]", "[", "'object_id'", "]", "\n", "found_subject", "=", "sid", "in", "object_id_to_obj", "\n", "found_object", "=", "oid", "in", "object_id_to_obj", "\n", "if", "not", "found_subject", "or", "not", "found_object", ":", "\n", "                ", "continue", "\n", "", "pred", "=", "rel", "[", "'predicate'", "]", ".", "lower", "(", ")", ".", "strip", "(", ")", "\n", "pred", "=", "rel_aliases", ".", "get", "(", "pred", ",", "pred", ")", "\n", "rel", "[", "'predicate'", "]", "=", "pred", "\n", "pred_counter", "[", "pred", "]", "+=", "1", "\n", "\n", "", "", "pred_names", "=", "[", "'__in_image__'", "]", "\n", "for", "pred", ",", "count", "in", "pred_counter", ".", "items", "(", ")", ":", "\n", "        ", "if", "count", ">=", "args", ".", "min_relationship_instances", ":", "\n", "            ", "pred_names", ".", "append", "(", "pred", ")", "\n", "", "", "print", "(", "'Found %d relationship types with >= %d training instances'", "\n", "%", "(", "len", "(", "pred_names", ")", ",", "args", ".", "min_relationship_instances", ")", ")", "\n", "\n", "pred_name_to_idx", "=", "{", "}", "\n", "pred_idx_to_name", "=", "[", "]", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "pred_names", ")", ":", "\n", "        ", "pred_name_to_idx", "[", "name", "]", "=", "idx", "\n", "pred_idx_to_name", ".", "append", "(", "name", ")", "\n", "\n", "", "vocab", "[", "'pred_name_to_idx'", "]", "=", "pred_name_to_idx", "\n", "vocab", "[", "'pred_idx_to_name'", "]", "=", "pred_idx_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.scripts.preprocess_vg.encode_graphs": [[362, 517], ["splits.items", "collections.defaultdict", "print", "collections.defaultdict.items", "print", "numpy_arrays[].items", "len", "len", "final_image_ids.append", "object_ids.append", "object_names.append", "object_boxes.append", "objects_per_image.append", "relationship_ids.append", "relationship_subjects.append", "relationship_predicates.append", "relationship_objects.append", "relationships_per_image.append", "attributes_per_object.append", "print", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "len", "image_object_ids.append", "image_object_names.append", "image_object_boxes.append", "vocab[].get", "object_id_to_idx.get", "object_id_to_idx.get", "image_rel_ids.append", "image_rel_subs.append", "image_rel_preds.append", "image_rel_objs.append", "obj_attribute.get", "obj_id_to_attributes.get", "len", "image_object_ids.append", "image_object_names.append", "image_object_boxes.append", "num_attributes.append", "len", "image_rel_ids.append", "image_rel_subs.append", "image_rel_preds.append", "image_rel_objs.append", "v.astype", "object_attributes.append", "num_attributes.append", "num_attributes.append", "object_attributes.append", "len", "len", "attribute_ids.append", "len"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get", "home.repos.pwc.inspect_result.wtliao_layout2img.sync_batchnorm.comm.FutureResult.get"], ["", "def", "encode_graphs", "(", "args", ",", "splits", ",", "objects", ",", "relationships", ",", "vocab", ",", "\n", "object_id_to_obj", ",", "attributes", ")", ":", "\n", "\n", "    ", "image_id_to_objects", "=", "{", "}", "\n", "for", "image", "in", "objects", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "image_id_to_objects", "[", "image_id", "]", "=", "image", "[", "'objects'", "]", "\n", "", "image_id_to_relationships", "=", "{", "}", "\n", "for", "image", "in", "relationships", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "image_id_to_relationships", "[", "image_id", "]", "=", "image", "[", "'relationships'", "]", "\n", "", "image_id_to_attributes", "=", "{", "}", "\n", "for", "image", "in", "attributes", ":", "\n", "        ", "image_id", "=", "image", "[", "'image_id'", "]", "\n", "image_id_to_attributes", "[", "image_id", "]", "=", "image", "[", "'attributes'", "]", "\n", "\n", "", "numpy_arrays", "=", "{", "}", "\n", "for", "split", ",", "image_ids", "in", "splits", ".", "items", "(", ")", ":", "\n", "        ", "skip_stats", "=", "defaultdict", "(", "int", ")", "\n", "# We need to filter *again* based on number of objects and relationships", "\n", "final_image_ids", "=", "[", "]", "\n", "object_ids", "=", "[", "]", "\n", "object_names", "=", "[", "]", "\n", "object_boxes", "=", "[", "]", "\n", "objects_per_image", "=", "[", "]", "\n", "relationship_ids", "=", "[", "]", "\n", "relationship_subjects", "=", "[", "]", "\n", "relationship_predicates", "=", "[", "]", "\n", "relationship_objects", "=", "[", "]", "\n", "relationships_per_image", "=", "[", "]", "\n", "attribute_ids", "=", "[", "]", "\n", "attributes_per_object", "=", "[", "]", "\n", "object_attributes", "=", "[", "]", "\n", "for", "image_id", "in", "image_ids", ":", "\n", "            ", "image_object_ids", "=", "[", "]", "\n", "image_object_names", "=", "[", "]", "\n", "image_object_boxes", "=", "[", "]", "\n", "object_id_to_idx", "=", "{", "}", "\n", "for", "obj", "in", "image_id_to_objects", "[", "image_id", "]", ":", "\n", "                ", "object_id", "=", "obj", "[", "'object_id'", "]", "\n", "if", "object_id", "not", "in", "object_id_to_obj", ":", "\n", "                    ", "continue", "\n", "", "obj", "=", "object_id_to_obj", "[", "object_id", "]", "\n", "object_id_to_idx", "[", "object_id", "]", "=", "len", "(", "image_object_ids", ")", "\n", "image_object_ids", ".", "append", "(", "object_id", ")", "\n", "image_object_names", ".", "append", "(", "obj", "[", "'name_idx'", "]", ")", "\n", "image_object_boxes", ".", "append", "(", "obj", "[", "'box'", "]", ")", "\n", "", "num_objects", "=", "len", "(", "image_object_ids", ")", "\n", "too_few", "=", "num_objects", "<", "args", ".", "min_objects_per_image", "\n", "too_many", "=", "num_objects", ">", "args", ".", "max_objects_per_image", "\n", "if", "too_few", ":", "\n", "                ", "skip_stats", "[", "'too_few_objects'", "]", "+=", "1", "\n", "continue", "\n", "", "if", "too_many", ":", "\n", "                ", "skip_stats", "[", "'too_many_objects'", "]", "+=", "1", "\n", "continue", "\n", "", "image_rel_ids", "=", "[", "]", "\n", "image_rel_subs", "=", "[", "]", "\n", "image_rel_preds", "=", "[", "]", "\n", "image_rel_objs", "=", "[", "]", "\n", "for", "rel", "in", "image_id_to_relationships", "[", "image_id", "]", ":", "\n", "                ", "relationship_id", "=", "rel", "[", "'relationship_id'", "]", "\n", "pred", "=", "rel", "[", "'predicate'", "]", "\n", "pred_idx", "=", "vocab", "[", "'pred_name_to_idx'", "]", ".", "get", "(", "pred", ",", "None", ")", "\n", "if", "pred_idx", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "sid", "=", "rel", "[", "'subject'", "]", "[", "'object_id'", "]", "\n", "sidx", "=", "object_id_to_idx", ".", "get", "(", "sid", ",", "None", ")", "\n", "oid", "=", "rel", "[", "'object'", "]", "[", "'object_id'", "]", "\n", "oidx", "=", "object_id_to_idx", ".", "get", "(", "oid", ",", "None", ")", "\n", "if", "sidx", "is", "None", "or", "oidx", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "image_rel_ids", ".", "append", "(", "relationship_id", ")", "\n", "image_rel_subs", ".", "append", "(", "sidx", ")", "\n", "image_rel_preds", ".", "append", "(", "pred_idx", ")", "\n", "image_rel_objs", ".", "append", "(", "oidx", ")", "\n", "", "num_relationships", "=", "len", "(", "image_rel_ids", ")", "\n", "too_few", "=", "num_relationships", "<", "args", ".", "min_relationships_per_image", "\n", "too_many", "=", "num_relationships", ">", "args", ".", "max_relationships_per_image", "\n", "if", "too_few", ":", "\n", "                ", "skip_stats", "[", "'too_few_relationships'", "]", "+=", "1", "\n", "continue", "\n", "", "if", "too_many", ":", "\n", "                ", "skip_stats", "[", "'too_many_relationships'", "]", "+=", "1", "\n", "continue", "\n", "\n", "", "obj_id_to_attributes", "=", "{", "}", "\n", "num_attributes", "=", "[", "]", "\n", "for", "obj_attribute", "in", "image_id_to_attributes", "[", "image_id", "]", ":", "\n", "                ", "obj_id_to_attributes", "[", "obj_attribute", "[", "'object_id'", "]", "]", "=", "obj_attribute", ".", "get", "(", "'attributes'", ",", "None", ")", "\n", "", "for", "object_id", "in", "image_object_ids", ":", "\n", "                ", "attributes", "=", "obj_id_to_attributes", ".", "get", "(", "object_id", ",", "None", ")", "\n", "if", "attributes", "is", "None", ":", "\n", "                    ", "object_attributes", ".", "append", "(", "[", "-", "1", "]", "*", "args", ".", "max_attributes_per_image", ")", "\n", "num_attributes", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "attribute_ids", "=", "[", "]", "\n", "for", "attribute", "in", "attributes", ":", "\n", "                        ", "if", "attribute", "in", "vocab", "[", "'attribute_name_to_idx'", "]", ":", "\n", "                            ", "attribute_ids", ".", "append", "(", "vocab", "[", "'attribute_name_to_idx'", "]", "[", "attribute", "]", ")", "\n", "", "if", "len", "(", "attribute_ids", ")", ">=", "args", ".", "max_attributes_per_image", ":", "\n", "                            ", "break", "\n", "", "", "num_attributes", ".", "append", "(", "len", "(", "attribute_ids", ")", ")", "\n", "pad_len", "=", "args", ".", "max_attributes_per_image", "-", "len", "(", "attribute_ids", ")", "\n", "attribute_ids", "=", "attribute_ids", "+", "[", "-", "1", "]", "*", "pad_len", "\n", "object_attributes", ".", "append", "(", "attribute_ids", ")", "\n", "\n", "# Pad object info out to max_objects_per_image", "\n", "", "", "while", "len", "(", "image_object_ids", ")", "<", "args", ".", "max_objects_per_image", ":", "\n", "                ", "image_object_ids", ".", "append", "(", "-", "1", ")", "\n", "image_object_names", ".", "append", "(", "-", "1", ")", "\n", "image_object_boxes", ".", "append", "(", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "num_attributes", ".", "append", "(", "-", "1", ")", "\n", "\n", "# Pad relationship info out to max_relationships_per_image", "\n", "", "while", "len", "(", "image_rel_ids", ")", "<", "args", ".", "max_relationships_per_image", ":", "\n", "                ", "image_rel_ids", ".", "append", "(", "-", "1", ")", "\n", "image_rel_subs", ".", "append", "(", "-", "1", ")", "\n", "image_rel_preds", ".", "append", "(", "-", "1", ")", "\n", "image_rel_objs", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "final_image_ids", ".", "append", "(", "image_id", ")", "\n", "object_ids", ".", "append", "(", "image_object_ids", ")", "\n", "object_names", ".", "append", "(", "image_object_names", ")", "\n", "object_boxes", ".", "append", "(", "image_object_boxes", ")", "\n", "objects_per_image", ".", "append", "(", "num_objects", ")", "\n", "relationship_ids", ".", "append", "(", "image_rel_ids", ")", "\n", "relationship_subjects", ".", "append", "(", "image_rel_subs", ")", "\n", "relationship_predicates", ".", "append", "(", "image_rel_preds", ")", "\n", "relationship_objects", ".", "append", "(", "image_rel_objs", ")", "\n", "relationships_per_image", ".", "append", "(", "num_relationships", ")", "\n", "attributes_per_object", ".", "append", "(", "num_attributes", ")", "\n", "\n", "", "print", "(", "'Skip stats for split \"%s\"'", "%", "split", ")", "\n", "for", "stat", ",", "count", "in", "skip_stats", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "stat", ",", "count", ")", "\n", "", "print", "(", ")", "\n", "numpy_arrays", "[", "split", "]", "=", "{", "\n", "'image_ids'", ":", "np", ".", "asarray", "(", "final_image_ids", ")", ",", "\n", "'object_ids'", ":", "np", ".", "asarray", "(", "object_ids", ")", ",", "\n", "'object_names'", ":", "np", ".", "asarray", "(", "object_names", ")", ",", "\n", "'object_boxes'", ":", "np", ".", "asarray", "(", "object_boxes", ")", ",", "\n", "'objects_per_image'", ":", "np", ".", "asarray", "(", "objects_per_image", ")", ",", "\n", "'relationship_ids'", ":", "np", ".", "asarray", "(", "relationship_ids", ")", ",", "\n", "'relationship_subjects'", ":", "np", ".", "asarray", "(", "relationship_subjects", ")", ",", "\n", "'relationship_predicates'", ":", "np", ".", "asarray", "(", "relationship_predicates", ")", ",", "\n", "'relationship_objects'", ":", "np", ".", "asarray", "(", "relationship_objects", ")", ",", "\n", "'relationships_per_image'", ":", "np", ".", "asarray", "(", "relationships_per_image", ")", ",", "\n", "'attributes_per_object'", ":", "np", ".", "asarray", "(", "attributes_per_object", ")", ",", "\n", "'object_attributes'", ":", "np", ".", "asarray", "(", "object_attributes", ")", ",", "\n", "}", "\n", "for", "k", ",", "v", "in", "numpy_arrays", "[", "split", "]", ".", "items", "(", ")", ":", "\n", "            ", "if", "v", ".", "dtype", "==", "np", ".", "int64", ":", "\n", "                ", "numpy_arrays", "[", "split", "]", "[", "k", "]", "=", "v", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "", "", "return", "numpy_arrays", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.VgSceneGraphDataset.__init__": [[33, 62], ["torch.utils.data.Dataset.__init__", "len", "torchvision.Compose", "open", "json.load", "vg.Resize", "torchvision.ToTensor", "transform.append", "h5py.File", "f.items", "vg.imagenet_preprocess", "list", "torch.IntTensor", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_preprocess"], ["    ", "def", "__init__", "(", "self", ",", "vocab_json", ",", "h5_path", ",", "image_dir", ",", "image_size", "=", "(", "256", ",", "256", ")", ",", "\n", "normalize_images", "=", "True", ",", "max_objects", "=", "10", ",", "max_samples", "=", "None", ",", "\n", "include_relationships", "=", "True", ",", "use_orphaned_objects", "=", "True", ",", "\n", "left_right_flip", "=", "False", ")", ":", "\n", "        ", "super", "(", "VgSceneGraphDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "image_size", "=", "image_size", "\n", "with", "open", "(", "vocab_json", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "vocab", "=", "json", ".", "load", "(", "f", ")", "\n", "", "self", ".", "num_objects", "=", "len", "(", "self", ".", "vocab", "[", "'object_idx_to_name'", "]", ")", "\n", "self", ".", "use_orphaned_objects", "=", "use_orphaned_objects", "\n", "self", ".", "max_objects", "=", "max_objects", "\n", "self", ".", "max_samples", "=", "max_samples", "\n", "self", ".", "left_right_flip", "=", "left_right_flip", "\n", "self", ".", "include_relationships", "=", "include_relationships", "\n", "\n", "transform", "=", "[", "Resize", "(", "image_size", ")", ",", "T", ".", "ToTensor", "(", ")", "]", "\n", "if", "normalize_images", ":", "\n", "            ", "transform", ".", "append", "(", "imagenet_preprocess", "(", ")", ")", "\n", "", "self", ".", "transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "\n", "self", ".", "data", "=", "{", "}", "\n", "with", "h5py", ".", "File", "(", "h5_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "k", ",", "v", "in", "f", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "==", "'image_paths'", ":", "\n", "                    ", "self", ".", "image_paths", "=", "list", "(", "v", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "data", "[", "k", "]", "=", "torch", ".", "IntTensor", "(", "np", ".", "asarray", "(", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.VgSceneGraphDataset.__len__": [[63, 70], ["vg.VgSceneGraphDataset.data[].size", "min"], "methods", ["None"], ["", "", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "num", "=", "self", ".", "data", "[", "'object_names'", "]", ".", "size", "(", "0", ")", "\n", "if", "self", ".", "max_samples", "is", "not", "None", ":", "\n", "            ", "return", "min", "(", "self", ".", "max_samples", ",", "num", ")", "\n", "", "if", "self", ".", "left_right_flip", ":", "\n", "            ", "return", "num", "*", "2", "\n", "", "return", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.VgSceneGraphDataset.__getitem__": [[71, 162], ["os.path.join", "set", "set", "range", "list", "list", "torch.LongTensor().fill_", "torch.FloatTensor().repeat", "enumerate", "range", "vg.VgSceneGraphDataset.data[].size", "open", "range", "[].item", "[].item", "set.add", "set.add", "list.discard", "list.discard", "len", "random.sample", "min", "random.sample", "len", "[].item", "[].tolist", "torch.FloatTensor", "torch.FloatTensor", "vg.VgSceneGraphDataset.data[].size", "PIL.Image.open", "vg.VgSceneGraphDataset.transform", "[].item", "len", "len", "len", "torch.LongTensor", "torch.FloatTensor", "float", "float", "float", "float", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Returns a tuple of:\n        - image: FloatTensor of shape (C, H, W)\n        - objs: LongTensor of shape (O,)\n        - boxes: FloatTensor of shape (O, 4) giving boxes for objects in\n          (x0, y0, x1, y1) format, in a [0, 1] coordinate system.\n        - triples: LongTensor of shape (T, 3) where triples[t] = [i, p, j]\n          means that (objs[i], p, objs[j]) is a triple.\n        \"\"\"", "\n", "flip", "=", "False", "\n", "if", "index", ">=", "self", ".", "data", "[", "'object_names'", "]", ".", "size", "(", "0", ")", ":", "\n", "            ", "index", "=", "index", "-", "self", ".", "data", "[", "'object_names'", "]", ".", "size", "(", "0", ")", "\n", "flip", "=", "True", "\n", "\n", "", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "self", ".", "image_paths", "[", "index", "]", ")", "\n", "\n", "with", "open", "(", "img_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "PIL", ".", "Image", ".", "open", "(", "f", ")", "as", "image", ":", "\n", "                ", "if", "flip", ":", "\n", "                    ", "image", "=", "PIL", ".", "ImageOps", ".", "mirror", "(", "image", ")", "\n", "", "WW", ",", "HH", "=", "image", ".", "size", "\n", "image", "=", "self", ".", "transform", "(", "image", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n", "", "", "H", ",", "W", "=", "self", ".", "image_size", "\n", "\n", "# Figure out which objects appear in relationships and which don't", "\n", "obj_idxs_with_rels", "=", "set", "(", ")", "\n", "obj_idxs_without_rels", "=", "set", "(", "range", "(", "self", ".", "data", "[", "'objects_per_image'", "]", "[", "index", "]", ".", "item", "(", ")", ")", ")", "\n", "for", "r_idx", "in", "range", "(", "self", ".", "data", "[", "'relationships_per_image'", "]", "[", "index", "]", ")", ":", "\n", "            ", "s", "=", "self", ".", "data", "[", "'relationship_subjects'", "]", "[", "index", ",", "r_idx", "]", ".", "item", "(", ")", "\n", "o", "=", "self", ".", "data", "[", "'relationship_objects'", "]", "[", "index", ",", "r_idx", "]", ".", "item", "(", ")", "\n", "obj_idxs_with_rels", ".", "add", "(", "s", ")", "\n", "obj_idxs_with_rels", ".", "add", "(", "o", ")", "\n", "obj_idxs_without_rels", ".", "discard", "(", "s", ")", "\n", "obj_idxs_without_rels", ".", "discard", "(", "o", ")", "\n", "\n", "", "obj_idxs", "=", "list", "(", "obj_idxs_with_rels", ")", "\n", "obj_idxs_without_rels", "=", "list", "(", "obj_idxs_without_rels", ")", "\n", "if", "len", "(", "obj_idxs", ")", ">", "self", ".", "max_objects", "-", "1", ":", "\n", "            ", "obj_idxs", "=", "random", ".", "sample", "(", "obj_idxs", ",", "self", ".", "max_objects", ")", "\n", "", "if", "len", "(", "obj_idxs", ")", "<", "self", ".", "max_objects", "-", "1", "and", "self", ".", "use_orphaned_objects", ":", "\n", "            ", "num_to_add", "=", "self", ".", "max_objects", "-", "1", "-", "len", "(", "obj_idxs", ")", "\n", "num_to_add", "=", "min", "(", "num_to_add", ",", "len", "(", "obj_idxs_without_rels", ")", ")", "\n", "obj_idxs", "+=", "random", ".", "sample", "(", "obj_idxs_without_rels", ",", "num_to_add", ")", "\n", "", "O", "=", "len", "(", "obj_idxs", ")", "+", "1", "\n", "\n", "objs", "=", "torch", ".", "LongTensor", "(", "self", ".", "max_objects", "+", "1", ")", ".", "fill_", "(", "-", "1", ")", "\n", "\n", "boxes", "=", "torch", ".", "FloatTensor", "(", "[", "[", "0", ",", "0", ",", "1", ",", "1", "]", "]", ")", ".", "repeat", "(", "self", ".", "max_objects", "+", "1", ",", "1", ")", "\n", "obj_idx_mapping", "=", "{", "}", "\n", "for", "i", ",", "obj_idx", "in", "enumerate", "(", "obj_idxs", ")", ":", "\n", "            ", "objs", "[", "i", "]", "=", "self", ".", "data", "[", "'object_names'", "]", "[", "index", ",", "obj_idx", "]", ".", "item", "(", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "self", ".", "data", "[", "'object_boxes'", "]", "[", "index", ",", "obj_idx", "]", ".", "tolist", "(", ")", "\n", "x0", "=", "float", "(", "x", ")", "/", "WW", "\n", "y0", "=", "float", "(", "y", ")", "/", "HH", "\n", "x1", "=", "float", "(", "w", ")", "/", "WW", "\n", "y1", "=", "float", "(", "h", ")", "/", "HH", "\n", "if", "flip", ":", "\n", "                ", "x0", "=", "1", "-", "(", "x0", "+", "x1", ")", "\n", "", "boxes", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ")", "\n", "obj_idx_mapping", "[", "obj_idx", "]", "=", "i", "\n", "\n", "# The last object will be the special __image__ object", "\n", "", "objs", "[", "O", "-", "1", "]", "=", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", "\n", "\n", "for", "i", "in", "range", "(", "O", ",", "self", ".", "max_objects", "+", "1", ")", ":", "\n", "# objs.append(self.vocab['object_name_to_idx']['__image__'])", "\n", "# boxes.append(np.array([-0.6, -0.6, 0.5, 0.5]))", "\n", "            ", "objs", "[", "i", "]", "=", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", "\n", "boxes", "[", "i", "]", "=", "torch", ".", "FloatTensor", "(", "[", "-", "0.6", ",", "-", "0.6", ",", "0.5", ",", "0.5", "]", ")", "\n", "\n", "# triples = []", "\n", "# for r_idx in range(self.data['relationships_per_image'][index].item()):", "\n", "#     if not self.include_relationships:", "\n", "#         break", "\n", "#     s = self.data['relationship_subjects'][index, r_idx].item()", "\n", "#     p = self.data['relationship_predicates'][index, r_idx].item()", "\n", "#     o = self.data['relationship_objects'][index, r_idx].item()", "\n", "#     s = obj_idx_mapping.get(s, None)", "\n", "#     o = obj_idx_mapping.get(o, None)", "\n", "#     if s is not None and o is not None:", "\n", "#         triples.append([s, p, o])", "\n", "#", "\n", "# # Add dummy __in_image__ relationships for all objects", "\n", "# in_image = self.vocab['pred_name_to_idx']['__in_image__']", "\n", "# for i in range(O - 1):", "\n", "#     triples.append([i, in_image, O - 1])", "\n", "#", "\n", "# triples = torch.LongTensor(triples)", "\n", "", "return", "image", ",", "objs", ",", "boxes", "# , triples", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.Resize.__init__": [[165, 172], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "interp", "=", "PIL", ".", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "tuple", ")", ":", "\n", "            ", "H", ",", "W", "=", "size", "\n", "self", ".", "size", "=", "(", "W", ",", "H", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "self", ".", "interp", "=", "interp", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.Resize.__call__": [[173, 175], ["img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "self", ".", "interp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.imagenet_preprocess": [[184, 186], ["torchvision.Normalize"], "function", ["None"], ["def", "imagenet_preprocess", "(", ")", ":", "\n", "    ", "return", "T", ".", "Normalize", "(", "mean", "=", "IMAGENET_MEAN", ",", "std", "=", "IMAGENET_STD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.vg_collate_fn": [[188, 231], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "triples.clone.clone", "torch.cat.append", "torch.cat.append", "torch.cat.append", "objs.size", "triples.clone.size", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "vg_collate_fn", "(", "batch", ")", ":", "\n", "    ", "\"\"\"\n    Collate function to be used when wrapping a VgSceneGraphDataset in a\n    DataLoader. Returns a tuple of the following:\n\n    - imgs: FloatTensor of shape (N, C, H, W)\n    - objs: LongTensor of shape (O,) giving categories for all objects\n    - boxes: FloatTensor of shape (O, 4) giving boxes for all objects\n    - triples: FloatTensor of shape (T, 3) giving all triples, where\n    triples[t] = [i, p, j] means that [objs[i], p, objs[j]] is a triple\n    - obj_to_img: LongTensor of shape (O,) mapping objects to images;\n    obj_to_img[i] = n means that objs[i] belongs to imgs[n]\n    - triple_to_img: LongTensor of shape (T,) mapping triples to images;\n    triple_to_img[t] = n means that triples[t] belongs to imgs[n].\n    \"\"\"", "\n", "# batch is a list, and each element is (image, objs, boxes, triples)", "\n", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_triples", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "all_obj_to_img", ",", "all_triple_to_img", "=", "[", "]", ",", "[", "]", "\n", "obj_offset", "=", "0", "\n", "for", "i", ",", "(", "img", ",", "objs", ",", "boxes", ",", "triples", ")", "in", "enumerate", "(", "batch", ")", ":", "\n", "        ", "all_imgs", ".", "append", "(", "img", "[", "None", "]", ")", "\n", "O", ",", "T", "=", "objs", ".", "size", "(", "0", ")", ",", "triples", ".", "size", "(", "0", ")", "\n", "all_objs", ".", "append", "(", "objs", ")", "\n", "all_boxes", ".", "append", "(", "boxes", ")", "\n", "triples", "=", "triples", ".", "clone", "(", ")", "\n", "triples", "[", ":", ",", "0", "]", "+=", "obj_offset", "\n", "triples", "[", ":", ",", "2", "]", "+=", "obj_offset", "\n", "all_triples", ".", "append", "(", "triples", ")", "\n", "\n", "all_obj_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "O", ")", ".", "fill_", "(", "i", ")", ")", "\n", "all_triple_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "T", ")", ".", "fill_", "(", "i", ")", ")", "\n", "obj_offset", "+=", "O", "\n", "\n", "", "all_imgs", "=", "torch", ".", "cat", "(", "all_imgs", ")", "\n", "all_objs", "=", "torch", ".", "cat", "(", "all_objs", ")", "\n", "all_boxes", "=", "torch", ".", "cat", "(", "all_boxes", ")", "\n", "all_triples", "=", "torch", ".", "cat", "(", "all_triples", ")", "\n", "all_obj_to_img", "=", "torch", ".", "cat", "(", "all_obj_to_img", ")", "\n", "all_triple_to_img", "=", "torch", ".", "cat", "(", "all_triple_to_img", ")", "\n", "\n", "out", "=", "(", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_triples", ",", "\n", "all_obj_to_img", ",", "all_triple_to_img", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.vg.vg_uncollate_fn": [[233, 252], ["range", "imgs.size", "triples[].clone", "cur_objs.size", "out.append"], "function", ["None"], ["", "def", "vg_uncollate_fn", "(", "batch", ")", ":", "\n", "    ", "\"\"\"\n    Inverse operation to the above.\n    \"\"\"", "\n", "imgs", ",", "objs", ",", "boxes", ",", "triples", ",", "obj_to_img", ",", "triple_to_img", "=", "batch", "\n", "out", "=", "[", "]", "\n", "obj_offset", "=", "0", "\n", "for", "i", "in", "range", "(", "imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "cur_img", "=", "imgs", "[", "i", "]", "\n", "o_idxs", "=", "(", "obj_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "t_idxs", "=", "(", "triple_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "cur_objs", "=", "objs", "[", "o_idxs", "]", "\n", "cur_boxes", "=", "boxes", "[", "o_idxs", "]", "\n", "cur_triples", "=", "triples", "[", "t_idxs", "]", ".", "clone", "(", ")", "\n", "cur_triples", "[", ":", ",", "0", "]", "-=", "obj_offset", "\n", "cur_triples", "[", ":", ",", "2", "]", "-=", "obj_offset", "\n", "obj_offset", "+=", "cur_objs", ".", "size", "(", "0", ")", "\n", "out", ".", "append", "(", "(", "cur_img", ",", "cur_objs", ",", "cur_boxes", ",", "cur_triples", ")", ")", "\n", "", "return", "out", "\n", "", ""]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.__init__": [[16, 197], ["torch.utils.data.Dataset.__init__", "cocostuff_loader.CocoSceneGraphDataset.set_image_size", "collections.defaultdict", "max", "cocostuff_loader.CocoSceneGraphDataset.vocab[].items", "enumerate", "print", "print", "open", "json.load", "cocostuff_loader.CocoSceneGraphDataset.image_ids.append", "all_instance_categories.append", "set", "set", "set", "len", "len", "name_to_idx.values", "len", "open", "json.load", "all_stuff_categories.append", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_objects[].append", "set.add", "set", "set", "new_image_ids.append", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_objects[].append", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_filename.keys", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_filename.pop", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_size.pop", "cocostuff_loader.CocoSceneGraphDataset.image_id_to_objects.pop", "name_to_idx.values", "new_image_ids.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.set_image_size"], ["    ", "def", "__init__", "(", "self", ",", "image_dir", ",", "instances_json", ",", "stuff_json", "=", "None", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "64", ",", "64", ")", ",", "mask_size", "=", "16", ",", "\n", "normalize_images", "=", "True", ",", "max_samples", "=", "None", ",", "\n", "include_relationships", "=", "True", ",", "min_object_size", "=", "0.02", ",", "\n", "min_objects_per_image", "=", "3", ",", "max_objects_per_image", "=", "8", ",", "left_right_flip", "=", "False", ",", "\n", "include_other", "=", "False", ",", "instance_whitelist", "=", "None", ",", "stuff_whitelist", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        A PyTorch Dataset for loading Coco and Coco-Stuff annotations and converting\n        them to scene graphs on the fly.\n    \n        Inputs:\n        - image_dir: Path to a directory where images are held\n        - instances_json: Path to a JSON file giving COCO annotations\n        - stuff_json: (optional) Path to a JSON file giving COCO-Stuff annotations\n        - stuff_only: (optional, default True) If True then only iterate over\n          images which appear in stuff_json; if False then iterate over all images\n          in instances_json.\n        - image_size: Size (H, W) at which to load images. Default (64, 64).\n        - mask_size: Size M for object segmentation masks; default 16.\n        - normalize_image: If True then normalize images by subtracting ImageNet\n          mean pixel and dividing by ImageNet std pixel.\n        - max_samples: If None use all images. Other wise only use images in the\n          range [0, max_samples). Default None.\n        - include_relationships: If True then include spatial relationships; if\n          False then only include the trivial __in_image__ relationship.\n        - min_object_size: Ignore objects whose bounding box takes up less than\n          this fraction of the image.\n        - min_objects_per_image: Ignore images which have fewer than this many\n          object annotations.\n        - max_objects_per_image: Ignore images which have more than this many\n          object annotations.\n        - include_other: If True, include COCO-Stuff annotations which have category\n          \"other\". Default is False, because I found that these were really noisy\n          and pretty much impossible for the system to model.\n        - instance_whitelist: None means use all instance categories. Otherwise a\n          list giving a whitelist of instance category names to use.\n        - stuff_whitelist: None means use all stuff categories. Otherwise a list\n          giving a whitelist of stuff category names to use.\n        \"\"\"", "\n", "super", "(", "Dataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "stuff_only", "and", "stuff_json", "is", "None", ":", "\n", "            ", "print", "(", "'WARNING: Got stuff_only=True but stuff_json=None.'", ")", "\n", "print", "(", "'Falling back to stuff_only=False.'", ")", "\n", "\n", "", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "max_samples", "=", "max_samples", "\n", "self", ".", "max_objects_per_image", "=", "max_objects_per_image", "\n", "self", ".", "normalize_images", "=", "normalize_images", "\n", "self", ".", "include_relationships", "=", "include_relationships", "\n", "self", ".", "left_right_flip", "=", "left_right_flip", "\n", "self", ".", "set_image_size", "(", "image_size", ")", "\n", "\n", "with", "open", "(", "instances_json", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "instances_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "stuff_data", "=", "None", "\n", "if", "stuff_json", "is", "not", "None", "and", "stuff_json", "!=", "''", ":", "\n", "            ", "with", "open", "(", "stuff_json", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "stuff_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "", "self", ".", "image_ids", "=", "[", "]", "\n", "self", ".", "image_id_to_filename", "=", "{", "}", "\n", "self", ".", "image_id_to_size", "=", "{", "}", "\n", "for", "image_data", "in", "instances_data", "[", "'images'", "]", ":", "\n", "            ", "image_id", "=", "image_data", "[", "'id'", "]", "\n", "filename", "=", "image_data", "[", "'file_name'", "]", "\n", "width", "=", "image_data", "[", "'width'", "]", "\n", "height", "=", "image_data", "[", "'height'", "]", "\n", "self", ".", "image_ids", ".", "append", "(", "image_id", ")", "\n", "self", ".", "image_id_to_filename", "[", "image_id", "]", "=", "filename", "\n", "self", ".", "image_id_to_size", "[", "image_id", "]", "=", "(", "width", ",", "height", ")", "\n", "\n", "", "self", ".", "vocab", "=", "{", "\n", "'object_name_to_idx'", ":", "{", "}", ",", "\n", "'pred_name_to_idx'", ":", "{", "}", ",", "\n", "}", "\n", "object_idx_to_name", "=", "{", "}", "\n", "all_instance_categories", "=", "[", "]", "\n", "for", "category_data", "in", "instances_data", "[", "'categories'", "]", ":", "\n", "            ", "category_id", "=", "category_data", "[", "'id'", "]", "\n", "category_name", "=", "category_data", "[", "'name'", "]", "\n", "all_instance_categories", ".", "append", "(", "category_name", ")", "\n", "object_idx_to_name", "[", "category_id", "]", "=", "category_name", "\n", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "category_name", "]", "=", "category_id", "\n", "", "all_stuff_categories", "=", "[", "]", "\n", "if", "stuff_data", ":", "\n", "            ", "for", "category_data", "in", "stuff_data", "[", "'categories'", "]", ":", "\n", "                ", "category_name", "=", "category_data", "[", "'name'", "]", "\n", "category_id", "=", "category_data", "[", "'id'", "]", "\n", "all_stuff_categories", ".", "append", "(", "category_name", ")", "\n", "object_idx_to_name", "[", "category_id", "]", "=", "category_name", "\n", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "category_name", "]", "=", "category_id", "\n", "\n", "", "", "if", "instance_whitelist", "is", "None", ":", "\n", "            ", "instance_whitelist", "=", "all_instance_categories", "\n", "", "if", "stuff_whitelist", "is", "None", ":", "\n", "            ", "stuff_whitelist", "=", "all_stuff_categories", "\n", "", "category_whitelist", "=", "set", "(", "instance_whitelist", ")", "|", "set", "(", "stuff_whitelist", ")", "\n", "\n", "# Add object data from instances", "\n", "self", ".", "image_id_to_objects", "=", "defaultdict", "(", "list", ")", "\n", "for", "object_data", "in", "instances_data", "[", "'annotations'", "]", ":", "\n", "            ", "image_id", "=", "object_data", "[", "'image_id'", "]", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "W", ",", "H", "=", "self", ".", "image_id_to_size", "[", "image_id", "]", "\n", "box_area", "=", "(", "w", "*", "h", ")", "/", "(", "W", "*", "H", ")", "\n", "# box_area = object_data['area'] / (W * H)", "\n", "box_ok", "=", "box_area", ">", "min_object_size", "\n", "object_name", "=", "object_idx_to_name", "[", "object_data", "[", "'category_id'", "]", "]", "\n", "category_ok", "=", "object_name", "in", "category_whitelist", "\n", "other_ok", "=", "object_name", "!=", "'other'", "or", "include_other", "\n", "if", "box_ok", "and", "category_ok", "and", "other_ok", "and", "(", "object_data", "[", "'iscrowd'", "]", "!=", "1", ")", ":", "\n", "                ", "self", ".", "image_id_to_objects", "[", "image_id", "]", ".", "append", "(", "object_data", ")", "\n", "\n", "# Add object data from stuff", "\n", "", "", "if", "stuff_data", ":", "\n", "            ", "image_ids_with_stuff", "=", "set", "(", ")", "\n", "for", "object_data", "in", "stuff_data", "[", "'annotations'", "]", ":", "\n", "                ", "image_id", "=", "object_data", "[", "'image_id'", "]", "\n", "image_ids_with_stuff", ".", "add", "(", "image_id", ")", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "W", ",", "H", "=", "self", ".", "image_id_to_size", "[", "image_id", "]", "\n", "box_area", "=", "(", "w", "*", "h", ")", "/", "(", "W", "*", "H", ")", "\n", "# box_area = object_data['area'] / (W * H)", "\n", "box_ok", "=", "box_area", ">", "min_object_size", "\n", "object_name", "=", "object_idx_to_name", "[", "object_data", "[", "'category_id'", "]", "]", "\n", "category_ok", "=", "object_name", "in", "category_whitelist", "\n", "other_ok", "=", "object_name", "!=", "'other'", "or", "include_other", "\n", "if", "box_ok", "and", "category_ok", "and", "other_ok", "and", "(", "object_data", "[", "'iscrowd'", "]", "!=", "1", ")", ":", "\n", "                    ", "self", ".", "image_id_to_objects", "[", "image_id", "]", ".", "append", "(", "object_data", ")", "\n", "\n", "", "", "if", "stuff_only", ":", "\n", "                ", "new_image_ids", "=", "[", "]", "\n", "for", "image_id", "in", "self", ".", "image_ids", ":", "\n", "                    ", "if", "image_id", "in", "image_ids_with_stuff", ":", "\n", "                        ", "new_image_ids", ".", "append", "(", "image_id", ")", "\n", "", "", "self", ".", "image_ids", "=", "new_image_ids", "\n", "\n", "all_image_ids", "=", "set", "(", "self", ".", "image_id_to_filename", ".", "keys", "(", ")", ")", "\n", "image_ids_to_remove", "=", "all_image_ids", "-", "image_ids_with_stuff", "\n", "for", "image_id", "in", "image_ids_to_remove", ":", "\n", "                    ", "self", ".", "image_id_to_filename", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "self", ".", "image_id_to_size", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "self", ".", "image_id_to_objects", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "\n", "# COCO category labels start at 1, so use 0 for __image__", "\n", "", "", "", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", "=", "0", "\n", "\n", "# Build object_idx_to_name", "\n", "name_to_idx", "=", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "\n", "assert", "len", "(", "name_to_idx", ")", "==", "len", "(", "set", "(", "name_to_idx", ".", "values", "(", ")", ")", ")", "\n", "max_object_idx", "=", "max", "(", "name_to_idx", ".", "values", "(", ")", ")", "\n", "idx_to_name", "=", "[", "'NONE'", "]", "*", "(", "1", "+", "max_object_idx", ")", "\n", "for", "name", ",", "idx", "in", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", ".", "items", "(", ")", ":", "\n", "            ", "idx_to_name", "[", "idx", "]", "=", "name", "\n", "", "self", ".", "vocab", "[", "'object_idx_to_name'", "]", "=", "idx_to_name", "\n", "\n", "# Prune images that have too few or too many objects", "\n", "new_image_ids", "=", "[", "]", "\n", "total_objs", "=", "0", "\n", "for", "image_id", "in", "self", ".", "image_ids", ":", "\n", "            ", "num_objs", "=", "len", "(", "self", ".", "image_id_to_objects", "[", "image_id", "]", ")", "\n", "total_objs", "+=", "num_objs", "\n", "if", "min_objects_per_image", "<=", "num_objs", "<=", "max_objects_per_image", ":", "\n", "                ", "new_image_ids", ".", "append", "(", "image_id", ")", "\n", "", "", "self", ".", "image_ids", "=", "new_image_ids", "\n", "\n", "self", ".", "vocab", "[", "'pred_idx_to_name'", "]", "=", "[", "\n", "'__in_image__'", ",", "\n", "'left of'", ",", "\n", "'right of'", ",", "\n", "'above'", ",", "\n", "'below'", ",", "\n", "'inside'", ",", "\n", "'surrounding'", ",", "\n", "]", "\n", "self", ".", "vocab", "[", "'pred_name_to_idx'", "]", "=", "{", "}", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "self", ".", "vocab", "[", "'pred_idx_to_name'", "]", ")", ":", "\n", "            ", "self", ".", "vocab", "[", "'pred_name_to_idx'", "]", "[", "name", "]", "=", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.set_image_size": [[198, 205], ["print", "torchvision.Compose", "cocostuff_loader.Resize", "torchvision.ToTensor", "transform.append", "cocostuff_loader.imagenet_preprocess"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_preprocess"], ["", "", "def", "set_image_size", "(", "self", ",", "image_size", ")", ":", "\n", "        ", "print", "(", "'called set_image_size'", ",", "image_size", ")", "\n", "transform", "=", "[", "Resize", "(", "image_size", ")", ",", "T", ".", "ToTensor", "(", ")", "]", "\n", "if", "self", ".", "normalize_images", ":", "\n", "            ", "transform", ".", "append", "(", "imagenet_preprocess", "(", ")", ")", "\n", "", "self", ".", "transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "self", ".", "image_size", "=", "image_size", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.total_objects": [[206, 214], ["enumerate", "len"], "methods", ["None"], ["", "def", "total_objects", "(", "self", ")", ":", "\n", "        ", "total_objs", "=", "0", "\n", "for", "i", ",", "image_id", "in", "enumerate", "(", "self", ".", "image_ids", ")", ":", "\n", "            ", "if", "self", ".", "max_samples", "and", "i", ">=", "self", ".", "max_samples", ":", "\n", "                ", "break", "\n", "", "num_objs", "=", "len", "(", "self", ".", "image_id_to_objects", "[", "image_id", "]", ")", "\n", "total_objs", "+=", "num_objs", "\n", "", "return", "total_objs", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.__len__": [[215, 221], ["min", "len", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "max_samples", "is", "None", ":", "\n", "            ", "if", "self", ".", "left_right_flip", ":", "\n", "                ", "return", "len", "(", "self", ".", "image_ids", ")", "*", "2", "\n", "", "return", "len", "(", "self", ".", "image_ids", ")", "\n", "", "return", "min", "(", "len", "(", "self", ".", "image_ids", ")", ",", "self", ".", "max_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.__getitem__": [[222, 381], ["os.path.join", "range", "torch.LongTensor", "numpy.vstack", "len", "open", "torch.LongTensor.append", "numpy.vstack.append", "len", "torch.LongTensor.append", "numpy.vstack.append", "len", "PIL.Image.open", "cocostuff_loader.CocoSceneGraphDataset.transform", "numpy.array", "numpy.array", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror.convert"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Get the pixels of an image, and a random synthetic scene graph for that\n        image constructed on-the-fly from its COCO object annotations. We assume\n        that the image will have height H, width W, C channels; there will be O\n        object annotations, each of which will have both a bounding box and a\n        segmentation mask of shape (M, M). There will be T triples in the scene\n        graph.\n    \n        Returns a tuple of:\n        - image: FloatTensor of shape (C, H, W)\n        - objs: LongTensor of shape (O,)        - boxes: FloatTensor of shape (O, 4) giving boxes for objects in\n          (x0, y0, x1, y1) format, in a [0, 1] coordinate system\n        - masks: LongTensor of shape (O, M, M) giving segmentation masks for\n          objects, where 0 is background and 1 is object.\n        - triples: LongTensor of shape (T, 3) where triples[t] = [i, p, j]\n          means that (objs[i], p, objs[j]) is a triple.\n        \"\"\"", "\n", "flip", "=", "False", "\n", "# index = 1292", "\n", "if", "index", ">=", "len", "(", "self", ".", "image_ids", ")", ":", "\n", "            ", "index", "=", "index", "-", "len", "(", "self", ".", "image_ids", ")", "\n", "flip", "=", "True", "\n", "", "image_id", "=", "self", ".", "image_ids", "[", "index", "]", "\n", "\n", "filename", "=", "self", ".", "image_id_to_filename", "[", "image_id", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "filename", ")", "\n", "with", "open", "(", "image_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "PIL", ".", "Image", ".", "open", "(", "f", ")", "as", "image", ":", "\n", "                ", "if", "flip", ":", "\n", "                    ", "image", "=", "PIL", ".", "ImageOps", ".", "mirror", "(", "image", ")", "\n", "", "WW", ",", "HH", "=", "image", ".", "size", "\n", "image", "=", "self", ".", "transform", "(", "image", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n", "", "", "objs", ",", "boxes", ",", "masks", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "# obj_masks = []", "\n", "for", "object_data", "in", "self", ".", "image_id_to_objects", "[", "image_id", "]", ":", "\n", "            ", "objs", ".", "append", "(", "object_data", "[", "'category_id'", "]", ")", "\n", "# print(self.vocab['object_idx_to_name'][object_data['category_id']])", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "x0", "=", "x", "/", "WW", "\n", "y0", "=", "y", "/", "HH", "\n", "x1", "=", "(", "w", ")", "/", "WW", "\n", "y1", "=", "(", "h", ")", "/", "HH", "\n", "if", "flip", ":", "\n", "                ", "x0", "=", "1", "-", "(", "x0", "+", "x1", ")", "\n", "", "boxes", ".", "append", "(", "np", ".", "array", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ")", ")", "\n", "\n", "# # This will give a numpy array of shape (HH, WW)", "\n", "# mask = seg_to_mask(object_data['segmentation'], WW, HH)", "\n", "# if flip:", "\n", "#     mask = mask[:, ::-1]", "\n", "#     x = WW - x - w", "\n", "# # Crop the mask according to the bounding box, being careful to", "\n", "# # ensure that we don't crop a zero-area region", "\n", "# # mx0, mx1 = int(round(x)), int(round(x + w))", "\n", "# # my0, my1 = int(round(y)), int(round(y + h))", "\n", "# # mx1 = max(mx0 + 1, mx1)", "\n", "# # my1 = max(my0 + 1, my1)", "\n", "# # obj_mask = mask[my0:my1, mx0:mx1]", "\n", "# # obj_mask = imresize(255.0 * obj_mask, (self.mask_size, self.mask_size),", "\n", "# #                  mode='constant')", "\n", "# # obj_mask = torch.from_numpy((obj_mask > 128).astype(np.int64))", "\n", "# # obj_masks.append(obj_mask)", "\n", "#", "\n", "# mask = imresize(255.0 * mask, (self.image_size[0], self.image_size[1]),", "\n", "#                 mode='constant')", "\n", "# mask = torch.from_numpy((mask > 128).astype(np.int64))", "\n", "# masks.append(mask)", "\n", "\n", "# shuffle(objs)", "\n", "# shuffle(boxes)", "\n", "# shuffle(masks)", "\n", "# Add dummy __image__ object", "\n", "# objs.append(184)", "\n", "# boxes.append(torch.FloatTensor([0, 0, 1, 1]))", "\n", "# masks.append(torch.ones(self.mask_size, self.mask_size).long())", "\n", "\n", "# add 0 for number of objects", "\n", "", "for", "_", "in", "range", "(", "len", "(", "objs", ")", ",", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "objs", ".", "append", "(", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", ")", "\n", "boxes", ".", "append", "(", "np", ".", "array", "(", "[", "-", "0.6", ",", "-", "0.6", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "# masks.append(torch.zeros((self.image_size[0], self.image_size[1])).long())", "\n", "# obj_masks.append(torch.zeros((self.mask_size, self.mask_size)).long())", "\n", "\n", "", "objs", "=", "torch", ".", "LongTensor", "(", "objs", ")", "\n", "boxes", "=", "np", ".", "vstack", "(", "boxes", ")", "\n", "# masks = torch.stack(masks, dim=0)", "\n", "# obj_masks = torch.stack(obj_masks, dim=0)", "\n", "# b_map = self.get_bbox_map_p(boxes)", "\n", "\n", "# box_areas = (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])", "\n", "\n", "# Compute centers of all objects", "\n", "\"\"\"\n        obj_centers = []\n        _, MH, MW = masks.size()\n        for i, obj_idx in enumerate(objs):\n            x0, y0, x1, y1 = boxes[i]\n            mask = (masks[i] == 1)\n            xs = torch.linspace(x0, x1, MW).view(1, MW).expand(MH, MW)\n            ys = torch.linspace(y0, y1, MH).view(MH, 1).expand(MH, MW)\n            if mask.sum() == 0:\n                mean_x = 0.5 * (x0 + x1)\n                mean_y = 0.5 * (y0 + y1)\n            else:\n                mean_x = xs[mask].mean()\n                mean_y = ys[mask].mean()\n            obj_centers.append([mean_x, mean_y])\n        obj_centers = torch.FloatTensor(obj_centers)\n\n        # Add triples\n        \n        triples = []\n        num_objs = objs.size(0)\n        __image__ = self.vocab['object_name_to_idx']['__image__']\n        real_objs = []\n        if num_objs > 1:\n            real_objs = (objs != __image__).nonzero().squeeze(1)\n        for cur in real_objs:\n            choices = [obj for obj in real_objs if obj != cur]\n            if len(choices) == 0 or not self.include_relationships:\n                break\n            other = random.choice(choices)\n            if random.random() > 0.5:\n                s, o = cur, other\n            else:\n                s, o = other, cur\n\n            # Check for inside / surrounding\n            sx0, sy0, sx1, sy1 = boxes[s]\n            ox0, oy0, ox1, oy1 = boxes[o]\n            d = obj_centers[s] - obj_centers[o]\n            theta = math.atan2(d[1], d[0])\n\n            if sx0 < ox0 and sx1 > ox1 and sy0 < oy0 and sy1 > oy1:\n                p = 'surrounding'\n            elif sx0 > ox0 and sx1 < ox1 and sy0 > oy0 and sy1 < oy1:\n                p = 'inside'\n            elif theta >= 3 * math.pi / 4 or theta <= -3 * math.pi / 4:\n                p = 'left of'\n            elif -3 * math.pi / 4 <= theta < -math.pi / 4:\n                p = 'above'\n            elif -math.pi / 4 <= theta < math.pi / 4:\n                p = 'right of'\n            elif math.pi / 4 <= theta < 3 * math.pi / 4:\n                p = 'below'\n            p = self.vocab['pred_name_to_idx'][p]\n            triples.append([s, p, o])\n\n        # Add __in_image__ triples\n        O = objs.size(0)\n        in_image = self.vocab['pred_name_to_idx']['__in_image__']\n        for i in range(O - 1):\n            triples.append([i, in_image, O - 1])\n        \"\"\"", "\n", "\n", "# triples = torch.LongTensor(triples)", "\n", "return", "image", ",", "objs", ",", "boxes", "## , b_map #, None # obj_masks #, obj_masks # , b_map # masks # , triples", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.CocoSceneGraphDataset.get_bbox_map_p": [[382, 392], ["numpy.zeros", "range", "numpy.linspace", "numpy.meshgrid", "len", "min", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_bbox_map_p", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "mapping", "=", "np", ".", "zeros", "(", "(", "len", "(", "bbox", ")", ",", "self", ".", "image_size", "[", "0", "]", ",", "self", ".", "image_size", "[", "0", "]", ")", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "if", "min", "(", "bbox", "[", "idx", "]", ")", "<", "0", ":", "\n", "                ", "continue", "\n", "", "line_space", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "image_size", "[", "0", "]", "-", "1", ",", "num", "=", "self", ".", "image_size", "[", "0", "]", ")", "\n", "xv", ",", "yv", "=", "np", ".", "meshgrid", "(", "line_space", ",", "line_space", ")", "\n", "mapping", "[", "idx", "]", "[", "(", "xv", "<", "int", "(", "(", "bbox", "[", "idx", "]", "[", "0", "]", "+", "bbox", "[", "idx", "]", "[", "2", "]", ")", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "(", "xv", ">", "int", "(", "bbox", "[", "idx", "]", "[", "0", "]", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "\n", "(", "yv", "<", "int", "(", "(", "bbox", "[", "idx", "]", "[", "1", "]", "+", "bbox", "[", "idx", "]", "[", "3", "]", ")", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "(", "yv", ">", "int", "(", "bbox", "[", "idx", "]", "[", "1", "]", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "]", "=", "1", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.Resize.__init__": [[517, 524], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "interp", "=", "PIL", ".", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "tuple", ")", ":", "\n", "              ", "H", ",", "W", "=", "size", "\n", "self", ".", "size", "=", "(", "W", ",", "H", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "self", ".", "interp", "=", "interp", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.Resize.__call__": [[525, 527], ["img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "self", ".", "interp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.seg_to_mask": [[394, 406], ["pycocotools.decode", "type", "pycocotools.frPyObjects", "pycocotools.merge", "type", "pycocotools.frPyObjects"], "function", ["None"], ["", "", "def", "seg_to_mask", "(", "seg", ",", "width", "=", "1.0", ",", "height", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n    Tiny utility for decoding segmentation masks using the pycocotools API.\n    \"\"\"", "\n", "if", "type", "(", "seg", ")", "==", "list", ":", "\n", "        ", "rles", "=", "mask_utils", ".", "frPyObjects", "(", "seg", ",", "height", ",", "width", ")", "\n", "rle", "=", "mask_utils", ".", "merge", "(", "rles", ")", "\n", "", "elif", "type", "(", "seg", "[", "'counts'", "]", ")", "==", "list", ":", "\n", "        ", "rle", "=", "mask_utils", ".", "frPyObjects", "(", "seg", ",", "height", ",", "width", ")", "\n", "", "else", ":", "\n", "        ", "rle", "=", "seg", "\n", "", "return", "mask_utils", ".", "decode", "(", "rle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.coco_collate_fn": [[408, 452], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "triples.clone.clone", "torch.cat.append", "torch.cat.append", "torch.cat.append", "objs.size", "triples.clone.size", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "objs.dim", "triples.clone.dim", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "coco_collate_fn", "(", "batch", ")", ":", "\n", "    ", "\"\"\"\n    Collate function to be used when wrapping CocoSceneGraphDataset in a\n    DataLoader. Returns a tuple of the following:\n  \n    - imgs: FloatTensor of shape (N, C, H, W)\n    - objs: LongTensor of shape (O,) giving object categories\n    - boxes: FloatTensor of shape (O, 4)\n    - masks: FloatTensor of shape (O, M, M)\n    - triples: LongTensor of shape (T, 3) giving triples\n    - obj_to_img: LongTensor of shape (O,) mapping objects to images\n    - triple_to_img: LongTensor of shape (T,) mapping triples to images\n    \"\"\"", "\n", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_masks", ",", "all_triples", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "all_obj_to_img", ",", "all_triple_to_img", "=", "[", "]", ",", "[", "]", "\n", "obj_offset", "=", "0", "\n", "for", "i", ",", "(", "img", ",", "objs", ",", "boxes", ",", "masks", ",", "triples", ")", "in", "enumerate", "(", "batch", ")", ":", "\n", "        ", "all_imgs", ".", "append", "(", "img", "[", "None", "]", ")", "\n", "if", "objs", ".", "dim", "(", ")", "==", "0", "or", "triples", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "O", ",", "T", "=", "objs", ".", "size", "(", "0", ")", ",", "triples", ".", "size", "(", "0", ")", "\n", "all_objs", ".", "append", "(", "objs", ")", "\n", "all_boxes", ".", "append", "(", "boxes", ")", "\n", "all_masks", ".", "append", "(", "masks", ")", "\n", "triples", "=", "triples", ".", "clone", "(", ")", "\n", "triples", "[", ":", ",", "0", "]", "+=", "obj_offset", "\n", "triples", "[", ":", ",", "2", "]", "+=", "obj_offset", "\n", "all_triples", ".", "append", "(", "triples", ")", "\n", "\n", "all_obj_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "O", ")", ".", "fill_", "(", "i", ")", ")", "\n", "all_triple_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "T", ")", ".", "fill_", "(", "i", ")", ")", "\n", "obj_offset", "+=", "O", "\n", "\n", "", "all_imgs", "=", "torch", ".", "cat", "(", "all_imgs", ")", "\n", "all_objs", "=", "torch", ".", "cat", "(", "all_objs", ")", "\n", "all_boxes", "=", "torch", ".", "cat", "(", "all_boxes", ")", "\n", "all_masks", "=", "torch", ".", "cat", "(", "all_masks", ")", "\n", "all_triples", "=", "torch", ".", "cat", "(", "all_triples", ")", "\n", "all_obj_to_img", "=", "torch", ".", "cat", "(", "all_obj_to_img", ")", "\n", "all_triple_to_img", "=", "torch", ".", "cat", "(", "all_triple_to_img", ")", "\n", "\n", "out", "=", "(", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_masks", ",", "all_triples", ",", "\n", "all_obj_to_img", ",", "all_triple_to_img", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.imagenet_preprocess": [[463, 465], ["torchvision.Normalize"], "function", ["None"], ["def", "imagenet_preprocess", "(", ")", ":", "\n", "    ", "return", "T", ".", "Normalize", "(", "mean", "=", "IMAGENET_MEAN", ",", "std", "=", "IMAGENET_STD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.rescale": [[467, 470], ["x.sub().div", "x.min", "x.max", "x.sub"], "function", ["None"], ["", "def", "rescale", "(", "x", ")", ":", "\n", "    ", "lo", ",", "hi", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "return", "x", ".", "sub", "(", "lo", ")", ".", "div", "(", "hi", "-", "lo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.imagenet_deprocess": [[472, 480], ["torchvision.Compose", "torchvision.Normalize", "torchvision.Normalize", "transforms.append"], "function", ["None"], ["", "def", "imagenet_deprocess", "(", "rescale_image", "=", "True", ")", ":", "\n", "    ", "transforms", "=", "[", "\n", "T", ".", "Normalize", "(", "mean", "=", "[", "0", ",", "0", ",", "0", "]", ",", "std", "=", "INV_IMAGENET_STD", ")", ",", "\n", "T", ".", "Normalize", "(", "mean", "=", "INV_IMAGENET_MEAN", ",", "std", "=", "[", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "]", "\n", "if", "rescale_image", ":", "\n", "        ", "transforms", ".", "append", "(", "rescale", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.imagenet_deprocess_orig": [[481, 492], ["cocostuff_loader.imagenet_deprocess", "imgs.cpu().clone.cpu().clone", "range", "torch.cat", "imgs.cpu().clone.size", "img_de.mul().clamp().byte.mul().clamp().byte", "torch.cat.append", "imgs.cpu().clone.cpu", "imagenet_deprocess.", "img_de.mul().clamp().byte.mul().clamp", "img_de.mul().clamp().byte.mul"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess"], ["", "def", "imagenet_deprocess_orig", "(", "imgs", ",", "rescale", "=", "True", ")", ":", "\n", "    ", "deprocess_fn", "=", "imagenet_deprocess", "(", "rescale_image", "=", "rescale", ")", "\n", "imgs", "=", "imgs", ".", "cpu", "(", ")", ".", "clone", "(", ")", "\n", "imgs_de", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "img_de", "=", "deprocess_fn", "(", "imgs", "[", "i", "]", ")", "[", "None", "]", "\n", "img_de", "=", "img_de", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", "\n", "imgs_de", ".", "append", "(", "img_de", ")", "\n", "\n", "", "imgs_de", "=", "torch", ".", "cat", "(", "imgs_de", ",", "dim", "=", "0", ")", "\n", "return", "imgs_de", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.imagenet_deprocess_batch": [[494, 514], ["isinstance", "imgs.cpu().clone.cpu().clone", "cocostuff_loader.imagenet_deprocess", "range", "torch.cat", "imgs.cpu().clone.size", "img_de.mul().clamp().byte.mul().clamp().byte", "torch.cat.append", "imgs.cpu().clone.cpu", "imagenet_deprocess.", "img_de.mul().clamp().byte.mul().clamp", "img_de.mul().clamp().byte.mul"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess"], ["", "def", "imagenet_deprocess_batch", "(", "imgs", ",", "rescale", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - imgs: FloatTensor of shape (N, C, H, W) giving preprocessed images\n    \n    Output:\n    - imgs_de: ByteTensor of shape (N, C, H, W) giving deprocessed images\n    in the range [0, 255]\n    \"\"\"", "\n", "if", "isinstance", "(", "imgs", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "data", "\n", "", "imgs", "=", "imgs", ".", "cpu", "(", ")", ".", "clone", "(", ")", "\n", "deprocess_fn", "=", "imagenet_deprocess", "(", "rescale_image", "=", "rescale", ")", "\n", "imgs_de", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "img_de", "=", "deprocess_fn", "(", "imgs", "[", "i", "]", ")", "[", "None", "]", "\n", "img_de", "=", "img_de", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", "\n", "imgs_de", ".", "append", "(", "img_de", ")", "\n", "", "imgs_de", "=", "torch", ".", "cat", "(", "imgs_de", ",", "dim", "=", "0", ")", "\n", "return", "imgs_de", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.unpack_var": [[529, 533], ["isinstance"], "function", ["None"], ["", "", "def", "unpack_var", "(", "v", ")", ":", "\n", "    ", "if", "isinstance", "(", "v", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "return", "v", ".", "data", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader.split_graph_batch": [[535, 563], ["cocostuff_loader.unpack_var", "cocostuff_loader.unpack_var", "cocostuff_loader.unpack_var", "range", "cocostuff_loader.unpack_var", "unpack_var.max", "triples[].clone", "triples_out.append", "enumerate", "o_idxs.size", "obj_data_out[].append"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var"], ["", "def", "split_graph_batch", "(", "triples", ",", "obj_data", ",", "obj_to_img", ",", "triple_to_img", ")", ":", "\n", "    ", "triples", "=", "unpack_var", "(", "triples", ")", "\n", "obj_data", "=", "[", "unpack_var", "(", "o", ")", "for", "o", "in", "obj_data", "]", "\n", "obj_to_img", "=", "unpack_var", "(", "obj_to_img", ")", "\n", "triple_to_img", "=", "unpack_var", "(", "triple_to_img", ")", "\n", "\n", "triples_out", "=", "[", "]", "\n", "obj_data_out", "=", "[", "[", "]", "for", "_", "in", "obj_data", "]", "\n", "obj_offset", "=", "0", "\n", "N", "=", "obj_to_img", ".", "max", "(", ")", "+", "1", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "o_idxs", "=", "(", "obj_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "t_idxs", "=", "(", "triple_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "cur_triples", "=", "triples", "[", "t_idxs", "]", ".", "clone", "(", ")", "\n", "cur_triples", "[", ":", ",", "0", "]", "-=", "obj_offset", "\n", "cur_triples", "[", ":", ",", "2", "]", "-=", "obj_offset", "\n", "triples_out", ".", "append", "(", "cur_triples", ")", "\n", "\n", "for", "j", ",", "o_data", "in", "enumerate", "(", "obj_data", ")", ":", "\n", "            ", "cur_o_data", "=", "None", "\n", "if", "o_data", "is", "not", "None", ":", "\n", "                ", "cur_o_data", "=", "o_data", "[", "o_idxs", "]", "\n", "", "obj_data_out", "[", "j", "]", ".", "append", "(", "cur_o_data", ")", "\n", "\n", "", "obj_offset", "+=", "o_idxs", ".", "size", "(", "0", ")", "\n", "\n", "return", "triples_out", ",", "obj_data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__init__": [[19, 200], ["torch.utils.data.Dataset.__init__", "cocostuff_loader_ours.CocoSceneGraphDataset.set_image_size", "collections.defaultdict", "max", "cocostuff_loader_ours.CocoSceneGraphDataset.vocab[].items", "enumerate", "print", "print", "open", "json.load", "cocostuff_loader_ours.CocoSceneGraphDataset.image_ids.append", "all_instance_categories.append", "set", "set", "set", "len", "len", "name_to_idx.values", "len", "open", "json.load", "all_stuff_categories.append", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_objects[].append", "set.add", "set", "set", "new_image_ids.append", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_objects[].append", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_filename.keys", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_filename.pop", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_size.pop", "cocostuff_loader_ours.CocoSceneGraphDataset.image_id_to_objects.pop", "name_to_idx.values", "new_image_ids.append"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.set_image_size"], ["    ", "def", "__init__", "(", "self", ",", "image_dir", ",", "instances_json", ",", "stuff_json", "=", "None", ",", "\n", "stuff_only", "=", "True", ",", "image_size", "=", "(", "64", ",", "64", ")", ",", "mask_size", "=", "16", ",", "\n", "normalize_images", "=", "True", ",", "max_samples", "=", "None", ",", "\n", "include_relationships", "=", "True", ",", "min_object_size", "=", "0.02", ",", "\n", "min_objects_per_image", "=", "3", ",", "max_objects_per_image", "=", "8", ",", "left_right_flip", "=", "False", ",", "\n", "include_other", "=", "False", ",", "instance_whitelist", "=", "None", ",", "stuff_whitelist", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        A PyTorch Dataset for loading Coco and Coco-Stuff annotations and converting\n        them to scene graphs on the fly.\n\n        Inputs:\n        - image_dir: Path to a directory where images are held\n        - instances_json: Path to a JSON file giving COCO annotations\n        - stuff_json: (optional) Path to a JSON file giving COCO-Stuff annotations\n        - stuff_only: (optional, default True) If True then only iterate over\n          images which appear in stuff_json; if False then iterate over all images\n          in instances_json.\n        - image_size: Size (H, W) at which to load images. Default (64, 64).\n        - mask_size: Size M for object segmentation masks; default 16.\n        - normalize_image: If True then normalize images by subtracting ImageNet\n          mean pixel and dividing by ImageNet std pixel.\n        - max_samples: If None use all images. Other wise only use images in the\n          range [0, max_samples). Default None.\n        - include_relationships: If True then include spatial relationships; if\n          False then only include the trivial __in_image__ relationship.\n        - min_object_size: Ignore objects whose bounding box takes up less than\n          this fraction of the image.\n        - min_objects_per_image: Ignore images which have fewer than this many\n          object annotations.\n        - max_objects_per_image: Ignore images which have more than this many\n          object annotations.\n        - include_other: If True, include COCO-Stuff annotations which have category\n          \"other\". Default is False, because I found that these were really noisy\n          and pretty much impossible for the system to model.\n        - instance_whitelist: None means use all instance categories. Otherwise a\n          list giving a whitelist of instance category names to use.\n        - stuff_whitelist: None means use all stuff categories. Otherwise a list\n          giving a whitelist of stuff category names to use.\n        \"\"\"", "\n", "super", "(", "Dataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "stuff_only", "and", "stuff_json", "is", "None", ":", "\n", "            ", "print", "(", "'WARNING: Got inst_imstuff_only=True but stuff_json=None.'", ")", "\n", "print", "(", "'Falling back to stuff_only=False.'", ")", "\n", "\n", "", "self", ".", "image_dir", "=", "image_dir", "\n", "self", ".", "mask_size", "=", "mask_size", "\n", "self", ".", "max_samples", "=", "max_samples", "\n", "self", ".", "max_objects_per_image", "=", "max_objects_per_image", "\n", "self", ".", "normalize_images", "=", "normalize_images", "\n", "self", ".", "include_relationships", "=", "include_relationships", "\n", "self", ".", "left_right_flip", "=", "left_right_flip", "\n", "self", ".", "set_image_size", "(", "image_size", ")", "\n", "\n", "with", "open", "(", "instances_json", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "instances_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "stuff_data", "=", "None", "\n", "if", "stuff_json", "is", "not", "None", "and", "stuff_json", "!=", "''", ":", "\n", "            ", "with", "open", "(", "stuff_json", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "stuff_data", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "", "", "self", ".", "image_ids", "=", "[", "]", "\n", "self", ".", "image_id_to_filename", "=", "{", "}", "\n", "self", ".", "image_id_to_size", "=", "{", "}", "\n", "for", "image_data", "in", "instances_data", "[", "'images'", "]", ":", "\n", "            ", "image_id", "=", "image_data", "[", "'id'", "]", "\n", "filename", "=", "image_data", "[", "'file_name'", "]", "\n", "width", "=", "image_data", "[", "'width'", "]", "\n", "height", "=", "image_data", "[", "'height'", "]", "\n", "self", ".", "image_ids", ".", "append", "(", "image_id", ")", "\n", "self", ".", "image_id_to_filename", "[", "image_id", "]", "=", "filename", "\n", "self", ".", "image_id_to_size", "[", "image_id", "]", "=", "(", "width", ",", "height", ")", "\n", "\n", "", "self", ".", "vocab", "=", "{", "\n", "'object_name_to_idx'", ":", "{", "}", ",", "\n", "'pred_name_to_idx'", ":", "{", "}", ",", "\n", "}", "\n", "object_idx_to_name", "=", "{", "}", "\n", "all_instance_categories", "=", "[", "]", "\n", "for", "category_data", "in", "instances_data", "[", "'categories'", "]", ":", "\n", "            ", "category_id", "=", "category_data", "[", "'id'", "]", "\n", "category_name", "=", "category_data", "[", "'name'", "]", "\n", "all_instance_categories", ".", "append", "(", "category_name", ")", "\n", "object_idx_to_name", "[", "category_id", "]", "=", "category_name", "\n", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "category_name", "]", "=", "category_id", "\n", "", "all_stuff_categories", "=", "[", "]", "\n", "if", "stuff_data", ":", "\n", "            ", "for", "category_data", "in", "stuff_data", "[", "'categories'", "]", ":", "\n", "                ", "category_name", "=", "category_data", "[", "'name'", "]", "\n", "category_id", "=", "category_data", "[", "'id'", "]", "\n", "all_stuff_categories", ".", "append", "(", "category_name", ")", "\n", "object_idx_to_name", "[", "category_id", "]", "=", "category_name", "\n", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "category_name", "]", "=", "category_id", "\n", "\n", "", "", "if", "instance_whitelist", "is", "None", ":", "\n", "            ", "instance_whitelist", "=", "all_instance_categories", "\n", "", "if", "stuff_whitelist", "is", "None", ":", "\n", "            ", "stuff_whitelist", "=", "all_stuff_categories", "\n", "", "category_whitelist", "=", "set", "(", "instance_whitelist", ")", "|", "set", "(", "stuff_whitelist", ")", "\n", "\n", "# Add object data from instances", "\n", "self", ".", "image_id_to_objects", "=", "defaultdict", "(", "list", ")", "\n", "for", "object_data", "in", "instances_data", "[", "'annotations'", "]", ":", "\n", "            ", "image_id", "=", "object_data", "[", "'image_id'", "]", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "W", ",", "H", "=", "self", ".", "image_id_to_size", "[", "image_id", "]", "\n", "box_area", "=", "(", "w", "*", "h", ")", "/", "(", "W", "*", "H", ")", "\n", "# box_area = object_data['area'] / (W * H)", "\n", "box_ok", "=", "box_area", ">", "min_object_size", "\n", "object_name", "=", "object_idx_to_name", "[", "object_data", "[", "'category_id'", "]", "]", "\n", "category_ok", "=", "object_name", "in", "category_whitelist", "\n", "other_ok", "=", "object_name", "!=", "'other'", "or", "include_other", "\n", "if", "box_ok", "and", "category_ok", "and", "other_ok", "and", "(", "object_data", "[", "'iscrowd'", "]", "!=", "1", ")", ":", "\n", "                ", "self", ".", "image_id_to_objects", "[", "image_id", "]", ".", "append", "(", "object_data", ")", "\n", "\n", "# Add object data from stuff", "\n", "", "", "if", "stuff_data", ":", "\n", "            ", "image_ids_with_stuff", "=", "set", "(", ")", "\n", "for", "object_data", "in", "stuff_data", "[", "'annotations'", "]", ":", "\n", "                ", "image_id", "=", "object_data", "[", "'image_id'", "]", "\n", "image_ids_with_stuff", ".", "add", "(", "image_id", ")", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "W", ",", "H", "=", "self", ".", "image_id_to_size", "[", "image_id", "]", "\n", "box_area", "=", "(", "w", "*", "h", ")", "/", "(", "W", "*", "H", ")", "\n", "# box_area = object_data['area'] / (W * H)", "\n", "box_ok", "=", "box_area", ">", "min_object_size", "\n", "object_name", "=", "object_idx_to_name", "[", "object_data", "[", "'category_id'", "]", "]", "\n", "category_ok", "=", "object_name", "in", "category_whitelist", "\n", "other_ok", "=", "object_name", "!=", "'other'", "or", "include_other", "\n", "if", "box_ok", "and", "category_ok", "and", "other_ok", "and", "(", "object_data", "[", "'iscrowd'", "]", "!=", "1", ")", ":", "\n", "                    ", "self", ".", "image_id_to_objects", "[", "image_id", "]", ".", "append", "(", "object_data", ")", "\n", "\n", "", "", "if", "stuff_only", ":", "\n", "                ", "new_image_ids", "=", "[", "]", "\n", "for", "image_id", "in", "self", ".", "image_ids", ":", "\n", "                    ", "if", "image_id", "in", "image_ids_with_stuff", ":", "\n", "                        ", "new_image_ids", ".", "append", "(", "image_id", ")", "\n", "", "", "self", ".", "image_ids", "=", "new_image_ids", "\n", "\n", "all_image_ids", "=", "set", "(", "self", ".", "image_id_to_filename", ".", "keys", "(", ")", ")", "\n", "image_ids_to_remove", "=", "all_image_ids", "-", "image_ids_with_stuff", "\n", "for", "image_id", "in", "image_ids_to_remove", ":", "\n", "                    ", "self", ".", "image_id_to_filename", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "self", ".", "image_id_to_size", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "self", ".", "image_id_to_objects", ".", "pop", "(", "image_id", ",", "None", ")", "\n", "\n", "# COCO category labels start at 1, so use 0 for __image__", "\n", "", "", "", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", "=", "0", "\n", "\n", "# Build object_idx_to_name", "\n", "name_to_idx", "=", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "\n", "assert", "len", "(", "name_to_idx", ")", "==", "len", "(", "set", "(", "name_to_idx", ".", "values", "(", ")", ")", ")", "\n", "max_object_idx", "=", "max", "(", "name_to_idx", ".", "values", "(", ")", ")", "\n", "idx_to_name", "=", "[", "'NONE'", "]", "*", "(", "1", "+", "max_object_idx", ")", "\n", "for", "name", ",", "idx", "in", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", ".", "items", "(", ")", ":", "\n", "            ", "idx_to_name", "[", "idx", "]", "=", "name", "\n", "", "self", ".", "vocab", "[", "'object_idx_to_name'", "]", "=", "idx_to_name", "\n", "\n", "# Prune images that have too few or too many objects", "\n", "new_image_ids", "=", "[", "]", "\n", "total_objs", "=", "0", "\n", "for", "image_id", "in", "self", ".", "image_ids", ":", "\n", "            ", "num_objs", "=", "len", "(", "self", ".", "image_id_to_objects", "[", "image_id", "]", ")", "\n", "total_objs", "+=", "num_objs", "\n", "if", "min_objects_per_image", "<=", "num_objs", "<=", "max_objects_per_image", ":", "\n", "                ", "new_image_ids", ".", "append", "(", "image_id", ")", "\n", "", "", "self", ".", "image_ids", "=", "new_image_ids", "\n", "\n", "self", ".", "vocab", "[", "'pred_idx_to_name'", "]", "=", "[", "\n", "'__in_image__'", ",", "\n", "'left of'", ",", "\n", "'right of'", ",", "\n", "'above'", ",", "\n", "'below'", ",", "\n", "'inside'", ",", "\n", "'surrounding'", ",", "\n", "]", "\n", "self", ".", "vocab", "[", "'pred_name_to_idx'", "]", "=", "{", "}", "\n", "for", "idx", ",", "name", "in", "enumerate", "(", "self", ".", "vocab", "[", "'pred_idx_to_name'", "]", ")", ":", "\n", "            ", "self", ".", "vocab", "[", "'pred_name_to_idx'", "]", "[", "name", "]", "=", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.set_image_size": [[201, 208], ["print", "torchvision.Compose", "cocostuff_loader_ours.Resize", "torchvision.ToTensor", "transform.append", "cocostuff_loader_ours.imagenet_preprocess"], "methods", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_preprocess"], ["", "", "def", "set_image_size", "(", "self", ",", "image_size", ")", ":", "\n", "        ", "print", "(", "'called set_image_size'", ",", "image_size", ")", "\n", "transform", "=", "[", "Resize", "(", "image_size", ")", ",", "T", ".", "ToTensor", "(", ")", "]", "\n", "if", "self", ".", "normalize_images", ":", "\n", "            ", "transform", ".", "append", "(", "imagenet_preprocess", "(", ")", ")", "\n", "", "self", ".", "transform", "=", "T", ".", "Compose", "(", "transform", ")", "\n", "self", ".", "image_size", "=", "image_size", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.total_objects": [[209, 217], ["enumerate", "len"], "methods", ["None"], ["", "def", "total_objects", "(", "self", ")", ":", "\n", "        ", "total_objs", "=", "0", "\n", "for", "i", ",", "image_id", "in", "enumerate", "(", "self", ".", "image_ids", ")", ":", "\n", "            ", "if", "self", ".", "max_samples", "and", "i", ">=", "self", ".", "max_samples", ":", "\n", "                ", "break", "\n", "", "num_objs", "=", "len", "(", "self", ".", "image_id_to_objects", "[", "image_id", "]", ")", "\n", "total_objs", "+=", "num_objs", "\n", "", "return", "total_objs", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__len__": [[218, 224], ["min", "len", "len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "max_samples", "is", "None", ":", "\n", "            ", "if", "self", ".", "left_right_flip", ":", "\n", "                ", "return", "len", "(", "self", ".", "image_ids", ")", "*", "2", "\n", "", "return", "len", "(", "self", ".", "image_ids", ")", "\n", "", "return", "min", "(", "len", "(", "self", ".", "image_ids", ")", ",", "self", ".", "max_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.__getitem__": [[225, 417], ["os.path.join", "range", "range", "range", "torch.LongTensor", "numpy.vstack", "torch.LongTensor", "numpy.vstack", "torch.LongTensor", "numpy.vstack", "len", "open", "torch.LongTensor.append", "numpy.vstack.append", "len", "torch.LongTensor.append", "numpy.vstack.append", "len", "torch.LongTensor.append", "numpy.vstack.append", "len", "torch.LongTensor.append", "numpy.vstack.append", "len", "PIL.Image.open", "cocostuff_loader_ours.CocoSceneGraphDataset.transform", "numpy.array", "torch.LongTensor.append", "numpy.vstack.append", "torch.LongTensor.append", "numpy.vstack.append", "numpy.array", "numpy.array", "numpy.array", "PIL.ImageOps.mirror", "PIL.ImageOps.mirror.convert", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Get the pixels of an image, and a random synthetic scene graph for that\n        image constructed on-the-fly from its COCO object annotations. We assume\n        that the image will have height H, width W, C channels; there will be O\n        object annotations, each of which will have both a bounding box and a\n        segmentation mask of shape (M, M). There will be T triples in the scene\n        graph.\n\n        Returns a tuple of:\n        - image: FloatTensor of shape (C, H, W)\n        - objs: LongTensor of shape (O,)\n        - boxes: FloatTensor of shape (O, 4) giving boxes for objects in\n          (x0, y0, x1, y1) format, in a [0, 1] coordinate system\n        - masks: LongTensor of shape (O, M, M) giving segmentation masks for\n          objects, where 0 is background and 1 is object.\n        - triples: LongTensor of shape (T, 3) where triples[t] = [i, p, j]\n          means that (objs[i], p, objs[j]) is a triple.\n        \"\"\"", "\n", "flip", "=", "False", "\n", "if", "index", ">=", "len", "(", "self", ".", "image_ids", ")", ":", "\n", "            ", "index", "=", "index", "-", "len", "(", "self", ".", "image_ids", ")", "\n", "flip", "=", "True", "\n", "", "image_id", "=", "self", ".", "image_ids", "[", "index", "]", "\n", "\n", "filename", "=", "self", ".", "image_id_to_filename", "[", "image_id", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "filename", ")", "\n", "with", "open", "(", "image_path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "with", "PIL", ".", "Image", ".", "open", "(", "f", ")", "as", "image", ":", "\n", "                ", "if", "flip", ":", "\n", "                    ", "image", "=", "PIL", ".", "ImageOps", ".", "mirror", "(", "image", ")", "\n", "", "WW", ",", "HH", "=", "image", ".", "size", "\n", "image", "=", "self", ".", "transform", "(", "image", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n", "", "", "objs", ",", "boxes", ",", "masks", "=", "[", "]", ",", "[", "]", ",", "[", "]", "# for discriminator", "\n", "objs_f", ",", "boxes_f", ",", "objs_b", ",", "boxes_b", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "# for generator", "\n", "# obj_masks = []", "\n", "# change here to split background stuff and foreground objects, category less than 91 (1-90) is foreground object, 92-183 is backgroud stuff", "\n", "for", "object_data", "in", "self", ".", "image_id_to_objects", "[", "image_id", "]", ":", "\n", "            ", "objs", ".", "append", "(", "object_data", "[", "'category_id'", "]", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "x0", "=", "x", "/", "WW", "\n", "y0", "=", "y", "/", "HH", "\n", "x1", "=", "(", "w", ")", "/", "WW", "\n", "y1", "=", "(", "h", ")", "/", "HH", "\n", "if", "flip", ":", "\n", "                ", "x0", "=", "1", "-", "(", "x0", "+", "x1", ")", "\n", "", "boxes", ".", "append", "(", "np", ".", "array", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ")", ")", "\n", "\n", "if", "object_data", "[", "'category_id'", "]", "<", "91", ":", "\n", "\n", "                ", "objs_f", ".", "append", "(", "object_data", "[", "'category_id'", "]", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "x0", "=", "x", "/", "WW", "\n", "y0", "=", "y", "/", "HH", "\n", "x1", "=", "(", "w", ")", "/", "WW", "\n", "y1", "=", "(", "h", ")", "/", "HH", "\n", "if", "flip", ":", "\n", "                    ", "x0", "=", "1", "-", "(", "x0", "+", "x1", ")", "\n", "", "boxes_f", ".", "append", "(", "np", ".", "array", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "objs_b", ".", "append", "(", "object_data", "[", "'category_id'", "]", "-", "91", ")", "\n", "x", ",", "y", ",", "w", ",", "h", "=", "object_data", "[", "'bbox'", "]", "\n", "x0", "=", "x", "/", "WW", "\n", "y0", "=", "y", "/", "HH", "\n", "x1", "=", "(", "w", ")", "/", "WW", "\n", "y1", "=", "(", "h", ")", "/", "HH", "\n", "if", "flip", ":", "\n", "                    ", "x0", "=", "1", "-", "(", "x0", "+", "x1", ")", "\n", "", "boxes_b", ".", "append", "(", "np", ".", "array", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ")", ")", "\n", "\n", "# # This will give a numpy array of shape (HH, WW)", "\n", "# mask = seg_to_mask(object_data['segmentation'], WW, HH)", "\n", "# if flip:", "\n", "#     mask = mask[:, ::-1]", "\n", "#     x = WW - x - w", "\n", "# # Crop the mask according to the bounding box, being careful to", "\n", "# # ensure that we don't crop a zero-area region", "\n", "# # mx0, mx1 = int(round(x)), int(round(x + w))", "\n", "# # my0, my1 = int(round(y)), int(round(y + h))", "\n", "# # mx1 = max(mx0 + 1, mx1)", "\n", "# # my1 = max(my0 + 1, my1)", "\n", "# # obj_mask = mask[my0:my1, mx0:mx1]", "\n", "# # obj_mask = imresize(255.0 * obj_mask, (self.mask_size, self.mask_size),", "\n", "# #                  mode='constant')", "\n", "# # obj_mask = torch.from_numpy((obj_mask > 128).astype(np.int64))", "\n", "# # obj_masks.append(obj_mask)", "\n", "#", "\n", "# mask = imresize(255.0 * mask, (self.image_size[0], self.image_size[1]),", "\n", "#                 mode='constant')", "\n", "# mask = torch.from_numpy((mask > 128).astype(np.int64))", "\n", "# masks.append(mask)", "\n", "\n", "# shuffle(objs)", "\n", "# shuffle(boxes)", "\n", "# shuffle(masks)", "\n", "# Add dummy __image__ object", "\n", "# objs.append(184)", "\n", "# boxes.append(torch.FloatTensor([0, 0, 1, 1]))", "\n", "# masks.append(torch.ones(self.mask_size, self.mask_size).long())", "\n", "\n", "# add 0 for number of objects", "\n", "", "", "for", "_", "in", "range", "(", "len", "(", "objs", ")", ",", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "objs", ".", "append", "(", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", ")", "\n", "boxes", ".", "append", "(", "np", ".", "array", "(", "[", "-", "0.6", ",", "-", "0.6", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "", "for", "_", "in", "range", "(", "len", "(", "objs_f", ")", ",", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "objs_f", ".", "append", "(", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", ")", "\n", "boxes_f", ".", "append", "(", "np", ".", "array", "(", "[", "-", "0.6", ",", "-", "0.6", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "", "for", "_", "in", "range", "(", "len", "(", "objs_b", ")", ",", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "objs_b", ".", "append", "(", "self", ".", "vocab", "[", "'object_name_to_idx'", "]", "[", "'__image__'", "]", ")", "\n", "boxes_b", ".", "append", "(", "np", ".", "array", "(", "[", "-", "0.6", ",", "-", "0.6", ",", "0.5", ",", "0.5", "]", ")", ")", "\n", "# masks.append(torch.zeros((self.image_size[0], self.image_size[1])).long())", "\n", "# obj_masks.append(torch.zeros((self.mask_size, self.mask_size)).long())", "\n", "", "objs", "=", "torch", ".", "LongTensor", "(", "objs", ")", "\n", "boxes", "=", "np", ".", "vstack", "(", "boxes", ")", "\n", "\n", "objs_f", "=", "torch", ".", "LongTensor", "(", "objs_f", ")", "\n", "boxes_f", "=", "np", ".", "vstack", "(", "boxes_f", ")", "\n", "objs_b", "=", "torch", ".", "LongTensor", "(", "objs_b", ")", "\n", "boxes_b", "=", "np", ".", "vstack", "(", "boxes_b", ")", "\n", "# masks = torch.stack(masks, dim=0)", "\n", "# obj_masks = torch.stack(obj_masks, dim=0)", "\n", "# b_map = self.get_bbox_map_p(boxes)", "\n", "\n", "# box_areas = (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])", "\n", "\n", "# Compute centers of all objects", "\n", "\"\"\"\n        obj_centers = []\n        _, MH, MW = masks.size()\n        for i, obj_idx in enumerate(objs):\n            x0, y0, x1, y1 = boxes[i]\n            mask = (masks[i] == 1)\n            xs = torch.linspace(x0, x1, MW).view(1, MW).expand(MH, MW)\n            ys = torch.linspace(y0, y1, MH).view(MH, 1).expand(MH, MW)\n            if mask.sum() == 0:\n                mean_x = 0.5 * (x0 + x1)\n                mean_y = 0.5 * (y0 + y1)\n            else:\n                mean_x = xs[mask].mean()\n                mean_y = ys[mask].mean()\n            obj_centers.append([mean_x, mean_y])\n        obj_centers = torch.FloatTensor(obj_centers)\n\n        # Add triples\n        \n        triples = []\n        num_objs = objs.size(0)\n        __image__ = self.vocab['object_name_to_idx']['__image__']\n        real_objs = []\n        if num_objs > 1:\n            real_objs = (objs != __image__).nonzero().squeeze(1)\n        for cur in real_objs:\n            choices = [obj for obj in real_objs if obj != cur]\n            if len(choices) == 0 or not self.include_relationships:\n                break\n            other = random.choice(choices)\n            if random.random() > 0.5:\n                s, o = cur, other\n            else:\n                s, o = other, cur\n\n            # Check for inside / surrounding\n            sx0, sy0, sx1, sy1 = boxes[s]\n            ox0, oy0, ox1, oy1 = boxes[o]\n            d = obj_centers[s] - obj_centers[o]\n            theta = math.atan2(d[1], d[0])\n\n            if sx0 < ox0 and sx1 > ox1 and sy0 < oy0 and sy1 > oy1:\n                p = 'surrounding'\n            elif sx0 > ox0 and sx1 < ox1 and sy0 > oy0 and sy1 < oy1:\n                p = 'inside'\n            elif theta >= 3 * math.pi / 4 or theta <= -3 * math.pi / 4:\n                p = 'left of'\n            elif -3 * math.pi / 4 <= theta < -math.pi / 4:\n                p = 'above'\n            elif -math.pi / 4 <= theta < math.pi / 4:\n                p = 'right of'\n            elif math.pi / 4 <= theta < 3 * math.pi / 4:\n                p = 'below'\n            p = self.vocab['pred_name_to_idx'][p]\n            triples.append([s, p, o])\n\n        # Add __in_image__ triples\n        O = objs.size(0)\n        in_image = self.vocab['pred_name_to_idx']['__in_image__']\n        for i in range(O - 1):\n            triples.append([i, in_image, O - 1])\n        \"\"\"", "\n", "\n", "# triples = torch.LongTensor(triples)", "\n", "return", "image", ",", "objs", ",", "boxes", ",", "objs_f", ",", "boxes_f", ",", "objs_b", ",", "boxes_b", "# , b_map #, None # obj_masks #, obj_masks # , b_map # masks # , triples", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.CocoSceneGraphDataset.get_bbox_map_p": [[418, 428], ["numpy.zeros", "range", "numpy.linspace", "numpy.meshgrid", "len", "min", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_bbox_map_p", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "mapping", "=", "np", ".", "zeros", "(", "(", "len", "(", "bbox", ")", ",", "self", ".", "image_size", "[", "0", "]", ",", "self", ".", "image_size", "[", "0", "]", ")", ")", "\n", "for", "idx", "in", "range", "(", "self", ".", "max_objects_per_image", ")", ":", "\n", "            ", "if", "min", "(", "bbox", "[", "idx", "]", ")", "<", "0", ":", "\n", "                ", "continue", "\n", "", "line_space", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "image_size", "[", "0", "]", "-", "1", ",", "num", "=", "self", ".", "image_size", "[", "0", "]", ")", "\n", "xv", ",", "yv", "=", "np", ".", "meshgrid", "(", "line_space", ",", "line_space", ")", "\n", "mapping", "[", "idx", "]", "[", "(", "xv", "<", "int", "(", "(", "bbox", "[", "idx", "]", "[", "0", "]", "+", "bbox", "[", "idx", "]", "[", "2", "]", ")", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "(", "xv", ">", "int", "(", "bbox", "[", "idx", "]", "[", "0", "]", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "\n", "(", "yv", "<", "int", "(", "(", "bbox", "[", "idx", "]", "[", "1", "]", "+", "bbox", "[", "idx", "]", "[", "3", "]", ")", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "*", "(", "yv", ">", "int", "(", "bbox", "[", "idx", "]", "[", "1", "]", "*", "self", ".", "image_size", "[", "0", "]", ")", ")", "]", "=", "1", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__init__": [[541, 548], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "interp", "=", "PIL", ".", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "tuple", ")", ":", "\n", "            ", "H", ",", "W", "=", "size", "\n", "self", ".", "size", "=", "(", "W", ",", "H", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "self", ".", "interp", "=", "interp", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.Resize.__call__": [[549, 551], ["img.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "self", ".", "interp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.seg_to_mask": [[430, 442], ["pycocotools.decode", "type", "pycocotools.frPyObjects", "pycocotools.merge", "type", "pycocotools.frPyObjects"], "function", ["None"], ["", "", "def", "seg_to_mask", "(", "seg", ",", "width", "=", "1.0", ",", "height", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n    Tiny utility for decoding segmentation masks using the pycocotools API.\n    \"\"\"", "\n", "if", "type", "(", "seg", ")", "==", "list", ":", "\n", "        ", "rles", "=", "mask_utils", ".", "frPyObjects", "(", "seg", ",", "height", ",", "width", ")", "\n", "rle", "=", "mask_utils", ".", "merge", "(", "rles", ")", "\n", "", "elif", "type", "(", "seg", "[", "'counts'", "]", ")", "==", "list", ":", "\n", "        ", "rle", "=", "mask_utils", ".", "frPyObjects", "(", "seg", ",", "height", ",", "width", ")", "\n", "", "else", ":", "\n", "        ", "rle", "=", "seg", "\n", "", "return", "mask_utils", ".", "decode", "(", "rle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.coco_collate_fn": [[444, 488], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "triples.clone.clone", "torch.cat.append", "torch.cat.append", "torch.cat.append", "objs.size", "triples.clone.size", "torch.LongTensor().fill_", "torch.LongTensor().fill_", "objs.dim", "triples.clone.dim", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "coco_collate_fn", "(", "batch", ")", ":", "\n", "    ", "\"\"\"\n    Collate function to be used when wrapping CocoSceneGraphDataset in a\n    DataLoader. Returns a tuple of the following:\n\n    - imgs: FloatTensor of shape (N, C, H, W)\n    - objs: LongTensor of shape (O,) giving object categories\n    - boxes: FloatTensor of shape (O, 4)\n    - masks: FloatTensor of shape (O, M, M)\n    - triples: LongTensor of shape (T, 3) giving triples\n    - obj_to_img: LongTensor of shape (O,) mapping objects to images\n    - triple_to_img: LongTensor of shape (T,) mapping triples to images\n    \"\"\"", "\n", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_masks", ",", "all_triples", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "all_obj_to_img", ",", "all_triple_to_img", "=", "[", "]", ",", "[", "]", "\n", "obj_offset", "=", "0", "\n", "for", "i", ",", "(", "img", ",", "objs", ",", "boxes", ",", "masks", ",", "triples", ")", "in", "enumerate", "(", "batch", ")", ":", "\n", "        ", "all_imgs", ".", "append", "(", "img", "[", "None", "]", ")", "\n", "if", "objs", ".", "dim", "(", ")", "==", "0", "or", "triples", ".", "dim", "(", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "O", ",", "T", "=", "objs", ".", "size", "(", "0", ")", ",", "triples", ".", "size", "(", "0", ")", "\n", "all_objs", ".", "append", "(", "objs", ")", "\n", "all_boxes", ".", "append", "(", "boxes", ")", "\n", "all_masks", ".", "append", "(", "masks", ")", "\n", "triples", "=", "triples", ".", "clone", "(", ")", "\n", "triples", "[", ":", ",", "0", "]", "+=", "obj_offset", "\n", "triples", "[", ":", ",", "2", "]", "+=", "obj_offset", "\n", "all_triples", ".", "append", "(", "triples", ")", "\n", "\n", "all_obj_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "O", ")", ".", "fill_", "(", "i", ")", ")", "\n", "all_triple_to_img", ".", "append", "(", "torch", ".", "LongTensor", "(", "T", ")", ".", "fill_", "(", "i", ")", ")", "\n", "obj_offset", "+=", "O", "\n", "\n", "", "all_imgs", "=", "torch", ".", "cat", "(", "all_imgs", ")", "\n", "all_objs", "=", "torch", ".", "cat", "(", "all_objs", ")", "\n", "all_boxes", "=", "torch", ".", "cat", "(", "all_boxes", ")", "\n", "all_masks", "=", "torch", ".", "cat", "(", "all_masks", ")", "\n", "all_triples", "=", "torch", ".", "cat", "(", "all_triples", ")", "\n", "all_obj_to_img", "=", "torch", ".", "cat", "(", "all_obj_to_img", ")", "\n", "all_triple_to_img", "=", "torch", ".", "cat", "(", "all_triple_to_img", ")", "\n", "\n", "out", "=", "(", "all_imgs", ",", "all_objs", ",", "all_boxes", ",", "all_masks", ",", "all_triples", ",", "\n", "all_obj_to_img", ",", "all_triple_to_img", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_preprocess": [[499, 501], ["torchvision.Normalize"], "function", ["None"], ["def", "imagenet_preprocess", "(", ")", ":", "\n", "    ", "return", "T", ".", "Normalize", "(", "mean", "=", "IMAGENET_MEAN", ",", "std", "=", "IMAGENET_STD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.rescale": [[503, 506], ["x.sub().div", "x.min", "x.max", "x.sub"], "function", ["None"], ["", "def", "rescale", "(", "x", ")", ":", "\n", "    ", "lo", ",", "hi", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "return", "x", ".", "sub", "(", "lo", ")", ".", "div", "(", "hi", "-", "lo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess": [[508, 516], ["torchvision.Compose", "torchvision.Normalize", "torchvision.Normalize", "transforms.append"], "function", ["None"], ["", "def", "imagenet_deprocess", "(", "rescale_image", "=", "True", ")", ":", "\n", "    ", "transforms", "=", "[", "\n", "T", ".", "Normalize", "(", "mean", "=", "[", "0", ",", "0", ",", "0", "]", ",", "std", "=", "INV_IMAGENET_STD", ")", ",", "\n", "T", ".", "Normalize", "(", "mean", "=", "INV_IMAGENET_MEAN", ",", "std", "=", "[", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "]", "\n", "if", "rescale_image", ":", "\n", "        ", "transforms", ".", "append", "(", "rescale", ")", "\n", "", "return", "T", ".", "Compose", "(", "transforms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess_batch": [[518, 538], ["isinstance", "imgs.cpu().clone.cpu().clone", "cocostuff_loader_ours.imagenet_deprocess", "range", "torch.cat", "imgs.cpu().clone.size", "img_de.mul().clamp().byte.mul().clamp().byte", "torch.cat.append", "imgs.cpu().clone.cpu", "imagenet_deprocess.", "img_de.mul().clamp().byte.mul().clamp", "img_de.mul().clamp().byte.mul"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.imagenet_deprocess"], ["", "def", "imagenet_deprocess_batch", "(", "imgs", ",", "rescale", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n    - imgs: FloatTensor of shape (N, C, H, W) giving preprocessed images\n\n    Output:\n    - imgs_de: ByteTensor of shape (N, C, H, W) giving deprocessed images\n    in the range [0, 255]\n    \"\"\"", "\n", "if", "isinstance", "(", "imgs", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "data", "\n", "", "imgs", "=", "imgs", ".", "cpu", "(", ")", ".", "clone", "(", ")", "\n", "deprocess_fn", "=", "imagenet_deprocess", "(", "rescale_image", "=", "rescale", ")", "\n", "imgs_de", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "imgs", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "img_de", "=", "deprocess_fn", "(", "imgs", "[", "i", "]", ")", "[", "None", "]", "\n", "img_de", "=", "img_de", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", "\n", "imgs_de", ".", "append", "(", "img_de", ")", "\n", "", "imgs_de", "=", "torch", ".", "cat", "(", "imgs_de", ",", "dim", "=", "0", ")", "\n", "return", "imgs_de", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var": [[553, 557], ["isinstance"], "function", ["None"], ["", "", "def", "unpack_var", "(", "v", ")", ":", "\n", "    ", "if", "isinstance", "(", "v", ",", "torch", ".", "autograd", ".", "Variable", ")", ":", "\n", "        ", "return", "v", ".", "data", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.split_graph_batch": [[559, 587], ["cocostuff_loader_ours.unpack_var", "cocostuff_loader_ours.unpack_var", "cocostuff_loader_ours.unpack_var", "range", "cocostuff_loader_ours.unpack_var", "unpack_var.max", "triples[].clone", "triples_out.append", "enumerate", "o_idxs.size", "obj_data_out[].append"], "function", ["home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var", "home.repos.pwc.inspect_result.wtliao_layout2img.data.cocostuff_loader_ours.unpack_var"], ["", "def", "split_graph_batch", "(", "triples", ",", "obj_data", ",", "obj_to_img", ",", "triple_to_img", ")", ":", "\n", "    ", "triples", "=", "unpack_var", "(", "triples", ")", "\n", "obj_data", "=", "[", "unpack_var", "(", "o", ")", "for", "o", "in", "obj_data", "]", "\n", "obj_to_img", "=", "unpack_var", "(", "obj_to_img", ")", "\n", "triple_to_img", "=", "unpack_var", "(", "triple_to_img", ")", "\n", "\n", "triples_out", "=", "[", "]", "\n", "obj_data_out", "=", "[", "[", "]", "for", "_", "in", "obj_data", "]", "\n", "obj_offset", "=", "0", "\n", "N", "=", "obj_to_img", ".", "max", "(", ")", "+", "1", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "o_idxs", "=", "(", "obj_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "t_idxs", "=", "(", "triple_to_img", "==", "i", ")", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "cur_triples", "=", "triples", "[", "t_idxs", "]", ".", "clone", "(", ")", "\n", "cur_triples", "[", ":", ",", "0", "]", "-=", "obj_offset", "\n", "cur_triples", "[", ":", ",", "2", "]", "-=", "obj_offset", "\n", "triples_out", ".", "append", "(", "cur_triples", ")", "\n", "\n", "for", "j", ",", "o_data", "in", "enumerate", "(", "obj_data", ")", ":", "\n", "            ", "cur_o_data", "=", "None", "\n", "if", "o_data", "is", "not", "None", ":", "\n", "                ", "cur_o_data", "=", "o_data", "[", "o_idxs", "]", "\n", "", "obj_data_out", "[", "j", "]", ".", "append", "(", "cur_o_data", ")", "\n", "\n", "", "obj_offset", "+=", "o_idxs", ".", "size", "(", "0", ")", "\n", "\n", "return", "triples_out", ",", "obj_data_out", "\n", "", "", ""]]}