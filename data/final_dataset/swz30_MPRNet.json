{"home.repos.pwc.inspect_result.swz30_MPRNet.None.demo.save_img": [[22, 24], ["cv2.imwrite", "cv2.cvtColor"], "function", ["None"], ["def", "save_img", "(", "filepath", ",", "img", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "filepath", ",", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.None.demo.load_checkpoint": [[25, 36], ["torch.load", "torch.load", "torch.load", "model.load_state_dict", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "def", "load_checkpoint", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "try", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"state_dict\"", "]", ")", "\n", "", "except", ":", "\n", "        ", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.config.Config.__init__": [[56, 90], ["yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "config.Config._C.merge_from_file", "config.Config._C.merge_from_list", "config.Config._C.freeze"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.freeze"], ["def", "__init__", "(", "self", ",", "config_yaml", ":", "str", ",", "config_override", ":", "List", "[", "Any", "]", "=", "[", "]", ")", ":", "\n", "\n", "        ", "self", ".", "_C", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "GPU", "=", "[", "0", "]", "\n", "self", ".", "_C", ".", "VERBOSE", "=", "False", "\n", "\n", "self", ".", "_C", ".", "MODEL", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "MODEL", ".", "MODE", "=", "'global'", "\n", "self", ".", "_C", ".", "MODEL", ".", "SESSION", "=", "'ps128_bs1'", "\n", "\n", "self", ".", "_C", ".", "OPTIM", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BATCH_SIZE", "=", "1", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NUM_EPOCHS", "=", "100", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NEPOCH_DECAY", "=", "[", "100", "]", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_INITIAL", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_MIN", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BETA1", "=", "0.5", "\n", "\n", "self", ".", "_C", ".", "TRAINING", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_AFTER_EVERY", "=", "3", "\n", "self", ".", "_C", ".", "TRAINING", ".", "RESUME", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_IMAGES", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_DIR", "=", "'images_dir/train'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_DIR", "=", "'images_dir/val'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_DIR", "=", "'checkpoints'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_PS", "=", "64", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_PS", "=", "64", "\n", "\n", "# Override parameter values from YAML file first, then from override list.", "\n", "self", ".", "_C", ".", "merge_from_file", "(", "config_yaml", ")", "\n", "self", ".", "_C", ".", "merge_from_list", "(", "config_override", ")", "\n", "\n", "# Make an instantiated object of this class immutable.", "\n", "self", ".", "_C", ".", "freeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.config.Config.dump": [[91, 100], ["config.Config._C.dump", "open"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.dump"], ["", "def", "dump", "(", "self", ",", "file_path", ":", "str", ")", ":", "\n", "        ", "r\"\"\"Save config at the specified file path.\n\n        Parameters\n        ----------\n        file_path: str\n            (YAML) path to save config at.\n        \"\"\"", "\n", "self", ".", "_C", ".", "dump", "(", "stream", "=", "open", "(", "file_path", ",", "\"w\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.config.Config.__getattr__": [[101, 103], ["config.Config._C.__getattr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__getattr__"], ["", "def", "__getattr__", "(", "self", ",", "attr", ":", "str", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__getattr__", "(", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.config.Config.__repr__": [[104, 106], ["config.Config._C.__repr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__repr__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.data_RGB.get_training_data": [[4, 7], ["os.path.exists", "dataset_RGB.DataLoaderTrain"], "function", ["None"], ["def", "get_training_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTrain", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.data_RGB.get_validation_data": [[8, 11], ["os.path.exists", "dataset_RGB.DataLoaderVal"], "function", ["None"], ["", "def", "get_validation_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderVal", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.data_RGB.get_test_data": [[12, 15], ["os.path.exists", "dataset_RGB.DataLoaderTest"], "function", ["None"], ["", "def", "get_test_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTest", "(", "rgb_dir", ",", "img_options", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.image_align": [[15, 59], ["numpy.ones_like", "numpy.eye", "cv2.findTransformECC", "cv2.warpPerspective", "cv2.warpPerspective", "cv2.cvtColor", "cv2.cvtColor", "numpy.ones_like", "numpy.sum", "numpy.sum"], "function", ["None"], ["def", "image_align", "(", "deblurred", ",", "gt", ")", ":", "\n", "# this function is based on kohler evaluation code", "\n", "  ", "z", "=", "deblurred", "\n", "c", "=", "np", ".", "ones_like", "(", "z", ")", "\n", "x", "=", "gt", "\n", "\n", "zs", "=", "(", "np", ".", "sum", "(", "x", "*", "z", ")", "/", "np", ".", "sum", "(", "z", "*", "z", ")", ")", "*", "z", "# simple intensity matching", "\n", "\n", "warp_mode", "=", "cv2", ".", "MOTION_HOMOGRAPHY", "\n", "warp_matrix", "=", "np", ".", "eye", "(", "3", ",", "3", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "# Specify the number of iterations.", "\n", "number_of_iterations", "=", "100", "\n", "\n", "termination_eps", "=", "0", "\n", "\n", "criteria", "=", "(", "cv2", ".", "TERM_CRITERIA_EPS", "|", "cv2", ".", "TERM_CRITERIA_COUNT", ",", "\n", "number_of_iterations", ",", "termination_eps", ")", "\n", "\n", "# Run the ECC algorithm. The results are stored in warp_matrix.", "\n", "(", "cc", ",", "warp_matrix", ")", "=", "cv2", ".", "findTransformECC", "(", "cv2", ".", "cvtColor", "(", "x", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", ",", "cv2", ".", "cvtColor", "(", "zs", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", ",", "warp_matrix", ",", "warp_mode", ",", "criteria", ",", "inputMask", "=", "None", ",", "gaussFiltSize", "=", "5", ")", "\n", "\n", "target_shape", "=", "x", ".", "shape", "\n", "shift", "=", "warp_matrix", "\n", "\n", "zr", "=", "cv2", ".", "warpPerspective", "(", "\n", "zs", ",", "\n", "warp_matrix", ",", "\n", "(", "target_shape", "[", "1", "]", ",", "target_shape", "[", "0", "]", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_CUBIC", "+", "cv2", ".", "WARP_INVERSE_MAP", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_REFLECT", ")", "\n", "\n", "cr", "=", "cv2", ".", "warpPerspective", "(", "\n", "np", ".", "ones_like", "(", "zs", ",", "dtype", "=", "'float32'", ")", ",", "\n", "warp_matrix", ",", "\n", "(", "target_shape", "[", "1", "]", ",", "target_shape", "[", "0", "]", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_NEAREST", "+", "cv2", ".", "WARP_INVERSE_MAP", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "0", ")", "\n", "\n", "zr", "=", "zr", "*", "cr", "\n", "xr", "=", "x", "*", "cr", "\n", "\n", "return", "zr", ",", "xr", ",", "cr", ",", "shift", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.compute_psnr": [[60, 64], ["numpy.sum", "numpy.sum", "numpy.log10"], "function", ["None"], ["", "def", "compute_psnr", "(", "image_true", ",", "image_test", ",", "image_mask", ",", "data_range", "=", "None", ")", ":", "\n", "# this function is based on skimage.metrics.peak_signal_noise_ratio", "\n", "  ", "err", "=", "np", ".", "sum", "(", "(", "image_true", "-", "image_test", ")", "**", "2", ",", "dtype", "=", "np", ".", "float64", ")", "/", "np", ".", "sum", "(", "image_mask", ")", "\n", "return", "10", "*", "np", ".", "log10", "(", "(", "data_range", "**", "2", ")", "/", "err", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.compute_ssim": [[66, 77], ["skimage.metrics.structural_similarity", "int", "numpy.mean", "np.mean.sum().sum", "crop_cr1.sum().sum", "np.mean.sum", "crop_cr1.sum"], "function", ["None"], ["", "def", "compute_ssim", "(", "tar_img", ",", "prd_img", ",", "cr1", ")", ":", "\n", "    ", "ssim_pre", ",", "ssim_map", "=", "structural_similarity", "(", "tar_img", ",", "prd_img", ",", "multichannel", "=", "True", ",", "gaussian_weights", "=", "True", ",", "use_sample_covariance", "=", "False", ",", "data_range", "=", "1.0", ",", "full", "=", "True", ")", "\n", "ssim_map", "=", "ssim_map", "*", "cr1", "\n", "r", "=", "int", "(", "3.5", "*", "1.5", "+", "0.5", ")", "# radius as in ndimage", "\n", "win_size", "=", "2", "*", "r", "+", "1", "\n", "pad", "=", "(", "win_size", "-", "1", ")", "//", "2", "\n", "ssim", "=", "ssim_map", "[", "pad", ":", "-", "pad", ",", "pad", ":", "-", "pad", ",", ":", "]", "\n", "crop_cr1", "=", "cr1", "[", "pad", ":", "-", "pad", ",", "pad", ":", "-", "pad", ",", ":", "]", "\n", "ssim", "=", "ssim", ".", "sum", "(", "axis", "=", "0", ")", ".", "sum", "(", "axis", "=", "0", ")", "/", "crop_cr1", ".", "sum", "(", "axis", "=", "0", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "ssim", "=", "np", ".", "mean", "(", "ssim", ")", "\n", "return", "ssim", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.proc": [[78, 91], ["skimage.io.imread", "skimage.io.imread", "evaluate_RealBlur.image_align", "evaluate_RealBlur.compute_psnr", "evaluate_RealBlur.compute_ssim", "io.imread.astype", "io.imread.astype"], "function", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.image_align", "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.compute_psnr", "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.evaluate_RealBlur.compute_ssim"], ["", "def", "proc", "(", "filename", ")", ":", "\n", "    ", "tar", ",", "prd", "=", "filename", "\n", "tar_img", "=", "io", ".", "imread", "(", "tar", ")", "\n", "prd_img", "=", "io", ".", "imread", "(", "prd", ")", "\n", "\n", "tar_img", "=", "tar_img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "prd_img", "=", "prd_img", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "\n", "prd_img", ",", "tar_img", ",", "cr1", ",", "shift", "=", "image_align", "(", "prd_img", ",", "tar_img", ")", "\n", "\n", "PSNR", "=", "compute_psnr", "(", "tar_img", ",", "prd_img", ",", "cr1", ",", "data_range", "=", "1", ")", "\n", "SSIM", "=", "compute_ssim", "(", "tar_img", ",", "prd_img", ",", "cr1", ")", "\n", "return", "(", "PSNR", ",", "SSIM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTrain.__init__": [[14, 27], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderTrain", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTrain.__len__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTrain.__getitem__": [[31, 100], ["PIL.Image.open", "PIL.Image.open", "random.randint", "random.randint", "torchvision.to_tensor", "torchvision.to_tensor", "random.randint", "random.randint", "random.randint", "torchvision.pad", "torchvision.pad", "torchvision.adjust_gamma", "torchvision.adjust_gamma", "torchvision.adjust_saturation", "torchvision.adjust_saturation", "torch.rot90.flip", "torch.rot90.flip", "os.path.splitext", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "os.path.split", "numpy.random.rand", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "w", ",", "h", "=", "tar_img", ".", "size", "\n", "padw", "=", "ps", "-", "w", "if", "w", "<", "ps", "else", "0", "\n", "padh", "=", "ps", "-", "h", "if", "h", "<", "ps", "else", "0", "\n", "\n", "# Reflect Pad in case image is smaller than patch_size", "\n", "if", "padw", "!=", "0", "or", "padh", "!=", "0", ":", "\n", "            ", "inp_img", "=", "TF", ".", "pad", "(", "inp_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "tar_img", "=", "TF", ".", "pad", "(", "tar_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "TF", ".", "adjust_gamma", "(", "inp_img", ",", "1", ")", "\n", "tar_img", "=", "TF", ".", "adjust_gamma", "(", "tar_img", ",", "1", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "sat_factor", "=", "1", "+", "(", "0.2", "-", "0.4", "*", "np", ".", "random", ".", "rand", "(", ")", ")", "\n", "inp_img", "=", "TF", ".", "adjust_saturation", "(", "inp_img", ",", "sat_factor", ")", "\n", "tar_img", "=", "TF", ".", "adjust_saturation", "(", "tar_img", ",", "sat_factor", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "hh", ",", "ww", "=", "tar_img", ".", "shape", "[", "1", "]", ",", "tar_img", ".", "shape", "[", "2", "]", "\n", "\n", "rr", "=", "random", ".", "randint", "(", "0", ",", "hh", "-", "ps", ")", "\n", "cc", "=", "random", ".", "randint", "(", "0", ",", "ww", "-", "ps", ")", "\n", "aug", "=", "random", ".", "randint", "(", "0", ",", "8", ")", "\n", "\n", "# Crop patch", "\n", "inp_img", "=", "inp_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "tar_img", "=", "tar_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "\n", "# Data Augmentations", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "1", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "1", ")", "\n", "", "elif", "aug", "==", "2", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "2", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "2", ")", "\n", "", "elif", "aug", "==", "3", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "4", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "", "elif", "aug", "==", "5", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n", "", "elif", "aug", "==", "6", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "7", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderVal.__init__": [[102, 115], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ",", "rgb_dir2", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderVal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderVal.__len__": [[116, 118], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderVal.__getitem__": [[119, 140], ["PIL.Image.open", "PIL.Image.open", "torchvision.to_tensor", "torchvision.to_tensor", "torchvision.center_crop", "torchvision.center_crop", "os.path.splitext", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "# Validate on center crop", "\n", "if", "self", ".", "ps", "is", "not", "None", ":", "\n", "            ", "inp_img", "=", "TF", ".", "center_crop", "(", "inp_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "tar_img", "=", "TF", ".", "center_crop", "(", "tar_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTest.__init__": [[142, 150], ["torch.utils.data.Dataset.__init__", "sorted", "len", "os.listdir", "os.path.join", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "inp_dir", ",", "img_options", ")", ":", "\n", "        ", "super", "(", "DataLoaderTest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "inp_dir", ")", ")", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "inp_dir", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "inp_size", "=", "len", "(", "self", ".", "inp_filenames", ")", "\n", "self", ".", "img_options", "=", "img_options", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTest.__len__": [[151, 153], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "inp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.DataLoaderTest.__getitem__": [[154, 162], ["PIL.Image.open", "torchvision.to_tensor", "os.path.splitext", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "path_inp", "=", "self", ".", "inp_filenames", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "path_inp", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "inp", "=", "Image", ".", "open", "(", "path_inp", ")", "\n", "\n", "inp", "=", "TF", ".", "to_tensor", "(", "inp", ")", "\n", "return", "inp", ",", "filename", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.dataset_RGB.is_image_file": [[10, 12], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "'jpeg'", ",", "'JPEG'", ",", "'jpg'", ",", "'png'", ",", "'JPG'", ",", "'PNG'", ",", "'gif'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.CharbonnierLoss.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", "CharbonnierLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.CharbonnierLoss.forward": [[12, 17], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "diff", "=", "x", "-", "y", "\n", "# loss = torch.sum(torch.sqrt(diff * diff + self.eps))", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "(", "diff", "*", "diff", ")", "+", "(", "self", ".", "eps", "*", "self", ".", "eps", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.EdgeLoss.__init__": [[19, 26], ["torch.Module.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "losses.CharbonnierLoss", "losses.EdgeLoss.kernel.cuda", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.Tensor.t", "torch.Tensor.t", "torch.Tensor.t"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EdgeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "k", "=", "torch", ".", "Tensor", "(", "[", "[", ".05", ",", ".25", ",", ".4", ",", ".25", ",", ".05", "]", "]", ")", "\n", "self", ".", "kernel", "=", "torch", ".", "matmul", "(", "k", ".", "t", "(", ")", ",", "k", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "kernel", "=", "self", ".", "kernel", ".", "cuda", "(", ")", "\n", "", "self", ".", "loss", "=", "CharbonnierLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.EdgeLoss.conv_gauss": [[27, 31], ["torch.pad", "torch.pad", "torch.pad", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "img", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "self", ".", "kernel", ".", "shape", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "(", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "return", "F", ".", "conv2d", "(", "img", ",", "self", ".", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.EdgeLoss.laplacian_kernel": [[32, 40], ["losses.EdgeLoss.conv_gauss", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "losses.EdgeLoss.conv_gauss"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss"], ["", "def", "laplacian_kernel", "(", "self", ",", "current", ")", ":", "\n", "        ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ")", "# filter", "\n", "down", "=", "filtered", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "# downsample", "\n", "new_filter", "=", "torch", ".", "zeros_like", "(", "filtered", ")", "\n", "new_filter", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "down", "*", "4", "# upsample", "\n", "filtered", "=", "self", ".", "conv_gauss", "(", "new_filter", ")", "# filter", "\n", "diff", "=", "current", "-", "filtered", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.losses.EdgeLoss.forward": [[41, 44], ["losses.EdgeLoss.loss", "losses.EdgeLoss.laplacian_kernel", "losses.EdgeLoss.laplacian_kernel"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", "(", "self", ".", "laplacian_kernel", "(", "x", ")", ",", "self", ".", "laplacian_kernel", "(", "y", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.CALayer.__init__": [[22, 32], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.CALayer.forward": [[34, 38], ["MPRNet.CALayer.avg_pool", "MPRNet.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.CAB.__init__": [[43, 52], ["torch.Module.__init__", "modules_body.append", "modules_body.append", "modules_body.append", "MPRNet.CALayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", ",", "act", ")", ":", "\n", "        ", "super", "(", "CAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "modules_body", ".", "append", "(", "act", ")", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "self", ".", "CA", "=", "CALayer", "(", "n_feat", ",", "reduction", ",", "bias", "=", "bias", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.CAB.forward": [[53, 58], ["MPRNet.CAB.body", "MPRNet.CAB.CA"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "=", "self", ".", "CA", "(", "res", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.SAM.__init__": [[62, 67], ["torch.Module.__init__", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "super", "(", "SAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "n_feat", ",", "3", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "3", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.SAM.forward": [[68, 75], ["MPRNet.SAM.conv1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "MPRNet.SAM.conv2", "MPRNet.SAM.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_img", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "img", "=", "self", ".", "conv2", "(", "x", ")", "+", "x_img", "\n", "x2", "=", "torch", ".", "sigmoid", "(", "self", ".", "conv3", "(", "img", ")", ")", "\n", "x1", "=", "x1", "*", "x2", "\n", "x1", "=", "x1", "+", "x", "\n", "return", "x1", ",", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.Encoder.__init__": [[80, 103], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.DownSample", "MPRNet.DownSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "encoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level1", ")", "\n", "self", ".", "encoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level2", ")", "\n", "self", ".", "encoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level3", ")", "\n", "\n", "self", ".", "down12", "=", "DownSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "down23", "=", "DownSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "if", "csff", ":", "\n", "            ", "self", ".", "csff_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "csff_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.Encoder.forward": [[104, 122], ["MPRNet.Encoder.encoder_level1", "MPRNet.Encoder.down12", "MPRNet.Encoder.encoder_level2", "MPRNet.Encoder.down23", "MPRNet.Encoder.encoder_level3", "MPRNet.Encoder.csff_dec1", "MPRNet.Encoder.csff_dec2", "MPRNet.Encoder.csff_dec3", "MPRNet.Encoder.csff_enc1", "MPRNet.Encoder.csff_enc2", "MPRNet.Encoder.csff_enc3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", "=", "None", ",", "decoder_outs", "=", "None", ")", ":", "\n", "        ", "enc1", "=", "self", ".", "encoder_level1", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc1", "=", "enc1", "+", "self", ".", "csff_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "csff_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down12", "(", "enc1", ")", "\n", "\n", "enc2", "=", "self", ".", "encoder_level2", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc2", "=", "enc2", "+", "self", ".", "csff_enc2", "(", "encoder_outs", "[", "1", "]", ")", "+", "self", ".", "csff_dec2", "(", "decoder_outs", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down23", "(", "enc2", ")", "\n", "\n", "enc3", "=", "self", ".", "encoder_level3", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc3", "=", "enc3", "+", "self", ".", "csff_enc3", "(", "encoder_outs", "[", "2", "]", ")", "+", "self", ".", "csff_dec3", "(", "decoder_outs", "[", "2", "]", ")", "\n", "\n", "", "return", "[", "enc1", ",", "enc2", ",", "enc3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.Decoder.__init__": [[124, 140], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.SkipUpSample", "MPRNet.SkipUpSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "decoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "decoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level1", ")", "\n", "self", ".", "decoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level2", ")", "\n", "self", ".", "decoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level3", ")", "\n", "\n", "self", ".", "skip_attn1", "=", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "self", ".", "skip_attn2", "=", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "\n", "self", ".", "up21", "=", "SkipUpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up32", "=", "SkipUpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.Decoder.forward": [[141, 152], ["MPRNet.Decoder.decoder_level3", "MPRNet.Decoder.up32", "MPRNet.Decoder.decoder_level2", "MPRNet.Decoder.up21", "MPRNet.Decoder.decoder_level1", "MPRNet.Decoder.skip_attn2", "MPRNet.Decoder.skip_attn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "enc1", ",", "enc2", ",", "enc3", "=", "outs", "\n", "dec3", "=", "self", ".", "decoder_level3", "(", "enc3", ")", "\n", "\n", "x", "=", "self", ".", "up32", "(", "dec3", ",", "self", ".", "skip_attn2", "(", "enc2", ")", ")", "\n", "dec2", "=", "self", ".", "decoder_level2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "up21", "(", "dec2", ",", "self", ".", "skip_attn1", "(", "enc1", ")", ")", "\n", "dec1", "=", "self", ".", "decoder_level1", "(", "x", ")", "\n", "\n", "return", "[", "dec1", ",", "dec2", ",", "dec3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.DownSample.__init__": [[156, 160], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "DownSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "0.5", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", "+", "s_factor", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.DownSample.forward": [[161, 164], ["MPRNet.DownSample.down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.UpSample.__init__": [[166, 170], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "UpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.UpSample.forward": [[171, 174], ["MPRNet.UpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.SkipUpSample.__init__": [[176, 180], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "SkipUpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.SkipUpSample.forward": [[181, 185], ["MPRNet.SkipUpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "x", "+", "y", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.ORB.__init__": [[189, 195], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.conv", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "num_cab", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.ORB.forward": [[196, 200], ["MPRNet.ORB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.ORSNet.__init__": [[203, 223], ["torch.Module.__init__", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.UpSample", "MPRNet.UpSample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "orb1", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb2", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb3", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "\n", "self", ".", "up_enc1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up_dec1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "up_enc2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "self", ".", "up_dec2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "\n", "self", ".", "conv_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "conv_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.ORSNet.forward": [[224, 235], ["MPRNet.ORSNet.orb1", "MPRNet.ORSNet.orb2", "MPRNet.ORSNet.orb3", "MPRNet.ORSNet.conv_dec1", "MPRNet.ORSNet.conv_dec2", "MPRNet.ORSNet.conv_dec3", "MPRNet.ORSNet.conv_enc1", "MPRNet.ORSNet.conv_enc2", "MPRNet.ORSNet.up_dec1", "MPRNet.ORSNet.conv_enc3", "MPRNet.ORSNet.up_dec2", "MPRNet.ORSNet.up_enc1", "MPRNet.ORSNet.up_enc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", ",", "decoder_outs", ")", ":", "\n", "        ", "x", "=", "self", ".", "orb1", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "conv_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "x", "=", "self", ".", "orb2", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc2", "(", "self", ".", "up_enc1", "(", "encoder_outs", "[", "1", "]", ")", ")", "+", "self", ".", "conv_dec2", "(", "self", ".", "up_dec1", "(", "decoder_outs", "[", "1", "]", ")", ")", "\n", "\n", "x", "=", "self", ".", "orb3", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc3", "(", "self", ".", "up_enc2", "(", "encoder_outs", "[", "2", "]", ")", ")", "+", "self", ".", "conv_dec3", "(", "self", ".", "up_dec2", "(", "decoder_outs", "[", "2", "]", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.MPRNet.__init__": [[239, 262], ["torch.Module.__init__", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.ORSNet", "MPRNet.SAM", "MPRNet.SAM", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "in_c", "=", "3", ",", "out_c", "=", "3", ",", "n_feat", "=", "96", ",", "scale_unetfeats", "=", "48", ",", "scale_orsnetfeats", "=", "32", ",", "num_cab", "=", "8", ",", "kernel_size", "=", "3", ",", "reduction", "=", "4", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "MPRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "act", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "shallow_feat1", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat2", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat3", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "self", ".", "stage1_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "False", ")", "\n", "self", ".", "stage1_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage2_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "True", ")", "\n", "self", ".", "stage2_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage3_orsnet", "=", "ORSNet", "(", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", "\n", "\n", "self", ".", "sam12", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "sam23", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "concat12", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "concat23", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "tail", "=", "conv", "(", "n_feat", "+", "scale_orsnetfeats", ",", "out_c", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.MPRNet.forward": [[263, 348], ["x3_img.size", "x3_img.size", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.sam12", "MPRNet.MPRNet.sam12", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_decoder", "MPRNet.MPRNet.sam23", "MPRNet.MPRNet.shallow_feat3", "MPRNet.MPRNet.concat23", "MPRNet.MPRNet.stage3_orsnet", "MPRNet.MPRNet.tail", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "zip", "zip", "zip", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x3_img", ")", ":", "\n", "# Original-resolution Image for Stage 3", "\n", "        ", "H", "=", "x3_img", ".", "size", "(", "2", ")", "\n", "W", "=", "x3_img", ".", "size", "(", "3", ")", "\n", "\n", "# Multi-Patch Hierarchy: Split Image into four non-overlapping patches", "\n", "\n", "# Two Patches for Stage 2", "\n", "x2top_img", "=", "x3_img", "[", ":", ",", ":", ",", "0", ":", "int", "(", "H", "/", "2", ")", ",", ":", "]", "\n", "x2bot_img", "=", "x3_img", "[", ":", ",", ":", ",", "int", "(", "H", "/", "2", ")", ":", "H", ",", ":", "]", "\n", "\n", "# Four Patches for Stage 1", "\n", "x1ltop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rtop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "x1lbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 1---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x1ltop", "=", "self", ".", "shallow_feat1", "(", "x1ltop_img", ")", "\n", "x1rtop", "=", "self", ".", "shallow_feat1", "(", "x1rtop_img", ")", "\n", "x1lbot", "=", "self", ".", "shallow_feat1", "(", "x1lbot_img", ")", "\n", "x1rbot", "=", "self", ".", "shallow_feat1", "(", "x1rbot_img", ")", "\n", "\n", "## Process features of all 4 patches with Encoder of Stage 1", "\n", "feat1_ltop", "=", "self", ".", "stage1_encoder", "(", "x1ltop", ")", "\n", "feat1_rtop", "=", "self", ".", "stage1_encoder", "(", "x1rtop", ")", "\n", "feat1_lbot", "=", "self", ".", "stage1_encoder", "(", "x1lbot", ")", "\n", "feat1_rbot", "=", "self", ".", "stage1_encoder", "(", "x1rbot", ")", "\n", "\n", "## Concat deep features", "\n", "feat1_top", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_ltop", ",", "feat1_rtop", ")", "]", "\n", "feat1_bot", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_lbot", ",", "feat1_rbot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 1", "\n", "res1_top", "=", "self", ".", "stage1_decoder", "(", "feat1_top", ")", "\n", "res1_bot", "=", "self", ".", "stage1_decoder", "(", "feat1_bot", ")", "\n", "\n", "## Apply Supervised Attention Module (SAM)", "\n", "x2top_samfeats", ",", "stage1_img_top", "=", "self", ".", "sam12", "(", "res1_top", "[", "0", "]", ",", "x2top_img", ")", "\n", "x2bot_samfeats", ",", "stage1_img_bot", "=", "self", ".", "sam12", "(", "res1_bot", "[", "0", "]", ",", "x2bot_img", ")", "\n", "\n", "## Output image at Stage 1", "\n", "stage1_img", "=", "torch", ".", "cat", "(", "[", "stage1_img_top", ",", "stage1_img_bot", "]", ",", "2", ")", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 2---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x2top", "=", "self", ".", "shallow_feat2", "(", "x2top_img", ")", "\n", "x2bot", "=", "self", ".", "shallow_feat2", "(", "x2bot_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 1 with shallow features of Stage 2", "\n", "x2top_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2top", ",", "x2top_samfeats", "]", ",", "1", ")", ")", "\n", "x2bot_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2bot", ",", "x2bot_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "## Process features of both patches with Encoder of Stage 2", "\n", "feat2_top", "=", "self", ".", "stage2_encoder", "(", "x2top_cat", ",", "feat1_top", ",", "res1_top", ")", "\n", "feat2_bot", "=", "self", ".", "stage2_encoder", "(", "x2bot_cat", ",", "feat1_bot", ",", "res1_bot", ")", "\n", "\n", "## Concat deep features", "\n", "feat2", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "2", ")", "for", "k", ",", "v", "in", "zip", "(", "feat2_top", ",", "feat2_bot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 2", "\n", "res2", "=", "self", ".", "stage2_decoder", "(", "feat2", ")", "\n", "\n", "## Apply SAM", "\n", "x3_samfeats", ",", "stage2_img", "=", "self", ".", "sam23", "(", "res2", "[", "0", "]", ",", "x3_img", ")", "\n", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 3---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x3", "=", "self", ".", "shallow_feat3", "(", "x3_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 2 with shallow features of Stage 3", "\n", "x3_cat", "=", "self", ".", "concat23", "(", "torch", ".", "cat", "(", "[", "x3", ",", "x3_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "x3_cat", "=", "self", ".", "stage3_orsnet", "(", "x3_cat", ",", "feat2", ",", "res2", ")", "\n", "\n", "stage3_img", "=", "self", ".", "tail", "(", "x3_cat", ")", "\n", "\n", "return", "[", "stage3_img", "+", "x3_img", ",", "stage2_img", ",", "stage1_img", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deblurring.MPRNet.conv": [[13, 17], ["torch.Conv2d"], "function", ["None"], ["def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ",", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dataset_utils.MixUp_AUG.__init__": [[4, 6], ["torch.distributions.beta.Beta", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "dist", "=", "torch", ".", "distributions", ".", "beta", ".", "Beta", "(", "torch", ".", "tensor", "(", "[", "0.6", "]", ")", ",", "torch", ".", "tensor", "(", "[", "0.6", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dataset_utils.MixUp_AUG.aug": [[7, 19], ["rgb_gt.size", "torch.randperm", "dataset_utils.MixUp_AUG.dist.rsample().view().cuda", "dataset_utils.MixUp_AUG.dist.rsample().view", "dataset_utils.MixUp_AUG.dist.rsample"], "methods", ["None"], ["", "def", "aug", "(", "self", ",", "rgb_gt", ",", "rgb_noisy", ")", ":", "\n", "        ", "bs", "=", "rgb_gt", ".", "size", "(", "0", ")", "\n", "indices", "=", "torch", ".", "randperm", "(", "bs", ")", "\n", "rgb_gt2", "=", "rgb_gt", "[", "indices", "]", "\n", "rgb_noisy2", "=", "rgb_noisy", "[", "indices", "]", "\n", "\n", "lam", "=", "self", ".", "dist", ".", "rsample", "(", "(", "bs", ",", "1", ")", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "rgb_gt", "=", "lam", "*", "rgb_gt", "+", "(", "1", "-", "lam", ")", "*", "rgb_gt2", "\n", "rgb_noisy", "=", "lam", "*", "rgb_noisy", "+", "(", "1", "-", "lam", ")", "*", "rgb_noisy2", "\n", "\n", "return", "rgb_gt", ",", "rgb_noisy", "", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.freeze": [[5, 8], ["model.parameters"], "function", ["None"], ["def", "freeze", "(", "model", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.unfreeze": [[9, 12], ["model.parameters"], "function", ["None"], ["", "", "def", "unfreeze", "(", "model", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.is_frozen": [[13, 16], ["all", "model.parameters"], "function", ["None"], ["", "", "def", "is_frozen", "(", "model", ")", ":", "\n", "    ", "x", "=", "[", "p", ".", "requires_grad", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", "\n", "return", "not", "all", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.save_checkpoint": [[17, 21], ["os.path.join", "torch.save"], "function", ["None"], ["", "def", "save_checkpoint", "(", "model_dir", ",", "state", ",", "session", ")", ":", "\n", "    ", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "model_out_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "\"model_epoch_{}_{}.pth\"", ".", "format", "(", "epoch", ",", "session", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "model_out_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.load_checkpoint": [[22, 33], ["torch.load", "model.load_state_dict", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "def", "load_checkpoint", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "try", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"state_dict\"", "]", ")", "\n", "", "except", ":", "\n", "        ", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.load_checkpoint_multigpu": [[35, 43], ["torch.load", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "", "def", "load_checkpoint_multigpu", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.load_start_epoch": [[44, 48], ["torch.load"], "function", ["None"], ["", "def", "load_start_epoch", "(", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "epoch", "=", "checkpoint", "[", "\"epoch\"", "]", "\n", "return", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.load_optim": [[49, 52], ["torch.load", "optimizer.load_state_dict"], "function", ["None"], ["", "def", "load_optim", "(", "optimizer", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "# for p in optimizer.param_groups: lr = p['lr']", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.image_utils.torchPSNR": [[5, 10], ["torch.clamp", "torch.clamp", "torch.log10"], "function", ["None"], ["def", "torchPSNR", "(", "tar_img", ",", "prd_img", ")", ":", "\n", "    ", "imdff", "=", "torch", ".", "clamp", "(", "prd_img", ",", "0", ",", "1", ")", "-", "torch", ".", "clamp", "(", "tar_img", ",", "0", ",", "1", ")", "\n", "rmse", "=", "(", "imdff", "**", "2", ")", ".", "mean", "(", ")", ".", "sqrt", "(", ")", "\n", "ps", "=", "20", "*", "torch", ".", "log10", "(", "1", "/", "rmse", ")", "\n", "return", "ps", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.image_utils.save_img": [[11, 13], ["cv2.imwrite", "cv2.cvtColor"], "function", ["None"], ["", "def", "save_img", "(", "filepath", ",", "img", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "filepath", ",", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.image_utils.numpyPSNR": [[14, 19], ["numpy.sqrt", "numpy.float32", "numpy.float32", "numpy.mean", "numpy.log10"], "function", ["None"], ["", "def", "numpyPSNR", "(", "tar_img", ",", "prd_img", ")", ":", "\n", "    ", "imdff", "=", "np", ".", "float32", "(", "prd_img", ")", "-", "np", ".", "float32", "(", "tar_img", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "ps", "=", "20", "*", "np", ".", "log10", "(", "255", "/", "rmse", ")", "\n", "return", "ps", "\n", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dir_utils.mkdirs": [[5, 11], ["isinstance", "dir_utils.mkdir", "isinstance", "dir_utils.mkdir"], "function", ["home.repos.pwc.inspect_result.swz30_MPRNet.utils.dir_utils.mkdir", "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dir_utils.mkdir"], ["def", "mkdirs", "(", "paths", ")", ":", "\n", "    ", "if", "isinstance", "(", "paths", ",", "list", ")", "and", "not", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "mkdir", "(", "path", ")", "\n", "", "", "else", ":", "\n", "        ", "mkdir", "(", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dir_utils.mkdir": [[12, 15], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.utils.dir_utils.get_last_path": [[16, 19], ["natsort.natsorted", "glob.glob", "os.path.join"], "function", ["None"], ["", "", "def", "get_last_path", "(", "path", ",", "session", ")", ":", "\n", "\t", "x", "=", "natsorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'*%s'", "%", "session", ")", ")", ")", "[", "-", "1", "]", "\n", "return", "x", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.config.Config.__init__": [[56, 90], ["yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "config.Config._C.merge_from_file", "config.Config._C.merge_from_list", "config.Config._C.freeze"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.freeze"], ["def", "__init__", "(", "self", ",", "config_yaml", ":", "str", ",", "config_override", ":", "List", "[", "Any", "]", "=", "[", "]", ")", ":", "\n", "\n", "        ", "self", ".", "_C", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "GPU", "=", "[", "0", "]", "\n", "self", ".", "_C", ".", "VERBOSE", "=", "False", "\n", "\n", "self", ".", "_C", ".", "MODEL", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "MODEL", ".", "MODE", "=", "'global'", "\n", "self", ".", "_C", ".", "MODEL", ".", "SESSION", "=", "'ps128_bs1'", "\n", "\n", "self", ".", "_C", ".", "OPTIM", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BATCH_SIZE", "=", "1", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NUM_EPOCHS", "=", "100", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NEPOCH_DECAY", "=", "[", "100", "]", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_INITIAL", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_MIN", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BETA1", "=", "0.5", "\n", "\n", "self", ".", "_C", ".", "TRAINING", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_AFTER_EVERY", "=", "3", "\n", "self", ".", "_C", ".", "TRAINING", ".", "RESUME", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_IMAGES", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_DIR", "=", "'images_dir/train'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_DIR", "=", "'images_dir/val'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_DIR", "=", "'checkpoints'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_PS", "=", "64", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_PS", "=", "64", "\n", "\n", "# Override parameter values from YAML file first, then from override list.", "\n", "self", ".", "_C", ".", "merge_from_file", "(", "config_yaml", ")", "\n", "self", ".", "_C", ".", "merge_from_list", "(", "config_override", ")", "\n", "\n", "# Make an instantiated object of this class immutable.", "\n", "self", ".", "_C", ".", "freeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.config.Config.dump": [[91, 100], ["config.Config._C.dump", "open"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.dump"], ["", "def", "dump", "(", "self", ",", "file_path", ":", "str", ")", ":", "\n", "        ", "r\"\"\"Save config at the specified file path.\n\n        Parameters\n        ----------\n        file_path: str\n            (YAML) path to save config at.\n        \"\"\"", "\n", "self", ".", "_C", ".", "dump", "(", "stream", "=", "open", "(", "file_path", ",", "\"w\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.config.Config.__getattr__": [[101, 103], ["config.Config._C.__getattr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__getattr__"], ["", "def", "__getattr__", "(", "self", ",", "attr", ":", "str", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__getattr__", "(", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.config.Config.__repr__": [[104, 106], ["config.Config._C.__repr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__repr__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.data_RGB.get_training_data": [[4, 7], ["os.path.exists", "dataset_RGB.DataLoaderTrain"], "function", ["None"], ["def", "get_training_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTrain", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.data_RGB.get_validation_data": [[8, 11], ["os.path.exists", "dataset_RGB.DataLoaderVal"], "function", ["None"], ["", "def", "get_validation_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderVal", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.data_RGB.get_test_data": [[12, 15], ["os.path.exists", "dataset_RGB.DataLoaderTest"], "function", ["None"], ["", "def", "get_test_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTest", "(", "rgb_dir", ",", "img_options", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTrain.__init__": [[14, 27], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderTrain", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTrain.__len__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTrain.__getitem__": [[31, 89], ["PIL.Image.open", "PIL.Image.open", "torchvision.to_tensor", "torchvision.to_tensor", "random.randint", "random.randint", "random.randint", "torchvision.pad", "torchvision.pad", "torch.rot90.flip", "torch.rot90.flip", "os.path.splitext", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "os.path.split", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "w", ",", "h", "=", "tar_img", ".", "size", "\n", "padw", "=", "ps", "-", "w", "if", "w", "<", "ps", "else", "0", "\n", "padh", "=", "ps", "-", "h", "if", "h", "<", "ps", "else", "0", "\n", "\n", "# Reflect Pad in case image is smaller than patch_size", "\n", "if", "padw", "!=", "0", "or", "padh", "!=", "0", ":", "\n", "            ", "inp_img", "=", "TF", ".", "pad", "(", "inp_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "tar_img", "=", "TF", ".", "pad", "(", "tar_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "TF", ".", "adjust_gamma", "(", "inp_img", ",", "1", ")", "\n", "tar_img", "=", "TF", ".", "adjust_gamma", "(", "tar_img", ",", "1", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "sat_factor", "=", "1", "+", "(", "0.2", "-", "0.4", "*", "np", ".", "random", ".", "rand", "(", ")", ")", "\n", "inp_img", "=", "TF", ".", "adjust_saturation", "(", "inp_img", ",", "sat_factor", ")", "\n", "tar_img", "=", "TF", ".", "adjust_saturation", "(", "tar_img", ",", "sat_factor", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "hh", ",", "ww", "=", "tar_img", ".", "shape", "[", "1", "]", ",", "tar_img", ".", "shape", "[", "2", "]", "\n", "\n", "rr", "=", "random", ".", "randint", "(", "0", ",", "hh", "-", "ps", ")", "\n", "cc", "=", "random", ".", "randint", "(", "0", ",", "ww", "-", "ps", ")", "\n", "aug", "=", "random", ".", "randint", "(", "0", ",", "8", ")", "\n", "\n", "# Crop patch", "\n", "inp_img", "=", "inp_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "tar_img", "=", "tar_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "\n", "# Data Augmentations", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "1", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "1", ")", "\n", "", "elif", "aug", "==", "2", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "2", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "2", ")", "\n", "", "elif", "aug", "==", "3", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "4", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "", "elif", "aug", "==", "5", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderVal.__init__": [[91, 104], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "7", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n", "", "", "class", "DataLoaderVal", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ",", "rgb_dir2", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderVal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderVal.__len__": [[105, 107], ["None"], "methods", ["None"], ["inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderVal.__getitem__": [[108, 129], ["PIL.Image.open", "PIL.Image.open", "torchvision.to_tensor", "torchvision.to_tensor", "torchvision.center_crop", "torchvision.center_crop", "os.path.splitext", "os.path.split"], "methods", ["None"], ["self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "# Validate on center crop", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTest.__init__": [[131, 139], ["torch.utils.data.Dataset.__init__", "sorted", "len", "os.listdir", "os.path.join", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["            ", "inp_img", "=", "TF", ".", "center_crop", "(", "inp_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "tar_img", "=", "TF", ".", "center_crop", "(", "tar_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTest.__len__": [[140, 142], ["None"], "methods", ["None"], ["\n", "", "", "class", "DataLoaderTest", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "inp_dir", ",", "img_options", ")", ":", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.DataLoaderTest.__getitem__": [[143, 151], ["PIL.Image.open", "torchvision.to_tensor", "os.path.splitext", "os.path.split"], "methods", ["None"], ["        ", "super", "(", "DataLoaderTest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "inp_dir", ")", ")", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "inp_dir", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "inp_size", "=", "len", "(", "self", ".", "inp_filenames", ")", "\n", "self", ".", "img_options", "=", "img_options", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.dataset_RGB.is_image_file": [[10, 12], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "'jpeg'", ",", "'JPEG'", ",", "'jpg'", ",", "'png'", ",", "'JPG'", ",", "'PNG'", ",", "'gif'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.generate_patches_SIDD.save_files": [[46, 61], ["cv2.imread", "cv2.imread", "range", "numpy.random.randint", "numpy.random.randint", "cv2.imwrite", "cv2.imwrite", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "def", "save_files", "(", "i", ")", ":", "\n", "    ", "noisy_file", ",", "clean_file", "=", "noisy_files", "[", "i", "]", ",", "clean_files", "[", "i", "]", "\n", "noisy_img", "=", "cv2", ".", "imread", "(", "noisy_file", ")", "\n", "clean_img", "=", "cv2", ".", "imread", "(", "clean_file", ")", "\n", "\n", "H", "=", "noisy_img", ".", "shape", "[", "0", "]", "\n", "W", "=", "noisy_img", ".", "shape", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "NUM_PATCHES", ")", ":", "\n", "        ", "rr", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "H", "-", "PS", ")", "\n", "cc", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "W", "-", "PS", ")", "\n", "noisy_patch", "=", "noisy_img", "[", "rr", ":", "rr", "+", "PS", ",", "cc", ":", "cc", "+", "PS", ",", ":", "]", "\n", "clean_patch", "=", "clean_img", "[", "rr", ":", "rr", "+", "PS", ",", "cc", ":", "cc", "+", "PS", ",", ":", "]", "\n", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "noisy_patchDir", ",", "'{}_{}.png'", ".", "format", "(", "i", "+", "1", ",", "j", "+", "1", ")", ")", ",", "noisy_patch", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "clean_patchDir", ",", "'{}_{}.png'", ".", "format", "(", "i", "+", "1", ",", "j", "+", "1", ")", ")", ",", "clean_patch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.CharbonnierLoss.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", "CharbonnierLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.CharbonnierLoss.forward": [[12, 17], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "diff", "=", "x", "-", "y", "\n", "# loss = torch.sum(torch.sqrt(diff * diff + self.eps))", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "(", "diff", "*", "diff", ")", "+", "(", "self", ".", "eps", "*", "self", ".", "eps", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.EdgeLoss.__init__": [[19, 26], ["torch.Module.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "losses.CharbonnierLoss", "losses.EdgeLoss.kernel.cuda", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.Tensor.t", "torch.Tensor.t", "torch.Tensor.t"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EdgeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "k", "=", "torch", ".", "Tensor", "(", "[", "[", ".05", ",", ".25", ",", ".4", ",", ".25", ",", ".05", "]", "]", ")", "\n", "self", ".", "kernel", "=", "torch", ".", "matmul", "(", "k", ".", "t", "(", ")", ",", "k", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "kernel", "=", "self", ".", "kernel", ".", "cuda", "(", ")", "\n", "", "self", ".", "loss", "=", "CharbonnierLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.EdgeLoss.conv_gauss": [[27, 31], ["torch.pad", "torch.pad", "torch.pad", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "img", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "self", ".", "kernel", ".", "shape", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "(", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "return", "F", ".", "conv2d", "(", "img", ",", "self", ".", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.EdgeLoss.laplacian_kernel": [[32, 40], ["losses.EdgeLoss.conv_gauss", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "losses.EdgeLoss.conv_gauss"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss"], ["", "def", "laplacian_kernel", "(", "self", ",", "current", ")", ":", "\n", "        ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ")", "# filter", "\n", "down", "=", "filtered", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "# downsample", "\n", "new_filter", "=", "torch", ".", "zeros_like", "(", "filtered", ")", "\n", "new_filter", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "down", "*", "4", "# upsample", "\n", "filtered", "=", "self", ".", "conv_gauss", "(", "new_filter", ")", "# filter", "\n", "diff", "=", "current", "-", "filtered", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.losses.EdgeLoss.forward": [[41, 44], ["losses.EdgeLoss.loss", "losses.EdgeLoss.laplacian_kernel", "losses.EdgeLoss.laplacian_kernel"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", "(", "self", ".", "laplacian_kernel", "(", "x", ")", ",", "self", ".", "laplacian_kernel", "(", "y", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.CALayer.__init__": [[22, 32], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.CALayer.forward": [[34, 38], ["MPRNet.CALayer.avg_pool", "MPRNet.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.CAB.__init__": [[43, 52], ["torch.Module.__init__", "modules_body.append", "modules_body.append", "modules_body.append", "MPRNet.CALayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", ",", "act", ")", ":", "\n", "        ", "super", "(", "CAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "modules_body", ".", "append", "(", "act", ")", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "self", ".", "CA", "=", "CALayer", "(", "n_feat", ",", "reduction", ",", "bias", "=", "bias", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.CAB.forward": [[53, 58], ["MPRNet.CAB.body", "MPRNet.CAB.CA"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "=", "self", ".", "CA", "(", "res", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.SAM.__init__": [[62, 67], ["torch.Module.__init__", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "super", "(", "SAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "n_feat", ",", "3", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "3", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.SAM.forward": [[68, 75], ["MPRNet.SAM.conv1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "MPRNet.SAM.conv2", "MPRNet.SAM.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_img", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "img", "=", "self", ".", "conv2", "(", "x", ")", "+", "x_img", "\n", "x2", "=", "torch", ".", "sigmoid", "(", "self", ".", "conv3", "(", "img", ")", ")", "\n", "x1", "=", "x1", "*", "x2", "\n", "x1", "=", "x1", "+", "x", "\n", "return", "x1", ",", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.Encoder.__init__": [[80, 103], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.DownSample", "MPRNet.DownSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "encoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level1", ")", "\n", "self", ".", "encoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level2", ")", "\n", "self", ".", "encoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level3", ")", "\n", "\n", "self", ".", "down12", "=", "DownSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "down23", "=", "DownSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "if", "csff", ":", "\n", "            ", "self", ".", "csff_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "csff_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.Encoder.forward": [[104, 122], ["MPRNet.Encoder.encoder_level1", "MPRNet.Encoder.down12", "MPRNet.Encoder.encoder_level2", "MPRNet.Encoder.down23", "MPRNet.Encoder.encoder_level3", "MPRNet.Encoder.csff_dec1", "MPRNet.Encoder.csff_dec2", "MPRNet.Encoder.csff_dec3", "MPRNet.Encoder.csff_enc1", "MPRNet.Encoder.csff_enc2", "MPRNet.Encoder.csff_enc3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", "=", "None", ",", "decoder_outs", "=", "None", ")", ":", "\n", "        ", "enc1", "=", "self", ".", "encoder_level1", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc1", "=", "enc1", "+", "self", ".", "csff_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "csff_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down12", "(", "enc1", ")", "\n", "\n", "enc2", "=", "self", ".", "encoder_level2", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc2", "=", "enc2", "+", "self", ".", "csff_enc2", "(", "encoder_outs", "[", "1", "]", ")", "+", "self", ".", "csff_dec2", "(", "decoder_outs", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down23", "(", "enc2", ")", "\n", "\n", "enc3", "=", "self", ".", "encoder_level3", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc3", "=", "enc3", "+", "self", ".", "csff_enc3", "(", "encoder_outs", "[", "2", "]", ")", "+", "self", ".", "csff_dec3", "(", "decoder_outs", "[", "2", "]", ")", "\n", "\n", "", "return", "[", "enc1", ",", "enc2", ",", "enc3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.Decoder.__init__": [[124, 140], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.SkipUpSample", "MPRNet.SkipUpSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "decoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "decoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level1", ")", "\n", "self", ".", "decoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level2", ")", "\n", "self", ".", "decoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level3", ")", "\n", "\n", "self", ".", "skip_attn1", "=", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "self", ".", "skip_attn2", "=", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "\n", "self", ".", "up21", "=", "SkipUpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up32", "=", "SkipUpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.Decoder.forward": [[141, 152], ["MPRNet.Decoder.decoder_level3", "MPRNet.Decoder.up32", "MPRNet.Decoder.decoder_level2", "MPRNet.Decoder.up21", "MPRNet.Decoder.decoder_level1", "MPRNet.Decoder.skip_attn2", "MPRNet.Decoder.skip_attn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "enc1", ",", "enc2", ",", "enc3", "=", "outs", "\n", "dec3", "=", "self", ".", "decoder_level3", "(", "enc3", ")", "\n", "\n", "x", "=", "self", ".", "up32", "(", "dec3", ",", "self", ".", "skip_attn2", "(", "enc2", ")", ")", "\n", "dec2", "=", "self", ".", "decoder_level2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "up21", "(", "dec2", ",", "self", ".", "skip_attn1", "(", "enc1", ")", ")", "\n", "dec1", "=", "self", ".", "decoder_level1", "(", "x", ")", "\n", "\n", "return", "[", "dec1", ",", "dec2", ",", "dec3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.DownSample.__init__": [[156, 160], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "DownSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "0.5", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", "+", "s_factor", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.DownSample.forward": [[161, 164], ["MPRNet.DownSample.down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.UpSample.__init__": [[166, 170], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "UpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.UpSample.forward": [[171, 174], ["MPRNet.UpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.SkipUpSample.__init__": [[176, 180], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "SkipUpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.SkipUpSample.forward": [[181, 185], ["MPRNet.SkipUpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "x", "+", "y", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.ORB.__init__": [[189, 195], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.conv", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "num_cab", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.ORB.forward": [[196, 200], ["MPRNet.ORB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.ORSNet.__init__": [[203, 223], ["torch.Module.__init__", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.UpSample", "MPRNet.UpSample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "orb1", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb2", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb3", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "\n", "self", ".", "up_enc1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up_dec1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "up_enc2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "self", ".", "up_dec2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "\n", "self", ".", "conv_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "conv_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.ORSNet.forward": [[224, 235], ["MPRNet.ORSNet.orb1", "MPRNet.ORSNet.orb2", "MPRNet.ORSNet.orb3", "MPRNet.ORSNet.conv_dec1", "MPRNet.ORSNet.conv_dec2", "MPRNet.ORSNet.conv_dec3", "MPRNet.ORSNet.conv_enc1", "MPRNet.ORSNet.conv_enc2", "MPRNet.ORSNet.up_dec1", "MPRNet.ORSNet.conv_enc3", "MPRNet.ORSNet.up_dec2", "MPRNet.ORSNet.up_enc1", "MPRNet.ORSNet.up_enc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", ",", "decoder_outs", ")", ":", "\n", "        ", "x", "=", "self", ".", "orb1", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "conv_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "x", "=", "self", ".", "orb2", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc2", "(", "self", ".", "up_enc1", "(", "encoder_outs", "[", "1", "]", ")", ")", "+", "self", ".", "conv_dec2", "(", "self", ".", "up_dec1", "(", "decoder_outs", "[", "1", "]", ")", ")", "\n", "\n", "x", "=", "self", ".", "orb3", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc3", "(", "self", ".", "up_enc2", "(", "encoder_outs", "[", "2", "]", ")", ")", "+", "self", ".", "conv_dec3", "(", "self", ".", "up_dec2", "(", "decoder_outs", "[", "2", "]", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.MPRNet.__init__": [[239, 262], ["torch.Module.__init__", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.ORSNet", "MPRNet.SAM", "MPRNet.SAM", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "in_c", "=", "3", ",", "out_c", "=", "3", ",", "n_feat", "=", "96", ",", "scale_unetfeats", "=", "48", ",", "scale_orsnetfeats", "=", "32", ",", "num_cab", "=", "8", ",", "kernel_size", "=", "3", ",", "reduction", "=", "4", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "MPRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "act", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "shallow_feat1", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat2", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat3", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "self", ".", "stage1_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "False", ")", "\n", "self", ".", "stage1_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage2_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "True", ")", "\n", "self", ".", "stage2_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage3_orsnet", "=", "ORSNet", "(", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", "\n", "\n", "self", ".", "sam12", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "sam23", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "concat12", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "concat23", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "tail", "=", "conv", "(", "n_feat", "+", "scale_orsnetfeats", ",", "out_c", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.MPRNet.forward": [[263, 348], ["x3_img.size", "x3_img.size", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.sam12", "MPRNet.MPRNet.sam12", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_decoder", "MPRNet.MPRNet.sam23", "MPRNet.MPRNet.shallow_feat3", "MPRNet.MPRNet.concat23", "MPRNet.MPRNet.stage3_orsnet", "MPRNet.MPRNet.tail", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "zip", "zip", "zip", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x3_img", ")", ":", "\n", "# Original-resolution Image for Stage 3", "\n", "        ", "H", "=", "x3_img", ".", "size", "(", "2", ")", "\n", "W", "=", "x3_img", ".", "size", "(", "3", ")", "\n", "\n", "# Multi-Patch Hierarchy: Split Image into four non-overlapping patches", "\n", "\n", "# Two Patches for Stage 2", "\n", "x2top_img", "=", "x3_img", "[", ":", ",", ":", ",", "0", ":", "int", "(", "H", "/", "2", ")", ",", ":", "]", "\n", "x2bot_img", "=", "x3_img", "[", ":", ",", ":", ",", "int", "(", "H", "/", "2", ")", ":", "H", ",", ":", "]", "\n", "\n", "# Four Patches for Stage 1", "\n", "x1ltop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rtop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "x1lbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 1---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x1ltop", "=", "self", ".", "shallow_feat1", "(", "x1ltop_img", ")", "\n", "x1rtop", "=", "self", ".", "shallow_feat1", "(", "x1rtop_img", ")", "\n", "x1lbot", "=", "self", ".", "shallow_feat1", "(", "x1lbot_img", ")", "\n", "x1rbot", "=", "self", ".", "shallow_feat1", "(", "x1rbot_img", ")", "\n", "\n", "## Process features of all 4 patches with Encoder of Stage 1", "\n", "feat1_ltop", "=", "self", ".", "stage1_encoder", "(", "x1ltop", ")", "\n", "feat1_rtop", "=", "self", ".", "stage1_encoder", "(", "x1rtop", ")", "\n", "feat1_lbot", "=", "self", ".", "stage1_encoder", "(", "x1lbot", ")", "\n", "feat1_rbot", "=", "self", ".", "stage1_encoder", "(", "x1rbot", ")", "\n", "\n", "## Concat deep features", "\n", "feat1_top", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_ltop", ",", "feat1_rtop", ")", "]", "\n", "feat1_bot", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_lbot", ",", "feat1_rbot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 1", "\n", "res1_top", "=", "self", ".", "stage1_decoder", "(", "feat1_top", ")", "\n", "res1_bot", "=", "self", ".", "stage1_decoder", "(", "feat1_bot", ")", "\n", "\n", "## Apply Supervised Attention Module (SAM)", "\n", "x2top_samfeats", ",", "stage1_img_top", "=", "self", ".", "sam12", "(", "res1_top", "[", "0", "]", ",", "x2top_img", ")", "\n", "x2bot_samfeats", ",", "stage1_img_bot", "=", "self", ".", "sam12", "(", "res1_bot", "[", "0", "]", ",", "x2bot_img", ")", "\n", "\n", "## Output image at Stage 1", "\n", "stage1_img", "=", "torch", ".", "cat", "(", "[", "stage1_img_top", ",", "stage1_img_bot", "]", ",", "2", ")", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 2---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x2top", "=", "self", ".", "shallow_feat2", "(", "x2top_img", ")", "\n", "x2bot", "=", "self", ".", "shallow_feat2", "(", "x2bot_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 1 with shallow features of Stage 2", "\n", "x2top_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2top", ",", "x2top_samfeats", "]", ",", "1", ")", ")", "\n", "x2bot_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2bot", ",", "x2bot_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "## Process features of both patches with Encoder of Stage 2", "\n", "feat2_top", "=", "self", ".", "stage2_encoder", "(", "x2top_cat", ",", "feat1_top", ",", "res1_top", ")", "\n", "feat2_bot", "=", "self", ".", "stage2_encoder", "(", "x2bot_cat", ",", "feat1_bot", ",", "res1_bot", ")", "\n", "\n", "## Concat deep features", "\n", "feat2", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "2", ")", "for", "k", ",", "v", "in", "zip", "(", "feat2_top", ",", "feat2_bot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 2", "\n", "res2", "=", "self", ".", "stage2_decoder", "(", "feat2", ")", "\n", "\n", "## Apply SAM", "\n", "x3_samfeats", ",", "stage2_img", "=", "self", ".", "sam23", "(", "res2", "[", "0", "]", ",", "x3_img", ")", "\n", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 3---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x3", "=", "self", ".", "shallow_feat3", "(", "x3_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 2 with shallow features of Stage 3", "\n", "x3_cat", "=", "self", ".", "concat23", "(", "torch", ".", "cat", "(", "[", "x3", ",", "x3_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "x3_cat", "=", "self", ".", "stage3_orsnet", "(", "x3_cat", ",", "feat2", ",", "res2", ")", "\n", "\n", "stage3_img", "=", "self", ".", "tail", "(", "x3_cat", ")", "\n", "\n", "return", "[", "stage3_img", "+", "x3_img", ",", "stage2_img", ",", "stage1_img", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Denoising.MPRNet.conv": [[13, 17], ["torch.Conv2d"], "function", ["None"], ["def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ",", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__": [[16, 24], ["torch.optim.lr_scheduler._LRScheduler.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["def", "__init__", "(", "self", ",", "optimizer", ",", "multiplier", ",", "total_epoch", ",", "after_scheduler", "=", "None", ")", ":", "\n", "        ", "self", ".", "multiplier", "=", "multiplier", "\n", "if", "self", ".", "multiplier", "<", "1.", ":", "\n", "            ", "raise", "ValueError", "(", "'multiplier should be greater thant or equal to 1.'", ")", "\n", "", "self", ".", "total_epoch", "=", "total_epoch", "\n", "self", ".", "after_scheduler", "=", "after_scheduler", "\n", "self", ".", "finished", "=", "False", "\n", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.get_lr": [[25, 38], ["scheduler.GradualWarmupScheduler.after_scheduler.get_lr", "float"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.get_lr"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "last_epoch", ">", "self", ".", "total_epoch", ":", "\n", "            ", "if", "self", ".", "after_scheduler", ":", "\n", "                ", "if", "not", "self", ".", "finished", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "base_lrs", "=", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "self", ".", "finished", "=", "True", "\n", "", "return", "self", ".", "after_scheduler", ".", "get_lr", "(", ")", "\n", "", "return", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n", "", "if", "self", ".", "multiplier", "==", "1.0", ":", "\n", "            ", "return", "[", "base_lr", "*", "(", "float", "(", "self", ".", "last_epoch", ")", "/", "self", ".", "total_epoch", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "base_lr", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "total_epoch", "+", "1.", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau": [[39, 52], ["zip", "scheduler.GradualWarmupScheduler.after_scheduler.step", "scheduler.GradualWarmupScheduler.after_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step"], ["", "", "def", "step_ReduceLROnPlateau", "(", "self", ",", "metrics", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "", "self", ".", "last_epoch", "=", "epoch", "if", "epoch", "!=", "0", "else", "1", "# ReduceLROnPlateau is called at the end of epoch, whereas others are called at beginning", "\n", "if", "self", ".", "last_epoch", "<=", "self", ".", "total_epoch", ":", "\n", "            ", "warmup_lr", "=", "[", "base_lr", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "total_epoch", "+", "1.", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "for", "param_group", ",", "lr", "in", "zip", "(", "self", ".", "optimizer", ".", "param_groups", ",", "warmup_lr", ")", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "", "else", ":", "\n", "            ", "if", "epoch", "is", "None", ":", "\n", "                ", "self", ".", "after_scheduler", ".", "step", "(", "metrics", ",", "None", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "after_scheduler", ".", "step", "(", "metrics", ",", "epoch", "-", "self", ".", "total_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step": [[53, 64], ["type", "scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau", "super().step", "scheduler.GradualWarmupScheduler.after_scheduler.step", "scheduler.GradualWarmupScheduler.after_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau", "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.swz30_MPRNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step"], ["", "", "", "def", "step", "(", "self", ",", "epoch", "=", "None", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "if", "type", "(", "self", ".", "after_scheduler", ")", "!=", "ReduceLROnPlateau", ":", "\n", "            ", "if", "self", ".", "finished", "and", "self", ".", "after_scheduler", ":", "\n", "                ", "if", "epoch", "is", "None", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "step", "(", "None", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "step", "(", "epoch", "-", "self", ".", "total_epoch", ")", "\n", "", "", "else", ":", "\n", "                ", "return", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "step", "(", "epoch", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "step_ReduceLROnPlateau", "(", "metrics", ",", "epoch", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__init__": [[56, 90], ["yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "yacs.config.CfgNode", "config.Config._C.merge_from_file", "config.Config._C.merge_from_list", "config.Config._C.freeze"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.utils.model_utils.freeze"], ["def", "__init__", "(", "self", ",", "config_yaml", ":", "str", ",", "config_override", ":", "List", "[", "Any", "]", "=", "[", "]", ")", ":", "\n", "\n", "        ", "self", ".", "_C", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "GPU", "=", "[", "0", "]", "\n", "self", ".", "_C", ".", "VERBOSE", "=", "False", "\n", "\n", "self", ".", "_C", ".", "MODEL", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "MODEL", ".", "MODE", "=", "'global'", "\n", "self", ".", "_C", ".", "MODEL", ".", "SESSION", "=", "'ps128_bs1'", "\n", "\n", "self", ".", "_C", ".", "OPTIM", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BATCH_SIZE", "=", "1", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NUM_EPOCHS", "=", "100", "\n", "self", ".", "_C", ".", "OPTIM", ".", "NEPOCH_DECAY", "=", "[", "100", "]", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_INITIAL", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "LR_MIN", "=", "0.0002", "\n", "self", ".", "_C", ".", "OPTIM", ".", "BETA1", "=", "0.5", "\n", "\n", "self", ".", "_C", ".", "TRAINING", "=", "CN", "(", ")", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_AFTER_EVERY", "=", "3", "\n", "self", ".", "_C", ".", "TRAINING", ".", "RESUME", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_IMAGES", "=", "False", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_DIR", "=", "'images_dir/train'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_DIR", "=", "'images_dir/val'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "SAVE_DIR", "=", "'checkpoints'", "\n", "self", ".", "_C", ".", "TRAINING", ".", "TRAIN_PS", "=", "64", "\n", "self", ".", "_C", ".", "TRAINING", ".", "VAL_PS", "=", "64", "\n", "\n", "# Override parameter values from YAML file first, then from override list.", "\n", "self", ".", "_C", ".", "merge_from_file", "(", "config_yaml", ")", "\n", "self", ".", "_C", ".", "merge_from_list", "(", "config_override", ")", "\n", "\n", "# Make an instantiated object of this class immutable.", "\n", "self", ".", "_C", ".", "freeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.dump": [[91, 100], ["config.Config._C.dump", "open"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.dump"], ["", "def", "dump", "(", "self", ",", "file_path", ":", "str", ")", ":", "\n", "        ", "r\"\"\"Save config at the specified file path.\n\n        Parameters\n        ----------\n        file_path: str\n            (YAML) path to save config at.\n        \"\"\"", "\n", "self", ".", "_C", ".", "dump", "(", "stream", "=", "open", "(", "file_path", ",", "\"w\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__getattr__": [[101, 103], ["config.Config._C.__getattr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__getattr__"], ["", "def", "__getattr__", "(", "self", ",", "attr", ":", "str", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__getattr__", "(", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__repr__": [[104, 106], ["config.Config._C.__repr__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.config.Config.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_C", ".", "__repr__", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.data_RGB.get_training_data": [[4, 7], ["os.path.exists", "dataset_RGB.DataLoaderTrain"], "function", ["None"], ["def", "get_training_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTrain", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.data_RGB.get_validation_data": [[8, 11], ["os.path.exists", "dataset_RGB.DataLoaderVal"], "function", ["None"], ["", "def", "get_validation_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderVal", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.data_RGB.get_test_data": [[12, 15], ["os.path.exists", "dataset_RGB.DataLoaderTest"], "function", ["None"], ["", "def", "get_test_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTest", "(", "rgb_dir", ",", "img_options", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTrain.__init__": [[13, 26], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["", "class", "DataLoaderTrain", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderTrain", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTrain.__len__": [[27, 29], ["None"], "methods", ["None"], ["\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTrain.__getitem__": [[30, 88], ["PIL.Image.open", "PIL.Image.open", "torchvision.to_tensor", "torchvision.to_tensor", "random.randint", "random.randint", "random.randint", "torchvision.pad", "torchvision.pad", "torch.rot90.flip", "torch.rot90.flip", "os.path.splitext", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "os.path.split", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip"], "methods", ["None"], ["\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n", "w", ",", "h", "=", "tar_img", ".", "size", "\n", "padw", "=", "ps", "-", "w", "if", "w", "<", "ps", "else", "0", "\n", "padh", "=", "ps", "-", "h", "if", "h", "<", "ps", "else", "0", "\n", "\n", "# Reflect Pad in case image is smaller than patch_size", "\n", "if", "padw", "!=", "0", "or", "padh", "!=", "0", ":", "\n", "            ", "inp_img", "=", "TF", ".", "pad", "(", "inp_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "tar_img", "=", "TF", ".", "pad", "(", "tar_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "TF", ".", "adjust_gamma", "(", "inp_img", ",", "1", ")", "\n", "tar_img", "=", "TF", ".", "adjust_gamma", "(", "tar_img", ",", "1", ")", "\n", "\n", "", "aug", "=", "random", ".", "randint", "(", "0", ",", "2", ")", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "sat_factor", "=", "1", "+", "(", "0.2", "-", "0.4", "*", "np", ".", "random", ".", "rand", "(", ")", ")", "\n", "inp_img", "=", "TF", ".", "adjust_saturation", "(", "inp_img", ",", "sat_factor", ")", "\n", "tar_img", "=", "TF", ".", "adjust_saturation", "(", "tar_img", ",", "sat_factor", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "hh", ",", "ww", "=", "tar_img", ".", "shape", "[", "1", "]", ",", "tar_img", ".", "shape", "[", "2", "]", "\n", "\n", "rr", "=", "random", ".", "randint", "(", "0", ",", "hh", "-", "ps", ")", "\n", "cc", "=", "random", ".", "randint", "(", "0", ",", "ww", "-", "ps", ")", "\n", "aug", "=", "random", ".", "randint", "(", "0", ",", "8", ")", "\n", "\n", "# Crop patch", "\n", "inp_img", "=", "inp_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "tar_img", "=", "tar_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "\n", "# Data Augmentations", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "1", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "1", ")", "\n", "", "elif", "aug", "==", "2", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "2", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "2", ")", "\n", "", "elif", "aug", "==", "3", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "4", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "", "elif", "aug", "==", "5", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderVal.__init__": [[90, 103], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["", "elif", "aug", "==", "6", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "7", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n", "", "", "class", "DataLoaderVal", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ",", "rgb_dir2", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderVal", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderVal.__len__": [[104, 106], ["None"], "methods", ["None"], ["\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderVal.__getitem__": [[107, 128], ["PIL.Image.open", "PIL.Image.open", "torchvision.to_tensor", "torchvision.to_tensor", "torchvision.center_crop", "torchvision.center_crop", "os.path.splitext", "os.path.split"], "methods", ["None"], ["\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTest.__init__": [[130, 138], ["torch.utils.data.Dataset.__init__", "sorted", "len", "os.listdir", "os.path.join", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file"], ["if", "self", ".", "ps", "is", "not", "None", ":", "\n", "            ", "inp_img", "=", "TF", ".", "center_crop", "(", "inp_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "tar_img", "=", "TF", ".", "center_crop", "(", "tar_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTest.__len__": [[139, 141], ["None"], "methods", ["None"], ["return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n", "", "", "class", "DataLoaderTest", "(", "Dataset", ")", ":", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.DataLoaderTest.__getitem__": [[142, 150], ["PIL.Image.open", "torchvision.to_tensor", "os.path.splitext", "os.path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "inp_dir", ",", "img_options", ")", ":", "\n", "        ", "super", "(", "DataLoaderTest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "inp_dir", ")", ")", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "inp_dir", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "inp_size", "=", "len", "(", "self", ".", "inp_filenames", ")", "\n", "self", ".", "img_options", "=", "img_options", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.dataset_RGB.is_image_file": [[9, 11], ["any", "filename.endswith"], "function", ["None"], ["\n", "def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "'jpeg'", ",", "'JPEG'", ",", "'jpg'", ",", "'png'", ",", "'JPG'", ",", "'PNG'", ",", "'gif'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.CharbonnierLoss.__init__": [[8, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", "CharbonnierLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.CharbonnierLoss.forward": [[12, 17], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "diff", "=", "x", "-", "y", "\n", "# loss = torch.sum(torch.sqrt(diff * diff + self.eps))", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "(", "diff", "*", "diff", ")", "+", "(", "self", ".", "eps", "*", "self", ".", "eps", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.__init__": [[19, 26], ["torch.Module.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.matmul().unsqueeze().repeat", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "losses.CharbonnierLoss", "losses.EdgeLoss.kernel.cuda", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul().unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.Tensor.t", "torch.Tensor.t", "torch.Tensor.t"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EdgeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "k", "=", "torch", ".", "Tensor", "(", "[", "[", ".05", ",", ".25", ",", ".4", ",", ".25", ",", ".05", "]", "]", ")", "\n", "self", ".", "kernel", "=", "torch", ".", "matmul", "(", "k", ".", "t", "(", ")", ",", "k", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "kernel", "=", "self", ".", "kernel", ".", "cuda", "(", ")", "\n", "", "self", ".", "loss", "=", "CharbonnierLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss": [[27, 31], ["torch.pad", "torch.pad", "torch.pad", "torch.conv2d", "torch.conv2d", "torch.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "img", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "self", ".", "kernel", ".", "shape", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "(", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "return", "F", ".", "conv2d", "(", "img", ",", "self", ".", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel": [[32, 40], ["losses.EdgeLoss.conv_gauss", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "losses.EdgeLoss.conv_gauss"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.conv_gauss"], ["", "def", "laplacian_kernel", "(", "self", ",", "current", ")", ":", "\n", "        ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ")", "# filter", "\n", "down", "=", "filtered", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "# downsample", "\n", "new_filter", "=", "torch", ".", "zeros_like", "(", "filtered", ")", "\n", "new_filter", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "down", "*", "4", "# upsample", "\n", "filtered", "=", "self", ".", "conv_gauss", "(", "new_filter", ")", "# filter", "\n", "diff", "=", "current", "-", "filtered", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.forward": [[41, 44], ["losses.EdgeLoss.loss", "losses.EdgeLoss.laplacian_kernel", "losses.EdgeLoss.laplacian_kernel"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.losses.EdgeLoss.laplacian_kernel"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", "(", "self", ".", "laplacian_kernel", "(", "x", ")", ",", "self", ".", "laplacian_kernel", "(", "y", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.CALayer.__init__": [[22, 32], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.CALayer.forward": [[34, 38], ["MPRNet.CALayer.avg_pool", "MPRNet.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.CAB.__init__": [[43, 52], ["torch.Module.__init__", "modules_body.append", "modules_body.append", "modules_body.append", "MPRNet.CALayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", ",", "act", ")", ":", "\n", "        ", "super", "(", "CAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "modules_body", ".", "append", "(", "act", ")", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "self", ".", "CA", "=", "CALayer", "(", "n_feat", ",", "reduction", ",", "bias", "=", "bias", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.CAB.forward": [[53, 58], ["MPRNet.CAB.body", "MPRNet.CAB.CA"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "=", "self", ".", "CA", "(", "res", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.SAM.__init__": [[62, 67], ["torch.Module.__init__", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "bias", ")", ":", "\n", "        ", "super", "(", "SAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "n_feat", ",", "3", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "3", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.SAM.forward": [[68, 75], ["MPRNet.SAM.conv1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "MPRNet.SAM.conv2", "MPRNet.SAM.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_img", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "img", "=", "self", ".", "conv2", "(", "x", ")", "+", "x_img", "\n", "x2", "=", "torch", ".", "sigmoid", "(", "self", ".", "conv3", "(", "img", ")", ")", "\n", "x1", "=", "x1", "*", "x2", "\n", "x1", "=", "x1", "+", "x", "\n", "return", "x1", ",", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.Encoder.__init__": [[80, 103], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.DownSample", "MPRNet.DownSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "encoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "encoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level1", ")", "\n", "self", ".", "encoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level2", ")", "\n", "self", ".", "encoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "encoder_level3", ")", "\n", "\n", "self", ".", "down12", "=", "DownSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "down23", "=", "DownSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "if", "csff", ":", "\n", "            ", "self", ".", "csff_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "csff_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "scale_unetfeats", ",", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "csff_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.Encoder.forward": [[104, 122], ["MPRNet.Encoder.encoder_level1", "MPRNet.Encoder.down12", "MPRNet.Encoder.encoder_level2", "MPRNet.Encoder.down23", "MPRNet.Encoder.encoder_level3", "MPRNet.Encoder.csff_dec1", "MPRNet.Encoder.csff_dec2", "MPRNet.Encoder.csff_dec3", "MPRNet.Encoder.csff_enc1", "MPRNet.Encoder.csff_enc2", "MPRNet.Encoder.csff_enc3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", "=", "None", ",", "decoder_outs", "=", "None", ")", ":", "\n", "        ", "enc1", "=", "self", ".", "encoder_level1", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc1", "=", "enc1", "+", "self", ".", "csff_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "csff_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down12", "(", "enc1", ")", "\n", "\n", "enc2", "=", "self", ".", "encoder_level2", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc2", "=", "enc2", "+", "self", ".", "csff_enc2", "(", "encoder_outs", "[", "1", "]", ")", "+", "self", ".", "csff_dec2", "(", "decoder_outs", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "down23", "(", "enc2", ")", "\n", "\n", "enc3", "=", "self", ".", "encoder_level3", "(", "x", ")", "\n", "if", "(", "encoder_outs", "is", "not", "None", ")", "and", "(", "decoder_outs", "is", "not", "None", ")", ":", "\n", "            ", "enc3", "=", "enc3", "+", "self", ".", "csff_enc3", "(", "encoder_outs", "[", "2", "]", ")", "+", "self", ".", "csff_dec3", "(", "decoder_outs", "[", "2", "]", ")", "\n", "\n", "", "return", "[", "enc1", ",", "enc2", ",", "enc3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.Decoder.__init__": [[124, 140], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.SkipUpSample", "MPRNet.SkipUpSample", "MPRNet.CAB", "MPRNet.CAB", "MPRNet.CAB", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "decoder_level1", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level2", "=", "[", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "self", ".", "decoder_level3", "=", "[", "CAB", "(", "n_feat", "+", "(", "scale_unetfeats", "*", "2", ")", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "2", ")", "]", "\n", "\n", "self", ".", "decoder_level1", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level1", ")", "\n", "self", ".", "decoder_level2", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level2", ")", "\n", "self", ".", "decoder_level3", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "decoder_level3", ")", "\n", "\n", "self", ".", "skip_attn1", "=", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "self", ".", "skip_attn2", "=", "CAB", "(", "n_feat", "+", "scale_unetfeats", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "\n", "\n", "self", ".", "up21", "=", "SkipUpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up32", "=", "SkipUpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.Decoder.forward": [[141, 152], ["MPRNet.Decoder.decoder_level3", "MPRNet.Decoder.up32", "MPRNet.Decoder.decoder_level2", "MPRNet.Decoder.up21", "MPRNet.Decoder.decoder_level1", "MPRNet.Decoder.skip_attn2", "MPRNet.Decoder.skip_attn1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "outs", ")", ":", "\n", "        ", "enc1", ",", "enc2", ",", "enc3", "=", "outs", "\n", "dec3", "=", "self", ".", "decoder_level3", "(", "enc3", ")", "\n", "\n", "x", "=", "self", ".", "up32", "(", "dec3", ",", "self", ".", "skip_attn2", "(", "enc2", ")", ")", "\n", "dec2", "=", "self", ".", "decoder_level2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "up21", "(", "dec2", ",", "self", ".", "skip_attn1", "(", "enc1", ")", ")", "\n", "dec1", "=", "self", ".", "decoder_level1", "(", "x", ")", "\n", "\n", "return", "[", "dec1", ",", "dec2", ",", "dec3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.DownSample.__init__": [[156, 160], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "DownSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "0.5", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", "+", "s_factor", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.DownSample.forward": [[161, 164], ["MPRNet.DownSample.down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.UpSample.__init__": [[166, 170], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "UpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.UpSample.forward": [[171, 174], ["MPRNet.UpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.SkipUpSample.__init__": [[176, 180], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "s_factor", ")", ":", "\n", "        ", "super", "(", "SkipUpSample", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", "+", "s_factor", ",", "in_channels", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.SkipUpSample.forward": [[181, 185], ["MPRNet.SkipUpSample.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "x", "=", "x", "+", "y", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.ORB.__init__": [[189, 195], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.CAB", "MPRNet.conv", "range"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", "for", "_", "in", "range", "(", "num_cab", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.ORB.forward": [[196, 200], ["MPRNet.ORB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.ORSNet.__init__": [[203, 223], ["torch.Module.__init__", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.ORB", "MPRNet.UpSample", "MPRNet.UpSample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample", "MPRNet.UpSample"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", ":", "\n", "        ", "super", "(", "ORSNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "orb1", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb2", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "self", ".", "orb3", "=", "ORB", "(", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "num_cab", ")", "\n", "\n", "self", ".", "up_enc1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "self", ".", "up_dec1", "=", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "up_enc2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "self", ".", "up_dec2", "=", "nn", ".", "Sequential", "(", "UpSample", "(", "n_feat", "+", "scale_unetfeats", ",", "scale_unetfeats", ")", ",", "UpSample", "(", "n_feat", ",", "scale_unetfeats", ")", ")", "\n", "\n", "self", ".", "conv_enc1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_enc3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "conv_dec1", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec2", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "conv_dec3", "=", "nn", ".", "Conv2d", "(", "n_feat", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.ORSNet.forward": [[224, 235], ["MPRNet.ORSNet.orb1", "MPRNet.ORSNet.orb2", "MPRNet.ORSNet.orb3", "MPRNet.ORSNet.conv_dec1", "MPRNet.ORSNet.conv_dec2", "MPRNet.ORSNet.conv_dec3", "MPRNet.ORSNet.conv_enc1", "MPRNet.ORSNet.conv_enc2", "MPRNet.ORSNet.up_dec1", "MPRNet.ORSNet.conv_enc3", "MPRNet.ORSNet.up_dec2", "MPRNet.ORSNet.up_enc1", "MPRNet.ORSNet.up_enc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "encoder_outs", ",", "decoder_outs", ")", ":", "\n", "        ", "x", "=", "self", ".", "orb1", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc1", "(", "encoder_outs", "[", "0", "]", ")", "+", "self", ".", "conv_dec1", "(", "decoder_outs", "[", "0", "]", ")", "\n", "\n", "x", "=", "self", ".", "orb2", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc2", "(", "self", ".", "up_enc1", "(", "encoder_outs", "[", "1", "]", ")", ")", "+", "self", ".", "conv_dec2", "(", "self", ".", "up_dec1", "(", "decoder_outs", "[", "1", "]", ")", ")", "\n", "\n", "x", "=", "self", ".", "orb3", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "conv_enc3", "(", "self", ".", "up_enc2", "(", "encoder_outs", "[", "2", "]", ")", ")", "+", "self", ".", "conv_dec3", "(", "self", ".", "up_dec2", "(", "decoder_outs", "[", "2", "]", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__": [[239, 262], ["torch.Module.__init__", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.Encoder", "MPRNet.Decoder", "MPRNet.ORSNet", "MPRNet.SAM", "MPRNet.SAM", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB", "MPRNet.conv", "MPRNet.CAB"], "methods", ["home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.__init__", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv", "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv"], ["    ", "def", "__init__", "(", "self", ",", "in_c", "=", "3", ",", "out_c", "=", "3", ",", "n_feat", "=", "96", ",", "scale_unetfeats", "=", "48", ",", "scale_orsnetfeats", "=", "32", ",", "num_cab", "=", "8", ",", "kernel_size", "=", "3", ",", "reduction", "=", "4", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "MPRNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "act", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "shallow_feat1", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat2", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "self", ".", "shallow_feat3", "=", "nn", ".", "Sequential", "(", "conv", "(", "in_c", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ",", "CAB", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "bias", ",", "act", "=", "act", ")", ")", "\n", "\n", "# Cross Stage Feature Fusion (CSFF)", "\n", "self", ".", "stage1_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "False", ")", "\n", "self", ".", "stage1_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage2_encoder", "=", "Encoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "csff", "=", "True", ")", "\n", "self", ".", "stage2_decoder", "=", "Decoder", "(", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ")", "\n", "\n", "self", ".", "stage3_orsnet", "=", "ORSNet", "(", "n_feat", ",", "scale_orsnetfeats", ",", "kernel_size", ",", "reduction", ",", "act", ",", "bias", ",", "scale_unetfeats", ",", "num_cab", ")", "\n", "\n", "self", ".", "sam12", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "sam23", "=", "SAM", "(", "n_feat", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "self", ".", "concat12", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "concat23", "=", "conv", "(", "n_feat", "*", "2", ",", "n_feat", "+", "scale_orsnetfeats", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "self", ".", "tail", "=", "conv", "(", "n_feat", "+", "scale_orsnetfeats", ",", "out_c", ",", "kernel_size", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.MPRNet.forward": [[263, 348], ["x3_img.size", "x3_img.size", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.shallow_feat1", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_encoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.stage1_decoder", "MPRNet.MPRNet.sam12", "MPRNet.MPRNet.sam12", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.shallow_feat2", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.concat12", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_encoder", "MPRNet.MPRNet.stage2_decoder", "MPRNet.MPRNet.sam23", "MPRNet.MPRNet.shallow_feat3", "MPRNet.MPRNet.concat23", "MPRNet.MPRNet.stage3_orsnet", "MPRNet.MPRNet.tail", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "zip", "zip", "zip", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x3_img", ")", ":", "\n", "# Original-resolution Image for Stage 3", "\n", "        ", "H", "=", "x3_img", ".", "size", "(", "2", ")", "\n", "W", "=", "x3_img", ".", "size", "(", "3", ")", "\n", "\n", "# Multi-Patch Hierarchy: Split Image into four non-overlapping patches", "\n", "\n", "# Two Patches for Stage 2", "\n", "x2top_img", "=", "x3_img", "[", ":", ",", ":", ",", "0", ":", "int", "(", "H", "/", "2", ")", ",", ":", "]", "\n", "x2bot_img", "=", "x3_img", "[", ":", ",", ":", ",", "int", "(", "H", "/", "2", ")", ":", "H", ",", ":", "]", "\n", "\n", "# Four Patches for Stage 1", "\n", "x1ltop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rtop_img", "=", "x2top_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "x1lbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "0", ":", "int", "(", "W", "/", "2", ")", "]", "\n", "x1rbot_img", "=", "x2bot_img", "[", ":", ",", ":", ",", ":", ",", "int", "(", "W", "/", "2", ")", ":", "W", "]", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 1---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x1ltop", "=", "self", ".", "shallow_feat1", "(", "x1ltop_img", ")", "\n", "x1rtop", "=", "self", ".", "shallow_feat1", "(", "x1rtop_img", ")", "\n", "x1lbot", "=", "self", ".", "shallow_feat1", "(", "x1lbot_img", ")", "\n", "x1rbot", "=", "self", ".", "shallow_feat1", "(", "x1rbot_img", ")", "\n", "\n", "## Process features of all 4 patches with Encoder of Stage 1", "\n", "feat1_ltop", "=", "self", ".", "stage1_encoder", "(", "x1ltop", ")", "\n", "feat1_rtop", "=", "self", ".", "stage1_encoder", "(", "x1rtop", ")", "\n", "feat1_lbot", "=", "self", ".", "stage1_encoder", "(", "x1lbot", ")", "\n", "feat1_rbot", "=", "self", ".", "stage1_encoder", "(", "x1rbot", ")", "\n", "\n", "## Concat deep features", "\n", "feat1_top", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_ltop", ",", "feat1_rtop", ")", "]", "\n", "feat1_bot", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "3", ")", "for", "k", ",", "v", "in", "zip", "(", "feat1_lbot", ",", "feat1_rbot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 1", "\n", "res1_top", "=", "self", ".", "stage1_decoder", "(", "feat1_top", ")", "\n", "res1_bot", "=", "self", ".", "stage1_decoder", "(", "feat1_bot", ")", "\n", "\n", "## Apply Supervised Attention Module (SAM)", "\n", "x2top_samfeats", ",", "stage1_img_top", "=", "self", ".", "sam12", "(", "res1_top", "[", "0", "]", ",", "x2top_img", ")", "\n", "x2bot_samfeats", ",", "stage1_img_bot", "=", "self", ".", "sam12", "(", "res1_bot", "[", "0", "]", ",", "x2bot_img", ")", "\n", "\n", "## Output image at Stage 1", "\n", "stage1_img", "=", "torch", ".", "cat", "(", "[", "stage1_img_top", ",", "stage1_img_bot", "]", ",", "2", ")", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 2---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x2top", "=", "self", ".", "shallow_feat2", "(", "x2top_img", ")", "\n", "x2bot", "=", "self", ".", "shallow_feat2", "(", "x2bot_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 1 with shallow features of Stage 2", "\n", "x2top_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2top", ",", "x2top_samfeats", "]", ",", "1", ")", ")", "\n", "x2bot_cat", "=", "self", ".", "concat12", "(", "torch", ".", "cat", "(", "[", "x2bot", ",", "x2bot_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "## Process features of both patches with Encoder of Stage 2", "\n", "feat2_top", "=", "self", ".", "stage2_encoder", "(", "x2top_cat", ",", "feat1_top", ",", "res1_top", ")", "\n", "feat2_bot", "=", "self", ".", "stage2_encoder", "(", "x2bot_cat", ",", "feat1_bot", ",", "res1_bot", ")", "\n", "\n", "## Concat deep features", "\n", "feat2", "=", "[", "torch", ".", "cat", "(", "(", "k", ",", "v", ")", ",", "2", ")", "for", "k", ",", "v", "in", "zip", "(", "feat2_top", ",", "feat2_bot", ")", "]", "\n", "\n", "## Pass features through Decoder of Stage 2", "\n", "res2", "=", "self", ".", "stage2_decoder", "(", "feat2", ")", "\n", "\n", "## Apply SAM", "\n", "x3_samfeats", ",", "stage2_img", "=", "self", ".", "sam23", "(", "res2", "[", "0", "]", ",", "x3_img", ")", "\n", "\n", "\n", "##-------------------------------------------", "\n", "##-------------- Stage 3---------------------", "\n", "##-------------------------------------------", "\n", "## Compute Shallow Features", "\n", "x3", "=", "self", ".", "shallow_feat3", "(", "x3_img", ")", "\n", "\n", "## Concatenate SAM features of Stage 2 with shallow features of Stage 3", "\n", "x3_cat", "=", "self", ".", "concat23", "(", "torch", ".", "cat", "(", "[", "x3", ",", "x3_samfeats", "]", ",", "1", ")", ")", "\n", "\n", "x3_cat", "=", "self", ".", "stage3_orsnet", "(", "x3_cat", ",", "feat2", ",", "res2", ")", "\n", "\n", "stage3_img", "=", "self", ".", "tail", "(", "x3_cat", ")", "\n", "\n", "return", "[", "stage3_img", "+", "x3_img", ",", "stage2_img", ",", "stage1_img", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.swz30_MPRNet.Deraining.MPRNet.conv": [[13, 17], ["torch.Conv2d"], "function", ["None"], ["def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ",", "stride", "=", "stride", ")", "\n", "\n"]]}