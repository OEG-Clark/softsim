{"home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.__init__": [[16, 24], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "actions_dict", ",", "gt_path", ",", "features_path", ",", "sample_rate", ")", ":", "\n", "        ", "self", ".", "list_of_examples", "=", "list", "(", ")", "\n", "self", ".", "index", "=", "0", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "actions_dict", "=", "actions_dict", "\n", "self", ".", "gt_path", "=", "gt_path", "\n", "self", ".", "features_path", "=", "features_path", "\n", "self", ".", "sample_rate", "=", "sample_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.reset": [[25, 28], ["random.shuffle"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "index", "=", "0", "\n", "random", ".", "shuffle", "(", "self", ".", "list_of_examples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.has_next": [[29, 33], ["len"], "methods", ["None"], ["", "def", "has_next", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "index", "<", "len", "(", "self", ".", "list_of_examples", ")", ":", "\n", "            ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.read_data": [[34, 39], ["open", "open.close", "random.shuffle", "open.read().split", "open.read"], "methods", ["None"], ["", "def", "read_data", "(", "self", ",", "vid_list_file", ")", ":", "\n", "        ", "file_ptr", "=", "open", "(", "vid_list_file", ",", "'r'", ")", "\n", "self", ".", "list_of_examples", "=", "file_ptr", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", ":", "-", "1", "]", "\n", "file_ptr", ".", "close", "(", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "list_of_examples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.next_batch": [[40, 73], ["list", "torch.zeros", "torch.zeros", "torch.ones", "range", "numpy.zeros", "range", "batch_input.append", "batch_target.append", "map", "len", "max", "torch.ones", "len", "max", "len", "max", "len", "torch.from_numpy", "torch.from_numpy", "torch.ones", "numpy.load", "batch_gen.get_features", "numpy.loadtxt", "min", "len", "file_ptr[].astype", "len", "max", "print", "print", "len", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape", "numpy.shape"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.get_features"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "batch", "=", "self", ".", "list_of_examples", "[", "self", ".", "index", ":", "self", ".", "index", "+", "batch_size", "]", "\n", "self", ".", "index", "+=", "batch_size", "\n", "\n", "batch_input", "=", "[", "]", "\n", "batch_target", "=", "[", "]", "\n", "for", "vid", "in", "batch", ":", "\n", "            ", "try", ":", "\n", "                ", "string2", "=", "vid", "[", ":", "-", "10", "]", "\n", "features", "=", "np", ".", "load", "(", "self", ".", "features_path", "+", "string2", "+", "'input'", "+", "'.npy'", ")", "\n", "features", "=", "get_features", "(", "features", ")", "\n", "", "except", "IOError", ":", "\n", "                ", "print", "(", "'stop'", ")", "\n", "", "try", ":", "\n", "                ", "file_ptr", "=", "np", ".", "loadtxt", "(", "self", ".", "gt_path", "+", "vid", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "print", "(", "'stop'", ")", "\n", "", "classes", "=", "np", ".", "zeros", "(", "min", "(", "np", ".", "shape", "(", "features", ")", "[", "1", "]", ",", "len", "(", "file_ptr", ")", ")", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", ":", "\n", "                ", "classes", "[", "i", "]", "=", "file_ptr", "[", "i", "]", ".", "astype", "(", "int", ")", "\n", "", "batch_input", ".", "append", "(", "features", "[", ":", ",", ":", ":", "self", ".", "sample_rate", ",", ":", ",", ":", "]", ")", "\n", "batch_target", ".", "append", "(", "classes", "[", ":", ":", "self", ".", "sample_rate", "]", ")", "\n", "\n", "", "length_of_sequences", "=", "list", "(", "map", "(", "len", ",", "batch_target", ")", ")", "\n", "batch_input_tensor", "=", "torch", ".", "zeros", "(", "len", "(", "batch_input", ")", ",", "6", ",", "max", "(", "length_of_sequences", ")", ",", "9", ",", "1", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "batch_target_tensor", "=", "torch", ".", "ones", "(", "len", "(", "batch_input", ")", ",", "max", "(", "length_of_sequences", ")", ",", "dtype", "=", "torch", ".", "long", ")", "*", "(", "-", "100", ")", "\n", "mask", "=", "torch", ".", "zeros", "(", "len", "(", "batch_input", ")", ",", "self", ".", "num_classes", ",", "max", "(", "length_of_sequences", ")", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "sample_weight", "=", "torch", ".", "ones", "(", "len", "(", "batch_input", ")", ",", "max", "(", "length_of_sequences", ")", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "batch_input", ")", ")", ":", "\n", "            ", "batch_input_tensor", "[", "i", ",", ":", ",", ":", "np", ".", "shape", "(", "batch_input", "[", "i", "]", ")", "[", "1", "]", ",", ":", ",", ":", "]", "=", "torch", ".", "from_numpy", "(", "batch_input", "[", "i", "]", ")", "\n", "batch_target_tensor", "[", "i", ",", ":", "np", ".", "shape", "(", "batch_target", "[", "i", "]", ")", "[", "0", "]", "]", "=", "torch", ".", "from_numpy", "(", "batch_target", "[", "i", "]", ")", "\n", "mask", "[", "i", ",", ":", ",", ":", "np", ".", "shape", "(", "batch_target", "[", "i", "]", ")", "[", "0", "]", "]", "=", "torch", ".", "ones", "(", "self", ".", "num_classes", ",", "np", ".", "shape", "(", "batch_target", "[", "i", "]", ")", "[", "0", "]", ")", "\n", "", "return", "batch_input_tensor", ",", "batch_target_tensor", ",", "mask", ",", "sample_weight", "\n", "", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.get_features": [[8, 13], ["data.signals.disps.get_displacements", "data.signals.rel_coords.get_relative_coordinates", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.signals.disps.get_displacements", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.signals.rel_coords.get_relative_coordinates"], ["def", "get_features", "(", "sample", ")", ":", "\n", "    ", "disps", "=", "get_displacements", "(", "sample", ")", "\n", "rel_coords", "=", "get_relative_coordinates", "(", "sample", ",", "references", "=", "(", "0", ")", ")", "\n", "sample", "=", "np", ".", "concatenate", "(", "[", "disps", ",", "rel_coords", "]", ",", "axis", "=", "0", ")", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.model.Trainer.__init__": [[12, 17], ["models.ms_gcn.MultiStageModel", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dil", ",", "num_layers_R", ",", "num_R", ",", "num_f_maps", ",", "dim", ",", "num_classes", ")", ":", "\n", "        ", "self", ".", "model", "=", "MultiStageModel", "(", "dil", ",", "num_layers_R", ",", "num_R", ",", "num_f_maps", ",", "dim", ",", "num_classes", ")", "\n", "self", ".", "ce", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "-", "100", ",", "reduction", "=", "'mean'", ")", "\n", "self", ".", "mse", "=", "nn", ".", "MSELoss", "(", "reduction", "=", "'none'", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.model.Trainer.train": [[18, 59], ["model.Trainer.model.train", "model.Trainer.model.to", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "model.Trainer.model.parameters", "batch_gen.has_next", "batch_gen.reset", "print", "batch_gen.next_batch", "torch.optim.Adam.zero_grad", "model.Trainer.model", "loss.item", "loss.backward", "torch.optim.Adam.step", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "batch_input.to", "batch_target.to", "mask.to", "weight.to", "model.Trainer.ce", "model.Trainer.model.state_dict", "torch.optim.Adam.state_dict", "p.transpose().contiguous().view", "batch_target.view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "str", "str", "len", "float", "p.transpose().contiguous", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "model.Trainer.mse", "mask[].squeeze", "p.transpose", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "p.detach"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.model.Trainer.train", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.has_next", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.reset", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.BatchGenerator.next_batch"], ["", "def", "train", "(", "self", ",", "save_dir", ",", "batch_gen", ",", "num_epochs", ",", "batch_size", ",", "learning_rate", ",", "device", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "self", ".", "model", ".", "to", "(", "device", ")", "\n", "self", ".", "step", "=", "[", "20", ",", "40", "]", "\n", "self", ".", "base_lr", "=", "learning_rate", "\n", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "base_lr", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "            ", "epoch_loss", "=", "0", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "\n", "while", "batch_gen", ".", "has_next", "(", ")", ":", "\n", "                ", "batch_input", ",", "batch_target", ",", "mask", ",", "weight", "=", "batch_gen", ".", "next_batch", "(", "batch_size", ")", "\n", "batch_input", ",", "batch_target", ",", "mask", ",", "weight", "=", "batch_input", ".", "to", "(", "device", ")", ",", "batch_target", ".", "to", "(", "device", ")", ",", "mask", ".", "to", "(", "\n", "device", ")", ",", "weight", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "predictions", "=", "self", ".", "model", "(", "batch_input", ",", "mask", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "p", "in", "predictions", ":", "\n", "                    ", "loss", "+=", "self", ".", "ce", "(", "p", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "self", ".", "num_classes", ")", ",", "batch_target", ".", "view", "(", "-", "1", ")", ")", "\n", "loss", "+=", "0.15", "*", "torch", ".", "mean", "(", "torch", ".", "clamp", "(", "\n", "self", ".", "mse", "(", "F", ".", "log_softmax", "(", "p", "[", ":", ",", ":", ",", "1", ":", "]", ",", "dim", "=", "1", ")", ",", "F", ".", "log_softmax", "(", "p", ".", "detach", "(", ")", "[", ":", ",", ":", ",", ":", "-", "1", "]", ",", "dim", "=", "1", ")", ")", ",", "min", "=", "0", ",", "\n", "max", "=", "16", ")", "*", "mask", "[", ":", ",", ":", ",", "1", ":", "]", ")", "\n", "\n", "", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "predictions", "[", "-", "1", "]", ".", "data", ",", "1", ")", "\n", "correct", "+=", "(", "(", "predicted", "==", "batch_target", ")", ".", "float", "(", ")", "*", "mask", "[", ":", ",", "0", ",", ":", "]", ".", "squeeze", "(", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total", "+=", "torch", ".", "sum", "(", "mask", "[", ":", ",", "0", ",", ":", "]", ")", ".", "item", "(", ")", "\n", "\n", "", "batch_gen", ".", "reset", "(", ")", "\n", "if", "epoch", "+", "1", "==", "num_epochs", ":", "\n", "                ", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "save_dir", "+", "\"/epoch-\"", "+", "str", "(", "epoch", "+", "1", ")", "+", "\".model\"", ")", "\n", "torch", ".", "save", "(", "optimizer", ".", "state_dict", "(", ")", ",", "save_dir", "+", "\"/epoch-\"", "+", "str", "(", "epoch", "+", "1", ")", "+", "\".opt\"", ")", "\n", "", "print", "(", "\"[epoch %d]: epoch loss = %f,   acc = %f\"", "%", "(", "epoch", "+", "1", ",", "epoch_loss", "/", "len", "(", "batch_gen", ".", "list_of_examples", ")", ",", "\n", "float", "(", "correct", ")", "/", "total", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.model.Trainer.predict": [[60, 88], ["model.Trainer.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.Trainer.model.to", "model.Trainer.model.load_state_dict", "open", "open.close", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "open.read().split", "numpy.load", "batch_gen.get_features", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "input_x.to.to.unsqueeze_", "input_x.to.to.size", "input_x.to.to.to", "model.Trainer.model", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "predicted.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu().numpy", "range", "open", "open.write", "open.write", "open.close", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "len", "numpy.concatenate", "open.read", "predicted.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu", "str", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "predicted.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu().numpy.squeeze().data.detach", "list", "predicted.squeeze().data.detach().cpu().numpy.squeeze().data.detach().cpu().numpy.squeeze", "actions_dict.keys", "list().index", "predicted[].item", "list", "actions_dict.values"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.batch_gen.get_features"], ["", "", "def", "predict", "(", "self", ",", "model_dir", ",", "results_dir", ",", "features_path", ",", "vid_list_file", ",", "epoch", ",", "actions_dict", ",", "device", ",", "sample_rate", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "to", "(", "device", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_dir", "+", "\"/epoch-\"", "+", "str", "(", "epoch", ")", "+", "\".model\"", ")", ")", "\n", "file_ptr", "=", "open", "(", "vid_list_file", ",", "'r'", ")", "\n", "list_of_vids", "=", "file_ptr", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", ":", "-", "1", "]", "\n", "file_ptr", ".", "close", "(", ")", "\n", "for", "vid", "in", "list_of_vids", ":", "\n", "                ", "string2", "=", "vid", "[", ":", "-", "10", "]", "\n", "features", "=", "np", ".", "load", "(", "features_path", "+", "string2", "+", "'input'", "+", "'.npy'", ")", "\n", "features", "=", "get_features", "(", "features", ")", "\n", "features", "=", "features", "[", ":", ",", ":", ":", "sample_rate", ",", ":", ",", ":", "]", "\n", "input_x", "=", "torch", ".", "tensor", "(", "features", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "input_x", ".", "unsqueeze_", "(", "0", ")", "\n", "N", ",", "C", ",", "T", ",", "V", ",", "M", "=", "input_x", ".", "size", "(", ")", "\n", "input_x", "=", "input_x", ".", "to", "(", "device", ")", "\n", "predictions", "=", "self", ".", "model", "(", "input_x", ",", "torch", ".", "ones", "(", "N", ",", "2", ",", "T", ")", ".", "to", "(", "device", ")", ")", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "predictions", "[", "-", "1", "]", ".", "data", ",", "1", ")", "\n", "predicted", "=", "predicted", ".", "squeeze", "(", ")", ".", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "recognition", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "predicted", ")", ")", ":", "\n", "                    ", "recognition", "=", "np", ".", "concatenate", "(", "(", "recognition", ",", "[", "list", "(", "actions_dict", ".", "keys", "(", ")", ")", "[", "list", "(", "actions_dict", ".", "values", "(", ")", ")", ".", "index", "(", "predicted", "[", "i", "]", ".", "item", "(", ")", ")", "]", "]", "*", "sample_rate", ")", ")", "\n", "", "f_name", "=", "vid", "[", ":", "-", "4", "]", "\n", "f_ptr", "=", "open", "(", "results_dir", "+", "\"/\"", "+", "f_name", ",", "\"w\"", ")", "\n", "f_ptr", ".", "write", "(", "\"### Frame level recognition: ###\\n\"", ")", "\n", "f_ptr", ".", "write", "(", "' '", ".", "join", "(", "recognition", ")", ")", "\n", "f_ptr", ".", "close", "(", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.read_file": [[11, 16], ["open", "f.read", "f.close"], "function", ["None"], ["def", "read_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "content", "=", "f", ".", "read", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "return", "content", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time": [[18, 37], ["range", "labels.append", "starts.append", "len", "ends.append", "labels.append", "starts.append", "ends.append"], "function", ["None"], ["", "def", "get_labels_start_end_time", "(", "frame_wise_labels", ",", "bg_class", "=", "[", "\"background\"", "]", ")", ":", "\n", "    ", "labels", "=", "[", "]", "\n", "starts", "=", "[", "]", "\n", "ends", "=", "[", "]", "\n", "last_label", "=", "frame_wise_labels", "[", "0", "]", "\n", "if", "frame_wise_labels", "[", "0", "]", "not", "in", "bg_class", ":", "\n", "        ", "labels", ".", "append", "(", "frame_wise_labels", "[", "0", "]", ")", "\n", "starts", ".", "append", "(", "0", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "frame_wise_labels", ")", ")", ":", "\n", "        ", "if", "frame_wise_labels", "[", "i", "]", "!=", "last_label", ":", "\n", "            ", "if", "frame_wise_labels", "[", "i", "]", "not", "in", "bg_class", ":", "\n", "                ", "labels", ".", "append", "(", "frame_wise_labels", "[", "i", "]", ")", "\n", "starts", ".", "append", "(", "i", ")", "\n", "", "if", "last_label", "not", "in", "bg_class", ":", "\n", "                ", "ends", ".", "append", "(", "i", ")", "\n", "", "last_label", "=", "frame_wise_labels", "[", "i", "]", "\n", "", "", "if", "last_label", "not", "in", "bg_class", ":", "\n", "        ", "ends", ".", "append", "(", "i", "+", "1", ")", "\n", "", "return", "labels", ",", "starts", ",", "ends", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.levenstein": [[39, 63], ["len", "len", "numpy.zeros", "range", "range", "range", "range", "min", "max"], "function", ["None"], ["", "def", "levenstein", "(", "p", ",", "y", ",", "norm", "=", "False", ")", ":", "\n", "    ", "m_row", "=", "len", "(", "p", ")", "\n", "n_col", "=", "len", "(", "y", ")", "\n", "D", "=", "np", ".", "zeros", "(", "[", "m_row", "+", "1", ",", "n_col", "+", "1", "]", ",", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "m_row", "+", "1", ")", ":", "\n", "        ", "D", "[", "i", ",", "0", "]", "=", "i", "\n", "", "for", "i", "in", "range", "(", "n_col", "+", "1", ")", ":", "\n", "        ", "D", "[", "0", ",", "i", "]", "=", "i", "\n", "\n", "", "for", "j", "in", "range", "(", "1", ",", "n_col", "+", "1", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "m_row", "+", "1", ")", ":", "\n", "            ", "if", "y", "[", "j", "-", "1", "]", "==", "p", "[", "i", "-", "1", "]", ":", "\n", "                ", "D", "[", "i", ",", "j", "]", "=", "D", "[", "i", "-", "1", ",", "j", "-", "1", "]", "\n", "", "else", ":", "\n", "                ", "D", "[", "i", ",", "j", "]", "=", "min", "(", "D", "[", "i", "-", "1", ",", "j", "]", "+", "1", ",", "\n", "D", "[", "i", ",", "j", "-", "1", "]", "+", "1", ",", "\n", "D", "[", "i", "-", "1", ",", "j", "-", "1", "]", "+", "1", ")", "\n", "\n", "", "", "", "if", "norm", ":", "\n", "        ", "score", "=", "(", "1", "-", "D", "[", "-", "1", ",", "-", "1", "]", "/", "max", "(", "m_row", ",", "n_col", ")", ")", "*", "100", "\n", "", "else", ":", "\n", "        ", "score", "=", "D", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.edit_score": [[65, 69], ["label_eval.get_labels_start_end_time", "label_eval.get_labels_start_end_time", "label_eval.levenstein"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.levenstein"], ["", "def", "edit_score", "(", "recognized", ",", "ground_truth", ",", "norm", "=", "True", ",", "bg_class", "=", "[", "\"background\"", "]", ")", ":", "\n", "    ", "P", ",", "_", ",", "_", "=", "get_labels_start_end_time", "(", "recognized", ",", "bg_class", ")", "\n", "Y", ",", "_", ",", "_", "=", "get_labels_start_end_time", "(", "ground_truth", ",", "bg_class", ")", "\n", "return", "levenstein", "(", "P", ",", "Y", ",", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.f_score": [[71, 94], ["label_eval.get_labels_start_end_time", "label_eval.get_labels_start_end_time", "numpy.zeros", "range", "len", "len", "numpy.array().argmax", "len", "sum", "float", "float", "float", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.array", "range", "len"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time"], ["", "def", "f_score", "(", "recognized", ",", "ground_truth", ",", "overlap", ",", "bg_class", "=", "[", "\"background\"", "]", ")", ":", "\n", "    ", "p_label", ",", "p_start", ",", "p_end", "=", "get_labels_start_end_time", "(", "recognized", ",", "bg_class", ")", "\n", "y_label", ",", "y_start", ",", "y_end", "=", "get_labels_start_end_time", "(", "ground_truth", ",", "bg_class", ")", "\n", "\n", "tp", "=", "0", "\n", "fp", "=", "0", "\n", "\n", "hits", "=", "np", ".", "zeros", "(", "len", "(", "y_label", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "p_label", ")", ")", ":", "\n", "        ", "intersection", "=", "np", ".", "minimum", "(", "p_end", "[", "j", "]", ",", "y_end", ")", "-", "np", ".", "maximum", "(", "p_start", "[", "j", "]", ",", "y_start", ")", "\n", "union", "=", "np", ".", "maximum", "(", "p_end", "[", "j", "]", ",", "y_end", ")", "-", "np", ".", "minimum", "(", "p_start", "[", "j", "]", ",", "y_start", ")", "\n", "IoU", "=", "(", "1.0", "*", "intersection", "/", "union", ")", "*", "(", "[", "p_label", "[", "j", "]", "==", "y_label", "[", "x", "]", "for", "x", "in", "range", "(", "len", "(", "y_label", ")", ")", "]", ")", "\n", "# Get the best scoring segment", "\n", "idx", "=", "np", ".", "array", "(", "IoU", ")", ".", "argmax", "(", ")", "\n", "\n", "if", "IoU", "[", "idx", "]", ">=", "overlap", "and", "not", "hits", "[", "idx", "]", ":", "\n", "            ", "tp", "+=", "1", "\n", "hits", "[", "idx", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "fp", "+=", "1", "\n", "", "", "fn", "=", "len", "(", "y_label", ")", "-", "sum", "(", "hits", ")", "\n", "return", "float", "(", "tp", ")", ",", "float", "(", "fp", ")", ",", "float", "(", "fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.mcc_score": [[96, 138], ["label_eval.get_labels_start_end_time", "label_eval.get_labels_start_end_time", "numpy.zeros", "range", "len", "len", "numpy.array().argmax", "float", "float", "float", "float", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.array", "range", "len"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.get_labels_start_end_time"], ["", "def", "mcc_score", "(", "recognized", ",", "ground_truth", ",", "overlap", ",", "bg_class", "=", "[", "\"background\"", "]", ")", ":", "\n", "    ", "p_label", ",", "p_start", ",", "p_end", "=", "get_labels_start_end_time", "(", "recognized", ",", "bg_class", ")", "\n", "y_label", ",", "y_start", ",", "y_end", "=", "get_labels_start_end_time", "(", "ground_truth", ",", "bg_class", ")", "\n", "\n", "tp", "=", "0", "\n", "fp", "=", "0", "\n", "tn", "=", "0", "\n", "fn", "=", "0", "\n", "hits", "=", "np", ".", "zeros", "(", "len", "(", "y_label", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "p_label", ")", ")", ":", "\n", "        ", "intersection", "=", "np", ".", "minimum", "(", "p_end", "[", "j", "]", ",", "y_end", ")", "-", "np", ".", "maximum", "(", "p_start", "[", "j", "]", ",", "y_start", ")", "\n", "union", "=", "np", ".", "maximum", "(", "p_end", "[", "j", "]", ",", "y_end", ")", "-", "np", ".", "minimum", "(", "p_start", "[", "j", "]", ",", "y_start", ")", "\n", "IoU", "=", "(", "1.0", "*", "intersection", "/", "union", ")", "*", "(", "[", "p_label", "[", "j", "]", "==", "y_label", "[", "x", "]", "for", "x", "in", "range", "(", "len", "(", "y_label", ")", ")", "]", ")", "\n", "# Get the best scoring segment", "\n", "idx", "=", "np", ".", "array", "(", "IoU", ")", ".", "argmax", "(", ")", "\n", "\n", "if", "IoU", "[", "idx", "]", ">=", "overlap", "and", "not", "hits", "[", "idx", "]", ":", "\n", "            ", "if", "(", "p_label", "[", "j", "]", "==", "0", ")", ":", "\n", "                ", "tn", "+=", "1", "\n", "", "else", ":", "\n", "                ", "tp", "+=", "1", "\n", "", "hits", "[", "idx", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "if", "(", "p_label", "[", "j", "]", "==", "0", ")", ":", "\n", "                ", "fn", "+=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "+=", "1", "\n", "#fn = len(y_label) - sum(hits)", "\n", "# for i in range(0,len(y_label)):", "\n", "#     if(hits[i]==0):", "\n", "#         if(y_label[i]==1):", "\n", "#             fn += 1", "\n", "#         else:", "\n", "#             fp += 1", "\n", "#     else:", "\n", "#         if (y_label[i] == 1):", "\n", "#             tp += 1", "\n", "#         else:", "\n", "#             tn += 1", "\n", "\n", "", "", "", "return", "float", "(", "tp", ")", ",", "float", "(", "fp", ")", ",", "float", "(", "fn", ")", ",", "float", "(", "tn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.run_eval": [[140, 222], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "print", "print", "print", "range", "print", "print", "read_file().split", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "list", "list", "range", "label_eval.edit_score", "range", "range", "numpy.column_stack", "numpy.savetxt", "len", "print", "print", "print", "print", "str", "str", "len", "len", "len", "len", "len", "len", "len", "len", "len", "label_eval.f_score", "len", "label_eval.mcc_score", "str", "float", "float", "numpy.nan_to_num", "math.sqrt", "float", "label_eval.read_file", "numpy.loadtxt().astype", "numpy.loadtxt().astype", "numpy.asarray", "numpy.asarray", "len", "math.sqrt", "len", "float", "numpy.loadtxt", "numpy.loadtxt"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.edit_score", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.f_score", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.mcc_score", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.read_file"], ["", "def", "run_eval", "(", "split", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "\"final_dataset_6\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "args", ".", "dataset", ")", "\n", "ground_truth_path", "=", "\"./data/\"", "+", "args", ".", "dataset", "+", "\"/groundTruth_/\"", "\n", "recog_path", "=", "\"./results/\"", "+", "args", ".", "dataset", "+", "\"/split_\"", "+", "str", "(", "split", ")", "+", "\"/\"", "\n", "file_list", "=", "\"./data/\"", "+", "args", ".", "dataset", "+", "\"/splits_loso_validation/test.split\"", "+", "str", "(", "split", ")", "+", "\".bundle\"", "\n", "\n", "list_of_videos", "=", "read_file", "(", "file_list", ")", ".", "split", "(", "'\\n'", ")", "[", ":", "-", "1", "]", "\n", "\n", "overlap", "=", "[", "0.5", "]", "\n", "tp2", ",", "fp2", ",", "fn2", ",", "tn2", "=", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", ",", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", ",", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", ",", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", "\n", "tp", ",", "fp", ",", "fn", "=", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", ",", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", ",", "np", ".", "zeros", "(", "len", "(", "overlap", ")", ")", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "edit", "=", "0", "\n", "mcctn", "=", "0", "\n", "mcctp", "=", "0", "\n", "mccfn", "=", "0", "\n", "mccfp", "=", "0", "\n", "\n", "for", "vid", "in", "list_of_videos", ":", "\n", "\n", "        ", "gt_file", "=", "ground_truth_path", "+", "vid", "\n", "gt_content", "=", "list", "(", "np", ".", "loadtxt", "(", "gt_file", ")", ".", "astype", "(", "int", ")", "[", ":", "-", "1", "]", ")", "\n", "\n", "recog_file", "=", "recog_path", "+", "vid", "[", ":", "-", "4", "]", "\n", "recog_content", "=", "list", "(", "np", ".", "loadtxt", "(", "recog_file", ")", ".", "astype", "(", "int", ")", "[", ":", "len", "(", "gt_content", ")", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "gt_content", ")", ")", ":", "\n", "            ", "total", "+=", "1", "\n", "if", "gt_content", "[", "i", "]", "==", "recog_content", "[", "i", "]", ":", "\n", "                ", "correct", "+=", "1", "\n", "if", "(", "gt_content", "[", "i", "]", "==", "1", ")", ":", "\n", "                    ", "mcctp", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "mcctn", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "if", "(", "gt_content", "[", "i", "]", "==", "1", ")", ":", "\n", "                    ", "mccfn", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "mccfp", "+=", "1", "\n", "\n", "", "", "", "edit", "+=", "edit_score", "(", "recog_content", ",", "gt_content", ")", "\n", "\n", "for", "s", "in", "range", "(", "len", "(", "overlap", ")", ")", ":", "\n", "            ", "tp1", ",", "fp1", ",", "fn1", "=", "f_score", "(", "recog_content", ",", "gt_content", ",", "overlap", "[", "s", "]", ")", "\n", "tp", "[", "s", "]", "+=", "tp1", "\n", "fp", "[", "s", "]", "+=", "fp1", "\n", "fn", "[", "s", "]", "+=", "fn1", "\n", "\n", "", "for", "s", "in", "range", "(", "len", "(", "overlap", ")", ")", ":", "\n", "            ", "tp1", ",", "fp1", ",", "fn1", ",", "tn1", "=", "mcc_score", "(", "recog_content", ",", "gt_content", ",", "overlap", "[", "s", "]", ")", "\n", "tp2", "[", "s", "]", "+=", "tp1", "\n", "fp2", "[", "s", "]", "+=", "fp1", "\n", "fn2", "[", "s", "]", "+=", "fn1", "\n", "tn2", "[", "s", "]", "+=", "tn1", "\n", "\n", "", "outputs", "=", "np", ".", "column_stack", "(", "(", "np", ".", "asarray", "(", "recog_content", ")", ",", "np", ".", "asarray", "(", "gt_content", ")", ")", ")", "\n", "np", ".", "savetxt", "(", "recog_path", "+", "vid", "+", "'_annot.csv'", ",", "outputs", ",", "delimiter", "=", "','", ")", "\n", "\n", "", "print", "(", "'Split '", "+", "str", "(", "split", ")", ")", "\n", "print", "(", "\"Acc: %.4f\"", "%", "(", "100", "*", "float", "(", "correct", ")", "/", "total", ")", ")", "\n", "print", "(", "'Edit: %.4f'", "%", "(", "(", "1.0", "*", "edit", ")", "/", "len", "(", "list_of_videos", ")", ")", ")", "\n", "for", "s", "in", "range", "(", "len", "(", "overlap", ")", ")", ":", "\n", "        ", "precision", "=", "tp", "[", "s", "]", "/", "float", "(", "tp", "[", "s", "]", "+", "fp", "[", "s", "]", ")", "\n", "recall", "=", "tp", "[", "s", "]", "/", "float", "(", "tp", "[", "s", "]", "+", "fn", "[", "s", "]", ")", "\n", "\n", "f1", "=", "2.0", "*", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "\n", "f1", "=", "np", ".", "nan_to_num", "(", "f1", ")", "*", "100", "\n", "mcc", "=", "(", "(", "tp2", "[", "s", "]", "*", "tn2", "[", "s", "]", ")", "-", "(", "fn2", "[", "s", "]", "*", "fp2", "[", "s", "]", ")", ")", "/", "(", "math", ".", "sqrt", "(", "(", "tp2", "[", "s", "]", "+", "fp2", "[", "s", "]", ")", "*", "(", "tp2", "[", "s", "]", "+", "fn2", "[", "s", "]", ")", "*", "(", "tn2", "[", "s", "]", "+", "fp2", "[", "s", "]", ")", "*", "(", "tn2", "[", "s", "]", "+", "fn2", "[", "s", "]", ")", ")", "+", "0.0000001", ")", "#no div by zero", "\n", "print", "(", "'Precision@%0.2f: %.4f'", "%", "(", "overlap", "[", "s", "]", ",", "precision", ")", ")", "\n", "print", "(", "'Recall@%0.2f: %.4f'", "%", "(", "overlap", "[", "s", "]", ",", "recall", ")", ")", "\n", "print", "(", "'F1@%0.2f: %.4f'", "%", "(", "overlap", "[", "s", "]", ",", "f1", ")", ")", "\n", "print", "(", "'MCC@%0.2f: %.4f'", "%", "(", "overlap", "[", "s", "]", ",", "mcc", ")", ")", "\n", "", "frame_mcc", "=", "(", "(", "mcctp", "*", "mcctn", ")", "-", "(", "mccfn", "*", "mccfp", ")", ")", "/", "(", "math", ".", "sqrt", "(", "(", "mcctp", "+", "mccfp", ")", "*", "(", "mcctp", "+", "mccfn", ")", "*", "(", "mcctn", "+", "mccfp", ")", "*", "(", "mcctn", "+", "mccfn", ")", ")", "+", "0.0000001", ")", "\n", "print", "(", "'Frame MCC: %.4f'", "%", "(", "frame_mcc", ")", ")", "\n", "acc", "=", "100", "*", "float", "(", "correct", ")", "/", "total", "\n", "print", "(", "'\\n'", ")", "\n", "return", "frame_mcc", ",", "f1", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.main": [[224, 242], ["range", "print", "print", "print", "print", "print", "print", "label_eval.run_eval", "accs.append", "score.append", "f1s.append", "mccs.append", "str", "str", "str", "str", "str", "str", "numpy.mean", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.None.label_eval.run_eval"], ["", "def", "main", "(", ")", ":", "\n", "    ", "score", "=", "[", "]", "\n", "f1s", "=", "[", "]", "\n", "mccs", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "2", ")", ":", "\n", "        ", "mcc_fr", ",", "f1", ",", "acc", "=", "run_eval", "(", "i", ")", "\n", "metric", "=", "(", "(", "mcc_fr", "*", "100", ")", "+", "f1", ")", "/", "2", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "score", ".", "append", "(", "metric", ")", "\n", "f1s", ".", "append", "(", "f1", ")", "\n", "mccs", ".", "append", "(", "mcc_fr", ")", "\n", "", "print", "(", "'score: '", "+", "str", "(", "np", ".", "mean", "(", "score", ")", ")", ")", "\n", "print", "(", "'f1: '", "+", "str", "(", "np", ".", "mean", "(", "f1s", ")", ")", ")", "\n", "print", "(", "'f1 sd: '", "+", "str", "(", "np", ".", "std", "(", "f1s", ")", ")", ")", "\n", "print", "(", "'mcc: '", "+", "str", "(", "np", ".", "mean", "(", "mccs", ")", ")", ")", "\n", "print", "(", "'mcc sd: '", "+", "str", "(", "np", ".", "std", "(", "mccs", ")", ")", ")", "\n", "print", "(", "'Acc: '", "+", "str", "(", "np", ".", "mean", "(", "accs", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.Model.__init__": [[27, 68], ["torch.Module.__init__", "models.net_utils.graph.Graph", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "ms_gcn.Model.register_buffer", "torch.tensor.size", "torch.tensor.size", "torch.tensor.size", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ParameterList", "torch.ParameterList", "torch.ParameterList", "torch.tensor.size", "torch.tensor.size", "torch.tensor.size", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "ms_gcn.st_gcn", "len", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "ms_gcn.Model.A.size"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "num_class", "=", "2", ",", "dil", "=", "[", "1", ",", "2", ",", "4", ",", "8", ",", "16", "]", ",", "filters", "=", "64", ",", "\n", "edge_importance_weighting", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "graph_args", "=", "{", "'layout'", ":", "'tp-vicon'", ",", "'strategy'", ":", "'spatial'", "}", "\n", "# load graph", "\n", "# print('--------')", "\n", "# print(graph_args)", "\n", "self", ".", "graph", "=", "Graph", "(", "**", "graph_args", ")", "\n", "A", "=", "torch", ".", "tensor", "(", "self", ".", "graph", ".", "A", ",", "dtype", "=", "torch", ".", "float32", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "register_buffer", "(", "'A'", ",", "A", ")", "\n", "\n", "# build networks", "\n", "spatial_kernel_size", "=", "A", ".", "size", "(", "0", ")", "\n", "temporal_kernel_size", "=", "3", "\n", "kernel_size", "=", "(", "temporal_kernel_size", ",", "spatial_kernel_size", ")", "\n", "self", ".", "data_bn", "=", "nn", ".", "BatchNorm1d", "(", "in_channels", "*", "A", ".", "size", "(", "1", ")", ")", "\n", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "filters", ",", "1", ")", "\n", "self", ".", "st_gcn_networks", "=", "nn", ".", "ModuleList", "(", "(", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "0", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "1", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "2", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "3", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "4", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "5", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "6", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "7", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "8", "]", ",", "residual", "=", "True", ")", ",", "\n", "st_gcn", "(", "filters", ",", "filters", ",", "kernel_size", ",", "1", ",", "A", "=", "A", ",", "dilation", "=", "dil", "[", "9", "]", ",", "residual", "=", "True", ")", ",", "\n", ")", ")", "\n", "\n", "# initialize parameters for edge importance weighting", "\n", "if", "edge_importance_weighting", ":", "\n", "            ", "self", ".", "edge_importance", "=", "nn", ".", "ParameterList", "(", "[", "\n", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "self", ".", "A", ".", "size", "(", ")", ")", ")", "\n", "for", "i", "in", "self", ".", "st_gcn_networks", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "edge_importance", "=", "[", "1", "]", "*", "len", "(", "self", ".", "st_gcn_networks", ")", "\n", "\n", "", "self", ".", "conv_out", "=", "nn", ".", "Conv1d", "(", "filters", ",", "num_class", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.Model.forward": [[69, 93], ["x.view().mean().view.view().mean().view.size", "x.view().mean().view.view().mean().view.permute().contiguous", "x.view().mean().view.view().mean().view.view", "ms_gcn.Model.data_bn", "x.view().mean().view.view().mean().view.view", "x.view().mean().view.view().mean().view.permute().contiguous", "x.view().mean().view.view().mean().view.view", "ms_gcn.Model.conv_1x1", "zip", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "x.view().mean().view.view().mean().view.size", "x.view().mean().view.view().mean().view.size", "x.view().mean().view.view().mean().view.view().mean().view", "ms_gcn.Model.conv_out", "gcn", "x.view().mean().view.view().mean().view.permute", "x.view().mean().view.view().mean().view.permute", "x.view().mean().view.view().mean().view.view().mean", "x.view().mean().view.view().mean().view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# data normalization", "\n", "        ", "N", ",", "C", ",", "T", ",", "V", ",", "M", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "4", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", "*", "M", ",", "V", "*", "C", ",", "T", ")", "\n", "x", "=", "self", ".", "data_bn", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "M", ",", "V", ",", "C", ",", "T", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "N", "*", "M", ",", "C", ",", "T", ",", "V", ")", "\n", "\n", "# forward", "\n", "x", "=", "self", ".", "conv_1x1", "(", "x", ")", "\n", "for", "gcn", ",", "importance", "in", "zip", "(", "self", ".", "st_gcn_networks", ",", "self", ".", "edge_importance", ")", ":", "\n", "            ", "x", ",", "_", "=", "gcn", "(", "x", ",", "self", ".", "A", "*", "importance", ")", "\n", "\n", "# V pooling", "\n", "", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "(", "1", ",", "V", ")", ")", "\n", "\n", "# M pooling", "\n", "c", "=", "x", ".", "size", "(", "1", ")", "\n", "t", "=", "x", ".", "size", "(", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "N", ",", "M", ",", "c", ",", "t", ")", ".", "mean", "(", "dim", "=", "1", ")", ".", "view", "(", "N", ",", "c", ",", "t", ")", "\n", "out", "=", "self", ".", "conv_out", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.st_gcn.__init__": [[116, 162], ["torch.Module.__init__", "int", "models.net_utils.tgcn.ConvTemporalGraphical", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "len", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "A", "=", "None", ",", "\n", "dilation", "=", "1", ",", "\n", "residual", "=", "True", ")", ":", "\n", "        ", "super", "(", "st_gcn", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "len", "(", "kernel_size", ")", "==", "2", "\n", "assert", "kernel_size", "[", "0", "]", "%", "2", "==", "1", "\n", "pad", "=", "int", "(", "(", "dilation", "*", "(", "kernel_size", "[", "0", "]", "-", "1", ")", ")", "/", "2", ")", "\n", "self", ".", "gcn", "=", "ConvTemporalGraphical", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "[", "1", "]", ")", "\n", "\n", "self", ".", "tcn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "out_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "(", "kernel_size", "[", "0", "]", ",", "1", ")", ",", "\n", "stride", "=", "(", "stride", ",", "1", ")", ",", "\n", "padding", "=", "(", "pad", ",", "0", ")", ",", "\n", "dilation", "=", "(", "dilation", ",", "1", ")", ",", "\n", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", ")", "\n", "\n", "if", "not", "residual", ":", "\n", "            ", "self", ".", "residual", "=", "lambda", "x", ":", "0", "\n", "\n", "", "elif", "(", "in_channels", "==", "out_channels", ")", "and", "(", "stride", "==", "1", ")", ":", "\n", "            ", "self", ".", "residual", "=", "lambda", "x", ":", "x", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "residual", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "(", "stride", ",", "1", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", ")", "\n", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.st_gcn.forward": [[163, 170], ["ms_gcn.st_gcn.residual", "ms_gcn.st_gcn.gcn", "ms_gcn.st_gcn.tcn", "ms_gcn.st_gcn.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "A", ")", ":", "\n", "        ", "res", "=", "self", ".", "residual", "(", "x", ")", "\n", "x", ",", "A", "=", "self", ".", "gcn", "(", "x", ",", "A", ")", "\n", "x", "=", "self", ".", "tcn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "x", "+", "res", "\n", "return", "x", ",", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.MultiStageModel.__init__": [[173, 178], ["torch.Module.__init__", "ms_gcn.Model", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "copy.deepcopy", "ms_gcn.SingleStageModel", "range"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dil", ",", "num_layers_R", ",", "num_R", ",", "num_f_maps", ",", "dim", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "MultiStageModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stream", "=", "Model", "(", "in_channels", "=", "dim", ",", "num_class", "=", "num_classes", ",", "filters", "=", "num_f_maps", ",", "dil", "=", "dil", ")", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "SingleStageModel", "(", "num_layers_R", ",", "num_f_maps", ",", "num_classes", ",", "num_classes", ",", "dil", ")", ")", "for", "s", "in", "range", "(", "num_R", "-", "1", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.MultiStageModel.forward": [[179, 186], ["s.unsqueeze", "ms_gcn.MultiStageModel.stream", "s", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.softmax", "torch.softmax", "torch.softmax", "s.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", ")", ":", "\n", "        ", "out", "=", "self", ".", "stream", "(", "x", ")", "*", "mask", "[", ":", ",", "0", ":", "1", ",", ":", "]", "\n", "outputs", "=", "out", ".", "unsqueeze", "(", "0", ")", "\n", "for", "s", "in", "self", ".", "stages", ":", "\n", "            ", "out", "=", "s", "(", "F", ".", "softmax", "(", "out", ",", "dim", "=", "1", ")", "*", "mask", "[", ":", ",", "0", ":", "1", ",", ":", "]", ",", "mask", ")", "\n", "outputs", "=", "torch", ".", "cat", "(", "(", "outputs", ",", "out", ".", "unsqueeze", "(", "0", ")", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.SingleStageModel.__init__": [[189, 194], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "copy.deepcopy", "ms_gcn.DilatedResidualLayer", "range"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "num_f_maps", ",", "dim", ",", "num_classes", ",", "dil", ")", ":", "\n", "        ", "super", "(", "SingleStageModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_1x1", "=", "nn", ".", "Conv1d", "(", "dim", ",", "num_f_maps", ",", "1", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "DilatedResidualLayer", "(", "dil", "[", "i", "]", ",", "num_f_maps", ",", "num_f_maps", ")", ")", "for", "i", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "self", ".", "conv_out", "=", "nn", ".", "Conv1d", "(", "num_f_maps", ",", "num_classes", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.SingleStageModel.forward": [[195, 201], ["ms_gcn.SingleStageModel.conv_1x1", "layer", "ms_gcn.SingleStageModel.conv_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_1x1", "(", "x", ")", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "out", "=", "layer", "(", "out", ",", "mask", ")", "\n", "", "out", "=", "self", ".", "conv_out", "(", "out", ")", "*", "mask", "[", ":", ",", "0", ":", "1", ",", ":", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.DilatedResidualLayer.__init__": [[204, 209], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dilation", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "DilatedResidualLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_dilated", "=", "nn", ".", "Conv1d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.models.ms_gcn.DilatedResidualLayer.forward": [[210, 216], ["ms_gcn.DilatedResidualLayer.conv_dilated", "ms_gcn.DilatedResidualLayer.bn", "ms_gcn.DilatedResidualLayer.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv_dilated", "(", "x", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "return", "out", "*", "mask", "[", ":", ",", "0", ":", "1", ",", ":", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.__init__": [[27, 39], ["graph.Graph.get_edge", "graph.get_hop_distance", "graph.Graph.get_adjacency"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.get_edge", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.get_hop_distance", "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.get_adjacency"], ["def", "__init__", "(", "self", ",", "\n", "layout", "=", "'tp-vicon'", ",", "\n", "strategy", "=", "'spatial'", ",", "\n", "max_hop", "=", "1", ",", "\n", "dilation", "=", "1", ")", ":", "\n", "        ", "self", ".", "max_hop", "=", "max_hop", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "self", ".", "get_edge", "(", "layout", ")", "\n", "self", ".", "hop_dis", "=", "get_hop_distance", "(", "\n", "self", ".", "num_node", ",", "self", ".", "edge", ",", "max_hop", "=", "max_hop", ")", "\n", "self", ".", "get_adjacency", "(", "strategy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.__str__": [[40, 42], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.get_edge": [[43, 64], ["range", "ValueError", "range", "range"], "methods", ["None"], ["", "def", "get_edge", "(", "self", ",", "layout", ")", ":", "\n", "        ", "if", "layout", "==", "'tp-vicon'", ":", "\n", "            ", "self", ".", "num_node", "=", "9", "\n", "self_link", "=", "[", "(", "i", ",", "i", ")", "for", "i", "in", "range", "(", "self", ".", "num_node", ")", "]", "\n", "neighbor_link", "=", "[", "(", "1", ",", "0", ")", ",", "(", "2", ",", "1", ")", ",", "(", "3", ",", "2", ")", ",", "(", "4", ",", "3", ")", ",", "(", "5", ",", "0", ")", ",", "(", "6", ",", "5", ")", ",", "(", "7", ",", "6", ")", ",", "(", "8", ",", "7", ")", "]", "\n", "self", ".", "edge", "=", "self_link", "+", "neighbor_link", "\n", "self", ".", "center", "=", "0", "\n", "", "elif", "layout", "==", "'hugadb'", ":", "\n", "            ", "self", ".", "num_node", "=", "6", "\n", "self_link", "=", "[", "(", "i", ",", "i", ")", "for", "i", "in", "range", "(", "self", ".", "num_node", ")", "]", "\n", "neighbor_link", "=", "[", "(", "1", ",", "0", ")", ",", "(", "2", ",", "1", ")", ",", "(", "3", ",", "0", ")", ",", "(", "4", ",", "3", ")", ",", "(", "5", ",", "0", ")", "]", "\n", "self", ".", "edge", "=", "self_link", "+", "neighbor_link", "\n", "self", ".", "center", "=", "0", "\n", "", "elif", "layout", "==", "'lara'", ":", "\n", "            ", "self", ".", "num_node", "=", "19", "\n", "self_link", "=", "[", "(", "i", ",", "i", ")", "for", "i", "in", "range", "(", "self", ".", "num_node", ")", "]", "\n", "neighbor_link", "=", "[", "(", "1", ",", "0", ")", ",", "(", "2", ",", "1", ")", ",", "(", "3", ",", "2", ")", ",", "(", "4", ",", "3", ")", ",", "(", "5", ",", "0", ")", ",", "(", "6", ",", "5", ")", ",", "(", "7", ",", "6", ")", ",", "(", "8", ",", "7", ")", ",", "(", "9", ",", "0", ")", ",", "(", "10", ",", "9", ")", ",", "(", "11", ",", "9", ")", ",", "(", "12", ",", "10", ")", ",", "(", "13", ",", "12", ")", ",", "(", "14", ",", "13", ")", ",", "(", "15", ",", "9", ")", ",", "(", "16", ",", "15", ")", ",", "(", "17", ",", "16", ")", ",", "(", "18", ",", "17", ")", "]", "\n", "self", ".", "edge", "=", "self_link", "+", "neighbor_link", "\n", "self", ".", "center", "=", "0", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Do Not Exist This Layout.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.Graph.get_adjacency": [[65, 109], ["range", "numpy.zeros", "graph.normalize_digraph", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.stack", "ValueError", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "numpy.stack.append", "numpy.stack.append", "numpy.stack.append"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.normalize_digraph"], ["", "", "def", "get_adjacency", "(", "self", ",", "strategy", ")", ":", "\n", "        ", "valid_hop", "=", "range", "(", "0", ",", "self", ".", "max_hop", "+", "1", ",", "self", ".", "dilation", ")", "\n", "adjacency", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "for", "hop", "in", "valid_hop", ":", "\n", "            ", "adjacency", "[", "self", ".", "hop_dis", "==", "hop", "]", "=", "1", "\n", "", "normalize_adjacency", "=", "normalize_digraph", "(", "adjacency", ")", "\n", "\n", "if", "strategy", "==", "'uniform'", ":", "\n", "            ", "A", "=", "np", ".", "zeros", "(", "(", "1", ",", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "A", "[", "0", "]", "=", "normalize_adjacency", "\n", "self", ".", "A", "=", "A", "\n", "", "elif", "strategy", "==", "'distance'", ":", "\n", "            ", "A", "=", "np", ".", "zeros", "(", "(", "len", "(", "valid_hop", ")", ",", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "for", "i", ",", "hop", "in", "enumerate", "(", "valid_hop", ")", ":", "\n", "                ", "A", "[", "i", "]", "[", "self", ".", "hop_dis", "==", "hop", "]", "=", "normalize_adjacency", "[", "self", ".", "hop_dis", "==", "\n", "hop", "]", "\n", "", "self", ".", "A", "=", "A", "\n", "", "elif", "strategy", "==", "'spatial'", ":", "\n", "            ", "A", "=", "[", "]", "\n", "for", "hop", "in", "valid_hop", ":", "\n", "                ", "a_root", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "a_close", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "a_further", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_node", ",", "self", ".", "num_node", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_node", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "self", ".", "num_node", ")", ":", "\n", "                        ", "if", "self", ".", "hop_dis", "[", "j", ",", "i", "]", "==", "hop", ":", "\n", "                            ", "if", "self", ".", "hop_dis", "[", "j", ",", "self", ".", "center", "]", "==", "self", ".", "hop_dis", "[", "\n", "i", ",", "self", ".", "center", "]", ":", "\n", "                                ", "a_root", "[", "j", ",", "i", "]", "=", "normalize_adjacency", "[", "j", ",", "i", "]", "\n", "", "elif", "self", ".", "hop_dis", "[", "j", ",", "self", ".", "\n", "center", "]", ">", "self", ".", "hop_dis", "[", "i", ",", "self", ".", "\n", "center", "]", ":", "\n", "                                ", "a_close", "[", "j", ",", "i", "]", "=", "normalize_adjacency", "[", "j", ",", "i", "]", "\n", "", "else", ":", "\n", "                                ", "a_further", "[", "j", ",", "i", "]", "=", "normalize_adjacency", "[", "j", ",", "i", "]", "\n", "", "", "", "", "if", "hop", "==", "0", ":", "\n", "                    ", "A", ".", "append", "(", "a_root", ")", "\n", "", "else", ":", "\n", "                    ", "A", ".", "append", "(", "a_root", "+", "a_close", ")", "\n", "A", ".", "append", "(", "a_further", ")", "\n", "", "", "A", "=", "np", ".", "stack", "(", "A", ")", "\n", "self", ".", "A", "=", "A", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Do Not Exist This Strategy\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.get_hop_distance": [[111, 124], ["numpy.zeros", "range", "numpy.zeros", "numpy.linalg.matrix_power", "numpy.stack", "range"], "function", ["None"], ["", "", "", "def", "get_hop_distance", "(", "num_node", ",", "edge", ",", "max_hop", "=", "1", ")", ":", "\n", "    ", "A", "=", "np", ".", "zeros", "(", "(", "num_node", ",", "num_node", ")", ")", "\n", "for", "i", ",", "j", "in", "edge", ":", "\n", "        ", "A", "[", "j", ",", "i", "]", "=", "1", "\n", "A", "[", "i", ",", "j", "]", "=", "1", "\n", "\n", "# compute hop steps", "\n", "", "hop_dis", "=", "np", ".", "zeros", "(", "(", "num_node", ",", "num_node", ")", ")", "+", "np", ".", "inf", "\n", "transfer_mat", "=", "[", "np", ".", "linalg", ".", "matrix_power", "(", "A", ",", "d", ")", "for", "d", "in", "range", "(", "max_hop", "+", "1", ")", "]", "\n", "arrive_mat", "=", "(", "np", ".", "stack", "(", "transfer_mat", ")", ">", "0", ")", "\n", "for", "d", "in", "range", "(", "max_hop", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "hop_dis", "[", "arrive_mat", "[", "d", "]", "]", "=", "d", "\n", "", "return", "hop_dis", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.normalize_digraph": [[126, 135], ["numpy.sum", "numpy.zeros", "range", "numpy.dot"], "function", ["None"], ["", "def", "normalize_digraph", "(", "A", ")", ":", "\n", "    ", "Dl", "=", "np", ".", "sum", "(", "A", ",", "0", ")", "\n", "num_node", "=", "A", ".", "shape", "[", "0", "]", "\n", "Dn", "=", "np", ".", "zeros", "(", "(", "num_node", ",", "num_node", ")", ")", "\n", "for", "i", "in", "range", "(", "num_node", ")", ":", "\n", "        ", "if", "Dl", "[", "i", "]", ">", "0", ":", "\n", "            ", "Dn", "[", "i", ",", "i", "]", "=", "Dl", "[", "i", "]", "**", "(", "-", "1", ")", "\n", "", "", "AD", "=", "np", ".", "dot", "(", "A", ",", "Dn", ")", "\n", "return", "AD", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.graph.normalize_undigraph": [[137, 146], ["numpy.sum", "numpy.zeros", "range", "numpy.dot", "numpy.dot"], "function", ["None"], ["", "def", "normalize_undigraph", "(", "A", ")", ":", "\n", "    ", "Dl", "=", "np", ".", "sum", "(", "A", ",", "0", ")", "\n", "num_node", "=", "A", ".", "shape", "[", "0", "]", "\n", "Dn", "=", "np", ".", "zeros", "(", "(", "num_node", ",", "num_node", ")", ")", "\n", "for", "i", "in", "range", "(", "num_node", ")", ":", "\n", "        ", "if", "Dl", "[", "i", "]", ">", "0", ":", "\n", "            ", "Dn", "[", "i", ",", "i", "]", "=", "Dl", "[", "i", "]", "**", "(", "-", "0.5", ")", "\n", "", "", "DAD", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "Dn", ",", "A", ")", ",", "Dn", ")", "\n", "return", "DAD", "\n", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__": [[36, 56], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.__init__"], ["def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "t_kernel_size", "=", "1", ",", "\n", "t_stride", "=", "1", ",", "\n", "t_padding", "=", "0", ",", "\n", "t_dilation", "=", "1", ",", "\n", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "\n", "out_channels", "*", "kernel_size", ",", "\n", "kernel_size", "=", "(", "t_kernel_size", ",", "1", ")", ",", "\n", "padding", "=", "(", "t_padding", ",", "0", ")", ",", "\n", "stride", "=", "(", "t_stride", ",", "1", ")", ",", "\n", "dilation", "=", "(", "t_dilation", ",", "1", ")", ",", "\n", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.net_utils.tgcn.ConvTemporalGraphical.forward": [[57, 67], ["tgcn.ConvTemporalGraphical.conv", "torch.einsum.size", "torch.einsum.size", "torch.einsum.view", "torch.einsum.view", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "A.size", "torch.einsum.contiguous", "torch.einsum.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "A", ")", ":", "\n", "        ", "assert", "A", ".", "size", "(", "0", ")", "==", "self", ".", "kernel_size", "\n", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "n", ",", "kc", ",", "t", ",", "v", "=", "x", ".", "size", "(", ")", "\n", "x", "=", "x", ".", "view", "(", "n", ",", "self", ".", "kernel_size", ",", "kc", "//", "self", ".", "kernel_size", ",", "t", ",", "v", ")", "\n", "x", "=", "torch", ".", "einsum", "(", "'nkctv,kvw->nctw'", ",", "(", "x", ",", "A", ")", ")", "\n", "\n", "return", "x", ".", "contiguous", "(", ")", ",", "A", "", "", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.signals.disps.get_displacements": [[5, 22], ["numpy.zeros", "validFrames.argmax", "len", "validFrames[].argmax"], "function", ["None"], ["def", "get_displacements", "(", "sample", ")", ":", "\n", "# input: C, T, V, M", "\n", "    ", "C", ",", "T", ",", "V", ",", "M", "=", "sample", ".", "shape", "\n", "final_sample", "=", "np", ".", "zeros", "(", "(", "C", ",", "T", ",", "V", ",", "M", ")", ")", "\n", "\n", "validFrames", "=", "(", "sample", "!=", "0", ")", ".", "sum", "(", "axis", "=", "3", ")", ".", "sum", "(", "axis", "=", "2", ")", ".", "sum", "(", "axis", "=", "0", ")", ">", "0", "\n", "start", "=", "validFrames", ".", "argmax", "(", ")", "\n", "end", "=", "len", "(", "validFrames", ")", "-", "validFrames", "[", ":", ":", "-", "1", "]", ".", "argmax", "(", ")", "\n", "sample", "=", "sample", "[", ":", ",", "start", ":", "end", ",", ":", ",", ":", "]", "\n", "\n", "t", "=", "sample", ".", "shape", "[", "1", "]", "\n", "# Shape: C, t-1, V, M", "\n", "disps", "=", "sample", "[", ":", ",", "1", ":", ",", ":", ",", ":", "]", "-", "sample", "[", ":", ",", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "# Shape: C, T, V, M", "\n", "final_sample", "[", ":", ",", "start", ":", "end", "-", "1", ",", ":", ",", ":", "]", "=", "disps", "\n", "\n", "return", "final_sample", "\n", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.signals.rel_coords.get_relative_coordinates": [[6, 30], ["numpy.zeros", "validFrames.argmax", "np.vstack.append", "numpy.vstack", "len", "validFrames[].argmax", "sample.transpose"], "function", ["None"], ["def", "get_relative_coordinates", "(", "sample", ",", "\n", "references", "=", "(", "0", ")", ")", ":", "\n", "# input: C, T, V, M", "\n", "# references=(4, 8, 12, 16)", "\n", "    ", "C", ",", "T", ",", "V", ",", "M", "=", "sample", ".", "shape", "\n", "final_sample", "=", "np", ".", "zeros", "(", "(", "C", ",", "T", ",", "V", ",", "M", ")", ")", "\n", "\n", "validFrames", "=", "(", "sample", "!=", "0", ")", ".", "sum", "(", "axis", "=", "3", ")", ".", "sum", "(", "axis", "=", "2", ")", ".", "sum", "(", "axis", "=", "0", ")", ">", "0", "\n", "start", "=", "validFrames", ".", "argmax", "(", ")", "\n", "end", "=", "len", "(", "validFrames", ")", "-", "validFrames", "[", ":", ":", "-", "1", "]", ".", "argmax", "(", ")", "\n", "sample", "=", "sample", "[", ":", ",", "start", ":", "end", ",", ":", ",", ":", "]", "\n", "\n", "C", ",", "t", ",", "V", ",", "M", "=", "sample", ".", "shape", "\n", "rel_coords", "=", "[", "]", "\n", "#for i in range(len(references)):", "\n", "ref_loc", "=", "sample", "[", ":", ",", ":", ",", "references", ",", ":", "]", "\n", "coords_diff", "=", "(", "sample", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ",", "3", ")", ")", "-", "ref_loc", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ",", "3", ")", ")", "\n", "rel_coords", ".", "append", "(", "coords_diff", ")", "\n", "\n", "# Shape: C, t, V, M ", "\n", "rel_coords", "=", "np", ".", "vstack", "(", "rel_coords", ")", "\n", "# Shape: C, T, V, M", "\n", "final_sample", "[", ":", ",", "start", ":", "end", ",", ":", ",", ":", "]", "=", "rel_coords", "\n", "return", "final_sample", "\n", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_prep.read_frame.extract_kinematics": [[9, 95], ["print", "btk.btkAcquisitionFileReader", "btk.btkAcquisitionFileReader.SetFilename", "btk.btkAcquisitionFileReader.Update", "btk.btkAcquisitionFileReader.GetOutput", "reader.GetOutput.GetPointFrameNumber", "reader.GetOutput.GetFirstFrame", "reader.GetOutput.GetLastFrame", "reader.GetOutput.GetPoint().GetValues", "enumerate", "numpy.concatenate", "btk.Iterate", "numpy.concatenate", "numpy.where", "btk.Iterate", "numpy.zeros", "range", "print", "numpy.savetxt", "numpy.savetxt", "str", "len", "numpy.array", "reader.GetOutput.GetEvents", "numpy.sum", "print", "len", "numpy.array", "numpy.array", "reader.GetOutput.GetEvents", "numpy.where", "numpy.where", "len", "len", "len", "print", "reader.GetOutput.GetPoint", "reader.GetOutput.GetPoint().GetValues", "numpy.hstack", "event.GetFrame", "event.GetFrame", "print", "event.GetLabel", "event.GetLabel", "event.GetLabel", "reader.GetOutput.GetPoint", "event.GetContext", "event.GetLabel", "event.GetContext", "event.GetContext", "event.GetContext", "event.GetFrame", "event.GetFrame", "event.GetFrame", "event.GetFrame", "event.GetFrame", "event.GetFrame"], "function", ["None"], ["def", "extract_kinematics", "(", "fname", ")", ":", "\n", "    ", "filename", "=", "input_dir", "+", "fname", "\n", "output_filename", "=", "output_dir", "+", "fname", "[", ":", "-", "4", "]", "\n", "print", "(", "\"Trying %s\"", "%", "(", "filename", ")", ")", "\n", "\n", "# Open c3d and read data", "\n", "reader", "=", "btk", ".", "btkAcquisitionFileReader", "(", ")", "\n", "reader", ".", "SetFilename", "(", "str", "(", "filename", ")", ")", "\n", "reader", ".", "Update", "(", ")", "\n", "acq", "=", "reader", ".", "GetOutput", "(", ")", "\n", "nframes", "=", "acq", ".", "GetPointFrameNumber", "(", ")", "\n", "\n", "start", "=", "acq", ".", "GetFirstFrame", "(", ")", "\n", "end", "=", "acq", ".", "GetLastFrame", "(", ")", "\n", "\n", "markers", "=", "[", "\"LASI\"", ",", "\"LKNE\"", ",", "\"LANK\"", ",", "\"LTOE\"", ",", "\"RASI\"", ",", "\"RKNE\"", ",", "\"RANK\"", ",", "\"RTOE\"", "]", "\n", "\n", "# Get the pelvis", "\n", "SACR", "=", "acq", ".", "GetPoint", "(", "\"SACR\"", ")", ".", "GetValues", "(", ")", "\n", "\n", "traj", "=", "[", "None", "]", "*", "(", "len", "(", "markers", ")", ")", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "markers", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "traj", "[", "i", "]", "=", "acq", ".", "GetPoint", "(", "v", ")", ".", "GetValues", "(", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "\"Marker error\"", ")", "\n", "return", "\n", "\n", "", "", "all_traj", "=", "np", ".", "concatenate", "(", "(", "SACR", ",", "np", ".", "hstack", "(", "traj", ")", ")", ",", "axis", "=", "1", ")", "\n", "\n", "# Add events as output", "\n", "outputs", "=", "np", ".", "array", "(", "[", "[", "0", "]", "*", "nframes", "]", ")", ".", "T", "\n", "for", "event", "in", "btk", ".", "Iterate", "(", "acq", ".", "GetEvents", "(", ")", ")", ":", "\n", "        ", "if", "start", "<=", "event", ".", "GetFrame", "(", ")", "<=", "end", ":", "\n", "            ", "if", "event", ".", "GetLabel", "(", ")", "==", "\"Foot Strike\"", ":", "\n", "                ", "if", "event", ".", "GetContext", "(", ")", "==", "'Left'", ":", "\n", "                    ", "outputs", "[", "event", ".", "GetFrame", "(", ")", "-", "start", ",", "0", "]", "=", "1", "\n", "", "elif", "event", ".", "GetContext", "(", ")", "==", "'Right'", ":", "\n", "                    ", "outputs", "[", "event", ".", "GetFrame", "(", ")", "-", "start", ",", "0", "]", "=", "2", "\n", "", "", "elif", "event", ".", "GetLabel", "(", ")", "==", "\"Foot Off\"", ":", "\n", "                ", "if", "event", ".", "GetContext", "(", ")", "==", "'Left'", ":", "\n", "                    ", "outputs", "[", "event", ".", "GetFrame", "(", ")", "-", "start", ",", "0", "]", "=", "3", "\n", "", "elif", "event", ".", "GetContext", "(", ")", "==", "'Right'", ":", "\n", "                    ", "outputs", "[", "event", ".", "GetFrame", "(", ")", "-", "start", ",", "0", "]", "=", "4", "\n", "\n", "", "", "", "", "if", "(", "np", ".", "sum", "(", "outputs", ")", "==", "0", ")", ":", "\n", "        ", "print", "(", "\"No events in %s!\"", "%", "(", "filename", ",", ")", ")", "\n", "return", "\n", "\n", "", "arr", "=", "np", ".", "concatenate", "(", "(", "all_traj", ",", "outputs", ")", ",", "axis", "=", "1", ")", "\n", "\n", "# Remove data before and after first and last event", "\n", "positives", "=", "np", ".", "where", "(", "arr", "[", ":", ",", "27", "]", ">", "0.5", ")", "\n", "if", "len", "(", "positives", "[", "0", "]", ")", "==", "0", ":", "\n", "        ", "return", "None", "\n", "\n", "", "first_event", "=", "positives", "[", "0", "]", "[", "0", "]", "\n", "last_event", "=", "positives", "[", "0", "]", "[", "-", "1", "]", "\n", "all_traj", "=", "all_traj", "[", "first_event", ":", "last_event", "]", "\n", "\n", "# Get labels", "\n", "labels_start", "=", "np", ".", "array", "(", "[", "[", "0", "]", "*", "(", "last_event", "-", "first_event", ")", "]", ")", ".", "T", "\n", "labels_end", "=", "np", ".", "array", "(", "[", "[", "0", "]", "*", "(", "last_event", "-", "first_event", ")", "]", ")", ".", "T", "\n", "for", "event", "in", "btk", ".", "Iterate", "(", "acq", ".", "GetEvents", "(", ")", ")", ":", "\n", "        ", "if", "first_event", "<", "event", ".", "GetFrame", "(", ")", "<", "last_event", ":", "\n", "            ", "if", "event", ".", "GetLabel", "(", ")", "==", "\"FOGs\"", ":", "\n", "                ", "labels_start", "[", "event", ".", "GetFrame", "(", ")", "-", "first_event", ",", "0", "]", "=", "1", "\n", "", "if", "event", ".", "GetLabel", "(", ")", "==", "\"FOGe\"", ":", "\n", "                ", "labels_end", "[", "event", ".", "GetFrame", "(", ")", "-", "first_event", ",", "0", "]", "=", "1", "\n", "\n", "", "", "", "FOGs", "=", "np", ".", "where", "(", "labels_start", "==", "1", ")", "[", "0", "]", "\n", "FOGe", "=", "np", ".", "where", "(", "labels_end", "==", "1", ")", "[", "0", "]", "\n", "\n", "label_out", "=", "np", ".", "zeros", "(", "(", "all_traj", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "for", "k", "in", "range", "(", "len", "(", "FOGs", ")", ")", ":", "\n", "        ", "label_out", "[", "FOGs", "[", "k", "]", ":", "FOGe", "[", "k", "]", "]", "=", "1", "\n", "\n", "", "if", "len", "(", "FOGs", ")", "!=", "len", "(", "FOGe", ")", ":", "\n", "        ", "print", "(", "\"Unequal start and end events\"", ")", "\n", "return", "\n", "\n", "", "print", "(", "\"Writing %s\"", "%", "filename", ")", "\n", "# Here we only save FOG labels, not the gait cycle events", "\n", "np", ".", "savetxt", "(", "output_filename", "+", "'_input_fog.csv'", ",", "all_traj", ",", "delimiter", "=", "','", ")", "\n", "np", ".", "savetxt", "(", "output_filename", "+", "'_output_fog.csv'", ",", "label_out", ",", "delimiter", "=", "','", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_gen.read_skeleton.read_skeleton": [[4, 30], ["numpy.loadtxt", "range", "range", "skeleton_sequence[].append", "frame_info[].append", "body_info[].append", "float", "zip"], "function", ["None"], ["def", "read_skeleton", "(", "file", ")", ":", "\n", "    ", "matx", "=", "np", ".", "loadtxt", "(", "file", ",", "delimiter", "=", "','", ")", "\n", "skeleton_sequence", "=", "{", "}", "\n", "skeleton_sequence", "[", "'numFrame'", "]", "=", "matx", ".", "shape", "[", "0", "]", "\n", "skeleton_sequence", "[", "'frameInfo'", "]", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "skeleton_sequence", "[", "'numFrame'", "]", ")", ":", "\n", "        ", "frame_info", "=", "{", "}", "\n", "frame_info", "[", "'numBody'", "]", "=", "1", "\n", "frame_info", "[", "'bodyInfo'", "]", "=", "[", "]", "\n", "for", "m", "in", "range", "(", "frame_info", "[", "'numBody'", "]", ")", ":", "\n", "            ", "body_info", "=", "{", "}", "\n", "body_info", "[", "'numJoint'", "]", "=", "matx", ".", "shape", "[", "1", "]", "\n", "body_info", "[", "'jointInfo'", "]", "=", "[", "]", "\n", "iterator", "=", "[", "0", ",", "3", ",", "6", ",", "9", ",", "12", ",", "15", ",", "18", ",", "21", ",", "24", "]", "\n", "for", "v", "in", "iterator", ":", "\n", "                ", "joint_info_key", "=", "[", "\n", "'x'", ",", "'y'", ",", "'z'", "\n", "]", "\n", "joint_info", "=", "{", "\n", "k", ":", "float", "(", "v", ")", "\n", "for", "k", ",", "v", "in", "zip", "(", "joint_info_key", ",", "matx", "[", "t", ",", "[", "v", ",", "v", "+", "1", ",", "v", "+", "2", "]", "]", ")", "\n", "}", "\n", "body_info", "[", "'jointInfo'", "]", ".", "append", "(", "joint_info", ")", "\n", "", "frame_info", "[", "'bodyInfo'", "]", ".", "append", "(", "body_info", ")", "\n", "", "skeleton_sequence", "[", "'frameInfo'", "]", ".", "append", "(", "frame_info", ")", "\n", "", "return", "skeleton_sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_gen.read_skeleton.read_xyz": [[32, 43], ["read_skeleton.read_skeleton", "numpy.zeros", "enumerate", "enumerate", "enumerate"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_gen.read_skeleton.read_skeleton"], ["", "def", "read_xyz", "(", "file", ",", "max_body", "=", "1", ",", "num_joint", "=", "9", ")", ":", "\n", "    ", "seq_info", "=", "read_skeleton", "(", "file", ")", "\n", "data", "=", "np", ".", "zeros", "(", "(", "3", ",", "seq_info", "[", "'numFrame'", "]", ",", "num_joint", ",", "max_body", ")", ")", "\n", "for", "n", ",", "f", "in", "enumerate", "(", "seq_info", "[", "'frameInfo'", "]", ")", ":", "\n", "        ", "for", "m", ",", "b", "in", "enumerate", "(", "f", "[", "'bodyInfo'", "]", ")", ":", "\n", "            ", "for", "j", ",", "v", "in", "enumerate", "(", "b", "[", "'jointInfo'", "]", ")", ":", "\n", "                ", "if", "m", "<", "max_body", "and", "j", "<", "num_joint", ":", "\n", "                    ", "data", "[", ":", ",", "n", ",", "j", ",", "m", "]", "=", "[", "v", "[", "'x'", "]", ",", "v", "[", "'y'", "]", ",", "v", "[", "'z'", "]", "]", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "", "", "", "", "return", "data", "\n", "", ""]], "home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_gen.gendata.gendata": [[12, 22], ["os.listdir", "tqdm.tqdm", "file_list.append", "filename.endswith", "data_prep.data_gen.read_skeleton.read_xyz", "numpy.save", "str"], "function", ["home.repos.pwc.inspect_result.benjaminfiltjens_ms-gcn.data_gen.read_skeleton.read_xyz"], ["def", "gendata", "(", "data_path", ",", "\n", "out_path", ")", ":", "\n", "    ", "file_list", "=", "[", "]", "\n", "for", "path", "in", "os", ".", "listdir", "(", "data_path", ")", ":", "\n", "        ", "file_list", ".", "append", "(", "path", ")", "\n", "\n", "", "for", "filename", "in", "tqdm", "(", "file_list", ")", ":", "\n", "        ", "if", "filename", ".", "endswith", "(", "(", "'_input.csv'", ")", ")", ":", "\n", "            ", "data", "=", "read_xyz", "(", "data_path", "+", "filename", ",", "max_body", "=", "max_body", ",", "num_joint", "=", "num_joint", ")", "\n", "np", ".", "save", "(", "'{}/{}.npy'", ".", "format", "(", "out_path", ",", "str", "(", "filename", "[", ":", "-", "4", "]", ")", ")", ",", "data", ")", "\n", "\n"]]}