{"home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.__init__": [[9, 40], ["numpy.mean", "numpy.std", "rspFunc", "rspFunc", "rspFunc", "DataHandler.DataHandler.constructGraph", "DataHandler.DataHandler.getTestAreas", "print", "print", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "numpy.reshape", "numpy.sum", "numpy.reshape"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.constructGraph", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.getTestAreas"], ["\t", "def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "if", "args", ".", "data", "==", "'NYC'", ":", "\n", "\t\t\t", "predir", "=", "'Datasets/NYC_crime/'", "\n", "", "elif", "args", ".", "data", "==", "'CHI'", ":", "\n", "\t\t\t", "predir", "=", "'Datasets/CHI_crime/'", "\n", "", "elif", "args", ".", "data", "==", "'NYC_1kilo'", ":", "\n", "\t\t\t", "predir", "=", "'Datasets/NYC_crime/1kilo/'", "\n", "", "self", ".", "predir", "=", "predir", "\n", "with", "open", "(", "predir", "+", "'trn.pkl'", ",", "'rb'", ")", "as", "fs", ":", "\n", "\t\t\t", "trnT", "=", "pickle", ".", "load", "(", "fs", ")", "\n", "", "with", "open", "(", "predir", "+", "'val.pkl'", ",", "'rb'", ")", "as", "fs", ":", "\n", "\t\t\t", "valT", "=", "pickle", ".", "load", "(", "fs", ")", "\n", "", "with", "open", "(", "predir", "+", "'tst.pkl'", ",", "'rb'", ")", "as", "fs", ":", "\n", "\t\t\t", "tstT", "=", "pickle", ".", "load", "(", "fs", ")", "\n", "", "args", ".", "row", ",", "args", ".", "col", ",", "_", ",", "args", ".", "offNum", "=", "trnT", ".", "shape", "\n", "args", ".", "areaNum", "=", "args", ".", "row", "*", "args", ".", "col", "\n", "args", ".", "trnDays", "=", "trnT", ".", "shape", "[", "2", "]", "\n", "args", ".", "valDays", "=", "valT", ".", "shape", "[", "2", "]", "\n", "args", ".", "tstDays", "=", "tstT", ".", "shape", "[", "2", "]", "\n", "args", ".", "decay_step", "=", "args", ".", "trnDays", "//", "args", ".", "batch", "\n", "self", ".", "mean", "=", "np", ".", "mean", "(", "trnT", ")", "\n", "self", ".", "std", "=", "np", ".", "std", "(", "trnT", ")", "\n", "rspFunc", "=", "(", "lambda", "tensor", ":", "np", ".", "reshape", "(", "tensor", ",", "[", "args", ".", "areaNum", ",", "-", "1", ",", "args", ".", "offNum", "]", ")", ")", "\n", "self", ".", "trnT", "=", "rspFunc", "(", "trnT", ")", "# row*col, days, offNum", "\n", "self", ".", "valT", "=", "rspFunc", "(", "valT", ")", "\n", "self", ".", "tstT", "=", "rspFunc", "(", "tstT", ")", "\n", "\n", "self", ".", "constructGraph", "(", ")", "\n", "self", ".", "getTestAreas", "(", ")", "\n", "print", "(", "'Row:'", ",", "args", ".", "row", ",", "', Col:'", ",", "args", ".", "col", ")", "\n", "print", "(", "'Sparsity:'", ",", "np", ".", "sum", "(", "trnT", "!=", "0", ")", "/", "np", ".", "reshape", "(", "trnT", ",", "[", "-", "1", "]", ")", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.idEncode": [[41, 44], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "idEncode", "(", "cls", ",", "x", ",", "y", ")", ":", "\n", "\t\t", "return", "x", "*", "args", ".", "col", "+", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.idDecode": [[45, 48], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "idDecode", "(", "cls", ",", "node", ")", ":", "\n", "\t\t", "return", "node", "//", "args", ".", "col", ",", "node", "%", "args", ".", "col", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zScore": [[49, 52], ["None"], "methods", ["None"], ["", "def", "zScore", "(", "self", ",", "data", ")", ":", "\n", "# return np.log2(data + 1)", "\n", "\t\t", "return", "(", "data", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zInverse": [[53, 55], ["None"], "methods", ["None"], ["", "def", "zInverse", "(", "self", ",", "data", ")", ":", "\n", "\t\t", "return", "data", "*", "self", ".", "std", "+", "self", ".", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.constructGraph": [[56, 84], ["list", "range", "numpy.array.sort", "range", "numpy.ones", "range", "numpy.array", "range", "len", "len", "len", "numpy.sqrt", "DataHandler.DataHandler.idEncode", "range", "range", "len", "DataHandler.DataHandler.constructGraph.illegal"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.idEncode"], ["", "def", "constructGraph", "(", "self", ")", ":", "\n", "\t\t", "mx", "=", "[", "-", "1", ",", "0", ",", "1", ",", "0", ",", "-", "1", ",", "-", "1", ",", "1", ",", "1", ",", "0", "]", "\n", "my", "=", "[", "0", ",", "-", "1", ",", "0", ",", "1", ",", "-", "1", ",", "1", ",", "-", "1", ",", "1", ",", "0", "]", "\n", "def", "illegal", "(", "x", ",", "y", ")", ":", "\n", "\t\t\t", "return", "x", "<", "0", "or", "y", "<", "0", "or", "x", ">=", "args", ".", "row", "or", "y", ">=", "args", ".", "col", "\n", "", "edges", "=", "list", "(", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "row", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "args", ".", "col", ")", ":", "\n", "\t\t\t\t", "n1", "=", "self", ".", "idEncode", "(", "i", ",", "j", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "mx", ")", ")", ":", "\n", "\t\t\t\t\t", "temx", "=", "i", "+", "mx", "[", "k", "]", "\n", "temy", "=", "j", "+", "my", "[", "k", "]", "\n", "if", "illegal", "(", "temx", ",", "temy", ")", ":", "\n", "\t\t\t\t\t\t", "continue", "\n", "", "n2", "=", "self", ".", "idEncode", "(", "temx", ",", "temy", ")", "\n", "edges", ".", "append", "(", "[", "n1", ",", "n2", "]", ")", "\n", "", "", "", "edges", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", "*", "1e5", "+", "x", "[", "1", "]", ")", "# 1e5 should be bigger than the number of areas", "\n", "rowTot", ",", "colTot", "=", "[", "[", "0", "]", "*", "args", ".", "areaNum", "for", "i", "in", "range", "(", "2", ")", "]", "\n", "for", "e", "in", "range", "(", "len", "(", "edges", ")", ")", ":", "\n", "\t\t\t", "rowTot", "[", "edges", "[", "e", "]", "[", "0", "]", "]", "+=", "1", "\n", "colTot", "[", "edges", "[", "e", "]", "[", "1", "]", "]", "+=", "1", "\n", "", "vals", "=", "np", ".", "ones", "(", "len", "(", "edges", ")", ")", "\n", "for", "e", "in", "range", "(", "len", "(", "vals", ")", ")", ":", "\n", "\t\t\t", "vals", "[", "e", "]", "/=", "np", ".", "sqrt", "(", "rowTot", "[", "edges", "[", "e", "]", "[", "0", "]", "]", "*", "colTot", "[", "edges", "[", "e", "]", "[", "1", "]", "]", ")", "\n", "", "edges", "=", "np", ".", "array", "(", "edges", ")", "\n", "self", ".", "rows", "=", "edges", "[", ":", ",", "0", "]", "\n", "self", ".", "cols", "=", "edges", "[", ":", ",", "1", "]", "\n", "self", ".", "vals", "=", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.getTestAreas": [[85, 95], ["numpy.sum", "print", "print", "print", "print", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "methods", ["None"], ["", "def", "getTestAreas", "(", "self", ")", ":", "\n", "\t\t", "posTimes", "=", "np", ".", "sum", "(", "1", "*", "(", "self", ".", "trnT", "!=", "0", ")", ",", "axis", "=", "1", ")", "\n", "percent", "=", "posTimes", "/", "args", ".", "trnDays", "\n", "self", ".", "tstLocs", "=", "(", "percent", ">", "0.2", ")", "*", "(", "percent", "<", "0.8", ")", "*", "1", "\n", "print", "(", "'Negative/Positive Rate'", ",", "args", ".", "negRate", ")", "\n", "print", "(", "'Number of locations to test'", ",", "np", ".", "sum", "(", "self", ".", "tstLocs", ")", ",", "'out or'", ",", "self", ".", "trnT", ".", "shape", "[", "0", "]", ")", "\n", "valRes", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "self", ".", "valT", "==", "0", ",", "axis", "=", "1", ")", "*", "self", ".", "tstLocs", ")", "/", "(", "np", ".", "sum", "(", "self", ".", "tstLocs", ")", "*", "args", ".", "valDays", ")", "\n", "tstRes", "=", "np", ".", "sum", "(", "np", ".", "sum", "(", "self", ".", "tstT", "==", "0", ",", "axis", "=", "1", ")", "*", "self", ".", "tstLocs", ")", "/", "(", "np", ".", "sum", "(", "self", ".", "tstLocs", ")", "*", "args", ".", "tstDays", ")", "\n", "print", "(", "'Val Trivial Acc'", ",", "valRes", ")", "\n", "print", "(", "'Tst Trivial Acc'", ",", "tstRes", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.__init__": [[15, 26], ["dict", "range", "mets.append", "list", "list"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "sess", ",", "handler", ")", ":", "\n", "\t\t", "self", ".", "sess", "=", "sess", "\n", "self", ".", "handler", "=", "handler", "\n", "\n", "self", ".", "metrics", "=", "dict", "(", ")", "\n", "mets", "=", "[", "'preLoss'", ",", "'microF1'", ",", "'macroF1'", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "offNum", ")", ":", "\n", "\t\t\t", "mets", ".", "append", "(", "'F1_%d'", "%", "i", ")", "\n", "", "for", "met", "in", "mets", ":", "\n", "\t\t\t", "self", ".", "metrics", "[", "'Train'", "+", "met", "]", "=", "list", "(", ")", "\n", "self", ".", "metrics", "[", "'Test'", "+", "met", "]", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.makePrint": [[27, 37], ["HG_ST_labcode.Model.metrics[].append"], "methods", ["None"], ["", "", "def", "makePrint", "(", "self", ",", "name", ",", "ep", ",", "reses", ",", "save", ")", ":", "\n", "\t\t", "ret", "=", "'Epoch %d/%d, %s: '", "%", "(", "ep", ",", "args", ".", "epoch", ",", "name", ")", "\n", "for", "metric", "in", "reses", ":", "\n", "\t\t\t", "val", "=", "reses", "[", "metric", "]", "\n", "ret", "+=", "'%s = %.4f, '", "%", "(", "metric", ",", "val", ")", "\n", "tem", "=", "name", "+", "metric", "\n", "if", "save", "and", "tem", "in", "self", ".", "metrics", ":", "\n", "\t\t\t\t", "self", ".", "metrics", "[", "tem", "]", ".", "append", "(", "val", ")", "\n", "", "", "ret", "=", "ret", "[", ":", "-", "2", "]", "+", "'  '", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.run": [[38, 67], ["HG_ST_labcode.Model.prepareModel", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "range", "HG_ST_labcode.Model.testEpoch", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "HG_ST_labcode.Model.saveHistory", "HG_ST_labcode.Model.loadModel", "tensorflow.global_variables_initializer", "HG_ST_labcode.Model.sess.run", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "HG_ST_labcode.Model.trainEpoch", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "print", "numpy.concatenate", "HG_ST_labcode.Model.makePrint", "HG_ST_labcode.Model.makePrint", "len", "HG_ST_labcode.Model.makePrint", "HG_ST_labcode.Model.testEpoch", "HG_ST_labcode.Model.saveHistory", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.prepareModel", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.testEpoch", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.saveHistory", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.loadModel", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.run", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.trainEpoch", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.makePrint", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.makePrint", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.makePrint", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.testEpoch", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.saveHistory"], ["", "def", "run", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "prepareModel", "(", ")", "\n", "log", "(", "'Model Prepared'", ")", "\n", "if", "args", ".", "load_model", "!=", "None", ":", "\n", "\t\t\t", "self", ".", "loadModel", "(", ")", "\n", "stloc", "=", "len", "(", "self", ".", "metrics", "[", "'TrainpreLoss'", "]", ")", "*", "args", ".", "tstEpoch", "\n", "", "else", ":", "\n", "\t\t\t", "stloc", "=", "0", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "sess", ".", "run", "(", "init", ")", "\n", "log", "(", "'Variables Inited'", ")", "\n", "", "bestRes", "=", "None", "\n", "for", "ep", "in", "range", "(", "stloc", ",", "args", ".", "epoch", ")", ":", "\n", "\t\t\t", "test", "=", "(", "ep", "%", "args", ".", "tstEpoch", "==", "0", ")", "\n", "reses", "=", "self", ".", "trainEpoch", "(", ")", "\n", "log", "(", "self", ".", "makePrint", "(", "'Train'", ",", "ep", ",", "reses", ",", "test", ")", ")", "\n", "if", "test", ":", "\n", "\t\t\t\t", "reses", "=", "self", ".", "testEpoch", "(", "self", ".", "handler", ".", "tstT", ",", "np", ".", "concatenate", "(", "[", "self", ".", "handler", ".", "trnT", ",", "self", ".", "handler", ".", "valT", "]", ",", "axis", "=", "1", ")", ")", "\n", "if", "bestRes", "is", "None", "or", "args", ".", "task", "==", "'r'", "and", "bestRes", "[", "'MAPE'", "]", ">", "reses", "[", "'MAPE'", "]", "or", "args", ".", "task", "==", "'c'", "and", "bestRes", "[", "'macroF1'", "]", ">", "reses", "[", "'macroF1'", "]", ":", "\n", "\t\t\t\t\t", "bestRes", "=", "reses", "\n", "", "", "if", "ep", "%", "args", ".", "tstEpoch", "==", "0", ":", "\n", "\t\t\t\t", "self", ".", "saveHistory", "(", ")", "\n", "", "print", "(", ")", "\n", "", "reses", "=", "self", ".", "testEpoch", "(", "self", ".", "handler", ".", "tstT", ",", "np", ".", "concatenate", "(", "[", "self", ".", "handler", ".", "trnT", ",", "self", ".", "handler", ".", "valT", "]", ",", "axis", "=", "1", ")", ")", "\n", "log", "(", "self", ".", "makePrint", "(", "'Test'", ",", "args", ".", "epoch", ",", "reses", ",", "True", ")", ")", "\n", "if", "bestRes", "is", "None", "or", "args", ".", "task", "==", "'r'", "and", "bestRes", "[", "'MAPE'", "]", ">", "reses", "[", "'MAPE'", "]", "or", "args", ".", "task", "==", "'c'", "and", "bestRes", "[", "'macroF1'", "]", ">", "reses", "[", "'macroF1'", "]", ":", "\n", "\t\t\t", "bestRes", "=", "reses", "\n", "", "log", "(", "self", ".", "makePrint", "(", "'Best'", ",", "args", ".", "epoch", ",", "bestRes", ",", "True", ")", ")", "\n", "self", ".", "saveHistory", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.spacialModeling": [[68, 82], ["tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.math.segment_sum", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "tensorflow.nn.dropout", "float"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate"], ["", "def", "spacialModeling", "(", "self", ",", "rows", ",", "cols", ",", "vals", ",", "embeds", ")", ":", "\n", "# edge, time, offense, latdim", "\n", "\t\t", "rowEmbeds", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embeds", ",", "rows", ")", "\n", "colEmbeds", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embeds", ",", "cols", ")", "\n", "Q", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "K", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "V", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "q", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "rowEmbeds", ",", "Q", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", ",", "args", ".", "offNum", ",", "1", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "k", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "colEmbeds", ",", "K", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", ",", "1", ",", "args", ".", "offNum", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "v", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "colEmbeds", ",", "V", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", ",", "1", ",", "args", ".", "offNum", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "att", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "reduce_sum", "(", "q", "*", "k", ",", "axis", "=", "-", "1", ",", "keep_dims", "=", "True", ")", "/", "tf", ".", "sqrt", "(", "float", "(", "args", ".", "latdim", "//", "args", ".", "head", ")", ")", ",", "axis", "=", "3", ")", "\n", "attV", "=", "tf", ".", "reshape", "(", "tf", ".", "reduce_sum", "(", "att", "*", "v", ",", "axis", "=", "3", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", ",", "args", ".", "offNum", ",", "args", ".", "latdim", "]", ")", "\n", "ret", "=", "tf", ".", "math", ".", "segment_sum", "(", "attV", "*", "tf", ".", "nn", ".", "dropout", "(", "vals", ",", "rate", "=", "self", ".", "dropRate", ")", ",", "rows", ")", "\n", "return", "Activate", "(", "ret", ",", "'leakyRelu'", ")", "# area, time, offense, latdim", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.temporalModeling": [[83, 99], ["tensorflow.slice", "tensorflow.slice", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "Utils.NNLayers.defineRandomNameParam", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.math.segment_sum", "tensorflow.concat", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.sqrt", "tensorflow.nn.dropout", "tensorflow.slice", "float"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate"], ["", "def", "temporalModeling", "(", "self", ",", "rows", ",", "cols", ",", "vals", ",", "embeds", ")", ":", "\n", "\t\t", "prevTEmbeds", "=", "tf", ".", "slice", "(", "embeds", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "nextTEmbeds", "=", "tf", ".", "slice", "(", "embeds", ",", "[", "0", ",", "1", ",", "0", ",", "0", "]", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "-", "1", ",", "-", "1", "]", ")", "\n", "rowEmbeds", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "nextTEmbeds", ",", "rows", ")", "\n", "colEmbeds", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "prevTEmbeds", ",", "cols", ")", "\n", "Q", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "K", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "V", "=", "defineRandomNameParam", "(", "[", "args", ".", "latdim", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "q", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "rowEmbeds", ",", "Q", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "args", ".", "offNum", ",", "1", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "k", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "colEmbeds", ",", "K", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "1", ",", "args", ".", "offNum", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "v", "=", "tf", ".", "reshape", "(", "tf", ".", "einsum", "(", "'etod,dl->etol'", ",", "colEmbeds", ",", "V", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "1", ",", "args", ".", "offNum", ",", "args", ".", "head", ",", "args", ".", "latdim", "//", "args", ".", "head", "]", ")", "\n", "att", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "reduce_sum", "(", "q", "*", "k", ",", "axis", "=", "-", "1", ",", "keep_dims", "=", "True", ")", "/", "tf", ".", "sqrt", "(", "float", "(", "args", ".", "latdim", "//", "args", ".", "head", ")", ")", ",", "axis", "=", "3", ")", "\n", "attV", "=", "tf", ".", "reshape", "(", "tf", ".", "reduce_sum", "(", "att", "*", "v", ",", "axis", "=", "3", ")", ",", "[", "-", "1", ",", "args", ".", "temporalRange", "-", "1", ",", "args", ".", "offNum", ",", "args", ".", "latdim", "]", ")", "\n", "ret", "=", "tf", ".", "math", ".", "segment_sum", "(", "attV", "*", "tf", ".", "nn", ".", "dropout", "(", "vals", ",", "rate", "=", "self", ".", "dropRate", ")", ",", "rows", ")", "\n", "ret", "=", "tf", ".", "concat", "(", "[", "tf", ".", "slice", "(", "embeds", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", ",", "-", "1", "]", ")", ",", "ret", "]", ",", "axis", "=", "1", ")", "\n", "return", "Activate", "(", "ret", ",", "'leakyRelu'", ")", "# area, time, offense, latdim", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.hyperGNN": [[100, 105], ["tensorflow.transpose", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "tensorflow.einsum", "tensorflow.einsum", "tensorflow.nn.dropout", "tensorflow.nn.dropout"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate"], ["", "def", "hyperGNN", "(", "self", ",", "adj", ",", "embeds", ")", ":", "\n", "\t\t", "tpadj", "=", "tf", ".", "transpose", "(", "adj", ")", "\n", "hyperEmbeds", "=", "Activate", "(", "tf", ".", "einsum", "(", "'hn,ntod->htod'", ",", "tf", ".", "nn", ".", "dropout", "(", "adj", ",", "rate", "=", "self", ".", "dropRate", ")", ",", "embeds", ")", ",", "'leakyRelu'", ")", "\n", "retEmbeds", "=", "Activate", "(", "tf", ".", "einsum", "(", "'nh,htod->ntod'", ",", "tf", ".", "nn", ".", "dropout", "(", "tpadj", ",", "rate", "=", "self", ".", "dropRate", ")", ",", "hyperEmbeds", ")", ",", "'leakyRelu'", ")", "\n", "return", "retEmbeds", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.ours": [[106, 128], ["Utils.NNLayers.defineParam", "Utils.NNLayers.defineParam", "Utils.NNLayers.defineParam", "Utils.NNLayers.defineParam", "range", "range", "tensorflow.reduce_mean", "Utils.NNLayers.defineParam", "Utils.NNLayers.defineParam", "tensorflow.expand_dims", "HG_ST_labcode.Model.spacialModeling", "embeds.append", "tensorflow.add_n", "embeds.append", "tensorflow.add_n", "Utils.NNLayers.Activate", "Utils.NNLayers.Activate", "HG_ST_labcode.Model.hyperGNN", "HG_ST_labcode.Model.temporalModeling", "tensorflow.reduce_sum", "tensorflow.reduce_sum"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.spacialModeling", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.hyperGNN", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.temporalModeling"], ["", "def", "ours", "(", "self", ")", ":", "\n", "\t\t", "offenseEmbeds", "=", "defineParam", "(", "'offenseEmbeds'", ",", "[", "1", ",", "1", ",", "args", ".", "offNum", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "initialEmbeds", "=", "offenseEmbeds", "*", "tf", ".", "expand_dims", "(", "self", ".", "feats", ",", "axis", "=", "-", "1", ")", "# area, time, offense, latdim", "\n", "areaEmbeds", "=", "defineParam", "(", "'areaEmbeds'", ",", "[", "args", ".", "areaNum", ",", "1", ",", "1", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "embeds", "=", "[", "initialEmbeds", "]", "# + areaEmbeds]", "\n", "for", "l", "in", "range", "(", "args", ".", "spacialRange", ")", ":", "\n", "\t\t\t", "embed", "=", "embeds", "[", "-", "1", "]", "\n", "embed", "=", "self", ".", "spacialModeling", "(", "self", ".", "rows", ",", "self", ".", "cols", ",", "self", ".", "vals", ",", "embed", ")", "\n", "embed", "=", "self", ".", "hyperGNN", "(", "self", ".", "hyperAdj", ",", "embed", ")", "+", "embed", "\n", "embeds", ".", "append", "(", "embed", ")", "\n", "", "embed", "=", "tf", ".", "add_n", "(", "embeds", ")", "/", "args", ".", "spacialRange", "\n", "embeds", "=", "[", "embed", "]", "\n", "for", "l", "in", "range", "(", "args", ".", "temporalGnnRange", ")", ":", "\n", "\t\t\t", "embeds", ".", "append", "(", "self", ".", "temporalModeling", "(", "self", ".", "rows", ",", "self", ".", "cols", ",", "self", ".", "vals", ",", "embeds", "[", "-", "1", "]", ")", ")", "\n", "", "embed", "=", "tf", ".", "add_n", "(", "embeds", ")", "/", "args", ".", "temporalGnnRange", "\n", "embed", "=", "tf", ".", "reduce_mean", "(", "embed", ",", "axis", "=", "1", ")", "# area, offense, latdim", "\n", "W", "=", "defineParam", "(", "'predEmbeds'", ",", "[", "1", ",", "args", ".", "offNum", ",", "args", ".", "latdim", "]", ",", "reg", "=", "False", ")", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "allPreds", "=", "Activate", "(", "tf", ".", "reduce_sum", "(", "embed", "*", "W", ",", "axis", "=", "-", "1", ")", ",", "'sigmoid'", ")", "# area, offense", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "allPreds", "=", "tf", ".", "reduce_sum", "(", "embed", "*", "W", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "allPreds", ",", "embed", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.prepareModel": [[129, 168], ["tensorflow.constant", "tensorflow.constant", "tensorflow.reshape", "Utils.NNLayers.defineParam", "Utils.NNLayers.defineParam", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "HG_ST_labcode.Model.ours", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.constant", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "Utils.addReg", "Utils.addReg", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.greater", "tensorflow.less", "tensorflow.greater_equal", "tensorflow.less", "tensorflow.reduce_sum", "tensorflow.placeholder", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "Utils.addReg", "Utils.addReg", "Utils.NNLayers.Regularize", "Utils.NNLayers.Regularize", "tensorflow.reduce_sum", "tensorflow.train.AdamOptimizer", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.abs", "tensorflow.square", "tensorflow.abs", "tensorflow.greater", "tensorflow.expand_dims", "tensorflow.square", "tensorflow.abs", "tensorflow.log", "tensorflow.log"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.ours", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addReg", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addReg", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addReg", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addReg", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Regularize", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Regularize", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log"], ["", "def", "prepareModel", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "rows", "=", "tf", ".", "constant", "(", "self", ".", "handler", ".", "rows", ")", "\n", "self", ".", "cols", "=", "tf", ".", "constant", "(", "self", ".", "handler", ".", "cols", ")", "\n", "self", ".", "vals", "=", "tf", ".", "reshape", "(", "tf", ".", "constant", "(", "self", ".", "handler", ".", "vals", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "[", "-", "1", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "hyperAdj", "=", "defineParam", "(", "'hyperAdj'", ",", "[", "args", ".", "hyperNum", ",", "args", ".", "areaNum", "]", ",", "reg", "=", "True", ")", "\n", "self", ".", "feats", "=", "tf", ".", "placeholder", "(", "name", "=", "'feats'", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "args", ".", "areaNum", ",", "args", ".", "temporalRange", ",", "args", ".", "offNum", "]", ")", "\n", "self", ".", "dropRate", "=", "tf", ".", "placeholder", "(", "name", "=", "'dropRate'", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "]", ")", "\n", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "name", "=", "'labels'", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "args", ".", "areaNum", ",", "args", ".", "offNum", "]", ")", "\n", "self", ".", "preds", ",", "embed", "=", "self", ".", "ours", "(", ")", "\n", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "posInd", "=", "tf", ".", "cast", "(", "tf", ".", "greater", "(", "self", ".", "labels", ",", "0", ")", ",", "tf", ".", "float32", ")", "\n", "negInd", "=", "tf", ".", "cast", "(", "tf", ".", "less", "(", "self", ".", "labels", ",", "0", ")", ",", "tf", ".", "float32", ")", "\n", "posPred", "=", "tf", ".", "cast", "(", "tf", ".", "greater_equal", "(", "self", ".", "preds", ",", "args", ".", "border", ")", ",", "tf", ".", "float32", ")", "\n", "negPred", "=", "tf", ".", "cast", "(", "tf", ".", "less", "(", "self", ".", "preds", ",", "args", ".", "border", ")", ",", "tf", ".", "float32", ")", "\n", "NNs", ".", "addReg", "(", "'embed'", ",", "embed", "*", "tf", ".", "expand_dims", "(", "posInd", "+", "negInd", ",", "axis", "=", "-", "1", ")", ")", "\n", "self", ".", "preLoss", "=", "tf", ".", "reduce_sum", "(", "-", "(", "posInd", "*", "tf", ".", "log", "(", "self", ".", "preds", "+", "1e-8", ")", "+", "negInd", "*", "tf", ".", "log", "(", "1", "-", "self", ".", "preds", "+", "1e-8", ")", ")", ")", "/", "(", "tf", ".", "reduce_sum", "(", "posInd", ")", "+", "tf", ".", "reduce_sum", "(", "negInd", ")", ")", "\n", "self", ".", "truePos", "=", "tf", ".", "reduce_sum", "(", "posPred", "*", "posInd", ",", "axis", "=", "0", ")", "\n", "self", ".", "falseNeg", "=", "tf", ".", "reduce_sum", "(", "negPred", "*", "posInd", ",", "axis", "=", "0", ")", "\n", "self", ".", "trueNeg", "=", "tf", ".", "reduce_sum", "(", "negPred", "*", "negInd", ",", "axis", "=", "0", ")", "\n", "self", ".", "falsePos", "=", "tf", ".", "reduce_sum", "(", "posPred", "*", "negInd", ",", "axis", "=", "0", ")", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "self", ".", "mask", "=", "tf", ".", "placeholder", "(", "name", "=", "'mask'", ",", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "args", ".", "areaNum", ",", "args", ".", "offNum", "]", ")", "\n", "self", ".", "preLoss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "preds", "-", "self", ".", "labels", ")", "*", "self", ".", "mask", ")", "/", "tf", ".", "reduce_sum", "(", "self", ".", "mask", ")", "\n", "self", ".", "sqLoss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "self", ".", "preds", "-", "self", ".", "labels", ")", "*", "self", ".", "mask", ",", "axis", "=", "0", ")", "\n", "self", ".", "absLoss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "preds", "-", "self", ".", "labels", ")", "*", "self", ".", "mask", ",", "axis", "=", "0", ")", "\n", "self", ".", "tstNums", "=", "tf", ".", "reduce_sum", "(", "self", ".", "mask", ",", "axis", "=", "0", ")", "\n", "posMask", "=", "self", ".", "mask", "*", "tf", ".", "cast", "(", "tf", ".", "greater", "(", "self", ".", "labels", ",", "0.5", ")", ",", "tf", ".", "float32", ")", "\n", "self", ".", "apeLoss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "preds", "-", "self", ".", "labels", ")", "/", "(", "self", ".", "labels", "+", "1e-8", ")", "*", "posMask", ",", "axis", "=", "0", ")", "\n", "self", ".", "posNums", "=", "tf", ".", "reduce_sum", "(", "posMask", ",", "axis", "=", "0", ")", "\n", "NNs", ".", "addReg", "(", "'embed'", ",", "embed", "*", "tf", ".", "expand_dims", "(", "self", ".", "mask", ",", "axis", "=", "-", "1", ")", ")", "\n", "\n", "", "self", ".", "regLoss", "=", "args", ".", "reg", "*", "Regularize", "(", ")", "+", "args", ".", "spreg", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "self", ".", "hyperAdj", ")", ")", "\n", "self", ".", "loss", "=", "self", ".", "preLoss", "+", "self", ".", "regLoss", "\n", "\n", "globalStep", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "learningRate", "=", "tf", ".", "train", ".", "exponential_decay", "(", "args", ".", "lr", ",", "globalStep", ",", "args", ".", "decay_step", ",", "args", ".", "decay", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learningRate", ")", ".", "minimize", "(", "self", ".", "loss", ",", "global_step", "=", "globalStep", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.sampleTrainBatch": [[169, 195], ["range", "numpy.sum", "numpy.reshape", "numpy.argwhere", "numpy.random.permutation", "HG_ST_labcode.Model.handler.zScore", "HG_ST_labcode.Model.handler.zScore"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zScore", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zScore"], ["", "def", "sampleTrainBatch", "(", "self", ",", "batIds", ")", ":", "\n", "\t\t", "idx", "=", "batIds", "[", "0", "]", "\n", "label", "=", "self", ".", "handler", ".", "trnT", "[", ":", ",", "idx", ",", ":", "]", "# area, offNum", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "negRate", "=", "args", ".", "negRate", "#np.random.randint(1, args.negRate*2)", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "negRate", "=", "0", "\n", "", "posNums", "=", "np", ".", "sum", "(", "label", "!=", "0", ",", "axis", "=", "0", ")", "*", "negRate", "\n", "retLabels", "=", "(", "label", "!=", "0", ")", "*", "1", "\n", "if", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "mask", "=", "retLabels", "\n", "retLabels", "=", "label", "\n", "", "for", "i", "in", "range", "(", "args", ".", "offNum", ")", ":", "\n", "\t\t\t", "temMap", "=", "label", "[", ":", ",", "i", "]", "\n", "negPos", "=", "np", ".", "reshape", "(", "np", ".", "argwhere", "(", "temMap", "==", "0", ")", ",", "[", "-", "1", "]", ")", "\n", "sampedNegPos", "=", "np", ".", "random", ".", "permutation", "(", "negPos", ")", "[", ":", "posNums", "[", "i", "]", "]", "\n", "# sampedNegPos = negPos", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t\t", "retLabels", "[", "sampedNegPos", ",", "i", "]", "=", "-", "1", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "mask", "[", "sampedNegPos", ",", "i", "]", "=", "1", "\n", "", "", "feat", "=", "self", ".", "handler", ".", "trnT", "[", ":", ",", "idx", "-", "args", ".", "temporalRange", ":", "idx", ",", ":", "]", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "return", "self", ".", "handler", ".", "zScore", "(", "feat", ")", ",", "retLabels", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "return", "self", ".", "handler", ".", "zScore", "(", "feat", ")", ",", "retLabels", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.trainEpoch": [[196, 228], ["numpy.random.permutation", "len", "int", "range", "dict", "list", "numpy.ceil", "min", "HG_ST_labcode.Model.sampleTrainBatch", "HG_ST_labcode.Model.sess.run", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "range", "tensorflow.core.protobuf.config_pb2.RunOptions"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.sampleTrainBatch", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.run", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log"], ["", "", "def", "trainEpoch", "(", "self", ")", ":", "\n", "\t\t", "ids", "=", "np", ".", "random", ".", "permutation", "(", "list", "(", "range", "(", "args", ".", "temporalRange", ",", "args", ".", "trnDays", ")", ")", ")", "\n", "epochLoss", ",", "epochPreLoss", ",", "epochAcc", "=", "[", "0", "]", "*", "3", "\n", "num", "=", "len", "(", "ids", ")", "\n", "\n", "steps", "=", "int", "(", "np", ".", "ceil", "(", "num", "/", "args", ".", "batch", ")", ")", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "\t\t\t", "st", "=", "i", "*", "args", ".", "batch", "\n", "ed", "=", "min", "(", "(", "i", "+", "1", ")", "*", "args", ".", "batch", ",", "num", ")", "\n", "batIds", "=", "ids", "[", "st", ":", "ed", "]", "\n", "\n", "tem", "=", "self", ".", "sampleTrainBatch", "(", "batIds", ")", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t\t", "feats", ",", "labels", "=", "tem", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "feats", ",", "labels", ",", "mask", "=", "tem", "\n", "\n", "", "targets", "=", "[", "self", ".", "optimizer", ",", "self", ".", "preLoss", ",", "self", ".", "loss", "]", "\n", "feeddict", "=", "{", "self", ".", "feats", ":", "feats", ",", "self", ".", "labels", ":", "labels", ",", "self", ".", "dropRate", ":", "args", ".", "dropRate", "}", "\n", "if", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "feeddict", "[", "self", ".", "mask", "]", "=", "mask", "\n", "", "res", "=", "self", ".", "sess", ".", "run", "(", "targets", ",", "feed_dict", "=", "feeddict", ",", "options", "=", "config_pb2", ".", "RunOptions", "(", "report_tensor_allocations_upon_oom", "=", "True", ")", ")", "\n", "\n", "preLoss", ",", "loss", "=", "res", "[", "1", ":", "]", "\n", "\n", "epochLoss", "+=", "loss", "\n", "epochPreLoss", "+=", "preLoss", "\n", "log", "(", "'Step %d/%d: preLoss = %.4f         '", "%", "(", "i", ",", "steps", ",", "preLoss", ")", ",", "save", "=", "False", ",", "oneline", "=", "True", ")", "\n", "", "ret", "=", "dict", "(", ")", "\n", "ret", "[", "'Loss'", "]", "=", "epochLoss", "/", "steps", "\n", "ret", "[", "'preLoss'", "]", "=", "epochPreLoss", "/", "steps", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.sampTestBatch": [[229, 247], ["numpy.concatenate", "HG_ST_labcode.Model.handler.zScore", "HG_ST_labcode.Model.handler.zScore"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zScore", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.DataHandler.DataHandler.zScore"], ["", "def", "sampTestBatch", "(", "self", ",", "batIds", ",", "tstTensor", ",", "inpTensor", ")", ":", "\n", "\t\t", "idx", "=", "batIds", "[", "0", "]", "\n", "label", "=", "tstTensor", "[", ":", ",", "idx", ",", ":", "]", "# area, offNum", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "retLabels", "=", "(", "(", "label", ">", "0", ")", "*", "1", "+", "(", "label", "==", "0", ")", "*", "(", "-", "1", ")", ")", "*", "self", ".", "handler", ".", "tstLocs", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "retLabels", "=", "label", "\n", "mask", "=", "self", ".", "handler", ".", "tstLocs", "*", "(", "label", ">", "0", ")", "\n", "", "if", "idx", "-", "args", ".", "temporalRange", "<", "0", ":", "\n", "\t\t\t", "temT", "=", "inpTensor", "[", ":", ",", "idx", "-", "args", ".", "temporalRange", ":", ",", ":", "]", "\n", "temT2", "=", "tstTensor", "[", ":", ",", ":", "idx", ",", ":", "]", "\n", "feats", "=", "np", ".", "concatenate", "(", "[", "temT", ",", "temT2", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "\t\t\t", "feats", "=", "tstTensor", "[", ":", ",", "idx", "-", "args", ".", "temporalRange", ":", "idx", ",", ":", "]", "\n", "", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "return", "self", ".", "handler", ".", "zScore", "(", "feats", ")", ",", "retLabels", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "return", "self", ".", "handler", ".", "zScore", "(", "feats", ")", ",", "retLabels", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.testEpoch": [[248, 310], ["numpy.random.permutation", "len", "int", "range", "dict", "list", "numpy.ceil", "min", "HG_ST_labcode.Model.sampTestBatch", "HG_ST_labcode.Model.sess.run", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "range", "range", "numpy.zeros", "range", "numpy.sqrt", "range", "numpy.zeros", "tensorflow.core.protobuf.config_pb2.RunOptions", "numpy.sum", "numpy.sum", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "range", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.sampTestBatch", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.run", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log"], ["", "", "def", "testEpoch", "(", "self", ",", "tstTensor", ",", "inpTensor", ")", ":", "\n", "\t\t", "ids", "=", "np", ".", "random", ".", "permutation", "(", "list", "(", "range", "(", "tstTensor", ".", "shape", "[", "1", "]", ")", ")", ")", "\n", "epochLoss", ",", "epochPreLoss", ",", "=", "[", "0", "]", "*", "2", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "epochTp", ",", "epochFp", ",", "epochTn", ",", "epochFn", "=", "[", "np", ".", "zeros", "(", "4", ")", "for", "i", "in", "range", "(", "4", ")", "]", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "epochSqLoss", ",", "epochAbsLoss", ",", "epochTstNum", ",", "epochApeLoss", ",", "epochPosNums", "=", "[", "np", ".", "zeros", "(", "4", ")", "for", "i", "in", "range", "(", "5", ")", "]", "\n", "", "num", "=", "len", "(", "ids", ")", "\n", "\n", "steps", "=", "int", "(", "np", ".", "ceil", "(", "num", "/", "args", ".", "batch", ")", ")", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "\t\t\t", "st", "=", "i", "*", "args", ".", "batch", "\n", "ed", "=", "min", "(", "(", "i", "+", "1", ")", "*", "args", ".", "batch", ",", "num", ")", "\n", "batIds", "=", "ids", "[", "st", ":", "ed", "]", "\n", "\n", "tem", "=", "self", ".", "sampTestBatch", "(", "batIds", ",", "tstTensor", ",", "inpTensor", ")", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t\t", "feats", ",", "labels", "=", "tem", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "feats", ",", "labels", ",", "mask", "=", "tem", "\n", "\n", "", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t\t", "targets", "=", "[", "self", ".", "preLoss", ",", "self", ".", "regLoss", ",", "self", ".", "loss", ",", "self", ".", "truePos", ",", "self", ".", "falsePos", ",", "self", ".", "trueNeg", ",", "self", ".", "falseNeg", "]", "\n", "feeddict", "=", "{", "self", ".", "feats", ":", "feats", ",", "self", ".", "labels", ":", "labels", ",", "self", ".", "dropRate", ":", "0.0", "}", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "targets", "=", "[", "self", ".", "preds", ",", "self", ".", "preLoss", ",", "self", ".", "regLoss", ",", "self", ".", "loss", ",", "self", ".", "sqLoss", ",", "self", ".", "absLoss", ",", "self", ".", "tstNums", ",", "self", ".", "apeLoss", ",", "self", ".", "posNums", "]", "\n", "feeddict", "=", "{", "self", ".", "feats", ":", "feats", ",", "self", ".", "labels", ":", "labels", ",", "self", ".", "dropRate", ":", "0.0", ",", "self", ".", "mask", ":", "mask", "}", "\n", "", "res", "=", "self", ".", "sess", ".", "run", "(", "targets", ",", "feed_dict", "=", "feeddict", ",", "options", "=", "config_pb2", ".", "RunOptions", "(", "report_tensor_allocations_upon_oom", "=", "True", ")", ")", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t\t", "preLoss", ",", "regLoss", ",", "loss", ",", "tp", ",", "fp", ",", "tn", ",", "fn", "=", "res", "\n", "epochTp", "+=", "tp", "\n", "epochFp", "+=", "fp", "\n", "epochTn", "+=", "tn", "\n", "epochFn", "+=", "fn", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t\t", "preds", ",", "preLoss", ",", "regLoss", ",", "loss", ",", "sqLoss", ",", "absLoss", ",", "tstNums", ",", "apeLoss", ",", "posNums", "=", "res", "\n", "epochSqLoss", "+=", "sqLoss", "\n", "epochAbsLoss", "+=", "absLoss", "\n", "epochTstNum", "+=", "tstNums", "\n", "epochApeLoss", "+=", "apeLoss", "\n", "epochPosNums", "+=", "posNums", "\n", "", "epochLoss", "+=", "loss", "\n", "epochPreLoss", "+=", "preLoss", "\n", "log", "(", "'Step %d/%d: loss = %.2f, regLoss = %.2f         '", "%", "(", "i", ",", "steps", ",", "loss", ",", "regLoss", ")", ",", "save", "=", "False", ",", "oneline", "=", "True", ")", "\n", "", "ret", "=", "dict", "(", ")", "\n", "ret", "[", "'preLoss'", "]", "=", "epochPreLoss", "/", "steps", "\n", "if", "args", ".", "task", "==", "'c'", ":", "\n", "\t\t\t", "temSum", "=", "0", "\n", "for", "i", "in", "range", "(", "args", ".", "offNum", ")", ":", "\n", "\t\t\t\t", "ret", "[", "'F1_%d'", "%", "i", "]", "=", "epochTp", "[", "i", "]", "*", "2", "/", "(", "epochTp", "[", "i", "]", "*", "2", "+", "epochFp", "[", "i", "]", "+", "epochFn", "[", "i", "]", ")", "\n", "temSum", "+=", "ret", "[", "'F1_%d'", "%", "i", "]", "\n", "", "ret", "[", "'microF1'", "]", "=", "temSum", "/", "args", ".", "offNum", "\n", "ret", "[", "'macroF1'", "]", "=", "np", ".", "sum", "(", "epochTp", ")", "*", "2", "/", "(", "np", ".", "sum", "(", "epochTp", ")", "*", "2", "+", "np", ".", "sum", "(", "epochFp", ")", "+", "np", ".", "sum", "(", "epochFn", ")", ")", "\n", "", "elif", "args", ".", "task", "==", "'r'", ":", "\n", "\t\t\t", "for", "i", "in", "range", "(", "args", ".", "offNum", ")", ":", "\n", "\t\t\t\t", "ret", "[", "'RMSE_%d'", "%", "i", "]", "=", "np", ".", "sqrt", "(", "epochSqLoss", "[", "i", "]", "/", "epochTstNum", "[", "i", "]", ")", "\n", "ret", "[", "'MAE_%d'", "%", "i", "]", "=", "epochAbsLoss", "[", "i", "]", "/", "epochTstNum", "[", "i", "]", "\n", "ret", "[", "'MAPE_%d'", "%", "i", "]", "=", "epochApeLoss", "[", "i", "]", "/", "epochPosNums", "[", "i", "]", "\n", "", "ret", "[", "'RMSE'", "]", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "epochSqLoss", ")", "/", "np", ".", "sum", "(", "epochTstNum", ")", ")", "\n", "ret", "[", "'MAE'", "]", "=", "np", ".", "sum", "(", "epochAbsLoss", ")", "/", "np", ".", "sum", "(", "epochTstNum", ")", "\n", "ret", "[", "'MAPE'", "]", "=", "np", ".", "sum", "(", "epochApeLoss", ")", "/", "np", ".", "sum", "(", "epochPosNums", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.calcRes": [[311, 322], ["range", "list", "list.sort", "list", "zip", "map", "numpy.reciprocal", "numpy.log2", "list.index"], "methods", ["None"], ["", "def", "calcRes", "(", "self", ",", "preds", ",", "temTst", ",", "tstLocs", ")", ":", "\n", "\t\t", "hit", "=", "0", "\n", "ndcg", "=", "0", "\n", "for", "j", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t", "predvals", "=", "list", "(", "zip", "(", "preds", "[", "j", "]", ",", "tstLocs", "[", "j", "]", ")", ")", "\n", "predvals", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "shoot", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", "[", "1", "]", ",", "predvals", "[", ":", "args", ".", "shoot", "]", ")", ")", "\n", "if", "temTst", "[", "j", "]", "in", "shoot", ":", "\n", "\t\t\t\t", "hit", "+=", "1", "\n", "ndcg", "+=", "np", ".", "reciprocal", "(", "np", ".", "log2", "(", "shoot", ".", "index", "(", "temTst", "[", "j", "]", ")", "+", "2", ")", ")", "\n", "", "", "return", "hit", ",", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.saveHistory": [[323, 332], ["tensorflow.train.Saver", "tensorflow.train.Saver.save", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log"], ["", "def", "saveHistory", "(", "self", ")", ":", "\n", "\t\t", "if", "args", ".", "epoch", "==", "0", ":", "\n", "\t\t\t", "return", "\n", "", "with", "open", "(", "'History/'", "+", "args", ".", "save_path", "+", "'.his'", ",", "'wb'", ")", "as", "fs", ":", "\n", "\t\t\t", "pickle", ".", "dump", "(", "self", ".", "metrics", ",", "fs", ")", "\n", "\n", "", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "self", ".", "sess", ",", "'Models/'", "+", "args", ".", "save_path", ")", "\n", "log", "(", "'Model Saved: %s'", "%", "args", ".", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.HG_ST_labcode.Model.loadModel": [[333, 339], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "Utils.TimeLogger.log", "Utils.TimeLogger.log", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log"], ["", "def", "loadModel", "(", "self", ")", ":", "\n", "\t\t", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "'Models/'", "+", "args", ".", "load_model", ")", "\n", "with", "open", "(", "'History/'", "+", "args", ".", "load_model", "+", "'.his'", ",", "'rb'", ")", "as", "fs", ":", "\n", "\t\t\t", "self", ".", "metrics", "=", "pickle", ".", "load", "(", "fs", ")", "\n", "", "log", "(", "'Model Loaded'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.Params.parse_args": [[3, 26], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.None.Params.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Model Params'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "1e-3", ",", "type", "=", "float", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--reg'", ",", "default", "=", "0", ",", "type", "=", "float", ",", "help", "=", "'weight decay regularizer'", ")", "\n", "parser", ".", "add_argument", "(", "'--spreg'", ",", "default", "=", "0", ",", "type", "=", "float", ",", "help", "=", "'weight decay regularizer'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "help", "=", "'number of epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--decay'", ",", "default", "=", "0.96", ",", "type", "=", "float", ",", "help", "=", "'weight decay rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "default", "=", "'tem'", ",", "help", "=", "'file name to save model and training record'", ")", "\n", "parser", ".", "add_argument", "(", "'--load_model'", ",", "default", "=", "None", ",", "help", "=", "'model name to load'", ")", "\n", "parser", ".", "add_argument", "(", "'--latdim'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'embedding size'", ")", "\n", "parser", ".", "add_argument", "(", "'--spacialRange'", ",", "default", "=", "2", ",", "type", "=", "int", ",", "help", "=", "'number of hops for spacial message propagation'", ")", "\n", "parser", ".", "add_argument", "(", "'--temporalRange'", ",", "default", "=", "30", ",", "type", "=", "int", ",", "help", "=", "'number of hops for temporal features'", ")", "\n", "parser", ".", "add_argument", "(", "'--temporalGnnRange'", ",", "default", "=", "7", ",", "type", "=", "int", ",", "help", "=", "'number of gnn iterations for temporal message propagation'", ")", "\n", "parser", ".", "add_argument", "(", "'--data'", ",", "default", "=", "'NYC'", ",", "type", "=", "str", ",", "help", "=", "'name of dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--tstEpoch'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "'number of epoch to test while training'", ")", "\n", "parser", ".", "add_argument", "(", "'--head'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "help", "=", "'number of attention head'", ")", "\n", "parser", ".", "add_argument", "(", "'--negRate'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "help", "=", "'rate of neg v.s. pos samples while training'", ")", "\n", "parser", ".", "add_argument", "(", "'--border'", ",", "default", "=", "0.5", ",", "type", "=", "float", ",", "help", "=", "'border line for pos and neg predictions'", ")", "\n", "parser", ".", "add_argument", "(", "'--hyperNum'", ",", "default", "=", "128", ",", "type", "=", "int", ",", "help", "=", "'number of hyper edges'", ")", "\n", "parser", ".", "add_argument", "(", "'--dropRate'", ",", "default", "=", "0.0", ",", "type", "=", "float", ",", "help", "=", "'drop rate for dropout'", ")", "\n", "parser", ".", "add_argument", "(", "'--task'", ",", "default", "=", "'c'", ",", "type", "=", "str", ",", "help", "=", "'classification or regression'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "", "args", "=", "parse_args", "(", ")", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId": [[12, 16], ["None"], "function", ["None"], ["def", "getParamId", "(", ")", ":", "\n", "\t", "global", "paramId", "\n", "paramId", "+=", "1", "\n", "return", "paramId", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.setIta": [[17, 19], ["None"], "function", ["None"], ["", "def", "setIta", "(", "ITA", ")", ":", "\n", "\t", "ita", "=", "ITA", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.setBiasDefault": [[20, 23], ["None"], "function", ["None"], ["", "def", "setBiasDefault", "(", "val", ")", ":", "\n", "\t", "global", "biasDefault", "\n", "biasDefault", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParam": [[24, 26], ["None"], "function", ["None"], ["", "def", "getParam", "(", "name", ")", ":", "\n", "\t", "return", "params", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addReg": [[27, 33], ["print"], "function", ["None"], ["", "def", "addReg", "(", "name", ",", "param", ")", ":", "\n", "\t", "global", "regParams", "\n", "if", "name", "not", "in", "regParams", ":", "\n", "\t\t", "regParams", "[", "name", "]", "=", "param", "\n", "", "else", ":", "\n", "\t\t", "print", "(", "'ERROR: Parameter already exists'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.addParam": [[34, 38], ["None"], "function", ["None"], ["", "", "def", "addParam", "(", "name", ",", "param", ")", ":", "\n", "\t", "global", "params", "\n", "if", "name", "not", "in", "params", ":", "\n", "\t\t", "params", "[", "name", "]", "=", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam": [[39, 42], ["NNLayers.defineParam", "NNLayers.getParamId"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "", "def", "defineRandomNameParam", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "reg", "=", "False", ",", "initializer", "=", "'xavier'", ",", "trainable", "=", "True", ")", ":", "\n", "\t", "name", "=", "'defaultParamName%d'", "%", "getParamId", "(", ")", "\n", "return", "defineParam", "(", "name", ",", "shape", ",", "dtype", ",", "reg", ",", "initializer", ",", "trainable", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam": [[43, 69], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.get_variable", "tensorflow.random.truncated_normal", "tensorflow.get_variable", "tensorflow.zeros", "isinstance", "tensorflow.get_variable", "print", "exit", "tensorflow.ones", "int"], "function", ["None"], ["", "def", "defineParam", "(", "name", ",", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "reg", "=", "False", ",", "initializer", "=", "'xavier'", ",", "trainable", "=", "True", ")", ":", "\n", "\t", "global", "params", "\n", "global", "regParams", "\n", "assert", "name", "not", "in", "params", ",", "'name %s already exists'", "%", "name", "\n", "if", "initializer", "==", "'xavier'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "dtype", "=", "dtype", ",", "shape", "=", "shape", ",", "\n", "initializer", "=", "xavier_initializer", "(", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "trainable", "=", "trainable", ")", "\n", "", "elif", "initializer", "==", "'trunc_normal'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "initializer", "=", "tf", ".", "random", ".", "truncated_normal", "(", "shape", "=", "[", "int", "(", "shape", "[", "0", "]", ")", ",", "shape", "[", "1", "]", "]", ",", "mean", "=", "0.0", ",", "stddev", "=", "0.03", ",", "dtype", "=", "dtype", ")", ")", "\n", "", "elif", "initializer", "==", "'zeros'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "dtype", "=", "dtype", ",", "\n", "initializer", "=", "tf", ".", "zeros", "(", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "trainable", "=", "trainable", ")", "\n", "", "elif", "initializer", "==", "'ones'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "dtype", "=", "dtype", ",", "initializer", "=", "tf", ".", "ones", "(", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "trainable", "=", "trainable", ")", "\n", "", "elif", "not", "isinstance", "(", "initializer", ",", "str", ")", ":", "\n", "\t\t", "ret", "=", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "dtype", "=", "dtype", ",", "\n", "initializer", "=", "initializer", ",", "trainable", "=", "trainable", ")", "\n", "", "else", ":", "\n", "\t\t", "print", "(", "'ERROR: Unrecognized initializer'", ")", "\n", "exit", "(", ")", "\n", "", "params", "[", "name", "]", "=", "ret", "\n", "if", "reg", ":", "\n", "\t\t", "regParams", "[", "name", "]", "=", "ret", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getOrDefineParam": [[70, 79], ["NNLayers.defineParam"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineParam"], ["", "def", "getOrDefineParam", "(", "name", ",", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "reg", "=", "False", ",", "initializer", "=", "'xavier'", ",", "trainable", "=", "True", ",", "reuse", "=", "False", ")", ":", "\n", "\t", "global", "params", "\n", "global", "regParams", "\n", "if", "name", "in", "params", ":", "\n", "\t\t", "assert", "reuse", ",", "'Reusing Param %s Not Specified'", "%", "name", "\n", "if", "reg", "and", "name", "not", "in", "regParams", ":", "\n", "\t\t\t", "regParams", "[", "name", "]", "=", "params", "[", "name", "]", "\n", "", "return", "params", "[", "name", "]", "\n", "", "return", "defineParam", "(", "name", ",", "shape", ",", "dtype", ",", "reg", ",", "initializer", ",", "trainable", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.BN": [[80, 95], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.moments", "tensorflow.train.ExponentialMovingAverage", "tf.train.ExponentialMovingAverage.apply", "tensorflow.nn.batch_normalization", "inp.get_shape", "NNLayers.getParamId", "tensorflow.ones", "tensorflow.zeros", "tensorflow.control_dependencies", "tensorflow.identity", "tensorflow.identity"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "def", "BN", "(", "inp", ",", "name", "=", "None", ")", ":", "\n", "\t", "global", "ita", "\n", "dim", "=", "inp", ".", "get_shape", "(", ")", "[", "1", "]", "\n", "name", "=", "'defaultParamName%d'", "%", "getParamId", "(", ")", "\n", "scale", "=", "tf", ".", "Variable", "(", "tf", ".", "ones", "(", "[", "dim", "]", ")", ")", "\n", "shift", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "dim", "]", ")", ")", "\n", "fcMean", ",", "fcVar", "=", "tf", ".", "nn", ".", "moments", "(", "inp", ",", "axes", "=", "[", "0", "]", ")", "\n", "ema", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "decay", "=", "0.5", ")", "\n", "emaApplyOp", "=", "ema", ".", "apply", "(", "[", "fcMean", ",", "fcVar", "]", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "emaApplyOp", "]", ")", ":", "\n", "\t\t", "mean", "=", "tf", ".", "identity", "(", "fcMean", ")", "\n", "var", "=", "tf", ".", "identity", "(", "fcVar", ")", "\n", "", "ret", "=", "tf", ".", "nn", ".", "batch_normalization", "(", "inp", ",", "mean", ",", "var", ",", "shift", ",", "\n", "scale", ",", "1e-8", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.FC": [[96, 114], ["NNLayers.getOrDefineParam", "inp.get_shape", "NNLayers.Bias", "NNLayers.BN", "NNLayers.Activate", "NNLayers.getParamId", "tensorflow.nn.dropout"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getOrDefineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Bias", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.BN", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "def", "FC", "(", "inp", ",", "outDim", ",", "name", "=", "None", ",", "useBias", "=", "False", ",", "activation", "=", "None", ",", "reg", "=", "False", ",", "useBN", "=", "False", ",", "dropout", "=", "None", ",", "initializer", "=", "'xavier'", ",", "reuse", "=", "False", ")", ":", "\n", "\t", "global", "params", "\n", "global", "regParams", "\n", "global", "leaky", "\n", "inDim", "=", "inp", ".", "get_shape", "(", ")", "[", "1", "]", "\n", "temName", "=", "name", "if", "name", "!=", "None", "else", "'defaultParamName%d'", "%", "getParamId", "(", ")", "\n", "W", "=", "getOrDefineParam", "(", "temName", ",", "[", "inDim", ",", "outDim", "]", ",", "reg", "=", "reg", ",", "initializer", "=", "initializer", ",", "reuse", "=", "reuse", ")", "\n", "if", "dropout", "!=", "None", ":", "\n", "\t\t", "ret", "=", "tf", ".", "nn", ".", "dropout", "(", "inp", ",", "rate", "=", "dropout", ")", "@", "W", "\n", "", "else", ":", "\n", "\t\t", "ret", "=", "inp", "@", "W", "\n", "", "if", "useBias", ":", "\n", "\t\t", "ret", "=", "Bias", "(", "ret", ",", "name", "=", "name", ",", "reuse", "=", "reuse", ")", "\n", "", "if", "useBN", ":", "\n", "\t\t", "ret", "=", "BN", "(", "ret", ")", "\n", "", "if", "activation", "!=", "None", ":", "\n", "\t\t", "ret", "=", "Activate", "(", "ret", ",", "activation", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Bias": [[115, 123], ["NNLayers.getOrDefineParam", "data.get_shape", "NNLayers.getParamId"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getOrDefineParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "def", "Bias", "(", "data", ",", "name", "=", "None", ",", "reg", "=", "False", ",", "reuse", "=", "False", ")", ":", "\n", "\t", "inDim", "=", "data", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "temName", "=", "name", "if", "name", "!=", "None", "else", "'defaultParamName%d'", "%", "getParamId", "(", ")", "\n", "temBiasName", "=", "temName", "+", "'Bias'", "\n", "bias", "=", "getOrDefineParam", "(", "temBiasName", ",", "inDim", ",", "reg", "=", "False", ",", "initializer", "=", "'zeros'", ",", "reuse", "=", "reuse", ")", "\n", "if", "reg", ":", "\n", "\t\t", "regParams", "[", "temBiasName", "]", "=", "bias", "\n", "", "return", "data", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.ActivateHelp": [[124, 147], ["tensorflow.nn.relu", "tensorflow.nn.sigmoid", "tensorflow.nn.tanh", "tensorflow.nn.softmax", "tensorflow.maximum", "tensorflow.to_float", "tensorflow.greater", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.minimum", "tensorflow.maximum", "Exception", "tensorflow.minimum"], "function", ["None"], ["", "def", "ActivateHelp", "(", "data", ",", "method", ")", ":", "\n", "\t", "if", "method", "==", "'relu'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "nn", ".", "relu", "(", "data", ")", "\n", "", "elif", "method", "==", "'sigmoid'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "nn", ".", "sigmoid", "(", "data", ")", "\n", "", "elif", "method", "==", "'tanh'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "nn", ".", "tanh", "(", "data", ")", "\n", "", "elif", "method", "==", "'softmax'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "nn", ".", "softmax", "(", "data", ",", "axis", "=", "-", "1", ")", "\n", "", "elif", "method", "==", "'leakyRelu'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "maximum", "(", "leaky", "*", "data", ",", "data", ")", "\n", "", "elif", "method", "==", "'twoWayLeakyRelu6'", ":", "\n", "\t\t", "temMask", "=", "tf", ".", "to_float", "(", "tf", ".", "greater", "(", "data", ",", "6.0", ")", ")", "\n", "ret", "=", "temMask", "*", "(", "6", "+", "leaky", "*", "(", "data", "-", "6", ")", ")", "+", "(", "1", "-", "temMask", ")", "*", "tf", ".", "maximum", "(", "leaky", "*", "data", ",", "data", ")", "\n", "", "elif", "method", "==", "'-1relu'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "maximum", "(", "-", "1.0", ",", "data", ")", "\n", "", "elif", "method", "==", "'relu6'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "maximum", "(", "0.0", ",", "tf", ".", "minimum", "(", "6.0", ",", "data", ")", ")", "\n", "", "elif", "method", "==", "'relu3'", ":", "\n", "\t\t", "ret", "=", "tf", ".", "maximum", "(", "0.0", ",", "tf", ".", "minimum", "(", "3.0", ",", "data", ")", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "Exception", "(", "'Error Activation Function'", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Activate": [[148, 156], ["NNLayers.ActivateHelp", "NNLayers.BN"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.ActivateHelp", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.BN"], ["", "def", "Activate", "(", "data", ",", "method", ",", "useBN", "=", "False", ")", ":", "\n", "\t", "global", "leaky", "\n", "if", "useBN", ":", "\n", "\t\t", "ret", "=", "BN", "(", "data", ")", "\n", "", "else", ":", "\n", "\t\t", "ret", "=", "data", "\n", "", "ret", "=", "ActivateHelp", "(", "ret", ",", "method", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Regularize": [[157, 174], ["tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "NNLayers.getParam", "tensorflow.square", "tensorflow.square", "NNLayers.getParam"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParam"], ["", "def", "Regularize", "(", "names", "=", "None", ",", "method", "=", "'L2'", ")", ":", "\n", "\t", "ret", "=", "0", "\n", "if", "method", "==", "'L1'", ":", "\n", "\t\t", "if", "names", "!=", "None", ":", "\n", "\t\t\t", "for", "name", "in", "names", ":", "\n", "\t\t\t\t", "ret", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "getParam", "(", "name", ")", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t", "for", "name", "in", "regParams", ":", "\n", "\t\t\t\t", "ret", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "regParams", "[", "name", "]", ")", ")", "\n", "", "", "", "elif", "method", "==", "'L2'", ":", "\n", "\t\t", "if", "names", "!=", "None", ":", "\n", "\t\t\t", "for", "name", "in", "names", ":", "\n", "\t\t\t\t", "ret", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "getParam", "(", "name", ")", ")", ")", "\n", "", "", "else", ":", "\n", "\t\t\t", "for", "name", "in", "regParams", ":", "\n", "\t\t\t\t", "ret", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "regParams", "[", "name", "]", ")", ")", "\n", "", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.Dropout": [[175, 180], ["tensorflow.nn.dropout"], "function", ["None"], ["", "def", "Dropout", "(", "data", ",", "rate", ")", ":", "\n", "\t", "if", "rate", "==", "None", ":", "\n", "\t\t", "return", "data", "\n", "", "else", ":", "\n", "\t\t", "return", "tf", ".", "nn", ".", "dropout", "(", "data", ",", "rate", "=", "rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.selfAttention": [[181, 198], ["NNLayers.defineRandomNameParam", "NNLayers.defineRandomNameParam", "NNLayers.defineRandomNameParam", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.reshape", "range", "tensorflow.stack", "tensorflow.reduce_sum", "NNLayers.getParamId", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.sqrt", "tensorflow.slice"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "", "def", "selfAttention", "(", "localReps", ",", "number", ",", "inpDim", ",", "numHeads", ")", ":", "\n", "\t", "Q", "=", "defineRandomNameParam", "(", "[", "inpDim", ",", "inpDim", "]", ",", "reg", "=", "True", ")", "\n", "K", "=", "defineRandomNameParam", "(", "[", "inpDim", ",", "inpDim", "]", ",", "reg", "=", "True", ")", "\n", "V", "=", "defineRandomNameParam", "(", "[", "inpDim", ",", "inpDim", "]", ",", "reg", "=", "True", ")", "\n", "rspReps", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "localReps", ",", "axis", "=", "1", ")", ",", "[", "-", "1", ",", "inpDim", "]", ")", "\n", "q", "=", "tf", ".", "reshape", "(", "rspReps", "@", "Q", ",", "[", "-", "1", ",", "number", ",", "1", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "k", "=", "tf", ".", "reshape", "(", "rspReps", "@", "K", ",", "[", "-", "1", ",", "1", ",", "number", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "v", "=", "tf", ".", "reshape", "(", "rspReps", "@", "V", ",", "[", "-", "1", ",", "1", ",", "number", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "att", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "reduce_sum", "(", "q", "*", "k", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "/", "tf", ".", "sqrt", "(", "inpDim", "/", "numHeads", ")", ",", "axis", "=", "2", ")", "\n", "attval", "=", "tf", ".", "reshape", "(", "tf", ".", "reduce_sum", "(", "att", "*", "v", ",", "axis", "=", "2", ")", ",", "[", "-", "1", ",", "number", ",", "inpDim", "]", ")", "\n", "rets", "=", "[", "None", "]", "*", "number", "\n", "paramId", "=", "'dfltP%d'", "%", "getParamId", "(", ")", "\n", "for", "i", "in", "range", "(", "number", ")", ":", "\n", "\t\t", "tem1", "=", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "attval", ",", "[", "0", ",", "i", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ")", ",", "[", "-", "1", ",", "inpDim", "]", ")", "\n", "# tem2 = FC(tem1, inpDim, useBias=True, name=paramId+'_1', reg=True, activation='relu', reuse=True) + localReps[i]", "\n", "rets", "[", "i", "]", "=", "tem1", "+", "localReps", "[", "i", "]", "\n", "", "return", "rets", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.lightSelfAttention": [[199, 216], ["NNLayers.defineRandomNameParam", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.nn.softmax", "tensorflow.reshape", "range", "tensorflow.stack", "tensorflow.reduce_sum", "NNLayers.getParamId", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.sqrt", "tensorflow.slice"], "function", ["home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.defineRandomNameParam", "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.NNLayers.getParamId"], ["", "def", "lightSelfAttention", "(", "localReps", ",", "number", ",", "inpDim", ",", "numHeads", ")", ":", "\n", "\t", "Q", "=", "defineRandomNameParam", "(", "[", "inpDim", ",", "inpDim", "]", ",", "reg", "=", "True", ")", "\n", "rspReps", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "localReps", ",", "axis", "=", "1", ")", ",", "[", "-", "1", ",", "inpDim", "]", ")", "\n", "tem", "=", "rspReps", "@", "Q", "\n", "q", "=", "tf", ".", "reshape", "(", "tem", ",", "[", "-", "1", ",", "number", ",", "1", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "k", "=", "tf", ".", "reshape", "(", "tem", ",", "[", "-", "1", ",", "1", ",", "number", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "v", "=", "tf", ".", "reshape", "(", "rspReps", ",", "[", "-", "1", ",", "1", ",", "number", ",", "numHeads", ",", "inpDim", "//", "numHeads", "]", ")", "\n", "# att = tf.nn.softmax(tf.reduce_sum(q * k, axis=-1, keepdims=True) * tf.sqrt(inpDim/numHeads), axis=2)", "\n", "att", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "reduce_sum", "(", "q", "*", "k", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "/", "tf", ".", "sqrt", "(", "inpDim", "/", "numHeads", ")", ",", "axis", "=", "2", ")", "\n", "attval", "=", "tf", ".", "reshape", "(", "tf", ".", "reduce_sum", "(", "att", "*", "v", ",", "axis", "=", "2", ")", ",", "[", "-", "1", ",", "number", ",", "inpDim", "]", ")", "\n", "rets", "=", "[", "None", "]", "*", "number", "\n", "paramId", "=", "'dfltP%d'", "%", "getParamId", "(", ")", "\n", "for", "i", "in", "range", "(", "number", ")", ":", "\n", "\t\t", "tem1", "=", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "attval", ",", "[", "0", ",", "i", ",", "0", "]", ",", "[", "-", "1", ",", "1", ",", "-", "1", "]", ")", ",", "[", "-", "1", ",", "inpDim", "]", ")", "\n", "# tem2 = FC(tem1, inpDim, useBias=True, name=paramId+'_1', reg=True, activation='relu', reuse=True) + localReps[i]", "\n", "rets", "[", "i", "]", "=", "tem1", "+", "localReps", "[", "i", "]", "\n", "", "return", "rets", "#, tf.squeeze(att)", "", "", ""]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.log": [[6, 20], ["datetime.datetime.now", "print", "print"], "function", ["None"], ["def", "log", "(", "msg", ",", "save", "=", "None", ",", "oneline", "=", "False", ")", ":", "\n", "\t", "global", "logmsg", "\n", "global", "saveDefault", "\n", "time", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "tem", "=", "'%s: %s'", "%", "(", "time", ",", "msg", ")", "\n", "if", "save", "!=", "None", ":", "\n", "\t\t", "if", "save", ":", "\n", "\t\t\t", "logmsg", "+=", "tem", "+", "'\\n'", "\n", "", "", "elif", "saveDefault", ":", "\n", "\t\t", "logmsg", "+=", "tem", "+", "'\\n'", "\n", "", "if", "oneline", ":", "\n", "\t\t", "print", "(", "tem", ",", "end", "=", "'\\r'", ")", "\n", "", "else", ":", "\n", "\t\t", "print", "(", "tem", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.marktime": [[21, 24], ["datetime.datetime.now"], "function", ["None"], ["", "", "def", "marktime", "(", "marker", ")", ":", "\n", "\t", "global", "timemark", "\n", "timemark", "[", "marker", "]", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.SpentTime": [[25, 33], ["print", "datetime.datetime.now"], "function", ["None"], ["", "def", "SpentTime", "(", "marker", ")", ":", "\n", "\t", "global", "timemark", "\n", "if", "marker", "not", "in", "timemark", ":", "\n", "\t\t", "msg", "=", "'LOGGER ERROR, marker'", ",", "marker", ",", "' not found'", "\n", "tem", "=", "'%s: %s'", "%", "(", "time", ",", "msg", ")", "\n", "print", "(", "tem", ")", "\n", "return", "False", "\n", "", "return", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "timemark", "[", "marker", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.akaxlh_ST-SHN.Utils.TimeLogger.SpentTooLong": [[34, 42], ["print", "datetime.timedelta", "datetime.datetime.now"], "function", ["None"], ["", "def", "SpentTooLong", "(", "marker", ",", "day", "=", "0", ",", "hour", "=", "0", ",", "minute", "=", "0", ",", "second", "=", "0", ")", ":", "\n", "\t", "global", "timemark", "\n", "if", "marker", "not", "in", "timemark", ":", "\n", "\t\t", "msg", "=", "'LOGGER ERROR, marker'", ",", "marker", ",", "' not found'", "\n", "tem", "=", "'%s: %s'", "%", "(", "time", ",", "msg", ")", "\n", "print", "(", "tem", ")", "\n", "return", "False", "\n", "", "return", "datetime", ".", "datetime", ".", "now", "(", ")", "-", "timemark", "[", "marker", "]", ">=", "datetime", ".", "timedelta", "(", "days", "=", "day", ",", "hours", "=", "hour", ",", "minutes", "=", "minute", ",", "seconds", "=", "second", ")", "\n", "\n"]]}