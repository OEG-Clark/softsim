{"home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.main.same_model": [[213, 218], ["zip", "model1.parameters", "model2.parameters", "p1.data.ne().sum", "p1.data.ne"], "function", ["None"], ["", "def", "same_model", "(", "model1", ",", "model2", ")", ":", "\n", "    ", "for", "p1", ",", "p2", "in", "zip", "(", "model1", ".", "parameters", "(", ")", ",", "model2", ".", "parameters", "(", ")", ")", ":", "\n", "        ", "if", "p1", ".", "data", ".", "ne", "(", "p2", ".", "data", ")", ".", "sum", "(", ")", ">", "0", ":", "\n", "            ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.main.train_one_epoch": [[219, 266], ["time.time", "tqdm.tqdm", "optimizer.zero_grad", "enumerate", "LOG.log", "writer.add_scalar", "torch.zeros().to", "range", "torch.zeros().to.retain_grad", "range", "loss_collect.append", "loss.backward", "copy.copy", "torch.cuda.empty_cache", "range", "optimizer.step", "optimizer.zero_grad", "numpy.mean", "grad_measure.dump", "len", "input[].to", "model", "copy.copy", "torch.cuda.empty_cache", "mixup.pos_mixup", "loss.item", "len", "input[].to", "model", "model.backward", "grad_measure.include", "tqdm.tqdm.set_description", "numpy.round", "numpy.mean", "torch.zeros", "criterion", "criterion", "len", "numpy.mean", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.dump", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.mixup.pos_mixup", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.include"], ["", "def", "train_one_epoch", "(", "train_dataloader", ",", "model", ",", "optimizer", ",", "criterion", ",", "opt", ",", "epoch", ")", ":", "\n", "    ", "loss_collect", "=", "[", "]", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "data_iterator", "=", "tqdm", "(", "train_dataloader", ",", "desc", "=", "'Epoch {} Training...'", ".", "format", "(", "epoch", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "for", "i", ",", "(", "class_labels", ",", "input", ")", "in", "enumerate", "(", "data_iterator", ")", ":", "\n", "        ", "output", "=", "torch", ".", "zeros", "(", "(", "len", "(", "input", ")", ",", "opt", ".", "embed_dim", ")", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "len", "(", "input", ")", ",", "opt", ".", "bs_base", ")", ":", "\n", "            ", "input_x", "=", "input", "[", "j", ":", "j", "+", "opt", ".", "bs_base", ",", ":", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "x", "=", "model", "(", "input_x", ")", "\n", "output", "[", "j", ":", "j", "+", "opt", ".", "bs_base", ",", ":", "]", "=", "copy", ".", "copy", "(", "x", ")", "\n", "del", "x", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "if", "criterion", ".", "mixup", ":", "\n", "            ", "output_mixup", "=", "pos_mixup", "(", "output", ",", "criterion", ".", "num_id", ")", "\n", "num_samples", "=", "output_mixup", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "num_samples", "=", "output", ".", "shape", "[", "0", "]", "\n", "\n", "", "output", ".", "retain_grad", "(", ")", "\n", "loss", "=", "0.", "\n", "\n", "for", "q", "in", "range", "(", "0", ",", "num_samples", ")", ":", "\n", "            ", "if", "criterion", ".", "mixup", ":", "loss", "+=", "criterion", "(", "output_mixup", ",", "q", ")", "\n", "else", ":", "loss", "+=", "criterion", "(", "output", ",", "q", ")", "\n", "", "loss_collect", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "output_grad", "=", "copy", ".", "copy", "(", "output", ".", "grad", ")", "\n", "del", "loss", "\n", "del", "output", "\n", "if", "criterion", ".", "mixup", ":", "del", "output_mixup", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "len", "(", "input", ")", ",", "opt", ".", "bs_base", ")", ":", "\n", "            ", "input_x", "=", "input", "[", "j", ":", "j", "+", "opt", ".", "bs_base", ",", ":", "]", ".", "to", "(", "opt", ".", "device", ")", "\n", "x", "=", "model", "(", "input_x", ")", "\n", "x", ".", "backward", "(", "output_grad", "[", "j", ":", "j", "+", "opt", ".", "bs_base", ",", ":", "]", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "opt", ".", "grad_measure", ":", "\n", "            ", "grad_measure", ".", "include", "(", "model", ".", "model", ".", "last_linear", ")", "\n", "", "if", "i", "==", "len", "(", "train_dataloader", ")", "-", "1", ":", "\n", "            ", "data_iterator", ".", "set_description", "(", "'Epoch (Train) {0}: Mean Loss [{1:.4f}]'", ".", "format", "(", "epoch", ",", "np", ".", "mean", "(", "loss_collect", ")", ")", ")", "\n", "", "", "LOG", ".", "log", "(", "'train'", ",", "LOG", ".", "metrics_to_log", "[", "'train'", "]", ",", "[", "epoch", ",", "np", ".", "round", "(", "time", ".", "time", "(", ")", "-", "start", ",", "4", ")", ",", "np", ".", "mean", "(", "loss_collect", ")", "]", ")", "\n", "writer", ".", "add_scalar", "(", "'global/training_loss'", ",", "np", ".", "mean", "(", "loss_collect", ")", ",", "epoch", ")", "\n", "if", "opt", ".", "grad_measure", ":", "\n", "        ", "grad_measure", ".", "dump", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.__init__": [[24, 36], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "checkdata", ",", "opt", ",", "name", "=", "'Train'", ",", "update_epochs", "=", "1", ")", ":", "\n", "        ", "self", ".", "update_epochs", "=", "update_epochs", "\n", "self", ".", "pars", "=", "opt", "\n", "self", ".", "save_path", "=", "opt", ".", "save_path", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "csv_file", "=", "opt", ".", "save_path", "+", "'/distance_measures_{}.csv'", ".", "format", "(", "self", ".", "name", ")", "\n", "with", "open", "(", "self", ".", "csv_file", ",", "'a'", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "','", ")", "\n", "writer", ".", "writerow", "(", "[", "'Rel. Intra/Inter Distance'", "]", ")", "\n", "", "self", ".", "checkdata", "=", "checkdata", "\n", "self", ".", "mean_class_dists", "=", "[", "]", "\n", "self", ".", "epochs", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.measure": [[37, 68], ["evaluate.DistanceMeasure.epochs.append", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "model.eval", "numpy.vstack().astype", "numpy.hstack().reshape", "numpy.unique", "scipy.spatial.distance.cdist", "numpy.mean", "evaluate.DistanceMeasure.mean_class_dists.append", "evaluate.DistanceMeasure.update", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm.tqdm", "enumerate", "class_positions.append", "scipy.spatial.distance.cdist", "sklearn.preprocessing.normalize().reshape", "dists_class.append", "com_class.append", "numpy.array", "numpy.array", "numpy.sum", "model", "numpy.vstack().astype.extend", "numpy.hstack().reshape.extend", "numpy.vstack", "numpy.hstack", "numpy.sum", "len", "numpy.array", "input_img.to", "model.cpu().detach().numpy().tolist", "target.numpy().tolist", "numpy.where", "len", "sklearn.preprocessing.normalize", "len", "len", "numpy.mean().reshape", "model.cpu().detach().numpy", "target.numpy", "numpy.mean", "model.cpu().detach", "model.cpu"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update"], ["", "def", "measure", "(", "self", ",", "model", ",", "epoch", ")", ":", "\n", "        ", "if", "epoch", "%", "self", ".", "update_epochs", ":", "return", "\n", "self", ".", "epochs", ".", "append", "(", "epoch", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "_", "=", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "feature_coll", ",", "target_coll", "=", "[", "]", ",", "[", "]", "\n", "data_iter", "=", "tqdm", "(", "self", ".", "checkdata", ",", "desc", "=", "'Estimating Data Distances...'", ")", "\n", "for", "idx", ",", "data", "in", "enumerate", "(", "data_iter", ")", ":", "\n", "                ", "input_img", ",", "target", "=", "data", "[", "1", "]", ",", "data", "[", "0", "]", "\n", "features", "=", "model", "(", "input_img", ".", "to", "(", "self", ".", "pars", ".", "device", ")", ")", "\n", "feature_coll", ".", "extend", "(", "features", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "target_coll", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "", "feature_coll", "=", "np", ".", "vstack", "(", "feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "target_coll", "=", "np", ".", "hstack", "(", "target_coll", ")", ".", "reshape", "(", "-", "1", ")", "\n", "avail_labels", "=", "np", ".", "unique", "(", "target_coll", ")", "\n", "class_positions", "=", "[", "]", "\n", "for", "lab", "in", "avail_labels", ":", "\n", "            ", "class_positions", ".", "append", "(", "np", ".", "where", "(", "target_coll", "==", "lab", ")", "[", "0", "]", ")", "\n", "", "com_class", ",", "dists_class", "=", "[", "]", ",", "[", "]", "\n", "for", "class_pos", "in", "class_positions", ":", "\n", "            ", "dists", "=", "distance", ".", "cdist", "(", "feature_coll", "[", "class_pos", "]", ",", "feature_coll", "[", "class_pos", "]", ",", "'cosine'", ")", "\n", "dists", "=", "np", ".", "sum", "(", "dists", ")", "/", "(", "len", "(", "dists", ")", "**", "2", "-", "len", "(", "dists", ")", ")", "\n", "com", "=", "normalize", "(", "np", ".", "mean", "(", "feature_coll", "[", "class_pos", "]", ",", "axis", "=", "0", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", ".", "reshape", "(", "-", "1", ")", "\n", "dists_class", ".", "append", "(", "dists", ")", "\n", "com_class", ".", "append", "(", "com", ")", "\n", "", "mean_inter_dist", "=", "distance", ".", "cdist", "(", "np", ".", "array", "(", "com_class", ")", ",", "np", ".", "array", "(", "com_class", ")", ",", "'cosine'", ")", "\n", "mean_inter_dist", "=", "np", ".", "sum", "(", "mean_inter_dist", ")", "/", "(", "len", "(", "mean_inter_dist", ")", "**", "2", "-", "len", "(", "mean_inter_dist", ")", ")", "\n", "mean_class_dist", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "dists_class", ")", "/", "mean_inter_dist", ")", "\n", "self", ".", "mean_class_dists", ".", "append", "(", "mean_class_dist", ")", "\n", "self", ".", "update", "(", "mean_class_dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update": [[70, 73], ["evaluate.DistanceMeasure.update_csv", "evaluate.DistanceMeasure.update_plot"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update_csv", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update_plot"], ["", "def", "update", "(", "self", ",", "mean_class_dist", ")", ":", "\n", "        ", "self", ".", "update_csv", "(", "mean_class_dist", ")", "\n", "self", ".", "update_plot", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update_csv": [[74, 78], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["", "def", "update_csv", "(", "self", ",", "mean_class_dist", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "csv_file", ",", "'a'", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "','", ")", "\n", "writer", ".", "writerow", "(", "[", "mean_class_dist", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update_plot": [[80, 88], ["matplotlib.style.use", "matplotlib.subplots", "ax.set_title", "ax.plot", "f.legend", "f.set_size_inches", "f.savefig"], "methods", ["None"], ["", "", "def", "update_plot", "(", "self", ")", ":", "\n", "        ", "plt", ".", "style", ".", "use", "(", "'ggplot'", ")", "\n", "f", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ")", "\n", "ax", ".", "set_title", "(", "'Mean Intra- over Interclassdistances'", ")", "\n", "ax", ".", "plot", "(", "self", ".", "epochs", ",", "self", ".", "mean_class_dists", ",", "label", "=", "'Class'", ")", "\n", "f", ".", "legend", "(", ")", "\n", "f", ".", "set_size_inches", "(", "15", ",", "8", ")", "\n", "f", ".", "savefig", "(", "self", ".", "save_path", "+", "'/distance_measures_{}.svg'", ".", "format", "(", "self", ".", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.__init__": [[90, 94], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "name", "=", "'class-it'", ")", ":", "\n", "        ", "self", ".", "pars", "=", "opt", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "saver", "=", "{", "'grad_normal_mean'", ":", "[", "]", ",", "'grad_normal_std'", ":", "[", "]", ",", "'grad_abs_mean'", ":", "[", "]", ",", "'grad_abs_std'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.include": [[95, 102], ["params.weight.grad.detach().cpu().numpy", "evaluate.GradientMeasure.saver[].append", "evaluate.GradientMeasure.saver[].append", "evaluate.GradientMeasure.saver[].append", "evaluate.GradientMeasure.saver[].append", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "params.weight.grad.detach().cpu", "numpy.abs", "numpy.abs", "params.weight.grad.detach"], "methods", ["None"], ["", "def", "include", "(", "self", ",", "params", ")", ":", "\n", "        ", "gradients", "=", "[", "params", ".", "weight", ".", "grad", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "for", "grad", "in", "gradients", ":", "\n", "            ", "self", ".", "saver", "[", "'grad_normal_mean'", "]", ".", "append", "(", "np", ".", "mean", "(", "grad", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "saver", "[", "'grad_normal_std'", "]", ".", "append", "(", "np", ".", "std", "(", "grad", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "saver", "[", "'grad_abs_mean'", "]", ".", "append", "(", "np", ".", "mean", "(", "np", ".", "abs", "(", "grad", ")", ",", "axis", "=", "0", ")", ")", "\n", "self", ".", "saver", "[", "'grad_abs_std'", "]", ".", "append", "(", "np", ".", "std", "(", "np", ".", "abs", "(", "grad", ")", ",", "axis", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.dump": [[103, 107], ["open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.dump"], ["", "", "def", "dump", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "pars", ".", "save_path", "+", "'/grad_dict_{}.pkl'", ".", "format", "(", "self", ".", "name", ")", ",", "'ab'", ")", "as", "f", ":", "\n", "            ", "pkl", ".", "dump", "(", "[", "self", ".", "saver", "]", ",", "f", ")", "\n", "", "self", ".", "saver", "=", "{", "'grad_normal_mean'", ":", "[", "]", ",", "'grad_normal_std'", ":", "[", "]", ",", "'grad_abs_mean'", ":", "[", "]", ",", "'grad_abs_std'", ":", "[", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.evaluate": [[13, 22], ["evaluate.evaluate_one_dataset", "evaluate.evaluate_multiple_datasets", "Exception"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.evaluate_one_dataset", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.evaluate_multiple_datasets"], ["def", "evaluate", "(", "dataset", ",", "LOG", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "dataset", "in", "[", "'Inaturalist'", ",", "'sop'", ",", "'cars196'", "]", ":", "\n", "        ", "ret", "=", "evaluate_one_dataset", "(", "LOG", ",", "**", "kwargs", ")", "\n", "", "elif", "dataset", "in", "[", "'vehicle_id'", "]", ":", "\n", "        ", "ret", "=", "evaluate_multiple_datasets", "(", "LOG", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'No implementation for dataset {} available!'", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.evaluate_one_dataset": [[108, 126], ["time.time", "numpy.array", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "auxiliaries.eval_metrics_one_dataset", "LOG.log", "zip", "auxiliaries.set_checkpoint", "auxiliaries.recover_closest_one_dataset", "len", "numpy.max", "numpy.round", "time.time"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.eval_metrics_one_dataset", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_checkpoint", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.recover_closest_one_dataset"], ["", "", "def", "evaluate_one_dataset", "(", "LOG", ",", "dataloader", ",", "model", ",", "opt", ",", "save", "=", "True", ",", "give_return", "=", "True", ",", "epoch", "=", "0", ")", ":", "\n", "    ", "start", "=", "time", ".", "time", "(", ")", "\n", "image_paths", "=", "np", ".", "array", "(", "dataloader", ".", "dataset", ".", "image_list", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "F1", ",", "NMI", ",", "recall_at_ks", ",", "feature_matrix_all", "=", "aux", ".", "eval_metrics_one_dataset", "(", "model", ",", "dataloader", ",", "device", "=", "opt", ".", "device", ",", "k_vals", "=", "opt", ".", "k_vals", ",", "opt", "=", "opt", ")", "\n", "result_str", "=", "', '", ".", "join", "(", "'@{0}: {1:.4f}'", ".", "format", "(", "k", ",", "rec", ")", "for", "k", ",", "rec", "in", "zip", "(", "opt", ".", "k_vals", ",", "recall_at_ks", ")", ")", "\n", "result_str", "=", "'Epoch (Test) {0}: NMI [{1:.4f}] | F1 [{2:.4f}] | Recall [{3}]'", ".", "format", "(", "epoch", ",", "NMI", ",", "F1", ",", "result_str", ")", "\n", "if", "LOG", "is", "not", "None", ":", "\n", "            ", "if", "save", ":", "\n", "                ", "if", "not", "len", "(", "LOG", ".", "progress_saver", "[", "'val'", "]", "[", "'Recall @ 1'", "]", ")", "or", "recall_at_ks", "[", "0", "]", ">", "np", ".", "max", "(", "LOG", ".", "progress_saver", "[", "'val'", "]", "[", "'Recall @ 1'", "]", ")", ":", "\n", "                    ", "aux", ".", "set_checkpoint", "(", "model", ",", "opt", ",", "LOG", ".", "progress_saver", ",", "LOG", ".", "prop", ".", "save_path", "+", "'/checkpoint.pth.tar'", ")", "\n", "aux", ".", "recover_closest_one_dataset", "(", "feature_matrix_all", ",", "image_paths", ",", "LOG", ".", "prop", ".", "save_path", "+", "'/sample_recoveries.png'", ")", "\n", "", "", "LOG", ".", "log", "(", "'val'", ",", "LOG", ".", "metrics_to_log", "[", "'val'", "]", ",", "[", "epoch", ",", "np", ".", "round", "(", "time", ".", "time", "(", ")", "-", "start", ")", ",", "NMI", ",", "F1", "]", "+", "recall_at_ks", ")", "\n", "", "", "print", "(", "result_str", ")", "\n", "if", "give_return", ":", "\n", "        ", "return", "recall_at_ks", ",", "NMI", ",", "F1", "\n", "", "else", ":", "\n", "        ", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.evaluate_multiple_datasets": [[127, 148], ["time.time", "csv_data.insert", "LOG.log", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "numpy.round", "print", "numpy.array", "auxiliaries.eval_metrics_one_dataset", "print", "time.time", "len", "zip", "auxiliaries.set_checkpoint", "auxiliaries.recover_closest_one_dataset", "len", "numpy.max"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.eval_metrics_one_dataset", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_checkpoint", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.recover_closest_one_dataset"], ["", "", "def", "evaluate_multiple_datasets", "(", "LOG", ",", "dataloaders", ",", "model", ",", "opt", ",", "save", "=", "True", ",", "give_return", "=", "True", ",", "epoch", "=", "0", ")", ":", "\n", "    ", "start", "=", "time", ".", "time", "(", ")", "\n", "csv_data", "=", "[", "epoch", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "dataloader", "in", "enumerate", "(", "dataloaders", ")", ":", "\n", "            ", "print", "(", "'Working on Set {}/{}'", ".", "format", "(", "i", "+", "1", ",", "len", "(", "dataloaders", ")", ")", ")", "\n", "image_paths", "=", "np", ".", "array", "(", "dataloader", ".", "dataset", ".", "image_list", ")", "\n", "F1", ",", "NMI", ",", "recall_at_ks", ",", "feature_matrix_all", "=", "aux", ".", "eval_metrics_one_dataset", "(", "model", ",", "dataloader", ",", "device", "=", "opt", ".", "device", ",", "k_vals", "=", "opt", ".", "k_vals", ",", "opt", "=", "opt", ")", "\n", "result_str", "=", "', '", ".", "join", "(", "'@{0}: {1:.4f}'", ".", "format", "(", "k", ",", "rec", ")", "for", "k", ",", "rec", "in", "zip", "(", "opt", ".", "k_vals", ",", "recall_at_ks", ")", ")", "\n", "result_str", "=", "'SET {0}: Epoch (Test) {1}: NMI [{2:.4f}] | F1 {3:.4f}| Recall [{4}]'", ".", "format", "(", "i", "+", "1", ",", "epoch", ",", "NMI", ",", "F1", ",", "result_str", ")", "\n", "if", "LOG", "is", "not", "None", ":", "\n", "                ", "if", "save", ":", "\n", "                    ", "if", "not", "len", "(", "LOG", ".", "progress_saver", "[", "'val'", "]", "[", "'Set {} Recall @ 1'", ".", "format", "(", "i", ")", "]", ")", "or", "recall_at_ks", "[", "0", "]", ">", "np", ".", "max", "(", "LOG", ".", "progress_saver", "[", "'val'", "]", "[", "'Set {} Recall @ 1'", ".", "format", "(", "i", ")", "]", ")", ":", "\n", "#Save Checkpoint for specific test set.", "\n", "                        ", "aux", ".", "set_checkpoint", "(", "model", ",", "opt", ",", "LOG", ".", "progress_saver", ",", "LOG", ".", "prop", ".", "save_path", "+", "'/checkpoint_set{}.pth.tar'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "aux", ".", "recover_closest_one_dataset", "(", "feature_matrix_all", ",", "image_paths", ",", "LOG", ".", "prop", ".", "save_path", "+", "'/sample_recoveries_set{}.png'", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "", "", "csv_data", "+=", "[", "NMI", ",", "F1", "]", "+", "recall_at_ks", "\n", "", "print", "(", "result_str", ")", "\n", "", "", "csv_data", ".", "insert", "(", "0", ",", "np", ".", "round", "(", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "LOG", ".", "log", "(", "'val'", ",", "LOG", ".", "metrics_to_log", "[", "'val'", "]", ",", "csv_data", ")", "\n", "return", "csv_data", "[", "2", ":", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.CSV_Writer.__init__": [[205, 212], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "save_path", ",", "columns", ")", ":", "\n", "        ", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "columns", "=", "columns", "\n", "\n", "with", "open", "(", "self", ".", "save_path", ",", "\"a\"", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "\",\"", ")", "\n", "writer", ".", "writerow", "(", "self", ".", "columns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.CSV_Writer.log": [[213, 217], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["", "", "def", "log", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "save_path", ",", "\"a\"", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "','", ")", "\n", "writer", ".", "writerow", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.InfoPlotter.__init__": [[219, 225], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "save_path", ",", "title", "=", "'Training Log'", ",", "figsize", "=", "(", "20", ",", "15", ")", ")", ":", "\n", "        ", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "title", "=", "title", "\n", "self", ".", "figsize", "=", "figsize", "\n", "self", ".", "v_colors", "=", "[", "'r'", ",", "'g'", ",", "'b'", ",", "'y'", ",", "'m'", ",", "'k'", ",", "'c'", "]", "\n", "self", ".", "t_colors", "=", "[", "'k'", ",", "'b'", ",", "'r'", ",", "'g'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.InfoPlotter.make_plot": [[226, 245], ["matplotlib.style.use", "matplotlib.subplots", "range", "axes[].set_title", "axes[].legend", "axes[].tick_params", "axes[].tick_params", "range", "axes[].set_title", "axes[].legend", "axes[].tick_params", "axes[].tick_params", "f.set_size_inches", "f.savefig", "matplotlib.close", "len", "axes[].plot", "len", "axes[].plot"], "methods", ["None"], ["", "def", "make_plot", "(", "self", ",", "t_epochs", ",", "v_epochs", ",", "t_metrics", ",", "v_metrics", ",", "t_labels", ",", "v_labels", ",", "appendix", "=", "None", ")", ":", "\n", "        ", "plt", ".", "style", ".", "use", "(", "'ggplot'", ")", "\n", "f", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "2", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "t_metrics", ")", ")", ":", "\n", "            ", "axes", "[", "0", "]", ".", "plot", "(", "t_epochs", ",", "t_metrics", "[", "i", "]", ",", "'-{}'", ".", "format", "(", "self", ".", "t_colors", "[", "i", "]", ")", ",", "linewidth", "=", "1", ",", "label", "=", "t_labels", "[", "i", "]", ")", "\n", "", "axes", "[", "0", "]", ".", "set_title", "(", "'Training Performance'", ",", "fontsize", "=", "19", ")", "\n", "axes", "[", "0", "]", ".", "legend", "(", "fontsize", "=", "16", ")", "\n", "axes", "[", "0", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'major'", ",", "labelsize", "=", "16", ")", "\n", "axes", "[", "0", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'minor'", ",", "labelsize", "=", "16", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "v_metrics", ")", ")", ":", "\n", "            ", "axes", "[", "1", "]", ".", "plot", "(", "v_epochs", ",", "v_metrics", "[", "i", "]", ",", "'-{}'", ".", "format", "(", "self", ".", "v_colors", "[", "i", "]", ")", ",", "linewidth", "=", "1", ",", "label", "=", "v_labels", "[", "i", "]", ")", "\n", "", "axes", "[", "1", "]", ".", "set_title", "(", "self", ".", "title", ",", "fontsize", "=", "19", ")", "\n", "axes", "[", "1", "]", ".", "legend", "(", "fontsize", "=", "16", ")", "\n", "axes", "[", "1", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'major'", ",", "labelsize", "=", "16", ")", "\n", "axes", "[", "1", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'minor'", ",", "labelsize", "=", "16", ")", "\n", "f", ".", "set_size_inches", "(", "2", "*", "self", ".", "figsize", "[", "0", "]", ",", "self", ".", "figsize", "[", "1", "]", ")", "\n", "savepath", "=", "self", ".", "save_path", "\n", "f", ".", "savefig", "(", "self", ".", "save_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.LOGGER.__init__": [[263, 273], ["auxiliaries.LOGGER.provide_progress_saver", "auxiliaries.set_logging", "auxiliaries.InfoPlotter", "auxiliaries.CSV_Writer", "auxiliaries.InfoPlotter", "metrics_to_log.items", "range"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.provide_progress_saver", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_logging"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "metrics_to_log", ",", "name", "=", "'Basic'", ",", "start_new", "=", "True", ")", ":", "\n", "        ", "self", ".", "prop", "=", "opt", "\n", "self", ".", "metrics_to_log", "=", "metrics_to_log", "\n", "if", "start_new", ":", "set_logging", "(", "opt", ")", "\n", "if", "self", ".", "prop", ".", "dataset", "!=", "'vehicle_id'", ":", "\n", "            ", "self", ".", "info_plot", "=", "InfoPlotter", "(", "opt", ".", "save_path", "+", "'/InfoPlot_{}.svg'", ".", "format", "(", "name", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "info_plot", "=", "{", "'Set {}'", ".", "format", "(", "i", ")", ":", "InfoPlotter", "(", "opt", ".", "save_path", "+", "'/InfoPlot_{}_Set{}.svg'", ".", "format", "(", "name", ",", "i", "+", "1", ")", ")", "for", "i", "in", "range", "(", "3", ")", "}", "\n", "", "self", ".", "progress_saver", "=", "self", ".", "provide_progress_saver", "(", "metrics_to_log", ")", "\n", "self", ".", "csv_loggers", "=", "{", "mode", ":", "CSV_Writer", "(", "opt", ".", "save_path", "+", "'/log_'", "+", "mode", "+", "'_'", "+", "name", "+", "'.csv'", ",", "lognames", ")", "for", "mode", ",", "lognames", "in", "metrics_to_log", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.LOGGER.provide_progress_saver": [[274, 277], ["metrics_to_log.keys"], "methods", ["None"], ["", "def", "provide_progress_saver", "(", "self", ",", "metrics_to_log", ")", ":", "\n", "        ", "Progress_Saver", "=", "{", "key", ":", "{", "sub_key", ":", "[", "]", "for", "sub_key", "in", "metrics_to_log", "[", "key", "]", "}", "for", "key", "in", "metrics_to_log", ".", "keys", "(", ")", "}", "\n", "return", "Progress_Saver", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.LOGGER.log": [[278, 286], ["auxiliaries.LOGGER.csv_loggers[].log", "isinstance", "isinstance", "isinstance", "zip", "[].append"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log"], ["", "def", "log", "(", "self", ",", "main_keys", ",", "metric_keys", ",", "values", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "main_keys", ",", "list", ")", ":", "main_keys", "=", "[", "main_keys", "]", "\n", "if", "not", "isinstance", "(", "metric_keys", ",", "list", ")", ":", "metric_keys", "=", "[", "metric_keys", "]", "\n", "if", "not", "isinstance", "(", "values", ",", "list", ")", ":", "values", "=", "[", "values", "]", "\n", "for", "main_key", "in", "main_keys", ":", "\n", "            ", "for", "value", ",", "metric_key", "in", "zip", "(", "values", ",", "metric_keys", ")", ":", "\n", "                ", "self", ".", "progress_saver", "[", "main_key", "]", "[", "metric_key", "]", ".", "append", "(", "value", ")", "\n", "", "", "self", ".", "csv_loggers", "[", "main_key", "]", ".", "log", "(", "values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.LOGGER.update_info_plot": [[287, 305], ["auxiliaries.LOGGER.info_plot.make_plot", "range", "auxiliaries.LOGGER.info_plot[].make_plot", "auxiliaries.LOGGER.progress_saver[].keys", "auxiliaries.LOGGER.progress_saver[].keys", "auxiliaries.LOGGER.progress_saver[].items", "auxiliaries.LOGGER.progress_saver[].keys", "auxiliaries.LOGGER.progress_saver[].keys", "numpy.max", "auxiliaries.LOGGER.progress_saver[].items", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.make_plot", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.make_plot"], ["", "def", "update_info_plot", "(", "self", ")", ":", "\n", "        ", "t_epochs", "=", "self", ".", "progress_saver", "[", "'val'", "]", "[", "'Epochs'", "]", "\n", "t_loss_list", "=", "[", "self", ".", "progress_saver", "[", "'train'", "]", "[", "'Train Loss'", "]", "]", "\n", "t_legend_handles", "=", "[", "'Train Loss'", "]", "\n", "v_epochs", "=", "self", ".", "progress_saver", "[", "'val'", "]", "[", "'Epochs'", "]", "\n", "if", "self", ".", "prop", ".", "dataset", "!=", "'vehicle_id'", ":", "\n", "            ", "title", "=", "' | '", ".", "join", "(", "key", "+", "': {0:3.3f}'", ".", "format", "(", "np", ".", "max", "(", "item", ")", ")", "for", "key", ",", "item", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "items", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", ")", "\n", "self", ".", "info_plot", ".", "title", "=", "title", "\n", "v_metric_list", "=", "[", "self", ".", "progress_saver", "[", "'val'", "]", "[", "key", "]", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "]", "\n", "v_legend_handles", "=", "[", "key", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "]", "\n", "self", ".", "info_plot", ".", "make_plot", "(", "t_epochs", ",", "v_epochs", ",", "t_loss_list", ",", "v_metric_list", ",", "t_legend_handles", ",", "v_legend_handles", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "title", "=", "' | '", ".", "join", "(", "key", "+", "': {0:3.3f}'", ".", "format", "(", "np", ".", "max", "(", "item", ")", ")", "for", "key", ",", "item", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "items", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", ")", "\n", "self", ".", "info_plot", "[", "'Set {}'", ".", "format", "(", "i", ")", "]", ".", "title", "=", "title", "\n", "v_metric_list", "=", "[", "self", ".", "progress_saver", "[", "'val'", "]", "[", "key", "]", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", "]", "\n", "v_legend_handles", "=", "[", "key", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", "]", "\n", "self", ".", "info_plot", "[", "'Set {}'", ".", "format", "(", "i", ")", "]", ".", "make_plot", "(", "t_epochs", ",", "v_epochs", ",", "t_loss_list", ",", "v_metric_list", ",", "t_legend_handles", ",", "v_legend_handles", ",", "appendix", "=", "'set_{}'", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.args2exp_name": [[10, 13], ["None"], "function", ["None"], ["def", "args2exp_name", "(", "args", ")", ":", "\n", "        ", "exp_name", "=", "f\"{args.dataset}_{args.loss}_{args.lr}_bs{args.bs}_spc{args.samples_per_class}_embed{args.embed_dim}_arch{args.arch}_decay{args.decay}_fclr{args.fc_lr_mul}_anneal{args.sigmoid_temperature}\"", "\n", "return", "exp_name", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.gimme_params": [[14, 18], ["filter", "sum", "model.parameters", "numpy.prod", "p.size"], "function", ["None"], ["", "def", "gimme_params", "(", "model", ")", ":", "\n", "    ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.gimme_save_string": [[19, 31], ["vars", "str", "isinstance", "varx[].items", "str", "str", "str"], "function", ["None"], ["", "def", "gimme_save_string", "(", "opt", ")", ":", "\n", "    ", "varx", "=", "vars", "(", "opt", ")", "\n", "base_str", "=", "''", "\n", "for", "key", "in", "varx", ":", "\n", "        ", "base_str", "+=", "str", "(", "key", ")", "\n", "if", "isinstance", "(", "varx", "[", "key", "]", ",", "dict", ")", ":", "\n", "            ", "for", "sub_key", ",", "sub_item", "in", "varx", "[", "key", "]", ".", "items", "(", ")", ":", "\n", "                ", "base_str", "+=", "'\\n\\t'", "+", "str", "(", "sub_key", ")", "+", "': '", "+", "str", "(", "sub_item", ")", "\n", "", "", "else", ":", "\n", "            ", "base_str", "+=", "'\\n\\t'", "+", "str", "(", "varx", "[", "key", "]", ")", "\n", "", "base_str", "+=", "'\\n\\n'", "\n", "", "return", "base_str", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.f1_score": [[34, 87], ["numpy.zeros", "range", "numpy.zeros", "numpy.unique", "len", "numpy.unique", "len", "numpy.zeros", "range", "numpy.unique", "len", "range", "dict", "range", "numpy.zeros", "range", "range", "range", "range", "len", "len", "numpy.linalg.norm", "len", "numpy.argmin", "len", "len", "dict.update", "numpy.zeros", "range", "range", "numpy.where", "numpy.where", "len", "numpy.where", "comb", "comb", "comb"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update"], ["", "def", "f1_score", "(", "model_generated_cluster_labels", ",", "target_labels", ",", "feature_coll", ",", "computed_centroids", ")", ":", "\n", "    ", "from", "scipy", ".", "special", "import", "comb", "\n", "d", "=", "np", ".", "zeros", "(", "len", "(", "feature_coll", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feature_coll", ")", ")", ":", "\n", "        ", "d", "[", "i", "]", "=", "np", ".", "linalg", ".", "norm", "(", "feature_coll", "[", "i", ",", ":", "]", "-", "computed_centroids", "[", "model_generated_cluster_labels", "[", "i", "]", ",", ":", "]", ")", "\n", "", "labels_pred", "=", "np", ".", "zeros", "(", "len", "(", "feature_coll", ")", ")", "\n", "for", "i", "in", "np", ".", "unique", "(", "model_generated_cluster_labels", ")", ":", "\n", "        ", "index", "=", "np", ".", "where", "(", "model_generated_cluster_labels", "==", "i", ")", "[", "0", "]", "\n", "ind", "=", "np", ".", "argmin", "(", "d", "[", "index", "]", ")", "\n", "cid", "=", "index", "[", "ind", "]", "\n", "labels_pred", "[", "index", "]", "=", "cid", "\n", "", "N", "=", "len", "(", "target_labels", ")", "\n", "avail_labels", "=", "np", ".", "unique", "(", "target_labels", ")", "\n", "n_labels", "=", "len", "(", "avail_labels", ")", "\n", "count_cluster", "=", "np", ".", "zeros", "(", "n_labels", ")", "\n", "for", "i", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "count_cluster", "[", "i", "]", "=", "len", "(", "np", ".", "where", "(", "target_labels", "==", "avail_labels", "[", "i", "]", ")", "[", "0", "]", ")", "\n", "", "keys", "=", "np", ".", "unique", "(", "labels_pred", ")", "\n", "num_item", "=", "len", "(", "keys", ")", "\n", "values", "=", "range", "(", "num_item", ")", "\n", "item_map", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "keys", ")", ")", ":", "\n", "        ", "item_map", ".", "update", "(", "[", "(", "keys", "[", "i", "]", ",", "values", "[", "i", "]", ")", "]", ")", "\n", "", "count_item", "=", "np", ".", "zeros", "(", "num_item", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "index", "=", "item_map", "[", "labels_pred", "[", "i", "]", "]", "\n", "count_item", "[", "index", "]", "=", "count_item", "[", "index", "]", "+", "1", "\n", "", "tp_fp", "=", "0", "\n", "for", "k", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "if", "count_cluster", "[", "k", "]", ">", "1", ":", "\n", "            ", "tp_fp", "=", "tp_fp", "+", "comb", "(", "count_cluster", "[", "k", "]", ",", "2", ")", "\n", "", "", "tp", "=", "0", "\n", "for", "k", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "member", "=", "np", ".", "where", "(", "target_labels", "==", "avail_labels", "[", "k", "]", ")", "[", "0", "]", "\n", "member_ids", "=", "labels_pred", "[", "member", "]", "\n", "count", "=", "np", ".", "zeros", "(", "num_item", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "member", ")", ")", ":", "\n", "            ", "index", "=", "item_map", "[", "member_ids", "[", "j", "]", "]", "\n", "count", "[", "index", "]", "=", "count", "[", "index", "]", "+", "1", "\n", "", "for", "i", "in", "range", "(", "num_item", ")", ":", "\n", "            ", "if", "count", "[", "i", "]", ">", "1", ":", "\n", "                ", "tp", "=", "tp", "+", "comb", "(", "count", "[", "i", "]", ",", "2", ")", "\n", "", "", "", "fp", "=", "tp_fp", "-", "tp", "\n", "count", "=", "0", "\n", "for", "j", "in", "range", "(", "num_item", ")", ":", "\n", "        ", "if", "count_item", "[", "j", "]", ">", "1", ":", "\n", "            ", "count", "=", "count", "+", "comb", "(", "count_item", "[", "j", "]", ",", "2", ")", "\n", "", "", "fn", "=", "count", "-", "tp", "\n", "beta", "=", "1", "\n", "P", "=", "tp", "/", "(", "tp", "+", "fp", ")", "\n", "R", "=", "tp", "/", "(", "tp", "+", "fn", ")", "\n", "F1", "=", "(", "beta", "*", "beta", "+", "1", ")", "*", "P", "*", "R", "/", "(", "beta", "*", "beta", "*", "P", "+", "R", ")", "\n", "return", "F1", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.eval_metrics_one_dataset": [[88, 129], ["torch.cuda.empty_cache", "model.eval", "len", "torch.no_grad", "tqdm.tqdm", "enumerate", "numpy.hstack().reshape", "numpy.vstack().astype", "torch.cuda.empty_cache", "faiss.IndexFlatL2", "faiss.Clustering", "faiss.Clustering.train", "faiss.vector_float_to_array().reshape", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "sklearn.metrics.cluster.normalized_mutual_info_score", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "print", "print", "print", "print", "np.hstack().reshape.extend", "model", "np.vstack().astype.extend", "model_generated_cluster_labels.reshape", "np.hstack().reshape.reshape", "int", "np.hstack().reshape.reshape", "recall_all_k.append", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "numpy.hstack", "numpy.vstack", "faiss.vector_float_to_array", "numpy.sum", "len", "numpy.max", "target.numpy", "model.cpu().detach().numpy", "zip", "model.cpu().detach", "model.cpu"], "function", ["None"], ["", "def", "eval_metrics_one_dataset", "(", "model", ",", "test_dataloader", ",", "device", ",", "k_vals", ",", "opt", ")", ":", "\n", "    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "_", "=", "model", ".", "eval", "(", ")", "\n", "n_classes", "=", "len", "(", "test_dataloader", ".", "dataset", ".", "avail_classes", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "target_labels", ",", "feature_coll", "=", "[", "]", ",", "[", "]", "\n", "final_iter", "=", "tqdm", "(", "test_dataloader", ",", "desc", "=", "'Computing Evaluation Metrics...'", ")", "\n", "image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "test_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "final_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "target_labels", "=", "np", ".", "hstack", "(", "target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "feature_coll", "=", "np", ".", "vstack", "(", "feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "cpu_cluster_index", "=", "faiss", ".", "IndexFlatL2", "(", "feature_coll", ".", "shape", "[", "-", "1", "]", ")", "\n", "kmeans", "=", "faiss", ".", "Clustering", "(", "feature_coll", ".", "shape", "[", "-", "1", "]", ",", "n_classes", ")", "\n", "kmeans", ".", "niter", "=", "20", "\n", "kmeans", ".", "min_points_per_centroid", "=", "1", "\n", "kmeans", ".", "max_points_per_centroid", "=", "1000000000", "\n", "kmeans", ".", "train", "(", "feature_coll", ",", "cpu_cluster_index", ")", "\n", "computed_centroids", "=", "faiss", ".", "vector_float_to_array", "(", "kmeans", ".", "centroids", ")", ".", "reshape", "(", "n_classes", ",", "feature_coll", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "computed_centroids", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "computed_centroids", ")", "\n", "_", ",", "model_generated_cluster_labels", "=", "faiss_search_index", ".", "search", "(", "feature_coll", ",", "1", ")", "\n", "NMI", "=", "metrics", ".", "cluster", ".", "normalized_mutual_info_score", "(", "model_generated_cluster_labels", ".", "reshape", "(", "-", "1", ")", ",", "target_labels", ".", "reshape", "(", "-", "1", ")", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "feature_coll", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "feature_coll", ")", "\n", "_", ",", "k_closest_points", "=", "faiss_search_index", ".", "search", "(", "feature_coll", ",", "int", "(", "np", ".", "max", "(", "k_vals", ")", "+", "1", ")", ")", "\n", "k_closest_classes", "=", "target_labels", ".", "reshape", "(", "-", "1", ")", "[", "k_closest_points", "[", ":", ",", "1", ":", "]", "]", "\n", "print", "(", "'computing recalls'", ")", "\n", "recall_all_k", "=", "[", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "            ", "recall_at_k", "=", "np", ".", "sum", "(", "[", "1", "for", "target", ",", "recalled_predictions", "in", "zip", "(", "target_labels", ",", "k_closest_classes", ")", "if", "target", "in", "recalled_predictions", "[", ":", "k", "]", "]", ")", "/", "len", "(", "target_labels", ")", "\n", "recall_all_k", ".", "append", "(", "recall_at_k", ")", "\n", "", "print", "(", "'finished recalls'", ")", "\n", "print", "(", "'computing F1'", ")", "\n", "F1", "=", "0", "\n", "print", "(", "'finished computing f1'", ")", "\n", "", "return", "F1", ",", "NMI", ",", "recall_all_k", ",", "feature_coll", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.eval_metrics_query_and_gallery_dataset": [[130, 178], ["torch.cuda.empty_cache", "model.eval", "len", "torch.no_grad", "tqdm.tqdm", "enumerate", "tqdm.tqdm", "enumerate", "torch.cuda.empty_cache", "numpy.concatenate", "numpy.concatenate", "faiss.IndexFlatL2", "faiss.Clustering", "faiss.Clustering.train", "faiss.vector_float_to_array().reshape", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "sklearn.metrics.cluster.normalized_mutual_info_score", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "auxiliaries.f1_score", "query_target_labels.extend", "model", "query_feature_coll.extend", "gallery_target_labels.extend", "model", "gallery_feature_coll.extend", "numpy.hstack().reshape", "numpy.vstack().astype", "numpy.hstack().reshape", "numpy.vstack().astype", "model_generated_cluster_labels.reshape", "np.concatenate.reshape", "int", "gallery_target_labels.reshape", "recall_all_k.append", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "faiss.vector_float_to_array", "numpy.max", "numpy.sum", "len", "numpy.hstack", "numpy.vstack", "numpy.hstack", "numpy.vstack", "zip", "target.numpy", "model.cpu().detach().numpy", "target.numpy", "model.cpu().detach().numpy", "zip", "model.cpu().detach", "model.cpu().detach", "model.cpu", "model.cpu"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.f1_score"], ["", "def", "eval_metrics_query_and_gallery_dataset", "(", "model", ",", "query_dataloader", ",", "gallery_dataloader", ",", "device", ",", "k_vals", ",", "opt", ")", ":", "\n", "    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "_", "=", "model", ".", "eval", "(", ")", "\n", "n_classes", "=", "len", "(", "query_dataloader", ".", "dataset", ".", "avail_classes", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "query_target_labels", ",", "query_feature_coll", "=", "[", "]", ",", "[", "]", "\n", "query_image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "query_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "query_iter", "=", "tqdm", "(", "query_dataloader", ",", "desc", "=", "'Extraction Query Features'", ")", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "query_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "query_target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "query_feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "gallery_target_labels", ",", "gallery_feature_coll", "=", "[", "]", ",", "[", "]", "\n", "gallery_image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "gallery_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "gallery_iter", "=", "tqdm", "(", "gallery_dataloader", ",", "desc", "=", "'Extraction Gallery Features'", ")", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "gallery_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "gallery_target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "gallery_feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "query_target_labels", ",", "query_feature_coll", "=", "np", ".", "hstack", "(", "query_target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "np", ".", "vstack", "(", "query_feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "gallery_target_labels", ",", "gallery_feature_coll", "=", "np", ".", "hstack", "(", "gallery_target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "np", ".", "vstack", "(", "gallery_feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "stackset", "=", "np", ".", "concatenate", "(", "[", "query_feature_coll", ",", "gallery_feature_coll", "]", ",", "axis", "=", "0", ")", "\n", "stacklabels", "=", "np", ".", "concatenate", "(", "[", "query_target_labels", ",", "gallery_target_labels", "]", ",", "axis", "=", "0", ")", "\n", "cpu_cluster_index", "=", "faiss", ".", "IndexFlatL2", "(", "stackset", ".", "shape", "[", "-", "1", "]", ")", "\n", "kmeans", "=", "faiss", ".", "Clustering", "(", "stackset", ".", "shape", "[", "-", "1", "]", ",", "n_classes", ")", "\n", "kmeans", ".", "niter", "=", "20", "\n", "kmeans", ".", "min_points_per_centroid", "=", "1", "\n", "kmeans", ".", "max_points_per_centroid", "=", "1000000000", "\n", "kmeans", ".", "train", "(", "stackset", ",", "cpu_cluster_index", ")", "\n", "computed_centroids", "=", "faiss", ".", "vector_float_to_array", "(", "kmeans", ".", "centroids", ")", ".", "reshape", "(", "n_classes", ",", "stackset", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "computed_centroids", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "computed_centroids", ")", "\n", "_", ",", "model_generated_cluster_labels", "=", "faiss_search_index", ".", "search", "(", "stackset", ",", "1", ")", "\n", "NMI", "=", "metrics", ".", "cluster", ".", "normalized_mutual_info_score", "(", "model_generated_cluster_labels", ".", "reshape", "(", "-", "1", ")", ",", "stacklabels", ".", "reshape", "(", "-", "1", ")", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "gallery_feature_coll", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "gallery_feature_coll", ")", "\n", "_", ",", "k_closest_points", "=", "faiss_search_index", ".", "search", "(", "query_feature_coll", ",", "int", "(", "np", ".", "max", "(", "k_vals", ")", ")", ")", "\n", "k_closest_classes", "=", "gallery_target_labels", ".", "reshape", "(", "-", "1", ")", "[", "k_closest_points", "]", "\n", "recall_all_k", "=", "[", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "            ", "recall_at_k", "=", "np", ".", "sum", "(", "[", "1", "for", "target", ",", "recalled_predictions", "in", "zip", "(", "query_target_labels", ",", "k_closest_classes", ")", "if", "target", "in", "recalled_predictions", "[", ":", "k", "]", "]", ")", "/", "len", "(", "query_target_labels", ")", "\n", "recall_all_k", ".", "append", "(", "recall_at_k", ")", "\n", "", "recall_str", "=", "', '", ".", "join", "(", "'@{0}: {1:.4f}'", ".", "format", "(", "k", ",", "rec", ")", "for", "k", ",", "rec", "in", "zip", "(", "k_vals", ",", "recall_all_k", ")", ")", "\n", "F1", "=", "f1_score", "(", "model_generated_cluster_labels", ",", "stacklabels", ",", "stackset", ",", "computed_centroids", ")", "\n", "", "return", "F1", ",", "NMI", ",", "recall_all_k", ",", "query_feature_coll", ",", "gallery_feature_coll", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.recover_closest_one_dataset": [[179, 199], ["numpy.array", "numpy.random.choice", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "matplotlib.subplots", "enumerate", "f.set_size_inches", "f.tight_layout", "f.savefig", "matplotlib.close", "numpy.arange", "zip", "ax.imshow", "ax.set_xticks", "ax.set_yticks", "len", "axes.reshape", "sample_paths.reshape", "numpy.array", "ax.axvline", "ax.axvline", "PIL.Image.open"], "function", ["None"], ["", "def", "recover_closest_one_dataset", "(", "feature_matrix_all", ",", "image_paths", ",", "save_path", ",", "n_image_samples", "=", "10", ",", "n_closest", "=", "3", ")", ":", "\n", "    ", "image_paths", "=", "np", ".", "array", "(", "[", "x", "[", "0", "]", "for", "x", "in", "image_paths", "]", ")", "\n", "sample_idxs", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "feature_matrix_all", ")", ")", ",", "n_image_samples", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "feature_matrix_all", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "feature_matrix_all", ")", "\n", "_", ",", "closest_feature_idxs", "=", "faiss_search_index", ".", "search", "(", "feature_matrix_all", ",", "n_closest", "+", "1", ")", "\n", "sample_paths", "=", "image_paths", "[", "closest_feature_idxs", "]", "[", "sample_idxs", "]", "\n", "f", ",", "axes", "=", "plt", ".", "subplots", "(", "n_image_samples", ",", "n_closest", "+", "1", ")", "\n", "for", "i", ",", "(", "ax", ",", "plot_path", ")", "in", "enumerate", "(", "zip", "(", "axes", ".", "reshape", "(", "-", "1", ")", ",", "sample_paths", ".", "reshape", "(", "-", "1", ")", ")", ")", ":", "\n", "        ", "ax", ".", "imshow", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "plot_path", ")", ")", ")", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "if", "i", "%", "(", "n_closest", "+", "1", ")", ":", "\n", "            ", "ax", ".", "axvline", "(", "x", "=", "0", ",", "color", "=", "'g'", ",", "linewidth", "=", "13", ")", "\n", "", "else", ":", "\n", "            ", "ax", ".", "axvline", "(", "x", "=", "0", ",", "color", "=", "'r'", ",", "linewidth", "=", "13", ")", "\n", "", "", "f", ".", "set_size_inches", "(", "10", ",", "20", ")", "\n", "f", ".", "tight_layout", "(", ")", "\n", "f", ".", "savefig", "(", "save_path", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.set_checkpoint": [[200, 203], ["torch.save", "model.state_dict"], "function", ["None"], ["", "def", "set_checkpoint", "(", "model", ",", "opt", ",", "progress_saver", ",", "savepath", ")", ":", "\n", "    ", "torch", ".", "save", "(", "{", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "'opt'", ":", "opt", ",", "\n", "'progress'", ":", "progress_saver", "}", ",", "savepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.set_logging": [[246, 261], ["os.path.exists", "os.makedirs", "pickle.dump", "datetime.datetime.now", "open", "f.write", "open", "str", "auxiliaries.gimme_save_string", "opt.dataset.upper", "opt.arch.upper"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.dump", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.gimme_save_string"], ["", "", "def", "set_logging", "(", "opt", ")", ":", "\n", "    ", "checkfolder", "=", "opt", ".", "save_path", "+", "'/'", "+", "opt", ".", "savename", "\n", "if", "opt", ".", "savename", "==", "''", ":", "\n", "        ", "date", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "time_string", "=", "'{}-{}-{}-{}-{}-{}'", ".", "format", "(", "date", ".", "year", ",", "date", ".", "month", ",", "date", ".", "day", ",", "date", ".", "hour", ",", "date", ".", "minute", ",", "date", ".", "second", ")", "\n", "checkfolder", "=", "opt", ".", "save_path", "+", "'/{}_{}_'", ".", "format", "(", "opt", ".", "dataset", ".", "upper", "(", ")", ",", "opt", ".", "arch", ".", "upper", "(", ")", ")", "+", "time_string", "\n", "", "counter", "=", "1", "\n", "while", "os", ".", "path", ".", "exists", "(", "checkfolder", ")", ":", "\n", "        ", "checkfolder", "=", "opt", ".", "save_path", "+", "'/'", "+", "opt", ".", "savename", "+", "'_'", "+", "str", "(", "counter", ")", "\n", "counter", "+=", "1", "\n", "", "os", ".", "makedirs", "(", "checkfolder", ")", "\n", "opt", ".", "save_path", "=", "checkfolder", "\n", "with", "open", "(", "opt", ".", "save_path", "+", "'/Parameter_Info.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "gimme_save_string", "(", "opt", ")", ")", "\n", "", "pkl", ".", "dump", "(", "opt", ",", "open", "(", "opt", ".", "save_path", "+", "\"/hypa.pkl\"", ",", "\"wb\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.metrics_to_examine": [[306, 319], ["range"], "function", ["None"], ["", "", "", "", "def", "metrics_to_examine", "(", "dataset", ",", "k_vals", ")", ":", "\n", "    ", "metric_dict", "=", "{", "'train'", ":", "[", "'Epochs'", ",", "'Time'", ",", "'Train Loss'", "]", "}", "\n", "if", "dataset", "==", "'vehicle_id'", ":", "\n", "        ", "metric_dict", "[", "'val'", "]", "=", "[", "'Epochs'", ",", "'Time'", "]", "\n", "#Vehicle_ID uses three test sets", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "metric_dict", "[", "'val'", "]", "+=", "[", "'Set {} NMI'", ".", "format", "(", "i", ")", ",", "'Set {} F1'", ".", "format", "(", "i", ")", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "                ", "metric_dict", "[", "'val'", "]", "+=", "[", "'Set {} Recall @ {}'", ".", "format", "(", "i", ",", "k", ")", "]", "\n", "", "", "", "else", ":", "\n", "        ", "metric_dict", "[", "'val'", "]", "=", "[", "'Epochs'", ",", "'Time'", ",", "'NMI'", ",", "'F1'", "]", "\n", "metric_dict", "[", "'val'", "]", "+=", "[", "'Recall @ {}'", ".", "format", "(", "k", ")", "for", "k", "in", "k_vals", "]", "\n", "", "return", "metric_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.run_kmeans": [[320, 327], ["faiss.Kmeans", "faiss.Kmeans.train", "faiss.Kmeans.index.search"], "function", ["None"], ["", "def", "run_kmeans", "(", "features", ",", "n_cluster", ")", ":", "\n", "    ", "n_samples", ",", "dim", "=", "features", ".", "shape", "\n", "kmeans", "=", "faiss", ".", "Kmeans", "(", "dim", ",", "n_cluster", ")", "\n", "kmeans", ".", "n_iter", ",", "kmeans", ".", "min_points_per_centroid", ",", "kmeans", ".", "max_points_per_centroid", "=", "20", ",", "5", ",", "1000000000", "\n", "kmeans", ".", "train", "(", "features", ")", "\n", "_", ",", "cluster_assignments", "=", "kmeans", ".", "index", ".", "search", "(", "features", ",", "1", ")", "\n", "return", "cluster_assignments", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries.save_graph": [[328, 401], ["torch.randn().to", "model", "isinstance", "auxiliaries.save_graph.make_dot"], "function", ["None"], ["", "def", "save_graph", "(", "opt", ",", "model", ")", ":", "\n", "    ", "inp", "=", "torch", ".", "randn", "(", "(", "1", ",", "3", ",", "224", ",", "224", ")", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "network_output", "=", "model", "(", "inp", ")", "\n", "if", "isinstance", "(", "network_output", ",", "dict", ")", ":", "network_output", "=", "network_output", "[", "'Class'", "]", "\n", "from", "graphviz", "import", "Digraph", "\n", "def", "make_dot", "(", "var", ",", "savename", ",", "params", "=", "None", ")", ":", "\n", "        ", "if", "params", "is", "not", "None", ":", "\n", "            ", "assert", "all", "(", "isinstance", "(", "p", ",", "Variable", ")", "for", "p", "in", "params", ".", "values", "(", ")", ")", "\n", "param_map", "=", "{", "id", "(", "v", ")", ":", "k", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", "\n", "", "node_attr", "=", "dict", "(", "style", "=", "'filled'", ",", "\n", "shape", "=", "'box'", ",", "\n", "align", "=", "'left'", ",", "\n", "fontsize", "=", "'6'", ",", "\n", "ranksep", "=", "'0.1'", ",", "\n", "height", "=", "'0.6'", ",", "\n", "width", "=", "'1'", ")", "\n", "dot", "=", "Digraph", "(", "node_attr", "=", "node_attr", ",", "format", "=", "'svg'", ",", "graph_attr", "=", "dict", "(", "size", "=", "\"40,10\"", ",", "rankdir", "=", "'LR'", ",", "rank", "=", "'same'", ")", ")", "\n", "seen", "=", "set", "(", ")", "\n", "def", "size_to_str", "(", "size", ")", ":", "\n", "            ", "return", "'('", "+", "(", "', '", ")", ".", "join", "(", "[", "'%d'", "%", "v", "for", "v", "in", "size", "]", ")", "+", "')'", "\n", "\n", "", "def", "add_nodes", "(", "var", ")", ":", "\n", "            ", "replacements", "=", "[", "'Backward'", ",", "'Th'", ",", "'Cudnn'", "]", "\n", "color_assigns", "=", "{", "'Convolution'", ":", "'orange'", ",", "\n", "'ConvolutionTranspose'", ":", "'lightblue'", ",", "\n", "'Add'", ":", "'red'", ",", "\n", "'Cat'", ":", "'green'", ",", "\n", "'Softmax'", ":", "'yellow'", ",", "\n", "'Sigmoid'", ":", "'yellow'", ",", "\n", "'Copys'", ":", "'yellow'", "}", "\n", "if", "var", "not", "in", "seen", ":", "\n", "                ", "op1", "=", "torch", ".", "is_tensor", "(", "var", ")", "\n", "op2", "=", "not", "torch", ".", "is_tensor", "(", "var", ")", "and", "str", "(", "type", "(", "var", ")", ".", "__name__", ")", "!=", "'AccumulateGrad'", "\n", "text", "=", "str", "(", "type", "(", "var", ")", ".", "__name__", ")", "\n", "for", "rep", "in", "replacements", ":", "\n", "                    ", "text", "=", "text", ".", "replace", "(", "rep", ",", "''", ")", "\n", "", "color", "=", "color_assigns", "[", "text", "]", "if", "text", "in", "color_assigns", ".", "keys", "(", ")", "else", "'gray'", "\n", "if", "'Pool'", "in", "text", ":", "color", "=", "'lightblue'", "\n", "if", "op1", "or", "op2", ":", "\n", "                    ", "if", "hasattr", "(", "var", ",", "'next_functions'", ")", ":", "\n", "                        ", "count", "=", "0", "\n", "for", "i", ",", "u", "in", "enumerate", "(", "var", ".", "next_functions", ")", ":", "\n", "                            ", "if", "str", "(", "type", "(", "u", "[", "0", "]", ")", ".", "__name__", ")", "==", "'AccumulateGrad'", ":", "\n", "                                ", "if", "count", "==", "0", ":", "attr_text", "=", "'\\nParameter Sizes:\\n'", "\n", "attr_text", "+=", "size_to_str", "(", "u", "[", "0", "]", ".", "variable", ".", "size", "(", ")", ")", "\n", "count", "+=", "1", "\n", "attr_text", "+=", "' '", "\n", "", "", "if", "count", ">", "0", ":", "text", "+=", "attr_text", "\n", "", "", "if", "op1", ":", "\n", "                    ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "size_to_str", "(", "var", ".", "size", "(", ")", ")", ",", "fillcolor", "=", "'orange'", ")", "\n", "", "if", "op2", ":", "\n", "                    ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "text", ",", "fillcolor", "=", "color", ")", "\n", "", "seen", ".", "add", "(", "var", ")", "\n", "if", "op1", "or", "op2", ":", "\n", "                    ", "if", "hasattr", "(", "var", ",", "'next_functions'", ")", ":", "\n", "                        ", "for", "u", "in", "var", ".", "next_functions", ":", "\n", "                            ", "if", "u", "[", "0", "]", "is", "not", "None", ":", "\n", "                                ", "if", "str", "(", "type", "(", "u", "[", "0", "]", ")", ".", "__name__", ")", "!=", "'AccumulateGrad'", ":", "\n", "                                    ", "dot", ".", "edge", "(", "str", "(", "id", "(", "u", "[", "0", "]", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "u", "[", "0", "]", ")", "\n", "", "", "", "", "if", "hasattr", "(", "var", ",", "'saved_tensors'", ")", ":", "\n", "                        ", "for", "t", "in", "var", ".", "saved_tensors", ":", "\n", "                            ", "dot", ".", "edge", "(", "str", "(", "id", "(", "t", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "t", ")", "\n", "", "", "", "", "", "add_nodes", "(", "var", ".", "grad_fn", ")", "\n", "dot", ".", "save", "(", "savename", ")", "\n", "return", "dot", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "save_path", ")", ":", "\n", "        ", "raise", "Exception", "(", "'No save folder {} available!'", ".", "format", "(", "opt", ".", "save_path", ")", ")", "\n", "", "viz_graph", "=", "make_dot", "(", "network_output", ",", "opt", ".", "save_path", "+", "\"/Network_Graphs\"", "+", "\"/{}_network_graph\"", ".", "format", "(", "opt", ".", "arch", ")", ")", "\n", "viz_graph", ".", "format", "=", "'svg'", "\n", "viz_graph", ".", "render", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.mixup.pos_mixup": [[9, 133], ["int", "range", "range", "torch.cat", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "numpy.random.rand", "torch.unsqueeze", "torch.cat", "torch.cat"], "function", ["None"], ["def", "pos_mixup", "(", "tensor", ",", "num_id", ")", ":", "\n", "    ", "batch_size", "=", "tensor", ".", "shape", "[", "0", "]", "\n", "num_pos", "=", "int", "(", "batch_size", "/", "num_id", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "batch_size", ",", "num_pos", ")", ":", "\n", "        ", "if", "num_pos", "==", "6", ":", "\n", "            ", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_1", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "\n", "fake_1", "=", "torch", ".", "unsqueeze", "(", "fake_1", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_2", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_2", "=", "torch", ".", "unsqueeze", "(", "fake_2", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_3", "=", "alpha", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_3", "=", "torch", ".", "unsqueeze", "(", "fake_3", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_4", "=", "alpha", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "4", ",", ":", "]", "\n", "fake_4", "=", "torch", ".", "unsqueeze", "(", "fake_4", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_5", "=", "alpha", "*", "tensor", "[", "i", "+", "4", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "5", ",", ":", "]", "\n", "fake_5", "=", "torch", ".", "unsqueeze", "(", "fake_5", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_6", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_6", "=", "torch", ".", "unsqueeze", "(", "fake_6", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_7", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_7", "=", "torch", ".", "unsqueeze", "(", "fake_7", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_8", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "4", ",", ":", "]", "\n", "fake_8", "=", "torch", ".", "unsqueeze", "(", "fake_8", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_9", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "5", ",", ":", "]", "\n", "fake_9", "=", "torch", ".", "unsqueeze", "(", "fake_9", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_10", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_10", "=", "torch", ".", "unsqueeze", "(", "fake_10", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_11", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "4", ",", ":", "]", "\n", "fake_11", "=", "torch", ".", "unsqueeze", "(", "fake_11", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_12", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "5", ",", ":", "]", "\n", "fake_12", "=", "torch", ".", "unsqueeze", "(", "fake_12", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_13", "=", "alpha", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "4", ",", ":", "]", "\n", "fake_13", "=", "torch", ".", "unsqueeze", "(", "fake_13", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_14", "=", "alpha", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "5", ",", ":", "]", "\n", "fake_14", "=", "torch", ".", "unsqueeze", "(", "fake_14", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_15", "=", "alpha", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "5", ",", ":", "]", "\n", "fake_15", "=", "torch", ".", "unsqueeze", "(", "fake_15", ",", "0", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "fake_1", ",", "fake_2", ",", "fake_3", ",", "fake_4", ",", "fake_5", ",", "fake_6", ",", "fake_7", ",", "fake_8", ",", "fake_9", ",", "fake_10", ",", "fake_11", ",", "fake_12", ",", "fake_13", ",", "fake_14", ",", "fake_15", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "tensor_fake", ",", "fake_1", ",", "fake_2", ",", "fake_3", ",", "fake_4", ",", "fake_5", ",", "fake_6", ",", "fake_7", ",", "fake_8", ",", "fake_9", ",", "fake_10", ",", "fake_11", ",", "fake_12", ",", "fake_13", ",", "fake_14", ",", "fake_15", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "if", "num_pos", "==", "4", ":", "\n", "            ", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_1", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "\n", "fake_1", "=", "torch", ".", "unsqueeze", "(", "fake_1", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_2", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_2", "=", "torch", ".", "unsqueeze", "(", "fake_2", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_3", "=", "alpha", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_3", "=", "torch", ".", "unsqueeze", "(", "fake_3", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_4", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_4", "=", "torch", ".", "unsqueeze", "(", "fake_4", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_5", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_5", "=", "torch", ".", "unsqueeze", "(", "fake_5", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_6", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "3", ",", ":", "]", "\n", "fake_6", "=", "torch", ".", "unsqueeze", "(", "fake_6", ",", "0", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "fake_1", ",", "fake_2", ",", "fake_3", ",", "fake_4", ",", "fake_5", ",", "fake_6", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "tensor_fake", ",", "fake_1", ",", "fake_2", ",", "fake_3", ",", "fake_4", ",", "fake_5", ",", "fake_6", ")", ",", "dim", "=", "0", ")", "\n", "", "", "elif", "num_pos", "==", "3", ":", "\n", "            ", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_1", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "\n", "fake_1", "=", "torch", ".", "unsqueeze", "(", "fake_1", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_2", "=", "alpha", "*", "tensor", "[", "i", "+", "1", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_2", "=", "torch", ".", "unsqueeze", "(", "fake_2", ",", "0", ")", "\n", "\n", "alpha", "=", "np", ".", "random", ".", "rand", "(", ")", "\n", "fake_3", "=", "alpha", "*", "tensor", "[", "i", ",", ":", "]", "+", "(", "1.", "-", "alpha", ")", "*", "tensor", "[", "i", "+", "2", ",", ":", "]", "\n", "fake_3", "=", "torch", ".", "unsqueeze", "(", "fake_3", ",", "0", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "fake_1", ",", "fake_2", ",", "fake_3", ")", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "tensor_fake", "=", "torch", ".", "cat", "(", "(", "tensor_fake", ",", "fake_1", ",", "fake_2", ",", "fake_3", ")", ",", "dim", "=", "0", ")", "\n", "", "", "", "ind", "=", "num_pos", "\n", "if", "num_pos", "==", "6", ":", "num_fakes", "=", "15", "\n", "elif", "num_pos", "==", "4", ":", "num_fakes", "=", "6", "\n", "elif", "num_pos", "==", "3", ":", "num_fakes", "=", "3", "\n", "for", "i", "in", "range", "(", "0", ",", "tensor_fake", ".", "shape", "[", "0", "]", ",", "num_fakes", ")", ":", "\n", "        ", "tensor", "=", "torch", ".", "cat", "(", "(", "tensor", "[", ":", "ind", ",", ":", "]", ",", "tensor_fake", "[", "i", ":", "i", "+", "num_fakes", ",", ":", "]", ",", "tensor", "[", "ind", ":", ",", ":", "]", ")", ",", "dim", "=", "0", ")", "\n", "ind", "+=", "num_pos", "+", "num_fakes", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.CSV_Writer.__init__": [[191, 197], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "save_path", ",", "columns", ")", ":", "\n", "        ", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "columns", "=", "columns", "\n", "with", "open", "(", "self", ".", "save_path", ",", "\"a\"", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "\",\"", ")", "\n", "writer", ".", "writerow", "(", "self", ".", "columns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.CSV_Writer.log": [[198, 202], ["open", "csv.writer", "csv.writer.writerow"], "methods", ["None"], ["", "", "def", "log", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "save_path", ",", "\"a\"", ")", "as", "csv_file", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "csv_file", ",", "delimiter", "=", "','", ")", "\n", "writer", ".", "writerow", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.__init__": [[204, 211], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "save_path", ",", "title", "=", "'Training Log'", ",", "figsize", "=", "(", "20", ",", "15", ")", ")", ":", "\n", "        ", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "title", "=", "title", "\n", "self", ".", "figsize", "=", "figsize", "\n", "self", ".", "v_colors", "=", "[", "'r'", ",", "'g'", ",", "'b'", ",", "'y'", ",", "'m'", ",", "'k'", ",", "'c'", "]", "\n", "#Colors for training lines", "\n", "self", ".", "t_colors", "=", "[", "'k'", ",", "'b'", ",", "'r'", ",", "'g'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.make_plot": [[212, 231], ["matplotlib.style.use", "matplotlib.subplots", "range", "axes[].set_title", "axes[].legend", "axes[].tick_params", "axes[].tick_params", "range", "axes[].set_title", "axes[].legend", "axes[].tick_params", "axes[].tick_params", "f.set_size_inches", "f.savefig", "matplotlib.close", "len", "axes[].plot", "len", "axes[].plot"], "methods", ["None"], ["", "def", "make_plot", "(", "self", ",", "t_epochs", ",", "v_epochs", ",", "t_metrics", ",", "v_metrics", ",", "t_labels", ",", "v_labels", ",", "appendix", "=", "None", ")", ":", "\n", "        ", "plt", ".", "style", ".", "use", "(", "'ggplot'", ")", "\n", "f", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "2", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "t_metrics", ")", ")", ":", "\n", "            ", "axes", "[", "0", "]", ".", "plot", "(", "t_epochs", ",", "t_metrics", "[", "i", "]", ",", "'-{}'", ".", "format", "(", "self", ".", "t_colors", "[", "i", "]", ")", ",", "linewidth", "=", "1", ",", "label", "=", "t_labels", "[", "i", "]", ")", "\n", "", "axes", "[", "0", "]", ".", "set_title", "(", "'Training Performance'", ",", "fontsize", "=", "19", ")", "\n", "axes", "[", "0", "]", ".", "legend", "(", "fontsize", "=", "16", ")", "\n", "axes", "[", "0", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'major'", ",", "labelsize", "=", "16", ")", "\n", "axes", "[", "0", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'minor'", ",", "labelsize", "=", "16", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "v_metrics", ")", ")", ":", "\n", "            ", "axes", "[", "1", "]", ".", "plot", "(", "v_epochs", ",", "v_metrics", "[", "i", "]", ",", "'-{}'", ".", "format", "(", "self", ".", "v_colors", "[", "i", "]", ")", ",", "linewidth", "=", "1", ",", "label", "=", "v_labels", "[", "i", "]", ")", "\n", "", "axes", "[", "1", "]", ".", "set_title", "(", "self", ".", "title", ",", "fontsize", "=", "19", ")", "\n", "axes", "[", "1", "]", ".", "legend", "(", "fontsize", "=", "16", ")", "\n", "axes", "[", "1", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'major'", ",", "labelsize", "=", "16", ")", "\n", "axes", "[", "1", "]", ".", "tick_params", "(", "axis", "=", "'both'", ",", "which", "=", "'minor'", ",", "labelsize", "=", "16", ")", "\n", "f", ".", "set_size_inches", "(", "2", "*", "self", ".", "figsize", "[", "0", "]", ",", "self", ".", "figsize", "[", "1", "]", ")", "\n", "savepath", "=", "self", ".", "save_path", "\n", "f", ".", "savefig", "(", "self", ".", "save_path", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.__init__": [[249, 259], ["auxiliaries_nofaiss.LOGGER.provide_progress_saver", "auxiliaries_nofaiss.set_logging", "auxiliaries_nofaiss.InfoPlotter", "auxiliaries_nofaiss.CSV_Writer", "auxiliaries_nofaiss.InfoPlotter", "metrics_to_log.items", "range"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.provide_progress_saver", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_logging"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "metrics_to_log", ",", "name", "=", "'Basic'", ",", "start_new", "=", "True", ")", ":", "\n", "        ", "self", ".", "prop", "=", "opt", "\n", "self", ".", "metrics_to_log", "=", "metrics_to_log", "\n", "if", "start_new", ":", "set_logging", "(", "opt", ")", "\n", "if", "self", ".", "prop", ".", "dataset", "!=", "'vehicle_id'", ":", "\n", "            ", "self", ".", "info_plot", "=", "InfoPlotter", "(", "opt", ".", "save_path", "+", "'/InfoPlot_{}.svg'", ".", "format", "(", "name", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "info_plot", "=", "{", "'Set {}'", ".", "format", "(", "i", ")", ":", "InfoPlotter", "(", "opt", ".", "save_path", "+", "'/InfoPlot_{}_Set{}.svg'", ".", "format", "(", "name", ",", "i", "+", "1", ")", ")", "for", "i", "in", "range", "(", "3", ")", "}", "\n", "", "self", ".", "progress_saver", "=", "self", ".", "provide_progress_saver", "(", "metrics_to_log", ")", "\n", "self", ".", "csv_loggers", "=", "{", "mode", ":", "CSV_Writer", "(", "opt", ".", "save_path", "+", "'/log_'", "+", "mode", "+", "'_'", "+", "name", "+", "'.csv'", ",", "lognames", ")", "for", "mode", ",", "lognames", "in", "metrics_to_log", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.provide_progress_saver": [[260, 263], ["metrics_to_log.keys"], "methods", ["None"], ["", "def", "provide_progress_saver", "(", "self", ",", "metrics_to_log", ")", ":", "\n", "        ", "Progress_Saver", "=", "{", "key", ":", "{", "sub_key", ":", "[", "]", "for", "sub_key", "in", "metrics_to_log", "[", "key", "]", "}", "for", "key", "in", "metrics_to_log", ".", "keys", "(", ")", "}", "\n", "return", "Progress_Saver", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log": [[264, 272], ["auxiliaries_nofaiss.LOGGER.csv_loggers[].log", "isinstance", "isinstance", "isinstance", "zip", "[].append"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.log"], ["", "def", "log", "(", "self", ",", "main_keys", ",", "metric_keys", ",", "values", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "main_keys", ",", "list", ")", ":", "main_keys", "=", "[", "main_keys", "]", "\n", "if", "not", "isinstance", "(", "metric_keys", ",", "list", ")", ":", "metric_keys", "=", "[", "metric_keys", "]", "\n", "if", "not", "isinstance", "(", "values", ",", "list", ")", ":", "values", "=", "[", "values", "]", "\n", "for", "main_key", "in", "main_keys", ":", "\n", "            ", "for", "value", ",", "metric_key", "in", "zip", "(", "values", ",", "metric_keys", ")", ":", "\n", "                ", "self", ".", "progress_saver", "[", "main_key", "]", "[", "metric_key", "]", ".", "append", "(", "value", ")", "\n", "", "", "self", ".", "csv_loggers", "[", "main_key", "]", ".", "log", "(", "values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.LOGGER.update_info_plot": [[273, 292], ["auxiliaries_nofaiss.LOGGER.info_plot.make_plot", "range", "auxiliaries_nofaiss.LOGGER.info_plot[].make_plot", "auxiliaries_nofaiss.LOGGER.progress_saver[].keys", "auxiliaries_nofaiss.LOGGER.progress_saver[].keys", "auxiliaries_nofaiss.LOGGER.progress_saver[].items", "auxiliaries_nofaiss.LOGGER.progress_saver[].keys", "auxiliaries_nofaiss.LOGGER.progress_saver[].keys", "numpy.max", "auxiliaries_nofaiss.LOGGER.progress_saver[].items", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.make_plot", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.InfoPlotter.make_plot"], ["", "def", "update_info_plot", "(", "self", ")", ":", "\n", "        ", "t_epochs", "=", "self", ".", "progress_saver", "[", "'val'", "]", "[", "'Epochs'", "]", "\n", "t_loss_list", "=", "[", "self", ".", "progress_saver", "[", "'train'", "]", "[", "'Train Loss'", "]", "]", "\n", "t_legend_handles", "=", "[", "'Train Loss'", "]", "\n", "v_epochs", "=", "self", ".", "progress_saver", "[", "'val'", "]", "[", "'Epochs'", "]", "\n", "if", "self", ".", "prop", ".", "dataset", "!=", "'vehicle_id'", ":", "\n", "            ", "title", "=", "' | '", ".", "join", "(", "key", "+", "': {0:3.3f}'", ".", "format", "(", "np", ".", "max", "(", "item", ")", ")", "for", "key", ",", "item", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "items", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", ")", "\n", "self", ".", "info_plot", ".", "title", "=", "title", "\n", "v_metric_list", "=", "[", "self", ".", "progress_saver", "[", "'val'", "]", "[", "key", "]", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "]", "\n", "v_legend_handles", "=", "[", "key", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "]", "\n", "\n", "self", ".", "info_plot", ".", "make_plot", "(", "t_epochs", ",", "v_epochs", ",", "t_loss_list", ",", "v_metric_list", ",", "t_legend_handles", ",", "v_legend_handles", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "title", "=", "' | '", ".", "join", "(", "key", "+", "': {0:3.3f}'", ".", "format", "(", "np", ".", "max", "(", "item", ")", ")", "for", "key", ",", "item", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "items", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", ")", "\n", "self", ".", "info_plot", "[", "'Set {}'", ".", "format", "(", "i", ")", "]", ".", "title", "=", "title", "\n", "v_metric_list", "=", "[", "self", ".", "progress_saver", "[", "'val'", "]", "[", "key", "]", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", "]", "\n", "v_legend_handles", "=", "[", "key", "for", "key", "in", "self", ".", "progress_saver", "[", "'val'", "]", ".", "keys", "(", ")", "if", "key", "not", "in", "[", "'Time'", ",", "'Epochs'", "]", "and", "'Set {}'", ".", "format", "(", "i", ")", "in", "key", "]", "\n", "self", ".", "info_plot", "[", "'Set {}'", ".", "format", "(", "i", ")", "]", ".", "make_plot", "(", "t_epochs", ",", "v_epochs", ",", "t_loss_list", ",", "v_metric_list", ",", "t_legend_handles", ",", "v_legend_handles", ",", "appendix", "=", "'set_{}'", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.gimme_params": [[14, 18], ["filter", "sum", "model.parameters", "numpy.prod", "p.size"], "function", ["None"], ["def", "gimme_params", "(", "model", ")", ":", "\n", "    ", "model_parameters", "=", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "parameters", "(", ")", ")", "\n", "params", "=", "sum", "(", "[", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "for", "p", "in", "model_parameters", "]", ")", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.gimme_save_string": [[19, 31], ["vars", "str", "isinstance", "varx[].items", "str", "str", "str"], "function", ["None"], ["", "def", "gimme_save_string", "(", "opt", ")", ":", "\n", "    ", "varx", "=", "vars", "(", "opt", ")", "\n", "base_str", "=", "''", "\n", "for", "key", "in", "varx", ":", "\n", "        ", "base_str", "+=", "str", "(", "key", ")", "\n", "if", "isinstance", "(", "varx", "[", "key", "]", ",", "dict", ")", ":", "\n", "            ", "for", "sub_key", ",", "sub_item", "in", "varx", "[", "key", "]", ".", "items", "(", ")", ":", "\n", "                ", "base_str", "+=", "'\\n\\t'", "+", "str", "(", "sub_key", ")", "+", "': '", "+", "str", "(", "sub_item", ")", "\n", "", "", "else", ":", "\n", "            ", "base_str", "+=", "'\\n\\t'", "+", "str", "(", "varx", "[", "key", "]", ")", "\n", "", "base_str", "+=", "'\\n\\n'", "\n", "", "return", "base_str", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.f1_score": [[34, 87], ["numpy.zeros", "range", "numpy.zeros", "numpy.unique", "len", "numpy.unique", "len", "numpy.zeros", "range", "numpy.unique", "len", "range", "dict", "range", "numpy.zeros", "range", "range", "range", "range", "len", "len", "numpy.linalg.norm", "len", "numpy.argmin", "len", "len", "dict.update", "numpy.zeros", "range", "range", "numpy.where", "numpy.where", "len", "numpy.where", "comb", "comb", "comb"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.DistanceMeasure.update"], ["", "def", "f1_score", "(", "model_generated_cluster_labels", ",", "target_labels", ",", "feature_coll", ",", "computed_centroids", ")", ":", "\n", "    ", "from", "scipy", ".", "special", "import", "comb", "\n", "d", "=", "np", ".", "zeros", "(", "len", "(", "feature_coll", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "feature_coll", ")", ")", ":", "\n", "        ", "d", "[", "i", "]", "=", "np", ".", "linalg", ".", "norm", "(", "feature_coll", "[", "i", ",", ":", "]", "-", "computed_centroids", "[", "model_generated_cluster_labels", "[", "i", "]", ",", ":", "]", ")", "\n", "", "labels_pred", "=", "np", ".", "zeros", "(", "len", "(", "feature_coll", ")", ")", "\n", "for", "i", "in", "np", ".", "unique", "(", "model_generated_cluster_labels", ")", ":", "\n", "        ", "index", "=", "np", ".", "where", "(", "model_generated_cluster_labels", "==", "i", ")", "[", "0", "]", "\n", "ind", "=", "np", ".", "argmin", "(", "d", "[", "index", "]", ")", "\n", "cid", "=", "index", "[", "ind", "]", "\n", "labels_pred", "[", "index", "]", "=", "cid", "\n", "", "N", "=", "len", "(", "target_labels", ")", "\n", "avail_labels", "=", "np", ".", "unique", "(", "target_labels", ")", "\n", "n_labels", "=", "len", "(", "avail_labels", ")", "\n", "count_cluster", "=", "np", ".", "zeros", "(", "n_labels", ")", "\n", "for", "i", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "count_cluster", "[", "i", "]", "=", "len", "(", "np", ".", "where", "(", "target_labels", "==", "avail_labels", "[", "i", "]", ")", "[", "0", "]", ")", "\n", "", "keys", "=", "np", ".", "unique", "(", "labels_pred", ")", "\n", "num_item", "=", "len", "(", "keys", ")", "\n", "values", "=", "range", "(", "num_item", ")", "\n", "item_map", "=", "dict", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "keys", ")", ")", ":", "\n", "        ", "item_map", ".", "update", "(", "[", "(", "keys", "[", "i", "]", ",", "values", "[", "i", "]", ")", "]", ")", "\n", "", "count_item", "=", "np", ".", "zeros", "(", "num_item", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "index", "=", "item_map", "[", "labels_pred", "[", "i", "]", "]", "\n", "count_item", "[", "index", "]", "=", "count_item", "[", "index", "]", "+", "1", "\n", "", "tp_fp", "=", "0", "\n", "for", "k", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "if", "count_cluster", "[", "k", "]", ">", "1", ":", "\n", "            ", "tp_fp", "=", "tp_fp", "+", "comb", "(", "count_cluster", "[", "k", "]", ",", "2", ")", "\n", "", "", "tp", "=", "0", "\n", "for", "k", "in", "range", "(", "n_labels", ")", ":", "\n", "        ", "member", "=", "np", ".", "where", "(", "target_labels", "==", "avail_labels", "[", "k", "]", ")", "[", "0", "]", "\n", "member_ids", "=", "labels_pred", "[", "member", "]", "\n", "count", "=", "np", ".", "zeros", "(", "num_item", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "member", ")", ")", ":", "\n", "            ", "index", "=", "item_map", "[", "member_ids", "[", "j", "]", "]", "\n", "count", "[", "index", "]", "=", "count", "[", "index", "]", "+", "1", "\n", "", "for", "i", "in", "range", "(", "num_item", ")", ":", "\n", "            ", "if", "count", "[", "i", "]", ">", "1", ":", "\n", "                ", "tp", "=", "tp", "+", "comb", "(", "count", "[", "i", "]", ",", "2", ")", "\n", "", "", "", "fp", "=", "tp_fp", "-", "tp", "\n", "count", "=", "0", "\n", "for", "j", "in", "range", "(", "num_item", ")", ":", "\n", "        ", "if", "count_item", "[", "j", "]", ">", "1", ":", "\n", "            ", "count", "=", "count", "+", "comb", "(", "count_item", "[", "j", "]", ",", "2", ")", "\n", "", "", "fn", "=", "count", "-", "tp", "\n", "beta", "=", "1", "\n", "P", "=", "tp", "/", "(", "tp", "+", "fp", ")", "\n", "R", "=", "tp", "/", "(", "tp", "+", "fn", ")", "\n", "F1", "=", "(", "beta", "*", "beta", "+", "1", ")", "*", "P", "*", "R", "/", "(", "beta", "*", "beta", "*", "P", "+", "R", ")", "\n", "return", "F1", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.eval_metrics_one_dataset": [[88, 117], ["torch.cuda.empty_cache", "torch.cuda.empty_cache", "model.eval", "len", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "enumerate", "numpy.hstack().reshape", "numpy.vstack().astype", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "sklearn.cluster.KMeans().fit", "sklearn.metrics.cluster.normalized_mutual_info_score", "auxiliaries_nofaiss.f1_score", "np.hstack().reshape.extend", "model", "np.vstack().astype.extend", "model_generated_cluster_labels.reshape", "np.hstack().reshape.reshape", "scipy.spatial.distance.squareform().argsort", "np.hstack().reshape.reshape", "recall_all_k.append", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "numpy.hstack", "numpy.vstack", "sklearn.cluster.KMeans", "numpy.sum", "len", "scipy.spatial.distance.squareform", "int", "target.numpy", "model.cpu().detach().numpy", "scipy.spatial.distance.pdist", "numpy.max", "zip", "model.cpu().detach", "model.cpu"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.f1_score"], ["", "def", "eval_metrics_one_dataset", "(", "model", ",", "test_dataloader", ",", "device", ",", "k_vals", ",", "opt", ")", ":", "\n", "    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "_", "=", "model", ".", "eval", "(", ")", "\n", "n_classes", "=", "len", "(", "test_dataloader", ".", "dataset", ".", "avail_classes", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "### For all test images, extract features", "\n", "        ", "target_labels", ",", "feature_coll", "=", "[", "]", ",", "[", "]", "\n", "final_iter", "=", "tqdm", "(", "test_dataloader", ",", "desc", "=", "'Computing Evaluation Metrics...'", ")", "\n", "image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "test_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "final_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "target_labels", "=", "np", ".", "hstack", "(", "target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "feature_coll", "=", "np", ".", "vstack", "(", "feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "n_classes", ",", "random_state", "=", "0", ")", ".", "fit", "(", "feature_coll", ")", "\n", "model_generated_cluster_labels", "=", "kmeans", ".", "labels_", "\n", "computed_centroids", "=", "kmeans", ".", "cluster_centers_", "\n", "NMI", "=", "metrics", ".", "cluster", ".", "normalized_mutual_info_score", "(", "model_generated_cluster_labels", ".", "reshape", "(", "-", "1", ")", ",", "target_labels", ".", "reshape", "(", "-", "1", ")", ")", "\n", "k_closest_points", "=", "squareform", "(", "pdist", "(", "feature_coll", ")", ")", ".", "argsort", "(", "1", ")", "[", ":", ",", ":", "int", "(", "np", ".", "max", "(", "k_vals", ")", "+", "1", ")", "]", "\n", "k_closest_classes", "=", "target_labels", ".", "reshape", "(", "-", "1", ")", "[", "k_closest_points", "[", ":", ",", "1", ":", "]", "]", "\n", "recall_all_k", "=", "[", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "            ", "recall_at_k", "=", "np", ".", "sum", "(", "[", "1", "for", "target", ",", "recalled_predictions", "in", "zip", "(", "target_labels", ",", "k_closest_classes", ")", "if", "target", "in", "recalled_predictions", "[", ":", "k", "]", "]", ")", "/", "len", "(", "target_labels", ")", "\n", "recall_all_k", ".", "append", "(", "recall_at_k", ")", "\n", "", "F1", "=", "f1_score", "(", "model_generated_cluster_labels", ",", "target_labels", ",", "feature_coll", ",", "computed_centroids", ")", "\n", "", "return", "F1", ",", "NMI", ",", "recall_all_k", ",", "feature_coll", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.eval_metrics_query_and_gallery_dataset": [[118, 166], ["torch.cuda.empty_cache", "torch.cuda.empty_cache", "model.eval", "len", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "enumerate", "tqdm.tqdm", "enumerate", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "numpy.concatenate", "numpy.concatenate", "faiss.IndexFlatL2", "faiss.Clustering", "faiss.Clustering.train", "faiss.vector_float_to_array().reshape", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "sklearn.metrics.cluster.normalized_mutual_info_score", "faiss.IndexFlatL2", "faiss.IndexFlatL2.add", "faiss.IndexFlatL2.search", "auxiliaries_nofaiss.f1_score", "query_target_labels.extend", "model", "query_feature_coll.extend", "gallery_target_labels.extend", "model", "gallery_feature_coll.extend", "numpy.hstack().reshape", "numpy.vstack().astype", "numpy.hstack().reshape", "numpy.vstack().astype", "model_generated_cluster_labels.reshape", "np.concatenate.reshape", "int", "gallery_target_labels.reshape", "recall_all_k.append", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "target.numpy().tolist", "input_img.to", "model.cpu().detach().numpy().tolist", "faiss.vector_float_to_array", "numpy.max", "numpy.sum", "len", "numpy.hstack", "numpy.vstack", "numpy.hstack", "numpy.vstack", "zip", "target.numpy", "model.cpu().detach().numpy", "target.numpy", "model.cpu().detach().numpy", "zip", "model.cpu().detach", "model.cpu().detach", "model.cpu", "model.cpu"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.f1_score"], ["", "def", "eval_metrics_query_and_gallery_dataset", "(", "model", ",", "query_dataloader", ",", "gallery_dataloader", ",", "device", ",", "k_vals", ",", "opt", ")", ":", "\n", "    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "_", "=", "model", ".", "eval", "(", ")", "\n", "n_classes", "=", "len", "(", "query_dataloader", ".", "dataset", ".", "avail_classes", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "query_target_labels", ",", "query_feature_coll", "=", "[", "]", ",", "[", "]", "\n", "query_image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "query_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "query_iter", "=", "tqdm", "(", "query_dataloader", ",", "desc", "=", "'Extraction Query Features'", ")", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "query_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "query_target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "query_feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "gallery_target_labels", ",", "gallery_feature_coll", "=", "[", "]", ",", "[", "]", "\n", "gallery_image_paths", "=", "[", "x", "[", "0", "]", "for", "x", "in", "gallery_dataloader", ".", "dataset", ".", "image_list", "]", "\n", "gallery_iter", "=", "tqdm", "(", "gallery_dataloader", ",", "desc", "=", "'Extraction Gallery Features'", ")", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "gallery_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "-", "1", "]", ",", "inp", "[", "0", "]", "\n", "gallery_target_labels", ".", "extend", "(", "target", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "out", "=", "model", "(", "input_img", ".", "to", "(", "device", ")", ")", "\n", "gallery_feature_coll", ".", "extend", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "query_target_labels", ",", "query_feature_coll", "=", "np", ".", "hstack", "(", "query_target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "np", ".", "vstack", "(", "query_feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "gallery_target_labels", ",", "gallery_feature_coll", "=", "np", ".", "hstack", "(", "gallery_target_labels", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "np", ".", "vstack", "(", "gallery_feature_coll", ")", ".", "astype", "(", "'float32'", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "stackset", "=", "np", ".", "concatenate", "(", "[", "query_feature_coll", ",", "gallery_feature_coll", "]", ",", "axis", "=", "0", ")", "\n", "stacklabels", "=", "np", ".", "concatenate", "(", "[", "query_target_labels", ",", "gallery_target_labels", "]", ",", "axis", "=", "0", ")", "\n", "cpu_cluster_index", "=", "faiss", ".", "IndexFlatL2", "(", "stackset", ".", "shape", "[", "-", "1", "]", ")", "\n", "kmeans", "=", "faiss", ".", "Clustering", "(", "stackset", ".", "shape", "[", "-", "1", "]", ",", "n_classes", ")", "\n", "kmeans", ".", "niter", "=", "20", "\n", "kmeans", ".", "min_points_per_centroid", "=", "1", "\n", "kmeans", ".", "max_points_per_centroid", "=", "1000000000", "\n", "kmeans", ".", "train", "(", "stackset", ",", "cpu_cluster_index", ")", "\n", "computed_centroids", "=", "faiss", ".", "vector_float_to_array", "(", "kmeans", ".", "centroids", ")", ".", "reshape", "(", "n_classes", ",", "stackset", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "computed_centroids", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "computed_centroids", ")", "\n", "_", ",", "model_generated_cluster_labels", "=", "faiss_search_index", ".", "search", "(", "stackset", ",", "1", ")", "\n", "NMI", "=", "metrics", ".", "cluster", ".", "normalized_mutual_info_score", "(", "model_generated_cluster_labels", ".", "reshape", "(", "-", "1", ")", ",", "stacklabels", ".", "reshape", "(", "-", "1", ")", ")", "\n", "faiss_search_index", "=", "faiss", ".", "IndexFlatL2", "(", "gallery_feature_coll", ".", "shape", "[", "-", "1", "]", ")", "\n", "faiss_search_index", ".", "add", "(", "gallery_feature_coll", ")", "\n", "_", ",", "k_closest_points", "=", "faiss_search_index", ".", "search", "(", "query_feature_coll", ",", "int", "(", "np", ".", "max", "(", "k_vals", ")", ")", ")", "\n", "k_closest_classes", "=", "gallery_target_labels", ".", "reshape", "(", "-", "1", ")", "[", "k_closest_points", "]", "\n", "recall_all_k", "=", "[", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "            ", "recall_at_k", "=", "np", ".", "sum", "(", "[", "1", "for", "target", ",", "recalled_predictions", "in", "zip", "(", "query_target_labels", ",", "k_closest_classes", ")", "if", "target", "in", "recalled_predictions", "[", ":", "k", "]", "]", ")", "/", "len", "(", "query_target_labels", ")", "\n", "recall_all_k", ".", "append", "(", "recall_at_k", ")", "\n", "", "recall_str", "=", "', '", ".", "join", "(", "'@{0}: {1:.4f}'", ".", "format", "(", "k", ",", "rec", ")", "for", "k", ",", "rec", "in", "zip", "(", "k_vals", ",", "recall_all_k", ")", ")", "\n", "F1", "=", "f1_score", "(", "model_generated_cluster_labels", ",", "stacklabels", ",", "stackset", ",", "computed_centroids", ")", "\n", "", "return", "F1", ",", "NMI", ",", "recall_all_k", ",", "query_feature_coll", ",", "gallery_feature_coll", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.recover_closest_one_dataset": [[167, 185], ["numpy.array", "numpy.random.choice", "matplotlib.subplots", "enumerate", "f.set_size_inches", "f.tight_layout", "f.savefig", "matplotlib.close", "numpy.arange", "scipy.spatial.distance.squareform().argsort", "zip", "ax.imshow", "ax.set_xticks", "ax.set_yticks", "len", "axes.reshape", "sample_paths.reshape", "numpy.array", "ax.axvline", "ax.axvline", "scipy.spatial.distance.squareform", "PIL.Image.open", "scipy.spatial.distance.pdist"], "function", ["None"], ["", "def", "recover_closest_one_dataset", "(", "feature_matrix_all", ",", "image_paths", ",", "save_path", ",", "n_image_samples", "=", "10", ",", "n_closest", "=", "3", ")", ":", "\n", "    ", "image_paths", "=", "np", ".", "array", "(", "[", "x", "[", "0", "]", "for", "x", "in", "image_paths", "]", ")", "\n", "sample_idxs", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "len", "(", "feature_matrix_all", ")", ")", ",", "n_image_samples", ")", "\n", "closest_feature_idxs", "=", "squareform", "(", "pdist", "(", "feature_matrix_all", ")", ")", ".", "argsort", "(", "1", ")", "[", ":", ",", ":", "n_closest", "+", "1", "]", "\n", "sample_paths", "=", "image_paths", "[", "closest_feature_idxs", "]", "[", "sample_idxs", "]", "\n", "f", ",", "axes", "=", "plt", ".", "subplots", "(", "n_image_samples", ",", "n_closest", "+", "1", ")", "\n", "for", "i", ",", "(", "ax", ",", "plot_path", ")", "in", "enumerate", "(", "zip", "(", "axes", ".", "reshape", "(", "-", "1", ")", ",", "sample_paths", ".", "reshape", "(", "-", "1", ")", ")", ")", ":", "\n", "        ", "ax", ".", "imshow", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "plot_path", ")", ")", ")", "\n", "ax", ".", "set_xticks", "(", "[", "]", ")", "\n", "ax", ".", "set_yticks", "(", "[", "]", ")", "\n", "if", "i", "%", "(", "n_closest", "+", "1", ")", ":", "\n", "            ", "ax", ".", "axvline", "(", "x", "=", "0", ",", "color", "=", "'g'", ",", "linewidth", "=", "13", ")", "\n", "", "else", ":", "\n", "            ", "ax", ".", "axvline", "(", "x", "=", "0", ",", "color", "=", "'r'", ",", "linewidth", "=", "13", ")", "\n", "", "", "f", ".", "set_size_inches", "(", "10", ",", "20", ")", "\n", "f", ".", "tight_layout", "(", ")", "\n", "f", ".", "savefig", "(", "save_path", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_checkpoint": [[186, 189], ["torch.save", "torch.save", "model.state_dict"], "function", ["None"], ["", "def", "set_checkpoint", "(", "model", ",", "opt", ",", "progress_saver", ",", "savepath", ")", ":", "\n", "    ", "torch", ".", "save", "(", "{", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "'opt'", ":", "opt", ",", "\n", "'progress'", ":", "progress_saver", "}", ",", "savepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.set_logging": [[232, 247], ["os.path.exists", "os.makedirs", "pickle.dump", "datetime.datetime.now", "open", "f.write", "open", "str", "auxiliaries_nofaiss.gimme_save_string", "opt.dataset.upper", "opt.arch.upper"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.evaluate.GradientMeasure.dump", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.gimme_save_string"], ["", "", "def", "set_logging", "(", "opt", ")", ":", "\n", "    ", "checkfolder", "=", "opt", ".", "save_path", "+", "'/'", "+", "opt", ".", "savename", "\n", "if", "opt", ".", "savename", "==", "''", ":", "\n", "        ", "date", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "time_string", "=", "'{}-{}-{}-{}-{}-{}'", ".", "format", "(", "date", ".", "year", ",", "date", ".", "month", ",", "date", ".", "day", ",", "date", ".", "hour", ",", "date", ".", "minute", ",", "date", ".", "second", ")", "\n", "checkfolder", "=", "opt", ".", "save_path", "+", "'/{}_{}_'", ".", "format", "(", "opt", ".", "dataset", ".", "upper", "(", ")", ",", "opt", ".", "arch", ".", "upper", "(", ")", ")", "+", "time_string", "\n", "", "counter", "=", "1", "\n", "while", "os", ".", "path", ".", "exists", "(", "checkfolder", ")", ":", "\n", "        ", "checkfolder", "=", "opt", ".", "save_path", "+", "'/'", "+", "opt", ".", "savename", "+", "'_'", "+", "str", "(", "counter", ")", "\n", "counter", "+=", "1", "\n", "", "os", ".", "makedirs", "(", "checkfolder", ")", "\n", "opt", ".", "save_path", "=", "checkfolder", "\n", "with", "open", "(", "opt", ".", "save_path", "+", "'/Parameter_Info.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "gimme_save_string", "(", "opt", ")", ")", "\n", "", "pkl", ".", "dump", "(", "opt", ",", "open", "(", "opt", ".", "save_path", "+", "\"/hypa.pkl\"", ",", "\"wb\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.metrics_to_examine": [[293, 306], ["range"], "function", ["None"], ["", "", "", "", "def", "metrics_to_examine", "(", "dataset", ",", "k_vals", ")", ":", "\n", "    ", "metric_dict", "=", "{", "'train'", ":", "[", "'Epochs'", ",", "'Time'", ",", "'Train Loss'", "]", "}", "\n", "if", "dataset", "==", "'vehicle_id'", ":", "\n", "        ", "metric_dict", "[", "'val'", "]", "=", "[", "'Epochs'", ",", "'Time'", "]", "\n", "#Vehicle_ID uses three test sets", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "metric_dict", "[", "'val'", "]", "+=", "[", "'Set {} NMI'", ".", "format", "(", "i", ")", ",", "'Set {} F1'", ".", "format", "(", "i", ")", "]", "\n", "for", "k", "in", "k_vals", ":", "\n", "                ", "metric_dict", "[", "'val'", "]", "+=", "[", "'Set {} Recall @ {}'", ".", "format", "(", "i", ",", "k", ")", "]", "\n", "", "", "", "else", ":", "\n", "        ", "metric_dict", "[", "'val'", "]", "=", "[", "'Epochs'", ",", "'Time'", ",", "'NMI'", ",", "'F1'", "]", "\n", "metric_dict", "[", "'val'", "]", "+=", "[", "'Recall @ {}'", ".", "format", "(", "k", ")", "for", "k", "in", "k_vals", "]", "\n", "", "return", "metric_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.run_kmeans": [[307, 314], ["faiss.Kmeans", "faiss.Kmeans.train", "faiss.Kmeans.index.search"], "function", ["None"], ["", "def", "run_kmeans", "(", "features", ",", "n_cluster", ")", ":", "\n", "    ", "n_samples", ",", "dim", "=", "features", ".", "shape", "\n", "kmeans", "=", "faiss", ".", "Kmeans", "(", "dim", ",", "n_cluster", ")", "\n", "kmeans", ".", "n_iter", ",", "kmeans", ".", "min_points_per_centroid", ",", "kmeans", ".", "max_points_per_centroid", "=", "20", ",", "5", ",", "1000000000", "\n", "kmeans", ".", "train", "(", "features", ")", "\n", "_", ",", "cluster_assignments", "=", "kmeans", ".", "index", ".", "search", "(", "features", ",", "1", ")", "\n", "return", "cluster_assignments", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.auxiliaries_nofaiss.save_graph": [[315, 397], ["torch.randn().to", "torch.randn().to", "model", "isinstance", "auxiliaries_nofaiss.save_graph.make_dot"], "function", ["None"], ["", "def", "save_graph", "(", "opt", ",", "model", ")", ":", "\n", "    ", "inp", "=", "torch", ".", "randn", "(", "(", "1", ",", "3", ",", "224", ",", "224", ")", ")", ".", "to", "(", "opt", ".", "device", ")", "\n", "network_output", "=", "model", "(", "inp", ")", "\n", "if", "isinstance", "(", "network_output", ",", "dict", ")", ":", "network_output", "=", "network_output", "[", "'Class'", "]", "\n", "from", "graphviz", "import", "Digraph", "\n", "def", "make_dot", "(", "var", ",", "savename", ",", "params", "=", "None", ")", ":", "\n", "        ", "if", "params", "is", "not", "None", ":", "\n", "            ", "assert", "all", "(", "isinstance", "(", "p", ",", "Variable", ")", "for", "p", "in", "params", ".", "values", "(", ")", ")", "\n", "param_map", "=", "{", "id", "(", "v", ")", ":", "k", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", "\n", "\n", "", "node_attr", "=", "dict", "(", "style", "=", "'filled'", ",", "\n", "shape", "=", "'box'", ",", "\n", "align", "=", "'left'", ",", "\n", "fontsize", "=", "'6'", ",", "\n", "ranksep", "=", "'0.1'", ",", "\n", "height", "=", "'0.6'", ",", "\n", "width", "=", "'1'", ")", "\n", "dot", "=", "Digraph", "(", "node_attr", "=", "node_attr", ",", "format", "=", "'svg'", ",", "graph_attr", "=", "dict", "(", "size", "=", "\"40,10\"", ",", "rankdir", "=", "'LR'", ",", "rank", "=", "'same'", ")", ")", "\n", "seen", "=", "set", "(", ")", "\n", "def", "size_to_str", "(", "size", ")", ":", "\n", "            ", "return", "'('", "+", "(", "', '", ")", ".", "join", "(", "[", "'%d'", "%", "v", "for", "v", "in", "size", "]", ")", "+", "')'", "\n", "", "def", "add_nodes", "(", "var", ")", ":", "\n", "            ", "replacements", "=", "[", "'Backward'", ",", "'Th'", ",", "'Cudnn'", "]", "\n", "color_assigns", "=", "{", "'Convolution'", ":", "'orange'", ",", "\n", "'ConvolutionTranspose'", ":", "'lightblue'", ",", "\n", "'Add'", ":", "'red'", ",", "\n", "'Cat'", ":", "'green'", ",", "\n", "'Softmax'", ":", "'yellow'", ",", "\n", "'Sigmoid'", ":", "'yellow'", ",", "\n", "'Copys'", ":", "'yellow'", "}", "\n", "if", "var", "not", "in", "seen", ":", "\n", "                ", "op1", "=", "torch", ".", "is_tensor", "(", "var", ")", "\n", "op2", "=", "not", "torch", ".", "is_tensor", "(", "var", ")", "and", "str", "(", "type", "(", "var", ")", ".", "__name__", ")", "!=", "'AccumulateGrad'", "\n", "\n", "text", "=", "str", "(", "type", "(", "var", ")", ".", "__name__", ")", "\n", "for", "rep", "in", "replacements", ":", "\n", "                    ", "text", "=", "text", ".", "replace", "(", "rep", ",", "''", ")", "\n", "", "color", "=", "color_assigns", "[", "text", "]", "if", "text", "in", "color_assigns", ".", "keys", "(", ")", "else", "'gray'", "\n", "\n", "if", "'Pool'", "in", "text", ":", "color", "=", "'lightblue'", "\n", "\n", "if", "op1", "or", "op2", ":", "\n", "                    ", "if", "hasattr", "(", "var", ",", "'next_functions'", ")", ":", "\n", "                        ", "count", "=", "0", "\n", "for", "i", ",", "u", "in", "enumerate", "(", "var", ".", "next_functions", ")", ":", "\n", "                            ", "if", "str", "(", "type", "(", "u", "[", "0", "]", ")", ".", "__name__", ")", "==", "'AccumulateGrad'", ":", "\n", "                                ", "if", "count", "==", "0", ":", "attr_text", "=", "'\\nParameter Sizes:\\n'", "\n", "attr_text", "+=", "size_to_str", "(", "u", "[", "0", "]", ".", "variable", ".", "size", "(", ")", ")", "\n", "count", "+=", "1", "\n", "attr_text", "+=", "' '", "\n", "", "", "if", "count", ">", "0", ":", "text", "+=", "attr_text", "\n", "\n", "\n", "", "", "if", "op1", ":", "\n", "                    ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "size_to_str", "(", "var", ".", "size", "(", ")", ")", ",", "fillcolor", "=", "'orange'", ")", "\n", "", "if", "op2", ":", "\n", "                    ", "dot", ".", "node", "(", "str", "(", "id", "(", "var", ")", ")", ",", "text", ",", "fillcolor", "=", "color", ")", "\n", "\n", "", "seen", ".", "add", "(", "var", ")", "\n", "\n", "if", "op1", "or", "op2", ":", "\n", "                    ", "if", "hasattr", "(", "var", ",", "'next_functions'", ")", ":", "\n", "                        ", "for", "u", "in", "var", ".", "next_functions", ":", "\n", "                            ", "if", "u", "[", "0", "]", "is", "not", "None", ":", "\n", "                                ", "if", "str", "(", "type", "(", "u", "[", "0", "]", ")", ".", "__name__", ")", "!=", "'AccumulateGrad'", ":", "\n", "                                    ", "dot", ".", "edge", "(", "str", "(", "id", "(", "u", "[", "0", "]", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "u", "[", "0", "]", ")", "\n", "", "", "", "", "if", "hasattr", "(", "var", ",", "'saved_tensors'", ")", ":", "\n", "                        ", "for", "t", "in", "var", ".", "saved_tensors", ":", "\n", "                            ", "dot", ".", "edge", "(", "str", "(", "id", "(", "t", ")", ")", ",", "str", "(", "id", "(", "var", ")", ")", ")", "\n", "add_nodes", "(", "t", ")", "\n", "\n", "", "", "", "", "", "add_nodes", "(", "var", ".", "grad_fn", ")", "\n", "dot", ".", "save", "(", "savename", ")", "\n", "return", "dot", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "save_path", ")", ":", "\n", "        ", "raise", "Exception", "(", "'No save folder {} available!'", ".", "format", "(", "opt", ".", "save_path", ")", ")", "\n", "", "viz_graph", "=", "make_dot", "(", "network_output", ",", "opt", ".", "save_path", "+", "\"/Network_Graphs\"", "+", "\"/{}_network_graph\"", ".", "format", "(", "opt", ".", "arch", ")", ")", "\n", "viz_graph", ".", "format", "=", "'svg'", "\n", "viz_graph", ".", "render", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.__init__": [[39, 43], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "3", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", "GeM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "p", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", "*", "p", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.forward": [[44, 46], ["netlib.GeM.gem"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.gem"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "gem", "(", "x", ",", "p", "=", "self", ".", "p", ",", "eps", "=", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.gem": [[47, 49], ["torch.avg_pool2d().pow", "torch.avg_pool2d().pow", "torch.avg_pool2d().pow", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "x.clamp().pow", "x.size", "x.size", "x.clamp"], "methods", ["None"], ["", "def", "gem", "(", "self", ",", "x", ",", "p", "=", "3", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "return", "F", ".", "avg_pool2d", "(", "x", ".", "clamp", "(", "min", "=", "eps", ")", ".", "pow", "(", "p", ")", ",", "(", "x", ".", "size", "(", "-", "2", ")", ",", "x", ".", "size", "(", "-", "1", ")", ")", ")", ".", "pow", "(", "1.", "/", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.__repr__": [[50, 52], ["str", "netlib.GeM.p.data.tolist"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'('", "+", "'p='", "+", "'{:.4f}'", ".", "format", "(", "self", ".", "p", ".", "data", ".", "tolist", "(", ")", "[", "0", "]", ")", "+", "', '", "+", "'eps='", "+", "str", "(", "self", ".", "eps", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ViTB16.__init__": [[54, 66], ["torch.Module.__init__", "netlib.GeM", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "print", "timm.create_model", "print", "timm.create_model"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "list_style", "=", "False", ",", "no_norm", "=", "False", ")", ":", "\n", "        ", "super", "(", "ViTB16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pars", "=", "opt", "\n", "if", "not", "opt", ".", "not_pretrained", ":", "\n", "            ", "print", "(", "'Getting pretrained weights...'", ")", "\n", "self", ".", "model", "=", "timm", ".", "create_model", "(", "'vit_base_patch16_224_in21k'", ",", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Not utilizing pretrained weights!'", ")", "\n", "self", ".", "model", "=", "timm", ".", "create_model", "(", "'vit_base_patch16_224'", ",", "pretrained", "=", "False", ")", "\n", "", "self", ".", "gem", "=", "GeM", "(", ")", "\n", "self", ".", "model", ".", "head", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "model", ".", "head", ".", "in_features", ",", "opt", ".", "embed_dim", ")", "\n", "self", ".", "model", ".", "layer_norm", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "self", ".", "model", ".", "head", ".", "in_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ViTB16.forward": [[67, 78], ["netlib.ViTB16.model.patch_embed", "netlib.ViTB16.model.cls_token.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "netlib.ViTB16.model.pos_drop", "netlib.ViTB16.model.blocks", "netlib.ViTB16.model.norm", "netlib.ViTB16.model.pre_logits", "netlib.ViTB16.model.layer_norm", "netlib.ViTB16.model.head", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_init_cluster_generation", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", ".", "patch_embed", "(", "x", ")", "\n", "cls_token", "=", "self", ".", "model", ".", "cls_token", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "cls_token", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "model", ".", "pos_drop", "(", "x", "+", "self", ".", "model", ".", "pos_embed", ")", "\n", "x", "=", "self", ".", "model", ".", "blocks", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "pre_logits", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "x", "=", "self", ".", "model", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "head", "(", "x", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ViTB32.__init__": [[80, 92], ["torch.Module.__init__", "netlib.GeM", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "print", "timm.create_model", "print", "timm.create_model"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "list_style", "=", "False", ",", "no_norm", "=", "False", ")", ":", "\n", "        ", "super", "(", "ViTB32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pars", "=", "opt", "\n", "if", "not", "opt", ".", "not_pretrained", ":", "\n", "            ", "print", "(", "'Getting pretrained weights...'", ")", "\n", "self", ".", "model", "=", "timm", ".", "create_model", "(", "'vit_base_patch32_224_in21k'", ",", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Not utilizing pretrained weights!'", ")", "\n", "self", ".", "model", "=", "timm", ".", "create_model", "(", "'vit_base_patch32_224'", ",", "pretrained", "=", "False", ")", "\n", "", "self", ".", "gem", "=", "GeM", "(", ")", "\n", "self", ".", "model", ".", "head", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "model", ".", "head", ".", "in_features", ",", "opt", ".", "embed_dim", ")", "\n", "self", ".", "model", ".", "layer_norm", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "self", ".", "model", ".", "head", ".", "in_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ViTB32.forward": [[93, 104], ["netlib.ViTB32.model.patch_embed", "netlib.ViTB32.model.cls_token.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "netlib.ViTB32.model.pos_drop", "netlib.ViTB32.model.blocks", "netlib.ViTB32.model.norm", "netlib.ViTB32.model.pre_logits", "netlib.ViTB32.model.layer_norm", "netlib.ViTB32.model.head", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_init_cluster_generation", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", ".", "patch_embed", "(", "x", ")", "\n", "cls_token", "=", "self", ".", "model", ".", "cls_token", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "cls_token", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "model", ".", "pos_drop", "(", "x", "+", "self", ".", "model", ".", "pos_embed", ")", "\n", "x", "=", "self", ".", "model", ".", "blocks", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "pre_logits", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "x", "=", "self", ".", "model", ".", "layer_norm", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "head", "(", "x", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ResNet50.__init__": [[106, 123], ["torch.Module.__init__", "filter", "netlib.GeM", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "print", "print", "print", "netlib.ResNet50.model.modules", "module.eval", "type"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "list_style", "=", "False", ",", "no_norm", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet50", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pars", "=", "opt", "\n", "if", "not", "opt", ".", "not_pretrained", ":", "\n", "            ", "print", "(", "'Getting pretrained weights...'", ")", "\n", "self", ".", "model", "=", "ptm", ".", "__dict__", "[", "'resnet50'", "]", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "'imagenet'", ")", "\n", "print", "(", "'Done.'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Not utilizing pretrained weights!'", ")", "\n", "self", ".", "model", "=", "ptm", ".", "__dict__", "[", "'resnet50'", "]", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "None", ")", "\n", "", "for", "module", "in", "filter", "(", "lambda", "m", ":", "type", "(", "m", ")", "==", "nn", ".", "BatchNorm2d", ",", "self", ".", "model", ".", "modules", "(", ")", ")", ":", "\n", "            ", "module", ".", "eval", "(", ")", "\n", "module", ".", "train", "=", "lambda", "_", ":", "None", "\n", "", "self", ".", "gem", "=", "GeM", "(", ")", "\n", "self", ".", "model", ".", "last_linear", "=", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "model", ".", "last_linear", ".", "in_features", ",", "opt", ".", "embed_dim", ")", "\n", "self", ".", "model", ".", "layer_norm", "=", "torch", ".", "nn", ".", "LayerNorm", "(", "self", ".", "model", ".", "last_linear", ".", "in_features", ")", "\n", "self", ".", "layer_blocks", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "model", ".", "layer1", ",", "self", ".", "model", ".", "layer2", ",", "self", ".", "model", ".", "layer3", ",", "self", ".", "model", ".", "layer4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.ResNet50.forward": [[124, 134], ["netlib.ResNet50.model.maxpool", "netlib.ResNet50.gem", "layerblock.view", "netlib.ResNet50.model.layer_norm", "netlib.ResNet50.model.last_linear", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "netlib.ResNet50.model.relu", "layerblock", "layerblock.size", "netlib.ResNet50.model.bn1", "netlib.ResNet50.model.conv1"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.GeM.gem"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_init_cluster_generation", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", ".", "maxpool", "(", "self", ".", "model", ".", "relu", "(", "self", ".", "model", ".", "bn1", "(", "self", ".", "model", ".", "conv1", "(", "x", ")", ")", ")", ")", "\n", "for", "layerblock", "in", "self", ".", "layer_blocks", ":", "\n", "            ", "x", "=", "layerblock", "(", "x", ")", "\n", "#x = self.model.avgpool(x)", "\n", "", "x", "=", "self", ".", "gem", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "model", ".", "layer_norm", "(", "x", ")", "\n", "mod_x", "=", "self", ".", "model", ".", "last_linear", "(", "x", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "mod_x", ",", "dim", "=", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.initialize_weights": [[7, 17], ["enumerate", "model.modules", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "isinstance", "module.weight.data.normal_", "module.bias.data.zero_"], "function", ["None"], ["def", "initialize_weights", "(", "model", ")", ":", "\n", "    ", "for", "idx", ",", "module", "in", "enumerate", "(", "model", ".", "modules", "(", ")", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "module", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "module", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.rename_attr": [[18, 21], ["setattr", "delattr", "getattr"], "function", ["None"], ["", "", "", "def", "rename_attr", "(", "model", ",", "attr", ",", "name", ")", ":", "\n", "    ", "setattr", "(", "model", ",", "name", ",", "getattr", "(", "model", ",", "attr", ")", ")", "\n", "delattr", "(", "model", ",", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.netlib.networkselect": [[22, 37], ["netlib.ResNet50", "torch.load", "torch.load", "torch.load", "ViTB16.load_state_dict", "netlib.ViTB32", "netlib.ViTB16", "Exception"], "function", ["None"], ["", "def", "networkselect", "(", "opt", ")", ":", "\n", "    ", "if", "opt", ".", "arch", "==", "'resnet50'", ":", "\n", "        ", "network", "=", "ResNet50", "(", "opt", ")", "\n", "", "elif", "opt", ".", "arch", "==", "'ViTB32'", ":", "\n", "        ", "network", "=", "ViTB32", "(", "opt", ")", "\n", "", "elif", "opt", ".", "arch", "==", "'ViTB16'", ":", "\n", "        ", "network", "=", "ViTB16", "(", "opt", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Network {} not available!'", ".", "format", "(", "opt", ".", "arch", ")", ")", "\n", "\n", "", "if", "opt", ".", "resume", ":", "\n", "        ", "weights", "=", "torch", ".", "load", "(", "opt", ".", "resume", ")", "\n", "network", ".", "load_state_dict", "(", "weights", "[", "'state_dict'", "]", ")", "\n", "\n", "", "return", "network", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.RecallatK.__init__": [[22, 33], ["super().__init__", "int", "min"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anneal", ",", "batch_size", ",", "num_id", ",", "feat_dims", ",", "k_vals", ",", "k_temperatures", ",", "mixup", ")", ":", "\n", "        ", "super", "(", "RecallatK", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "batch_size", "%", "num_id", "==", "0", ")", "\n", "self", ".", "anneal", "=", "anneal", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "num_id", "=", "num_id", "\n", "self", ".", "feat_dims", "=", "feat_dims", "\n", "self", ".", "k_vals", "=", "[", "min", "(", "batch_size", ",", "k", ")", "for", "k", "in", "k_vals", "]", "\n", "self", ".", "k_temperatures", "=", "k_temperatures", "\n", "self", ".", "mixup", "=", "mixup", "\n", "self", ".", "samples_per_class", "=", "int", "(", "batch_size", "/", "num_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.RecallatK.forward": [[34, 70], ["int", "torch.Tensor().cuda", "int", "sim_all.view", "losses.sigmoid", "range", "sim_all_rk.unsqueeze().repeat.unsqueeze().repeat.unsqueeze().repeat", "torch.Tensor().cuda", "k_vals.unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().repeat", "range", "torch.Tensor().cuda", "k_vals_loss.unsqueeze.unsqueeze.unsqueeze", "torch.sum", "torch.minimum", "torch.sum", "torch.div", "int", "sim_all.unsqueeze", "sim_all_g[].unsqueeze().repeat", "len", "len", "losses.sigmoid", "torch.sum", "len", "torch.Tensor", "sim_all_rk.unsqueeze().repeat.unsqueeze().repeat.unsqueeze", "torch.Tensor", "k_vals.unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze", "torch.Tensor", "sim_all_g[].unsqueeze", "torch.sum", "float", "min", "k_vals.unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().repeat.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.sigmoid", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.sigmoid"], ["", "def", "forward", "(", "self", ",", "preds", ",", "q_id", ")", ":", "\n", "        ", "batch_size", "=", "preds", ".", "shape", "[", "0", "]", "\n", "num_id", "=", "self", ".", "num_id", "\n", "anneal", "=", "self", ".", "anneal", "\n", "feat_dims", "=", "self", ".", "feat_dims", "\n", "k_vals", "=", "self", ".", "k_vals", "\n", "k_temperatures", "=", "self", ".", "k_temperatures", "\n", "samples_per_class", "=", "int", "(", "batch_size", "/", "num_id", ")", "\n", "norm_vals", "=", "torch", ".", "Tensor", "(", "[", "min", "(", "k", ",", "(", "samples_per_class", "-", "1", ")", ")", "for", "k", "in", "k_vals", "]", ")", ".", "cuda", "(", ")", "\n", "group_num", "=", "int", "(", "q_id", "/", "samples_per_class", ")", "\n", "q_id_", "=", "group_num", "*", "samples_per_class", "\n", "\n", "sim_all", "=", "(", "preds", "[", "q_id", "]", "*", "preds", ")", ".", "sum", "(", "1", ")", "\n", "sim_all_g", "=", "sim_all", ".", "view", "(", "num_id", ",", "int", "(", "batch_size", "/", "num_id", ")", ")", "\n", "sim_diff_all", "=", "sim_all", ".", "unsqueeze", "(", "-", "1", ")", "-", "sim_all_g", "[", "group_num", ",", ":", "]", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch_size", ",", "1", ")", "\n", "sim_sg", "=", "sigmoid", "(", "sim_diff_all", ",", "temp", "=", "anneal", ")", "\n", "for", "i", "in", "range", "(", "samples_per_class", ")", ":", "sim_sg", "[", "group_num", "*", "samples_per_class", "+", "i", ",", "i", "]", "=", "0.", "\n", "sim_all_rk", "=", "(", "1.0", "+", "torch", ".", "sum", "(", "sim_sg", ",", "dim", "=", "0", ")", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "\n", "sim_all_rk", "[", ":", ",", "q_id", "%", "samples_per_class", "]", "=", "0.", "\n", "sim_all_rk", "=", "sim_all_rk", ".", "unsqueeze", "(", "dim", "=", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "len", "(", "k_vals", ")", ")", "\n", "k_vals", "=", "torch", ".", "Tensor", "(", "k_vals", ")", ".", "cuda", "(", ")", "\n", "k_vals", "=", "k_vals", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "repeat", "(", "1", ",", "samples_per_class", ",", "1", ")", "\n", "sim_all_rk", "=", "k_vals", "-", "sim_all_rk", "\n", "for", "given_k", "in", "range", "(", "0", ",", "len", "(", "self", ".", "k_vals", ")", ")", ":", "\n", "            ", "sim_all_rk", "[", ":", ",", ":", ",", "given_k", "]", "=", "sigmoid", "(", "sim_all_rk", "[", ":", ",", ":", ",", "given_k", "]", ",", "temp", "=", "float", "(", "k_temperatures", "[", "given_k", "]", ")", ")", "\n", "\n", "", "sim_all_rk", "[", ":", ",", "q_id", "%", "samples_per_class", ",", ":", "]", "=", "0.", "\n", "k_vals_loss", "=", "torch", ".", "Tensor", "(", "self", ".", "k_vals", ")", ".", "cuda", "(", ")", "\n", "k_vals_loss", "=", "k_vals_loss", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "recall", "=", "torch", ".", "sum", "(", "sim_all_rk", ",", "dim", "=", "1", ")", "\n", "recall", "=", "torch", ".", "minimum", "(", "recall", ",", "k_vals_loss", ")", "\n", "recall", "=", "torch", ".", "sum", "(", "recall", ",", "dim", "=", "0", ")", "\n", "recall", "=", "torch", ".", "div", "(", "recall", ",", "norm_vals", ")", "\n", "recall", "=", "torch", ".", "sum", "(", "recall", ")", "/", "len", "(", "self", ".", "k_vals", ")", "\n", "return", "(", "1.", "-", "recall", ")", "/", "batch_size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.loss_select": [[6, 14], ["losses.RecallatK", "Exception", "int"], "function", ["None"], ["def", "loss_select", "(", "loss", ",", "opt", ",", "to_optim", ")", ":", "\n", "    ", "if", "loss", "==", "'recallatk'", ":", "\n", "        ", "loss_params", "=", "{", "'anneal'", ":", "opt", ".", "sigmoid_temperature", ",", "'batch_size'", ":", "opt", ".", "bs", ",", "\"num_id\"", ":", "int", "(", "opt", ".", "bs", "/", "opt", ".", "samples_per_class", ")", ",", "'feat_dims'", ":", "opt", ".", "embed_dim", ",", "'k_vals'", ":", "opt", ".", "k_vals_train", ",", "'k_temperatures'", ":", "opt", ".", "k_temperatures", ",", "'mixup'", ":", "opt", ".", "mixup", "}", "\n", "criterion", "=", "RecallatK", "(", "**", "loss_params", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Loss {} not available!'", ".", "format", "(", "loss", ")", ")", "\n", "\n", "", "return", "criterion", ",", "to_optim", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.losses.sigmoid": [[15, 20], ["torch.clamp", "torch.exp"], "function", ["None"], ["", "def", "sigmoid", "(", "tensor", ",", "temp", "=", "1.0", ")", ":", "\n", "    ", "exponent", "=", "-", "tensor", "/", "temp", "\n", "exponent", "=", "torch", ".", "clamp", "(", "exponent", ",", "min", "=", "-", "50", ",", "max", "=", "50", ")", "\n", "y", "=", "1.0", "/", "(", "1.0", "+", "torch", ".", "exp", "(", "exponent", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.BaseTripletDataset.__init__": [[209, 235], ["numpy.sum", "sorted", "sorted", "torchvision.transforms.Normalize", "transf_list.extend", "torchvision.transforms.Compose", "list", "list", "numpy.random.randint", "transf_list.extend", "transf_list.extend", "len", "datasets.BaseTripletDataset.image_dict.keys", "enumerate", "datasets.BaseTripletDataset.image_dict.keys", "len", "torchvision.transforms.ToTensor", "datasets.BaseTripletDataset.image_dict.keys", "image_dict.keys", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.Resize", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.CenterCrop", "torchvision.transforms.CenterCrop"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_dict", ",", "opt", ",", "samples_per_class", "=", "8", ",", "is_validation", "=", "False", ")", ":", "\n", "        ", "self", ".", "n_files", "=", "np", ".", "sum", "(", "[", "len", "(", "image_dict", "[", "key", "]", ")", "for", "key", "in", "image_dict", ".", "keys", "(", ")", "]", ")", "\n", "self", ".", "is_validation", "=", "is_validation", "\n", "self", ".", "pars", "=", "opt", "\n", "self", ".", "image_dict", "=", "image_dict", "\n", "self", ".", "avail_classes", "=", "sorted", "(", "list", "(", "self", ".", "image_dict", ".", "keys", "(", ")", ")", ")", "\n", "self", ".", "image_dict", "=", "{", "i", ":", "self", ".", "image_dict", "[", "key", "]", "for", "i", ",", "key", "in", "enumerate", "(", "self", ".", "avail_classes", ")", "}", "\n", "self", ".", "avail_classes", "=", "sorted", "(", "list", "(", "self", ".", "image_dict", ".", "keys", "(", ")", ")", ")", "\n", "if", "not", "self", ".", "is_validation", ":", "\n", "            ", "self", ".", "samples_per_class", "=", "samples_per_class", "\n", "self", ".", "current_class", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "avail_classes", ")", ")", "\n", "self", ".", "classes_visited", "=", "[", "self", ".", "current_class", ",", "self", ".", "current_class", "]", "\n", "self", ".", "n_samples_drawn", "=", "0", "\n", "", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "transf_list", "=", "[", "]", "\n", "if", "not", "self", ".", "is_validation", ":", "\n", "            ", "transf_list", ".", "extend", "(", "[", "transforms", ".", "RandomResizedCrop", "(", "size", "=", "224", ")", "if", "opt", ".", "arch", "==", "'resnet50'", "or", "opt", ".", "arch", "==", "'ViTB16'", "or", "opt", ".", "arch", "==", "'ViTB32'", "or", "opt", ".", "arch", "==", "'DeiTB'", "else", "transforms", ".", "RandomResizedCrop", "(", "size", "=", "227", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "0.5", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "transf_list", ".", "extend", "(", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", "if", "opt", ".", "arch", "==", "'resnet50'", "or", "opt", ".", "arch", "==", "'ViTB16'", "or", "opt", ".", "arch", "==", "'ViTB32'", "or", "opt", ".", "arch", "==", "'DeiTB'", "else", "transforms", ".", "CenterCrop", "(", "227", ")", "]", ")", "\n", "", "transf_list", ".", "extend", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "normalize", "]", ")", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transf_list", ")", "\n", "self", ".", "image_list", "=", "[", "[", "(", "x", ",", "key", ")", "for", "x", "in", "self", ".", "image_dict", "[", "key", "]", "]", "for", "key", "in", "self", ".", "image_dict", ".", "keys", "(", ")", "]", "\n", "self", ".", "image_list", "=", "[", "x", "for", "y", "in", "self", ".", "image_list", "for", "x", "in", "y", "]", "\n", "self", ".", "is_init", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.BaseTripletDataset.ensure_3dim": [[236, 240], ["len", "img.convert.convert.convert"], "methods", ["None"], ["", "def", "ensure_3dim", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "size", ")", "==", "2", ":", "\n", "            ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.BaseTripletDataset.__getitem__": [[241, 281], ["datasets.BaseTripletDataset.transform", "datasets.BaseTripletDataset.transform", "copy.deepcopy", "len", "datasets.BaseTripletDataset.ensure_3dim", "datasets.BaseTripletDataset.transform", "copy.deepcopy", "len", "datasets.BaseTripletDataset.ensure_3dim", "datasets.BaseTripletDataset.transform", "datasets.BaseTripletDataset.transform", "PIL.Image.open", "datasets.BaseTripletDataset.ensure_3dim", "datasets.BaseTripletDataset.transform", "PIL.Image.open", "datasets.BaseTripletDataset.ensure_3dim", "datasets.BaseTripletDataset.ensure_3dim", "copy.deepcopy.remove", "PIL.Image.open", "len", "datasets.BaseTripletDataset.ensure_3dim", "copy.deepcopy.remove", "PIL.Image.open", "PIL.Image.open", "len", "PIL.Image.open", "len"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "pars", ".", "loss", "==", "'recallatk'", ":", "\n", "            ", "if", "self", ".", "is_init", ":", "\n", "                ", "self", ".", "is_init", "=", "False", "\n", "", "if", "not", "self", ".", "is_validation", ":", "\n", "                ", "if", "self", ".", "samples_per_class", "==", "1", ":", "\n", "                    ", "return", "self", ".", "image_list", "[", "idx", "]", "[", "-", "1", "]", ",", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_list", "[", "idx", "]", "[", "0", "]", ")", ")", ")", "\n", "", "if", "self", ".", "n_samples_drawn", "==", "self", ".", "samples_per_class", ":", "\n", "                    ", "counter", "=", "copy", ".", "deepcopy", "(", "self", ".", "avail_classes", ")", "\n", "for", "prev_class", "in", "self", ".", "classes_visited", ":", "\n", "                        ", "if", "prev_class", "in", "counter", ":", "counter", ".", "remove", "(", "prev_class", ")", "\n", "", "self", ".", "current_class", "=", "counter", "[", "idx", "%", "len", "(", "counter", ")", "]", "\n", "self", ".", "classes_visited", "=", "self", ".", "classes_visited", "+", "[", "self", ".", "current_class", "]", "\n", "self", ".", "n_samples_drawn", "=", "0", "\n", "", "class_sample_idx", "=", "idx", "%", "len", "(", "self", ".", "image_dict", "[", "self", ".", "current_class", "]", ")", "\n", "self", ".", "n_samples_drawn", "+=", "1", "\n", "out_img", "=", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_dict", "[", "self", ".", "current_class", "]", "[", "class_sample_idx", "]", ")", ")", ")", "\n", "return", "self", ".", "current_class", ",", "out_img", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "image_list", "[", "idx", "]", "[", "-", "1", "]", ",", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_list", "[", "idx", "]", "[", "0", "]", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "is_init", ":", "\n", "                ", "self", ".", "current_class", "=", "self", ".", "avail_classes", "[", "idx", "%", "len", "(", "self", ".", "avail_classes", ")", "]", "\n", "self", ".", "is_init", "=", "False", "\n", "", "if", "not", "self", ".", "is_validation", ":", "\n", "                ", "if", "self", ".", "samples_per_class", "==", "1", ":", "\n", "                    ", "return", "self", ".", "image_list", "[", "idx", "]", "[", "-", "1", "]", ",", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_list", "[", "idx", "]", "[", "0", "]", ")", ")", ")", "\n", "", "if", "self", ".", "n_samples_drawn", "==", "self", ".", "samples_per_class", ":", "\n", "                    ", "counter", "=", "copy", ".", "deepcopy", "(", "self", ".", "avail_classes", ")", "\n", "for", "prev_class", "in", "self", ".", "classes_visited", ":", "\n", "                        ", "if", "prev_class", "in", "counter", ":", "counter", ".", "remove", "(", "prev_class", ")", "\n", "", "self", ".", "current_class", "=", "counter", "[", "idx", "%", "len", "(", "counter", ")", "]", "\n", "self", ".", "classes_visited", "=", "self", ".", "classes_visited", "[", "1", ":", "]", "+", "[", "self", ".", "current_class", "]", "\n", "self", ".", "n_samples_drawn", "=", "0", "\n", "", "class_sample_idx", "=", "idx", "%", "len", "(", "self", ".", "image_dict", "[", "self", ".", "current_class", "]", ")", "\n", "self", ".", "n_samples_drawn", "+=", "1", "\n", "out_img", "=", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_dict", "[", "self", ".", "current_class", "]", "[", "class_sample_idx", "]", ")", ")", ")", "\n", "return", "self", ".", "current_class", ",", "out_img", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "image_list", "[", "idx", "]", "[", "-", "1", "]", ",", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "Image", ".", "open", "(", "self", ".", "image_list", "[", "idx", "]", "[", "0", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.BaseTripletDataset.__len__": [[282, 284], ["None"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_files", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__init__": [[288, 307], ["torchvision.transforms.Normalize", "transf_list.extend", "transf_list.extend", "torchvision.transforms.Compose", "datasets.TrainDatasetrsk.reshuffle", "newsub.append", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomResizedCrop"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.reshuffle"], ["    ", "def", "__init__", "(", "self", ",", "image_dict", ",", "opt", ")", ":", "\n", "        ", "self", ".", "image_dict", "=", "image_dict", "\n", "self", ".", "dataset_name", "=", "opt", ".", "dataset", "\n", "self", ".", "batch_size", "=", "opt", ".", "bs", "\n", "self", ".", "samples_per_class", "=", "opt", ".", "samples_per_class", "\n", "for", "sub", "in", "self", ".", "image_dict", ":", "\n", "            ", "newsub", "=", "[", "]", "\n", "for", "instance", "in", "self", ".", "image_dict", "[", "sub", "]", ":", "\n", "                ", "newsub", ".", "append", "(", "(", "sub", ",", "instance", ")", ")", "\n", "", "self", ".", "image_dict", "[", "sub", "]", "=", "newsub", "\n", "", "self", ".", "avail_classes", "=", "[", "*", "self", ".", "image_dict", "]", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "transf_list", "=", "[", "]", "\n", "transf_list", ".", "extend", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "size", "=", "224", ")", "if", "opt", ".", "arch", "in", "[", "'resnet50'", ",", "'resnet50_mcn'", ",", "'ViTB16'", ",", "'ViTB32'", ",", "'DeiTB'", "]", "else", "transforms", ".", "RandomResizedCrop", "(", "size", "=", "227", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "0.5", ")", "]", ")", "\n", "transf_list", ".", "extend", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "normalize", "]", ")", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "transf_list", ")", "\n", "self", ".", "reshuffle", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim": [[308, 312], ["len", "img.convert.convert.convert"], "methods", ["None"], ["", "def", "ensure_3dim", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "len", "(", "img", ".", "size", ")", "==", "2", ":", "\n", "            ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.reshuffle": [[313, 335], ["copy.deepcopy", "print", "random.shuffle", "random.shuffle", "flatten", "random.shuffle", "flatten", "len", "total_batches.append", "batch.append", "len", "len"], "methods", ["None"], ["", "def", "reshuffle", "(", "self", ")", ":", "\n", "        ", "image_dict", "=", "copy", ".", "deepcopy", "(", "self", ".", "image_dict", ")", "\n", "print", "(", "'shuffling data'", ")", "\n", "for", "sub", "in", "image_dict", ":", "\n", "            ", "random", ".", "shuffle", "(", "image_dict", "[", "sub", "]", ")", "\n", "", "classes", "=", "[", "*", "image_dict", "]", "\n", "random", ".", "shuffle", "(", "classes", ")", "\n", "total_batches", "=", "[", "]", "\n", "batch", "=", "[", "]", "\n", "finished", "=", "0", "\n", "while", "finished", "==", "0", ":", "\n", "            ", "for", "sub_class", "in", "classes", ":", "\n", "                ", "if", "(", "len", "(", "image_dict", "[", "sub_class", "]", ")", ">=", "self", ".", "samples_per_class", ")", "and", "(", "len", "(", "batch", ")", "<", "self", ".", "batch_size", "/", "self", ".", "samples_per_class", ")", ":", "\n", "                    ", "batch", ".", "append", "(", "image_dict", "[", "sub_class", "]", "[", ":", "self", ".", "samples_per_class", "]", ")", "\n", "image_dict", "[", "sub_class", "]", "=", "image_dict", "[", "sub_class", "]", "[", "self", ".", "samples_per_class", ":", "]", "\n", "", "", "if", "len", "(", "batch", ")", "==", "self", ".", "batch_size", "/", "self", ".", "samples_per_class", ":", "\n", "                ", "total_batches", ".", "append", "(", "batch", ")", "\n", "batch", "=", "[", "]", "\n", "", "else", ":", "\n", "                ", "finished", "=", "1", "\n", "", "", "random", ".", "shuffle", "(", "total_batches", ")", "\n", "self", ".", "dataset", "=", "flatten", "(", "flatten", "(", "total_batches", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__getitem__": [[336, 344], ["PIL.Image.open", "int", "datasets.TrainDatasetrsk.transform", "datasets.TrainDatasetrsk.ensure_3dim", "batch_item[].split"], "methods", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.ensure_3dim"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "batch_item", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "if", "self", ".", "dataset_name", "in", "[", "'Inaturalist'", "]", ":", "\n", "            ", "cls", "=", "int", "(", "batch_item", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "cls", "=", "batch_item", "[", "0", "]", "\n", "", "img", "=", "Image", ".", "open", "(", "batch_item", "[", "1", "]", ")", "\n", "return", "cls", ",", "self", ".", "transform", "(", "self", ".", "ensure_3dim", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.TrainDatasetrsk.__len__": [[345, 347], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_dataloaders": [[9, 37], ["give_cub_datasets.items", "datasets.give_VehicleID_datasets", "datasets.give_inaturalist_datasets", "isinstance", "torch.utils.data.DataLoader", "datasets.give_cars196_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "datasets.give_sop_datasets", "torch.utils.data.SequentialSampler", "datasets.give_cub_datasets", "Exception"], "function", ["home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_VehicleID_datasets", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_inaturalist_datasets", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_cars196_datasets", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_sop_datasets", "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_cub_datasets"], ["def", "give_dataloaders", "(", "dataset", ",", "opt", ")", ":", "\n", "    ", "if", "opt", ".", "dataset", "==", "'vehicle_id'", ":", "\n", "        ", "datasets", "=", "give_VehicleID_datasets", "(", "opt", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "'Inaturalist'", ":", "\n", "        ", "datasets", "=", "give_inaturalist_datasets", "(", "opt", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "'cars196'", ":", "\n", "        ", "datasets", "=", "give_cars196_datasets", "(", "opt", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "'sop'", ":", "\n", "        ", "datasets", "=", "give_sop_datasets", "(", "opt", ")", "\n", "", "elif", "opt", ".", "dataset", "==", "'cub'", ":", "\n", "        ", "datasets", "=", "give_cub_datasets", "(", "opt", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'No Dataset >{}< available!'", ".", "format", "(", "dataset", ")", ")", "\n", "", "dataloaders", "=", "{", "}", "\n", "for", "key", ",", "dataset", "in", "datasets", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "dataset", ",", "TrainDatasetrsk", ")", "and", "key", "==", "'training'", ":", "\n", "            ", "dataloaders", "[", "key", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opt", ".", "bs", ",", "\n", "num_workers", "=", "opt", ".", "kernels", ",", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "SequentialSampler", "(", "dataset", ")", ",", "\n", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "is_val", "=", "dataset", ".", "is_validation", "\n", "if", "key", "==", "'training'", ":", "\n", "                ", "dataloaders", "[", "key", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opt", ".", "bs", ",", "\n", "num_workers", "=", "opt", ".", "kernels", ",", "shuffle", "=", "not", "is_val", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "not", "is_val", ")", "\n", "", "else", ":", "\n", "                ", "dataloaders", "[", "key", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "opt", ".", "bs_base", ",", "\n", "num_workers", "=", "6", ",", "shuffle", "=", "not", "is_val", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "not", "is_val", ")", "\n", "", "", "", "return", "dataloaders", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_cars196_datasets": [[39, 60], ["datasets.TrainDatasetrsk", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "os.path.join", "all_image_dict[].append", "list", "list", "scipy.io.loadmat", "all_image_dict.keys", "all_image_dict.keys", "all_image_dict.keys", "os.path.join"], "function", ["None"], ["", "def", "give_cars196_datasets", "(", "opt", ")", ":", "\n", "        ", "train_image_dict", ",", "test_image_dict", "=", "{", "}", ",", "{", "}", "\n", "all_image_dict", "=", "{", "}", "\n", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'cars_annos.mat'", ")", ")", "[", "'annotations'", "]", "[", "0", "]", "\n", "for", "entry", "in", "data", ":", "\n", "                ", "data_set", "=", "entry", "[", "6", "]", "[", "0", "]", "[", "0", "]", "\n", "im_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "entry", "[", "0", "]", "[", "0", "]", ")", "\n", "class_id", "=", "entry", "[", "5", "]", "[", "0", "]", "[", "0", "]", "\n", "if", "class_id", "not", "in", "all_image_dict", ".", "keys", "(", ")", ":", "\n", "                        ", "all_image_dict", "[", "class_id", "]", "=", "[", "]", "\n", "", "all_image_dict", "[", "class_id", "]", ".", "append", "(", "im_path", ")", "\n", "", "train_classes", "=", "list", "(", "all_image_dict", ".", "keys", "(", ")", ")", "[", ":", "98", "]", "\n", "val_classes", "=", "list", "(", "all_image_dict", ".", "keys", "(", ")", ")", "[", "98", ":", "]", "\n", "for", "given_class", "in", "train_classes", ":", "\n", "                ", "train_image_dict", "[", "given_class", "]", "=", "all_image_dict", "[", "given_class", "]", "\n", "", "for", "given_class", "in", "val_classes", ":", "\n", "                ", "test_image_dict", "[", "given_class", "]", "=", "all_image_dict", "[", "given_class", "]", "\n", "", "train_dataset", "=", "TrainDatasetrsk", "(", "train_image_dict", ",", "opt", ")", "\n", "val_dataset", "=", "BaseTripletDataset", "(", "test_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "eval_dataset", "=", "BaseTripletDataset", "(", "train_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "return", "{", "'training'", ":", "train_dataset", ",", "'testing'", ":", "val_dataset", ",", "'evaluation'", ":", "eval_dataset", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_sop_datasets": [[61, 96], ["datasets.TrainDatasetrsk", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "open().read().splitlines", "open().read().splitlines", "entry.split", "os.path.join", "train_image_dict[].append", "entry.split", "os.path.join", "test_image_dict[].append", "train_image_dict.keys", "test_image_dict.keys", "open().read", "open().read", "open", "open", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "give_sop_datasets", "(", "opt", ")", ":", "\n", "\t", "train_image_dict", ",", "test_image_dict", "=", "{", "}", ",", "{", "}", "\n", "train_data", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'Ebay_train.txt'", ")", ",", "'r'", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "[", "1", ":", "]", "\n", "test_data", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'Ebay_test.txt'", ")", ",", "'r'", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "[", "1", ":", "]", "\n", "for", "entry", "in", "train_data", ":", "\n", "\t\t", "info", "=", "entry", ".", "split", "(", "' '", ")", "\n", "class_id", "=", "info", "[", "1", "]", "\n", "im_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "info", "[", "3", "]", ")", "\n", "if", "class_id", "not", "in", "train_image_dict", ".", "keys", "(", ")", ":", "\n", "\t\t\t", "train_image_dict", "[", "class_id", "]", "=", "[", "]", "\n", "", "train_image_dict", "[", "class_id", "]", ".", "append", "(", "im_path", ")", "\n", "", "for", "entry", "in", "test_data", ":", "\n", "\t\t", "info", "=", "entry", ".", "split", "(", "' '", ")", "\n", "class_id", "=", "info", "[", "1", "]", "\n", "im_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "info", "[", "3", "]", ")", "\n", "if", "class_id", "not", "in", "test_image_dict", ".", "keys", "(", ")", ":", "\n", "\t\t\t", "test_image_dict", "[", "class_id", "]", "=", "[", "]", "\n", "", "test_image_dict", "[", "class_id", "]", ".", "append", "(", "im_path", ")", "\n", "\n", "", "new_train_dict", "=", "{", "}", "\n", "class_ind_ind", "=", "0", "\n", "for", "cate", "in", "train_image_dict", ":", "\n", "\t\t", "new_train_dict", "[", "class_ind_ind", "]", "=", "train_image_dict", "[", "cate", "]", "\n", "class_ind_ind", "+=", "1", "\n", "", "train_image_dict", "=", "new_train_dict", "\n", "new_test_dict", "=", "{", "}", "\n", "class_ind_ind", "=", "0", "\n", "for", "cate", "in", "test_image_dict", ":", "\n", "\t\t", "new_test_dict", "[", "class_ind_ind", "]", "=", "test_image_dict", "[", "cate", "]", "\n", "class_ind_ind", "+=", "1", "\n", "", "test_image_dict", "=", "new_test_dict", "\n", "train_dataset", "=", "TrainDatasetrsk", "(", "train_image_dict", ",", "opt", ")", "\n", "val_dataset", "=", "BaseTripletDataset", "(", "test_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "eval_dataset", "=", "BaseTripletDataset", "(", "train_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "return", "{", "'training'", ":", "train_dataset", ",", "'testing'", ":", "val_dataset", ",", "'evaluation'", ":", "eval_dataset", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_cub_datasets": [[97, 129], ["open().read().splitlines", "open().read().splitlines", "data_dict.keys", "TrainDatasetsmoothap", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "int", "data_dict[].append", "int", "os.path.join", "all_image_dict[].append", "list", "list", "open().read", "open().read", "given_sample.split", "given_sample.split", "given_sample.split", "all_image_dict.keys", "all_image_dict.keys", "all_image_dict.keys", "given_sample.split", "given_sample[].split", "open", "open", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "give_cub_datasets", "(", "opt", ")", ":", "\n", "        ", "train_image_dict", ",", "test_image_dict", "=", "{", "}", ",", "{", "}", "\n", "all_image_dict", "=", "{", "}", "\n", "images_data", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'images.txt'", ")", ",", "'r'", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "split_data", "=", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'train_test_split.txt'", ")", ",", "'r'", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "data_dict", "=", "{", "}", "\n", "for", "given_sample", "in", "images_data", ":", "\n", "                ", "key", "=", "given_sample", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "path", "=", "given_sample", ".", "split", "(", "' '", ")", "[", "1", "]", "\n", "data_dict", "[", "key", "]", "=", "[", "path", "]", "\n", "", "for", "given_sample", "in", "split_data", ":", "\n", "                ", "key", "=", "given_sample", ".", "split", "(", "' '", ")", "[", "0", "]", "\n", "split", "=", "int", "(", "given_sample", ".", "split", "(", "' '", ")", "[", "1", "]", ")", "\n", "data_dict", "[", "key", "]", ".", "append", "(", "split", ")", "\n", "", "for", "entry", "in", "data_dict", ".", "keys", "(", ")", ":", "\n", "                ", "given_sample", "=", "data_dict", "[", "entry", "]", "\n", "class_id", "=", "int", "(", "given_sample", "[", "0", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "im_path", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'images'", ",", "given_sample", "[", "0", "]", ")", "\n", "split", "=", "given_sample", "[", "1", "]", "\n", "if", "class_id", "not", "in", "all_image_dict", ".", "keys", "(", ")", ":", "\n", "                        ", "all_image_dict", "[", "class_id", "]", "=", "[", "]", "\n", "", "all_image_dict", "[", "class_id", "]", ".", "append", "(", "im_path", ")", "\n", "", "train_classes", "=", "list", "(", "all_image_dict", ".", "keys", "(", ")", ")", "[", ":", "100", "]", "\n", "val_classes", "=", "list", "(", "all_image_dict", ".", "keys", "(", ")", ")", "[", "100", ":", "]", "\n", "for", "given_class", "in", "train_classes", ":", "\n", "                ", "train_image_dict", "[", "given_class", "]", "=", "all_image_dict", "[", "given_class", "]", "\n", "", "for", "given_class", "in", "val_classes", ":", "\n", "                ", "test_image_dict", "[", "given_class", "]", "=", "all_image_dict", "[", "given_class", "]", "\n", "", "train_dataset", "=", "TrainDatasetsmoothap", "(", "train_image_dict", ",", "opt", ")", "\n", "val_dataset", "=", "BaseTripletDataset", "(", "test_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "eval_dataset", "=", "BaseTripletDataset", "(", "train_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "return", "{", "'training'", ":", "train_dataset", ",", "'testing'", ":", "val_dataset", ",", "'evaluation'", ":", "eval_dataset", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_inaturalist_datasets": [[130, 158], ["datasets.TrainDatasetrsk", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "open", "f.readlines", "open", "f.readlines", "os.path.join", "x.strip", "entry.split", "train_image_dict[].append", "os.path.join", "x.strip", "entry.split", "val_image_dict[].append", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "give_inaturalist_datasets", "(", "opt", ")", ":", "\n", "    ", "train_image_dict", ",", "val_image_dict", "=", "{", "}", ",", "{", "}", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'Inat_dataset_splits/Inaturalist_train_set1.txt'", ")", ")", "as", "f", ":", "\n", "        ", "FileLines", "=", "f", ".", "readlines", "(", ")", "\n", "FileLines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "FileLines", "]", "\n", "for", "entry", "in", "FileLines", ":", "\n", "            ", "info", "=", "entry", ".", "split", "(", "'/'", ")", "\n", "if", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "not", "in", "train_image_dict", ":", "\n", "                ", "train_image_dict", "[", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "]", "=", "[", "]", "\n", "", "train_image_dict", "[", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "entry", ")", ")", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "'Inat_dataset_splits/Inaturalist_test_set1.txt'", ")", ")", "as", "f", ":", "\n", "        ", "FileLines", "=", "f", ".", "readlines", "(", ")", "\n", "FileLines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "FileLines", "]", "\n", "for", "entry", "in", "FileLines", ":", "\n", "            ", "info", "=", "entry", ".", "split", "(", "'/'", ")", "\n", "if", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "not", "in", "val_image_dict", ":", "\n", "                ", "val_image_dict", "[", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "]", "=", "[", "]", "\n", "", "val_image_dict", "[", "'/'", ".", "join", "(", "[", "info", "[", "-", "3", "]", ",", "info", "[", "-", "2", "]", "]", ")", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "source_path", ",", "entry", ")", ")", "\n", "", "", "new_train_dict", "=", "{", "}", "\n", "class_ind_ind", "=", "0", "\n", "for", "cate", "in", "train_image_dict", ":", "\n", "        ", "new_train_dict", "[", "\"te/%d\"", "%", "class_ind_ind", "]", "=", "train_image_dict", "[", "cate", "]", "\n", "class_ind_ind", "+=", "1", "\n", "", "train_image_dict", "=", "new_train_dict", "\n", "train_dataset", "=", "TrainDatasetrsk", "(", "train_image_dict", ",", "opt", ")", "\n", "val_dataset", "=", "BaseTripletDataset", "(", "val_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "eval_dataset", "=", "BaseTripletDataset", "(", "train_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "return", "{", "'training'", ":", "train_dataset", ",", "'testing'", ":", "val_dataset", ",", "'evaluation'", ":", "eval_dataset", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yash0307_RecallatK_surrogate.src.datasets.give_VehicleID_datasets": [[159, 207], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "datasets.TrainDatasetrsk", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "datasets.BaseTripletDataset", "pandas.read_table", "pandas.read_table", "pandas.read_table", "pandas.read_table", "train_image_dict[].append", "small_test_dict[].append", "medium_test_dict[].append", "big_test_dict[].append", "pandas.read_table", "enumerate", "enumerate", "new_dict[].append", "numpy.unique", "numpy.unique", "train_image_dict.keys", "small_test_dict.keys", "medium_test_dict.keys", "big_test_dict.keys", "numpy.concatenate"], "function", ["None"], ["", "def", "give_VehicleID_datasets", "(", "opt", ")", ":", "\n", "    ", "train", "=", "np", ".", "array", "(", "pd", ".", "read_table", "(", "opt", ".", "source_path", "+", "'/train_test_split/train_list.txt'", ",", "header", "=", "None", ",", "delim_whitespace", "=", "True", ")", ")", "\n", "small_test", "=", "np", ".", "array", "(", "pd", ".", "read_table", "(", "opt", ".", "source_path", "+", "'/train_test_split/test_list_800.txt'", ",", "header", "=", "None", ",", "delim_whitespace", "=", "True", ")", ")", "\n", "medium_test", "=", "np", ".", "array", "(", "pd", ".", "read_table", "(", "opt", ".", "source_path", "+", "'/train_test_split/test_list_1600.txt'", ",", "header", "=", "None", ",", "delim_whitespace", "=", "True", ")", ")", "\n", "big_test", "=", "np", ".", "array", "(", "pd", ".", "read_table", "(", "opt", ".", "source_path", "+", "'/train_test_split/test_list_2400.txt'", ",", "header", "=", "None", ",", "delim_whitespace", "=", "True", ")", ")", "\n", "lab_conv_train", "=", "{", "x", ":", "i", "for", "i", ",", "x", "in", "enumerate", "(", "np", ".", "unique", "(", "train", "[", ":", ",", "1", "]", ")", ")", "}", "\n", "train", "[", ":", ",", "1", "]", "=", "np", ".", "array", "(", "[", "lab_conv_train", "[", "x", "]", "for", "x", "in", "train", "[", ":", ",", "1", "]", "]", ")", "\n", "lab_conv", "=", "{", "x", ":", "i", "for", "i", ",", "x", "in", "enumerate", "(", "np", ".", "unique", "(", "np", ".", "concatenate", "(", "[", "small_test", "[", ":", ",", "1", "]", ",", "medium_test", "[", ":", ",", "1", "]", ",", "big_test", "[", ":", ",", "1", "]", "]", ")", ")", ")", "}", "\n", "small_test", "[", ":", ",", "1", "]", "=", "np", ".", "array", "(", "[", "lab_conv", "[", "x", "]", "for", "x", "in", "small_test", "[", ":", ",", "1", "]", "]", ")", "\n", "medium_test", "[", ":", ",", "1", "]", "=", "np", ".", "array", "(", "[", "lab_conv", "[", "x", "]", "for", "x", "in", "medium_test", "[", ":", ",", "1", "]", "]", ")", "\n", "big_test", "[", ":", ",", "1", "]", "=", "np", ".", "array", "(", "[", "lab_conv", "[", "x", "]", "for", "x", "in", "big_test", "[", ":", ",", "1", "]", "]", ")", "\n", "train_image_dict", "=", "{", "}", "\n", "for", "img_path", ",", "key", "in", "train", ":", "\n", "        ", "if", "not", "key", "in", "train_image_dict", ".", "keys", "(", ")", ":", "\n", "            ", "train_image_dict", "[", "key", "]", "=", "[", "]", "\n", "", "train_image_dict", "[", "key", "]", ".", "append", "(", "opt", ".", "source_path", "+", "'/image/{:07d}.jpg'", ".", "format", "(", "img_path", ")", ")", "\n", "", "small_test_dict", "=", "{", "}", "\n", "for", "img_path", ",", "key", "in", "small_test", ":", "\n", "        ", "if", "not", "key", "in", "small_test_dict", ".", "keys", "(", ")", ":", "\n", "            ", "small_test_dict", "[", "key", "]", "=", "[", "]", "\n", "", "small_test_dict", "[", "key", "]", ".", "append", "(", "opt", ".", "source_path", "+", "'/image/{:07d}.jpg'", ".", "format", "(", "img_path", ")", ")", "\n", "", "medium_test_dict", "=", "{", "}", "\n", "for", "img_path", ",", "key", "in", "medium_test", ":", "\n", "        ", "if", "not", "key", "in", "medium_test_dict", ".", "keys", "(", ")", ":", "\n", "            ", "medium_test_dict", "[", "key", "]", "=", "[", "]", "\n", "", "medium_test_dict", "[", "key", "]", ".", "append", "(", "opt", ".", "source_path", "+", "'/image/{:07d}.jpg'", ".", "format", "(", "img_path", ")", ")", "\n", "", "big_test_dict", "=", "{", "}", "\n", "for", "img_path", ",", "key", "in", "big_test", ":", "\n", "        ", "if", "not", "key", "in", "big_test_dict", ".", "keys", "(", ")", ":", "\n", "            ", "big_test_dict", "[", "key", "]", "=", "[", "]", "\n", "", "big_test_dict", "[", "key", "]", ".", "append", "(", "opt", ".", "source_path", "+", "'/image/{:07d}.jpg'", ".", "format", "(", "img_path", ")", ")", "\n", "", "attribute", "=", "np", ".", "array", "(", "pd", ".", "read_table", "(", "opt", ".", "source_path", "+", "'/attribute/model_attr.txt'", ",", "header", "=", "None", ",", "delim_whitespace", "=", "True", ")", ")", "\n", "new_dict", "=", "{", "}", "\n", "not_found", "=", "0", "\n", "for", "thing", "in", "attribute", ":", "\n", "        ", "if", "lab_conv_train", "[", "thing", "[", "0", "]", "]", "not", "in", "train_image_dict", ":", "\n", "            ", "not_found", "+=", "1", "\n", "", "else", ":", "\n", "            ", "if", "thing", "[", "1", "]", "not", "in", "new_dict", ":", "\n", "                ", "new_dict", "[", "thing", "[", "1", "]", "]", "=", "[", "]", "\n", "", "new_dict", "[", "thing", "[", "1", "]", "]", ".", "append", "(", "lab_conv_train", "[", "thing", "[", "0", "]", "]", ")", "\n", "", "", "train_dataset", "=", "TrainDatasetrsk", "(", "train_image_dict", ",", "opt", ")", "\n", "eval_dataset", "=", "BaseTripletDataset", "(", "train_image_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "val_small_dataset", "=", "BaseTripletDataset", "(", "small_test_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "val_medium_dataset", "=", "BaseTripletDataset", "(", "medium_test_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "val_big_dataset", "=", "BaseTripletDataset", "(", "big_test_dict", ",", "opt", ",", "is_validation", "=", "True", ")", "\n", "return", "{", "'training'", ":", "train_dataset", ",", "'testing_set1'", ":", "val_small_dataset", ",", "'testing_set2'", ":", "val_medium_dataset", ",", "'testing_set3'", ":", "val_big_dataset", ",", "'evaluation'", ":", "eval_dataset", "}", "\n", "\n"]]}