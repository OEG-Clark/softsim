{"home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEModule.__init__": [[14, 23], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "channels", ",", "channels", "//", "reduction", ",", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "channels", "//", "reduction", ",", "channels", ",", "kernel_size", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEModule.forward": [[24, 32], ["network.SEModule.avg_pool", "network.SEModule.fc1", "network.SEModule.relu", "network.SEModule.fc2", "network.SEModule.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEBasicBlock.__init__": [[37, 58], ["torch.Module.__init__", "network.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "network.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "network.SEModule", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.conv3x3", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "with_variation", "=", "False", ")", ":", "\n", "        ", "super", "(", "SEBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "if", "with_variation", ":", "\n", "            ", "out_planes", "=", "planes", "+", "1", "\n", "", "else", ":", "\n", "            ", "out_planes", "=", "planes", "\n", "", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "out_planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "se", "=", "SEModule", "(", "out_planes", ",", "reduction", "=", "16", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n", "\n", "", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEBasicBlock.forward": [[59, 73], ["network.SEBasicBlock.conv1", "network.SEBasicBlock.bn1", "network.SEBasicBlock.relu", "network.SEBasicBlock.conv2", "network.SEBasicBlock.bn2", "network.SEBasicBlock.se", "network.SEBasicBlock.downsample", "network.SEBasicBlock.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "out", "+=", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEBottleneck.__init__": [[78, 101], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "network.SEModule", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "with_variation", "=", "False", ")", ":", "\n", "        ", "super", "(", "SEBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "if", "with_variation", ":", "\n", "            ", "out_planes", "=", "planes", "*", "self", ".", "expansion", "+", "1", "\n", "", "else", ":", "\n", "            ", "out_planes", "=", "planes", "*", "self", ".", "expansion", "\n", "", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "se", "=", "SEModule", "(", "out_planes", ",", "reduction", "=", "16", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n", "", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.SEBottleneck.forward": [[102, 120], ["network.SEBottleneck.conv1", "network.SEBottleneck.bn1", "network.SEBottleneck.relu", "network.SEBottleneck.conv2", "network.SEBottleneck.bn2", "network.SEBottleneck.relu", "network.SEBottleneck.conv3", "network.SEBottleneck.bn3", "network.SEBottleneck.se", "network.SEBottleneck.downsample", "network.SEBottleneck.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "out", "+=", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.EmbeddingSENet.__init__": [[128, 144], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "network.EmbeddingSENet._make_layer", "network.EmbeddingSENet._make_layer", "network.EmbeddingSENet._make_layer", "network.EmbeddingSENet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_class", "=", "80", ",", "with_variation", "=", "True", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "EmbeddingSENet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_variation", "=", "with_variation", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_class", ")", "\n", "self", ".", "expansion", "=", "block", ".", "expansion", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.EmbeddingSENet._make_layer": [[146, 156], ["layers.append", "range", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "block", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", "-", "1", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "with_variation", "=", "self", ".", "with_variation", ")", ")", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.EmbeddingSENet.forward": [[157, 222], ["network.EmbeddingSENet.conv1", "network.EmbeddingSENet.bn1", "network.EmbeddingSENet.relu", "network.EmbeddingSENet.maxpool", "network.EmbeddingSENet.view", "network.EmbeddingSENet.fc", "network.EmbeddingSENet.layer1", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "feature1_std.view.view.repeat", "network.EmbeddingSENet.layer2", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "feature2_std.view.view.repeat", "network.EmbeddingSENet.layer3", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "feature3_std.view.view.repeat", "network.EmbeddingSENet.layer4", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "feature4_std.view.view.repeat", "network.EmbeddingSENet.avgpool", "feature1_std.view.view.view", "feature2_std.view.view.view", "feature3_std.view.view.view", "feature4_std.view.view.view", "network.EmbeddingSENet.layer1", "network.EmbeddingSENet.layer2", "network.EmbeddingSENet.layer3", "network.EmbeddingSENet.layer4", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "network.EmbeddingSENet.avgpool", "network.EmbeddingSENet.size", "feature1_std.view.view.size", "feature2_std.view.view.size", "feature3_std.view.view.size", "feature4_std.view.view.size", "network.EmbeddingSENet.size", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "network.EmbeddingSENet.get_device", "feature1_mean.size", "feature2_mean.size", "feature3_mean.size", "feature4_mean.size", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "network.EmbeddingSENet.get_device", "network.EmbeddingSENet.get_device", "network.EmbeddingSENet.get_device", "network.EmbeddingSENet.get_device", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "variational_features", "=", "[", "]", "\n", "\n", "if", "self", ".", "with_variation", ":", "# variational version", "\n", "            ", "feature1", "=", "self", ".", "layer1", "(", "x", ")", "# [expansion*64+1,56,56]", "\n", "split_size", "=", "[", "self", ".", "expansion", "*", "64", ",", "1", "]", "\n", "feature1_mean", ",", "feature1_std", "=", "torch", ".", "split", "(", "feature1", ",", "split_size", ",", "dim", "=", "1", ")", "\n", "feature1_std", "=", "torch", ".", "sigmoid", "(", "feature1_std", ")", "\n", "feature1_std_ext", "=", "feature1_std", ".", "repeat", "(", "1", ",", "split_size", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "feature1", "=", "feature1_mean", "+", "feature1_std_ext", "*", "torch", ".", "randn", "(", "feature1_mean", ".", "size", "(", ")", ",", "device", "=", "feature1", ".", "get_device", "(", ")", ")", "\n", "\n", "feature2", "=", "self", ".", "layer2", "(", "feature1", ")", "#[expansion*128+1,28,28]", "\n", "split_size", "=", "[", "self", ".", "expansion", "*", "128", ",", "1", "]", "\n", "feature2_mean", ",", "feature2_std", "=", "torch", ".", "split", "(", "feature2", ",", "split_size", ",", "dim", "=", "1", ")", "\n", "feature2_std", "=", "torch", ".", "sigmoid", "(", "feature2_std", ")", "\n", "feature2_std_ext", "=", "feature2_std", ".", "repeat", "(", "1", ",", "split_size", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "feature2", "=", "feature2_mean", "+", "feature2_std_ext", "*", "torch", ".", "randn", "(", "feature2_mean", ".", "size", "(", ")", ",", "device", "=", "feature2", ".", "get_device", "(", ")", ")", "\n", "\n", "feature3", "=", "self", ".", "layer3", "(", "feature2", ")", "#[expansion*256+1,14,14]", "\n", "split_size", "=", "[", "self", ".", "expansion", "*", "256", ",", "1", "]", "\n", "feature3_mean", ",", "feature3_std", "=", "torch", ".", "split", "(", "feature3", ",", "split_size", ",", "dim", "=", "1", ")", "\n", "feature3_std", "=", "torch", ".", "sigmoid", "(", "feature3_std", ")", "\n", "feature3_std_ext", "=", "feature3_std", ".", "repeat", "(", "1", ",", "split_size", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "feature3", "=", "feature3_mean", "+", "feature3_std_ext", "*", "torch", ".", "randn", "(", "feature3_mean", ".", "size", "(", ")", ",", "device", "=", "feature3", ".", "get_device", "(", ")", ")", "\n", "\n", "feature4", "=", "self", ".", "layer4", "(", "feature3", ")", "#[expansion*512+1,7,7]", "\n", "split_size", "=", "[", "self", ".", "expansion", "*", "512", ",", "1", "]", "\n", "feature4_mean", ",", "feature4_std", "=", "torch", ".", "split", "(", "feature4", ",", "split_size", ",", "dim", "=", "1", ")", "\n", "feature4_std", "=", "torch", ".", "sigmoid", "(", "feature4_std", ")", "\n", "feature4_std_ext", "=", "feature4_std", ".", "repeat", "(", "1", ",", "split_size", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "feature4", "=", "feature4_mean", "+", "feature4_std_ext", "*", "torch", ".", "randn", "(", "feature4_mean", ".", "size", "(", ")", ",", "device", "=", "feature4", ".", "get_device", "(", ")", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "feature4", ")", "\n", "\n", "variational_features", "=", "[", "feature1_mean", ",", "feature1_std_ext", ",", "\n", "feature2_mean", ",", "feature2_std_ext", ",", "\n", "feature3_mean", ",", "feature3_std_ext", ",", "\n", "feature4_mean", ",", "feature4_std_ext", "]", "\n", "\n", "feature1_std", "=", "feature1_std", ".", "view", "(", "feature1_std", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "feature2_std", "=", "feature2_std", ".", "view", "(", "feature2_std", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "feature3_std", "=", "feature3_std", ".", "view", "(", "feature3_std", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "feature4_std", "=", "feature4_std", ".", "view", "(", "feature4_std", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "std_mean", "=", "(", "torch", ".", "mean", "(", "feature1_std", ",", "1", ")", "+", "torch", ".", "mean", "(", "feature2_std", ",", "1", ")", "+", "torch", ".", "mean", "(", "feature3_std", ",", "1", ")", "+", "torch", ".", "mean", "(", "feature4_std", ",", "1", ")", ")", "/", "4.0", "\n", "\n", "", "else", ":", "#standard version", "\n", "            ", "feature1", "=", "self", ".", "layer1", "(", "x", ")", "# [expansion*64,56,56]", "\n", "feature2", "=", "self", ".", "layer2", "(", "feature1", ")", "#[expansion*128,28,28]", "\n", "feature3", "=", "self", ".", "layer3", "(", "feature2", ")", "#[expansion*256,14,14]", "\n", "feature4", "=", "self", ".", "layer4", "(", "feature3", ")", "#[expansion*512,7,7]", "\n", "std_mean", "=", "torch", ".", "zeros", "(", "feature1", ".", "size", "(", "0", ")", ",", "1", ",", "device", "=", "feature1", ".", "get_device", "(", ")", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "feature4", ")", "\n", "\n", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "\n", "\n", "return", "x", ",", "[", "feature1", ",", "feature2", ",", "feature3", ",", "feature4", "]", ",", "std_mean", ",", "variational_features", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet.__init__": [[228, 254], ["torch.Module.__init__", "network.RelationSENet._make_layer", "network.RelationSENet._make_layer", "network.RelationSENet._make_layer", "network.RelationSENet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_class", ",", "weight_or_not", "=", "\"weight\"", ",", "loss", "=", "\"CE\"", ")", ":", "\n", "        ", "super", "(", "RelationSENet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relation1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", "*", "2", ",", "128", ",", "layers", "[", "0", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "relation2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", "*", "3", ",", "256", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "relation3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", "*", "3", ",", "512", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "relation4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", "*", "3", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "avgpool1", "=", "nn", ".", "AvgPool2d", "(", "28", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "128", "*", "block", ".", "expansion", ",", "1", ")", "\n", "self", ".", "fc_w1", "=", "nn", ".", "Linear", "(", "128", "*", "block", ".", "expansion", ",", "1", ")", "\n", "\n", "self", ".", "avgpool2", "=", "nn", ".", "AvgPool2d", "(", "14", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "256", "*", "block", ".", "expansion", ",", "1", ")", "\n", "self", ".", "fc_w2", "=", "nn", ".", "Linear", "(", "256", "*", "block", ".", "expansion", ",", "1", ")", "\n", "\n", "self", ".", "avgpool3", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "1", ")", "\n", "self", ".", "fc_w3", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "1", ")", "\n", "\n", "self", ".", "avgpool4", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "1", ")", "\n", "self", ".", "fc_w4", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "1", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "weight_or_not", "=", "weight_or_not", "\n", "self", ".", "loss", "=", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet._make_layer": [[255, 264], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.RelationSENet.forward": [[265, 317], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.RelationSENet.relation1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.RelationSENet.relation2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.RelationSENet.relation3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.RelationSENet.relation4", "network.RelationSENet.avgpool1", "similarity_feature1.view.view.view", "network.RelationSENet.fc1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "network.RelationSENet.avgpool2", "similarity_feature2.view.view.view", "network.RelationSENet.fc2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "network.RelationSENet.avgpool3", "similarity_feature3.view.view.view", "network.RelationSENet.fc3", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "network.RelationSENet.avgpool4", "similarity_feature4.view.view.view", "network.RelationSENet.fc4", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "similarity_feature1.view.view.size", "network.RelationSENet.fc_w1", "similarity_feature2.view.view.size", "network.RelationSENet.fc_w2", "similarity_feature3.view.view.size", "network.RelationSENet.fc_w3", "similarity_feature4.view.view.size", "network.RelationSENet.fc_w4", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "support_x_features", ",", "query_x_features", ")", ":", "\n", "\n", "        ", "pairs1", "=", "torch", ".", "cat", "(", "(", "support_x_features", "[", "0", "]", ",", "query_x_features", "[", "0", "]", ")", ",", "1", ")", "\n", "similarity_feature1", "=", "self", ".", "relation1", "(", "pairs1", ")", "#[expansion*128,28,28]", "\n", "\n", "pairs2", "=", "torch", ".", "cat", "(", "(", "support_x_features", "[", "1", "]", ",", "similarity_feature1", ",", "query_x_features", "[", "1", "]", ")", ",", "1", ")", "\n", "similarity_feature2", "=", "self", ".", "relation2", "(", "pairs2", ")", "#[expansion*256,14,14]", "\n", "\n", "pairs3", "=", "torch", ".", "cat", "(", "(", "support_x_features", "[", "2", "]", ",", "similarity_feature2", ",", "query_x_features", "[", "2", "]", ")", ",", "1", ")", "\n", "similarity_feature3", "=", "self", ".", "relation3", "(", "pairs3", ")", "#[expansion*512,7,7]", "\n", "\n", "pairs4", "=", "torch", ".", "cat", "(", "(", "support_x_features", "[", "3", "]", ",", "similarity_feature3", ",", "query_x_features", "[", "3", "]", ")", ",", "1", ")", "\n", "similarity_feature4", "=", "self", ".", "relation4", "(", "pairs4", ")", "#[expansion*512,7,7]", "\n", "\n", "similarity_feature1", "=", "self", ".", "avgpool1", "(", "similarity_feature1", ")", "\n", "similarity_feature1", "=", "similarity_feature1", ".", "view", "(", "similarity_feature1", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# score1 = torch.sigmoid(self.fc1(similarity_feature1))", "\n", "score1", "=", "self", ".", "fc1", "(", "similarity_feature1", ")", "\n", "w1", "=", "torch", ".", "sigmoid", "(", "self", ".", "fc_w1", "(", "similarity_feature1", ")", ")", "\n", "\n", "similarity_feature2", "=", "self", ".", "avgpool2", "(", "similarity_feature2", ")", "\n", "similarity_feature2", "=", "similarity_feature2", ".", "view", "(", "similarity_feature2", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# score2 = torch.sigmoid(self.fc2(similarity_feature2))", "\n", "score2", "=", "self", ".", "fc2", "(", "similarity_feature2", ")", "\n", "w2", "=", "torch", ".", "sigmoid", "(", "self", ".", "fc_w2", "(", "similarity_feature2", ")", ")", "\n", "\n", "\n", "similarity_feature3", "=", "self", ".", "avgpool3", "(", "similarity_feature3", ")", "\n", "similarity_feature3", "=", "similarity_feature3", ".", "view", "(", "similarity_feature3", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# score3 = torch.sigmoid(self.fc3(similarity_feature3))", "\n", "score3", "=", "self", ".", "fc3", "(", "similarity_feature3", ")", "\n", "w3", "=", "torch", ".", "sigmoid", "(", "self", ".", "fc_w3", "(", "similarity_feature3", ")", ")", "\n", "\n", "similarity_feature4", "=", "self", ".", "avgpool4", "(", "similarity_feature4", ")", "\n", "similarity_feature4", "=", "similarity_feature4", ".", "view", "(", "similarity_feature4", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# score4 = torch.sigmoid(self.fc4(similarity_feature4))", "\n", "score4", "=", "self", ".", "fc4", "(", "similarity_feature4", ")", "\n", "w4", "=", "torch", ".", "sigmoid", "(", "self", ".", "fc_w4", "(", "similarity_feature4", ")", ")", "\n", "\n", "if", "self", ".", "loss", "==", "\"BCE\"", ":", "\n", "            ", "score1", "=", "torch", ".", "sigmoid", "(", "score1", ")", "\n", "score2", "=", "torch", ".", "sigmoid", "(", "score2", ")", "\n", "score3", "=", "torch", ".", "sigmoid", "(", "score3", ")", "\n", "score4", "=", "torch", ".", "sigmoid", "(", "score4", ")", "\n", "\n", "", "if", "self", ".", "weight_or_not", "==", "\"weight\"", ":", "\n", "            ", "score1", "=", "w1", "*", "score1", "\n", "score2", "=", "w2", "*", "score2", "\n", "score3", "=", "w3", "*", "score3", "\n", "score4", "=", "w4", "*", "score4", "\n", "\n", "", "return", "score1", ",", "score2", ",", "score3", ",", "score4", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.DCN.__init__": [[325, 344], ["torch.Module.__init__", "network.EmbeddingSENet", "network.RelationSENet", "network.DCN.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_class", ",", "num_support", ",", "num_query", ",", "num_embedding_class", ",", "with_variation", "=", "True", ",", "weight_or_not", "=", "\"weight\"", ",", "loss", "=", "\"CE\"", ")", ":", "\n", "        ", "super", "(", "DCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_support", "=", "num_support", "\n", "self", ".", "num_query", "=", "num_query", "\n", "self", ".", "with_variation", "=", "with_variation", "\n", "self", ".", "weight_or_not", "=", "weight_or_not", "\n", "self", ".", "loss", "=", "loss", "\n", "\n", "self", ".", "embedding", "=", "EmbeddingSENet", "(", "SEBasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_embedding_class", ",", "with_variation", ")", "\n", "self", ".", "relation", "=", "RelationSENet", "(", "SEBasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_class", ",", "self", ".", "weight_or_not", ",", "self", ".", "loss", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.DCN.forward": [[345, 382], ["query_x.unsqueeze().repeat", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "torch.transpose().contiguous().view", "network.DCN.embedding", "network.DCN.relation", "network.DCN.embedding", "support_x_feature.unsqueeze().repeat().view.unsqueeze().repeat().view.size", "support_x_feature.unsqueeze().repeat().view.unsqueeze().repeat().view.view", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "support_x_feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze().repeat().view", "support_x_features.append", "network.DCN.embedding", "range", "support_x.unsqueeze().repeat().view", "network.DCN.embedding", "query_x.unsqueeze", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "feature.unsqueeze().repeat().view.unsqueeze().repeat().view.size", "feature.unsqueeze().repeat().view.unsqueeze().repeat().view.view", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze().repeat().view", "pro_features.append", "support_x_features.append", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "support_x_feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze().repeat", "support_x.unsqueeze().repeat", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze().repeat", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "support_x_feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze", "pro_features[].size", "support_x.unsqueeze", "feature.unsqueeze().repeat().view.unsqueeze().repeat().view.unsqueeze", "pro_features[].get_device"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "support_x", ",", "query_x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "num_support", ">", "1", "and", "not", "self", ".", "with_variation", ":", "# k shot setting", "\n", "            ", "_", ",", "pre_support_x_features", ",", "_", ",", "_", "=", "self", ".", "embedding", "(", "support_x", ")", "#[25,16,xx,xx]", "\n", "support_x_features", "=", "[", "]", "\n", "for", "support_x_feature", "in", "pre_support_x_features", ":", "\n", "                ", "b", ",", "c", ",", "h", ",", "w", "=", "support_x_feature", ".", "size", "(", ")", "\n", "support_x_feature", "=", "support_x_feature", ".", "view", "(", "self", ".", "num_class", ",", "self", ".", "num_support", ",", "c", ",", "h", ",", "w", ")", "\n", "support_x_feature", "=", "torch", ".", "mean", "(", "support_x_feature", ",", "1", ")", ".", "squeeze", "(", "1", ")", "#[5,c,h,w]", "\n", "support_x_feature", "=", "support_x_feature", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_class", "*", "self", ".", "num_query", ",", "1", ",", "1", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "support_x_features", ".", "append", "(", "support_x_feature", ")", "\n", "\n", "", "", "elif", "self", ".", "num_support", ">", "1", "and", "self", ".", "with_variation", ":", "\n", "            ", "_", ",", "_", ",", "_", ",", "variational_features", "=", "self", ".", "embedding", "(", "support_x", ")", "\n", "pro_features", "=", "[", "]", "\n", "for", "feature", "in", "variational_features", ":", "\n", "                ", "b", ",", "c", ",", "h", ",", "w", "=", "feature", ".", "size", "(", ")", "\n", "feature", "=", "feature", ".", "view", "(", "self", ".", "num_class", ",", "self", ".", "num_support", ",", "c", ",", "h", ",", "w", ")", "\n", "feature", "=", "torch", ".", "mean", "(", "feature", ",", "1", ")", ".", "squeeze", "(", "1", ")", "#[5,c,h,w]", "\n", "feature", "=", "feature", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_class", "*", "self", ".", "num_query", ",", "1", ",", "1", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", "\n", "pro_features", ".", "append", "(", "feature", ")", "\n", "", "support_x_features", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "                ", "support_x_feature", "=", "pro_features", "[", "2", "*", "i", "]", "+", "pro_features", "[", "2", "*", "i", "+", "1", "]", "*", "torch", ".", "randn", "(", "pro_features", "[", "2", "*", "i", "]", ".", "size", "(", ")", ",", "device", "=", "pro_features", "[", "2", "*", "i", "]", ".", "get_device", "(", ")", ")", "\n", "support_x_features", ".", "append", "(", "support_x_feature", ")", "\n", "\n", "", "", "else", ":", "#  1 shot setting", "\n", "            ", "support_x_ext", "=", "support_x", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_class", "*", "self", ".", "num_query", ",", "1", ",", "1", ",", "1", ",", "1", ")", ".", "view", "(", "-", "1", ",", "3", ",", "224", ",", "224", ")", "\n", "_", ",", "support_x_features", ",", "_", ",", "_", "=", "self", ".", "embedding", "(", "support_x_ext", ")", "\n", "\n", "", "query_x_ext", "=", "query_x", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "self", ".", "num_class", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "query_x_ext", "=", "torch", ".", "transpose", "(", "query_x_ext", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "3", ",", "224", ",", "224", ")", "\n", "_", ",", "query_x_features", ",", "_", ",", "_", "=", "self", ".", "embedding", "(", "query_x_ext", ")", "\n", "\n", "score1", ",", "score2", ",", "score3", ",", "score4", "=", "self", ".", "relation", "(", "support_x_features", ",", "query_x_features", ")", "\n", "\n", "return", "score1", ",", "score2", ",", "score3", ",", "score4", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.network.conv3x3": [[6, 10], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.ComplementEntropy.__init__": [[40, 42], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ComplementEntropy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.ComplementEntropy.forward": [[45, 60], ["len", "torch.softmax", "torch.softmax", "torch.softmax", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.ones().scatter_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "float", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "Yg_.view", "y.view().data.cpu", "torch.ones().scatter_.cuda", "torch.ones().scatter_.cuda", "torch.ones().scatter_.cuda", "len", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.log.get_device", "torch.log.get_device", "torch.log.get_device", "y.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "yHat", ",", "y", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "len", "(", "y", ")", "\n", "self", ".", "classes", "=", "yHat", ".", "shape", "[", "1", "]", "\n", "yHat", "=", "F", ".", "softmax", "(", "yHat", ",", "dim", "=", "1", ")", "\n", "Yg", "=", "torch", ".", "gather", "(", "yHat", ",", "1", ",", "torch", ".", "unsqueeze", "(", "y", ",", "1", ")", ")", "\n", "Yg_", "=", "(", "1", "-", "Yg", ")", "+", "1e-7", "# avoiding numerical issues (first)", "\n", "Px", "=", "yHat", "/", "Yg_", ".", "view", "(", "len", "(", "yHat", ")", ",", "1", ")", "\n", "Px_log", "=", "torch", ".", "log", "(", "Px", "+", "1e-10", ")", "# avoiding numerical issues (second)", "\n", "y_zerohot", "=", "torch", ".", "ones", "(", "self", ".", "batch_size", ",", "self", ".", "classes", ")", ".", "scatter_", "(", "\n", "1", ",", "y", ".", "view", "(", "self", ".", "batch_size", ",", "1", ")", ".", "data", ".", "cpu", "(", ")", ",", "0", ")", "\n", "output", "=", "Px", "*", "Px_log", "*", "y_zerohot", ".", "cuda", "(", "device", "=", "Px_log", ".", "get_device", "(", ")", ")", "\n", "loss", "=", "torch", ".", "sum", "(", "output", ")", "\n", "loss", "/=", "float", "(", "self", ".", "batch_size", ")", "\n", "loss", "/=", "float", "(", "self", ".", "classes", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.embedding_train": [[61, 134], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.StepLR", "print", "task_generator.get_classifier_dataset", "range", "embedding.parameters", "torch.optim.lr_scheduler.StepLR.step", "embedding.train", "print", "image.to.to", "label.to.to", "embedding", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "embedding.zero_grad", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "total_loss.backward", "torch.optim.SGD.step", "torch.max", "torch.max", "torch.max", "predict_labels.eq().sum().item", "label.to.size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "embedding.eval", "criterion.item", "torch.mean().item", "torch.mean().item", "torch.mean().item", "print", "torch.save", "torch.save", "torch.save", "embedding.parameters", "image.to.to", "label.to.to", "embedding", "torch.max", "torch.max", "torch.max", "predict_labels.eq().sum().item", "label.to.size", "os.path.exists", "os.makedirs", "embedding.state_dict", "torch.mean", "torch.mean", "torch.mean", "predict_labels.eq().sum", "torch.mean", "torch.mean", "torch.mean", "predict_labels.eq().sum", "str", "predict_labels.eq", "predict_labels.eq", "str"], "function", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.get_classifier_dataset"], ["", "", "def", "embedding_train", "(", "dcn", ",", "task_generator", ")", ":", "\n", "    ", "embedding", "=", "dcn", ".", "embedding", "\n", "optim", "=", "torch", ".", "optim", ".", "SGD", "(", "embedding", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "embedding_learning_rate", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "schedule", "=", "StepLR", "(", "optim", ",", "step_size", "=", "60", ",", "gamma", "=", "0.2", ")", "\n", "\n", "# step 3: train process", "\n", "print", "(", "'embedding training:'", ")", "\n", "train_dataloader", ",", "test_dataloader", "=", "task_generator", ".", "get_classifier_dataset", "(", "args", ".", "embedding_batch_size", ",", "\n", "args", ".", "embedding_class", ",", "\n", "args", ".", "embedding_train_num", ",", "\n", "args", ".", "embedding_test_num", ")", "\n", "\n", "best_accuracy", "=", "0.0", "\n", "\n", "for", "train_episode", "in", "range", "(", "args", ".", "embedding_episode", ")", ":", "\n", "        ", "schedule", ".", "step", "(", "train_episode", ")", "\n", "\n", "# init dataset", "\n", "# calculate features", "\n", "total_rewards", "=", "0", "\n", "total_samples", "=", "0", "\n", "embedding", ".", "train", "(", ")", "\n", "for", "image", ",", "label", "in", "train_dataloader", ":", "\n", "\n", "            ", "image", "=", "image", ".", "to", "(", "device", ")", "\n", "label", "=", "label", ".", "to", "(", "device", ")", "\n", "\n", "predict", ",", "_", ",", "std_mean", ",", "_", "=", "embedding", "(", "image", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss", "=", "criterion", "(", "predict", ",", "label", ")", "\n", "\n", "total_loss", "=", "loss", "-", "0.05", "*", "torch", ".", "mean", "(", "std_mean", ")", "# for standard version,std_mean = 0.0", "\n", "\n", "embedding", ".", "zero_grad", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "embedding", ".", "parameters", "(", ")", ",", "0.5", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optim", ".", "step", "(", ")", "\n", "\n", "_", ",", "predict_labels", "=", "torch", ".", "max", "(", "predict", ".", "data", ",", "1", ")", "\n", "total_rewards", "+=", "predict_labels", ".", "eq", "(", "label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_samples", "+=", "label", ".", "size", "(", "0", ")", "\n", "\n", "", "train_accuracy", "=", "total_rewards", "/", "total_samples", "\n", "\n", "\n", "# test:", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "total_rewards", "=", "0", "\n", "total_samples", "=", "0", "\n", "embedding", ".", "eval", "(", ")", "\n", "for", "image", ",", "label", "in", "test_dataloader", ":", "\n", "\n", "                ", "image", "=", "image", ".", "to", "(", "device", ")", "\n", "label", "=", "label", ".", "to", "(", "device", ")", "\n", "\n", "predict", ",", "_", ",", "_", ",", "_", "=", "embedding", "(", "image", ")", "\n", "\n", "_", ",", "predict_labels", "=", "torch", ".", "max", "(", "predict", ".", "data", ",", "1", ")", "# find the label of max similarity score", "\n", "\n", "total_rewards", "+=", "predict_labels", ".", "eq", "(", "label", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_samples", "+=", "label", ".", "size", "(", "0", ")", "\n", "\n", "", "test_accuracy", "=", "total_rewards", "/", "total_samples", "\n", "\n", "", "print", "(", "\"train episode \"", ",", "train_episode", ",", "\": loss = \"", ",", "loss", ".", "item", "(", ")", ",", "\"test acc:\"", ",", "test_accuracy", ",", "\"train acc:\"", ",", "train_accuracy", ",", "\"std_mean:\"", ",", "torch", ".", "mean", "(", "std_mean", ")", ".", "item", "(", ")", ")", "\n", "\n", "if", "test_accuracy", ">", "best_accuracy", ":", "\n", "            ", "best_accuracy", "=", "test_accuracy", "\n", "\n", "print", "(", "\"save embedding network\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "\"../models/\"", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "\"../models/\"", ")", "\n", "", "torch", ".", "save", "(", "embedding", ".", "state_dict", "(", ")", ",", "\"../models/Embedding-\"", "+", "str", "(", "args", ".", "embedding_class", ")", "+", "\"-\"", "+", "args", ".", "dataset", "+", "\"-\"", "+", "str", "(", "args", ".", "variational", ")", "+", "\".pkl\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.relation_train": [[136, 246], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.StepLR", "print", "range", "dcn.embedding.load_state_dict", "print", "dcn.load_state_dict", "print", "dcn.relation.parameters", "dcn.relation.parameters", "dcn.train", "torch.optim.lr_scheduler.StepLR.step", "task_generator.sample_task", "support_x.to.to", "query_x.to.to", "dcn", "dcn.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.optim.SGD.step", "query_predict_y3.view.view", "torch.max", "torch.max", "torch.max", "predict_labels.eq().sum().item", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.BCELoss", "torch.zeros().scatter_().view", "torch.zeros().scatter_().view", "torch.zeros().scatter_().view", "one_hot_labels.to.to", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "dcn.parameters", "print", "torch.save", "torch.save", "torch.save", "print", "torch.CrossEntropyLoss", "query_y.view", "target_labels.to.to", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "predict_labels.eq().sum", "loss.item", "dcn.state_dict", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "query_predict_y0.view", "query_predict_y1.view", "query_predict_y2.view", "query_predict_y3.view.view", "query_y.view", "target_labels.to.to", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.", "torch.optim.SGD.zero_grad", "entropy_loss.backward", "torch.optim.SGD.step", "dcn", "query_y.view", "target_labels.to.to", "train.ComplementEntropy", "ComplementEntropy.", "ComplementEntropy.", "ComplementEntropy.", "ComplementEntropy.", "print", "str", "str", "query_y.view", "query_predict_y0.view", "query_predict_y1.view", "query_predict_y2.view", "query_predict_y3.view.view", "query_predict_y0.view", "query_predict_y1.view", "query_predict_y2.view", "query_predict_y3.view.view", "predict_labels.eq", "str", "str", "str", "torch.zeros", "torch.zeros", "torch.zeros", "query_y.to", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.sample_task"], ["", "", "", "def", "relation_train", "(", "dcn", ",", "task_generator", ")", ":", "\n", "    ", "if", "args", ".", "conti_train", "==", "0", ":", "\n", "        ", "dcn", ".", "embedding", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"../models/Embedding-\"", "+", "str", "(", "args", ".", "embedding_class", ")", "+", "\"-\"", "+", "args", ".", "dataset", "+", "\"-\"", "+", "str", "(", "args", ".", "variational", ")", "+", "\".pkl\"", ",", "map_location", "=", "{", "'cuda:'", ":", "'cuda:'", "+", "str", "(", "args", ".", "gpu", ")", "}", ")", ")", "\n", "\n", "print", "(", "\"load embedding ok\"", ")", "\n", "", "else", ":", "\n", "        ", "dcn", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"../models/VDRN-\"", "+", "str", "(", "args", ".", "conti_train", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "embedding_class", ")", "+", "\"-\"", "+", "args", ".", "dataset", "+", "\"-var\"", "+", "str", "(", "args", ".", "variational", ")", "+", "\"-shot\"", "+", "str", "(", "args", ".", "shot", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "weight_or_not", ")", "+", "\".pkl\"", ",", "map_location", "=", "{", "'cuda:'", ":", "'cuda:'", "+", "str", "(", "args", ".", "gpu", ")", "}", ")", ")", "\n", "print", "(", "\"load model ok!\"", ")", "\n", "\n", "", "optim", "=", "torch", ".", "optim", ".", "SGD", "(", "dcn", ".", "relation", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "relation_learning_rate", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "entropy_optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "dcn", ".", "relation", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "relation_learning_rate", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "1e-4", ")", "\n", "schedule", "=", "StepLR", "(", "optim", ",", "step_size", "=", "25000", ",", "gamma", "=", "0.2", ")", "\n", "\n", "# step 3: train process", "\n", "print", "(", "'relation training: '", ")", "\n", "total_rewards", "=", "0", "\n", "\n", "\n", "for", "train_episode", "in", "range", "(", "args", ".", "conti_train", ",", "args", ".", "relation_episode", ")", ":", "\n", "        ", "dcn", ".", "train", "(", ")", "\n", "schedule", ".", "step", "(", "train_episode", ")", "\n", "\n", "# init dataset", "\n", "support_x", ",", "support_y", ",", "query_x", ",", "query_y", "=", "task_generator", ".", "sample_task", "(", "args", ".", "way", ",", "args", ".", "shot", ",", "args", ".", "query", ")", "\n", "support_x", "=", "support_x", ".", "to", "(", "device", ")", "\n", "query_x", "=", "query_x", ".", "to", "(", "device", ")", "\n", "\n", "query_predict_y0", ",", "query_predict_y1", ",", "query_predict_y2", ",", "query_predict_y3", "=", "dcn", "(", "support_x", ",", "query_x", ")", "\n", "\n", "if", "args", ".", "loss", "==", "'BCE'", ":", "\n", "            ", "criterion", "=", "nn", ".", "BCELoss", "(", "reduction", "=", "None", ")", "\n", "\n", "one_hot_labels", "=", "torch", ".", "zeros", "(", "args", ".", "query", "*", "args", ".", "way", ",", "args", ".", "way", ")", ".", "scatter_", "(", "1", ",", "query_y", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "one_hot_labels", "=", "one_hot_labels", ".", "to", "(", "device", ")", "\n", "loss0", "=", "criterion", "(", "query_predict_y0", ",", "one_hot_labels", ")", "\n", "loss1", "=", "criterion", "(", "query_predict_y1", ",", "one_hot_labels", ")", "\n", "loss2", "=", "criterion", "(", "query_predict_y2", ",", "one_hot_labels", ")", "\n", "loss3", "=", "criterion", "(", "query_predict_y3", ",", "one_hot_labels", ")", "\n", "loss", "=", "loss0", "+", "loss1", "+", "loss2", "+", "loss3", "\n", "\n", "\n", "", "elif", "args", ".", "loss", "==", "'CE'", ":", "\n", "            ", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "target_labels", "=", "query_y", ".", "view", "(", "-", "1", ")", "\n", "batch_size", "=", "target_labels", ".", "shape", "[", "0", "]", "\n", "target_labels", "=", "target_labels", ".", "to", "(", "device", ")", "\n", "# print('target labels : ', target_labels)", "\n", "loss0", "=", "criterion", "(", "query_predict_y0", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss1", "=", "criterion", "(", "query_predict_y1", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss2", "=", "criterion", "(", "query_predict_y2", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss3", "=", "criterion", "(", "query_predict_y3", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss", "=", "loss0", "+", "loss1", "+", "loss2", "+", "loss3", "\n", "\n", "", "elif", "args", ".", "loss", "==", "'COT'", ":", "\n", "\n", "            ", "target_labels", "=", "query_y", ".", "view", "(", "-", "1", ")", "\n", "batch_size", "=", "target_labels", ".", "shape", "[", "0", "]", "\n", "target_labels", "=", "target_labels", ".", "to", "(", "device", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "\n", "entropy_loss0", "=", "criterion", "(", "query_predict_y0", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "entropy_loss1", "=", "criterion", "(", "query_predict_y1", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "entropy_loss2", "=", "criterion", "(", "query_predict_y2", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "entropy_loss3", "=", "criterion", "(", "query_predict_y3", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "entropy_loss", "=", "entropy_loss0", "+", "entropy_loss1", "+", "entropy_loss2", "+", "entropy_loss3", "\n", "entropy_optimizer", ".", "zero_grad", "(", ")", "\n", "entropy_loss", ".", "backward", "(", ")", "\n", "entropy_optimizer", ".", "step", "(", ")", "\n", "\n", "query_predict_y0", ",", "query_predict_y1", ",", "query_predict_y2", ",", "query_predict_y3", "=", "dcn", "(", "support_x", ",", "query_x", ")", "\n", "target_labels", "=", "query_y", ".", "view", "(", "-", "1", ")", "\n", "batch_size", "=", "target_labels", ".", "shape", "[", "0", "]", "\n", "target_labels", "=", "target_labels", ".", "to", "(", "device", ")", "\n", "complement_criterion", "=", "ComplementEntropy", "(", ")", "\n", "loss0", "=", "complement_criterion", "(", "query_predict_y0", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss1", "=", "complement_criterion", "(", "query_predict_y1", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss2", "=", "complement_criterion", "(", "query_predict_y2", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss3", "=", "complement_criterion", "(", "query_predict_y3", ".", "view", "(", "batch_size", ",", "-", "1", ")", ",", "target_labels", ")", "\n", "loss", "=", "loss0", "+", "loss1", "+", "loss2", "+", "loss3", "\n", "\n", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Error loss'", ")", "\n", "\n", "# training", "\n", "\n", "\n", "", "dcn", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "dcn", ".", "parameters", "(", ")", ",", "0.5", ")", "\n", "optim", ".", "step", "(", ")", "\n", "\n", "\n", "query_predict_y3", "=", "query_predict_y3", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "_", ",", "predict_labels", "=", "torch", ".", "max", "(", "query_predict_y3", ".", "data", ",", "1", ")", "# find the label of max similarity score", "\n", "total_rewards", "+=", "predict_labels", ".", "eq", "(", "query_y", ".", "to", "(", "device", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "\n", "if", "(", "train_episode", "+", "1", ")", "%", "100", "==", "0", ":", "\n", "            ", "accuracy", "=", "total_rewards", "/", "1.0", "/", "(", "args", ".", "way", "*", "args", ".", "query", ")", "/", "100", "\n", "total_rewards", "=", "0", "\n", "print", "(", "\"train episode \"", ",", "train_episode", "+", "1", ",", "\": loss = \"", ",", "loss", ".", "item", "(", ")", ",", "\" accuracy = \"", ",", "accuracy", ")", "\n", "\n", "", "if", "(", "train_episode", "+", "1", ")", "%", "10000", "==", "0", ":", "\n", "# save networks", "\n", "            ", "torch", ".", "save", "(", "dcn", ".", "state_dict", "(", ")", ",", "\"../models/VDRN-\"", "+", "str", "(", "train_episode", "+", "1", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "embedding_class", ")", "+", "\"-\"", "+", "args", ".", "dataset", "+", "\"-\"", "+", "args", ".", "loss", "+", "\"-var\"", "+", "str", "(", "args", ".", "variational", ")", "+", "\"-shot\"", "+", "str", "(", "args", ".", "shot", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "weight_or_not", ")", "+", "\".pkl\"", ")", "\n", "\n", "print", "(", "\"save networks for episode:\"", ",", "train_episode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.main": [[247, 284], ["print", "print", "network.DCN", "torch.DataParallel", "torch.DataParallel", "network.DCN.to", "train.relation_train", "task_generator.TaskGenerator", "train.embedding_train", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "task_generator.mini_imagenet_folder", "task_generator.mini_imagenet_folder", "bool"], "function", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.relation_train", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.train.embedding_train", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.mini_imagenet_folder", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.mini_imagenet_folder"], ["", "", "", "def", "main", "(", ")", ":", "\n", "\n", "# Step 1: init data folders", "\n", "    ", "print", "(", "\"init dataset\"", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'miniimagenet'", ":", "\n", "        ", "if", "args", ".", "valid_set", "==", "1", ":", "\n", "            ", "metatrain_folder", ",", "metatest_folder", "=", "mini_imagenet_folder", "(", "config", ".", "miniimagenet_trainvalfolder", ",", "\n", "config", ".", "miniimagenet_testfolder", ")", "\n", "", "else", ":", "\n", "            ", "metatrain_folder", ",", "metatest_folder", "=", "mini_imagenet_folder", "(", "config", ".", "miniimagenet_trainfolder", ",", "\n", "config", ".", "miniimagenet_valfolder", ")", "\n", "", "task_generator", "=", "TaskGenerator", "(", "metatrain_folder", ",", "metatest_folder", ")", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'tieredimagenet'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'cub'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'car'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'aircraft'", ":", "\n", "        ", "pass", "\n", "\n", "# step 2: init neural networks", "\n", "", "print", "(", "'init neural networks'", ")", "\n", "dcn", "=", "DCN", "(", "args", ".", "way", ",", "args", ".", "shot", ",", "args", ".", "query", ",", "args", ".", "embedding_class", ",", "with_variation", "=", "bool", "(", "args", ".", "variational", ")", ",", "weight_or_not", "=", "args", ".", "weight_or_not", ",", "loss", "=", "args", ".", "loss", ")", "\n", "dcn", ".", "embedding", "=", "nn", ".", "DataParallel", "(", "dcn", ".", "embedding", ",", "device_ids", "=", "[", "args", ".", "gpu", ",", "args", ".", "gpu", "+", "1", "]", ")", "\n", "dcn", ".", "relation", "=", "nn", ".", "DataParallel", "(", "dcn", ".", "relation", ",", "device_ids", "=", "[", "args", ".", "gpu", ",", "args", ".", "gpu", "+", "1", "]", ")", "\n", "dcn", ".", "to", "(", "device", ")", "\n", "\n", "if", "args", ".", "train_embedding", ":", "\n", "        ", "embedding_train", "(", "dcn", ",", "task_generator", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "relation_train", "(", "dcn", ",", "task_generator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.test.mean_confidence_interval": [[34, 40], ["len", "numpy.array", "numpy.mean", "scipy.stats.sem", "scipy.stats.sem", "scipy.stats.t._ppf"], "function", ["None"], ["def", "mean_confidence_interval", "(", "data", ",", "confidence", "=", "0.95", ")", ":", "\n", "    ", "a", "=", "1.0", "*", "np", ".", "array", "(", "data", ")", "\n", "n", "=", "len", "(", "a", ")", "\n", "m", ",", "se", "=", "np", ".", "mean", "(", "a", ")", ",", "scipy", ".", "stats", ".", "sem", "(", "a", ")", "\n", "h", "=", "se", "*", "sp", ".", "stats", ".", "t", ".", "_ppf", "(", "(", "1", "+", "confidence", ")", "/", "2.", ",", "n", "-", "1", ")", "\n", "return", "m", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.test.test": [[41, 88], ["print", "test.mean_confidence_interval", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "dcn.eval", "range", "task_generator.sample_task", "support_x.to.to", "query_x.to.to", "torch.max", "torch.max", "torch.max", "predict_labels.eq().sum().item", "accuracies.append", "print", "range", "dcn", "score1.view.view", "score2.view.view", "score3.view.view", "score4.view.view", "dcn", "score1.view.view", "score2.view.view", "score3.view.view", "score4.view.view", "predict_labels.eq().sum", "predict_labels.eq", "query_y.to"], "function", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.test.mean_confidence_interval", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.sample_task"], ["", "def", "test", "(", "dcn", ",", "task_generator", ")", ":", "\n", "    ", "print", "(", "'test process: '", ")", "\n", "accuracies", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "dcn", ".", "eval", "(", ")", "\n", "\n", "for", "test_episode", "in", "range", "(", "args", ".", "test_episode", ")", ":", "\n", "            ", "total_rewards", "=", "0", "\n", "# init dataset", "\n", "support_x", ",", "support_y", ",", "query_x", ",", "query_y", "=", "task_generator", ".", "sample_task", "(", "args", ".", "way", ",", "args", ".", "shot", ",", "args", ".", "query", ",", "type", "=", "\"meta_test\"", ")", "\n", "# calculate features", "\n", "support_x", "=", "support_x", ".", "to", "(", "device", ")", "\n", "\n", "query_x", "=", "query_x", ".", "to", "(", "device", ")", "\n", "\n", "\n", "if", "args", ".", "variational", "==", "1", ":", "\n", "                ", "query_predict_ys", "=", "0", "\n", "for", "i", "in", "range", "(", "args", ".", "multi_try", ")", ":", "\n", "                    ", "score1", ",", "score2", ",", "score3", ",", "score4", "=", "dcn", "(", "support_x", ",", "query_x", ")", "\n", "score1", "=", "score1", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score2", "=", "score2", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score3", "=", "score3", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score4", "=", "score4", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "query_predict_ys", "+=", "score1", "+", "score2", "+", "score3", "+", "score4", "\n", "\n", "", "query_predict_y", "=", "query_predict_ys", "/", "args", ".", "multi_try", "\n", "", "else", ":", "\n", "                ", "score1", ",", "score2", ",", "score3", ",", "score4", "=", "dcn", "(", "support_x", ",", "query_x", ")", "\n", "score1", "=", "score1", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score2", "=", "score2", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score3", "=", "score3", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "score4", "=", "score4", ".", "view", "(", "-", "1", ",", "args", ".", "way", ")", "\n", "query_predict_y", "=", "score1", "+", "score2", "+", "score3", "+", "score4", "\n", "\n", "", "_", ",", "predict_labels", "=", "torch", ".", "max", "(", "query_predict_y", ".", "data", ",", "1", ")", "# find the label of max similarity score", "\n", "\n", "total_rewards", "=", "predict_labels", ".", "eq", "(", "query_y", ".", "to", "(", "device", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "accuracy", "=", "total_rewards", "/", "1.0", "/", "args", ".", "query", "/", "args", ".", "way", "\n", "accuracies", ".", "append", "(", "accuracy", ")", "\n", "print", "(", "\"episode:\"", ",", "test_episode", ",", "\"acc:\"", ",", "accuracy", ")", "\n", "\n", "", "", "test_accuracy", ",", "h", "=", "mean_confidence_interval", "(", "accuracies", ")", "\n", "\n", "print", "(", "\"test accuracy:\"", ",", "test_accuracy", ",", "\"h:\"", ",", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.test.main": [[89, 128], ["print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "network.DCN", "torch.DataParallel", "torch.DataParallel", "network.DCN.load_state_dict", "print", "network.DCN.to", "test.test", "task_generator.TaskGenerator", "torch.load", "torch.load", "torch.load", "task_generator.mini_imagenet_folder", "task_generator.mini_imagenet_folder", "bool", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.test.test", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.mini_imagenet_folder", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.mini_imagenet_folder"], ["", "def", "main", "(", ")", ":", "\n", "\n", "# Step 1: init data folders", "\n", "    ", "print", "(", "\"init dataset\"", ")", "\n", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "1", ")", "\n", "\n", "if", "args", ".", "dataset", "==", "'miniimagenet'", ":", "\n", "        ", "if", "args", ".", "valid_set", "==", "1", ":", "\n", "            ", "metatrain_folder", ",", "metatest_folder", "=", "mini_imagenet_folder", "(", "config", ".", "miniimagenet_trainvalfolder", ",", "\n", "config", ".", "miniimagenet_testfolder", ")", "\n", "", "else", ":", "\n", "            ", "metatrain_folder", ",", "metatest_folder", "=", "mini_imagenet_folder", "(", "config", ".", "miniimagenet_trainfolder", ",", "\n", "config", ".", "miniimagenet_testfolder", ")", "\n", "", "task_generator", "=", "TaskGenerator", "(", "metatrain_folder", ",", "metatest_folder", ")", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'tieredimagenet'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'cub'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'car'", ":", "\n", "        ", "pass", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'aircraft'", ":", "\n", "        ", "pass", "\n", "\n", "# step 2: init neural networks", "\n", "", "print", "(", "'init neural networks'", ")", "\n", "dcn", "=", "DCN", "(", "args", ".", "way", ",", "args", ".", "shot", ",", "args", ".", "query", ",", "args", ".", "embedding_class", ",", "with_variation", "=", "bool", "(", "args", ".", "variational", ")", ",", "weight_or_not", "=", "args", ".", "weight_or_not", ",", "loss", "=", "args", ".", "loss", ")", "\n", "dcn", ".", "embedding", "=", "nn", ".", "DataParallel", "(", "dcn", ".", "embedding", ",", "device_ids", "=", "[", "args", ".", "gpu", ",", "args", ".", "gpu", "+", "1", "]", ")", "\n", "dcn", ".", "relation", "=", "nn", ".", "DataParallel", "(", "dcn", ".", "relation", ",", "device_ids", "=", "[", "args", ".", "gpu", ",", "args", ".", "gpu", "+", "1", "]", ")", "\n", "dcn", ".", "load_state_dict", "(", "torch", ".", "load", "(", "\"../models/VDRN-\"", "+", "str", "(", "args", ".", "model_episode", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "embedding_class", ")", "+", "\"-\"", "+", "args", ".", "dataset", "+", "\"-\"", "+", "args", ".", "loss", "+", "\"-var\"", "+", "str", "(", "args", ".", "variational", ")", "+", "\"-shot\"", "+", "str", "(", "args", ".", "shot", ")", "+", "\"-\"", "+", "str", "(", "args", ".", "weight_or_not", ")", "+", "\".pkl\"", ",", "map_location", "=", "{", "'cuda:'", ":", "'cuda:'", "+", "str", "(", "args", ".", "gpu", ")", "}", ")", ")", "\n", "#     dcn.load_state_dict(torch.load(\"../models/VDRN-\"+str(args.model_episode)+\"-\"+str(args.embedding_class) + \"-\" + args.dataset + \"-\"+ str(args.variational) + \"-shot\"+ str(args.shot)+ \".pkl\",map_location={'cuda:':'cuda:'+str(args.gpu)}))", "\n", "print", "(", "\"load model ok!\"", ")", "\n", "dcn", ".", "to", "(", "device", ")", "\n", "\n", "test", "(", "dcn", ",", "task_generator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.__init__": [[58, 88], ["numpy.array", "dict", "random.sample", "numpy.array", "dict", "dict", "range", "zip", "range", "zip", "random.sample", "len", "len", "os.path.join", "len", "os.listdir", "task_generator.FewShotTask.get_class", "task_generator.FewShotTask.get_class", "task_generator.FewShotTask.get_class", "task_generator.FewShotTask.get_class"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.get_class", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.get_class", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.get_class", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.get_class"], ["    ", "def", "__init__", "(", "self", ",", "data_folder", ",", "num_class", ",", "num_train", ",", "num_test", ",", "type", "=", "\"meta_train\"", ")", ":", "\n", "\n", "        ", "self", ".", "data_folder", "=", "data_folder", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_train", "=", "num_train", "\n", "self", ".", "num_test", "=", "num_test", "\n", "self", ".", "type", "=", "type", "\n", "\n", "global_labels", "=", "np", ".", "array", "(", "range", "(", "len", "(", "self", ".", "data_folder", ")", ")", ")", "\n", "global_labels", "=", "dict", "(", "zip", "(", "self", ".", "data_folder", ",", "global_labels", ")", ")", "\n", "\n", "class_folders", "=", "random", ".", "sample", "(", "self", ".", "data_folder", ",", "self", ".", "num_class", ")", "\n", "labels", "=", "np", ".", "array", "(", "range", "(", "len", "(", "class_folders", ")", ")", ")", "\n", "labels", "=", "dict", "(", "zip", "(", "class_folders", ",", "labels", ")", ")", "\n", "samples", "=", "dict", "(", ")", "\n", "\n", "self", ".", "train_roots", "=", "[", "]", "\n", "self", ".", "test_roots", "=", "[", "]", "\n", "for", "c", "in", "class_folders", ":", "\n", "\n", "            ", "temp", "=", "[", "os", ".", "path", ".", "join", "(", "c", ",", "x", ")", "for", "x", "in", "os", ".", "listdir", "(", "c", ")", "]", "\n", "samples", "[", "c", "]", "=", "random", ".", "sample", "(", "temp", ",", "len", "(", "temp", ")", ")", "\n", "\n", "self", ".", "train_roots", "+=", "samples", "[", "c", "]", "[", ":", "num_train", "]", "\n", "self", ".", "test_roots", "+=", "samples", "[", "c", "]", "[", "num_train", ":", "num_train", "+", "num_test", "]", "\n", "\n", "", "self", ".", "train_labels", "=", "[", "labels", "[", "self", ".", "get_class", "(", "x", ")", "]", "for", "x", "in", "self", ".", "train_roots", "]", "\n", "self", ".", "test_labels", "=", "[", "labels", "[", "self", ".", "get_class", "(", "x", ")", "]", "for", "x", "in", "self", ".", "test_roots", "]", "\n", "self", ".", "train_global_labels", "=", "[", "global_labels", "[", "self", ".", "get_class", "(", "x", ")", "]", "for", "x", "in", "self", ".", "train_roots", "]", "\n", "self", ".", "test_global_labels", "=", "[", "global_labels", "[", "self", ".", "get_class", "(", "x", ")", "]", "for", "x", "in", "self", ".", "test_roots", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotTask.get_class": [[89, 91], ["os.path.join", "sample.split"], "methods", ["None"], ["", "def", "get_class", "(", "self", ",", "sample", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "*", "sample", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotDataset.__init__": [[98, 106], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "task", ",", "split", "=", "'train'", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "# Torch operations on the input image", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "task", "=", "task", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "image_roots", "=", "self", ".", "task", ".", "train_roots", "if", "self", ".", "split", "==", "'train'", "else", "self", ".", "task", ".", "test_roots", "\n", "self", ".", "labels", "=", "self", ".", "task", ".", "train_labels", "if", "self", ".", "split", "==", "'train'", "else", "self", ".", "task", ".", "test_labels", "\n", "self", ".", "global_labels", "=", "self", ".", "task", ".", "train_global_labels", "if", "self", ".", "split", "==", "'train'", "else", "self", ".", "task", ".", "test_global_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotDataset.__len__": [[107, 109], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_roots", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.FewShotDataset.__getitem__": [[110, 121], ["PIL.Image.open", "task_generator.FewShotDataset.convert", "task_generator.FewShotDataset.transform", "task_generator.FewShotDataset.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_root", "=", "self", ".", "image_roots", "[", "idx", "]", "\n", "image", "=", "Image", ".", "open", "(", "image_root", ")", "\n", "image", "=", "image", ".", "convert", "(", "'RGB'", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "", "label", "=", "self", ".", "labels", "[", "idx", "]", "\n", "global_label", "=", "self", ".", "global_labels", "[", "idx", "]", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "label", "=", "self", ".", "target_transform", "(", "label", ")", "\n", "", "return", "image", ",", "label", ",", "global_label", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__": [[129, 133], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "metatrain_folder", ",", "metatest_folder", ")", ":", "\n", "        ", "super", "(", "TaskGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "metatrain_folder", "=", "metatrain_folder", "\n", "self", ".", "metatest_folder", "=", "metatest_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.sample_task": [[134, 148], ["task_generator.TaskGenerator.get_data_loader", "task_generator.TaskGenerator.get_data_loader", "task_generator.TaskGenerator.__iter__().next", "task_generator.TaskGenerator.__iter__().next", "task_generator.FewShotTask", "task_generator.FewShotTask", "task_generator.TaskGenerator.__iter__", "task_generator.TaskGenerator.__iter__"], "methods", ["home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.get_data_loader", "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.get_data_loader"], ["", "def", "sample_task", "(", "self", ",", "num_class", ",", "num_support", ",", "num_query", ",", "type", "=", "\"meta_train\"", ")", ":", "\n", "\n", "        ", "if", "type", "==", "\"meta_train\"", ":", "\n", "            ", "task", "=", "FewShotTask", "(", "self", ".", "metatrain_folder", ",", "num_class", ",", "num_support", ",", "num_query", ",", "type", "=", "type", ")", "\n", "", "else", ":", "\n", "            ", "task", "=", "FewShotTask", "(", "self", ".", "metatest_folder", ",", "num_class", ",", "num_support", ",", "num_query", ",", "type", "=", "type", ")", "\n", "", "support_dataloader", "=", "self", ".", "get_data_loader", "(", "task", ",", "split", "=", "\"train\"", ",", "shuffle", "=", "False", ")", "\n", "query_dataloader", "=", "self", ".", "get_data_loader", "(", "task", ",", "split", "=", "\"test\"", ",", "shuffle", "=", "True", ")", "\n", "# sample datas", "\n", "\n", "support_x", ",", "support_y", ",", "_", "=", "support_dataloader", ".", "__iter__", "(", ")", ".", "next", "(", ")", "#sample once to obtain all data", "\n", "query_x", ",", "query_y", ",", "_", "=", "query_dataloader", ".", "__iter__", "(", ")", ".", "next", "(", ")", "\n", "\n", "return", "support_x", ",", "support_y", ",", "query_x", ",", "query_y", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.get_data_loader": [[150, 183], ["torchvision.Compose", "task_generator.FewShotDataset", "torchvision.Compose", "torchvision.Compose", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.CenterCrop", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["", "def", "get_data_loader", "(", "self", ",", "task", ",", "split", "=", "'train'", ",", "shuffle", "=", "False", ")", ":", "\n", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "if", "task", ".", "type", "==", "\"meta_train\"", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "\n", "", "dataset", "=", "FewShotDataset", "(", "task", ",", "split", "=", "split", ",", "transform", "=", "transform", ")", "\n", "\n", "if", "split", "==", "'train'", ":", "\n", "            ", "batch_size", "=", "task", ".", "num_train", "*", "task", ".", "num_class", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "task", ".", "num_test", "*", "task", ".", "num_class", "\n", "loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "\n", "", "return", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.TaskGenerator.get_classifier_dataset": [[184, 221], ["torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "task_generator.FewShotTask", "task_generator.FewShotDataset", "torch.utils.data.DataLoader", "task_generator.FewShotDataset", "torch.utils.data.DataLoader", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.CenterCrop", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["", "def", "get_classifier_dataset", "(", "self", ",", "batch_size", ",", "num_class", ",", "num_train", ",", "num_test", ")", ":", "\n", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "\n", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "\n", "\n", "task", "=", "FewShotTask", "(", "self", ".", "metatrain_folder", ",", "num_class", ",", "num_train", ",", "num_test", ")", "\n", "train_dataset", "=", "FewShotDataset", "(", "task", ",", "split", "=", "\"train\"", ",", "transform", "=", "train_transform", ")", "\n", "train_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "\n", "test_dataset", "=", "FewShotDataset", "(", "task", ",", "split", "=", "\"test\"", ",", "transform", "=", "test_transform", ")", "\n", "test_dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "\n", "return", "train_dataloader", ",", "test_dataloader", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.split_fine_grained_dataset": [[15, 28], ["random.seed", "random.shuffle", "os.path.join", "os.listdir", "os.path.isdir", "os.path.join"], "function", ["None"], ["def", "split_fine_grained_dataset", "(", "dataset_path", ",", "num_train", ",", "num_test", ")", ":", "\n", "\n", "    ", "data_folder", "=", "[", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "class_name", ")", "for", "class_name", "in", "os", ".", "listdir", "(", "dataset_path", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "class_name", ")", ")", "]", "\n", "random", ".", "seed", "(", "1", ")", "\n", "random", ".", "shuffle", "(", "data_folder", ")", "\n", "\n", "metatrain_folder", "=", "data_folder", "[", ":", "num_train", "]", "\n", "metatest_folder", "=", "data_folder", "[", "num_train", ":", "num_train", "+", "num_test", "]", "\n", "\n", "return", "metatrain_folder", ",", "metatest_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.zhangxueting_DCN.None.task_generator.mini_imagenet_folder": [[34, 50], ["random.seed", "random.shuffle", "random.shuffle", "os.path.join", "os.path.join", "os.listdir", "os.path.isdir", "os.listdir", "os.path.isdir", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "mini_imagenet_folder", "(", "train_folder", ",", "test_folder", ")", ":", "\n", "\n", "    ", "metatrain_folder", "=", "[", "os", ".", "path", ".", "join", "(", "train_folder", ",", "label", ")", "for", "label", "in", "os", ".", "listdir", "(", "train_folder", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "train_folder", ",", "label", ")", ")", "]", "\n", "metatest_folder", "=", "[", "os", ".", "path", ".", "join", "(", "test_folder", ",", "label", ")", "for", "label", "in", "os", ".", "listdir", "(", "test_folder", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "test_folder", ",", "label", ")", ")", "]", "\n", "\n", "random", ".", "seed", "(", "1", ")", "\n", "random", ".", "shuffle", "(", "metatrain_folder", ")", "\n", "random", ".", "shuffle", "(", "metatest_folder", ")", "\n", "\n", "return", "metatrain_folder", ",", "metatest_folder", "\n", "\n"]]}