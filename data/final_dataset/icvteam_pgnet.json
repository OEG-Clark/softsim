{"home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.Grafting.__init__": [[41, 61], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "self", ".", "k", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "qv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "2", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "8", ",", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "lnx", "=", "nn", ".", "LayerNorm", "(", "64", ")", "\n", "self", ".", "lny", "=", "nn", ".", "LayerNorm", "(", "64", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.Grafting.forward": [[62, 88], ["x.view.view.view().permute", "PGNet.Grafting.lnx", "PGNet.Grafting.view().permute", "PGNet.Grafting.lny", "PGNet.Grafting.k().reshape().permute", "PGNet.Grafting.qv().reshape().permute", "attn.softmax.softmax.softmax", "PGNet.Grafting.proj", "x.view.view.permute", "x.view.view.view", "PGNet.Grafting.conv2", "PGNet.Grafting.act", "x.view.view.view", "PGNet.Grafting.view", "PGNet.Grafting.k().reshape", "PGNet.Grafting.qv().reshape", "PGNet.Grafting.transpose", "PGNet.Grafting.bn", "sc.size", "PGNet.Grafting.conv", "PGNet.Grafting.k", "PGNet.Grafting.qv", "attn.softmax.softmax.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "chanel", "=", "x", ".", "shape", "[", "1", "]", "\n", "sc", "=", "x", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "chanel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "sc1", "=", "x", "\n", "x", "=", "self", ".", "lnx", "(", "x", ")", "\n", "y", "=", "y", ".", "view", "(", "batch_size", ",", "chanel", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "y", "=", "self", ".", "lny", "(", "y", ")", "\n", "\n", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "y_k", "=", "self", ".", "k", "(", "y", ")", ".", "reshape", "(", "B", ",", "N", ",", "1", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "x_qv", "=", "self", ".", "qv", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "2", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "x_q", ",", "x_v", "=", "x_qv", "[", "0", "]", ",", "x_qv", "[", "1", "]", "\n", "y_k", "=", "y_k", "[", "0", "]", "\n", "attn", "=", "(", "x_q", "@", "y_k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "x", "=", "(", "attn", "@", "x_v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "N", ",", "C", ")", "\n", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "(", "x", "+", "sc1", ")", "\n", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "chanel", ",", "*", "sc", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "+", "x", "\n", "return", "x", ",", "self", ".", "act", "(", "self", ".", "bn", "(", "self", ".", "conv", "(", "attn", "+", "attn", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.Grafting.initialize": [[90, 92], ["PGNet.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB1.__init__": [[94, 105], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ")", ":", "\n", "        ", "super", "(", "DB1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "squeeze1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "squeeze2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB1.forward": [[107, 110], ["PGNet.DB1.squeeze2", "PGNet.DB1.squeeze1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z", "=", "self", ".", "squeeze2", "(", "self", ".", "squeeze1", "(", "x", ")", ")", "\n", "return", "z", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB1.initialize": [[111, 113], ["PGNet.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB2.__init__": [[115, 133], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ")", ":", "\n", "        ", "super", "(", "DB2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "short_cut", "=", "nn", ".", "Conv2d", "(", "outplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", "+", "outplanes", ",", "outplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "outplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "outplanes", ",", "outplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "outplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "outplanes", ",", "outplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "outplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "outplanes", ",", "outplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "outplanes", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB2.forward": [[135, 143], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PGNet.DB2.conv", "PGNet.DB2.short_cut", "PGNet.DB2.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "        ", "z", "=", "F", ".", "interpolate", "(", "z", ",", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "p", "=", "self", ".", "conv", "(", "torch", ".", "cat", "(", "(", "x", ",", "z", ")", ",", "1", ")", ")", "\n", "sc", "=", "self", ".", "short_cut", "(", "z", ")", "\n", "p", "=", "p", "+", "sc", "\n", "p2", "=", "self", ".", "conv2", "(", "p", ")", "\n", "p", "=", "p", "+", "p2", "\n", "return", "p", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB2.initialize": [[144, 146], ["PGNet.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB3.__init__": [[148, 168], ["torch.Module.__init__", "PGNet.DB2", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", "DB3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "db2", "=", "DB2", "(", "64", ",", "64", ")", "\n", "\n", "self", ".", "conv3x3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "sqz_r4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "sqz_s1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB3.forward": [[169, 176], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PGNet.DB3.sqz_s1", "PGNet.DB3.sqz_r4", "PGNet.DB3.conv3x3", "PGNet.DB3.db2", "PGNet.DB3.size"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv3x3"], ["", "def", "forward", "(", "self", ",", "s", ",", "r", ",", "up", ")", ":", "\n", "        ", "up", "=", "F", ".", "interpolate", "(", "up", ",", "size", "=", "s", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "s", "=", "self", ".", "sqz_s1", "(", "s", ")", "\n", "r", "=", "self", ".", "sqz_r4", "(", "r", ")", "\n", "sr", "=", "self", ".", "conv3x3", "(", "s", "+", "r", ")", "\n", "out", ",", "_", "=", "self", ".", "db2", "(", "sr", ",", "up", ")", "\n", "return", "out", ",", "out", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.DB3.initialize": [[176, 178], ["PGNet.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.decoder.__init__": [[182, 202], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "PGNet.Grafting", "PGNet.DB1", "PGNet.DB2", "PGNet.DB2", "PGNet.DB3", "PGNet.DB2", "PGNet.DB2", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", "decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sqz_s2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "sqz_r5", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "GF", "=", "Grafting", "(", "64", ",", "num_heads", "=", "8", ")", "\n", "self", ".", "d1", "=", "DB1", "(", "512", ",", "64", ")", "\n", "self", ".", "d2", "=", "DB2", "(", "512", ",", "64", ")", "\n", "self", ".", "d3", "=", "DB2", "(", "64", ",", "64", ")", "\n", "self", ".", "d4", "=", "DB3", "(", ")", "\n", "self", ".", "d5", "=", "DB2", "(", "128", ",", "64", ")", "\n", "self", ".", "d6", "=", "DB2", "(", "64", ",", "64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.decoder.forward": [[203, 223], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PGNet.decoder.d1", "PGNet.decoder.d2", "PGNet.decoder.sqz_s2", "PGNet.decoder.sqz_r5", "PGNet.decoder.GF", "PGNet.decoder.d3", "PGNet.decoder.d4", "PGNet.decoder.d5", "PGNet.decoder.d6", "s2.size", "r4.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "r2", ",", "r3", ",", "r4", ",", "r5", ")", ":", "\n", "        ", "r5", "=", "F", ".", "interpolate", "(", "r5", ",", "size", "=", "s2", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "s1", "=", "F", ".", "interpolate", "(", "s1", ",", "size", "=", "r4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "s4_", ",", "_", "=", "self", ".", "d1", "(", "s4", ")", "\n", "s3_", ",", "_", "=", "self", ".", "d2", "(", "s3", ",", "s4_", ")", "\n", "\n", "s2_", "=", "self", ".", "sqz_s2", "(", "s2", ")", "\n", "r5_", "=", "self", ".", "sqz_r5", "(", "r5", ")", "\n", "graft_feature_r5", ",", "cam", "=", "self", ".", "GF", "(", "r5_", ",", "s2_", ")", "\n", "\n", "graft_feature_r5_", ",", "_", "=", "self", ".", "d3", "(", "graft_feature_r5", ",", "s3_", ")", "\n", "\n", "graft_feature_r4", ",", "_", "=", "self", ".", "d4", "(", "s1", ",", "r4", ",", "graft_feature_r5_", ")", "\n", "\n", "r3_", ",", "_", "=", "self", ".", "d5", "(", "r3", ",", "graft_feature_r4", ")", "\n", "\n", "r2_", ",", "_", "=", "self", ".", "d6", "(", "r2", ",", "r3_", ")", "\n", "\n", "return", "r2_", ",", "cam", ",", "r5_", ",", "s2_", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.decoder.initialize": [[224, 226], ["PGNet.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.PGNet.__init__": [[231, 256], ["torch.Module.__init__", "PGNet.decoder", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "Res.resnet18", "Swin.Swintransformer", "PGNet.PGNet.swin.load_state_dict", "PGNet.PGNet.resnet.load_state_dict", "PGNet.weight_init", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "PGNet.PGNet.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet18", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["    ", "def", "__init__", "(", "self", ",", "cfg", "=", "None", ")", ":", "\n", "        ", "super", "(", "PGNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "decoder", "=", "decoder", "(", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "linear3", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "8", ",", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "\n", "if", "self", ".", "cfg", "is", "None", "or", "self", ".", "cfg", ".", "snapshot", "is", "None", ":", "\n", "            ", "weight_init", "(", "self", ")", "\n", "\n", "", "self", ".", "resnet", "=", "resnet18", "(", ")", "\n", "self", ".", "swin", "=", "Swintransformer", "(", "224", ")", "\n", "self", ".", "swin", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'../pre/swin224.pth'", ")", "[", "'model'", "]", ",", "strict", "=", "False", ")", "\n", "self", ".", "resnet", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'../pre/resnet18.pth'", ")", ",", "strict", "=", "False", ")", "\n", "\n", "if", "self", ".", "cfg", "is", "not", "None", "and", "self", ".", "cfg", ".", "snapshot", ":", "\n", "            ", "print", "(", "'load checkpoint'", ")", "\n", "pretrain", "=", "torch", ".", "load", "(", "self", ".", "cfg", ".", "snapshot", ")", "\n", "new_state_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "pretrain", ".", "items", "(", ")", ":", "\n", "                ", "new_state_dict", "[", "k", "[", "7", ":", "]", "]", "=", "v", "\n", "", "self", ".", "load_state_dict", "(", "new_state_dict", ",", "strict", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.PGNet.forward": [[257, 271], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PGNet.PGNet.resnet", "PGNet.PGNet.swin", "PGNet.PGNet.decoder", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "PGNet.PGNet.linear1", "PGNet.PGNet.linear2", "PGNet.PGNet.linear3", "PGNet.PGNet.conv", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "shape", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "        ", "shape", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "if", "shape", "is", "None", "else", "shape", "\n", "y", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "(", "224", ",", "224", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "r2", ",", "r3", ",", "r4", ",", "r5", "=", "self", ".", "resnet", "(", "x", ")", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", "=", "self", ".", "swin", "(", "y", ")", "\n", "r2_", ",", "attmap", ",", "r5_", ",", "s2_", "=", "self", ".", "decoder", "(", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "r2", ",", "r3", ",", "r4", ",", "r5", ")", "\n", "\n", "pred1", "=", "F", ".", "interpolate", "(", "self", ".", "linear1", "(", "r2_", ")", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "wr", "=", "F", ".", "interpolate", "(", "self", ".", "linear2", "(", "r5_", ")", ",", "size", "=", "(", "28", ",", "28", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "ws", "=", "F", ".", "interpolate", "(", "self", ".", "linear3", "(", "s2_", ")", ",", "size", "=", "(", "28", ",", "28", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "\n", "return", "pred1", ",", "wr", ",", "ws", ",", "self", ".", "conv", "(", "attmap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.PGNet.weight_init": [[15, 38], ["module.named_children", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "torch.init.ones_", "isinstance", "torch.init.zeros_", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "PGNet.weight_init", "isinstance", "torch.init.constant_", "torch.init.constant_", "isinstance", "m.initialize"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.initialize"], ["def", "weight_init", "(", "module", ")", ":", "\n", "    ", "for", "n", ",", "m", "in", "module", ".", "named_children", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "InstanceNorm2d", ",", "nn", ".", "BatchNorm1d", ")", ")", ":", "\n", "            ", "nn", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "weight_init", "(", "m", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "ReLU", ",", "Act", ",", "nn", ".", "AdaptiveAvgPool2d", ",", "nn", ".", "Softmax", ")", ")", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "m", ".", "initialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Mlp.__init__": [[7, 15], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Mlp.forward": [[16, 23], ["Swin.Mlp.fc1", "Swin.Mlp.act", "Swin.Mlp.drop", "Swin.Mlp.fc2", "Swin.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.WindowAttention.__init__": [[71, 104], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "relative_coords.permute().contiguous.permute().contiguous.permute().contiguous", "relative_coords.permute().contiguous.permute().contiguous.sum", "Swin.WindowAttention.register_buffer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "timm.models.layers.trunc_normal_", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "relative_coords.permute().contiguous.permute().contiguous.permute"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "window_size", ",", "num_heads", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "window_size", "=", "window_size", "# Wh, Ww", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "# define a parameter table of relative position bias", "\n", "self", ".", "relative_position_bias_table", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "2", "*", "window_size", "[", "0", "]", "-", "1", ")", "*", "(", "2", "*", "window_size", "[", "1", "]", "-", "1", ")", ",", "num_heads", ")", ")", "# 2*Wh-1 * 2*Ww-1, nH", "\n", "\n", "# get pair-wise relative position index for each token inside the window", "\n", "coords_h", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "0", "]", ")", "\n", "coords_w", "=", "torch", ".", "arange", "(", "self", ".", "window_size", "[", "1", "]", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "[", "coords_h", ",", "coords_w", "]", ")", ")", "# 2, Wh, Ww", "\n", "coords_flatten", "=", "torch", ".", "flatten", "(", "coords", ",", "1", ")", "# 2, Wh*Ww", "\n", "relative_coords", "=", "coords_flatten", "[", ":", ",", ":", ",", "None", "]", "-", "coords_flatten", "[", ":", ",", "None", ",", ":", "]", "# 2, Wh*Ww, Wh*Ww", "\n", "relative_coords", "=", "relative_coords", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "contiguous", "(", ")", "# Wh*Ww, Wh*Ww, 2", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "+=", "self", ".", "window_size", "[", "0", "]", "-", "1", "# shift to start from 0", "\n", "relative_coords", "[", ":", ",", ":", ",", "1", "]", "+=", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_coords", "[", ":", ",", ":", ",", "0", "]", "*=", "2", "*", "self", ".", "window_size", "[", "1", "]", "-", "1", "\n", "relative_position_index", "=", "relative_coords", ".", "sum", "(", "-", "1", ")", "# Wh*Ww, Wh*Ww", "\n", "self", ".", "register_buffer", "(", "\"relative_position_index\"", ",", "relative_position_index", ")", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "relative_position_bias_table", ",", "std", "=", ".02", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.WindowAttention.forward": [[105, 137], ["Swin.WindowAttention.qkv().reshape().permute", "Swin.WindowAttention.relative_position_bias_table[].view", "relative_position_bias.permute().contiguous.permute().contiguous.permute().contiguous", "Swin.WindowAttention.attn_drop", "Swin.WindowAttention.proj", "Swin.WindowAttention.proj_drop", "k.transpose", "relative_position_bias.permute().contiguous.permute().contiguous.unsqueeze", "Swin.WindowAttention.view", "Swin.WindowAttention.softmax", "Swin.WindowAttention.softmax", "Swin.WindowAttention.qkv().reshape", "relative_position_bias.permute().contiguous.permute().contiguous.permute", "Swin.WindowAttention.view", "mask.unsqueeze().unsqueeze", "Swin.WindowAttention.qkv", "Swin.WindowAttention.relative_position_index.view", "mask.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        \"\"\"", "\n", "B_", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B_", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "# make torchscript happy (cannot use tensor as tuple)", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "relative_position_bias", "=", "self", ".", "relative_position_bias_table", "[", "self", ".", "relative_position_index", ".", "view", "(", "-", "1", ")", "]", ".", "view", "(", "\n", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "self", ".", "window_size", "[", "0", "]", "*", "self", ".", "window_size", "[", "1", "]", ",", "-", "1", ")", "# Wh*Ww,Wh*Ww,nH", "\n", "relative_position_bias", "=", "relative_position_bias", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "contiguous", "(", ")", "# nH, Wh*Ww, Wh*Ww", "\n", "attn", "=", "attn", "+", "relative_position_bias", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "nW", "=", "mask", ".", "shape", "[", "0", "]", "\n", "attn", "=", "attn", ".", "view", "(", "B_", "//", "nW", ",", "nW", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "+", "mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "attn", "=", "attn", ".", "view", "(", "-", "1", ",", "self", ".", "num_heads", ",", "N", ",", "N", ")", "\n", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "", "else", ":", "\n", "            ", "attn", "=", "self", ".", "softmax", "(", "attn", ")", "\n", "\n", "", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B_", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.WindowAttention.extra_repr": [[138, 140], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f'dim={self.dim}, window_size={self.window_size}, num_heads={self.num_heads}'", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.WindowAttention.flops": [[141, 153], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ",", "N", ")", ":", "\n", "# calculate flops for 1 window with token length of N", "\n", "        ", "flops", "=", "0", "\n", "# qkv = self.qkv(x)", "\n", "flops", "+=", "N", "*", "self", ".", "dim", "*", "3", "*", "self", ".", "dim", "\n", "# attn = (q @ k.transpose(-2, -1))", "\n", "flops", "+=", "self", ".", "num_heads", "*", "N", "*", "(", "self", ".", "dim", "//", "self", ".", "num_heads", ")", "*", "N", "\n", "#  x = (attn @ v)", "\n", "flops", "+=", "self", ".", "num_heads", "*", "N", "*", "N", "*", "(", "self", ".", "dim", "//", "self", ".", "num_heads", ")", "\n", "# x = self.proj(x)", "\n", "flops", "+=", "N", "*", "self", ".", "dim", "*", "self", ".", "dim", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.SwinTransformerBlock.__init__": [[174, 224], ["torch.Module.__init__", "norm_layer", "Swin.WindowAttention", "norm_layer", "int", "Swin.Mlp", "Swin.SwinTransformerBlock.register_buffer", "min", "min", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "Swin.window_partition", "mask_windows.view.view.view", "atten_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill().masked_fill", "timm.models.layers.to_2tuple", "slice", "slice", "slice", "slice", "slice", "slice", "mask_windows.view.view.unsqueeze", "mask_windows.view.view.unsqueeze", "float", "atten_mask.masked_fill().masked_fill.masked_fill().masked_fill.masked_fill", "float"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.window_partition"], ["def", "__init__", "(", "self", ",", "dim", ",", "input_resolution", ",", "num_heads", ",", "window_size", "=", "7", ",", "shift_size", "=", "0", ",", "\n", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "drop_path", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "shift_size", "=", "shift_size", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "if", "min", "(", "self", ".", "input_resolution", ")", "<=", "self", ".", "window_size", ":", "\n", "# if window size is larger than input resolution, we don't partition windows", "\n", "            ", "self", ".", "shift_size", "=", "0", "\n", "self", ".", "window_size", "=", "min", "(", "self", ".", "input_resolution", ")", "\n", "", "assert", "0", "<=", "self", ".", "shift_size", "<", "self", ".", "window_size", ",", "\"shift_size must in 0-window_size\"", "\n", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "WindowAttention", "(", "\n", "dim", ",", "window_size", "=", "to_2tuple", "(", "self", ".", "window_size", ")", ",", "num_heads", "=", "num_heads", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "# calculate attention mask for SW-MSA", "\n", "            ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "img_mask", "=", "torch", ".", "zeros", "(", "(", "1", ",", "H", ",", "W", ",", "1", ")", ")", "# 1 H W 1", "\n", "h_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "w_slices", "=", "(", "slice", "(", "0", ",", "-", "self", ".", "window_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "window_size", ",", "-", "self", ".", "shift_size", ")", ",", "\n", "slice", "(", "-", "self", ".", "shift_size", ",", "None", ")", ")", "\n", "cnt", "=", "0", "\n", "for", "h", "in", "h_slices", ":", "\n", "                ", "for", "w", "in", "w_slices", ":", "\n", "                    ", "img_mask", "[", ":", ",", "h", ",", "w", ",", ":", "]", "=", "cnt", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "mask_windows", "=", "window_partition", "(", "img_mask", ",", "self", ".", "window_size", ")", "# nW, window_size, window_size, 1", "\n", "mask_windows", "=", "mask_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "atten_mask", "=", "mask_windows", ".", "unsqueeze", "(", "1", ")", "-", "mask_windows", ".", "unsqueeze", "(", "2", ")", "\n", "atten_mask", "=", "atten_mask", ".", "masked_fill", "(", "atten_mask", "!=", "0", ",", "float", "(", "-", "100.0", ")", ")", ".", "masked_fill", "(", "atten_mask", "==", "0", ",", "float", "(", "0.0", ")", ")", "\n", "", "else", ":", "\n", "            ", "atten_mask", "=", "None", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"atten_mask\"", ",", "atten_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.SwinTransformerBlock.forward": [[225, 263], ["Swin.SwinTransformerBlock.norm1", "torch.roll.view", "torch.roll.view", "torch.roll.view", "Swin.window_partition", "x_windows.view.view.view", "Swin.SwinTransformerBlock.attn", "attn_windows.view.view.view", "Swin.window_reverse", "torch.roll.view", "torch.roll.view", "torch.roll.view", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "Swin.SwinTransformerBlock.drop_path", "Swin.SwinTransformerBlock.drop_path", "Swin.SwinTransformerBlock.mlp", "Swin.SwinTransformerBlock.norm2"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.window_partition", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.window_reverse"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "\n", "shortcut", "=", "x", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "# cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "shifted_x", "=", "torch", ".", "roll", "(", "x", ",", "shifts", "=", "(", "-", "self", ".", "shift_size", ",", "-", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "shifted_x", "=", "x", "\n", "\n", "# partition windows", "\n", "", "x_windows", "=", "window_partition", "(", "shifted_x", ",", "self", ".", "window_size", ")", "# nW*B, window_size, window_size, C", "\n", "x_windows", "=", "x_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", "*", "self", ".", "window_size", ",", "C", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# W-MSA/SW-MSA", "\n", "attn_windows", "=", "self", ".", "attn", "(", "x_windows", ",", "mask", "=", "self", ".", "atten_mask", ")", "# nW*B, window_size*window_size, C", "\n", "\n", "# merge windows", "\n", "attn_windows", "=", "attn_windows", ".", "view", "(", "-", "1", ",", "self", ".", "window_size", ",", "self", ".", "window_size", ",", "C", ")", "\n", "shifted_x", "=", "window_reverse", "(", "attn_windows", ",", "self", ".", "window_size", ",", "H", ",", "W", ")", "# B H' W' C", "\n", "\n", "# reverse cyclic shift", "\n", "if", "self", ".", "shift_size", ">", "0", ":", "\n", "            ", "x", "=", "torch", ".", "roll", "(", "shifted_x", ",", "shifts", "=", "(", "self", ".", "shift_size", ",", "self", ".", "shift_size", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "shifted_x", "\n", "", "x", "=", "x", ".", "view", "(", "B", ",", "H", "*", "W", ",", "C", ")", "\n", "\n", "# FFN", "\n", "x", "=", "shortcut", "+", "self", ".", "drop_path", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.SwinTransformerBlock.extra_repr": [[264, 266], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"dim={self.dim}, input_resolution={self.input_resolution}, num_heads={self.num_heads}, \"", "f\"window_size={self.window_size}, shift_size={self.shift_size}, mlp_ratio={self.mlp_ratio}\"", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.SwinTransformerBlock.flops": [[268, 281], ["Swin.SwinTransformerBlock.attn.flops"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "# norm1", "\n", "flops", "+=", "self", ".", "dim", "*", "H", "*", "W", "\n", "# W-MSA/SW-MSA", "\n", "nW", "=", "H", "*", "W", "/", "self", ".", "window_size", "/", "self", ".", "window_size", "\n", "flops", "+=", "nW", "*", "self", ".", "attn", ".", "flops", "(", "self", ".", "window_size", "*", "self", ".", "window_size", ")", "\n", "# mlp", "\n", "flops", "+=", "2", "*", "H", "*", "W", "*", "self", ".", "dim", "*", "self", ".", "dim", "*", "self", ".", "mlp_ratio", "\n", "# norm2", "\n", "flops", "+=", "self", ".", "dim", "*", "H", "*", "W", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchMerging.__init__": [[292, 298], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "input_resolution", ",", "dim", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "reduction", "=", "nn", ".", "Linear", "(", "4", "*", "dim", ",", "2", "*", "dim", ",", "bias", "=", "False", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "4", "*", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchMerging.forward": [[299, 321], ["Swin.PatchMerging.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Swin.PatchMerging.view", "Swin.PatchMerging.norm", "Swin.PatchMerging.reduction"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        x: B, H*W, C\n        \"\"\"", "\n", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "L", "==", "H", "*", "W", ",", "\"input feature has wrong size\"", "\n", "assert", "H", "%", "2", "==", "0", "and", "W", "%", "2", "==", "0", ",", "f\"x size ({H}*{W}) are not even.\"", "\n", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", ",", "W", ",", "C", ")", "\n", "\n", "x0", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x1", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "0", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x2", "=", "x", "[", ":", ",", "0", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x3", "=", "x", "[", ":", ",", "1", ":", ":", "2", ",", "1", ":", ":", "2", ",", ":", "]", "# B H/2 W/2 C", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x0", ",", "x1", ",", "x2", ",", "x3", "]", ",", "-", "1", ")", "# B H/2 W/2 4*C", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "-", "1", ",", "4", "*", "C", ")", "# B H/2*W/2 4*C", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "reduction", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchMerging.extra_repr": [[322, 324], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"input_resolution={self.input_resolution}, dim={self.dim}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchMerging.flops": [[325, 330], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "H", ",", "W", "=", "self", ".", "input_resolution", "\n", "flops", "=", "H", "*", "W", "*", "self", ".", "dim", "\n", "flops", "+=", "(", "H", "//", "2", ")", "*", "(", "W", "//", "2", ")", "*", "4", "*", "self", ".", "dim", "*", "2", "*", "self", ".", "dim", "\n", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.BasicLayer.__init__": [[352, 379], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "downsample", "Swin.SwinTransformerBlock", "range", "isinstance"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "dim", ",", "input_resolution", ",", "depth", ",", "num_heads", ",", "window_size", ",", "\n", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "downsample", "=", "None", ",", "use_checkpoint", "=", "False", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "input_resolution", "=", "input_resolution", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "use_checkpoint", "=", "use_checkpoint", "\n", "\n", "# build blocks", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "SwinTransformerBlock", "(", "dim", "=", "dim", ",", "input_resolution", "=", "input_resolution", ",", "\n", "num_heads", "=", "num_heads", ",", "window_size", "=", "window_size", ",", "\n", "shift_size", "=", "0", "if", "(", "i", "%", "2", "==", "0", ")", "else", "window_size", "//", "2", ",", "\n", "mlp_ratio", "=", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop", ",", "attn_drop", "=", "attn_drop", ",", "\n", "drop_path", "=", "drop_path", "[", "i", "]", "if", "isinstance", "(", "drop_path", ",", "list", ")", "else", "drop_path", ",", "\n", "norm_layer", "=", "norm_layer", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "# patch merging layer", "\n", "if", "downsample", "is", "not", "None", ":", "\n", "            ", "self", ".", "downsample", "=", "downsample", "(", "input_resolution", ",", "dim", "=", "dim", ",", "norm_layer", "=", "norm_layer", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.BasicLayer.forward": [[380, 389], ["Swin.BasicLayer.downsample", "torch.checkpoint", "torch.checkpoint", "torch.checkpoint", "blk"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "if", "self", ".", "use_checkpoint", ":", "\n", "                ", "x", "=", "checkpoint", ".", "checkpoint", "(", "blk", ",", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "blk", "(", "x", ")", "\n", "", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.BasicLayer.extra_repr": [[390, 392], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", "->", "str", ":", "\n", "        ", "return", "f\"dim={self.dim}, input_resolution={self.input_resolution}, depth={self.depth}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.BasicLayer.flops": [[393, 400], ["blk.flops", "Swin.BasicLayer.downsample.flops"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "flops", "+=", "blk", ".", "flops", "(", ")", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "flops", "+=", "self", ".", "downsample", ".", "flops", "(", ")", "\n", "", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchEmbed.__init__": [[413, 431], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "timm.models.layers.to_2tuple", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "96", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "patches_resolution", "=", "[", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", "]", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "patches_resolution", "=", "patches_resolution", "\n", "self", ".", "num_patches", "=", "patches_resolution", "[", "0", "]", "*", "patches_resolution", "[", "1", "]", "\n", "\n", "self", ".", "in_chans", "=", "in_chans", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "in_chans", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "if", "norm_layer", "is", "not", "None", ":", "\n", "            ", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchEmbed.forward": [[432, 441], ["Swin.PatchEmbed.proj().flatten().transpose", "Swin.PatchEmbed.norm", "Swin.PatchEmbed.proj().flatten", "Swin.PatchEmbed.proj"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "# FIXME look at relaxing size constraints", "\n", "assert", "H", "==", "self", ".", "img_size", "[", "0", "]", "and", "W", "==", "self", ".", "img_size", "[", "1", "]", ",", "f\"Input image size ({H}*{W}) doesn't match model ({self.img_size[0]}*{self.img_size[1]}).\"", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "# B Ph*Pw C", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.PatchEmbed.flops": [[442, 448], ["None"], "methods", ["None"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "Ho", ",", "Wo", "=", "self", ".", "patches_resolution", "\n", "flops", "=", "Ho", "*", "Wo", "*", "self", ".", "embed_dim", "*", "self", ".", "in_chans", "*", "(", "self", ".", "patch_size", "[", "0", "]", "*", "self", ".", "patch_size", "[", "1", "]", ")", "\n", "if", "self", ".", "norm", "is", "not", "None", ":", "\n", "            ", "flops", "+=", "Ho", "*", "Wo", "*", "self", ".", "embed_dim", "\n", "", "return", "flops", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.__init__": [[476, 532], ["torch.Module.__init__", "len", "int", "Swin.PatchEmbed", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "norm_layer", "torch.AdaptiveAvgPool1d", "torch.AdaptiveAvgPool1d", "torch.AdaptiveAvgPool1d", "Swin.Swintransformer.apply", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.trunc_normal_", "x.item", "Swin.BasicLayer", "Swin.Swintransformer.layers.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "sum", "int", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "4", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "\n", "embed_dim", "=", "128", ",", "depths", "=", "[", "2", ",", "2", ",", "18", ",", "2", "]", ",", "num_heads", "=", "[", "4", ",", "8", ",", "16", ",", "32", "]", ",", "\n", "window_size", "=", "7", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "True", ",", "qk_scale", "=", "None", ",", "\n", "drop_rate", "=", "0.", ",", "attn_drop_rate", "=", "0.", ",", "drop_path_rate", "=", "0.5", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "ape", "=", "False", ",", "patch_norm", "=", "True", ",", "\n", "use_checkpoint", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_layers", "=", "len", "(", "depths", ")", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "ape", "=", "ape", "\n", "self", ".", "patch_norm", "=", "patch_norm", "\n", "self", ".", "num_features", "=", "int", "(", "embed_dim", "*", "2", "**", "(", "self", ".", "num_layers", "-", "1", ")", ")", "\n", "self", ".", "mlp_ratio", "=", "mlp_ratio", "\n", "\n", "# split image into non-overlapping patches", "\n", "self", ".", "patch_embed", "=", "PatchEmbed", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", ",", "\n", "norm_layer", "=", "norm_layer", "if", "self", ".", "patch_norm", "else", "None", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "patches_resolution", "=", "self", ".", "patch_embed", ".", "patches_resolution", "\n", "self", ".", "patches_resolution", "=", "patches_resolution", "\n", "\n", "# absolute position embedding", "\n", "if", "self", ".", "ape", ":", "\n", "            ", "self", ".", "absolute_pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", ",", "embed_dim", ")", ")", "\n", "trunc_normal_", "(", "self", ".", "absolute_pos_embed", ",", "std", "=", ".02", ")", "\n", "\n", "", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "# stochastic depth", "\n", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "sum", "(", "depths", ")", ")", "]", "# stochastic depth decay rule", "\n", "\n", "# build layers", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_layer", "in", "range", "(", "self", ".", "num_layers", "-", "1", ")", ":", "\n", "            ", "layer", "=", "BasicLayer", "(", "dim", "=", "int", "(", "embed_dim", "*", "2", "**", "i_layer", ")", ",", "\n", "input_resolution", "=", "(", "patches_resolution", "[", "0", "]", "//", "(", "2", "**", "i_layer", ")", ",", "\n", "patches_resolution", "[", "1", "]", "//", "(", "2", "**", "i_layer", ")", ")", ",", "\n", "depth", "=", "depths", "[", "i_layer", "]", ",", "\n", "num_heads", "=", "num_heads", "[", "i_layer", "]", ",", "\n", "window_size", "=", "window_size", ",", "\n", "mlp_ratio", "=", "self", ".", "mlp_ratio", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "dpr", "[", "sum", "(", "depths", "[", ":", "i_layer", "]", ")", ":", "sum", "(", "depths", "[", ":", "i_layer", "+", "1", "]", ")", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "downsample", "=", "PatchMerging", "if", "(", "i_layer", "<", "self", ".", "num_layers", "-", "2", ")", "else", "None", ",", "\n", "use_checkpoint", "=", "use_checkpoint", ")", "\n", "self", ".", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "self", ".", "norm", "=", "norm_layer", "(", "self", ".", "num_features", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool1d", "(", "1", ")", "\n", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer._init_weights": [[533, 541], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.no_weight_decay": [[542, 545], ["None"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "        ", "return", "{", "'absolute_pos_embed'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.no_weight_decay_keywords": [[546, 549], ["None"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay_keywords", "(", "self", ")", ":", "\n", "        ", "return", "{", "'relative_position_bias_table'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.forward_features": [[550, 567], ["Swin.Swintransformer.patch_embed", "Swin.Swintransformer.pos_drop", "s.append", "layer.view().permute().contiguous", "layer", "s.append", "layer.view().permute().contiguous", "layer.view().permute", "layer.view().permute", "layer.view", "int", "int", "layer.view", "int", "int"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "if", "self", ".", "ape", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "absolute_pos_embed", "\n", "", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "s", "=", "[", "]", "\n", "s", ".", "append", "(", "x", ".", "view", "(", "b", ",", "int", "(", "(", "x", ".", "shape", "[", "1", "]", ")", "**", "0.5", ")", ",", "int", "(", "(", "x", ".", "shape", "[", "1", "]", ")", "**", "(", "0.5", ")", ")", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", ")", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "s", ".", "append", "(", "x", ".", "view", "(", "b", ",", "int", "(", "(", "x", ".", "shape", "[", "1", "]", ")", "**", "0.5", ")", ",", "int", "(", "(", "x", ".", "shape", "[", "1", "]", ")", "**", "(", "0.5", ")", ")", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", ")", "\n", "\n", "#  x = self.norm(x)  # B L C", "\n", "#  x = self.avgpool(x.transpose(1, 2))  # B C 1", "\n", "#  x = torch.flatten(x, 1)", "\n", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.forward": [[568, 572], ["Swin.Swintransformer.forward_features"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "#   x = self.head(x)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops": [[573, 579], ["Swin.Swintransformer.patch_embed.flops", "enumerate", "layer.flops"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.Swintransformer.flops"], ["", "def", "flops", "(", "self", ")", ":", "\n", "        ", "flops", "=", "0", "\n", "flops", "+=", "self", ".", "patch_embed", ".", "flops", "(", ")", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "flops", "+=", "layer", ".", "flops", "(", ")", "\n", "", "return", "flops", "", "", "", ""]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.window_partition": [[25, 38], ["x.view.view", "x.view.permute().contiguous().view", "x.view.permute().contiguous", "x.view.permute"], "function", ["None"], ["", "", "def", "window_partition", "(", "x", ",", "window_size", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    \"\"\"", "\n", "B", ",", "H", ",", "W", ",", "C", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "C", ")", "\n", "windows", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "window_size", ",", "window_size", ",", "C", ")", "\n", "return", "windows", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Swin.window_reverse": [[40, 55], ["int", "windows.view", "x.permute().contiguous().view.permute().contiguous().view", "x.permute().contiguous().view.permute().contiguous", "x.permute().contiguous().view.permute"], "function", ["None"], ["", "def", "window_reverse", "(", "windows", ",", "window_size", ",", "H", ",", "W", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        windows: (num_windows*B, window_size, window_size, C)\n        window_size (int): Window size\n        H (int): Height of image\n        W (int): Width of image\n\n    Returns:\n        x: (B, H, W, C)\n    \"\"\"", "\n", "B", "=", "int", "(", "windows", ".", "shape", "[", "0", "]", "/", "(", "H", "*", "W", "/", "window_size", "/", "window_size", ")", ")", "\n", "x", "=", "windows", ".", "view", "(", "B", ",", "H", "//", "window_size", ",", "W", "//", "window_size", ",", "window_size", ",", "window_size", ",", "-", "1", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", ".", "view", "(", "B", ",", "H", ",", "W", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Normalize.__init__": [[12, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Normalize.__call__": [[16, 20], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "image", "=", "(", "image", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "mask", "/=", "255", "\n", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.RandomCrop.__call__": [[22, 30], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "H", ",", "W", ",", "_", "=", "image", ".", "shape", "\n", "randw", "=", "np", ".", "random", ".", "randint", "(", "W", "/", "8", ")", "\n", "randh", "=", "np", ".", "random", ".", "randint", "(", "H", "/", "8", ")", "\n", "offseth", "=", "0", "if", "randh", "==", "0", "else", "np", ".", "random", ".", "randint", "(", "randh", ")", "\n", "offsetw", "=", "0", "if", "randw", "==", "0", "else", "np", ".", "random", ".", "randint", "(", "randw", ")", "\n", "p0", ",", "p1", ",", "p2", ",", "p3", "=", "offseth", ",", "H", "+", "offseth", "-", "randh", ",", "offsetw", ",", "W", "+", "offsetw", "-", "randw", "\n", "return", "image", "[", "p0", ":", "p1", ",", "p2", ":", "p3", ",", ":", "]", ",", "mask", "[", "p0", ":", "p1", ",", "p2", ":", "p3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.RandomFlip.__call__": [[35, 40], ["numpy.random.randint"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "if", "np", ".", "random", ".", "randint", "(", "2", ")", "==", "0", ":", "\n", "            ", "return", "image", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", ",", "mask", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Resize.__init__": [[42, 45], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "H", ",", "W", ")", ":", "\n", "        ", "self", ".", "H", "=", "H", "\n", "self", ".", "W", "=", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Resize.__call__": [[46, 50], ["cv2.resize", "cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "dsize", "=", "(", "self", ".", "W", ",", "self", ".", "H", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "mask", "=", "cv2", ".", "resize", "(", "mask", ",", "dsize", "=", "(", "self", ".", "W", ",", "self", ".", "H", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.ToTensor.__call__": [[52, 57], ["torch.from_numpy", "image.permute.permute.permute", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "        ", "image", "=", "torch", ".", "from_numpy", "(", "image", ")", "\n", "image", "=", "image", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Config.__init__": [[61, 68], ["numpy.array", "numpy.array", "print", "dataset.Config.kwargs.items", "print"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "kwargs", "=", "kwargs", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "[", "[", "124.55", ",", "118.90", ",", "102.94", "]", "]", "]", ")", "\n", "self", ".", "std", "=", "np", ".", "array", "(", "[", "[", "[", "56.77", ",", "55.97", ",", "57.50", "]", "]", "]", ")", "\n", "print", "(", "'\\nParameters...'", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "'%-10s: %s'", "%", "(", "k", ",", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Config.__getattr__": [[69, 74], ["None"], "methods", ["None"], ["", "", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "name", "in", "self", ".", "kwargs", ":", "\n", "            ", "return", "self", ".", "kwargs", "[", "name", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Data.__init__": [[78, 95], ["dataset.Normalize", "dataset.RandomCrop", "dataset.RandomFlip", "dataset.Resize", "dataset.ToTensor", "glob.glob", "glob.glob", "dataset.Data.samples.append", "each.split", "img_name.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "normalize", "=", "Normalize", "(", "mean", "=", "cfg", ".", "mean", ",", "std", "=", "cfg", ".", "std", ")", "\n", "self", ".", "randomcrop", "=", "RandomCrop", "(", ")", "\n", "self", ".", "randomflip", "=", "RandomFlip", "(", ")", "\n", "self", ".", "resize", "=", "Resize", "(", "1024", ",", "1024", ")", "\n", "self", ".", "totensor", "=", "ToTensor", "(", ")", "\n", "self", ".", "samples", "=", "[", "]", "\n", "lst", "=", "glob", ".", "glob", "(", "cfg", ".", "datapath", "+", "'/mask/'", "+", "'*.png'", ")", "\n", "hrlst", "=", "glob", ".", "glob", "(", "'../../data/HRSOD/mask/*.png'", ")", "\n", "if", "self", ".", "cfg", ".", "mode", "==", "'train'", ":", "\n", "            ", "lst", "=", "hrlst", "*", "4", "+", "lst", "# to balance the scale of lr dataset and hr dataset", "\n", "\n", "", "for", "each", "in", "lst", ":", "\n", "            ", "img_name", "=", "each", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "img_name", "=", "img_name", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "self", ".", "samples", ".", "append", "(", "img_name", ")", "\n", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Data.__getitem__": [[95, 117], ["cv2.imread().astype", "image[].copy", "cv2.imread().astype", "dataset.Data.resize", "dataset.Data.normalize", "dataset.Data.randomcrop", "dataset.Data.randomflip", "dataset.Data.normalize", "dataset.Data.resize", "dataset.Data.totensor", "cv2.imread", "cv2.imread", "image[].copy.copy", "cv2.imread().astype.copy"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", "=", "self", ".", "samples", "[", "idx", "]", "\n", "tig", "=", "'.jpg'", "\n", "if", "self", ".", "cfg", ".", "datapath", "==", "'../../data/HKU-IS'", ":", "\n", "            ", "tig", "=", "'.png'", "\n", "", "image", "=", "cv2", ".", "imread", "(", "self", ".", "cfg", ".", "datapath", "+", "'/image/'", "+", "name", "+", "tig", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "mask", "=", "cv2", ".", "imread", "(", "self", ".", "cfg", ".", "datapath", "+", "'/mask/'", "+", "name", "+", "'.png'", ",", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "shape", "=", "mask", ".", "shape", "\n", "\n", "if", "self", ".", "cfg", ".", "mode", "==", "'train'", ":", "\n", "            ", "image", ",", "mask", "=", "self", ".", "resize", "(", "image", ",", "mask", ")", "\n", "image", ",", "mask", "=", "self", ".", "normalize", "(", "image", ",", "mask", ")", "\n", "image", ",", "mask", "=", "self", ".", "randomcrop", "(", "image", ",", "mask", ")", "\n", "image", ",", "mask", "=", "self", ".", "randomflip", "(", "image", ",", "mask", ")", "\n", "return", "image", ".", "copy", "(", ")", ",", "mask", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "            ", "shape", "=", "mask", ".", "shape", "#", "\n", "image", ",", "mask", "=", "self", ".", "normalize", "(", "image", ",", "mask", ")", "\n", "image", ",", "mask", "=", "self", ".", "resize", "(", "image", ",", "mask", ")", "\n", "image", ",", "mask", "=", "self", ".", "totensor", "(", "image", ",", "mask", ")", "\n", "return", "image", ",", "mask", ",", "shape", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Data.collate": [[118, 127], ["range", "torch.from_numpy().permute", "torch.from_numpy().unsqueeze", "list", "len", "cv2.resize", "cv2.resize", "numpy.random.randint", "zip", "torch.from_numpy", "torch.from_numpy", "numpy.stack", "numpy.stack"], "methods", ["None"], ["", "", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "size", "=", "[", "960", ",", "992", ",", "1024", ",", "1056", ",", "1088", "]", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "5", ")", "]", "\n", "image", ",", "mask", "=", "[", "list", "(", "item", ")", "for", "item", "in", "zip", "(", "*", "batch", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "batch", ")", ")", ":", "\n", "            ", "image", "[", "i", "]", "=", "cv2", ".", "resize", "(", "image", "[", "i", "]", ",", "dsize", "=", "(", "size", ",", "size", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "mask", "[", "i", "]", "=", "cv2", ".", "resize", "(", "mask", "[", "i", "]", ",", "dsize", "=", "(", "size", ",", "size", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "image", "=", "torch", ".", "from_numpy", "(", "np", ".", "stack", "(", "image", ",", "axis", "=", "0", ")", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "np", ".", "stack", "(", "mask", ",", "axis", "=", "0", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.dataset.Data.__len__": [[128, 130], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.BasicBlock.__init__": [[37, 54], ["torch.Module.__init__", "Res.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "Res.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv3x3", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.BasicBlock.forward": [[55, 72], ["Res.BasicBlock.conv1", "Res.BasicBlock.bn1", "Res.BasicBlock.relu", "Res.BasicBlock.conv2", "Res.BasicBlock.bn2", "Res.BasicBlock.relu", "Res.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.BasicBlock.initialize": [[72, 74], ["Res.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.Bottleneck.__init__": [[85, 101], ["torch.Module.__init__", "Res.conv1x1", "norm_layer", "Res.conv3x3", "norm_layer", "Res.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv1x1", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv3x3", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.Bottleneck.forward": [[102, 123], ["Res.Bottleneck.conv1", "Res.Bottleneck.bn1", "Res.Bottleneck.relu", "Res.Bottleneck.conv2", "Res.Bottleneck.bn2", "Res.Bottleneck.relu", "Res.Bottleneck.conv3", "Res.Bottleneck.bn3", "Res.Bottleneck.relu", "Res.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.Bottleneck.initialize": [[123, 125], ["Res.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.__init__": [[151, 199], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "Res.ResNet._make_layer", "Res.ResNet._make_layer", "Res.ResNet._make_layer", "Res.ResNet._make_layer", "Res.ResNet.modules", "len", "ValueError", "isinstance", "Res.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet._make_layer", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet._make_layer", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet._make_layer", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "\n", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet._make_layer": [[200, 223], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "Res.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.forward": [[224, 232], ["torch.relu", "torch.relu", "torch.relu", "Res.ResNet.maxpool", "Res.ResNet.layer1", "Res.ResNet.layer2", "Res.ResNet.layer3", "Res.ResNet.layer4", "Res.ResNet.bn1", "Res.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out1", "=", "self", ".", "maxpool", "(", "out1", ")", "\n", "out2", "=", "self", ".", "layer1", "(", "out1", ")", "\n", "out3", "=", "self", ".", "layer2", "(", "out2", ")", "\n", "out4", "=", "self", ".", "layer3", "(", "out3", ")", "\n", "out5", "=", "self", ".", "layer4", "(", "out4", ")", "\n", "return", "out2", ",", "out3", ",", "out4", ",", "out5", "\n", "", "def", "initialize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.initialize": [[232, 234], ["Res.weight_init"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "weight_init", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv3x3": [[23, 27], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.conv1x1": [[29, 32], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init": [[126, 147], ["module.named_children", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "torch.init.ones_", "isinstance", "torch.init.zeros_", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "Res.weight_init", "isinstance", "m.initialize"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.weight_init", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.initialize"], ["", "", "def", "weight_init", "(", "module", ")", ":", "\n", "    ", "for", "n", ",", "m", "in", "module", ".", "named_children", "(", ")", ":", "\n", "#  print('initialize: '+n)", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "InstanceNorm2d", ")", ")", ":", "\n", "            ", "nn", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_in'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Sequential", ")", ":", "\n", "            ", "weight_init", "(", "m", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "ReLU", ",", "nn", ".", "AdaptiveAvgPool2d", ",", "nn", ".", "Softmax", ",", "nn", ".", "MaxPool2d", ")", ")", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "m", ".", "initialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet": [[236, 240], ["Res.ResNet"], "function", ["None"], ["", "", "def", "_resnet", "(", "arch", ",", "block", ",", "layers", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet18": [[242, 252], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnet18", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet18'", ",", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet34": [[254, 264], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet34'", ",", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet50": [[266, 276], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet50'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet101": [[278, 288], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet101'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnet152": [[290, 300], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-152 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "'resnet152'", ",", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "pretrained", ",", "progress", ",", "\n", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnext50_32x4d": [[302, 314], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnext50_32x4d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-50 32x4d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "4", "\n", "return", "_resnet", "(", "'resnext50_32x4d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.resnext101_32x8d": [[316, 328], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "resnext101_32x8d", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-101 32x8d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'groups'", "]", "=", "32", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "8", "\n", "return", "_resnet", "(", "'resnext101_32x8d'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.wide_resnet50_2": [[330, 346], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "wide_resnet50_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-50-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet50_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.wide_resnet101_2": [[348, 364], ["Res._resnet"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.Res._resnet"], ["", "def", "wide_resnet101_2", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Wide ResNet-101-2 model from\n    `\"Wide Residual Networks\" <https://arxiv.org/pdf/1605.07146.pdf>`_\n\n    The model is the same as ResNet except for the bottleneck number of channels\n    which is twice larger in every block. The number of channels in outer 1x1\n    convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048\n    channels, and in Wide ResNet-50-2 has 2048-1024-2048.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "'width_per_group'", "]", "=", "64", "*", "2", "\n", "return", "_resnet", "(", "'wide_resnet101_2'", ",", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.test.Test.__init__": [[17, 27], ["Dataset.Config", "Dataset.Data", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Network", "test.Test.net.train", "test.Test.net.cuda"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.train"], ["    ", "def", "__init__", "(", "self", ",", "Dataset", ",", "Network", ",", "path", ",", "model", ")", ":", "\n", "## dataset", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "cfg", "=", "Dataset", ".", "Config", "(", "datapath", "=", "path", ",", "snapshot", "=", "model", ",", "mode", "=", "'test'", ")", "\n", "self", ".", "data", "=", "Dataset", ".", "Data", "(", "self", ".", "cfg", ")", "\n", "self", ".", "loader", "=", "DataLoader", "(", "self", ".", "data", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ")", "\n", "## network", "\n", "self", ".", "net", "=", "Network", "(", "self", ".", "cfg", ")", "\n", "self", ".", "net", ".", "train", "(", "False", ")", "\n", "self", ".", "net", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.test.Test.save": [[28, 41], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "image.cuda().float.cuda().float.cuda().float", "mask.cuda().float.cuda().float.cuda().float", "test.Test.net", "torch.interpolate", "torch.interpolate", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "cv2.imwrite", "os.path.exists", "os.makedirs", "numpy.round", "image.cuda().float.cuda().float.cuda", "mask.cuda().float.cuda().float.cuda", "test.Test.cfg.datapath.split"], "methods", ["None"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "image", ",", "mask", ",", "shape", ",", "name", "in", "self", ".", "loader", ":", "\n", "                ", "image", "=", "image", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "mask", "=", "mask", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "p", "=", "self", ".", "net", "(", "image", ",", "shape", "=", "shape", ")", "\n", "out_resize", "=", "F", ".", "interpolate", "(", "p", "[", "0", "]", ",", "size", "=", "shape", ",", "mode", "=", "'bilinear'", ")", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "out_resize", "[", "0", ",", "0", "]", ")", "\n", "pred", "=", "(", "pred", "*", "255", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "head", "=", "'../result/'", "+", "self", ".", "model", "+", "'/'", "+", "self", ".", "cfg", ".", "datapath", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "head", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "head", ")", "\n", "", "cv2", ".", "imwrite", "(", "head", "+", "'/'", "+", "name", "[", "0", "]", "+", "'.png'", ",", "np", ".", "round", "(", "pred", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.flat": [[19, 28], ["torch.interpolate", "F.interpolate.view().permute", "g.unsqueeze.unsqueeze", "mask.view().permute.transpose", "F.interpolate.view", "int", "int"], "function", ["None"], ["def", "flat", "(", "mask", ")", ":", "\n", "    ", "batch_size", "=", "mask", ".", "shape", "[", "0", "]", "\n", "h", "=", "28", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "size", "=", "(", "int", "(", "h", ")", ",", "int", "(", "h", ")", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "x", "=", "mask", ".", "view", "(", "batch_size", ",", "1", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# print(x.shape)  b 28*28 1", "\n", "g", "=", "x", "@", "x", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "# b 28*28 28*28", "\n", "g", "=", "g", ".", "unsqueeze", "(", "1", ")", "# b 1 28*28 28*28", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.att_loss": [[29, 40], ["train_distributed.flat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "train_distributed.flat", "train_distributed.flat", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.binary_cross_entropy_with_logits", "flat.detach", "flat.detach"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.flat", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.flat", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.flat"], ["", "def", "att_loss", "(", "pred", ",", "mask", ",", "p4", ",", "p5", ")", ":", "\n", "    ", "g", "=", "flat", "(", "mask", ")", "\n", "np4", "=", "torch", ".", "sigmoid", "(", "p4", ".", "detach", "(", ")", ")", "\n", "np5", "=", "torch", ".", "sigmoid", "(", "p5", ".", "detach", "(", ")", ")", "\n", "p4", "=", "flat", "(", "np4", ")", "\n", "p5", "=", "flat", "(", "np5", ")", "\n", "w1", "=", "torch", ".", "abs", "(", "g", "-", "p4", ")", "\n", "w2", "=", "torch", ".", "abs", "(", "g", "-", "p5", ")", "\n", "w", "=", "(", "w1", "+", "w2", ")", "*", "0.5", "+", "1", "\n", "attbce", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "pred", ",", "g", ",", "weight", "=", "w", "*", "1.0", ",", "reduction", "=", "'mean'", ")", "\n", "return", "attbce", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.bce_iou_loss": [[41, 50], ["torch.interpolate", "torch.binary_cross_entropy_with_logits", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid.size"], "function", ["None"], ["", "def", "bce_iou_loss", "(", "pred", ",", "mask", ")", ":", "\n", "    ", "size", "=", "pred", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ")", "\n", "wbce", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "pred", ",", "mask", ")", "\n", "pred", "=", "torch", ".", "sigmoid", "(", "pred", ")", "\n", "inter", "=", "(", "pred", "*", "mask", ")", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "union", "=", "(", "pred", "+", "mask", ")", ".", "sum", "(", "dim", "=", "(", "2", ",", "3", ")", ")", "\n", "wiou", "=", "1", "-", "(", "inter", "+", "1", ")", "/", "(", "union", "-", "inter", "+", "1", ")", "\n", "return", "(", "wbce", "+", "wiou", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.reduce_mean": [[51, 56], ["tensor.clone", "torch.all_reduce"], "function", ["None"], ["", "def", "reduce_mean", "(", "tensor", ",", "nprocs", ")", ":", "# \u7528\u4e8e\u5e73\u5747\u6240\u6709gpu\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u6bd4\u5982loss", "\n", "    ", "rt", "=", "tensor", ".", "clone", "(", ")", "\n", "dist", ".", "all_reduce", "(", "rt", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ")", "\n", "rt", "/=", "nprocs", "\n", "return", "rt", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.parser": [[58, 66], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "def", "parser", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--local_rank'", ",", "default", "=", "-", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--batchsize'", ",", "default", "=", "-", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--savepath'", ",", "default", "=", "\"../model/baseline\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--datapath'", ",", "default", "=", "\"../data/DUTS-TR\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "parse_args", "(", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.train": [[67, 138], ["train_distributed.parser", "print", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "print", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "Dataset.Config", "Dataset.Data", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Network", "torch.nn.parallel.DistributedDataParallel.train", "torch.nn.parallel.DistributedDataParallel.named_parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "utils.lr_scheduler.LR_Scheduler", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.SyncBatchNorm.convert_sync_batchnorm", "apex.amp.initialize", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "range", "torch.barrier", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.get_world_size", "len", "torch.utils.data.distributed.DistributedSampler.set_epoch", "torch.nn.parallel.DistributedDataParallel.train", "enumerate", "base.append", "head.append", "torch.optim.SGD.zero_grad", "utils.lr_scheduler.LR_Scheduler.", "torch.nn.parallel.DistributedDataParallel.", "train_distributed.att_loss", "train_distributed.bce_iou_loss", "train_distributed.reduce_mean", "torch.optim.SGD.step", "torch.save", "torch.save", "torch.save", "image.float().cuda", "mask.float().cuda", "image.float().cuda", "mask.float().cuda", "torch.get_world_size", "apex.amp.scale_loss", "scaled_loss.backward", "print", "os.path.exists", "os.makedirs", "torch.nn.parallel.DistributedDataParallel.state_dict", "train_distributed.bce_iou_loss", "train_distributed.bce_iou_loss", "str", "image.float", "mask.float", "image.float", "mask.float", "datetime.datetime.now", "reduce_mean.item", "att_loss.item"], "function", ["home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.parser", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.train", "home.repos.pwc.inspect_result.icvteam_pgnet.src.Res.ResNet.initialize", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.train", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.att_loss", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.bce_iou_loss", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.reduce_mean", "home.repos.pwc.inspect_result.icvteam_pgnet.src.test.Test.save", "home.repos.pwc.inspect_result.icvteam_pgnet.src.test.Test.save", "home.repos.pwc.inspect_result.icvteam_pgnet.src.test.Test.save", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.bce_iou_loss", "home.repos.pwc.inspect_result.icvteam_pgnet.src.train_distributed.bce_iou_loss"], ["", "def", "train", "(", "Dataset", ",", "Network", ")", ":", "\n", "# dataset", "\n", "    ", "args", "=", "parser", "(", ")", "\n", "print", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", "\n", "############################################################", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "\"nccl\"", ")", "\n", "print", "(", "'world_size'", ",", "torch", ".", "distributed", ".", "get_world_size", "(", ")", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "local_rank", ")", "\n", "cfg", "=", "Dataset", ".", "Config", "(", "datapath", "=", "args", ".", "datapath", ",", "savepath", "=", "args", ".", "savepath", ",", "mode", "=", "'train'", ",", "batch", "=", "args", ".", "batchsize", ",", "lr", "=", "0.03", ",", "momen", "=", "0.9", ",", "\n", "decay", "=", "5e-4", ",", "epoch", "=", "32", ",", "snapshot", "=", "args", ".", "checkpoint", ")", "\n", "data", "=", "Dataset", ".", "Data", "(", "cfg", ")", "\n", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "data", ")", "\n", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "data", ",", "\n", "batch_size", "=", "args", ".", "batchsize", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "8", ",", "\n", "pin_memory", "=", "True", ",", "\n", "drop_last", "=", "True", ",", "\n", "collate_fn", "=", "data", ".", "collate", ",", "\n", "sampler", "=", "train_sampler", ")", "\n", "\n", "\n", "net", "=", "Network", "(", "cfg", ")", "\n", "net", ".", "train", "(", "True", ")", "\n", "\n", "base", ",", "head", "=", "[", "]", ",", "[", "]", "\n", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "'swin'", "in", "name", ":", "\n", "            ", "base", ".", "append", "(", "param", ")", "\n", "", "else", ":", "\n", "            ", "head", ".", "append", "(", "param", ")", "\n", "", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "'params'", ":", "base", "}", ",", "{", "'params'", ":", "head", "}", "]", ",", "lr", "=", "cfg", ".", "lr", ",", "momentum", "=", "cfg", ".", "momen", ",", "\n", "weight_decay", "=", "cfg", ".", "decay", ",", "nesterov", "=", "True", ")", "\n", "scheduler", "=", "LR_Scheduler", "(", "'cos'", ",", "cfg", ".", "lr", ",", "cfg", ".", "epoch", ",", "len", "(", "loader", ")", ",", "warmup_epochs", "=", "cfg", ".", "epoch", "//", "2", ")", "\n", "net", "=", "net", ".", "cuda", "(", "args", ".", "local_rank", ")", "\n", "net", "=", "torch", ".", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "net", ")", "\n", "net", ",", "optimizer", "=", "amp", ".", "initialize", "(", "net", ",", "optimizer", ",", "opt_level", "=", "'O1'", ")", "\n", "net", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "net", ",", "device_ids", "=", "[", "args", ".", "local_rank", "]", ",", "output_device", "=", "args", ".", "local_rank", ",", "\n", "find_unused_parameters", "=", "True", ",", "\n", "broadcast_buffers", "=", "False", ")", "\n", "global_step", "=", "0", "\n", "\n", "\n", "for", "epoch", "in", "range", "(", "cfg", ".", "epoch", ")", ":", "\n", "        ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "net", ".", "train", "(", ")", "\n", "for", "step", ",", "(", "image", ",", "mask", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "            ", "image", ",", "mask", "=", "image", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "mask", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "image", ",", "mask", "=", "image", ".", "float", "(", ")", ".", "cuda", "(", ")", ",", "mask", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "scheduler", "(", "optimizer", ",", "step", ",", "epoch", ")", "\n", "p1", ",", "wr", ",", "ws", ",", "attmap", "=", "net", "(", "image", ")", "\n", "\n", "att_loss_", "=", "att_loss", "(", "attmap", ",", "mask", ",", "wr", ",", "ws", ")", "# attention guided loss", "\n", "loss1", "=", "bce_iou_loss", "(", "p1", ",", "mask", ")", "# loss_b+i", "\n", "loss2", "=", "bce_iou_loss", "(", "wr", ",", "mask", ")", "*", "0.125", "+", "bce_iou_loss", "(", "ws", ",", "mask", ")", "*", "0.125", "# loss_aux", "\n", "loss", "=", "loss1", "+", "loss2", "+", "att_loss_", "\n", "loss", "=", "reduce_mean", "(", "loss", ",", "dist", ".", "get_world_size", "(", ")", ")", "\n", "\n", "with", "amp", ".", "scale_loss", "(", "loss", ",", "optimizer", ")", "as", "scaled_loss", ":", "\n", "                ", "scaled_loss", ".", "backward", "(", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "global_step", "+=", "1", "\n", "if", "step", "%", "60", "==", "0", "and", "args", ".", "local_rank", "==", "0", ":", "\n", "                ", "print", "(", "'%s | step:%d/%d/%d | lr=%.6f  loss=%.6f attloss=%.6f'", "%", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ",", "global_step", ",", "epoch", "+", "1", ",", "cfg", ".", "epoch", ",", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "loss", ".", "item", "(", ")", ",", "att_loss_", ".", "item", "(", ")", ")", ")", "\n", "", "", "if", "epoch", ">=", "27", "and", "args", ".", "local_rank", "==", "0", ":", "\n", "                ", "if", "not", "os", ".", "path", ".", "exists", "(", "cfg", ".", "savepath", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "cfg", ".", "savepath", ")", "\n", "", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "cfg", ".", "savepath", "+", "'/model-'", "+", "str", "(", "epoch", "+", "1", ")", ")", "\n", "", "", "dist", ".", "barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__init__": [[29, 41], ["print"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mode", ",", "base_lr", ",", "num_epochs", ",", "iters_per_epoch", "=", "0", ",", "\n", "lr_step", "=", "0", ",", "warmup_epochs", "=", "0", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "print", "(", "'Using {} LR Scheduler!'", ".", "format", "(", "self", ".", "mode", ")", ")", "\n", "self", ".", "lr", "=", "base_lr", "\n", "if", "mode", "==", "'step'", ":", "\n", "            ", "assert", "lr_step", "\n", "", "self", ".", "lr_step", "=", "lr_step", "\n", "self", ".", "iters_per_epoch", "=", "iters_per_epoch", "\n", "self", ".", "N", "=", "num_epochs", "*", "iters_per_epoch", "\n", "self", ".", "epoch", "=", "-", "1", "\n", "self", ".", "warmup_iters", "=", "warmup_epochs", "*", "iters_per_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler.__call__": [[42, 64], ["lr_scheduler.LR_Scheduler._adjust_learning_rate", "math.cos", "pow"], "methods", ["home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler._adjust_learning_rate"], ["", "def", "__call__", "(", "self", ",", "optimizer", ",", "i", ",", "epoch", ",", "best_pred", "=", "0.0", ")", ":", "\n", "        ", "T", "=", "epoch", "*", "self", ".", "iters_per_epoch", "+", "i", "\n", "if", "self", ".", "mode", "==", "'cos'", ":", "\n", "            ", "lr", "=", "0.5", "*", "self", ".", "lr", "*", "(", "1", "+", "math", ".", "cos", "(", "1.0", "*", "(", "T", "-", "self", ".", "warmup_iters", ")", "/", "(", "self", ".", "N", "-", "self", ".", "warmup_iters", ")", "*", "math", ".", "pi", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "'poly'", ":", "\n", "            ", "lr", "=", "self", ".", "lr", "*", "pow", "(", "(", "1", "-", "1.0", "*", "T", "/", "self", ".", "N", ")", ",", "0.9", ")", "\n", "", "elif", "self", ".", "mode", "==", "'step'", ":", "\n", "            ", "lr", "=", "self", ".", "lr", "*", "(", "0.1", "**", "(", "epoch", "//", "self", ".", "lr_step", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "'linear'", ":", "\n", "            ", "if", "T", "<", "self", ".", "warmup_iters", ":", "\n", "                ", "lr", "=", "self", ".", "lr", "\n", "", "else", ":", "\n", "                ", "lr", "=", "self", ".", "lr", "*", "1.0", "*", "(", "2", "-", "T", "/", "self", ".", "warmup_iters", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplemented", "\n", "\n", "", "if", "self", ".", "warmup_iters", ">", "0", "and", "T", "<", "self", ".", "warmup_iters", ":", "\n", "            ", "lr", "=", "lr", "*", "1.0", "*", "T", "/", "self", ".", "warmup_iters", "\n", "", "if", "epoch", ">", "self", ".", "epoch", ":", "\n", "            ", "self", ".", "epoch", "=", "epoch", "\n", "", "assert", "lr", ">=", "0", "\n", "self", ".", "_adjust_learning_rate", "(", "optimizer", ",", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.icvteam_pgnet.utils.lr_scheduler.LR_Scheduler._adjust_learning_rate": [[65, 72], ["len", "range", "len"], "methods", ["None"], ["", "def", "_adjust_learning_rate", "(", "self", ",", "optimizer", ",", "lr", ")", ":", "\n", "        ", "if", "len", "(", "optimizer", ".", "param_groups", ")", "==", "1", ":", "\n", "            ", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "lr", "\n", "", "else", ":", "\n", "            ", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "lr", "*", "0.1", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "optimizer", ".", "param_groups", ")", ")", ":", "\n", "                ", "optimizer", ".", "param_groups", "[", "i", "]", "[", "'lr'", "]", "=", "lr", "\n", "", "", "", "", ""]]}