{"home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.__init__": [[8, 35], ["gym.spaces.Discrete", "gym.spaces.Box", "random.Random"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "seed", "=", "None", ",", "\n", "size", "=", "8", ",", "\n", "render_style", "=", "'grid_world'", ",", "\n", "min_sol_len", "=", "1", ",", "\n", "max_tries", "=", "1000000", ")", ":", "\n", "\n", "        ", "self", ".", "x", "=", "(", "0", ",", "1", ",", "-", "1", ",", "0", ")", "\n", "self", ".", "y", "=", "(", "-", "1", ",", "0", ",", "0", ",", "1", ")", "\n", "self", ".", "action_space", "=", "Discrete", "(", "5", ")", "\n", "self", ".", "observation_space", "=", "Box", "(", "low", "=", "0", ",", "high", "=", "255", ",", "shape", "=", "(", "64", ",", "64", ",", "3", ")", ",", "dtype", "=", "\"uint8\"", ")", "\n", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "rng", "=", "random", ".", "Random", "(", "seed", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "render_style", "=", "render_style", "\n", "self", ".", "min_sol_len", "=", "min_sol_len", "\n", "self", ".", "max_tries", "=", "max_tries", "\n", "\n", "self", ".", "needs_reset", "=", "True", "\n", "self", ".", "is_closed", "=", "False", "\n", "self", ".", "grid", "=", "None", "\n", "self", ".", "pos", "=", "None", "\n", "self", ".", "start", "=", "None", "\n", "self", ".", "end", "=", "None", "\n", "self", ".", "solution", "=", "None", "\n", "self", ".", "already_solved", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.reset": [[36, 41], ["random.Random", "base.PuzzleEnv._reset"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "needs_reset", "=", "False", "\n", "self", ".", "rng", "=", "random", ".", "Random", "(", "self", ".", "seed", ")", "\n", "self", ".", "already_solved", "=", "False", "\n", "return", "self", ".", "_reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv._reset": [[42, 44], ["NotImplementedError"], "methods", ["None"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.step": [[45, 52], ["base.PuzzleEnv._step", "Exception", "Exception", "type"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._step"], ["", "def", "step", "(", "self", ",", "a", ")", ":", "\n", "        ", "if", "self", ".", "needs_reset", ":", "\n", "            ", "raise", "Exception", "(", "'Environment needs to be reset.'", ")", "\n", "", "if", "self", ".", "is_closed", ":", "\n", "            ", "raise", "Exception", "(", "'Environment is closed.'", ")", "\n", "", "assert", "type", "(", "a", ")", "==", "int", "\n", "return", "self", ".", "_step", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv._step": [[53, 55], ["NotImplementedError"], "methods", ["None"], ["", "def", "_step", "(", "self", ",", "a", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render": [[56, 62], ["base.PuzzleEnv._get_image", "Exception", "Exception"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._get_image"], ["", "def", "render", "(", "self", ",", "mode", "=", "'human'", ")", ":", "\n", "        ", "if", "self", ".", "needs_reset", ":", "\n", "            ", "raise", "Exception", "(", "'Environment needs to be reset.'", ")", "\n", "", "if", "self", ".", "is_closed", ":", "\n", "            ", "raise", "Exception", "(", "'Environment is closed.'", ")", "\n", "", "return", "self", ".", "_get_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv._get_image": [[63, 65], ["NotImplementedError"], "methods", ["None"], ["", "def", "_get_image", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.close": [[66, 76], ["None"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "is_closed", ":", "\n", "            ", "return", "\n", "", "self", ".", "is_closed", "=", "True", "\n", "self", ".", "grid", "=", "None", "\n", "self", ".", "pos", "=", "None", "\n", "self", ".", "start", "=", "None", "\n", "self", ".", "end", "=", "None", "\n", "self", ".", "solution", "=", "None", "\n", "self", ".", "already_solved", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.seed": [[77, 79], ["None"], "methods", ["None"], ["", "def", "seed", "(", "self", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "seed", "=", "seed", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.get_solution": [[80, 86], ["Exception", "Exception"], "methods", ["None"], ["", "def", "get_solution", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "needs_reset", ":", "\n", "            ", "raise", "Exception", "(", "'Environment needs to be reset.'", ")", "\n", "", "if", "self", ".", "is_closed", ":", "\n", "            ", "raise", "Exception", "(", "'Environment is closed.'", ")", "\n", "", "return", "self", ".", "solution", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.labels": [[87, 93], ["Exception", "Exception"], "methods", ["None"], ["", "def", "labels", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "needs_reset", ":", "\n", "            ", "raise", "Exception", "(", "'Environment needs to be reset.'", ")", "\n", "", "if", "self", ".", "is_closed", ":", "\n", "            ", "raise", "Exception", "(", "'Environment is closed.'", ")", "\n", "", "return", "{", "\"player_x\"", ":", "self", ".", "pos", "[", "0", "]", ",", "\"player_y\"", ":", "self", ".", "pos", "[", "1", "]", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump.__init__": [[10, 13], ["base.PuzzleEnv.__init__"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider.__init__"], ["    ", "def", "__init__", "(", "self", ",", "render_style", "=", "'mnist'", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DigitJump", ",", "self", ")", ".", "__init__", "(", "render_style", "=", "render_style", ",", "**", "kwargs", ")", "\n", "self", ".", "_can_go", "=", "lambda", "r", ",", "c", ":", "(", "0", "<=", "r", "<", "self", ".", "size", ")", "and", "(", "0", "<=", "c", "<", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._move": [[14, 17], ["digit_jump.DigitJump._can_go"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._can_go"], ["", "def", "_move", "(", "self", ",", "r", ",", "c", ",", "d", ",", "dist", ")", ":", "\n", "        ", "new_pos", "=", "(", "r", "+", "self", ".", "y", "[", "d", "]", "*", "dist", ",", "c", "+", "self", ".", "x", "[", "d", "]", "*", "dist", ")", "\n", "return", "new_pos", "if", "self", ".", "_can_go", "(", "*", "new_pos", ")", "else", "(", "r", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._reset": [[18, 21], ["digit_jump.DigitJump._create_level", "digit_jump.DigitJump.render"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._create_level", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_create_level", "(", ")", "\n", "return", "self", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._create_level": [[22, 69], ["range", "numpy.array().astype", "digit_jump.DigitJump.render", "numpy.loadtxt", "q.pop", "range", "numpy.array", "os.path.join", "numpy.stack().astype", "numpy.stack().astype", "numpy.pad().reshape().astype", "digit_jump.DigitJump.rng.randint", "range", "digit_jump.DigitJump._move", "os.path.dirname", "data[].reshape().astype", "numpy.stack().astype", "numpy.loadtxt", "numpy.loadtxt.reshape().astype", "min", "range", "os.path.abspath", "range", "numpy.stack", "numpy.stack", "numpy.pad().reshape", "os.path.join", "numpy.ones().astype", "numpy.stack().astype", "Exception", "data[].reshape", "numpy.stack", "os.path.dirname", "numpy.loadtxt.reshape", "numpy.stack().astype", "list", "numpy.pad", "os.path.abspath", "numpy.ones", "numpy.stack", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones", "range", "numpy.stack", "numpy.where", "numpy.stack", "numpy.stack", "float", "numpy.stack", "numpy.zeros", "numpy.pad", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._move"], ["", "def", "_create_level", "(", "self", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "self", ".", "max_tries", ")", ":", "\n", "            ", "start", "=", "(", "0", ",", "0", ")", "\n", "end", "=", "(", "self", ".", "size", "-", "1", ",", "self", ".", "size", "-", "1", ")", "\n", "grid", "=", "[", "[", "self", ".", "rng", ".", "randint", "(", "1", ",", "min", "(", "6", ",", "self", ".", "size", "-", "1", ")", ")", "for", "_", "in", "range", "(", "self", ".", "size", ")", "]", "for", "_", "in", "range", "(", "self", ".", "size", ")", "]", "\n", "q", "=", "[", "(", "start", ",", "[", "]", ")", "]", "\n", "n", "=", "start", "\n", "z", "=", "{", "}", "\n", "while", "q", "and", "n", "!=", "end", ":", "\n", "                ", "n", ",", "path", "=", "q", ".", "pop", "(", ")", "\n", "for", "d", "in", "range", "(", "4", ")", ":", "\n", "                    ", "N", "=", "self", ".", "_move", "(", "*", "n", ",", "d", ",", "grid", "[", "n", "[", "0", "]", "]", "[", "n", "[", "1", "]", "]", ")", "\n", "if", "N", "not", "in", "z", ":", "\n", "                        ", "q", "[", ":", "0", "]", "=", "[", "(", "N", ",", "path", "+", "[", "d", "]", ")", "]", "\n", "z", "[", "N", "]", "=", "1", "\n", "", "", "", "if", "n", "==", "end", ":", "\n", "                ", "break", "\n", "", "", "self", ".", "grid", "=", "np", ".", "array", "(", "grid", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "self", ".", "pos", "=", "start", "\n", "self", ".", "end", "=", "end", "\n", "self", ".", "solution", "=", "path", "\n", "\n", "if", "self", ".", "render_style", "==", "'mnist'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/mnist.csv'", ")", ",", "delimiter", "=", "','", ")", "\n", "self", ".", "targets", "=", "data", "[", ":", ",", "-", "1", "]", "\n", "self", ".", "images", "=", "1.", "-", "data", "[", ":", ",", ":", "-", "1", "]", ".", "reshape", "(", "-", "1", ",", "8", ",", "8", ",", "1", ")", ".", "astype", "(", "float", ")", "/", "16.", "\n", "self", ".", "texture", "=", "[", "self", ".", "images", "[", "list", "(", "np", ".", "where", "(", "self", ".", "targets", "==", "i", ")", "[", "0", "]", ")", "[", "0", "]", "]", "for", "i", "in", "range", "(", "7", ")", "]", "[", "1", ":", "]", "\n", "self", ".", "player_rgb", "=", "np", ".", "stack", "(", "[", "0.923", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", ",", "0.386", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", ",", "0.209", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "]", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "float", ")", "*", "255.", "\n", "self", ".", "non_player_rgb", "=", "np", ".", "stack", "(", "[", "0.56", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", ",", "0.692", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", ",", "0.195", "*", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", "]", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "float", ")", "*", "255.", "\n", "", "elif", "self", ".", "render_style", "==", "'grid_world'", ":", "\n", "            ", "self", ".", "player_rgb", "=", "np", ".", "pad", "(", "np", ".", "ones", "(", "(", "6", ",", "6", ")", ")", ",", "(", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", ".", "reshape", "(", "(", "8", ",", "8", ",", "1", ")", ")", ".", "astype", "(", "float", ")", "\n", "self", ".", "palette", "=", "[", "[", "132.", ",", "94.", ",", "194.", "]", ",", "[", "214.", ",", "93.", ",", "177.", "]", ",", "[", "255.", ",", "111.", ",", "145.", "]", ",", "[", "255.", ",", "150.", ",", "113.", "]", ",", "[", "255.", ",", "199.", ",", "95.", "]", ",", "[", "249.", ",", "248.", ",", "113.", "]", "]", "\n", "self", ".", "palette", "=", "[", "np", ".", "stack", "(", "[", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "p", ")", "]", "*", "8", ",", "axis", "=", "0", ")", "]", "*", "8", ",", "axis", "=", "0", ")", ".", "astype", "(", "float", ")", "for", "p", "in", "self", ".", "palette", "]", "\n", "", "elif", "self", ".", "render_style", "==", "'dice'", ":", "\n", "            ", "data", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/faces.csv'", ")", ",", "delimiter", "=", "','", ")", "\n", "images", "=", "data", ".", "reshape", "(", "(", "-", "1", ",", "8", ",", "8", ",", "1", ")", ")", ".", "astype", "(", "float", ")", "\n", "self", ".", "texture", "=", "[", "i", "for", "i", "in", "images", "]", "\n", "self", ".", "player_rgb", "=", "np", ".", "ones", "(", "(", "8", ",", "8", ",", "3", ")", ")", ".", "astype", "(", "float", ")", "*", "255.", "\n", "self", ".", "palette", "=", "[", "[", "132.", ",", "94.", ",", "194.", "]", ",", "[", "214.", ",", "93.", ",", "177.", "]", ",", "[", "255.", ",", "111.", ",", "145.", "]", ",", "[", "255.", ",", "150.", ",", "113.", "]", ",", "[", "255.", ",", "199.", ",", "95.", "]", ",", "[", "249.", ",", "248.", ",", "113.", "]", "]", "\n", "self", ".", "palette", "=", "[", "np", ".", "stack", "(", "[", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "p", ")", "]", "*", "8", ",", "axis", "=", "0", ")", "]", "*", "8", ",", "axis", "=", "0", ")", ".", "astype", "(", "float", ")", "for", "p", "in", "self", ".", "palette", "]", "\n", "", "elif", "self", ".", "render_style", "==", "'beta'", ":", "\n", "            ", "self", ".", "palette", "=", "[", "np", ".", "stack", "(", "[", "np", ".", "ones", "(", "(", "8", ",", "8", ")", ")", ",", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", ",", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", "]", ",", "axis", "=", "-", "1", ")", "*", "float", "(", "i", ")", "*", "(", "255.", "/", "6.", ")", "for", "i", "in", "range", "(", "7", ")", "]", "[", "1", ":", "]", "\n", "self", ".", "player_rgb", "=", "np", ".", "stack", "(", "[", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", ",", "np", ".", "pad", "(", "np", ".", "ones", "(", "(", "4", ",", "4", ")", ")", ",", "(", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", ",", "np", ".", "zeros", "(", "(", "8", ",", "8", ")", ")", "]", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "float", ")", "*", "255.", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown rendering mode.'", ")", "\n", "\n", "", "return", "self", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._step": [[70, 78], ["digit_jump.DigitJump._move", "digit_jump.DigitJump.render", "digit_jump.DigitJump.labels"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._move", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.labels"], ["", "def", "_step", "(", "self", ",", "a", ")", ":", "\n", "        ", "if", "a", "in", "self", ".", "action_space", "and", "a", "<", "4", ":", "\n", "            ", "self", ".", "pos", "=", "self", ".", "_move", "(", "*", "self", ".", "pos", ",", "a", ",", "self", ".", "grid", "[", "self", ".", "pos", "]", ")", "\n", "\n", "", "reward", ",", "done", "=", "(", "10.", ",", "True", ")", "if", "(", "self", ".", "pos", "==", "self", ".", "end", "and", "not", "self", ".", "already_solved", ")", "else", "(", "0", ",", "False", ")", "\n", "self", ".", "already_solved", "=", "True", "if", "self", ".", "pos", "==", "self", ".", "end", "else", "self", ".", "already_solved", "\n", "\n", "return", "self", ".", "render", "(", ")", ",", "reward", ",", "done", ",", "self", ".", "labels", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.digit_jump.DigitJump._get_image": [[79, 106], ["cv2.resize", "numpy.clip", "numpy.clip.astype", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "enumerate", "numpy.concatenate", "numpy.concatenate", "Exception", "enumerate", "numpy.concatenate", "enumerate", "enumerate", "numpy.concatenate", "enumerate", "enumerate", "enumerate", "enumerate"], "methods", ["None"], ["", "def", "_get_image", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "render_style", "==", "'mnist'", ":", "\n", "            ", "rgb", "=", "np", ".", "concatenate", "(", "[", "np", ".", "concatenate", "(", "[", "self", ".", "player_rgb", "*", "self", ".", "texture", "[", "el", "-", "1", "]", "if", "self", ".", "pos", "==", "(", "i", ",", "j", ")", "else", "self", ".", "non_player_rgb", "*", "self", ".", "texture", "[", "el", "-", "1", "]", "\n", "for", "j", ",", "el", "in", "enumerate", "(", "row", ")", "]", ",", "axis", "=", "1", ")", "for", "i", ",", "row", "in", "enumerate", "(", "self", ".", "grid", ")", "]", ",", "axis", "=", "0", ")", "\n", "", "elif", "self", ".", "render_style", "==", "'grid_world'", ":", "\n", "            ", "rgb", "=", "np", ".", "concatenate", "(", "[", "np", ".", "concatenate", "(", "[", "self", ".", "palette", "[", "el", "-", "1", "]", "*", "self", ".", "player_rgb", "if", "self", ".", "pos", "==", "(", "i", ",", "j", ")", "else", "self", ".", "palette", "[", "el", "-", "1", "]", "\n", "for", "j", ",", "el", "in", "enumerate", "(", "row", ")", "]", ",", "axis", "=", "1", ")", "for", "i", ",", "row", "in", "enumerate", "(", "self", ".", "grid", ")", "]", ",", "axis", "=", "0", ")", "\n", "", "elif", "self", ".", "render_style", "==", "'dice'", ":", "\n", "            ", "rgb", "=", "np", ".", "concatenate", "(", "[", "np", ".", "concatenate", "(", "[", "self", ".", "player_rgb", "*", "self", ".", "texture", "[", "el", "-", "1", "]", "if", "self", ".", "pos", "==", "(", "i", ",", "j", ")", "else", "self", ".", "palette", "[", "el", "-", "1", "]", "*", "self", ".", "texture", "[", "el", "-", "1", "]", "\n", "for", "j", ",", "el", "in", "enumerate", "(", "row", ")", "]", ",", "axis", "=", "1", ")", "for", "i", ",", "row", "in", "enumerate", "(", "self", ".", "grid", ")", "]", ",", "axis", "=", "0", ")", "\n", "'''\n            # Slightly faster (~10%) but more complex way\n            a = np.array(self.grid).reshape((-1, 1, 1)) - 1\n            b = tuple((p * t).reshape((1, -1, 3)) for p, t in zip(self.palette, self.texture))\n            rgb = np.choose(a, b)\n            rgb = rgb.reshape((self.size, self.size, 8, 8, 3))\n            rgb[self.pos] = self.player_rgb * self.texture[self.grid[self.pos]-1]\n            rgb = np.moveaxis(rgb, 2, 1).reshape((self.size*8, self.size*8, 3))\n            '''", "\n", "", "elif", "self", ".", "render_style", "==", "'beta'", ":", "\n", "            ", "rgb", "=", "np", ".", "concatenate", "(", "[", "np", ".", "concatenate", "(", "[", "self", ".", "player_rgb", "+", "self", ".", "palette", "[", "el", "-", "1", "]", "if", "self", ".", "pos", "==", "(", "i", ",", "j", ")", "else", "self", ".", "palette", "[", "el", "-", "1", "]", "\n", "for", "j", ",", "el", "in", "enumerate", "(", "row", ")", "]", ",", "axis", "=", "1", ")", "for", "i", ",", "row", "in", "enumerate", "(", "self", ".", "grid", ")", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown rendering mode.'", ")", "\n", "", "rescaled", "=", "cv2", ".", "resize", "(", "rgb", ",", "(", "64", ",", "64", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "render", "=", "np", ".", "clip", "(", "rescaled", ",", "0", ",", "255", ")", "\n", "return", "render", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.extract_trajectories.make_env": [[12, 18], ["ice_slider.IceSlider", "digit_jump.DigitJump"], "function", ["None"], ["def", "make_env", "(", "env_name", ",", "seed", ")", ":", "\n", "    ", "if", "env_name", "==", "'ice_slider'", ":", "\n", "        ", "return", "IceSlider", "(", "seed", "=", "seed", ")", "\n", "", "if", "env_name", "==", "'digit_jump'", ":", "\n", "        ", "return", "DigitJump", "(", "seed", "=", "seed", ")", "\n", "", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.extract_trajectories.extract": [[20, 55], ["os.makedirs", "range", "os.path.join", "numpy.save", "make_env.close", "range", "extract_trajectories.make_env", "make_env.reset", "observations.append", "print", "imageio.get_writer", "imageio.get_writer.append_data", "make_env.get_solution", "make_env.step", "observations.append", "acts.append", "rewards.append", "dones.append", "infos.append", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "os.path.join", "make_env.action_space.sample", "imageio.get_writer.append_data", "range", "str"], "function", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.close", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.extract_trajectories.make_env", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.reset", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.get_solution", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.step"], ["", "def", "extract", "(", "record_dir", ",", "number_levels", ",", "start_level", ",", "max_steps", ",", "verbose", ",", "env_name", ",", "n_repeat", ",", "random", ",", "**", "kwargs", ")", ":", "\n", "    ", "episodes_data", "=", "{", "}", "\n", "os", ".", "makedirs", "(", "record_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "for", "n", "in", "range", "(", "n_repeat", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "number_levels", ")", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "print", "(", "f'Running episode {i}.'", ")", "\n", "", "observations", ",", "acts", ",", "rewards", ",", "dones", ",", "infos", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "env", "=", "make_env", "(", "env_name", "=", "env_name", ",", "seed", "=", "start_level", "+", "i", ")", "\n", "obs", "=", "env", ".", "reset", "(", ")", "\n", "observations", ".", "append", "(", "obs", ")", "\n", "if", "i", "<", "N_RECORDS", ":", "\n", "                ", "movie_writer", "=", "imageio", ".", "get_writer", "(", "os", ".", "path", ".", "join", "(", "record_dir", ",", "f\"{i:03d}.mp4\"", ")", ",", "fps", "=", "15", ",", "quality", "=", "9", ")", "\n", "movie_writer", ".", "append_data", "(", "obs", ")", "\n", "\n", "", "actions", "=", "env", ".", "get_solution", "(", ")", "if", "not", "random", "else", "[", "env", ".", "action_space", ".", "sample", "(", ")", "for", "_", "in", "range", "(", "max_steps", ")", "]", "\n", "for", "act", "in", "actions", ":", "\n", "                ", "obs", ",", "rew", ",", "done", ",", "info", "=", "env", ".", "step", "(", "act", ")", "\n", "observations", ".", "append", "(", "obs", ")", "\n", "acts", ".", "append", "(", "act", ")", "\n", "rewards", ".", "append", "(", "rew", ")", "\n", "dones", ".", "append", "(", "done", ")", "\n", "infos", ".", "append", "(", "info", ")", "\n", "if", "i", "<", "N_RECORDS", ":", "\n", "                    ", "movie_writer", ".", "append_data", "(", "obs", ")", "\n", "\n", "", "", "episodes_data", "[", "str", "(", "start_level", "+", "i", ")", "+", "(", "f'-{n}'", "if", "random", "else", "''", ")", "]", "=", "{", "'obs'", ":", "np", ".", "asarray", "(", "observations", ")", ",", "\n", "'actions'", ":", "np", ".", "asarray", "(", "acts", ")", ",", "\n", "'rewards'", ":", "np", ".", "asarray", "(", "rewards", ")", ",", "\n", "'dones'", ":", "np", ".", "asarray", "(", "dones", ")", ",", "\n", "'seed'", ":", "start_level", "+", "i", "}", "\n", "", "", "filename", "=", "os", ".", "path", ".", "join", "(", "record_dir", ",", "f\"{env_name}-{'random' if random else 'expert'}-max{max_steps}-{start_level}+{number_levels}x{n_repeat}.npy\"", ")", "\n", "np", ".", "save", "(", "filename", ",", "episodes_data", ",", "allow_pickle", "=", "True", ")", "\n", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.extract_trajectories.main": [[57, 72], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "dict", "extract_trajectories.extract", "vars"], "function", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.extract_trajectories.extract"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--record-dir\"", ",", "required", "=", "True", ",", "help", "=", "\"directory to record movies to\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--env-name\"", ",", "default", "=", "\"ice_slider\"", ",", "help", "=", "\"name of game to create\"", ",", "choices", "=", "[", "'ice_slider'", ",", "'digit_jump'", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--start-level\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"select an individual level to use\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--number-levels\"", ",", "default", "=", "10", ",", "type", "=", "int", ",", "help", "=", "\"number of levels to play (unrelated from seeds)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max-steps\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "\"maximum steps per episode\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--n-repeat\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"repeats the procedure n times\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--random\"", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"uses random vs expert agent\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--verbose\"", ",", "default", "=", "True", ",", "help", "=", "\"increase output verbosity\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "kwargs", "=", "dict", "(", "num_envs", "=", "1", ",", "**", "vars", "(", "args", ")", ")", "\n", "extract", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider.__init__": [[11, 28], ["base.PuzzleEnv.__init__", "imageio.imread", "imageio.imread", "imageio.imread", "imageio.imread", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "Exception", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.abspath", "os.path.abspath", "os.path.abspath", "os.path.abspath"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ice_density", "=", "4", ",", "easy", "=", "False", ",", "render_style", "=", "'human'", ",", "min_sol_len", "=", "8", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "IceSlider", ",", "self", ")", ".", "__init__", "(", "render_style", "=", "render_style", ",", "min_sol_len", "=", "min_sol_len", ",", "**", "kwargs", ")", "\n", "self", ".", "easy", "=", "easy", "\n", "self", ".", "ice_density", "=", "ice_density", "\n", "\n", "if", "self", ".", "render_style", "==", "'human'", ":", "\n", "            ", "self", ".", "rock_rgb", "=", "imageio", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/rock.png'", ")", ")", "\n", "self", ".", "ice_rgb", "=", "imageio", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/ice.png'", ")", ")", "\n", "self", ".", "player_rgb", "=", "imageio", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/player.png'", ")", ")", "\n", "self", ".", "goal_rgb", "=", "imageio", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", ",", "'data/goal.png'", ")", ")", "\n", "", "elif", "self", ".", "render_style", "==", "'grid_world'", ":", "\n", "            ", "self", ".", "rock_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "255.", ",", "0.", ",", "0.", "]", "]", "]", ")", "\n", "self", ".", "ice_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "255.", ",", "255.", ",", "255.", "]", "]", "]", ")", "\n", "self", ".", "player_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "0.", ",", "255.", ",", "0.", "]", "]", "]", ")", "\n", "self", ".", "goal_rgb", "=", "np", ".", "array", "(", "[", "[", "[", "0.", ",", "0.", ",", "255.", "]", "]", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown rendering mode.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._can_go": [[29, 32], ["None"], "methods", ["None"], ["", "", "def", "_can_go", "(", "self", ",", "r", ",", "c", ",", "grid", ")", ":", "\n", "        ", "is_valid", "=", "(", "0", "<=", "r", "<", "self", ".", "size", ")", "and", "(", "0", "<=", "c", "<", "self", ".", "size", ")", "\n", "return", "is_valid", "and", "grid", "[", "r", "]", "[", "c", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._slide": [[33, 37], ["ice_slider.IceSlider._slide", "ice_slider.IceSlider._can_go"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._slide", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._can_go"], ["", "def", "_slide", "(", "self", ",", "r", ",", "c", ",", "grid", ",", "d", ")", ":", "\n", "        ", "if", "not", "self", ".", "_can_go", "(", "r", "+", "self", ".", "y", "[", "d", "]", ",", "c", "+", "self", ".", "x", "[", "d", "]", ",", "grid", ")", ":", "\n", "            ", "return", "r", ",", "c", "\n", "", "return", "self", ".", "_slide", "(", "r", "+", "self", ".", "y", "[", "d", "]", ",", "c", "+", "self", ".", "x", "[", "d", "]", ",", "grid", ",", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._create_level": [[38, 92], ["range", "ice_slider.IceSlider.rng.randint", "ice_slider.IceSlider.rng.randint", "q.pop", "range", "ice_slider.IceSlider.rng.randint", "range", "ice_slider.IceSlider._slide", "len", "networkx.MultiDiGraph", "range", "node_id.keys", "networkx.MultiDiGraph.add_nodes_from", "networkx.MultiDiGraph.add_edges_from", "networkx.condensation", "ice_slider.IceSlider._create_level.hard_enough"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._slide"], ["", "def", "_create_level", "(", "self", ")", ":", "\n", "\n", "        ", "for", "_", "in", "range", "(", "self", ".", "max_tries", ")", ":", "\n", "            ", "start", "=", "(", "0", ",", "self", ".", "rng", ".", "randint", "(", "0", ",", "self", ".", "size", "-", "1", ")", ")", "\n", "end", "=", "(", "self", ".", "size", "-", "1", ",", "self", ".", "rng", ".", "randint", "(", "0", ",", "self", ".", "size", "-", "1", ")", ")", "\n", "grid", "=", "[", "[", "self", ".", "rng", ".", "randint", "(", "0", ",", "self", ".", "ice_density", ")", "for", "_", "in", "range", "(", "self", ".", "size", ")", "]", "for", "_", "in", "range", "(", "self", ".", "size", ")", "]", "\n", "grid", "[", "0", "]", "[", "start", "[", "1", "]", "]", "=", "1", "\n", "grid", "[", "self", ".", "size", "-", "1", "]", "[", "end", "[", "1", "]", "]", "=", "1", "\n", "q", "=", "[", "(", "start", ",", "[", "]", ")", "]", "\n", "n", "=", "start", "\n", "z", "=", "{", "}", "\n", "while", "q", "and", "n", "!=", "end", ":", "\n", "                ", "n", ",", "path", "=", "q", ".", "pop", "(", ")", "\n", "for", "d", "in", "range", "(", "4", ")", ":", "\n", "                    ", "N", "=", "self", ".", "_slide", "(", "*", "n", ",", "grid", ",", "d", ")", "\n", "if", "self", ".", "_can_go", "(", "n", "[", "0", "]", "+", "self", ".", "y", "[", "d", "]", ",", "n", "[", "1", "]", "+", "self", ".", "x", "[", "d", "]", ",", "grid", ")", "and", "N", "not", "in", "z", ":", "\n", "                        ", "q", "[", ":", "0", "]", "=", "[", "(", "N", ",", "path", "+", "[", "d", "]", ")", "]", "\n", "z", "[", "N", "]", "=", "1", "\n", "\n", "", "", "", "if", "(", "n", "==", "end", ")", "*", "len", "(", "path", ")", ">", "self", ".", "min_sol_len", ":", "\n", "                ", "if", "self", ".", "easy", ":", "\n", "                    ", "break", "\n", "", "else", ":", "\n", "# the shortest solution is longer than required, now we check that you can get stuck", "\n", "# a strongly connected component is reachable from the start, but not connected to the end", "\n", "                    ", "g", "=", "nx", ".", "MultiDiGraph", "(", ")", "\n", "count", "=", "0", "\n", "node_id", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "size", ")", ":", "\n", "                        ", "for", "j", "in", "range", "(", "self", ".", "size", ")", ":", "\n", "                            ", "if", "grid", "[", "i", "]", "[", "j", "]", ":", "\n", "                                ", "node_id", "[", "(", "i", ",", "j", ")", "]", "=", "count", "\n", "count", "+=", "1", "\n", "", "", "", "edges", "=", "[", "]", "\n", "for", "pos", "in", "node_id", ".", "keys", "(", ")", ":", "\n", "                        ", "for", "d", "in", "range", "(", "4", ")", ":", "\n", "                            ", "edges", ".", "append", "(", "(", "node_id", "[", "pos", "]", ",", "node_id", "[", "self", ".", "_slide", "(", "*", "pos", ",", "grid", ",", "d", ")", "]", ")", ")", "\n", "", "", "g", ".", "add_nodes_from", "(", "np", ".", "arange", "(", "count", ")", ")", "\n", "g", ".", "add_edges_from", "(", "edges", ")", "\n", "c", "=", "nx", ".", "condensation", "(", "g", ")", "\n", "\n", "def", "hard_enough", "(", "c", ",", "start", ",", "target", ")", ":", "\n", "                        ", "for", "n", "in", "c", ".", "nodes", ":", "\n", "                            ", "if", "nx", ".", "has_path", "(", "c", ",", "start", ",", "n", ")", "and", "not", "nx", ".", "has_path", "(", "c", ",", "n", ",", "target", ")", ":", "\n", "                                ", "return", "True", "\n", "", "", "return", "False", "\n", "\n", "", "if", "hard_enough", "(", "c", ",", "c", ".", "graph", "[", "'mapping'", "]", "[", "node_id", "[", "start", "]", "]", ",", "c", ".", "graph", "[", "'mapping'", "]", "[", "node_id", "[", "end", "]", "]", ")", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "self", ".", "grid", "=", "(", "np", ".", "array", "(", "grid", ")", "!=", "0", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "self", ".", "pos", "=", "start", "\n", "self", ".", "end", "=", "end", "\n", "self", ".", "solution", "=", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._reset": [[93, 96], ["ice_slider.IceSlider._create_level", "ice_slider.IceSlider.render"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._create_level", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render"], ["", "def", "_reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_create_level", "(", ")", "\n", "return", "self", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._step": [[97, 105], ["ice_slider.IceSlider._slide", "ice_slider.IceSlider.render", "ice_slider.IceSlider.labels"], "methods", ["home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._slide", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.render", "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.base.PuzzleEnv.labels"], ["", "def", "_step", "(", "self", ",", "a", ")", ":", "\n", "        ", "if", "a", "in", "self", ".", "action_space", "and", "a", "<", "4", ":", "\n", "            ", "self", ".", "pos", "=", "self", ".", "_slide", "(", "*", "self", ".", "pos", ",", "self", ".", "grid", ",", "a", ")", "\n", "\n", "", "reward", ",", "done", "=", "(", "10.", ",", "True", ")", "if", "(", "self", ".", "pos", "==", "self", ".", "end", "and", "not", "self", ".", "already_solved", ")", "else", "(", "0", ",", "False", ")", "\n", "self", ".", "already_solved", "=", "True", "if", "self", ".", "pos", "==", "self", ".", "end", "else", "self", ".", "already_solved", "\n", "\n", "return", "self", ".", "render", "(", ")", ",", "reward", ",", "done", ",", "self", ".", "labels", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.martius-lab_puzzlegen.puzzlegen.ice_slider.IceSlider._get_image": [[106, 112], ["numpy.concatenate", "cv2.resize", "numpy.clip", "numpy.clip.astype", "numpy.concatenate", "enumerate", "enumerate"], "methods", ["None"], ["", "def", "_get_image", "(", "self", ")", ":", "\n", "        ", "rgb", "=", "np", ".", "concatenate", "(", "[", "np", ".", "concatenate", "(", "[", "self", ".", "rock_rgb", "if", "not", "el", "else", "(", "self", ".", "player_rgb", "if", "self", ".", "pos", "==", "(", "i", ",", "j", ")", "else", "(", "self", ".", "goal_rgb", "if", "self", ".", "end", "==", "(", "i", ",", "j", ")", "else", "self", ".", "ice_rgb", ")", ")", "\n", "for", "j", ",", "el", "in", "enumerate", "(", "row", ")", "]", ",", "axis", "=", "1", ")", "for", "i", ",", "row", "in", "enumerate", "(", "self", ".", "grid", ")", "]", ",", "axis", "=", "0", ")", "\n", "rescaled", "=", "cv2", ".", "resize", "(", "rgb", ",", "(", "64", ",", "64", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "render", "=", "np", ".", "clip", "(", "rescaled", ",", "0", ",", "255", ")", "\n", "return", "render", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "", ""]]}