{"home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_wp_db.build_wp_database": [[22, 35], ["db.execute", "sum", "tqdm.tqdm", "db.execute", "open", "line.split", "wordfreq.tokenize", "text.rstrip", "build_wp_db.add_entry", "open"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_wp_db.add_entry"], ["def", "build_wp_database", "(", "db", ",", "filename", ")", ":", "\n", "    ", "db", ".", "execute", "(", "\"DROP TABLE IF EXISTS words\"", ")", "\n", "with", "db", "as", "_transaction", ":", "\n", "        ", "for", "statement", "in", "SCHEMA", ":", "\n", "            ", "db", ".", "execute", "(", "statement", ")", "\n", "\n", "", "", "with", "db", "as", "_transaction", ":", "\n", "        ", "num_lines", "=", "sum", "(", "1", "for", "line", "in", "open", "(", "filename", ")", ")", "\n", "for", "line", "in", "tqdm", "(", "open", "(", "filename", ")", ",", "total", "=", "num_lines", ")", ":", "\n", "            ", "title", ",", "text", "=", "line", ".", "split", "(", "'\\t'", ",", "1", ")", "\n", "words", "=", "wordfreq", ".", "tokenize", "(", "text", ".", "rstrip", "(", ")", ",", "'en'", ")", "\n", "for", "word", "in", "words", ":", "\n", "                ", "add_entry", "(", "db", ",", "title", ",", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_wp_db.add_entry": [[37, 44], ["conceptnet5.language.english.LEMMATIZER.lookup", "title.lower().split", "db.execute", "wordfreq.zipf_frequency", "wordfreq.zipf_frequency", "title.lower"], "function", ["None"], ["", "", "", "", "def", "add_entry", "(", "db", ",", "title", ",", "word", ")", ":", "\n", "    ", "lemma", "=", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "word", ")", "[", "0", "]", "\n", "title", "=", "title", ".", "lower", "(", ")", ".", "split", "(", "\" (\"", ")", "[", "0", "]", "\n", "if", "wordfreq", ".", "zipf_frequency", "(", "lemma", ",", "'en'", ")", "<", "6", "and", "wordfreq", ".", "zipf_frequency", "(", "word", ",", "'en'", ")", "<", "6", ":", "\n", "        ", "db", ".", "execute", "(", "\n", "\"INSERT OR IGNORE INTO words (page, word, lemma) VALUES (?, ?, ?)\"", ",", "\n", "(", "title", ",", "word", ",", "lemma", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_phrases_db.build_phrases_database": [[38, 57], ["db.execute", "db.execute", "tqdm.tqdm", "tqdm.tqdm", "db.execute", "gzip.open", "line.lower().split", "int", "build_phrases_db.add_word", "gzip.open", "line.lower().split", "phrase.split", "int", "build_phrases_db.add_phrase", "line.lower", "line.lower"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_phrases_db.add_word", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_phrases_db.add_phrase"], ["def", "build_phrases_database", "(", "db", ",", "filename_1grams", ",", "filename_2grams", ")", ":", "\n", "    ", "db", ".", "execute", "(", "\"DROP TABLE IF EXISTS phrases\"", ")", "\n", "db", ".", "execute", "(", "\"DROP TABLE IF EXISTS words\"", ")", "\n", "with", "db", "as", "_transaction", ":", "\n", "        ", "for", "statement", "in", "SCHEMA", ":", "\n", "            ", "db", ".", "execute", "(", "statement", ")", "\n", "\n", "", "", "with", "db", "as", "_transaction", ":", "\n", "        ", "for", "line", "in", "tqdm", "(", "gzip", ".", "open", "(", "filename_1grams", ",", "'rt'", ")", ",", "desc", "=", "'1grams'", ")", ":", "\n", "            ", "word", ",", "count", "=", "line", ".", "lower", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "count", "=", "int", "(", "count", ")", "\n", "add_word", "(", "db", ",", "word", ",", "count", ")", "\n", "\n", "", "for", "line", "in", "tqdm", "(", "gzip", ".", "open", "(", "filename_2grams", ",", "'rt'", ")", ",", "desc", "=", "'2grams'", ")", ":", "\n", "            ", "phrase", ",", "count", "=", "line", ".", "lower", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "if", "' '", "in", "phrase", ":", "\n", "                ", "first_word", ",", "second_word", "=", "phrase", ".", "split", "(", "' '", ")", "\n", "count", "=", "int", "(", "count", ")", "\n", "add_phrase", "(", "db", ",", "phrase", ",", "first_word", ",", "second_word", ",", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_phrases_db.add_word": [[59, 66], ["db.execute", "conceptnet5.language.english.LEMMATIZER.lookup"], "function", ["None"], ["", "", "", "", "def", "add_word", "(", "db", ",", "word", ",", "count", ")", ":", "\n", "    ", "lemma", "=", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "word", ")", "[", "0", "]", "\n", "\n", "db", ".", "execute", "(", "\n", "\"INSERT OR IGNORE INTO words (word, count, lemma) \"", "\n", "\"VALUES (?, ?, ?)\"", ",", "\n", "(", "word", ",", "count", ",", "lemma", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.scripts.build_phrases_db.add_phrase": [[69, 77], ["db.execute", "conceptnet5.language.english.LEMMATIZER.lookup", "conceptnet5.language.english.LEMMATIZER.lookup"], "function", ["None"], ["", "def", "add_phrase", "(", "db", ",", "phrase", ",", "first_word", ",", "second_word", ",", "count", ")", ":", "\n", "    ", "first_lemma", "=", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "first_word", ")", "[", "0", "]", "\n", "second_lemma", "=", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "second_word", ")", "[", "0", "]", "\n", "\n", "db", ".", "execute", "(", "\n", "\"INSERT OR IGNORE INTO phrases (phrase, first_word, second_word, count, \"", "\n", "\"first_lemma, second_lemma) VALUES (?, ?, ?, ?, ?, ?)\"", ",", "\n", "(", "phrase", ",", "first_word", ",", "second_word", ",", "count", ",", "first_lemma", ",", "second_lemma", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.__init__": [[8, 28], ["pathlib.Path", "conceptnet5.vectors.formats.load_hdf", "conceptnet5.vectors.formats.load_hdf", "numpy.load", "str", "str", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dirname", ")", ":", "\n", "        ", "\"\"\"\n        Load the files exported from a model trained with ConceptNet's\n        implementation of Semantic Matching Energy.\n\n        `terms-similar.h5` is the (|V| x 300) matrix of term embeddings. (It's\n        named that because using the embeddings directly, instead of operating\n        on them with a relation, is meant to represent the SimilarTo relation.)\n\n        `relations.h5` is the (24 x 10) matrix of relation embeddings.\n\n        `assoc.npy` is a 3-tensor with shape (10 x 300 x 300), which relates\n        two term embeddings and a relation embedding. Multiplying two vectors\n        by this tensor in the appropriate dimensions gives you a prediction for\n        the third vector.\n        \"\"\"", "\n", "path", "=", "pathlib", ".", "Path", "(", "dirname", ")", "\n", "self", ".", "rel_embeddings", "=", "load_hdf", "(", "str", "(", "path", "/", "'relations.h5'", ")", ")", "\n", "self", ".", "term_embeddings", "=", "load_hdf", "(", "str", "(", "path", "/", "'terms-similar.h5'", ")", ")", "\n", "self", ".", "assoc_tensor", "=", "np", ".", "load", "(", "str", "(", "path", "/", "'assoc.npy'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_relations_forward": [[29, 43], ["numpy.einsum", "standalone_sme.StandaloneSMEModel.rel_embeddings.dot"], "methods", ["None"], ["", "def", "predict_relations_forward", "(", "self", ",", "term1", ",", "term2", ")", ":", "\n", "        ", "\"\"\"\n        Given two terms (which are in ConceptNet URI form and in the\n        vocabulary), predict the relations between them (in the direction\n        from term1 to term2).\n        \"\"\"", "\n", "vec1", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term1", "]", "\n", "vec2", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term2", "]", "\n", "rel_vec", "=", "np", ".", "einsum", "(", "\n", "'ijk,j,k->i'", ",", "\n", "self", ".", "assoc_tensor", ",", "vec1", ",", "vec2", "\n", ")", "\n", "rels", "=", "self", ".", "rel_embeddings", ".", "dot", "(", "rel_vec", ")", "\n", "return", "rels", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_relations_backward": [[44, 58], ["numpy.einsum", "standalone_sme.StandaloneSMEModel.rel_embeddings.dot"], "methods", ["None"], ["", "def", "predict_relations_backward", "(", "self", ",", "term1", ",", "term2", ")", ":", "\n", "        ", "\"\"\"\n        Given two terms (which are in ConceptNet URI form and in the\n        vocabulary), predict the relations between them (in the direction\n        from term2 to term1).\n        \"\"\"", "\n", "vec1", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term1", "]", "\n", "vec2", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term2", "]", "\n", "rel_vec", "=", "np", ".", "einsum", "(", "\n", "'ijk,j,k->i'", ",", "\n", "self", ".", "assoc_tensor", ",", "vec2", ",", "vec1", "\n", ")", "\n", "rels", "=", "self", ".", "rel_embeddings", ".", "dot", "(", "rel_vec", ")", "\n", "return", "rels", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_discriminative_relations": [[59, 74], ["standalone_sme.StandaloneSMEModel.predict_relations_forward", "standalone_sme.StandaloneSMEModel.predict_relations_backward", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_relations_forward", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_relations_backward"], ["", "def", "predict_discriminative_relations", "(", "self", ",", "term1", ",", "term2", ")", ":", "\n", "        ", "forward", "=", "self", ".", "predict_relations_forward", "(", "term1", ",", "term2", ")", "\n", "backward", "=", "self", ".", "predict_relations_backward", "(", "term1", ",", "term2", ")", "\n", "return", "np", ".", "array", "(", "[", "\n", "forward", ".", "loc", "[", "'/r/RelatedTo'", "]", "+", "backward", ".", "loc", "[", "'/r/RelatedTo'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/IsA'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/HasA'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/PartOf'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/CapableOf'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/UsedFor'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/HasContext'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/HasProperty'", "]", ",", "\n", "forward", ".", "loc", "[", "'/r/AtLocation'", "]", ",", "\n", "backward", ".", "loc", "[", "'/r/PartOf'", "]", ",", "\n", "backward", ".", "loc", "[", "'/r/AtLocation'", "]", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_terms_forward": [[76, 89], ["numpy.einsum", "standalone_sme.StandaloneSMEModel.term_embeddings.dot"], "methods", ["None"], ["", "def", "predict_terms_forward", "(", "self", ",", "rel", ",", "term", ")", ":", "\n", "        ", "\"\"\"\n        Given a relation and a term on the left side of it, predict terms\n        on the right side of it.\n        \"\"\"", "\n", "term1_vec", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term", "]", "\n", "rel_vec", "=", "self", ".", "rel_embeddings", ".", "loc", "[", "rel", "]", "\n", "\n", "term2_vec", "=", "np", ".", "einsum", "(", "\n", "'ijk,i,j->k'", ",", "\n", "self", ".", "assoc_tensor", ",", "rel_vec", ",", "term1_vec", "\n", ")", "\n", "return", "self", ".", "term_embeddings", ".", "dot", "(", "term2_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_terms_backward": [[90, 103], ["numpy.einsum", "standalone_sme.StandaloneSMEModel.term_embeddings.dot"], "methods", ["None"], ["", "def", "predict_terms_backward", "(", "self", ",", "rel", ",", "term", ")", ":", "\n", "        ", "\"\"\"\n        Given a relation and a term on the right side of it, predict terms\n        on the left side of it.\n        \"\"\"", "\n", "term2_vec", "=", "self", ".", "term_embeddings", ".", "loc", "[", "term", "]", "\n", "rel_vec", "=", "self", ".", "rel_embeddings", ".", "loc", "[", "rel", "]", "\n", "\n", "term1_vec", "=", "np", ".", "einsum", "(", "\n", "'ijk,i,->j'", ",", "\n", "self", ".", "assoc_tensor", ",", "rel_vec", ",", "term2_vec", "\n", ")", "\n", "return", "self", ".", "term_embeddings", ".", "dot", "(", "term1_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.__contains__": [[104, 106], ["None"], "methods", ["None"], ["", "def", "__contains__", "(", "self", ",", "term", ")", ":", "\n", "        ", "return", "term", "in", "self", ".", "term_embeddings", ".", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.num_rels": [[107, 109], ["None"], "methods", ["None"], ["", "def", "num_rels", "(", "self", ")", ":", "\n", "        ", "return", "11", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.phrase_count": [[4, 10], ["db.cursor", "db.cursor.execute", "db.cursor.fetchall", "sum"], "function", ["None"], ["def", "phrase_count", "(", "db", ",", "lemma_word", ",", "lemma_attribute", ")", ":", "\n", "    ", "c", "=", "db", ".", "cursor", "(", ")", "\n", "c", ".", "execute", "(", "\"SELECT count FROM phrases WHERE (first_lemma=? AND second_lemma=?) OR (first_lemma=? \"", "\n", "\"AND second_lemma=?)\"", ",", "(", "lemma_word", ",", "lemma_attribute", ",", "lemma_attribute", ",", "lemma_word", ")", ")", "\n", "results", "=", "c", ".", "fetchall", "(", ")", "\n", "return", "sum", "(", "[", "result", "[", "0", "]", "for", "result", "in", "results", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.word_count": [[12, 20], ["db.cursor", "db.cursor.execute", "db.cursor.fetchall", "sum"], "function", ["None"], ["", "def", "word_count", "(", "db", ",", "lemma_word", ")", ":", "\n", "    ", "c", "=", "db", ".", "cursor", "(", ")", "\n", "c", ".", "execute", "(", "\n", "\"SELECT count FROM words WHERE lemma=?\"", ",", "\n", "(", "lemma_word", ",", ")", "\n", ")", "\n", "results", "=", "c", ".", "fetchall", "(", ")", "\n", "return", "sum", "(", "[", "result", "[", "0", "]", "for", "result", "in", "results", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.phrase_weight": [[22, 27], ["math.log10", "phrases.word_count", "phrases.phrase_count", "phrases.word_count"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.word_count", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.phrase_count", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.word_count"], ["", "def", "phrase_weight", "(", "db", ",", "lemma_word", ",", "lemma_attribute", ")", ":", "\n", "    ", "return", "10", "+", "math", ".", "log10", "(", "\n", "(", "phrase_count", "(", "db", ",", "lemma_word", ",", "lemma_attribute", ")", "+", "1", ")", "/", "\n", "(", "word_count", "(", "db", ",", "lemma_word", ")", "+", "100000", ")", "/", "\n", "(", "word_count", "(", "db", ",", "lemma_attribute", ")", "+", "100000", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1": [[23, 26], ["conceptnet5.nodes.standardized_concept_uri"], "methods", ["None"], ["def", "node1", "(", "self", ")", ":", "\n", "        ", "\"Get word1 as a ConceptNet URI.\"", "\n", "return", "standardized_concept_uri", "(", "'en'", ",", "self", ".", "word1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2": [[27, 30], ["conceptnet5.nodes.standardized_concept_uri"], "methods", ["None"], ["", "def", "node2", "(", "self", ")", ":", "\n", "        ", "\"Get word2 as a ConceptNet URI.\"", "\n", "return", "standardized_concept_uri", "(", "'en'", ",", "self", ".", "word2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node": [[31, 34], ["conceptnet5.nodes.standardized_concept_uri"], "methods", ["None"], ["", "def", "att_node", "(", "self", ")", ":", "\n", "        ", "\"Get the attribute as a ConceptNet URI.\"", "\n", "return", "standardized_concept_uri", "(", "'en'", ",", "self", ".", "attribute", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma1": [[35, 37], ["conceptnet5.language.english.LEMMATIZER.lookup"], "methods", ["None"], ["", "def", "lemma1", "(", "self", ")", ":", "\n", "        ", "return", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "self", ".", "word1", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma2": [[38, 40], ["conceptnet5.language.english.LEMMATIZER.lookup"], "methods", ["None"], ["", "def", "lemma2", "(", "self", ")", ":", "\n", "        ", "return", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "self", ".", "word2", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma_att": [[41, 43], ["conceptnet5.language.english.LEMMATIZER.lookup"], "methods", ["None"], ["", "def", "lemma_att", "(", "self", ")", ":", "\n", "        ", "return", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "self", ".", "attribute", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_semeval_data_filename": [[45, 52], ["pkg_resources.resource_filename", "os.path.join"], "function", ["None"], ["", "", "def", "get_semeval_data_filename", "(", "filename", ")", ":", "\n", "    ", "\"\"\"\n    Get a valid path referring to a given filename in the `semeval-data`\n    subdirectory of the package.\n    \"\"\"", "\n", "return", "pkg_resources", ".", "resource_filename", "(", "\n", "'discriminatt'", ",", "os", ".", "path", ".", "join", "(", "'semeval-data'", ",", "filename", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename": [[55, 62], ["pkg_resources.resource_filename", "os.path.join"], "function", ["None"], ["", "def", "get_external_data_filename", "(", "filename", ")", ":", "\n", "    ", "\"\"\"\n    Get a valid path referring to a given filename in the `more-data`\n    subdirectory of the package.\n    \"\"\"", "\n", "return", "pkg_resources", ".", "resource_filename", "(", "\n", "'discriminatt'", ",", "os", ".", "path", ".", "join", "(", "'more-data'", ",", "filename", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_result_filename": [[65, 72], ["pkg_resources.resource_filename", "os.path.join"], "function", ["None"], ["", "def", "get_result_filename", "(", "filename", ")", ":", "\n", "    ", "\"\"\"\n    Get a valid path referring to a given filename in the `results`\n    subdirectory of the package.\n    \"\"\"", "\n", "return", "pkg_resources", ".", "resource_filename", "(", "\n", "'discriminatt'", ",", "os", ".", "path", ".", "join", "(", "'results'", ",", "filename", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_semeval_data": [[75, 88], ["data.get_semeval_data_filename", "open", "line.rstrip().split", "bool", "examples.append", "int", "data.AttributeExample", "line.rstrip"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_semeval_data_filename"], ["", "def", "read_semeval_data", "(", "name", ")", ":", "\n", "    ", "\"\"\"\n    Read the list of examples from one of the included data files.\n\n    Example: read_semeval_data('training/train.txt')\n    \"\"\"", "\n", "filename", "=", "get_semeval_data_filename", "(", "name", ")", "\n", "examples", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ",", "encoding", "=", "'utf-8'", ")", ":", "\n", "        ", "word1", ",", "word2", ",", "attribute", ",", "strval", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "','", ")", "\n", "discriminative", "=", "bool", "(", "int", "(", "strval", ")", ")", "\n", "examples", ".", "append", "(", "AttributeExample", "(", "word1", ",", "word2", ",", "attribute", ",", "discriminative", ")", ")", "\n", "", "return", "examples", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_blind_semeval_data": [[90, 103], ["data.get_semeval_data_filename", "open", "line.rstrip().split", "examples.append", "data.AttributeExample", "line.rstrip"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_semeval_data_filename"], ["", "def", "read_blind_semeval_data", "(", "name", ")", ":", "\n", "    ", "\"\"\"\n    Read the list of examples from the test file, which does not contain the\n    correct answers.\n\n    Example: read_semeval_data('test/test_triples.txt')\n    \"\"\"", "\n", "filename", "=", "get_semeval_data_filename", "(", "name", ")", "\n", "examples", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ",", "encoding", "=", "'utf-8'", ")", ":", "\n", "        ", "word1", ",", "word2", ",", "attribute", "=", "line", ".", "rstrip", "(", ")", ".", "split", "(", "','", ")", "\n", "examples", ".", "append", "(", "AttributeExample", "(", "word1", ",", "word2", ",", "attribute", ",", "None", ")", ")", "\n", "", "return", "examples", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_search_queries": [[105, 127], ["collections.defaultdict", "range", "data.get_external_data_filename", "open", "enumerate", "query.split", "line.split", "len", "queries_index[].append"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename"], ["", "def", "read_search_queries", "(", ")", ":", "\n", "    ", "\"\"\"\n    Read AOL Query Logs and construct an index mapping a word to each document in which it appeared.\n    \"\"\"", "\n", "queries_index", "=", "defaultdict", "(", "list", ")", "\n", "offset", "=", "0", "\n", "for", "number", "in", "range", "(", "1", ",", "11", ")", ":", "\n", "        ", "filename", "=", "get_external_data_filename", "(", "'user-ct-test-collection-{0:02d}.txt'", ".", "format", "(", "number", ")", ")", "\n", "doc_number", "=", "0", "\n", "with", "open", "(", "filename", ",", "encoding", "=", "'utf-8'", ")", "as", "input_file", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "input_file", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "# skip the header line", "\n", "                    ", "continue", "\n", "", "query", "=", "line", ".", "split", "(", "'\\t'", ")", "[", "1", "]", "\n", "words", "=", "query", ".", "split", "(", ")", "\n", "if", "len", "(", "words", ")", "==", "1", ":", "\n", "                    ", "continue", "\n", "", "for", "word", "in", "words", ":", "\n", "                    ", "queries_index", "[", "word", "]", ".", "append", "(", "i", "+", "offset", ")", "\n", "", "doc_number", "=", "i", "\n", "", "offset", "+=", "doc_number", "\n", "", "", "return", "queries_index", "\n", "", ""]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_adjacent": [[9, 15], ["synset._pointers.values", "get_synset().lemma_names", "get_synset"], "function", ["None"], ["def", "get_adjacent", "(", "synset", ")", ":", "\n", "    ", "return", "[", "\n", "name", "\n", "for", "pointer_tuples", "in", "synset", ".", "_pointers", ".", "values", "(", ")", "\n", "for", "pos", ",", "offset", "in", "pointer_tuples", "\n", "for", "name", "in", "get_synset", "(", "pos", ",", "offset", ")", ".", "lemma_names", "(", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_reasonable_synsets": [[18, 32], ["nltk.corpus.wordnet.lemmas", "conceptnet5.language.english.LEMMATIZER.lookup", "nltk.corpus.wordnet.lemmas", "lem.synset", "good_synsets.append", "lem.synset", "lem.synset.lemma_names"], "function", ["None"], ["", "def", "get_reasonable_synsets", "(", "word", ")", ":", "\n", "    ", "lemmas", "=", "wordnet", ".", "lemmas", "(", "word", ")", "\n", "cnet_lemma", ",", "_pos", "=", "LEMMATIZER", ".", "lookup", "(", "'en'", ",", "word", ")", "\n", "if", "cnet_lemma", "!=", "word", ":", "\n", "        ", "lemmas", "+=", "wordnet", ".", "lemmas", "(", "cnet_lemma", ")", "\n", "", "good_synsets", "=", "[", "]", "\n", "for", "lem", "in", "lemmas", ":", "\n", "        ", "syn", "=", "lem", ".", "synset", "(", ")", "\n", "if", "syn", ".", "lemma_names", "(", ")", "[", "0", "]", "==", "word", ":", "\n", "            ", "good_synsets", ".", "append", "(", "syn", ")", "\n", "", "", "if", "not", "good_synsets", ":", "\n", "        ", "return", "[", "lem", ".", "synset", "(", ")", "for", "lem", "in", "lemmas", "]", "\n", "", "else", ":", "\n", "        ", "return", "good_synsets", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_wordnet_entries": [[34, 47], ["word.lower.lower", "wordnet.get_reasonable_synsets", "results.append", "lem.replace", "syn.definition", "syn.examples", "wordnet.get_adjacent"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_reasonable_synsets", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_adjacent"], ["", "", "def", "get_wordnet_entries", "(", "word", ")", ":", "\n", "    ", "word", "=", "word", ".", "lower", "(", ")", "\n", "synsets", "=", "get_reasonable_synsets", "(", "word", ")", "\n", "results", "=", "[", "]", "\n", "for", "syn", "in", "synsets", ":", "\n", "        ", "related", "=", "[", "lem", ".", "replace", "(", "'_'", ",", "' '", ")", "for", "lem", "in", "get_adjacent", "(", "syn", ")", "]", "\n", "info", "=", "{", "\n", "'related'", ":", "related", ",", "\n", "'definition'", ":", "syn", ".", "definition", "(", ")", ",", "\n", "'examples'", ":", "syn", ".", "examples", "(", ")", "\n", "}", "\n", "results", ".", "append", "(", "info", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_wordnet_connected_words": [[49, 57], ["wordnet.get_wordnet_entries", "words.extend", "words.extend", "wordfreq.tokens.tokenize", "words.extend", "wordfreq.tokens.tokenize"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_wordnet_entries"], ["", "def", "get_wordnet_connected_words", "(", "word", ")", ":", "\n", "    ", "words", "=", "[", "]", "\n", "for", "entry", "in", "get_wordnet_entries", "(", "word", ")", ":", "\n", "        ", "words", ".", "extend", "(", "tokenize", "(", "entry", "[", "'definition'", "]", ",", "'en'", ")", ")", "\n", "words", ".", "extend", "(", "entry", "[", "'related'", "]", ")", "\n", "for", "example", "in", "entry", "[", "'examples'", "]", ":", "\n", "            ", "words", ".", "extend", "(", "tokenize", "(", "example", ",", "'en'", ")", ")", "\n", "", "", "return", "words", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.wordnet_connected_conceptnet_nodes": [[59, 64], ["wordnet.get_wordnet_connected_words", "conceptnet5.nodes.standardized_concept_uri", "nodes.append", "conceptnet5.nodes.standardized_concept_uri"], "function", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.get_wordnet_connected_words"], ["", "def", "wordnet_connected_conceptnet_nodes", "(", "word", ")", ":", "\n", "    ", "nodes", "=", "[", "standardized_concept_uri", "(", "'en'", ",", "word", ")", "]", "\n", "for", "conn", "in", "get_wordnet_connected_words", "(", "word", ")", ":", "\n", "        ", "nodes", ".", "append", "(", "standardized_concept_uri", "(", "'en'", ",", "conn", ")", ")", "\n", "", "return", "nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wikipedia.wikipedia_connected_conceptnet_nodes": [[4, 12], ["set", "db.cursor", "db.cursor.execute", "db.cursor.fetchall", "list", "set.add", "start.casefold", "conceptnet5.nodes.standardized_concept_uri"], "function", ["None"], ["def", "wikipedia_connected_conceptnet_nodes", "(", "db", ",", "start", ")", ":", "\n", "    ", "nodes", "=", "set", "(", ")", "\n", "c", "=", "db", ".", "cursor", "(", ")", "\n", "c", ".", "execute", "(", "\"SELECT lemma FROM words WHERE page=? LIMIT 1000\"", ",", "(", "start", ".", "casefold", "(", ")", ",", ")", ")", "\n", "for", "row", "in", "c", ".", "fetchall", "(", ")", ":", "\n", "        ", "lemma", "=", "row", "[", "0", "]", "\n", "nodes", ".", "add", "(", "standardized_concept_uri", "(", "'en'", ",", "lemma", ")", ")", "\n", "", "return", "list", "(", "nodes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.train": [[32, 38], ["None"], "methods", ["None"], ["def", "train", "(", "self", ",", "examples", ")", ":", "\n", "        ", "\"\"\"\n        Given training examples (a list of AttributeExample objects),\n        update the state of this classifier to learn from them.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.classify": [[39, 49], ["None"], "methods", ["None"], ["", "def", "classify", "(", "self", ",", "examples", ",", "mode", ")", ":", "\n", "        ", "\"\"\"\n        Given test cases (a list of AttributeExample objects), return the\n        classification of those test cases as a list or array of bools.\n\n        Of course, the classification should only use the .text1, .text2,\n        and .attribute properties of each example -- not the .discriminative\n        property, which contains the answer.\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.show_results": [[50, 56], ["sklearn.metrics.f1_score", "print", "print", "sklearn.metrics.classification_report", "len"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.trial.evaluation.f1_score"], ["", "def", "show_results", "(", "self", ",", "our_answers", ",", "real_answers", ",", "mode", ")", ":", "\n", "        ", "f1", "=", "f1_score", "(", "real_answers", ",", "our_answers", ",", "average", "=", "'macro'", ")", "\n", "f1_error", "=", "(", "(", "f1", "*", "(", "1", "-", "f1", ")", ")", "/", "len", "(", "real_answers", ")", ")", "**", "0.5", "\n", "print", "(", "\"{} f1 (macro): {:.2%} \u00b1 {:.2%}\"", ".", "format", "(", "mode", ",", "f1", ",", "f1_error", ")", ")", "\n", "print", "(", "classification_report", "(", "real_answers", ",", "our_answers", ")", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.evaluate": [[57, 77], ["classifier.AttributeClassifier.train", "discriminatt.data.read_semeval_data", "discriminatt.data.read_semeval_data", "discriminatt.data.read_semeval_data", "classifier.AttributeClassifier.show_results", "classifier.AttributeClassifier.classify"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.train", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_semeval_data", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_semeval_data", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_semeval_data", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.show_results", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.classify"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Train this learning strategy, and evaluate its f1 on the validation set.\n        \"\"\"", "\n", "examples", "=", "{", "\n", "'train'", ":", "read_semeval_data", "(", "'training/train.txt'", ")", ",", "\n", "'validation'", ":", "read_semeval_data", "(", "'training/validation.txt'", ")", ",", "\n", "'test'", ":", "read_semeval_data", "(", "'test/truth.txt'", ")", "\n", "}", "\n", "\n", "self", ".", "train", "(", "examples", "[", "'train'", "]", ")", "\n", "f1s", "=", "{", "}", "\n", "for", "mode", "in", "[", "'train'", ",", "'validation'", ",", "'test'", "]", ":", "\n", "            ", "f1", "=", "self", ".", "show_results", "(", "\n", "self", ".", "classify", "(", "examples", "[", "mode", "]", ",", "mode", ")", ",", "\n", "[", "example", ".", "discriminative", "for", "example", "in", "examples", "[", "mode", "]", "]", ",", "\n", "mode", "\n", ")", "\n", "f1s", "[", "mode", "]", "=", "f1", "\n", "", "return", "f1s", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.AttributeClassifier.run_test": [[78, 88], ["discriminatt.data.read_blind_semeval_data", "open", "numpy.array", "zip", "discriminatt.data.get_result_filename", "classifier.AttributeClassifier.classify", "print", "int"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_blind_semeval_data", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_result_filename", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.classify"], ["", "def", "run_test", "(", "self", ")", ":", "\n", "        ", "test_examples", "=", "read_blind_semeval_data", "(", "'test/test_triples.txt'", ")", "\n", "output", "=", "open", "(", "get_result_filename", "(", "'answer.txt'", ")", ",", "'w'", ")", "\n", "our_answers", "=", "np", ".", "array", "(", "self", ".", "classify", "(", "test_examples", ",", "'test'", ")", ")", "\n", "for", "example", ",", "answer", "in", "zip", "(", "test_examples", ",", "our_answers", ")", ":", "\n", "            ", "print", "(", "\n", "\"{},{},{},{}\"", ".", "format", "(", "\n", "example", ".", "word1", ",", "example", ".", "word2", ",", "example", ".", "attribute", ",", "int", "(", "answer", ")", "\n", ")", ",", "\n", "file", "=", "output", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.__init__": [[92, 98], ["conceptnet5.vectors.query.VectorSpaceWrapper", "discriminatt.data.get_external_data_filename"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "wrap", "=", "VectorSpaceWrapper", "(", "\n", "get_external_data_filename", "(", "'numberbatch-20180108-biased.h5'", ")", ",", "\n", "use_db", "=", "False", "\n", ")", "\n", "self", ".", "cache", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.get_vector": [[99, 106], ["conceptnet5.vectors.query.normalize_vec", "classifier.RelatednessClassifier.wrap.get_vector"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector"], ["", "def", "get_vector", "(", "self", ",", "uri", ")", ":", "\n", "        ", "if", "uri", "in", "self", ".", "cache", ":", "\n", "            ", "return", "self", ".", "cache", "[", "uri", "]", "\n", "", "else", ":", "\n", "            ", "vec", "=", "normalize_vec", "(", "self", ".", "wrap", ".", "get_vector", "(", "uri", ")", ")", "\n", "self", ".", "cache", "[", "uri", "]", "=", "vec", "\n", "return", "vec", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.get_similarity": [[107, 109], ["classifier.RelatednessClassifier.get_vector().dot", "classifier.RelatednessClassifier.get_vector", "classifier.RelatednessClassifier.get_vector"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector"], ["", "", "def", "get_similarity", "(", "self", ",", "uri1", ",", "uri2", ")", ":", "\n", "        ", "return", "self", ".", "get_vector", "(", "uri1", ")", ".", "dot", "(", "self", ".", "get_vector", "(", "uri2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.direct_relatedness": [[110, 114], ["max", "max", "classifier.RelatednessClassifier.get_similarity", "classifier.RelatednessClassifier.get_similarity", "example.node1", "example.att_node", "example.node2", "example.att_node"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node"], ["", "def", "direct_relatedness", "(", "self", ",", "example", ")", ":", "\n", "        ", "match1", "=", "max", "(", "0", ",", "self", ".", "get_similarity", "(", "example", ".", "node1", "(", ")", ",", "example", ".", "att_node", "(", ")", ")", ")", "**", "0.5", "\n", "match2", "=", "max", "(", "0", ",", "self", ".", "get_similarity", "(", "example", ".", "node2", "(", ")", ",", "example", ".", "att_node", "(", ")", ")", ")", "**", "0.5", "\n", "return", "match1", "-", "match2", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.classify": [[115, 118], ["numpy.array", "classifier.RelatednessClassifier.direct_relatedness"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.RelatednessClassifier.direct_relatedness"], ["", "def", "classify", "(", "self", ",", "examples", ",", "mode", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "\n", "[", "self", ".", "direct_relatedness", "(", "example", ")", ">", ".1", "for", "example", "in", "examples", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.__init__": [[131, 168], ["conceptnet5.vectors.query.VectorSpaceWrapper", "discriminatt.data.get_external_data_filename"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename"], ["def", "__init__", "(", "self", ",", "ablate", "=", "(", ")", ")", ":", "\n", "        ", "self", ".", "wrap", "=", "VectorSpaceWrapper", "(", "\n", "get_external_data_filename", "(", "'numberbatch-20180108-biased.h5'", ")", ",", "\n", "use_db", "=", "False", "\n", ")", "\n", "self", ".", "cache", "=", "{", "}", "\n", "self", ".", "wp_db", "=", "None", "\n", "self", ".", "sme", "=", "None", "\n", "self", ".", "queries", "=", "None", "\n", "self", ".", "phrases", "=", "None", "\n", "self", ".", "svm", "=", "None", "\n", "self", ".", "ablate", "=", "ablate", "\n", "\n", "self", ".", "feature_methods", "=", "[", "\n", "self", ".", "direct_relatedness_features", ",", "\n", "self", ".", "sme_features", ",", "\n", "self", ".", "wikipedia_relatedness_features", ",", "\n", "self", ".", "wordnet_relatedness_features", ",", "\n", "self", ".", "phrase_hit_features", "\n", "]", "\n", "\n", "self", ".", "feature_names", "=", "[", "\n", "'ConceptNet vector relatedness'", ",", "\n", "'SME: RelatedTo'", ",", "\n", "'SME: (x IsA a)'", ",", "\n", "'SME: (x HasA a)'", ",", "\n", "'SME: (x PartOf a)'", ",", "\n", "'SME: (x CapableOf a)'", ",", "\n", "'SME: (x UsedFor a)'", ",", "\n", "'SME: (x HasContext a)'", ",", "\n", "'SME: (x HasProperty a)'", ",", "\n", "'SME: (x AtLocation a)'", ",", "\n", "'SME: (a PartOf x)'", ",", "\n", "'SME: (a AtLocation x)'", ",", "\n", "'Wikipedia lead sections'", ",", "\n", "'WordNet relatedness'", ",", "\n", "'Google Ngrams'", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector": [[170, 177], ["conceptnet5.vectors.query.normalize_vec", "classifier.MultipleFeaturesClassifier.wrap.get_vector"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector"], ["", "def", "get_vector", "(", "self", ",", "uri", ")", ":", "\n", "        ", "if", "uri", "in", "self", ".", "cache", ":", "\n", "            ", "return", "self", ".", "cache", "[", "uri", "]", "\n", "", "else", ":", "\n", "            ", "vec", "=", "normalize_vec", "(", "self", ".", "wrap", ".", "get_vector", "(", "uri", ")", ")", "\n", "self", ".", "cache", "[", "uri", "]", "=", "vec", "\n", "return", "vec", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity": [[178, 180], ["classifier.MultipleFeaturesClassifier.get_vector().dot", "classifier.MultipleFeaturesClassifier.get_vector", "classifier.MultipleFeaturesClassifier.get_vector"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_vector"], ["", "", "def", "get_similarity", "(", "self", ",", "uri1", ",", "uri2", ")", ":", "\n", "        ", "return", "self", ".", "get_vector", "(", "uri1", ")", ".", "dot", "(", "self", ".", "get_vector", "(", "uri2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.direct_relatedness_features": [[181, 185], ["numpy.array", "max", "max", "classifier.MultipleFeaturesClassifier.get_similarity", "classifier.MultipleFeaturesClassifier.get_similarity", "example.node1", "example.att_node", "example.node2", "example.att_node"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node"], ["", "def", "direct_relatedness_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "match1", "=", "max", "(", "self", ".", "get_similarity", "(", "example", ".", "node1", "(", ")", ",", "example", ".", "att_node", "(", ")", ")", ",", "0", ")", "**", "0.5", "\n", "match2", "=", "max", "(", "self", ".", "get_similarity", "(", "example", ".", "node2", "(", ")", ",", "example", ".", "att_node", "(", ")", ")", ",", "0", ")", "**", "0.5", "\n", "return", "np", ".", "array", "(", "[", "match1", "-", "match2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.wikipedia_relatedness_features": [[186, 192], ["classifier.MultipleFeaturesClassifier.max_relatedness_features", "sqlite3.connect", "discriminatt.wikipedia.wikipedia_connected_conceptnet_nodes", "discriminatt.wikipedia.wikipedia_connected_conceptnet_nodes", "example.att_node", "discriminatt.data.get_external_data_filename", "example.node1", "example.node2"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.max_relatedness_features", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wikipedia.wikipedia_connected_conceptnet_nodes", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wikipedia.wikipedia_connected_conceptnet_nodes", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2"], ["", "def", "wikipedia_relatedness_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "if", "self", ".", "wp_db", "is", "None", ":", "\n", "            ", "self", ".", "wp_db", "=", "sqlite3", ".", "connect", "(", "get_external_data_filename", "(", "'wikipedia-summary.db'", ")", ")", "\n", "", "connected1", "=", "[", "example", ".", "node1", "(", ")", "]", "+", "wikipedia_connected_conceptnet_nodes", "(", "self", ".", "wp_db", ",", "example", ".", "word1", ")", "\n", "connected2", "=", "[", "example", ".", "node2", "(", ")", "]", "+", "wikipedia_connected_conceptnet_nodes", "(", "self", ".", "wp_db", ",", "example", ".", "word2", ")", "\n", "return", "self", ".", "max_relatedness_features", "(", "connected1", ",", "connected2", ",", "example", ".", "att_node", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.wordnet_relatedness_features": [[193, 197], ["classifier.MultipleFeaturesClassifier.max_relatedness_features", "discriminatt.wordnet.wordnet_connected_conceptnet_nodes", "discriminatt.wordnet.wordnet_connected_conceptnet_nodes", "example.att_node", "example.node1", "example.node2"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.max_relatedness_features", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.wordnet_connected_conceptnet_nodes", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.wordnet.wordnet_connected_conceptnet_nodes", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2"], ["", "def", "wordnet_relatedness_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "connected1", "=", "[", "example", ".", "node1", "(", ")", "]", "+", "wordnet_connected_conceptnet_nodes", "(", "example", ".", "word1", ")", "\n", "connected2", "=", "[", "example", ".", "node2", "(", ")", "]", "+", "wordnet_connected_conceptnet_nodes", "(", "example", ".", "word2", ")", "\n", "return", "self", ".", "max_relatedness_features", "(", "connected1", ",", "connected2", ",", "example", ".", "att_node", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.max_relatedness_features": [[198, 202], ["max", "max", "numpy.array", "classifier.MultipleFeaturesClassifier.get_similarity", "classifier.MultipleFeaturesClassifier.get_similarity"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.get_similarity"], ["", "def", "max_relatedness_features", "(", "self", ",", "conn1", ",", "conn2", ",", "att_node", ")", ":", "\n", "        ", "match1", "=", "max", "(", "[", "self", ".", "get_similarity", "(", "c", ",", "att_node", ")", "for", "c", "in", "conn1", "]", ")", "\n", "match2", "=", "max", "(", "[", "self", ".", "get_similarity", "(", "c", ",", "att_node", ")", "for", "c", "in", "conn2", "]", ")", "\n", "return", "np", ".", "array", "(", "[", "match1", "-", "match2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.sme_features": [[203, 213], ["example.node1", "example.node2", "example.att_node", "discriminatt.standalone_sme.StandaloneSMEModel", "numpy.zeros", "discriminatt.data.get_external_data_filename", "classifier.MultipleFeaturesClassifier.sme.predict_discriminative_relations", "classifier.MultipleFeaturesClassifier.sme.predict_discriminative_relations", "classifier.MultipleFeaturesClassifier.sme.num_rels"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.node2", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.att_node", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_discriminative_relations", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.predict_discriminative_relations", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.standalone_sme.StandaloneSMEModel.num_rels"], ["", "def", "sme_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "if", "self", ".", "sme", "is", "None", ":", "\n", "            ", "self", ".", "sme", "=", "StandaloneSMEModel", "(", "get_external_data_filename", "(", "'sme-20180129'", ")", ")", "\n", "", "node1", "=", "example", ".", "node1", "(", ")", "\n", "node2", "=", "example", ".", "node2", "(", ")", "\n", "att", "=", "example", ".", "att_node", "(", ")", "\n", "if", "node1", "in", "self", ".", "sme", "and", "node2", "in", "self", ".", "sme", "and", "att", "in", "self", ".", "sme", ":", "\n", "            ", "return", "self", ".", "sme", ".", "predict_discriminative_relations", "(", "node1", ",", "att", ")", "-", "self", ".", "sme", ".", "predict_discriminative_relations", "(", "node2", ",", "att", ")", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "zeros", "(", "self", ".", "sme", ".", "num_rels", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.phrase_hit_features": [[214, 220], ["discriminatt.phrases.phrase_weight", "discriminatt.phrases.phrase_weight", "sqlite3.connect", "example.lemma1", "example.lemma_att", "example.lemma2", "example.lemma_att", "discriminatt.data.get_external_data_filename"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.phrase_weight", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.phrases.phrase_weight", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma1", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma_att", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma2", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.AttributeExample.lemma_att", "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_external_data_filename"], ["", "", "def", "phrase_hit_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "if", "self", ".", "phrases", "is", "None", ":", "\n", "            ", "self", ".", "phrases", "=", "sqlite3", ".", "connect", "(", "get_external_data_filename", "(", "'phrases.db'", ")", ")", "\n", "", "weight_pair1", "=", "phrase_weight", "(", "self", ".", "phrases", ",", "example", ".", "lemma1", "(", ")", ",", "example", ".", "lemma_att", "(", ")", ")", "\n", "weight_pair2", "=", "phrase_weight", "(", "self", ".", "phrases", ",", "example", ".", "lemma2", "(", ")", ",", "example", ".", "lemma_att", "(", ")", ")", "\n", "return", "weight_pair1", "-", "weight_pair2", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.search_query_features": [[221, 234], ["set().intersection", "set().intersection", "discriminatt.data.read_search_queries", "len", "len", "numpy.log", "set", "set"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.read_search_queries"], ["", "def", "search_query_features", "(", "self", ",", "example", ")", ":", "\n", "        ", "if", "self", ".", "queries", "is", "None", ":", "\n", "            ", "self", ".", "queries", "=", "read_search_queries", "(", ")", "\n", "", "word1_queries", "=", "self", ".", "queries", "[", "example", ".", "word1", "]", "\n", "word2_queries", "=", "self", ".", "queries", "[", "example", ".", "word2", "]", "\n", "att_queries", "=", "self", ".", "queries", "[", "example", ".", "attribute", "]", "\n", "int1", "=", "set", "(", "word1_queries", ")", ".", "intersection", "(", "att_queries", ")", "\n", "int2", "=", "set", "(", "word2_queries", ")", ".", "intersection", "(", "att_queries", ")", "\n", "difference", "=", "len", "(", "int1", ")", "-", "len", "(", "int2", ")", "\n", "if", "difference", ">", "0", ":", "\n", "            ", "return", "np", ".", "log", "(", "difference", ")", "\n", "", "else", ":", "\n", "            ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.extract_features": [[235, 258], ["enumerate", "numpy.hstack", "discriminatt.data.get_result_filename", "os.access", "subarrays.append", "os.mkdir", "numpy.load", "tqdm.tqdm.tqdm", "numpy.vstack", "numpy.save", "os.path.dirname", "feature_list.append", "method"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.data.get_result_filename"], ["", "", "def", "extract_features", "(", "self", ",", "examples", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "subarrays", "=", "[", "]", "\n", "for", "i", ",", "method", "in", "enumerate", "(", "self", ".", "feature_methods", ")", ":", "\n", "            ", "name", "=", "method", ".", "__name__", "\n", "feature_filename", "=", "get_result_filename", "(", "'{}.{}.npy'", ".", "format", "(", "name", ",", "mode", ")", ")", "\n", "try", ":", "\n", "                ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "dirname", "(", "feature_filename", ")", ")", "\n", "", "except", "FileExistsError", ":", "\n", "                ", "pass", "\n", "", "if", "os", ".", "access", "(", "feature_filename", ",", "os", ".", "R_OK", ")", ":", "\n", "                ", "features", "=", "np", ".", "load", "(", "feature_filename", ")", "\n", "", "else", ":", "\n", "                ", "feature_list", "=", "[", "]", "\n", "for", "example", "in", "progress_bar", "(", "examples", ",", "desc", "=", "name", ")", ":", "\n", "                    ", "feature_list", ".", "append", "(", "method", "(", "example", ")", ")", "\n", "", "features", "=", "np", ".", "vstack", "(", "feature_list", ")", "\n", "np", ".", "save", "(", "feature_filename", ",", "features", ")", "\n", "\n", "# Set a selected feature source to all zeroes", "\n", "", "if", "i", "in", "self", ".", "ablate", ":", "\n", "                ", "features", "*=", "0", "\n", "", "subarrays", ".", "append", "(", "features", ")", "\n", "", "return", "np", ".", "hstack", "(", "subarrays", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.train": [[259, 280], ["sklearn.svm.LinearSVC", "sklearn.preprocessing.normalize", "numpy.array", "classifier.MultipleFeaturesClassifier.svm.fit", "numpy.maximum", "pandas.Series", "classifier.MultipleFeaturesClassifier.extract_features", "print", "print", "print", "range"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.extract_features"], ["", "def", "train", "(", "self", ",", "examples", ")", ":", "\n", "        ", "self", ".", "svm", "=", "LinearSVC", "(", ")", "\n", "inputs", "=", "normalize", "(", "self", ".", "extract_features", "(", "examples", ",", "mode", "=", "'train'", ")", ",", "axis", "=", "0", ",", "norm", "=", "'l2'", ")", "\n", "outputs", "=", "np", ".", "array", "(", "[", "example", ".", "discriminative", "for", "example", "in", "examples", "]", ")", "\n", "self", ".", "svm", ".", "fit", "(", "inputs", ",", "outputs", ")", "\n", "\n", "# Zero out features that get a negative weight -- these features were", "\n", "# intended to be positive, so one that comes out negative is probably", "\n", "# overfitting", "\n", "self", ".", "svm", ".", "coef_", "=", "np", ".", "maximum", "(", "0", ",", "self", ".", "svm", ".", "coef_", ")", "\n", "coef_series", "=", "pd", ".", "Series", "(", "self", ".", "svm", ".", "coef_", "[", "0", "]", ",", "index", "=", "self", ".", "feature_names", ")", "\n", "if", "self", ".", "ablate", ":", "\n", "            ", "used_feature_names", "=", "[", "\n", "self", ".", "feature_methods", "[", "a", "]", ".", "__name__", "\n", "for", "a", "in", "range", "(", "5", ")", "\n", "if", "a", "not", "in", "self", ".", "ablate", "\n", "]", "\n", "print", "(", "\"Used [{}]\"", ".", "format", "(", "', '", ".", "join", "(", "used_feature_names", ")", ")", ")", "\n", "", "if", "not", "self", ".", "ablate", "or", "self", ".", "ablate", "==", "(", "1", ",", "2", ",", "3", ",", "4", ")", ":", "\n", "            ", "print", "(", "coef_series", ")", "\n", "print", "(", "\"Intercept:\"", ",", "self", ".", "svm", ".", "intercept_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.classify": [[281, 285], ["sklearn.preprocessing.normalize", "classifier.MultipleFeaturesClassifier.svm.predict", "classifier.MultipleFeaturesClassifier.extract_features"], "methods", ["home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.discriminatt.classifier.MultipleFeaturesClassifier.extract_features"], ["", "", "def", "classify", "(", "self", ",", "examples", ",", "mode", ")", ":", "\n", "        ", "inputs", "=", "normalize", "(", "self", ".", "extract_features", "(", "examples", ",", "mode", "=", "mode", ")", ",", "axis", "=", "0", ",", "norm", "=", "'l2'", ")", "\n", "predictions", "=", "self", ".", "svm", ".", "predict", "(", "inputs", ")", "\n", "return", "predictions", "\n", "\n"]], "home.repos.pwc.inspect_result.LuminosoInsight_semeval-discriminatt.trial.evaluation.f1_score": [[7, 38], ["evaluation.values", "float", "float", "float", "float"], "function", ["None"], ["def", "f1_score", "(", "evaluation", ")", ":", "\n", "\n", "    ", "tp", "=", "0", "\n", "tn", "=", "0", "\n", "fp", "=", "0", "\n", "fn", "=", "0", "\n", "\n", "for", "i", "in", "evaluation", ".", "values", "(", ")", ":", "\n", "            ", "if", "i", "[", "0", "]", "==", "i", "[", "1", "]", "and", "i", "[", "1", "]", "==", "1", ":", "\n", "                ", "tp", "=", "tp", "+", "1", "\n", "", "if", "i", "[", "0", "]", "==", "i", "[", "1", "]", "and", "i", "[", "1", "]", "==", "0", ":", "\n", "                ", "tn", "=", "tn", "+", "1", "\n", "", "elif", "i", "[", "0", "]", "!=", "i", "[", "1", "]", "and", "i", "[", "1", "]", "==", "1", ":", "\n", "                ", "fp", "=", "fp", "+", "1", "\n", "", "elif", "i", "[", "0", "]", "!=", "i", "[", "1", "]", "and", "i", "[", "1", "]", "==", "0", ":", "\n", "                ", "fn", "=", "fn", "+", "1", "\n", "", "", "f1_positives", "=", "0.0", "\n", "f1_negatives", "=", "0.0", "\n", "if", "tp", ">", "0", ":", "\n", "        ", "precision", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fp", ")", "\n", "recall", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fn", ")", "\n", "f1_positives", "=", "2", "*", "(", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", ")", "\n", "", "if", "tn", ">", "0", ":", "\n", "        ", "precision", "=", "float", "(", "tn", ")", "/", "(", "tn", "+", "fn", ")", "\n", "recall", "=", "float", "(", "tn", ")", "/", "(", "tn", "+", "fp", ")", "\n", "f1_negatives", "=", "2", "*", "(", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", ")", "\n", "", "if", "f1_positives", "and", "f1_negatives", ":", "\n", "        ", "f1_average", "=", "(", "f1_positives", "+", "f1_negatives", ")", "/", "2.0", "\n", "return", "f1_average", "\n", "", "else", ":", "\n", "        ", "return", "0", "\n", "\n"]]}