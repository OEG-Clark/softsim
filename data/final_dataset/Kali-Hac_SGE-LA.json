{"home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.evaluate.main": [[33, 51], ["evaluate.evaluate_reid", "Exception", "Exception", "Exception", "Exception", "gpu.isdigit", "int"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.evaluate_reid"], ["def", "main", "(", "_", ")", ":", "\n", "\t", "global", "attention", ",", "dataset", ",", "series_length", ",", "epochs", ",", "time_steps", ",", "gpu", ",", "manner", "\n", "attention", ",", "dataset", ",", "gpu", ",", "manner", "=", "FLAGS", ".", "attention", ",", "FLAGS", ".", "dataset", ",", "FLAGS", ".", "gpu", ",", "FLAGS", ".", "manner", "\n", "if", "attention", "not", "in", "[", "'BA'", ",", "'LA'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Attention must be BA or LA'", ")", "\n", "", "if", "manner", "not", "in", "[", "'sc'", ",", "'ap'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Training manner must be sc or ap'", ")", "\n", "", "if", "dataset", "not", "in", "[", "'BIWI'", ",", "'IAS'", ",", "'KGBD'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Dataset must be BIWI, IAS or KGBD'", ")", "\n", "", "if", "not", "gpu", ".", "isdigit", "(", ")", "or", "int", "(", "gpu", ")", "<", "0", ":", "\n", "\t\t", "raise", "Exception", "(", "'GPU number must be a positive integer'", ")", "\n", "", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "gpu", "\n", "folder_name", "=", "dataset", "+", "'_'", "+", "attention", "\n", "series_length", "=", "20", "\n", "time_steps", "=", "6", "\n", "# epochs = 400", "\n", "# print('Print the Validation Loss and Rank-1 Accuracy for each testing bacth: ')", "\n", "evaluate_reid", "(", "'./Models/AGEs_RN_models/'", "+", "dataset", "+", "'_'", "+", "attention", "+", "'_RN_'", "+", "manner", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.evaluate.get_new_train_batches": [[52, 61], ["len", "range", "len"], "function", ["None"], ["", "def", "get_new_train_batches", "(", "targets", ",", "sources", ",", "batch_size", ")", ":", "\n", "\t", "if", "len", "(", "targets", ")", "<", "batch_size", ":", "\n", "\t\t", "yield", "targets", ",", "sources", "\n", "", "else", ":", "\n", "\t\t", "for", "batch_i", "in", "range", "(", "0", ",", "len", "(", "sources", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t", "start_i", "=", "batch_i", "*", "batch_size", "\n", "sources_batch", "=", "sources", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "targets_batch", "=", "targets", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "yield", "targets_batch", ",", "sources_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.evaluate.evaluate_reid": [[62, 287], ["numpy.load", "numpy.load", "tensorflow.get_default_graph", "numpy.load", "numpy.load", "numpy.array", "label_binarize", "roc_curve", "auc", "print", "tensorflow.Session", "tensorflow.train.import_meta_graph", "tf.train.import_meta_graph.restore", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "numpy.array", "label_binarize.ravel", "np.array.ravel", "plt.figure", "plt.plot", "plt.plot", "plt.xlim", "plt.ylim", "plt.xlabel", "plt.ylabel", "plt.title", "plt.legend", "plt.figure.savefig", "plt.close", "print", "enumerate", "print", "evaluate.evaluate_reid.cal_AUC"], "function", ["None"], ["", "", "", "def", "evaluate_reid", "(", "model_dir", ")", ":", "\n", "\t", "global", "batch_size", ",", "dataset", ",", "manner", "\n", "X", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_X.npy'", ")", "\n", "y", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_y.npy'", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "X_2", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_2_X.npy'", ")", "\n", "y_2", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_2_y.npy'", ")", "\n", "", "if", "dataset", "==", "'BIWI'", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "28", ")", "]", "\n", "", "elif", "dataset", "==", "'KGBD'", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "164", ")", "]", "\n", "", "else", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "11", ")", "]", "\n", "", "checkpoint", "=", "model_dir", "+", "\"/trained_model.ckpt\"", "\n", "loaded_graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "from", "sklearn", ".", "preprocessing", "import", "label_binarize", "\n", "from", "sklearn", ".", "metrics", "import", "roc_curve", ",", "auc", "\n", "def", "cal_AUC", "(", "score_y", ",", "pred_y", ",", "ps", ",", "draw_pic", "=", "False", ")", ":", "\n", "\t\t", "score_y", "=", "np", ".", "array", "(", "score_y", ")", "\n", "pred_y", "=", "label_binarize", "(", "np", ".", "array", "(", "pred_y", ")", ",", "classes", "=", "classes", ")", "\n", "# Compute micro-average ROC curve and ROC area", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "pred_y", ".", "ravel", "(", ")", ",", "score_y", ".", "ravel", "(", ")", ")", "\n", "roc_auc", "=", "auc", "(", "fpr", ",", "tpr", ")", "\n", "print", "(", "ps", "+", "': '", "+", "str", "(", "roc_auc", ")", ")", "\n", "if", "draw_pic", ":", "\n", "\t\t\t", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "lw", "=", "2", "\n", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "color", "=", "'darkorange'", ",", "\n", "lw", "=", "lw", ",", "label", "=", "'ROC curve (area = %0.2f)'", "%", "roc_auc", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "color", "=", "'navy'", ",", "lw", "=", "lw", ",", "linestyle", "=", "'--'", ")", "\n", "plt", ".", "xlim", "(", "[", "0.0", ",", "1.0", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0.0", ",", "1.05", "]", ")", "\n", "plt", ".", "xlabel", "(", "'False Positive Rate'", ")", "\n", "plt", ".", "ylabel", "(", "'True Positive Rate'", ")", "\n", "plt", ".", "title", "(", "'Receiver operating characteristic: '", "+", "ps", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "\"lower right\"", ")", "\n", "fig", ".", "savefig", "(", "'30 epoch ROC'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", "with", "tf", ".", "Session", "(", "graph", "=", "loaded_graph", ")", "as", "sess", ":", "\n", "\t\t", "loader", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", "+", "'.meta'", ")", "\n", "loader", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "X_input", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'X_input:0'", ")", "\n", "y_input", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'y_input:0'", ")", "\n", "lr", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'learning_rate:0'", ")", "\n", "pred", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'add_1:0'", ")", "\n", "cost", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'new_train/Mean:0'", ")", "\n", "accuracy", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'new_train/Mean_1:0'", ")", "\n", "correct_num", "=", "0", "\n", "total_num", "=", "0", "\n", "rank_acc", "=", "{", "}", "\n", "ys", "=", "[", "]", "\n", "preds", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "print", "(", "'Validation Results on IAS-A: '", ")", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y", ",", "X", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "for", "i", "in", "range", "(", "y_batch", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "for", "K", "in", "range", "(", "1", ",", "len", "(", "classes", ")", "+", "1", ")", ":", "\n", "\t\t\t\t\t\t", "if", "K", "not", "in", "rank_acc", ".", "keys", "(", ")", ":", "\n", "\t\t\t\t\t\t\t", "rank_acc", "[", "K", "]", "=", "0", "\n", "", "t", "=", "np", ".", "argpartition", "(", "pre", "[", "i", "]", ",", "-", "K", ")", "[", "-", "K", ":", "]", "\n", "if", "np", ".", "argmax", "(", "y_batch", "[", "i", "]", ")", "in", "t", ":", "\n", "\t\t\t\t\t\t\t", "rank_acc", "[", "K", "]", "+=", "1", "\n", "", "", "", "correct_num", "+=", "acc", "*", "batch_size", "\n", "total_num", "+=", "batch_size", "\n", "print", "(", "\n", "'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", ".", "format", "(", "cnt", ",", "\n", "loss", ",", "\n", "acc", ",", "\n", ")", ")", "\n", "", "total_acc", "=", "correct_num", "/", "total_num", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "total_acc", ")", "\n", "cal_AUC", "(", "score_y", "=", "preds", ",", "pred_y", "=", "ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y", ",", "X", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "all_frame_preds", ".", "extend", "(", "pre", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "sequence_preds", "=", "[", "]", "\n", "sequence_ys", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "y", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "# print(sequence_labels)", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "sequence_ys", ".", "append", "(", "sequence_labels", "[", "0", "]", ")", "\n", "aver", "=", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", "\n", "sequence_preds", ".", "append", "(", "aver", ")", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "# total_acc = correct_num / total_num", "\n", "# print('(Frame) Rank-1 Accuracy: %f' % total_acc)", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "seq_acc_t", ")", "\n", "sequence_ys", "=", "label_binarize", "(", "sequence_ys", ",", "classes", "=", "classes", ")", "\n", "# cal_AUC(score_y=preds,pred_y=ys, ps='nAUC')", "\n", "cal_AUC", "(", "score_y", "=", "sequence_preds", ",", "pred_y", "=", "sequence_ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "print", "(", "'Validation Results on IAS-B: '", ")", "\n", "# IAS-B", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t", "correct_num", "=", "0", "\n", "total_num", "=", "0", "\n", "rank_acc", "=", "{", "}", "\n", "ys", "=", "[", "]", "\n", "preds", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y_2", ",", "X_2", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "# total_acc = correct_num / total_num", "\n", "", "print", "(", "'Rank-1 Accuracy: %f'", "%", "total_acc", ")", "\n", "cal_AUC", "(", "score_y", "=", "preds", ",", "pred_y", "=", "ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y_2", ",", "X_2", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "all_frame_preds", ".", "extend", "(", "pre", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "sequence_preds", "=", "[", "]", "\n", "sequence_ys", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "y_2", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "\t\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "sequence_ys", ".", "append", "(", "sequence_labels", "[", "0", "]", ")", "\n", "aver", "=", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", "\n", "sequence_preds", ".", "append", "(", "aver", ")", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "# total_acc = correct_num / total_num", "\n", "# print('(Frame) Rank-1 Accuracy: %f' % total_acc)", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "seq_acc_t", ")", "\n", "sequence_ys", "=", "label_binarize", "(", "sequence_ys", ",", "classes", "=", "classes", ")", "\n", "# cal_AUC(score_y=preds, pred_y=ys, ps='nAUC')", "\n", "cal_AUC", "(", "score_y", "=", "sequence_preds", ",", "pred_y", "=", "sequence_ys", ",", "ps", "=", "'nAUC'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.main": [[48, 118], ["print", "numpy.column_stack", "numpy.column_stack", "print", "train.evaluate_reid", "Exception", "Exception", "Exception", "Exception", "os.mkdir", "os.mkdir", "train.train", "train.encoder_classify", "train.encoder_classify", "train.encoder_classify", "train.encoder_classify", "train.encoder_classify", "train.encoder_classify", "numpy.column_stack", "train.encoder_classify_union_directly_IAS", "train.encoder_classify_union_directly", "gpu.isdigit", "int", "os.mkdir", "os.mkdir", "X_y.tolist", "Y_y.tolist", "Y_y.tolist", "Z_y.tolist", "t_X_y.tolist", "t_Y_y.tolist", "t_Y_y.tolist", "t_Z_y.tolist"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.evaluate_reid", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.train", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify_union_directly_IAS", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify_union_directly"], ["def", "main", "(", "_", ")", ":", "\n", "\t", "global", "attention", ",", "dataset", ",", "series_length", ",", "epochs", ",", "time_steps", ",", "gpu", ",", "manner", "\n", "attention", ",", "dataset", ",", "gpu", ",", "manner", "=", "FLAGS", ".", "attention", ",", "FLAGS", ".", "dataset", ",", "FLAGS", ".", "gpu", ",", "FLAGS", ".", "manner", "\n", "if", "attention", "not", "in", "[", "'BA'", ",", "'LA'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Attention must be BA or LA'", ")", "\n", "", "if", "manner", "not", "in", "[", "'sc'", ",", "'ap'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Training manner must be sc or ap'", ")", "\n", "", "if", "dataset", "not", "in", "[", "'BIWI'", ",", "'IAS'", ",", "'KGBD'", "]", ":", "\n", "\t\t", "raise", "Exception", "(", "'Dataset must be BIWI, IAS or KGBD'", ")", "\n", "", "if", "not", "gpu", ".", "isdigit", "(", ")", "or", "int", "(", "gpu", ")", "<", "0", ":", "\n", "\t\t", "raise", "Exception", "(", "'GPU number must be a positive integer'", ")", "\n", "", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "gpu", "\n", "folder_name", "=", "dataset", "+", "'_'", "+", "attention", "\n", "series_length", "=", "20", "\n", "time_steps", "=", "6", "\n", "epochs", "=", "400", "\n", "\n", "# Train self-supervised gait encoding model on X, Y, Z", "\n", "try", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "'./Models/Gait_Encoding_models'", ")", "\n", "", "except", ":", "\n", "\t\t", "pass", "\n", "", "folder_name", "=", "'./Models/Gait_Encoding_models/'", "+", "folder_name", "\n", "for", "i", "in", "[", "'x'", ",", "'y'", ",", "'z'", "]", ":", "\n", "\t\t", "try", ":", "\n", "\t\t\t", "os", ".", "mkdir", "(", "folder_name", "+", "'_'", "+", "i", ")", "\n", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "train", "(", "folder_name", "+", "'_'", "+", "i", ",", "i", ",", "train_dataset", "=", "dataset", ")", "\n", "\n", "# Obtain AGEs", "\n", "", "print", "(", "'Generate AGEs'", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "X", ",", "X_y", ",", "t_X", ",", "t_X_y", ",", "t_2_X", ",", "t_2_X_y", ",", "t_X_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'x'", ",", "\n", "'x'", ",", "'att'", ",", "dataset", ")", "\n", "Y", ",", "Y_y", ",", "t_Y", ",", "t_Y_y", ",", "t_2_Y", ",", "t_2_Y_y", ",", "t_Y_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'y'", ",", "\n", "'y'", ",", "'att'", ",", "dataset", ")", "\n", "Z", ",", "Z_y", ",", "t_Z", ",", "t_Z_y", ",", "t_2_Z", ",", "t_2_Z_y", ",", "t_Z_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'z'", ",", "\n", "'z'", ",", "'att'", ",", "dataset", ")", "\n", "", "else", ":", "\n", "\t\t", "X", ",", "X_y", ",", "t_X", ",", "t_X_y", ",", "t_X_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'x'", ",", "'x'", ",", "'att'", ",", "dataset", ")", "\n", "Y", ",", "Y_y", ",", "t_Y", ",", "t_Y_y", ",", "t_Y_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'y'", ",", "'y'", ",", "'att'", ",", "dataset", ")", "\n", "Z", ",", "Z_y", ",", "t_Z", ",", "t_Z_y", ",", "t_Z_att", "=", "encoder_classify", "(", "dataset", "+", "'_'", "+", "attention", "+", "'z'", ",", "'z'", ",", "'att'", ",", "dataset", ")", "\n", "", "assert", "X_y", ".", "tolist", "(", ")", "==", "Y_y", ".", "tolist", "(", ")", "and", "Y_y", ".", "tolist", "(", ")", "==", "Z_y", ".", "tolist", "(", ")", "\n", "assert", "t_X_y", ".", "tolist", "(", ")", "==", "t_Y_y", ".", "tolist", "(", ")", "and", "t_Y_y", ".", "tolist", "(", ")", "==", "t_Z_y", ".", "tolist", "(", ")", "\n", "X", "=", "np", ".", "column_stack", "(", "[", "X", ",", "Y", ",", "Z", "]", ")", "\n", "y", "=", "X_y", "\n", "t_X", "=", "np", ".", "column_stack", "(", "[", "t_X", ",", "t_Y", ",", "t_Z", "]", ")", "\n", "t_y", "=", "t_X_y", "\n", "# np.save('temp_X', X)", "\n", "# np.save('temp_y', y)", "\n", "# np.save('temp_t_X', t_X)", "\n", "# np.save('temp_t_y', t_y)", "\n", "# exit(1)", "\n", "\n", "# X = np.load('temp_X.npy')", "\n", "# y = np.load('temp_y.npy')", "\n", "# t_X = np.load('temp_t_X.npy')", "\n", "# t_y = np.load('temp_t_y.npy')", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "t_2_X", "=", "np", ".", "column_stack", "(", "[", "t_2_X", ",", "t_2_Y", ",", "t_2_Z", "]", ")", "\n", "t_2_y", "=", "t_2_X_y", "\n", "", "print", "(", "'Train a recognition network on AGEs'", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "encoder_classify_union_directly_IAS", "(", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "t_2_X", ",", "t_2_y", ",", "'./Models/AGEs_RN_models'", ",", "\n", "dataset", "+", "'_'", "+", "attention", "+", "'_RN_'", "+", "manner", ",", "dataset", ")", "\n", "", "else", ":", "\n", "\t\t", "encoder_classify_union_directly", "(", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "'./Models/AGEs_RN_models'", ",", "\n", "dataset", "+", "'_'", "+", "attention", "+", "'_RN_'", "+", "manner", ",", "dataset", ")", "\n", "", "evaluate_reid", "(", "'./Models/AGEs_RN_models/'", "+", "dataset", "+", "'_'", "+", "attention", "+", "'_RN_'", "+", "manner", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_inputs": [[119, 129], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tf.Variable.assign", "tensorflow.placeholder", "tensorflow.reduce_max", "tensorflow.placeholder", "tensorflow.placeholder"], "function", ["None"], ["", "def", "get_inputs", "(", ")", ":", "\n", "\t", "inputs", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "time_steps", ",", "series_length", "]", ",", "name", "=", "'inputs'", ")", "\n", "targets", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "time_steps", ",", "series_length", "]", ",", "name", "=", "'targets'", ")", "\n", "learning_rate", "=", "tf", ".", "Variable", "(", "0.001", ",", "trainable", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'learning_rate'", ")", "\n", "learning_rate_decay_op", "=", "learning_rate", ".", "assign", "(", "learning_rate", "*", "0.5", ")", "\n", "target_sequence_length", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "(", "None", ",", ")", ",", "name", "=", "'target_sequence_length'", ")", "\n", "max_target_sequence_length", "=", "tf", ".", "reduce_max", "(", "target_sequence_length", ",", "name", "=", "'max_target_len'", ")", "\n", "source_sequence_length", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "(", "None", ",", ")", ",", "name", "=", "'source_sequence_length'", ")", "\n", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "'keep_prob'", ")", "\n", "return", "inputs", ",", "targets", ",", "learning_rate", ",", "learning_rate_decay_op", ",", "target_sequence_length", ",", "max_target_sequence_length", ",", "source_sequence_length", ",", "keep_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_KGBD": [[130, 138], ["numpy.load", "input_data.tolist.reshape", "input_data.tolist.tolist", "numpy.load", "targets.tolist.reshape", "targets.tolist.tolist", "str", "str"], "function", ["None"], ["", "def", "get_data_KGBD", "(", "dimension", ",", "fr", ")", ":", "\n", "\t", "input_data", "=", "np", ".", "load", "(", "'Datasets/KGBD_train_npy_data/source_'", "+", "dimension", "+", "'_KGBD_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "input_data", "=", "input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "input_data", "=", "input_data", ".", "tolist", "(", ")", "\n", "targets", "=", "np", ".", "load", "(", "'Datasets/KGBD_train_npy_data/target_'", "+", "dimension", "+", "'_KGBD_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "targets", "=", "targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "targets", "=", "targets", ".", "tolist", "(", ")", "\n", "return", "input_data", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_IAS": [[139, 147], ["numpy.load", "input_data.tolist.reshape", "input_data.tolist.tolist", "numpy.load", "targets.tolist.reshape", "targets.tolist.tolist", "str", "str"], "function", ["None"], ["", "def", "get_data_IAS", "(", "dimension", ",", "fr", ")", ":", "\n", "\t", "input_data", "=", "np", ".", "load", "(", "'Datasets/IAS_train_npy_data/source_'", "+", "dimension", "+", "'_IAS_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "input_data", "=", "input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "input_data", "=", "input_data", ".", "tolist", "(", ")", "\n", "targets", "=", "np", ".", "load", "(", "'Datasets/IAS_train_npy_data/target_'", "+", "dimension", "+", "'_IAS_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "targets", "=", "targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "targets", "=", "targets", ".", "tolist", "(", ")", "\n", "return", "input_data", ",", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_BIWI": [[148, 163], ["numpy.load", "input_data.tolist.reshape", "input_data.tolist.tolist", "numpy.load", "targets.tolist.reshape", "targets.tolist.tolist", "numpy.load", "t_input_data.tolist.reshape", "t_input_data.tolist.tolist", "numpy.load", "t_targets.tolist.reshape", "t_targets.tolist.tolist", "str", "str", "str", "str", "len", "len", "len", "len"], "function", ["None"], ["", "def", "get_data_BIWI", "(", "dimension", ",", "fr", ")", ":", "\n", "\t", "input_data", "=", "np", ".", "load", "(", "'Datasets/BIWI_train_npy_data/source_'", "+", "dimension", "+", "'_BIWI_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "input_data", "=", "input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "input_data", "=", "input_data", ".", "tolist", "(", ")", "\n", "targets", "=", "np", ".", "load", "(", "'Datasets/BIWI_train_npy_data/target_'", "+", "dimension", "+", "'_BIWI_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "targets", "=", "targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "targets", "=", "targets", ".", "tolist", "(", ")", "\n", "t_input_data", "=", "np", ".", "load", "(", "'Datasets/BIWI_test_npy_data/t_source_'", "+", "dimension", "+", "'_BIWI_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "t_input_data", "=", "t_input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_input_data", "=", "t_input_data", ".", "tolist", "(", ")", "\n", "t_targets", "=", "np", ".", "load", "(", "'Datasets/BIWI_test_npy_data/t_target_'", "+", "dimension", "+", "'_BIWI_'", "+", "str", "(", "fr", ")", "+", "'.npy'", ")", "\n", "t_targets", "=", "t_targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_targets", "=", "t_targets", ".", "tolist", "(", ")", "\n", "# return input_data, targets, t_input_data, t_targets", "\n", "return", "input_data", "[", ":", "-", "len", "(", "input_data", ")", "//", "3", "]", ",", "targets", "[", ":", "-", "len", "(", "input_data", ")", "//", "3", "]", ",", "input_data", "[", "-", "len", "(", "input_data", ")", "//", "3", ":", "]", ",", "targets", "[", "-", "len", "(", "input_data", ")", "//", "3", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.pad_batch": [[165, 175], ["max", "len", "len"], "function", ["None"], ["", "def", "pad_batch", "(", "batch_data", ",", "pad_int", ")", ":", "\n", "\t", "'''\n\tpadding the first skeleton of target sequence with zeros \u2014\u2014 Z\n\ttransform the target sequence (1,2,3,...,f) to (Z,1,2,3,...,f-1) as input to decoder in training\n\tparameters\uff1a\n\t- batch_data\n\t- pad_int: position (0)\n\t'''", "\n", "max_sentence", "=", "max", "(", "[", "len", "(", "sentence", ")", "for", "sentence", "in", "batch_data", "]", ")", "\n", "return", "[", "sentence", "+", "[", "pad_int", "]", "*", "(", "max_sentence", "-", "len", "(", "sentence", ")", ")", "for", "sentence", "in", "batch_data", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_batches": [[177, 197], ["range", "numpy.array", "numpy.array", "len", "train.pad_batch", "train.pad_batch", "targets_lengths.append", "source_lengths.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.pad_batch", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.pad_batch"], ["", "def", "get_batches", "(", "targets", ",", "sources", ",", "batch_size", ",", "source_pad_int", ",", "target_pad_int", ")", ":", "\n", "\t", "for", "batch_i", "in", "range", "(", "0", ",", "len", "(", "sources", ")", "//", "batch_size", ")", ":", "\n", "\t\t", "start_i", "=", "batch_i", "*", "batch_size", "\n", "sources_batch", "=", "sources", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "targets_batch", "=", "targets", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "\n", "# transform the target sequence (1,2,3,...,f) to (Z,1,2,3,...,f-1) as input to decoder in training", "\n", "pad_sources_batch", "=", "np", ".", "array", "(", "pad_batch", "(", "sources_batch", ",", "source_pad_int", ")", ")", "\n", "pad_targets_batch", "=", "np", ".", "array", "(", "pad_batch", "(", "targets_batch", ",", "target_pad_int", ")", ")", "\n", "\n", "# record the lengths of sequence (not neccessary)", "\n", "targets_lengths", "=", "[", "]", "\n", "for", "target", "in", "targets_batch", ":", "\n", "\t\t\t", "targets_lengths", ".", "append", "(", "len", "(", "target", ")", ")", "\n", "\n", "", "source_lengths", "=", "[", "]", "\n", "for", "source", "in", "sources_batch", ":", "\n", "\t\t\t", "source_lengths", ".", "append", "(", "len", "(", "source", ")", ")", "\n", "\n", "", "yield", "pad_targets_batch", ",", "pad_sources_batch", ",", "targets_lengths", ",", "source_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.GE": [[199, 225], ["tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.nn.dynamic_rnn", "tensorflow.contrib.rnn.LSTMCell", "train.GE.get_lstm_cell"], "function", ["None"], ["", "", "def", "GE", "(", "input_data", ",", "rnn_size", ",", "num_layers", ",", "source_sequence_length", ",", "encoding_embedding_size", ")", ":", "\n", "\t", "'''\n\tGait Encoder (GE)\n\n\tParameters:\n\t- input_data: skeleton sequences (X,Y,Z series)\n\t- rnn_size: 256\n\t- num_layers: 2\n\t- source_sequence_length: \n\t- encoding_embedding_size: embedding size\n\t'''", "\n", "\n", "encoder_embed_input", "=", "input_data", "\n", "\n", "def", "get_lstm_cell", "(", "rnn_size", ")", ":", "\n", "\t\t", "lstm_cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMCell", "(", "rnn_size", ",", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "0.1", ",", "0.1", ",", "seed", "=", "2", ")", ")", "\n", "# if use_dropout:", "\n", "# \tlstm_cell = tf.contrib.rnn.DropoutWrapper(lstm_cell, output_keep_prob=0.5)", "\n", "return", "lstm_cell", "\n", "\n", "", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "[", "get_lstm_cell", "(", "rnn_size", ")", "for", "_", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "\n", "encoder_output", ",", "encoder_state", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "cell", ",", "encoder_embed_input", ",", "\n", "sequence_length", "=", "source_sequence_length", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "weights", "=", "cell", ".", "variables", "\n", "return", "encoder_output", ",", "encoder_state", ",", "weights", ",", "source_sequence_length", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.GD": [[227, 324], ["tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.seq2seq.LuongAttention", "tensorflow.contrib.seq2seq.AttentionWrapper", "tensorflow.python.layers.core.Dense", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.variable_scope", "tensorflow.contrib.seq2seq.TrainingHelper", "tf.contrib.seq2seq.AttentionWrapper.zero_state().clone", "tensorflow.contrib.seq2seq.BasicDecoder", "tensorflow.contrib.seq2seq.dynamic_decode", "tensorflow.variable_scope", "tensorflow.contrib.seq2seq.CustomHelper", "tf.contrib.seq2seq.AttentionWrapper.zero_state().clone", "tensorflow.contrib.seq2seq.BasicDecoder", "tensorflow.contrib.seq2seq.dynamic_decode", "train.GD.get_decoder_cell"], "function", ["None"], ["", "def", "GD", "(", "decoding_embedding_size", ",", "num_layers", ",", "rnn_size", ",", "\n", "target_sequence_length", ",", "source_sequence_length", ",", "max_target_sequence_length", ",", "encoder_output", ",", "encoder_state", ",", "decoder_input", ")", ":", "\n", "\t", "'''\n\tGait Decoder (GD)\n\n\tparameters\uff1a\n\t- decoding_embedding_size: embedding size\n\t- num_layers: 2\n\t- rnn_size: 256\n\t- target_sequence_length: 6\n\t- max_target_sequence_length: 6\n\t- encoder_state: gait encoded state\n\t- decoder_input:\n\t'''", "\n", "\n", "decoder_embed_input", "=", "decoder_input", "\n", "\n", "def", "get_decoder_cell", "(", "rnn_size", ")", ":", "\n", "\t\t", "decoder_cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMCell", "(", "rnn_size", ",", "\n", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "0.1", ",", "0.1", ",", "seed", "=", "2", ")", ")", "\n", "return", "decoder_cell", "\n", "\n", "", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "[", "get_decoder_cell", "(", "rnn_size", ")", "for", "_", "in", "range", "(", "num_layers", ")", "]", ")", "\n", "\n", "# if use_attention:", "\n", "attention_mechanism", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "LuongAttention", "(", "num_units", "=", "rnn_size", ",", "memory", "=", "encoder_output", ",", "\n", "memory_sequence_length", "=", "source_sequence_length", ")", "\n", "cell", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "AttentionWrapper", "(", "cell", "=", "cell", ",", "attention_mechanism", "=", "attention_mechanism", ",", "\n", "attention_layer_size", "=", "rnn_size", ",", "alignment_history", "=", "True", ",", "output_attention", "=", "True", ",", "\n", "name", "=", "'Attention_Wrapper'", ")", "\n", "# FC layer", "\n", "output_layer", "=", "Dense", "(", "series_length", ",", "\n", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "tf", ".", "truncated_normal_initializer", "(", "mean", "=", "0.0", ",", "stddev", "=", "0.1", ")", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"decode\"", ")", ":", "\n", "\t\t", "training_helper", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "TrainingHelper", "(", "inputs", "=", "decoder_embed_input", ",", "\n", "sequence_length", "=", "target_sequence_length", ",", "\n", "time_major", "=", "False", ")", "\n", "# if not use_attention:", "\n", "# \ttraining_decoder = tf.contrib.seq2seq.BasicDecoder(cell,", "\n", "# \t                                                   training_helper,", "\n", "# \t                                                   encoder_state,", "\n", "# \t                                                   output_layer)", "\n", "# else:", "\n", "decoder_initial_state", "=", "cell", ".", "zero_state", "(", "batch_size", "=", "batch_size", ",", "dtype", "=", "tf", ".", "float32", ")", ".", "clone", "(", "\n", "cell_state", "=", "encoder_state", ")", "\n", "training_decoder", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "BasicDecoder", "(", "cell", ",", "\n", "training_helper", ",", "\n", "initial_state", "=", "decoder_initial_state", ",", "\n", "output_layer", "=", "output_layer", ",", "\n", ")", "\n", "training_decoder_output", ",", "training_decoder_state", ",", "_", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "dynamic_decode", "(", "training_decoder", ",", "\n", "impute_finished", "=", "True", ",", "\n", "maximum_iterations", "=", "max_target_sequence_length", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"decode\"", ",", "reuse", "=", "True", ")", ":", "\n", "\t\t", "def", "initialize_fn", "(", ")", ":", "\n", "\t\t\t", "finished", "=", "tf", ".", "tile", "(", "[", "False", "]", ",", "[", "batch_size", "]", ")", "\n", "start_inputs", "=", "decoder_embed_input", "[", ":", ",", "0", "]", "\n", "return", "(", "finished", ",", "start_inputs", ")", "\n", "\n", "", "def", "sample_fn", "(", "time", ",", "outputs", ",", "state", ")", ":", "\n", "\t\t\t", "del", "time", ",", "state", "\n", "return", "tf", ".", "constant", "(", "[", "0", "]", "*", "batch_size", ")", "\n", "\n", "", "def", "next_inputs_fn", "(", "time", ",", "outputs", ",", "state", ",", "sample_ids", ")", ":", "\n", "\t\t\t", "del", "sample_ids", "\n", "finished", "=", "time", ">=", "tf", ".", "shape", "(", "decoder_embed_input", ")", "[", "1", "]", "\n", "all_finished", "=", "tf", ".", "reduce_all", "(", "finished", ")", "\n", "next_inputs", "=", "tf", ".", "cond", "(", "\n", "all_finished", ",", "\n", "lambda", ":", "tf", ".", "zeros_like", "(", "outputs", ")", ",", "\n", "lambda", ":", "outputs", ")", "\n", "return", "(", "finished", ",", "next_inputs", ",", "state", ")", "\n", "\n", "", "predicting_helper", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "CustomHelper", "(", "initialize_fn", "=", "initialize_fn", ",", "\n", "sample_fn", "=", "sample_fn", ",", "\n", "next_inputs_fn", "=", "next_inputs_fn", ")", "\n", "\n", "# if not use_attention:", "\n", "# \tpredicting_decoder = tf.contrib.seq2seq.BasicDecoder(cell,", "\n", "# \t                                                     predicting_helper,", "\n", "# \t                                                     encoder_state,", "\n", "# \t                                                     output_layer)", "\n", "# else:", "\n", "decoder_initial_state", "=", "cell", ".", "zero_state", "(", "batch_size", "=", "batch_size", ",", "dtype", "=", "tf", ".", "float32", ")", ".", "clone", "(", "\n", "cell_state", "=", "encoder_state", ")", "\n", "predicting_decoder", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "BasicDecoder", "(", "cell", ",", "\n", "predicting_helper", ",", "\n", "initial_state", "=", "decoder_initial_state", ",", "\n", "output_layer", "=", "output_layer", ")", "\n", "\n", "predicting_decoder_output", ",", "predicting_decoder_state", ",", "_", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "dynamic_decode", "(", "predicting_decoder", ",", "\n", "impute_finished", "=", "True", ",", "\n", "maximum_iterations", "=", "max_target_sequence_length", ")", "\n", "\n", "", "return", "training_decoder_output", ",", "predicting_decoder_output", ",", "training_decoder_state", ",", "predicting_decoder_state", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.process_decoder_input": [[326, 333], ["tensorflow.strided_slice", "tensorflow.concat", "tensorflow.fill"], "function", ["None"], ["", "def", "process_decoder_input", "(", "data", ",", "batch_size", ")", ":", "\n", "    ", "'''\n    transform the target sequence (1,2,3,...,f) to (Z,1,2,3,...,f-1) as input to decoder in training\n    '''", "\n", "ending", "=", "tf", ".", "strided_slice", "(", "data", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "batch_size", ",", "-", "1", ",", "series_length", "]", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "decoder_input", "=", "tf", ".", "concat", "(", "[", "tf", ".", "fill", "(", "[", "batch_size", ",", "time_steps", ",", "series_length", "]", ",", "0.", ")", ",", "ending", "]", ",", "1", ")", "\n", "return", "decoder_input", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_decoder": [[334, 360], ["train.GE", "train.process_decoder_input", "tensorflow.Variable", "tensorflow.Variable", "train.GD", "training_state.alignment_history.stack"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.GE", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.process_decoder_input", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.GD"], ["", "def", "encoder_decoder", "(", "input_data", ",", "targets", ",", "lr", ",", "target_sequence_length", ",", "\n", "max_target_sequence_length", ",", "source_sequence_length", ",", "\n", "encoder_embedding_size", ",", "decoder_embedding_size", ",", "\n", "rnn_size", ",", "num_layers", ")", ":", "\n", "\t", "encoding_embedding_size", "=", "128", "\n", "decoding_embedding_size", "=", "128", "\n", "encoder_output", ",", "encoder_state", ",", "weights", ",", "source_sequence_length", "=", "GE", "(", "input_data", ",", "\n", "rnn_size", ",", "\n", "num_layers", ",", "\n", "source_sequence_length", ",", "\n", "encoding_embedding_size", ")", "\n", "decoder_input", "=", "process_decoder_input", "(", "targets", ",", "batch_size", ")", "\n", "lstm_weights_1", "=", "tf", ".", "Variable", "(", "weights", "[", "0", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'lstm_weights_layer_1'", ")", "\n", "lstm_weights_2", "=", "tf", ".", "Variable", "(", "weights", "[", "3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'lstm_weights_layer_2'", ")", "\n", "training_decoder_output", ",", "predicting_decoder_output", ",", "training_state", ",", "predicting_state", "=", "GD", "(", "\n", "decoding_embedding_size", ",", "\n", "num_layers", ",", "\n", "rnn_size", ",", "\n", "target_sequence_length", ",", "\n", "source_sequence_length", ",", "\n", "max_target_sequence_length", ",", "\n", "encoder_output", ",", "\n", "encoder_state", ",", "\n", "decoder_input", ")", "\n", "attention_matrices", "=", "training_state", ".", "alignment_history", ".", "stack", "(", ")", "\n", "return", "training_decoder_output", ",", "predicting_decoder_output", ",", "lstm_weights_1", ",", "lstm_weights_2", ",", "attention_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.train": [[361, 511], ["tensorflow.Graph", "numpy.array", "numpy.array", "numpy.random.permutation", "train_source.tolist.tolist", "train_target.tolist.tolist", "next", "train.get_data_KGBD", "tf.Graph.as_default", "train.get_inputs", "train.encoder_decoder", "tensorflow.identity", "tensorflow.identity", "tensorflow.reduce_mean", "tensorflow.identity", "tensorflow.identity", "tensorflow.add", "train.get_batches", "tensorflow.Session", "sess.run", "print", "range", "tensorflow.train.Saver", "tf.train.Saver.save", "print", "numpy.save", "numpy.save", "train.get_data_IAS", "tensorflow.nn.l2_loss", "numpy.ones", "enumerate", "numpy.tile", "objective_attention.swapaxes.swapaxes", "tensorflow.reduce_mean", "sum", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.apply_gradients", "tensorflow.global_variables_initializer", "enumerate", "numpy.array", "numpy.array", "train.get_data_BIWI", "Error", "objective_attention.swapaxes.tolist", "range", "tensorflow.nn.l2_loss", "train.get_batches", "sess.run", "tensorflow.nn.l2_loss", "tensorflow.clip_by_value", "dim.upper", "sess.run", "print", "tf.reduce_mean.append", "test_loss.append", "numpy.exp", "numpy.exp", "tensorflow.trainable_variables", "sess.run", "max", "round", "round", "round", "round", "min", "max", "len"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_KGBD", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_inputs", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_decoder", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_batches", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_IAS", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_data_BIWI", "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_batches"], ["", "def", "train", "(", "folder_name", ",", "dim", ",", "train_dataset", "=", "False", ")", ":", "\n", "\t", "global", "series_length", ",", "time_steps", ",", "dataset", ",", "attention", "\n", "if", "train_dataset", "==", "'KGBD'", ":", "\n", "\t\t", "input_data_", ",", "targets_", "=", "get_data_KGBD", "(", "dim", ",", "fr", "=", "time_steps", ")", "\n", "", "elif", "train_dataset", "==", "'IAS'", ":", "\n", "\t\t", "input_data_", ",", "targets_", "=", "get_data_IAS", "(", "dim", ",", "fr", "=", "time_steps", ")", "\n", "", "elif", "train_dataset", "==", "'BIWI'", ":", "\n", "\t\t", "input_data_", ",", "targets_", ",", "t_input_data_", ",", "t_targets_", "=", "get_data_BIWI", "(", "dim", ",", "fr", "=", "time_steps", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "Error", "(", "'No dataset is chosen!'", ")", "\n", "", "train_graph", "=", "tf", ".", "Graph", "(", ")", "\n", "encoding_embedding_size", "=", "128", "\n", "decoding_embedding_size", "=", "128", "\n", "with", "train_graph", ".", "as_default", "(", ")", ":", "\n", "\t\t", "input_data", ",", "targets", ",", "lr", ",", "lr_decay_op", ",", "target_sequence_length", ",", "max_target_sequence_length", ",", "source_sequence_length", ",", "keep_prob", "=", "get_inputs", "(", ")", "\n", "training_decoder_output", ",", "predicting_decoder_output", ",", "lstm_weights_1", ",", "lstm_weights_2", ",", "attention_matrices", "=", "encoder_decoder", "(", "input_data", ",", "\n", "targets", ",", "\n", "lr", ",", "\n", "target_sequence_length", ",", "\n", "max_target_sequence_length", ",", "\n", "source_sequence_length", ",", "\n", "encoding_embedding_size", ",", "\n", "decoding_embedding_size", ",", "\n", "rnn_size", ",", "\n", "num_layers", ")", "\n", "training_decoder_output", "=", "training_decoder_output", ".", "rnn_output", "\n", "predicting_output", "=", "tf", ".", "identity", "(", "predicting_decoder_output", ".", "rnn_output", ",", "name", "=", "'predictions'", ")", "\n", "training_output", "=", "tf", ".", "identity", "(", "predicting_decoder_output", ".", "rnn_output", ",", "name", "=", "'train_output'", ")", "\n", "train_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "l2_loss", "(", "training_decoder_output", "-", "targets", ")", ")", "\n", "real_loss", "=", "tf", ".", "identity", "(", "train_loss", ",", "name", "=", "'real_loss'", ")", "\n", "attention_matrices", "=", "tf", ".", "identity", "(", "attention_matrices", ",", "name", "=", "'train_attention_matrix'", ")", "\n", "\n", "# Locality-aware attention loss", "\n", "if", "attention", "==", "'LA'", ":", "\n", "\t\t\t", "objective_attention", "=", "np", ".", "ones", "(", "shape", "=", "[", "time_steps", ",", "time_steps", "]", ")", "\n", "for", "index", ",", "_", "in", "enumerate", "(", "objective_attention", ".", "tolist", "(", ")", ")", ":", "\n", "\t\t\t\t", "pt", "=", "time_steps", "-", "1", "-", "index", "\n", "D", "=", "time_steps", "\n", "objective_attention", "[", "index", "]", "[", "pt", "]", "=", "1", "\n", "for", "i", "in", "range", "(", "1", ",", "D", "+", "1", ")", ":", "\n", "\t\t\t\t\t", "if", "pt", "+", "i", "<=", "time_steps", "-", "1", ":", "\n", "\t\t\t\t\t\t", "objective_attention", "[", "index", "]", "[", "min", "(", "pt", "+", "i", ",", "time_steps", "-", "1", ")", "]", "=", "np", ".", "exp", "(", "-", "(", "i", ")", "**", "2", "/", "(", "2", "*", "(", "D", "/", "2", ")", "**", "2", ")", ")", "\n", "", "if", "pt", "-", "i", ">=", "0", ":", "\n", "\t\t\t\t\t\t", "objective_attention", "[", "index", "]", "[", "max", "(", "pt", "-", "i", ",", "0", ")", "]", "=", "np", ".", "exp", "(", "-", "(", "i", ")", "**", "2", "/", "(", "2", "*", "(", "D", "/", "2", ")", "**", "2", ")", ")", "\n", "", "", "objective_attention", "[", "index", "]", "[", "pt", "]", "=", "1", "\n", "", "objective_attention", "=", "np", ".", "tile", "(", "objective_attention", ",", "[", "batch_size", ",", "1", ",", "1", "]", ")", "\n", "objective_attention", "=", "objective_attention", ".", "swapaxes", "(", "1", ",", "0", ")", "\n", "att_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "l2_loss", "(", "attention_matrices", "-", "attention_matrices", "*", "objective_attention", ")", ")", "\n", "train_loss", "+=", "att_loss", "\n", "\n", "", "l2", "=", "lambda_l2_reg", "*", "sum", "(", "\n", "tf", ".", "nn", ".", "l2_loss", "(", "tf_var", ")", "\n", "for", "tf_var", "in", "tf", ".", "trainable_variables", "(", ")", "\n", "if", "not", "(", "\"noreg\"", "in", "tf_var", ".", "name", "or", "\"Bias\"", "in", "tf_var", ".", "name", ")", "\n", ")", "\n", "# train_loss += att_loss", "\n", "cost", "=", "tf", ".", "add", "(", "l2", ",", "train_loss", ",", "name", "=", "'cost'", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"optimization\"", ")", ":", "\n", "# Optimizer", "\n", "\t\t\t", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ",", "name", "=", "'Adam'", ")", "\n", "# Gradient Clipping", "\n", "gradients", "=", "optimizer", ".", "compute_gradients", "(", "cost", ")", "\n", "capped_gradients", "=", "[", "(", "tf", ".", "clip_by_value", "(", "grad", ",", "-", "5.", ",", "5.", ")", ",", "var", ")", "for", "grad", ",", "var", "in", "gradients", "if", "grad", "is", "not", "None", "]", "\n", "train_op", "=", "optimizer", ".", "apply_gradients", "(", "capped_gradients", ",", "name", "=", "'train_op'", ")", "\n", "\n", "", "", "input_data_", "=", "np", ".", "array", "(", "input_data_", ")", "\n", "targets_", "=", "np", ".", "array", "(", "targets_", ")", "\n", "permutation", "=", "np", ".", "random", ".", "permutation", "(", "input_data_", ".", "shape", "[", "0", "]", ")", "\n", "input_data_", "=", "input_data_", "[", "permutation", "]", "\n", "targets_", "=", "targets_", "[", "permutation", "]", "\n", "train_source", "=", "input_data_", "\n", "train_target", "=", "targets_", "\n", "\n", "train_source", "=", "train_source", ".", "tolist", "(", ")", "\n", "train_target", "=", "train_target", ".", "tolist", "(", ")", "\n", "# input_data_ = input_data_.tolist()", "\n", "# targets_ = targets_.tolist()", "\n", "valid_source", "=", "train_source", "[", ":", "batch_size", "]", "\n", "valid_target", "=", "train_target", "[", ":", "batch_size", "]", "\n", "\n", "# print(len(train_source), len(train_target), len(valid_source), len(valid_target))", "\n", "(", "valid_targets_batch", ",", "valid_sources_batch", ",", "valid_targets_lengths", ",", "valid_sources_lengths", ")", "=", "next", "(", "\n", "get_batches", "(", "valid_target", ",", "valid_source", ",", "batch_size", ",", "source_pad_int", "=", "0", ",", "target_pad_int", "=", "0", ")", ")", "\n", "\n", "display_step", "=", "50", "\n", "\n", "checkpoint", "=", "\"./\"", "+", "folder_name", "+", "\"/trained_model.ckpt\"", "\n", "best_checkpoint", "=", "'./'", "+", "folder_name", "+", "'/best_model.ckpt'", "\n", "\n", "with", "tf", ".", "Session", "(", "graph", "=", "train_graph", ",", "config", "=", "config", ")", "as", "sess", ":", "\n", "\t\t", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "print", "(", "'Begin Training on Dimension ['", "+", "dim", ".", "upper", "(", ")", "+", "']'", ")", "\n", "train_loss", "=", "[", "]", "\n", "test_loss", "=", "[", "]", "\n", "losses", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "loss_cnt", "=", "0", "\n", "conv_cnt", "=", "0", "\n", "best_val", "=", "100000", "\n", "over_flag", "=", "False", "\n", "for", "epoch_i", "in", "range", "(", "1", ",", "epochs", "+", "1", ")", ":", "\n", "\t\t\t", "if", "over_flag", ":", "\n", "\t\t\t\t", "break", "\n", "", "for", "batch_i", ",", "(", "targets_batch", ",", "sources_batch", ",", "targets_lengths", ",", "sources_lengths", ")", "in", "enumerate", "(", "\n", "get_batches", "(", "train_target", ",", "train_source", ",", "batch_size", ",", "source_pad_int", "=", "0", ",", "target_pad_int", "=", "0", ")", ")", ":", "\n", "\t\t\t\t", "_", ",", "loss", ",", "att", "=", "sess", ".", "run", "(", "[", "train_op", ",", "real_loss", ",", "attention_matrices", "]", ",", "\n", "{", "input_data", ":", "sources_batch", ",", "\n", "targets", ":", "targets_batch", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "targets_lengths", ",", "\n", "source_sequence_length", ":", "sources_lengths", ",", "\n", "keep_prob", ":", "0.5", "}", ")", "\n", "if", "batch_i", "%", "display_step", "==", "0", ":", "\n", "\t\t\t\t\t", "validation_loss", "=", "sess", ".", "run", "(", "\n", "[", "real_loss", "]", ",", "\n", "{", "input_data", ":", "valid_sources_batch", ",", "\n", "targets", ":", "valid_targets_batch", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "valid_targets_lengths", ",", "\n", "source_sequence_length", ":", "valid_sources_lengths", ",", "\n", "keep_prob", ":", "1.0", "}", ")", "\n", "print", "(", "'Epoch {:>3}/{} Batch {:>4}/{} - Training Loss: {:>6.3f}  - Validation loss: {:>6.3f}'", "\n", ".", "format", "(", "epoch_i", ",", "\n", "epochs", ",", "\n", "batch_i", ",", "\n", "len", "(", "train_source", ")", "//", "batch_size", ",", "\n", "loss", ",", "\n", "validation_loss", "[", "0", "]", ")", ")", "\n", "# if epoch_i % 25 == 0 and validation_loss[0] < best_val:", "\n", "# \tsaver = tf.train.Saver()", "\n", "# \tsaver.save(sess, best_checkpoint)", "\n", "# \tprint('The Best Model Saved Again')", "\n", "# \tbest_val = validation_loss[0]", "\n", "train_loss", ".", "append", "(", "loss", ")", "\n", "test_loss", ".", "append", "(", "validation_loss", "[", "0", "]", ")", "\n", "losses", "[", "loss_cnt", "%", "3", "]", "=", "validation_loss", "[", "0", "]", "\n", "loss_cnt", "+=", "1", "\n", "# print(losses)", "\n", "if", "conv_cnt", ">", "0", "and", "validation_loss", "[", "0", "]", ">=", "max", "(", "losses", ")", ":", "\n", "\t\t\t\t\t\t", "over_flag", "=", "True", "\n", "break", "\n", "", "if", "(", "round", "(", "losses", "[", "(", "loss_cnt", "-", "1", ")", "%", "3", "]", ",", "5", ")", "==", "round", "(", "losses", "[", "loss_cnt", "%", "3", "]", ",", "5", ")", ")", "and", "(", "round", "(", "losses", "[", "(", "loss_cnt", "-", "2", ")", "%", "3", "]", ",", "5", ")", "==", "round", "(", "losses", "[", "loss_cnt", "%", "3", "]", ",", "5", ")", ")", ":", "\n", "\t\t\t\t\t\t", "sess", ".", "run", "(", "lr_decay_op", ")", "\n", "conv_cnt", "+=", "1", "\n", "", "", "", "", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "sess", ",", "checkpoint", ")", "\n", "print", "(", "'Model Trained and Saved'", ")", "\n", "np", ".", "save", "(", "folder_name", "+", "'/train_loss.npy'", ",", "np", ".", "array", "(", "train_loss", ")", ")", "\n", "np", ".", "save", "(", "folder_name", "+", "'/test_loss.npy'", ",", "np", ".", "array", "(", "test_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify": [[512, 872], ["print", "numpy.load", "_input_data.reshape.reshape", "numpy.load", "_targets.reshape.reshape", "numpy.load", "ids.item.item", "tensorflow.Graph", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "sorted", "sorted", "label_binarize", "numpy.array", "numpy.array", "numpy.array", "numpy.load", "t_input_data.reshape.reshape", "numpy.load", "t_targets.reshape.reshape", "numpy.load", "t_2_input_data.reshape.reshape", "numpy.load", "t_2_targets.reshape.reshape", "numpy.load", "t_input_data.reshape.reshape", "numpy.load", "t_targets.reshape.reshape", "numpy.load", "t_ids.item.item", "numpy.load", "t_2_ids.item.item", "numpy.load", "t_ids.item.item", "tensorflow.Session", "tensorflow.train.import_meta_graph", "tf.train.import_meta_graph.restore", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "tf.Graph.get_tensor_by_name", "sorted", "sorted", "numpy.random.permutation", "list", "list", "sorted", "label_binarize", "numpy.random.permutation", "numpy.array", "numpy.array", "ord", "ord", "ids.item.items", "t_ids.item.items", "sorted", "range", "range", "ids.item.keys", "t_ids.item.keys", "list", "numpy.random.permutation", "str", "str", "str", "t_2_ids.item.items", "len", "v.extend", "sess.run", "range", "np.array.tolist", "enumerate", "numpy.array", "sess.run", "range", "len", "len", "v.extend", "sess.run", "range", "np.array.tolist", "enumerate", "numpy.array", "sess.run", "range", "range", "t_2_ids.item.keys", "str", "str", "str", "str", "str", "str", "str", "str", "str", "len", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "pred[].reverse", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "np.array.extend", "np.array.extend", "len", "len", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "pred[].reverse", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "np.array.extend", "np.array.extend", "len", "len", "v.extend", "sess.run", "range", "np.array.append", "np.array.append", "numpy.matmul", "np.array.append", "numpy.matmul", "len", "len", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "numpy.reshape().tolist", "np.array.extend", "np.array.extend", "len", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "np.reshape().tolist.extend", "np.array.append", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "np.reshape().tolist.extend", "np.array.append", "len", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape().tolist", "np.array.append", "np.array.extend", "numpy.matmul", "numpy.reshape().tolist", "np.reshape().tolist.extend", "np.array.append", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape().tolist", "np.array.append", "np.array.extend", "numpy.matmul", "numpy.reshape().tolist", "np.reshape().tolist.extend", "np.array.append", "numpy.matmul", "np.array.append", "np.array.append", "np.reshape().tolist.tolist", "np.reshape().tolist.tolist", "len", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape().tolist", "np.array.append", "np.array.extend", "np.reshape().tolist.extend", "np.array.append", "np.reshape().tolist.extend", "np.array.append", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "np.reshape().tolist.tolist", "numpy.matmul", "numpy.matmul", "numpy.reshape", "numpy.reshape().tolist", "np.array.append", "np.array.extend", "numpy.matmul", "numpy.reshape().tolist", "np.reshape().tolist.extend", "np.array.append", "numpy.reshape().tolist", "np.array.append", "np.array.extend", "numpy.matmul", "numpy.reshape().tolist", "np.reshape().tolist.extend", "np.array.append", "np.reshape().tolist.tolist", "np.reshape().tolist.tolist", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape"], "function", ["None"], ["", "", "def", "encoder_classify", "(", "model_name", ",", "dimension", ",", "type", ",", "dataset", ")", ":", "\n", "\t", "global", "manner", "\n", "number", "=", "ord", "(", "dimension", ")", "-", "ord", "(", "'x'", ")", "+", "1", "\n", "print", "(", "'Run the gait encoding model to obtain AGEs (%d / 3)'", "%", "number", ")", "\n", "global", "epochs", ",", "series_length", ",", "attention", "\n", "epochs", "=", "200", "\n", "_input_data", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_train_npy_data/source_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "_input_data", "=", "_input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "_targets", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_train_npy_data/target_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "_targets", "=", "_targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "t_input_data", "=", "np", ".", "load", "(", "\n", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_source_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'-A_'", "+", "str", "(", "\n", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_input_data", "=", "t_input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_targets", "=", "np", ".", "load", "(", "\n", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_target_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'-A_'", "+", "str", "(", "\n", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_targets", "=", "t_targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_2_input_data", "=", "np", ".", "load", "(", "\n", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_source_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'-B_'", "+", "str", "(", "\n", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_2_input_data", "=", "t_2_input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_2_targets", "=", "np", ".", "load", "(", "\n", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_target_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'-B_'", "+", "str", "(", "\n", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_2_targets", "=", "t_2_targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "", "else", ":", "\n", "\t\t", "t_input_data", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_source_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_input_data", "=", "t_input_data", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "t_targets", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/t_target_'", "+", "dimension", "+", "'_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_targets", "=", "t_targets", ".", "reshape", "(", "[", "-", "1", ",", "time_steps", ",", "series_length", "]", ")", "\n", "", "ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_train_npy_data/ids_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "ids", "=", "ids", ".", "item", "(", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "t_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'-A_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_ids", "=", "t_ids", ".", "item", "(", ")", "\n", "t_2_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'-B_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_2_ids", "=", "t_2_ids", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "\t\t", "t_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_ids", "=", "t_ids", ".", "item", "(", ")", "\n", "", "checkpoint", "=", "'Models/Gait_Encoding_models/'", "+", "dataset", "+", "'_'", "+", "attention", "+", "'_'", "+", "dimension", "+", "\"/trained_model.ckpt\"", "\n", "loaded_graph", "=", "tf", ".", "Graph", "(", ")", "\n", "with", "tf", ".", "Session", "(", "graph", "=", "loaded_graph", ",", "config", "=", "config", ")", "as", "sess", ":", "\n", "\t\t", "loader", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", "+", "'.meta'", ")", "\n", "loader", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "input_data", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'inputs:0'", ")", "\n", "targets", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'targets:0'", ")", "\n", "encoder_output", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'rnn/transpose_1:0'", ")", "\n", "encoder_c_1", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'rnn/while/Exit_3:0'", ")", "\n", "encoder_h_1", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'rnn/while/Exit_4:0'", ")", "\n", "encoder_c", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'rnn/while/Exit_5:0'", ")", "\n", "encoder_h", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'rnn/while/Exit_6:0'", ")", "\n", "predictions", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'predictions:0'", ")", "\n", "# train_output = loaded_graph.get_tensor_by_name('train_output:0')", "\n", "alignment_history", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'train_attention_matrix:0'", ")", "\n", "# train_attention_matrix = loaded_graph.get_tensor_by_name('train_attention_matrix:0')", "\n", "attention_state", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'decode/decoder/while/Exit_12:0'", ")", "\n", "attention_weights", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'decode/decoder/while/Exit_8:0'", ")", "\n", "alignment", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'decode/decoder/while/Exit_10:0'", ")", "\n", "lr", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'learning_rate:0'", ")", "\n", "keep_prob", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'keep_prob:0'", ")", "\n", "source_sequence_length", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'source_sequence_length:0'", ")", "\n", "target_sequence_length", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'target_sequence_length:0'", ")", "\n", "X", "=", "[", "]", "\n", "X_all_op", "=", "[", "]", "\n", "X_final_op", "=", "[", "]", "\n", "X_final_c", "=", "[", "]", "\n", "X_final_h", "=", "[", "]", "\n", "X_final_c1", "=", "[", "]", "\n", "X_final_h1", "=", "[", "]", "\n", "X_final_ch", "=", "[", "]", "\n", "X_final_ch1", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "X_pred", "=", "[", "]", "\n", "t_X", "=", "[", "]", "\n", "t_y", "=", "[", "]", "\n", "t_2_X", "=", "[", "]", "\n", "t_2_y", "=", "[", "]", "\n", "t_X_pred", "=", "[", "]", "\n", "t_X_att", "=", "[", "]", "\n", "# print(t_ids)", "\n", "# print(test_attention)", "\n", "ids_", "=", "sorted", "(", "ids", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "0", "]", ")", "\n", "t_ids_", "=", "sorted", "(", "t_ids", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "0", "]", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "t_2_ids_", "=", "sorted", "(", "t_2_ids", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "0", "]", ")", "\n", "", "for", "k", ",", "v", "in", "ids_", ":", "\n", "\t\t\t", "if", "len", "(", "v", ")", "<", "batch_size", ":", "\n", "\t\t\t\t", "v", ".", "extend", "(", "[", "v", "[", "0", "]", "]", "*", "(", "batch_size", "-", "len", "(", "v", ")", ")", ")", "\n", "# print('%s - %d' % (k, len(v)))", "\n", "", "for", "batch_i", "in", "range", "(", "len", "(", "v", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t\t", "this_input", "=", "_input_data", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "this_targets", "=", "_targets", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "en_outputs", ",", "en_c", ",", "en_h", ",", "en_c_1", ",", "en_h_1", ",", "pred", ",", "att_state", ",", "att_history", ",", "att", ",", "align", "=", "sess", ".", "run", "(", "[", "encoder_output", ",", "encoder_c", ",", "\n", "encoder_h", ",", "encoder_c_1", ",", "encoder_h_1", ",", "predictions", ",", "attention_state", ",", "alignment_history", ",", "attention_weights", ",", "alignment", "]", ",", "\n", "{", "input_data", ":", "this_input", ",", "\n", "targets", ":", "this_targets", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "source_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "keep_prob", ":", "1.0", "}", ")", "\n", "for", "index", "in", "range", "(", "en_outputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "t1", "=", "np", ".", "reshape", "(", "en_outputs", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t2", "=", "np", ".", "reshape", "(", "en_c", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t3", "=", "np", ".", "reshape", "(", "en_h", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t4", "=", "np", ".", "reshape", "(", "en_c_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t5", "=", "np", ".", "reshape", "(", "en_h_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "if", "type", "==", "'c'", ":", "\n", "\t\t\t\t\t\t", "X", ".", "append", "(", "t2", ")", "\n", "", "elif", "type", "==", "'ch'", ":", "\n", "\t\t\t\t\t\t", "t3", ".", "extend", "(", "t2", ")", "\n", "X", ".", "append", "(", "t3", ")", "\n", "", "elif", "type", "==", "'o'", ":", "\n", "\t\t\t\t\t\t", "X", ".", "append", "(", "t1", ")", "\n", "", "elif", "type", "==", "'oc'", ":", "\n", "\t\t\t\t\t\t", "t1", ".", "extend", "(", "t2", ")", "\n", "X", ".", "append", "(", "t1", ")", "\n", "", "elif", "type", "==", "'att'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "X", ".", "append", "(", "att_op", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "X", ".", "extend", "(", "att_op", ".", "tolist", "(", ")", ")", "\n", "", "", "elif", "type", "==", "'attc'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "att_op", ".", "extend", "(", "t2", ")", "\n", "X", ".", "append", "(", "att_op", ")", "\n", "", "", "pred", "=", "pred", ".", "tolist", "(", ")", "\n", "for", "index", ",", "i", "in", "enumerate", "(", "pred", ")", ":", "\n", "\t\t\t\t\t", "pred", "[", "index", "]", ".", "reverse", "(", ")", "\n", "", "pred", "=", "np", ".", "array", "(", "pred", ")", "\n", "en_outputs", ",", "en_c", ",", "en_h", ",", "en_c_1", ",", "en_h_1", ",", "pred_2", "=", "sess", ".", "run", "(", "\n", "[", "encoder_output", ",", "encoder_c", ",", "encoder_h", ",", "encoder_c_1", ",", "encoder_h_1", ",", "predictions", "]", ",", "\n", "{", "input_data", ":", "pred", ",", "\n", "targets", ":", "this_targets", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "source_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "keep_prob", ":", "0.5", "}", ")", "\n", "for", "index", "in", "range", "(", "en_outputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "t1", "=", "np", ".", "reshape", "(", "en_outputs", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t2", "=", "np", ".", "reshape", "(", "en_c", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t3", "=", "np", ".", "reshape", "(", "en_h", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t4", "=", "np", ".", "reshape", "(", "en_c_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t5", "=", "np", ".", "reshape", "(", "en_h_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "if", "type", "==", "'c'", ":", "\n", "\t\t\t\t\t\t", "X_pred", ".", "append", "(", "t2", ")", "\n", "", "elif", "type", "==", "'ch'", ":", "\n", "\t\t\t\t\t\t", "t3", ".", "extend", "(", "t2", ")", "\n", "X_pred", ".", "append", "(", "t3", ")", "\n", "", "elif", "type", "==", "'o'", ":", "\n", "\t\t\t\t\t\t", "X_pred", ".", "append", "(", "t1", ")", "\n", "", "elif", "type", "==", "'oc'", ":", "\n", "\t\t\t\t\t\t", "t1", ".", "extend", "(", "t2", ")", "\n", "X_pred", ".", "append", "(", "t1", ")", "\n", "", "elif", "type", "==", "'att'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "X_pred", ".", "append", "(", "att_op", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "X_pred", ".", "extend", "(", "att_op", ".", "tolist", "(", ")", ")", "\n", "", "", "elif", "type", "==", "'attc'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "att_op", ".", "extend", "(", "t2", ")", "\n", "X_pred", ".", "append", "(", "att_op", ")", "\n", "", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t", "y", ".", "extend", "(", "[", "k", "]", "*", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "y", ".", "extend", "(", "[", "k", "]", "*", "batch_size", "*", "time_steps", ")", "\n", "", "", "", "for", "k", ",", "v", "in", "t_ids_", ":", "\n", "\t\t\t", "flag", "=", "0", "\n", "if", "len", "(", "v", ")", "==", "0", ":", "\n", "\t\t\t\t", "continue", "\n", "", "if", "len", "(", "v", ")", "<", "batch_size", ":", "\n", "\t\t\t\t", "flag", "=", "batch_size", "-", "len", "(", "v", ")", "\n", "v", ".", "extend", "(", "[", "v", "[", "0", "]", "]", "*", "(", "batch_size", "-", "len", "(", "v", ")", ")", ")", "\n", "# print('%s - %d' % (k, len(v)))", "\n", "", "for", "batch_i", "in", "range", "(", "len", "(", "v", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t\t", "this_input", "=", "t_input_data", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "this_targets", "=", "t_targets", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "en_outputs", ",", "en_c", ",", "en_h", ",", "en_c_1", ",", "en_h_1", ",", "pred", ",", "att_state", ",", "att_history", ",", "att", ",", "align", "=", "sess", ".", "run", "(", "[", "encoder_output", ",", "encoder_c", ",", "\n", "encoder_h", ",", "encoder_c_1", ",", "encoder_h_1", ",", "predictions", ",", "attention_state", ",", "alignment_history", ",", "attention_weights", ",", "alignment", "]", ",", "\n", "{", "input_data", ":", "this_input", ",", "\n", "targets", ":", "this_targets", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "source_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "keep_prob", ":", "1.0", "}", ")", "\n", "if", "flag", ">", "0", ":", "\n", "\t\t\t\t\t", "en_outputs", "=", "en_outputs", "[", ":", "-", "flag", "]", "\n", "", "for", "index", "in", "range", "(", "en_outputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "t1", "=", "np", ".", "reshape", "(", "en_outputs", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t2", "=", "np", ".", "reshape", "(", "en_c", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t3", "=", "np", ".", "reshape", "(", "en_h", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t4", "=", "np", ".", "reshape", "(", "en_c_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t5", "=", "np", ".", "reshape", "(", "en_h_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "if", "type", "==", "'att'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t_X", ".", "append", "(", "att_op", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "t_X", ".", "extend", "(", "att_op", ".", "tolist", "(", ")", ")", "\n", "", "t_X_att", ".", "append", "(", "weights", ")", "\n", "", "elif", "type", "==", "'attc'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "att_op", ".", "extend", "(", "t2", ")", "\n", "t_X", ".", "append", "(", "att_op", ")", "\n", "", "", "pred", "=", "pred", ".", "tolist", "(", ")", "\n", "for", "index", ",", "i", "in", "enumerate", "(", "pred", ")", ":", "\n", "\t\t\t\t\t", "pred", "[", "index", "]", ".", "reverse", "(", ")", "\n", "", "pred", "=", "np", ".", "array", "(", "pred", ")", "\n", "en_outputs", ",", "en_c", ",", "en_h", ",", "en_c_1", ",", "en_h_1", ",", "pred_2", "=", "sess", ".", "run", "(", "\n", "[", "encoder_output", ",", "encoder_c", ",", "encoder_h", ",", "encoder_c_1", ",", "encoder_h_1", ",", "predictions", "]", ",", "\n", "{", "input_data", ":", "pred", ",", "\n", "targets", ":", "this_targets", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "source_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "keep_prob", ":", "0.5", "}", ")", "\n", "for", "index", "in", "range", "(", "en_outputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "t1", "=", "np", ".", "reshape", "(", "en_outputs", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t2", "=", "np", ".", "reshape", "(", "en_c", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t3", "=", "np", ".", "reshape", "(", "en_h", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t4", "=", "np", ".", "reshape", "(", "en_c_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t5", "=", "np", ".", "reshape", "(", "en_h_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "if", "type", "==", "'att'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t_X_pred", ".", "append", "(", "att_op", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "t_X_pred", ".", "extend", "(", "att_op", ".", "tolist", "(", ")", ")", "\n", "", "", "elif", "type", "==", "'attc'", ":", "\n", "\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "att_op", ".", "extend", "(", "t2", ")", "\n", "t_X_pred", ".", "append", "(", "att_op", ")", "\n", "", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t", "t_y", ".", "extend", "(", "[", "k", "]", "*", "(", "batch_size", "-", "flag", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "t_y", ".", "extend", "(", "[", "k", "]", "*", "(", "batch_size", "-", "flag", ")", "*", "time_steps", ")", "\n", "", "", "", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "for", "k", ",", "v", "in", "t_2_ids_", ":", "\n", "\t\t\t\t", "flag", "=", "0", "\n", "if", "len", "(", "v", ")", "==", "0", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "if", "len", "(", "v", ")", "<", "batch_size", ":", "\n", "\t\t\t\t\t", "flag", "=", "batch_size", "-", "len", "(", "v", ")", "\n", "v", ".", "extend", "(", "[", "v", "[", "0", "]", "]", "*", "(", "batch_size", "-", "len", "(", "v", ")", ")", ")", "\n", "# print('%s - %d' % (k, len(v)))", "\n", "", "for", "batch_i", "in", "range", "(", "len", "(", "v", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t\t\t", "this_input", "=", "t_2_input_data", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "this_targets", "=", "t_2_targets", "[", "v", "[", "batch_i", "*", "batch_size", ":", "(", "batch_i", "+", "1", ")", "*", "batch_size", "]", "]", "\n", "en_outputs", ",", "en_c", ",", "en_h", ",", "en_c_1", ",", "en_h_1", ",", "pred", ",", "att_state", ",", "att_history", ",", "att", ",", "align", "=", "sess", ".", "run", "(", "[", "encoder_output", ",", "encoder_c", ",", "\n", "encoder_h", ",", "encoder_c_1", ",", "encoder_h_1", ",", "predictions", ",", "attention_state", ",", "alignment_history", ",", "attention_weights", ",", "alignment", "]", ",", "\n", "{", "input_data", ":", "this_input", ",", "\n", "targets", ":", "this_targets", ",", "\n", "lr", ":", "learning_rate", ",", "\n", "target_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "source_sequence_length", ":", "[", "time_steps", "]", "*", "batch_size", ",", "\n", "keep_prob", ":", "1.0", "}", ")", "\n", "if", "flag", ">", "0", ":", "\n", "\t\t\t\t\t\t", "en_outputs", "=", "en_outputs", "[", ":", "-", "flag", "]", "\n", "", "for", "index", "in", "range", "(", "en_outputs", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t\t", "t1", "=", "np", ".", "reshape", "(", "en_outputs", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t2", "=", "np", ".", "reshape", "(", "en_c", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t3", "=", "np", ".", "reshape", "(", "en_h", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t4", "=", "np", ".", "reshape", "(", "en_c_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t5", "=", "np", ".", "reshape", "(", "en_h_1", "[", "index", "]", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "if", "type", "==", "'att'", ":", "\n", "\t\t\t\t\t\t\t", "weights", "=", "att_history", "[", ":", ",", "index", ",", ":", "]", "\n", "f_o", "=", "en_outputs", "[", "index", ",", ":", ",", ":", "]", "\n", "att_op", "=", "np", ".", "matmul", "(", "weights", ",", "f_o", ")", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t\t", "att_op", "=", "np", ".", "reshape", "(", "att_op", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "\n", "t_2_X", ".", "append", "(", "att_op", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t\t", "t_2_X", ".", "extend", "(", "att_op", ".", "tolist", "(", ")", ")", "\n", "", "", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t", "t_2_y", ".", "extend", "(", "[", "k", "]", "*", "(", "batch_size", "-", "flag", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "t_2_y", ".", "extend", "(", "[", "k", "]", "*", "(", "batch_size", "-", "flag", ")", "*", "time_steps", ")", "\n", "", "", "", "", "", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "y", "=", "np", ".", "array", "(", "y", ")", "\n", "X_pred", "=", "np", ".", "array", "(", "X_pred", ")", "\n", "t_X_pred", "=", "np", ".", "array", "(", "t_X_pred", ")", "\n", "# preds = np.array(preds)", "\n", "# preditions = np.array(preditions)", "\n", "\n", "global", "permutation", ",", "permutation_flag", ",", "permutation_test_flag", ",", "permutation_test_2_flag", ",", "test_permutation", ",", "test_2_permutation", "\n", "if", "not", "permutation_flag", ":", "\n", "\t\t", "permutation", "=", "np", ".", "random", ".", "permutation", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "permutation_flag", "=", "True", "\n", "", "X", "=", "X", "[", "permutation", ",", "]", "\n", "y", "=", "y", "[", "permutation", ",", "]", "\n", "X_pred", "=", "X_pred", "[", "permutation", ",", "]", "\n", "from", "sklearn", ".", "preprocessing", "import", "label_binarize", "\n", "ids_keys", "=", "sorted", "(", "list", "(", "ids", ".", "keys", "(", ")", ")", ")", "\n", "t_ids_keys", "=", "sorted", "(", "list", "(", "t_ids", ".", "keys", "(", ")", ")", ")", "\n", "t_classes", "=", "[", "i", "for", "i", "in", "t_ids_keys", "]", "\n", "t_y", "=", "label_binarize", "(", "t_y", ",", "classes", "=", "t_classes", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "t_2_ids_keys", "=", "sorted", "(", "list", "(", "t_2_ids", ".", "keys", "(", ")", ")", ")", "\n", "t_2_classes", "=", "[", "i", "for", "i", "in", "t_2_ids_keys", "]", "\n", "t_2_y", "=", "label_binarize", "(", "t_2_y", ",", "classes", "=", "t_2_classes", ")", "\n", "", "train_source", "=", "X", "\n", "train_target", "=", "y", "\n", "train_preds", "=", "X_pred", "\n", "valid_source", "=", "t_X", "\n", "valid_target", "=", "t_y", "\n", "valid_preds", "=", "t_X_pred", "\n", "t_X_att", "=", "np", ".", "array", "(", "t_X_att", ")", "\n", "t_X", "=", "np", ".", "array", "(", "t_X", ")", "\n", "t_y", "=", "np", ".", "array", "(", "t_y", ")", "\n", "if", "not", "permutation_test_flag", ":", "\n", "\t\t", "test_permutation", "=", "np", ".", "random", ".", "permutation", "(", "t_X", ".", "shape", "[", "0", "]", ")", "\n", "permutation_test_flag", "=", "True", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t", "t_X", "=", "t_X", "[", "test_permutation", ",", "]", "\n", "t_y", "=", "t_y", "[", "test_permutation", ",", "]", "\n", "# t_X_att = t_X_att[test_permutation]", "\n", "", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "valid_2_source", "=", "t_2_X", "\n", "valid_2_target", "=", "t_2_y", "\n", "t_2_X", "=", "np", ".", "array", "(", "t_2_X", ")", "\n", "t_2_y", "=", "np", ".", "array", "(", "t_2_y", ")", "\n", "if", "not", "permutation_test_2_flag", ":", "\n", "\t\t\t", "test_2_permutation", "=", "np", ".", "random", ".", "permutation", "(", "t_2_X", ".", "shape", "[", "0", "]", ")", "\n", "permutation_test_2_flag", "=", "True", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t", "t_2_X", "=", "t_2_X", "[", "test_2_permutation", ",", "]", "\n", "t_2_y", "=", "t_2_y", "[", "test_2_permutation", ",", "]", "\n", "", "", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "return", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "t_2_X", ",", "t_2_y", ",", "t_X_att", "\n", "", "else", ":", "\n", "\t\t", "return", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "t_X_att", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_new_train_batches": [[873, 882], ["len", "range", "len"], "function", ["None"], ["", "", "def", "get_new_train_batches", "(", "targets", ",", "sources", ",", "batch_size", ")", ":", "\n", "\t", "if", "len", "(", "targets", ")", "<", "batch_size", ":", "\n", "\t\t", "yield", "targets", ",", "sources", "\n", "", "else", ":", "\n", "\t\t", "for", "batch_i", "in", "range", "(", "0", ",", "len", "(", "sources", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t", "start_i", "=", "batch_i", "*", "batch_size", "\n", "sources_batch", "=", "sources", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "targets_batch", "=", "targets", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "yield", "targets_batch", ",", "sources_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify_union_directly": [[883, 1072], ["numpy.load", "ids.item.item", "numpy.load", "t_ids.item.item", "sorted", "label_binarize", "sorted", "label_binarize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "os.mkdir", "os.mkdir", "list", "list", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_mean", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "range", "tensorflow.Session", "sess.run", "tensorflow.train.Saver", "range", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "print", "numpy.save", "numpy.save", "numpy.save", "open", "open.write", "open.close", "ids.item.keys", "t_ids.item.keys", "len", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "os.mkdir", "os.mkdir", "os.mkdir", "os.mkdir", "enumerate", "numpy.array", "numpy.array", "numpy.array", "str", "str", "str", "len", "tensorflow.clip_by_value", "len", "train.get_new_train_batches"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_new_train_batches"], ["", "", "", "def", "encoder_classify_union_directly", "(", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "new_dir", ",", "ps", ",", "dataset", ")", ":", "\n", "\t", "global", "epochs", ",", "attention", ",", "manner", "\n", "epochs", "=", "300", "\n", "if", "dataset", "==", "'KGBD'", ":", "\n", "\t\t", "epochs", "=", "150", "\n", "", "try", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "new_dir", ")", "\n", "", "except", ":", "\n", "\t\t", "pass", "\n", "", "from", "sklearn", ".", "preprocessing", "import", "label_binarize", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "dataset", "=", "'IAS'", "\n", "", "ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_train_npy_data/ids_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "ids", "=", "ids", ".", "item", "(", ")", "\n", "t_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_ids", "=", "t_ids", ".", "item", "(", ")", "\n", "ids_keys", "=", "sorted", "(", "list", "(", "ids", ".", "keys", "(", ")", ")", ")", "\n", "classes", "=", "[", "i", "for", "i", "in", "ids_keys", "]", "\n", "y", "=", "label_binarize", "(", "y", ",", "classes", "=", "classes", ")", "\n", "t_ids_keys", "=", "sorted", "(", "list", "(", "t_ids", ".", "keys", "(", ")", ")", ")", "\n", "classes", "=", "[", "i", "for", "i", "in", "t_ids_keys", "]", "\n", "t_y", "=", "label_binarize", "(", "t_y", ",", "classes", "=", "classes", ")", "\n", "train_source", "=", "X", "\n", "train_target", "=", "y", "\n", "valid_source", "=", "t_X", "\n", "valid_target", "=", "t_y", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t", "first_size", "=", "rnn_size", "*", "time_steps", "*", "3", "\n", "", "else", ":", "\n", "\t\t", "first_size", "=", "rnn_size", "*", "3", "\n", "", "X_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "first_size", "]", ",", "name", "=", "'X_input'", ")", "\n", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "len", "(", "classes", ")", "]", ",", "name", "=", "'y_input'", ")", "\n", "lr", "=", "tf", ".", "Variable", "(", "0.0005", ",", "trainable", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'learning_rate'", ")", "\n", "W1", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "first_size", ",", "rnn_size", "]", ")", ",", "name", "=", "'W1'", ")", "\n", "b1", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "shape", "=", "[", "rnn_size", ",", "]", ")", ",", "name", "=", "'b1'", ")", "\n", "Wx_plus_b1", "=", "tf", ".", "matmul", "(", "X_input", ",", "W1", ")", "+", "b1", "\n", "l1", "=", "tf", ".", "nn", ".", "relu", "(", "Wx_plus_b1", ")", "\n", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "rnn_size", ",", "len", "(", "classes", ")", "]", ")", ",", "name", "=", "'W'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "shape", "=", "[", "len", "(", "classes", ")", ",", "]", ",", "name", "=", "'b'", ")", ")", "\n", "pred", "=", "tf", ".", "matmul", "(", "l1", ",", "W", ")", "+", "b", "\n", "with", "tf", ".", "name_scope", "(", "\"new_train\"", ")", ":", "\n", "\t\t", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ",", "name", "=", "\"Adam3\"", ")", "\n", "cost", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "pred", ",", "labels", "=", "y_input", ")", ")", "\n", "gradients", "=", "optimizer", ".", "compute_gradients", "(", "cost", ")", "\n", "capped_gradients", "=", "[", "(", "tf", ".", "clip_by_value", "(", "grad", ",", "-", "5.", ",", "5.", ")", ",", "var", ")", "for", "grad", ",", "var", "in", "gradients", "if", "grad", "is", "not", "None", "]", "\n", "train_op", "=", "optimizer", ".", "minimize", "(", "cost", ")", "\n", "correct_pred", "=", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "pred", ",", "1", ")", ",", "tf", ".", "argmax", "(", "y_input", ",", "1", ")", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_pred", ",", "tf", ".", "float32", ")", ")", "\n", "", "def", "get_new_train_batches", "(", "targets", ",", "sources", ",", "batch_size", ")", ":", "\n", "\t\t", "for", "batch_i", "in", "range", "(", "0", ",", "len", "(", "sources", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t", "start_i", "=", "batch_i", "*", "batch_size", "\n", "sources_batch", "=", "sources", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "targets_batch", "=", "targets", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "yield", "targets_batch", ",", "sources_batch", "\n", "", "", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "\t\t", "sess", ".", "run", "(", "init", ")", "\n", "step", "=", "0", "\n", "train_loss", "=", "[", "]", "\n", "test_loss", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "val_accs", "=", "[", "0", "]", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "try", ":", "\n", "\t\t\t", "os", ".", "mkdir", "(", "new_dir", ")", "\n", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "", "new_dir", "+=", "'/'", "+", "ps", "\n", "try", ":", "\n", "\t\t\t", "os", ".", "mkdir", "(", "new_dir", ")", "\n", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "# if attention == 'BA':", "\n", "# \tmanner == 'sc'", "\n", "", "for", "epoch_i", "in", "range", "(", "1", ",", "epochs", "+", "1", ")", ":", "\n", "\t\t\t", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "train_target", ",", "train_source", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "_", ",", "loss", ",", "acc", "=", "sess", ".", "run", "(", "[", "train_op", ",", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "if", "step", "%", "50", "==", "0", ":", "\n", "\t\t\t\t\t", "loss", ",", "train_acc", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "val_loss", "=", "[", "]", "\n", "val_acc", "=", "[", "]", "\n", "flag", "=", "0", "\n", "if", "valid_source", ".", "shape", "[", "0", "]", "<", "batch_size", ":", "\n", "\t\t\t\t\t\t", "flag", "=", "batch_size", "-", "valid_source", ".", "shape", "[", "0", "]", "\n", "valid_source", "=", "valid_source", ".", "tolist", "(", ")", "\n", "valid_target", "=", "valid_target", ".", "tolist", "(", ")", "\n", "valid_source", ".", "extend", "(", "[", "valid_source", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_target", ".", "extend", "(", "[", "valid_target", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_source", "=", "np", ".", "array", "(", "valid_source", ")", "\n", "valid_target", "=", "np", ".", "array", "(", "valid_target", ")", "\n", "", "if", "manner", "==", "'ap'", ":", "\n", "\t\t\t\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "", "for", "k", "in", "range", "(", "valid_source", ".", "shape", "[", "0", "]", "//", "batch_size", ")", ":", "\n", "\t\t\t\t\t\t", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "val_loss_t", ",", "val_acc_t", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "valid_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "val_loss", ".", "append", "(", "val_loss_t", ")", "\n", "val_acc", ".", "append", "(", "val_acc_t", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "val_loss_t", ",", "val_acc_t", ",", "frame_preds", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "valid_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "# pred_prob = frame_preds / np.tile(np.sum(frame_preds, axis=1), [frame_preds.shape[1], 1]).T", "\n", "# pred_prob = np.sum(frame_preds, axis=0)", "\n", "# all_frame_preds.extend(pred_prob)", "\n", "all_frame_preds", ".", "extend", "(", "frame_preds", ")", "\n", "val_loss", ".", "append", "(", "val_loss_t", ")", "\n", "val_acc", ".", "append", "(", "val_acc_t", ")", "\n", "", "", "if", "manner", "==", "'ap'", ":", "\n", "\t\t\t\t\t\t", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "valid_target", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "# print(sequence_pred)", "\n", "\t\t\t\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "# val_acc.append(val_acc_t)", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t", "if", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ">=", "max", "(", "val_accs", ")", ":", "\n", "\t\t\t\t\t\t\t", "saver", ".", "save", "(", "sess", ",", "new_dir", "+", "\"/trained_model.ckpt\"", ")", "\n", "", "val_accs", ".", "append", "(", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ")", "\n", "print", "(", "\n", "'Epoch {:>3}/{} Batch {:>4}/{} - Train Loss: {:>6.3f}  - Train_Acc: {:>6.3f} - Val_Acc {:>6.3f} {:>6.3f} (max)'", "\n", ".", "format", "(", "epoch_i", ",", "\n", "epochs", ",", "\n", "batch_i", ",", "\n", "len", "(", "train_target", ")", "//", "batch_size", ",", "\n", "loss", ",", "\n", "train_acc", ",", "\n", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ",", "\n", "max", "(", "val_accs", ")", "\n", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "if", "seq_acc_t", ">=", "max", "(", "val_accs", ")", ":", "\n", "\t\t\t\t\t\t\t", "saver", ".", "save", "(", "sess", ",", "new_dir", "+", "\"/trained_model.ckpt\"", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_X.npy'", ",", "valid_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_y.npy'", ",", "valid_target", ")", "\n", "# if epoch_i % 30 == 0:", "\n", "# \tevaluate_reid('AGEs_RN_models/' + dataset + '_' + attention + '_RN_' + manner)", "\n", "", "val_accs", ".", "append", "(", "seq_acc_t", ")", "\n", "print", "(", "\n", "'Epoch {:>3}/{} Batch {:>4}/{} - Train Loss: {:>6.3f}  - Train_Acc: {:>6.3f} - Val_Acc {:>6.3f} {:>6.3f} (max)'", "\n", ".", "format", "(", "epoch_i", ",", "\n", "epochs", ",", "\n", "batch_i", ",", "\n", "len", "(", "train_target", ")", "//", "batch_size", ",", "\n", "loss", ",", "\n", "train_acc", ",", "\n", "seq_acc_t", ",", "\n", "max", "(", "val_accs", ")", "\n", ")", ")", "\n", "", "", "train_loss", ".", "append", "(", "loss", ")", "\n", "test_loss", ".", "append", "(", "sum", "(", "val_loss", ")", "/", "len", "(", "val_loss", ")", ")", "\n", "step", "+=", "1", "\n", "# saver.save(sess, new_dir + \"/trained_model.ckpt\")", "\n", "", "", "np", ".", "save", "(", "new_dir", "+", "'/train_X.npy'", ",", "train_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/train_y.npy'", ",", "train_target", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_X.npy'", ",", "valid_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_y.npy'", ",", "valid_target", ")", "\n", "print", "(", "'Model Trained and Saved'", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/train_loss.npy'", ",", "np", ".", "array", "(", "train_loss", ")", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/test_loss.npy'", ",", "np", ".", "array", "(", "test_loss", ")", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/acc.npy'", ",", "np", ".", "array", "(", "accs", ")", ")", "\n", "disc_str", "=", "''", "\n", "disc_str", "+=", "str", "(", "train_loss", "[", "-", "1", "]", ")", "+", "'-'", "+", "str", "(", "np", ".", "min", "(", "train_loss", ")", ")", "+", "' '", "+", "str", "(", "test_loss", "[", "-", "1", "]", ")", "+", "'-'", "+", "str", "(", "\n", "np", ".", "min", "(", "test_loss", ")", ")", "+", "' '", "+", "str", "(", "np", ".", "max", "(", "acc", ")", ")", "\n", "f", "=", "open", "(", "ps", "+", "'.txt'", ",", "'w'", ")", "\n", "f", ".", "write", "(", "disc_str", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.encoder_classify_union_directly_IAS": [[1074, 1321], ["numpy.load", "ids.item.item", "numpy.load", "t_ids.item.item", "numpy.load", "t_2_ids.item.item", "sorted", "label_binarize", "sorted", "label_binarize", "sorted", "label_binarize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.relu", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.global_variables_initializer", "os.mkdir", "os.mkdir", "list", "list", "list", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.random_normal", "tensorflow.zeros", "tensorflow.matmul", "tensorflow.name_scope", "tensorflow.train.AdamOptimizer", "tensorflow.reduce_mean", "tf.train.AdamOptimizer.compute_gradients", "tf.train.AdamOptimizer.minimize", "tensorflow.equal", "tensorflow.reduce_mean", "range", "tensorflow.Session", "sess.run", "tensorflow.train.Saver", "range", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "open", "open.write", "open.close", "ids.item.keys", "t_ids.item.keys", "t_2_ids.item.keys", "len", "tensorflow.nn.softmax_cross_entropy_with_logits", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast", "os.mkdir", "os.mkdir", "enumerate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "str", "str", "str", "str", "len", "tensorflow.clip_by_value", "len", "train.get_new_train_batches"], "function", ["home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.get_new_train_batches"], ["", "def", "encoder_classify_union_directly_IAS", "(", "X", ",", "y", ",", "t_X", ",", "t_y", ",", "t_2_X", ",", "t_2_y", ",", "new_dir", ",", "ps", ",", "dataset", ")", ":", "\n", "\t", "global", "epochs", ",", "attention", ",", "manner", "\n", "epochs", "=", "300", "\n", "try", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "new_dir", ")", "\n", "", "except", ":", "\n", "\t\t", "pass", "\n", "", "from", "sklearn", ".", "preprocessing", "import", "label_binarize", "\n", "ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_train_npy_data/ids_'", "+", "dataset", "+", "'_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "ids", "=", "ids", ".", "item", "(", ")", "\n", "t_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'-A_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_ids", "=", "t_ids", ".", "item", "(", ")", "\n", "t_2_ids", "=", "np", ".", "load", "(", "'Datasets/'", "+", "dataset", "+", "'_test_npy_data/ids_'", "+", "dataset", "+", "'-B_'", "+", "str", "(", "time_steps", ")", "+", "'.npy'", ")", "\n", "t_2_ids", "=", "t_2_ids", ".", "item", "(", ")", "\n", "ids_keys", "=", "sorted", "(", "list", "(", "ids", ".", "keys", "(", ")", ")", ")", "\n", "classes", "=", "[", "i", "for", "i", "in", "ids_keys", "]", "\n", "y", "=", "label_binarize", "(", "y", ",", "classes", "=", "classes", ")", "\n", "t_ids_keys", "=", "sorted", "(", "list", "(", "t_ids", ".", "keys", "(", ")", ")", ")", "\n", "classes", "=", "[", "i", "for", "i", "in", "t_ids_keys", "]", "\n", "t_y", "=", "label_binarize", "(", "t_y", ",", "classes", "=", "classes", ")", "\n", "t_2_ids_keys", "=", "sorted", "(", "list", "(", "t_2_ids", ".", "keys", "(", ")", ")", ")", "\n", "classes", "=", "[", "i", "for", "i", "in", "t_2_ids_keys", "]", "\n", "t_2_y", "=", "label_binarize", "(", "t_2_y", ",", "classes", "=", "classes", ")", "\n", "train_source", "=", "X", "\n", "train_target", "=", "y", "\n", "valid_source", "=", "t_X", "\n", "valid_target", "=", "t_y", "\n", "valid_2_source", "=", "t_2_X", "\n", "valid_2_target", "=", "t_2_y", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t", "first_size", "=", "rnn_size", "*", "time_steps", "*", "3", "\n", "", "else", ":", "\n", "\t\t", "first_size", "=", "rnn_size", "*", "3", "\n", "", "X_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "first_size", "]", ",", "name", "=", "'X_input'", ")", "\n", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "len", "(", "classes", ")", "]", ",", "name", "=", "'y_input'", ")", "\n", "lr", "=", "tf", ".", "Variable", "(", "0.0005", ",", "trainable", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'learning_rate'", ")", "\n", "W1", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "first_size", ",", "rnn_size", "]", ")", ",", "name", "=", "'W1'", ")", "\n", "b1", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "shape", "=", "[", "rnn_size", ",", "]", ")", ",", "name", "=", "'b1'", ")", "\n", "Wx_plus_b1", "=", "tf", ".", "matmul", "(", "X_input", ",", "W1", ")", "+", "b1", "\n", "l1", "=", "tf", ".", "nn", ".", "relu", "(", "Wx_plus_b1", ")", "\n", "\n", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "[", "rnn_size", ",", "len", "(", "classes", ")", "]", ")", ",", "name", "=", "'W'", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "shape", "=", "[", "len", "(", "classes", ")", ",", "]", ",", "name", "=", "'b'", ")", ")", "\n", "pred", "=", "tf", ".", "matmul", "(", "l1", ",", "W", ")", "+", "b", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"new_train\"", ")", ":", "\n", "\t\t", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ",", "name", "=", "\"Adam3\"", ")", "\n", "cost", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "logits", "=", "pred", ",", "labels", "=", "y_input", ")", ")", "\n", "gradients", "=", "optimizer", ".", "compute_gradients", "(", "cost", ")", "\n", "capped_gradients", "=", "[", "(", "tf", ".", "clip_by_value", "(", "grad", ",", "-", "5.", ",", "5.", ")", ",", "var", ")", "for", "grad", ",", "var", "in", "gradients", "if", "grad", "is", "not", "None", "]", "\n", "train_op", "=", "optimizer", ".", "minimize", "(", "cost", ")", "\n", "correct_pred", "=", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "pred", ",", "1", ")", ",", "tf", ".", "argmax", "(", "y_input", ",", "1", ")", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_pred", ",", "tf", ".", "float32", ")", ")", "\n", "", "def", "get_new_train_batches", "(", "targets", ",", "sources", ",", "batch_size", ")", ":", "\n", "\t\t", "for", "batch_i", "in", "range", "(", "0", ",", "len", "(", "sources", ")", "//", "batch_size", ")", ":", "\n", "\t\t\t", "start_i", "=", "batch_i", "*", "batch_size", "\n", "sources_batch", "=", "sources", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "targets_batch", "=", "targets", "[", "start_i", ":", "start_i", "+", "batch_size", "]", "\n", "yield", "targets_batch", ",", "sources_batch", "\n", "", "", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ")", "as", "sess", ":", "\n", "\t\t", "sess", ".", "run", "(", "init", ")", "\n", "step", "=", "0", "\n", "train_loss", "=", "[", "]", "\n", "test_loss", "=", "[", "]", "\n", "test_2_loss", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "val_accs", "=", "[", "0", "]", "\n", "val_2_accs", "=", "[", "0", "]", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "new_dir", "+=", "'/'", "+", "ps", "\n", "try", ":", "\n", "\t\t\t", "os", ".", "mkdir", "(", "new_dir", ")", "\n", "", "except", ":", "\n", "\t\t\t", "pass", "\n", "# if attention == 'BA':", "\n", "# \tmanner == 'sc'", "\n", "", "for", "epoch_i", "in", "range", "(", "1", ",", "epochs", "+", "1", ")", ":", "\n", "\t\t\t", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "train_target", ",", "train_source", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "_", ",", "loss", ",", "acc", "=", "sess", ".", "run", "(", "[", "train_op", ",", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "if", "step", "%", "50", "==", "0", ":", "\n", "\t\t\t\t\t", "loss", ",", "train_acc", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "val_loss", "=", "[", "]", "\n", "val_acc", "=", "[", "]", "\n", "val_2_loss", "=", "[", "]", "\n", "val_2_acc", "=", "[", "]", "\n", "flag", "=", "0", "\n", "if", "valid_source", ".", "shape", "[", "0", "]", "<", "batch_size", ":", "\n", "\t\t\t\t\t\t", "flag", "=", "batch_size", "-", "valid_source", ".", "shape", "[", "0", "]", "\n", "valid_source", "=", "valid_source", ".", "tolist", "(", ")", "\n", "valid_target", "=", "valid_target", ".", "tolist", "(", ")", "\n", "valid_source", ".", "extend", "(", "[", "valid_source", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_target", ".", "extend", "(", "[", "valid_target", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_source", "=", "np", ".", "array", "(", "valid_source", ")", "\n", "valid_target", "=", "np", ".", "array", "(", "valid_target", ")", "\n", "", "if", "valid_2_source", ".", "shape", "[", "0", "]", "<", "batch_size", ":", "\n", "\t\t\t\t\t\t", "flag", "=", "batch_size", "-", "valid_2_source", ".", "shape", "[", "0", "]", "\n", "valid_2_source", "=", "valid_2_source", ".", "tolist", "(", ")", "\n", "valid_2_target", "=", "valid_2_target", ".", "tolist", "(", ")", "\n", "valid_2_source", ".", "extend", "(", "[", "valid_2_source", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_2_target", ".", "extend", "(", "[", "valid_2_target", "[", "0", "]", "]", "*", "flag", ")", "\n", "valid_2_source", "=", "np", ".", "array", "(", "valid_2_source", ")", "\n", "valid_2_target", "=", "np", ".", "array", "(", "valid_2_target", ")", "\n", "", "if", "manner", "==", "'ap'", ":", "\n", "\t\t\t\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "all_2_frame_preds", "=", "[", "]", "\n", "", "for", "k", "in", "range", "(", "valid_source", ".", "shape", "[", "0", "]", "//", "batch_size", ")", ":", "\n", "\t\t\t\t\t\t", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "val_loss_t", ",", "val_acc_t", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "valid_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "val_loss", ".", "append", "(", "val_loss_t", ")", "\n", "val_acc", ".", "append", "(", "val_acc_t", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "val_loss_t", ",", "val_acc_t", ",", "frame_preds", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "valid_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "all_frame_preds", ".", "extend", "(", "frame_preds", ")", "\n", "val_loss", ".", "append", "(", "val_loss_t", ")", "\n", "val_acc", ".", "append", "(", "val_acc_t", ")", "\n", "", "", "for", "k", "in", "range", "(", "valid_2_source", ".", "shape", "[", "0", "]", "//", "batch_size", ")", ":", "\n", "\t\t\t\t\t\t", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t\t", "val_2_loss_t", ",", "val_2_acc_t", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", "]", ",", "\n", "{", "X_input", ":", "valid_2_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_2_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "val_2_loss", ".", "append", "(", "val_2_loss_t", ")", "\n", "val_2_acc", ".", "append", "(", "val_2_acc_t", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t\t", "val_2_loss_t", ",", "val_2_acc_t", ",", "frame_2_preds", "=", "sess", ".", "run", "(", "\n", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "valid_2_source", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y_input", ":", "valid_2_target", "[", "k", "*", "batch_size", ":", "(", "k", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "all_2_frame_preds", ".", "extend", "(", "frame_2_preds", ")", "\n", "val_2_loss", ".", "append", "(", "val_2_loss_t", ")", "\n", "val_2_acc", ".", "append", "(", "val_2_acc_t", ")", "\n", "", "", "if", "manner", "==", "'ap'", ":", "\n", "\t\t\t\t\t\t", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "sequence_2_pred_correct", "=", "0", "\n", "sequence_2_num", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "valid_target", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "# print(sequence_pred)", "\n", "\t\t\t\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "for", "k", "in", "range", "(", "len", "(", "all_2_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t\t\t\t", "sequence_2_labels", "=", "np", ".", "argmax", "(", "valid_2_target", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "sequence_2_labels", "==", "np", ".", "tile", "(", "sequence_2_labels", "[", "0", "]", ",", "[", "sequence_2_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t\t\t\t", "frame_2_predictions", "=", "np", ".", "array", "(", "all_2_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_2_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_2_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_2_pred", "==", "sequence_2_labels", "[", "0", "]", ":", "\n", "# print(sequence_pred)", "\n", "\t\t\t\t\t\t\t\t\t", "sequence_2_pred_correct", "+=", "1", "\n", "", "sequence_2_num", "+=", "1", "\n", "", "", "seq_2_acc_t", "=", "sequence_2_pred_correct", "/", "sequence_2_num", "\n", "# val_acc.append(val_acc_t)", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t\t\t", "if", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ">=", "max", "(", "val_accs", ")", "or", "sum", "(", "val_2_acc", ")", "/", "len", "(", "val_2_acc", ")", ">=", "max", "(", "val_2_accs", ")", ":", "\n", "\t\t\t\t\t\t\t", "saver", ".", "save", "(", "sess", ",", "new_dir", "+", "\"/trained_model.ckpt\"", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_X.npy'", ",", "valid_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_y.npy'", ",", "valid_target", ")", "\n", "", "val_accs", ".", "append", "(", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ")", "\n", "val_2_accs", ".", "append", "(", "sum", "(", "val_2_acc", ")", "/", "len", "(", "val_2_acc", ")", ")", "\n", "print", "(", "\n", "'Epoch {:>3}/{} Batch {:>4}/{} - Train Loss: {:>6.3f}  - V_Acc (IAS-A): {:>6.3f} {:>6.3f} (max)  - V_Acc (IAS-B) {:>6.3f} {:>6.3f} (max)'", "\n", ".", "format", "(", "epoch_i", ",", "\n", "epochs", ",", "\n", "batch_i", ",", "\n", "len", "(", "train_target", ")", "//", "batch_size", ",", "\n", "loss", ",", "\n", "sum", "(", "val_acc", ")", "/", "len", "(", "val_acc", ")", ",", "\n", "max", "(", "val_accs", ")", ",", "\n", "sum", "(", "val_2_acc", ")", "/", "len", "(", "val_2_acc", ")", ",", "\n", "max", "(", "val_2_accs", ")", "\n", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "if", "seq_acc_t", ">", "0.5", "and", "seq_2_acc_t", ">", "0.5", ":", "\n", "\t\t\t\t\t\t\t", "if", "seq_acc_t", ">=", "max", "(", "val_accs", ")", "or", "seq_2_acc_t", ">=", "max", "(", "val_2_accs", ")", ":", "\n", "\t\t\t\t\t\t\t\t", "saver", ".", "save", "(", "sess", ",", "new_dir", "+", "\"/trained_model.ckpt\"", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_X.npy'", ",", "valid_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_y.npy'", ",", "valid_target", ")", "\n", "", "", "val_accs", ".", "append", "(", "seq_acc_t", ")", "\n", "val_2_accs", ".", "append", "(", "seq_2_acc_t", ")", "\n", "print", "(", "\n", "'Epoch {:>3}/{} Batch {:>4}/{} - Train Loss: {:>6.3f}  - V_Acc (IAS-A): {:>6.3f} {:>6.3f} (max) - V_Acc (IAS-B) {:>6.3f} {:>6.3f} (max)'", "\n", ".", "format", "(", "epoch_i", ",", "\n", "epochs", ",", "\n", "batch_i", ",", "\n", "len", "(", "train_target", ")", "//", "batch_size", ",", "\n", "loss", ",", "\n", "seq_acc_t", ",", "\n", "max", "(", "val_accs", ")", ",", "\n", "seq_2_acc_t", ",", "\n", "max", "(", "val_2_accs", ")", "\n", ")", ")", "\n", "", "", "train_loss", ".", "append", "(", "loss", ")", "\n", "test_loss", ".", "append", "(", "sum", "(", "val_loss", ")", "/", "len", "(", "val_loss", ")", ")", "\n", "test_2_loss", ".", "append", "(", "sum", "(", "val_2_loss", ")", "/", "len", "(", "val_2_loss", ")", ")", "\n", "step", "+=", "1", "\n", "# saver = tf.train.Saver()", "\n", "# new_dir += '/' + ps", "\n", "# try:", "\n", "# \tos.mkdir(new_dir)", "\n", "# except:", "\n", "# \tpass", "\n", "# saver.save(sess, new_dir + \"/trained_model.ckpt\")", "\n", "", "", "np", ".", "save", "(", "new_dir", "+", "'/train_X.npy'", ",", "train_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/train_y.npy'", ",", "train_target", ")", "\n", "# np.save(new_dir + '/train_preds', train_preds)", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_X.npy'", ",", "valid_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_y.npy'", ",", "valid_target", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_2_X.npy'", ",", "valid_2_source", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/val_2_y.npy'", ",", "valid_2_target", ")", "\n", "# np.save(new_dir + 'val_preds.npy', valid_preds)", "\n", "print", "(", "'Model Trained and Saved'", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/train_loss.npy'", ",", "np", ".", "array", "(", "train_loss", ")", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/test_A_loss.npy'", ",", "np", ".", "array", "(", "test_loss", ")", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/test_B_loss.npy'", ",", "np", ".", "array", "(", "test_loss", ")", ")", "\n", "np", ".", "save", "(", "new_dir", "+", "'/acc.npy'", ",", "np", ".", "array", "(", "accs", ")", ")", "\n", "disc_str", "=", "''", "\n", "disc_str", "+=", "str", "(", "train_loss", "[", "-", "1", "]", ")", "+", "'-'", "+", "str", "(", "np", ".", "min", "(", "train_loss", ")", ")", "+", "' '", "+", "str", "(", "test_loss", "[", "-", "1", "]", ")", "+", "'-'", "+", "str", "(", "\n", "np", ".", "min", "(", "test_loss", ")", ")", "+", "' '", "+", "str", "(", "np", ".", "max", "(", "acc", ")", ")", "\n", "f", "=", "open", "(", "ps", "+", "'.txt'", ",", "'w'", ")", "\n", "f", ".", "write", "(", "disc_str", ")", "\n", "f", ".", "close", "(", ")", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Kali-Hac_SGE-LA.None.train.evaluate_reid": [[1322, 1548], ["numpy.load", "numpy.load", "tensorflow.get_default_graph", "numpy.load", "numpy.load", "numpy.array", "label_binarize", "roc_curve", "auc", "print", "tensorflow.Session", "tensorflow.train.import_meta_graph", "tf.train.import_meta_graph.restore", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "tf.get_default_graph.get_tensor_by_name", "numpy.array", "label_binarize.ravel", "np.array.ravel", "plt.figure", "plt.plot", "plt.plot", "plt.xlim", "plt.ylim", "plt.xlabel", "plt.ylabel", "plt.title", "plt.legend", "plt.figure.savefig", "plt.close", "print", "enumerate", "print", "train.evaluate_reid.cal_AUC"], "function", ["None"], ["", "def", "evaluate_reid", "(", "model_dir", ")", ":", "\n", "# print('Print the Validation Loss and Rank-1 Accuracy for each testing bacth: ')", "\n", "\t", "global", "batch_size", ",", "dataset", ",", "manner", "\n", "X", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_X.npy'", ")", "\n", "y", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_y.npy'", ")", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t", "X_2", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_2_X.npy'", ")", "\n", "y_2", "=", "np", ".", "load", "(", "model_dir", "+", "'/val_2_y.npy'", ")", "\n", "", "if", "dataset", "==", "'BIWI'", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "28", ")", "]", "\n", "", "elif", "dataset", "==", "'KGBD'", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "164", ")", "]", "\n", "", "else", ":", "\n", "\t\t", "classes", "=", "[", "i", "for", "i", "in", "range", "(", "11", ")", "]", "\n", "", "checkpoint", "=", "model_dir", "+", "\"/trained_model.ckpt\"", "\n", "loaded_graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "from", "sklearn", ".", "preprocessing", "import", "label_binarize", "\n", "from", "sklearn", ".", "metrics", "import", "roc_curve", ",", "auc", "\n", "def", "cal_AUC", "(", "score_y", ",", "pred_y", ",", "ps", ",", "draw_pic", "=", "False", ")", ":", "\n", "\t\t", "score_y", "=", "np", ".", "array", "(", "score_y", ")", "\n", "pred_y", "=", "label_binarize", "(", "np", ".", "array", "(", "pred_y", ")", ",", "classes", "=", "classes", ")", "\n", "# Compute micro-average ROC curve and ROC area", "\n", "fpr", ",", "tpr", ",", "thresholds", "=", "roc_curve", "(", "pred_y", ".", "ravel", "(", ")", ",", "score_y", ".", "ravel", "(", ")", ")", "\n", "roc_auc", "=", "auc", "(", "fpr", ",", "tpr", ")", "\n", "print", "(", "ps", "+", "': '", "+", "str", "(", "roc_auc", ")", ")", "\n", "if", "draw_pic", ":", "\n", "\t\t\t", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "lw", "=", "2", "\n", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "color", "=", "'darkorange'", ",", "\n", "lw", "=", "lw", ",", "label", "=", "'ROC curve (area = %0.2f)'", "%", "roc_auc", ")", "\n", "plt", ".", "plot", "(", "[", "0", ",", "1", "]", ",", "[", "0", ",", "1", "]", ",", "color", "=", "'navy'", ",", "lw", "=", "lw", ",", "linestyle", "=", "'--'", ")", "\n", "plt", ".", "xlim", "(", "[", "0.0", ",", "1.0", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0.0", ",", "1.05", "]", ")", "\n", "plt", ".", "xlabel", "(", "'False Positive Rate'", ")", "\n", "plt", ".", "ylabel", "(", "'True Positive Rate'", ")", "\n", "plt", ".", "title", "(", "'Receiver operating characteristic: '", "+", "ps", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "\"lower right\"", ")", "\n", "fig", ".", "savefig", "(", "'30 epoch ROC'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", "with", "tf", ".", "Session", "(", "graph", "=", "loaded_graph", ",", "config", "=", "config", ")", "as", "sess", ":", "\n", "\t\t", "loader", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "checkpoint", "+", "'.meta'", ")", "\n", "loader", ".", "restore", "(", "sess", ",", "checkpoint", ")", "\n", "X_input", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'X_input:0'", ")", "\n", "y_input", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'y_input:0'", ")", "\n", "lr", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'learning_rate:0'", ")", "\n", "pred", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'add_1:0'", ")", "\n", "cost", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'new_train/Mean:0'", ")", "\n", "accuracy", "=", "loaded_graph", ".", "get_tensor_by_name", "(", "'new_train/Mean_1:0'", ")", "\n", "correct_num", "=", "0", "\n", "total_num", "=", "0", "\n", "rank_acc", "=", "{", "}", "\n", "ys", "=", "[", "]", "\n", "preds", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "print", "(", "'Validation Results on IAS-A: '", ")", "\n", "", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y", ",", "X", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "for", "i", "in", "range", "(", "y_batch", ".", "shape", "[", "0", "]", ")", ":", "\n", "\t\t\t\t\t", "for", "K", "in", "range", "(", "1", ",", "len", "(", "classes", ")", "+", "1", ")", ":", "\n", "\t\t\t\t\t\t", "if", "K", "not", "in", "rank_acc", ".", "keys", "(", ")", ":", "\n", "\t\t\t\t\t\t\t", "rank_acc", "[", "K", "]", "=", "0", "\n", "", "t", "=", "np", ".", "argpartition", "(", "pre", "[", "i", "]", ",", "-", "K", ")", "[", "-", "K", ":", "]", "\n", "if", "np", ".", "argmax", "(", "y_batch", "[", "i", "]", ")", "in", "t", ":", "\n", "\t\t\t\t\t\t\t", "rank_acc", "[", "K", "]", "+=", "1", "\n", "", "", "", "correct_num", "+=", "acc", "*", "batch_size", "\n", "total_num", "+=", "batch_size", "\n", "print", "(", "\n", "'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", ".", "format", "(", "cnt", ",", "\n", "loss", ",", "\n", "acc", ",", "\n", ")", ")", "\n", "", "total_acc", "=", "correct_num", "/", "total_num", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "total_acc", ")", "\n", "cal_AUC", "(", "score_y", "=", "preds", ",", "pred_y", "=", "ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y", ",", "X", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "all_frame_preds", ".", "extend", "(", "pre", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "sequence_preds", "=", "[", "]", "\n", "sequence_ys", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "y", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "# print(sequence_labels)", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "sequence_ys", ".", "append", "(", "sequence_labels", "[", "0", "]", ")", "\n", "aver", "=", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", "\n", "sequence_preds", ".", "append", "(", "aver", ")", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "# total_acc = correct_num / total_num", "\n", "# print('(Frame) Rank-1 Accuracy: %f' % total_acc)", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "seq_acc_t", ")", "\n", "sequence_ys", "=", "label_binarize", "(", "sequence_ys", ",", "classes", "=", "classes", ")", "\n", "# cal_AUC(score_y=preds,pred_y=ys, ps='nAUC')", "\n", "cal_AUC", "(", "score_y", "=", "sequence_preds", ",", "pred_y", "=", "sequence_ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "if", "dataset", "==", "'IAS'", ":", "\n", "\t\t\t", "print", "(", "'Validation Results on IAS-B: '", ")", "\n", "# IAS-B", "\n", "if", "manner", "==", "'sc'", ":", "\n", "\t\t\t\t", "correct_num", "=", "0", "\n", "total_num", "=", "0", "\n", "rank_acc", "=", "{", "}", "\n", "ys", "=", "[", "]", "\n", "preds", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "cnt", "=", "0", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y_2", ",", "X_2", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "# total_acc = correct_num / total_num", "\n", "", "print", "(", "'Rank-1 Accuracy: %f'", "%", "total_acc", ")", "\n", "cal_AUC", "(", "score_y", "=", "preds", ",", "pred_y", "=", "ys", ",", "ps", "=", "'nAUC'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "all_frame_preds", "=", "[", "]", "\n", "for", "batch_i", ",", "(", "y_batch", ",", "X_batch", ")", "in", "enumerate", "(", "\n", "get_new_train_batches", "(", "y_2", ",", "X_2", ",", "batch_size", ")", ")", ":", "\n", "\t\t\t\t\t", "loss", ",", "acc", ",", "pre", "=", "sess", ".", "run", "(", "[", "cost", ",", "accuracy", ",", "pred", "]", ",", "\n", "{", "X_input", ":", "X_batch", ",", "\n", "y_input", ":", "y_batch", ",", "\n", "lr", ":", "learning_rate", "}", ")", "\n", "ys", ".", "extend", "(", "y_batch", ".", "tolist", "(", ")", ")", "\n", "preds", ".", "extend", "(", "pre", ".", "tolist", "(", ")", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "all_frame_preds", ".", "extend", "(", "pre", ")", "\n", "cnt", "+=", "1", "\n", "# for i in range(y_batch.shape[0]):", "\n", "# \tfor K in range(1, len(classes) + 1):", "\n", "# \t\tif K not in rank_acc.keys():", "\n", "# \t\t\trank_acc[K] = 0", "\n", "# \t\tt = np.argpartition(pre[i], -K)[-K:]", "\n", "# \t\tif np.argmax(y_batch[i]) in t:", "\n", "# \t\t\trank_acc[K] += 1", "\n", "# correct_num += acc * batch_size", "\n", "# total_num += batch_size", "\n", "# print(", "\n", "# \t'Testing Bacth: {:>3} - Validation Loss: {:>6.3f} - Validation Rank-1 Accuracy {:>6.3f}'", "\n", "# \t\t.format(cnt,", "\n", "# \t            loss,", "\n", "# \t            acc,", "\n", "# \t            ))", "\n", "", "sequence_pred_correct", "=", "0", "\n", "sequence_num", "=", "0", "\n", "sequence_preds", "=", "[", "]", "\n", "sequence_ys", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "len", "(", "all_frame_preds", ")", "//", "time_steps", ")", ":", "\n", "\t\t\t\t\t", "sequence_labels", "=", "np", ".", "argmax", "(", "y_2", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "sequence_labels", "==", "np", ".", "tile", "(", "sequence_labels", "[", "0", "]", ",", "[", "sequence_labels", ".", "shape", "[", "0", "]", "]", ")", ")", ".", "all", "(", ")", ":", "\n", "\t\t\t\t\t\t", "frame_predictions", "=", "np", ".", "array", "(", "all_frame_preds", "[", "k", "*", "time_steps", ":", "(", "k", "+", "1", ")", "*", "time_steps", "]", ")", "\n", "sequence_pred", "=", "np", ".", "argmax", "(", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", ")", "\n", "if", "sequence_pred", "==", "sequence_labels", "[", "0", "]", ":", "\n", "\t\t\t\t\t\t\t", "sequence_pred_correct", "+=", "1", "\n", "", "sequence_num", "+=", "1", "\n", "sequence_ys", ".", "append", "(", "sequence_labels", "[", "0", "]", ")", "\n", "aver", "=", "np", ".", "average", "(", "frame_predictions", ",", "axis", "=", "0", ")", "\n", "sequence_preds", ".", "append", "(", "aver", ")", "\n", "", "", "seq_acc_t", "=", "sequence_pred_correct", "/", "sequence_num", "\n", "# total_acc = correct_num / total_num", "\n", "# print('(Frame) Rank-1 Accuracy: %f' % total_acc)", "\n", "print", "(", "'Rank-1 Accuracy: %f'", "%", "seq_acc_t", ")", "\n", "sequence_ys", "=", "label_binarize", "(", "sequence_ys", ",", "classes", "=", "classes", ")", "\n", "# cal_AUC(score_y=preds, pred_y=ys, ps='nAUC')", "\n", "cal_AUC", "(", "score_y", "=", "sequence_preds", ",", "pred_y", "=", "sequence_ys", ",", "ps", "=", "'nAUC'", ")", "\n", "\n"]]}