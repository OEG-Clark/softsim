{"home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Flatten.forward": [[13, 15], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.SEModule.__init__": [[22, 29], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "channels", ",", "channels", "//", "reduction", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "channels", "//", "reduction", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.SEModule.forward": [[30, 38], ["model.SEModule.avg_pool", "model.SEModule.fc1", "model.SEModule.relu", "model.SEModule.fc2", "model.SEModule.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.bottleneck_IR.__init__": [[40, 51], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.bottleneck_IR.forward": [[52, 56], ["model.bottleneck_IR.shortcut_layer", "model.bottleneck_IR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.bottleneck_IR_SE.__init__": [[58, 73], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "model.SEModule", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "PReLU", "(", "depth", ")", ",", "\n", "nn", ".", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "depth", ")", ",", "\n", "SEModule", "(", "depth", ",", "16", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.bottleneck_IR_SE.forward": [[74, 78], ["model.bottleneck_IR_SE.shortcut_layer", "model.bottleneck_IR_SE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Backbone.__init__": [[110, 135], ["torch.Module.__init__", "model.get_blocks", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "model.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_blocks"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "drop_ratio", ",", "mode", "=", "'ir'", ")", ":", "\n", "        ", "super", "(", "Backbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE", "\n", "", "self", ".", "input_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ")", "\n", "self", ".", "output_layer", "=", "nn", ".", "Sequential", "(", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop_ratio", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "\n", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Backbone.forward": [[136, 141], ["model.Backbone.input_layer", "model.Backbone.body", "model.Backbone.output_layer", "model.l2_norm"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "return", "l2_norm", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Conv_block.__init__": [[145, 150], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Conv_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_c", ")", "\n", "self", ".", "prelu", "=", "nn", ".", "PReLU", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Conv_block.forward": [[150, 155], ["model.Conv_block.conv", "model.Conv_block.bn", "model.Conv_block.prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Linear_block.__init__": [[157, 161], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Linear_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Linear_block.forward": [[161, 165], ["model.Linear_block.conv", "model.Linear_block.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Depth_Wise.__init__": [[167, 173], ["torch.Module.__init__", "model.Conv_block", "model.Conv_block", "model.Linear_block"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["     ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "residual", "=", "False", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Depth_Wise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv_block", "(", "in_c", ",", "out_c", "=", "groups", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_dw", "=", "Conv_block", "(", "groups", ",", "groups", ",", "groups", "=", "groups", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ")", "\n", "self", ".", "project", "=", "Linear_block", "(", "groups", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Depth_Wise.forward": [[173, 184], ["model.Depth_Wise.conv", "model.Depth_Wise.conv_dw", "model.Depth_Wise.project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "residual", ":", "\n", "            ", "short_cut", "=", "x", "\n", "", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "project", "(", "x", ")", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "output", "=", "short_cut", "+", "x", "\n", "", "else", ":", "\n", "            ", "output", "=", "x", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Residual.__init__": [[186, 192], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.append", "model.Depth_Wise"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ",", "num_block", ",", "groups", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_block", ")", ":", "\n", "            ", "modules", ".", "append", "(", "Depth_Wise", "(", "c", ",", "c", ",", "residual", "=", "True", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", ")", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Residual.forward": [[192, 194], ["model.Residual.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.MobileFaceNet.__init__": [[196, 214], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.Flatten", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.Conv_block", "model.Conv_block", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Conv_block", "model.Linear_block", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "MobileFaceNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "\n", "Conv_block", "(", "3", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ",", "\n", "Conv_block", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "64", ")", ",", "\n", "Depth_Wise", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "128", ")", ",", "\n", "Residual", "(", "64", ",", "num_block", "=", "4", ",", "groups", "=", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ",", "\n", "Depth_Wise", "(", "64", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "256", ")", ",", "\n", "Residual", "(", "128", ",", "num_block", "=", "6", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ",", "\n", "Depth_Wise", "(", "128", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "512", ")", ",", "\n", "Residual", "(", "128", ",", "num_block", "=", "2", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ",", "\n", "Conv_block", "(", "128", ",", "512", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", ",", "\n", "Linear_block", "(", "512", ",", "512", ",", "groups", "=", "512", ",", "kernel", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", ")", "\n", "self", ".", "flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "embedding_size", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "embedding_size", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.MobileFaceNet.forward": [[216, 220], ["model.MobileFaceNet.model", "model.MobileFaceNet.linear", "model.l2_norm", "model.MobileFaceNet.flatten"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "model", "(", "x", ")", "\n", "out", "=", "self", ".", "linear", "(", "self", ".", "flatten", "(", "out", ")", ")", "\n", "return", "l2_norm", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Arcface.__init__": [[225, 238], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "model.Arcface.kernel.data.uniform_().renorm_().mul_", "math.cos", "math.sin", "math.cos", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.Arcface.kernel.data.uniform_().renorm_", "model.Arcface.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "s", "=", "64.", ",", "m", "=", "0.5", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", "Arcface", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "kernel", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "# initial kernel", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "m", "=", "m", "# the margin value, default is 0.5", "\n", "self", ".", "s", "=", "s", "# scalar value default is 64, see normface https://arxiv.org/abs/1704.06369", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "mm", "=", "self", ".", "sin_m", "*", "m", "# issue 1", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.Arcface.forward": [[239, 264], ["len", "model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ",", "age", "=", "None", ")", ":", "\n", "# weights norm", "\n", "        ", "nB", "=", "len", "(", "embbedings", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "# cos(theta+m)", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "#         output = torch.mm(embbedings,kernel_norm)", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "cos_theta_2", "=", "torch", ".", "pow", "(", "cos_theta", ",", "2", ")", "\n", "sin_theta_2", "=", "1", "-", "cos_theta_2", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "sin_theta_2", ")", "\n", "\n", "cos_theta_m", "=", "(", "cos_theta", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", ")", "\n", "# this condition controls the theta+m should in range [0, pi]", "\n", "#      0<=theta+m<=pi", "\n", "#     -m<=theta<=pi-m", "\n", "cond_v", "=", "cos_theta", "-", "self", ".", "threshold", "\n", "cond_mask", "=", "cond_v", "<=", "0", "\n", "keep_val", "=", "(", "cos_theta", "-", "self", ".", "mm", ")", "# when theta not in [0,pi], use cosface instead", "\n", "cos_theta_m", "[", "cond_mask", "]", "=", "keep_val", "[", "cond_mask", "]", "\n", "output", "=", "cos_theta", "*", "1.0", "# a little bit hacky way to prevent in_place operation on cos_theta", "\n", "idx_", "=", "torch", ".", "arange", "(", "0", ",", "nB", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "output", "[", "idx_", ",", "label", "]", "=", "cos_theta_m", "[", "idx_", ",", "label", "]", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm": [[16, 20], ["torch.norm", "torch.norm", "torch.norm", "torch.div", "torch.div", "torch.div"], "function", ["None"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block": [[82, 84], ["model.Bottleneck", "model.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "stride", "=", "2", ")", ":", "\n", "  ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ")", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_blocks": [[85, 108], ["model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block"], "function", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.separate_bn_paras": [[11, 27], ["isinstance", "str", "str", "modules.modules", "str", "paras_only_bn.extend", "paras_wo_bn.extend", "layer.parameters", "layer.parameters"], "function", ["None"], ["def", "separate_bn_paras", "(", "modules", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "modules", ",", "list", ")", ":", "\n", "        ", "modules", "=", "[", "*", "modules", ".", "modules", "(", ")", "]", "\n", "", "paras_only_bn", "=", "[", "]", "\n", "paras_wo_bn", "=", "[", "]", "\n", "for", "layer", "in", "modules", ":", "\n", "        ", "if", "'model'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "if", "'container'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "if", "'batchnorm'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "                ", "paras_only_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "paras_wo_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "", "", "return", "paras_only_bn", ",", "paras_wo_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.hflip_batch": [[30, 42], ["torchvision.transforms.Compose", "torch.empty_like", "enumerate", "trans.Compose.", "torchvision.transforms.ToPILImage", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "def", "hflip_batch", "(", "imgs_tensor", ")", ":", "\n", "    ", "hflip", "=", "trans", ".", "Compose", "(", "[", "\n", "de_preprocess", ",", "\n", "trans", ".", "ToPILImage", "(", ")", ",", "\n", "trans", ".", "functional", ".", "hflip", ",", "\n", "trans", ".", "ToTensor", "(", ")", ",", "\n", "trans", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "]", ")", "\n", "hfliped_imgs", "=", "torch", ".", "empty_like", "(", "imgs_tensor", ")", "\n", "for", "i", ",", "img_ten", "in", "enumerate", "(", "imgs_tensor", ")", ":", "\n", "        ", "hfliped_imgs", "[", "i", "]", "=", "hflip", "(", "img_ten", ")", "\n", "", "return", "hfliped_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.get_time": [[43, 45], ["[].replace().replace", "[].replace", "str", "datetime.datetime.now"], "function", ["None"], ["", "def", "get_time", "(", ")", ":", "\n", "    ", "return", "(", "str", "(", "datetime", ".", "now", "(", ")", ")", "[", ":", "-", "10", "]", ")", ".", "replace", "(", "' '", ",", "'-'", ")", ".", "replace", "(", "':'", ",", "'-'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.gen_plot": [[46, 58], ["matplotlib.figure", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.plot", "io.BytesIO", "matplotlib.savefig", "io.BytesIO.seek", "matplotlib.close"], "function", ["None"], ["", "def", "gen_plot", "(", "fpr", ",", "tpr", ")", ":", "\n", "    ", "\"\"\"Create a pyplot plot and save to buffer.\"\"\"", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "xlabel", "(", "\"FPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "ylabel", "(", "\"TPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "title", "(", "\"ROC Curve\"", ",", "fontsize", "=", "14", ")", "\n", "plot", "=", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "linewidth", "=", "2", ")", "\n", "buf", "=", "io", ".", "BytesIO", "(", ")", "\n", "plt", ".", "savefig", "(", "buf", ",", "format", "=", "'jpeg'", ")", "\n", "buf", ".", "seek", "(", "0", ")", "\n", "plt", ".", "close", "(", ")", "\n", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.cos_dist": [[59, 61], ["torch.sum", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "cos_dist", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "return", "torch", ".", "sum", "(", "x1", "*", "x2", ")", "/", "(", "torch", ".", "norm", "(", "x1", ")", "*", "torch", ".", "norm", "(", "x2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.fixed_img_list": [[63, 76], ["open", "open.close", "random.shuffle", "open.readline", "lines.append"], "function", ["None"], ["", "def", "fixed_img_list", "(", "lfw_pair_text", ")", ":", "\n", "    ", "f", "=", "open", "(", "lfw_pair_text", ",", "'r'", ")", "\n", "lines", "=", "[", "]", "\n", "\n", "while", "True", ":", "\n", "        ", "line", "=", "f", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "            ", "break", "\n", "", "lines", ".", "append", "(", "line", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n", "random", ".", "shuffle", "(", "lines", ")", "\n", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.evaluate": [[78, 89], ["np.arange", "calculate_roc", "np.asarray"], "function", ["None"], ["", "def", "evaluate", "(", "embeddings", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ")", ":", "\n", "# Calculate evaluation metrics", "\n", "    ", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "4", ",", "0.01", ")", "\n", "embeddings1", "=", "embeddings", "[", "0", ":", ":", "2", "]", "\n", "embeddings2", "=", "embeddings", "[", "1", ":", ":", "2", "]", "\n", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", "=", "calculate_roc", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "np", ".", "asarray", "(", "actual_issame", ")", ",", "nrof_folds", "=", "nrof_folds", ",", "pca", "=", "pca", ")", "\n", "#     thresholds = np.arange(0, 4, 0.001)", "\n", "#     val, val_std, far = calculate_val(thresholds, embeddings1, embeddings2,", "\n", "#                                       np.asarray(actual_issame), 1e-3, nrof_folds=nrof_folds)", "\n", "#     return tpr, fpr, accuracy, best_thresholds, val, val_std, far", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.evaluate_dist": [[90, 102], ["np.arange", "calculate_roc_dist", "np.asarray"], "function", ["None"], ["", "def", "evaluate_dist", "(", "embeddings", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ")", ":", "\n", "# Calculate evaluation metrics", "\n", "    ", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "4", ",", "0.01", ")", "\n", "embeddings1", "=", "embeddings", "[", "0", ":", ":", "2", "]", "\n", "embeddings2", "=", "embeddings", "[", "1", ":", ":", "2", "]", "\n", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "dist", "=", "calculate_roc_dist", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "\n", "np", ".", "asarray", "(", "actual_issame", ")", ",", "nrof_folds", "=", "nrof_folds", ",", "pca", "=", "pca", ")", "\n", "#     thresholds = np.arange(0, 4, 0.001)", "\n", "#     val, val_std, far = calculate_val(thresholds, embeddings1, embeddings2,", "\n", "#                                       np.asarray(actual_issame), 1e-3, nrof_folds=nrof_folds)", "\n", "#     return tpr, fpr, accuracy, best_thresholds, val, val_std, far", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "dist", "", "", ""]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.__init__": [[15, 80], ["model.Backbone().to", "print", "data.data_pipe.get_train_loader", "model.Arcface().to", "utils.separate_bn_paras", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "len", "print", "print", "torch.load", "torch.load", "torch.load", "torch.load", "learner.Face_learner.model.load_state_dict", "print", "wandb.init", "SummaryWriter", "model.Backbone", "model.Arcface"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.get_train_loader", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.separate_bn_paras"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "train", "=", "args", ".", "train", "\n", "self", ".", "model", "=", "Backbone", "(", "args", ".", "net_depth", ",", "args", ".", "drop_ratio", ",", "args", ".", "net_mode", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "if", "args", ".", "model_dir", "!=", "''", ":", "\n", "            ", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_dir", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "state_dict", "=", "state_dict", ")", "\n", "print", "(", "f'loading model from {args.model_dir}'", ")", "\n", "", "print", "(", "'{}_{} model generated'", ".", "format", "(", "args", ".", "net_mode", ",", "args", ".", "net_depth", ")", ")", "\n", "\n", "if", "not", "args", ".", "train", ":", "\n", "            ", "self", ".", "fgnet20_best_acc", ",", "self", ".", "fgnet30_best_acc", ",", "self", ".", "agedb20_best_acc", ",", "self", ".", "agedb30_best_acc", ",", "self", ".", "lag_best_acc", "=", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "\n", "self", ".", "data_dir2best_acc", "=", "{", "\n", "'fgnet20_child'", ":", "self", ".", "fgnet20_best_acc", ",", "\n", "'fgnet30_child'", ":", "self", ".", "fgnet30_best_acc", ",", "\n", "'agedb20_child'", ":", "self", ".", "agedb20_best_acc", ",", "\n", "'agedb30_child'", ":", "self", ".", "agedb30_best_acc", ",", "\n", "'lag'", ":", "self", ".", "lag_best_acc", "}", "\n", "return", "\n", "\n", "", "if", "args", ".", "wandb", ":", "\n", "            ", "import", "wandb", "\n", "wandb", ".", "init", "(", "project", "=", "f\"Inter-Prototype (BMVC2021)\"", ")", "\n", "wandb", ".", "run", ".", "name", "=", "args", ".", "exp", "\n", "\n", "", "if", "args", ".", "tensorboard", ":", "\n", "            ", "from", "tensorboardX", "import", "SummaryWriter", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "f'result/summary/{args.exp}'", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "data_mode", "==", "'ms1m'", ":", "\n", "            ", "self", ".", "milestones", "=", "[", "14", ",", "19", ",", "23", "]", "\n", "self", ".", "epoch", "=", "25", "\n", "", "else", ":", "\n", "            ", "self", ".", "milestones", "=", "[", "28", ",", "38", ",", "46", "]", "# same milestone used in CurricularFace", "\n", "self", ".", "epoch", "=", "50", "\n", "\n", "", "self", ".", "step", "=", "0", "\n", "self", ".", "loader", ",", "self", ".", "class_num", ",", "self", ".", "child_identity", "=", "get_train_loader", "(", "args", ")", "\n", "self", ".", "head", "=", "Arcface", "(", "embedding_size", "=", "args", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ",", "args", "=", "self", ".", "args", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "paras_only_bn", ",", "paras_wo_bn", "=", "separate_bn_paras", "(", "self", ".", "model", ")", "\n", "self", ".", "optimizer1", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_wo_bn", "+", "[", "self", ".", "head", ".", "kernel", "]", ",", "'weight_decay'", ":", "5e-4", "}", ",", "\n", "]", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ")", "\n", "\n", "self", ".", "optimizer2", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_only_bn", "}", "\n", "]", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ")", "\n", "\n", "\n", "self", ".", "board_loss_every", "=", "args", ".", "loss_freq", "\n", "self", ".", "evaluate_every", "=", "len", "(", "self", ".", "loader", ")", "\n", "self", ".", "save_every", "=", "args", ".", "save_freq", "\n", "\n", "print", "(", "f'total epochs: {self.epoch} || curr milestones: {self.milestones} || class num: {self.class_num}'", ")", "\n", "print", "(", "args", ")", "\n", "\n", "self", ".", "fgnet20_best_acc", ",", "self", ".", "fgnet30_best_acc", ",", "self", ".", "agedb20_best_acc", ",", "self", ".", "agedb30_best_acc", ",", "self", ".", "lag_best_acc", "=", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "\n", "self", ".", "data_dir2best_acc", "=", "{", "\n", "'fgnet20_child'", ":", "self", ".", "fgnet20_best_acc", ",", "\n", "'fgnet30_child'", ":", "self", ".", "fgnet30_best_acc", ",", "\n", "'agedb20_child'", ":", "self", ".", "agedb20_best_acc", ",", "\n", "'agedb30_child'", ":", "self", ".", "agedb30_best_acc", ",", "\n", "'lag'", ":", "self", ".", "lag_best_acc", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.preprocess_text": [[81, 91], ["os.path.join", "sorted", "utils.fixed_img_list", "int", "int", "line.split", "line.split", "line.split", "line.split"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.fixed_img_list"], ["", "def", "preprocess_text", "(", "self", ",", "txt_root", ",", "txt_dir", ",", "data_dir", "=", "None", ")", ":", "\n", "        ", "text_path", "=", "os", ".", "path", ".", "join", "(", "txt_root", ",", "txt_dir", ")", "\n", "lines", "=", "sorted", "(", "fixed_img_list", "(", "text_path", ")", ")", "\n", "if", "data_dir", "is", "None", ":", "\n", "            ", "pairs", "=", "[", "' '", ".", "join", "(", "line", ".", "split", "(", "' '", ")", "[", "1", ":", "]", ")", "for", "line", "in", "lines", "]", "\n", "labels", "=", "[", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "for", "line", "in", "lines", "]", "\n", "", "elif", "data_dir", "==", "'cacd_vs'", "or", "data_dir", "==", "'morph'", ":", "\n", "            ", "pairs", "=", "[", "' '", ".", "join", "(", "line", ".", "split", "(", "' '", ")", "[", ":", "2", "]", ")", "for", "line", "in", "lines", "]", "\n", "labels", "=", "[", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "-", "1", "]", "[", "0", "]", ")", "for", "line", "in", "lines", "]", "\n", "", "return", "pairs", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.verification": [[93, 149], ["torchvision.transforms.Compose", "net.eval", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "enumerate", "len", "len", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "tqdm.tqdm.tqdm", "torchvision.transforms.Compose.unsqueeze().to", "torchvision.transforms.Compose.unsqueeze().to", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "net", "torch.stack.append", "torch.stack.append", "int", "torch.ByteTensor.append", "torch.ByteTensor.append", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "correct.size", "th.item", "utils.cos_dist().cpu", "pair.split", "torchvision.transforms.Compose.unsqueeze", "torchvision.transforms.Compose.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pair.split", "utils.cos_dist", "pair.split", "torchvision.transforms.Compose.", "torchvision.transforms.Compose.", "PIL.Image.open", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.utils.cos_dist"], ["", "def", "verification", "(", "self", ",", "net", ",", "label_list", ",", "pair_list", ",", "transform", ",", "data_dir", "=", "None", ")", ":", "\n", "        ", "similarities", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "assert", "len", "(", "label_list", ")", "==", "len", "(", "pair_list", ")", "\n", "\n", "trans_list", "=", "[", "]", "\n", "trans_list", "+=", "[", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "trans_list", "+=", "[", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "]", "\n", "t", "=", "transforms", ".", "Compose", "(", "trans_list", ")", "\n", "\n", "if", "len", "(", "label_list", ")", "==", "0", ":", "\n", "            ", "return", "0", ",", "0", ",", "0", "\n", "", "net", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx", ",", "pair", "in", "enumerate", "(", "tqdm", "(", "pair_list", ")", ")", ":", "\n", "                ", "if", "data_dir", "is", "None", ":", "\n", "                    ", "if", "'png'", "in", "pair", ":", "\n", "                        ", "path_1", ",", "path_2", "=", "pair", ".", "split", "(", "'.png '", ")", "\n", "path_1", "=", "path_1", "+", "'.png'", "\n", "path_2", "=", "path_2", "[", ":", "-", "1", "]", "\n", "", "elif", "'jpg'", "in", "pair", ":", "\n", "                        ", "path_1", ",", "path_2", "=", "pair", ".", "split", "(", "'.jpg '", ")", "\n", "path_1", "=", "path_1", "+", "'.jpg'", "\n", "path_2", "=", "path_2", "[", ":", "-", "1", "]", "\n", "", "elif", "'JPG'", "in", "pair", ":", "\n", "                        ", "path_1", ",", "path_2", "=", "pair", ".", "split", "(", "'.JPG '", ")", "\n", "path_1", "=", "path_1", "+", "'.JPG'", "\n", "path_2", "=", "path_2", "[", ":", "-", "1", "]", "\n", "\n", "", "", "img_1", "=", "t", "(", "Image", ".", "open", "(", "path_1", ")", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "img_2", "=", "t", "(", "Image", ".", "open", "(", "path_2", ")", ")", ".", "unsqueeze", "(", "dim", "=", "0", ")", ".", "to", "(", "self", ".", "args", ".", "device", ")", "\n", "imgs", "=", "torch", ".", "cat", "(", "(", "img_1", ",", "img_2", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# Extract feature and save", "\n", "features", "=", "net", "(", "imgs", ")", "\n", "similarities", ".", "append", "(", "cos_dist", "(", "features", "[", "0", "]", ",", "features", "[", "1", "]", ")", ".", "cpu", "(", ")", ")", "\n", "label", "=", "int", "(", "label_list", "[", "idx", "]", ")", "\n", "labels", ".", "append", "(", "label", ")", "\n", "\n", "\n", "", "", "best_accr", "=", "0.0", "\n", "best_th", "=", "0.0", "\n", "\n", "list_th", "=", "similarities", "\n", "similarities", "=", "torch", ".", "stack", "(", "similarities", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "ByteTensor", "(", "label_list", ")", "\n", "for", "i", ",", "th", "in", "enumerate", "(", "list_th", ")", ":", "\n", "            ", "pred", "=", "(", "similarities", ">=", "th", ")", "\n", "correct", "=", "(", "pred", "==", "labels", ")", "\n", "accr", "=", "torch", ".", "sum", "(", "correct", ")", ".", "item", "(", ")", "/", "correct", ".", "size", "(", "0", ")", "\n", "\n", "if", "accr", ">", "best_accr", ":", "\n", "                ", "best_accr", "=", "accr", "\n", "best_th", "=", "th", ".", "item", "(", ")", "\n", "\n", "", "", "return", "best_accr", ",", "best_th", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.evaluate": [[150, 182], ["torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "print", "learner.Face_learner.preprocess_text", "learner.Face_learner.verification", "print", "print", "learner.Face_learner.save_model", "print", "learner.Face_learner.save_best_model", "wandb.log", "wandb.log", "learner.Face_learner.writer.add_scalar", "learner.Face_learner.writer.add_scalar"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.preprocess_text", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.verification", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.save_model", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.save_best_model"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "trans_list", "=", "[", "]", "\n", "trans_list", "+=", "[", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "trans_list", "+=", "[", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "]", "\n", "t", "=", "transforms", ".", "Compose", "(", "trans_list", ")", "\n", "\n", "txt_root", "=", "'./dataset/test/txt_files'", "\n", "# data_dir_list = ['fgnet20_child', 'fgnet30_child', 'agedb20_child', 'agedb30_child', 'lag']", "\n", "data_dir_list", "=", "[", "'lag'", ",", "'fgnet20_child'", ",", "'fgnet30_child'", ",", "'agedb20_child'", ",", "'agedb30_child'", "]", "\n", "\n", "for", "txt_dir", "in", "data_dir_list", ":", "\n", "            ", "print", "(", "f'working on : {txt_dir}'", ")", "\n", "pair_list", ",", "label_list", "=", "self", ".", "preprocess_text", "(", "txt_root", ",", "txt_dir", "+", "'.txt'", ")", "\n", "curr_acc", ",", "curr_best_threshold", "=", "self", ".", "verification", "(", "self", ".", "model", ",", "label_list", ",", "pair_list", ",", "transform", "=", "t", ")", "\n", "print", "(", "f'txt_dir: {txt_dir}, curr_accr: {curr_acc}'", ")", "\n", "if", "self", ".", "train", ":", "\n", "                ", "self", ".", "save_model", "(", "self", ".", "args", ",", "txt_dir", ",", "curr_acc", ")", "\n", "\n", "if", "curr_acc", ">", "self", ".", "data_dir2best_acc", "[", "txt_dir", "]", ":", "\n", "                    ", "self", ".", "data_dir2best_acc", "[", "txt_dir", "]", "=", "curr_acc", "\n", "print", "(", "f'saving best {txt_dir} model....'", ")", "\n", "self", ".", "save_best_model", "(", "self", ".", "args", ",", "txt_dir", ",", "self", ".", "data_dir2best_acc", "[", "txt_dir", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "wandb", ":", "\n", "                    ", "wandb", ".", "log", "(", "{", "txt_dir", "+", "'_acc'", ":", "curr_acc", "}", ",", "step", "=", "self", ".", "step", ")", "\n", "wandb", ".", "log", "(", "{", "txt_dir", "+", "'_best_acc'", ":", "self", ".", "data_dir2best_acc", "[", "txt_dir", "]", "}", ",", "step", "=", "self", ".", "step", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "tensorboard", ":", "\n", "                    ", "self", ".", "writer", ".", "add_scalar", "(", "f\"acc/{txt_dir}_acc'\"", ",", "curr_acc", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "f\"acc/{txt_dir}_best_acc'\"", ",", "self", ".", "data_dir2best_acc", "[", "txt_dir", "]", ",", "self", ".", "step", ")", "\n", "\n", "", "", "print", "(", "f'{txt_dir} => curr acc: {curr_acc} || curr best_acc: {self.data_dir2best_acc[txt_dir]}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.train_prototype": [[184, 260], ["learner.Face_learner.model.train", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.MSELoss", "torch.MSELoss", "print", "range", "print", "tqdm.tqdm.tqdm", "learner.Face_learner.schedule_lr", "iter", "learner.Face_learner.optimizer1.zero_grad", "learner.Face_learner.optimizer2.zero_grad", "imgs.to.to.to", "labels.to.to.to", "learner.Face_learner.model", "learner.Face_learner.head", "torch.CrossEntropyLoss.", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.MSELoss.", "loss.backward", "loss.item", "nn.CrossEntropyLoss.item", "nn.MSELoss.item", "child_total_loss.item", "learner.Face_learner.optimizer1.step", "learner.Face_learner.optimizer2.step", "model.l2_norm", "learner.Face_learner.model.eval", "print", "learner.Face_learner.evaluate", "learner.Face_learner.model.train", "model.l2_norm", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "wandb.log", "learner.Face_learner.writer.add_scalar", "learner.Face_learner.writer.add_scalar", "learner.Face_learner.writer.add_scalar", "learner.Face_learner.writer.add_scalar"], "methods", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.schedule_lr", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.evaluate", "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.model.l2_norm"], ["", "", "def", "train_prototype", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "running_loss", "=", "0.", "\n", "running_arcface_loss", ",", "running_child_loss", ",", "running_child_total_loss", "=", "0.0", ",", "0.0", ",", "0.0", "\n", "ce_loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "mse_loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "print", "(", "f'total epoch: {self.epoch}'", ")", "\n", "for", "e", "in", "range", "(", "self", ".", "epoch", ")", ":", "\n", "            ", "print", "(", "'epoch {} started'", ".", "format", "(", "e", ")", ")", "\n", "if", "e", "in", "self", ".", "milestones", ":", "\n", "                ", "self", ".", "schedule_lr", "(", ")", "\n", "", "for", "imgs", ",", "labels", ",", "ages", "in", "tqdm", "(", "iter", "(", "self", ".", "loader", ")", ")", ":", "\n", "                ", "self", ".", "optimizer1", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer2", ".", "zero_grad", "(", ")", "\n", "imgs", "=", "imgs", ".", "to", "(", "args", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "embeddings", "=", "self", ".", "model", "(", "imgs", ")", "\n", "thetas", "=", "self", ".", "head", "(", "embeddings", ",", "labels", ")", "\n", "arcface_loss", "=", "ce_loss", "(", "thetas", ",", "labels", ")", "\n", "\n", "kernel", "=", "self", ".", "head", ".", "kernel", "[", ":", ",", "self", ".", "child_identity", "]", "\n", "prototype_matrix", "=", "torch", ".", "mm", "(", "l2_norm", "(", "kernel", ",", "axis", "=", "0", ")", ".", "T", ",", "l2_norm", "(", "kernel", ",", "axis", "=", "0", ")", ")", "\n", "\n", "prototype_label", "=", "torch", ".", "eye", "(", "prototype_matrix", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "child_loss", "=", "mse_loss", "(", "prototype_matrix", ",", "prototype_label", ")", "\n", "child_total_loss", "=", "self", ".", "args", ".", "lambda_child", "*", "child_loss", "\n", "\n", "loss", "=", "arcface_loss", "+", "child_total_loss", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "running_arcface_loss", "+=", "arcface_loss", ".", "item", "(", ")", "\n", "running_child_loss", "+=", "child_loss", ".", "item", "(", ")", "\n", "running_child_total_loss", "+=", "child_total_loss", ".", "item", "(", ")", "\n", "\n", "self", ".", "optimizer1", ".", "step", "(", ")", "\n", "self", ".", "optimizer2", ".", "step", "(", ")", "\n", "\n", "del", "embeddings", ",", "ages", "\n", "del", "imgs", ",", "labels", ",", "thetas", ",", "arcface_loss", "\n", "\n", "if", "self", ".", "step", "%", "self", ".", "board_loss_every", "==", "0", ":", "\n", "                    ", "loss_board", "=", "running_loss", "/", "self", ".", "board_loss_every", "\n", "arcface_loss_board", "=", "running_arcface_loss", "/", "self", ".", "board_loss_every", "\n", "\n", "child_loss_board", "=", "running_child_loss", "/", "self", ".", "board_loss_every", "\n", "child_total_loss_board", "=", "running_child_total_loss", "/", "self", ".", "board_loss_every", "\n", "\n", "if", "self", ".", "args", ".", "wandb", ":", "\n", "                        ", "wandb", ".", "log", "(", "{", "\n", "\"train_loss\"", ":", "loss_board", ",", "\n", "\"arcface_total_loss\"", ":", "arcface_loss_board", ",", "\n", "\"child_loss\"", ":", "child_loss_board", ",", "\n", "\"child_total_loss\"", ":", "child_total_loss_board", ",", "\n", "}", ",", "step", "=", "self", ".", "step", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "tensorboard", ":", "\n", "                        ", "self", ".", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "loss_board", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'arcface_total_loss'", ",", "arcface_loss_board", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'child_loss'", ",", "child_loss_board", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'child_total_loss'", ",", "child_total_loss_board", ",", "self", ".", "step", ")", "\n", "\n", "", "running_loss", "=", "0.", "\n", "running_arcface_loss", "=", "0.0", "\n", "running_child_loss", "=", "0.0", "\n", "running_child_total_loss", "=", "0.0", "\n", "\n", "", "if", "self", ".", "step", "%", "self", ".", "evaluate_every", "==", "0", "and", "self", ".", "step", "!=", "0", ":", "\n", "                    ", "self", ".", "model", ".", "eval", "(", ")", "\n", "print", "(", "'evaluating....'", ")", "\n", "self", ".", "evaluate", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "", "self", ".", "step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.schedule_lr": [[261, 268], ["print", "print"], "methods", ["None"], ["", "", "", "def", "schedule_lr", "(", "self", ")", ":", "\n", "        ", "for", "params", "in", "self", ".", "optimizer1", ".", "param_groups", ":", "\n", "            ", "params", "[", "'lr'", "]", "/=", "10", "\n", "", "for", "params", "in", "self", ".", "optimizer2", ".", "param_groups", ":", "\n", "            ", "params", "[", "'lr'", "]", "/=", "10", "\n", "", "print", "(", "self", ".", "optimizer1", ")", "\n", "print", "(", "self", ".", "optimizer2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.save_best_model": [[269, 274], ["os.path.join", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "learner.Face_learner.model.state_dict", "os.path.join", "learner.Face_learner.head.state_dict", "os.path.join"], "methods", ["None"], ["", "def", "save_best_model", "(", "self", ",", "args", ",", "test_dir", ",", "accuracy", ")", ":", "\n", "        ", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "f'best/{args.exp}/{test_dir}'", ")", "\n", "os", ".", "makedirs", "(", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "f'{test_dir}_best_model_acc_{accuracy:.3f}.pth'", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "head", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "f'{test_dir}_best_head_acc_{accuracy:.3f}.pth'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.None.learner.Face_learner.save_model": [[275, 280], ["os.path.join", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "learner.Face_learner.model.state_dict", "os.path.join", "learner.Face_learner.head.state_dict", "os.path.join"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "args", ",", "test_dir", ",", "accuracy", ")", ":", "\n", "        ", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "model_path", ",", "f'total/{args.exp}/{test_dir}'", ")", "\n", "os", ".", "makedirs", "(", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "f'{test_dir}_{self.step}_model_acc_{accuracy:.3f}.pth'", ")", ")", "\n", "torch", ".", "save", "(", "self", ".", "head", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_path", ",", "f'{test_dir}_{self.step}_head_acc_{accuracy:.3f}.pth'", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.CASIADataset.__init__": [[54, 76], ["len", "open().readlines", "data_pipe.CASIADataset.child_image2age.items", "list", "print", "glob.glob", "len", "print", "os.listdir", "os.path.join", "float", "os.path.join", "float", "int", "data_pipe.CASIADataset.child_identity_freq.keys", "open", "str", "str", "str", "str", "id.split", "data_pipe.CASIADataset.child_image2age.keys", "sorted", "int", "int", "line.split", "int", "int", "line.split", "float", "data_pipe.CASIADataset.child_image2freq.items", "len", "k.split", "[].split", "[].split", "line.split", "[].split", "[].split", "line.split", "line.split", "line.split", "line.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imgs_folder", ",", "train_transforms", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "root_dir", "=", "imgs_folder", "\n", "self", ".", "transform", "=", "train_transforms", "\n", "self", ".", "class_num", "=", "len", "(", "os", ".", "listdir", "(", "imgs_folder", ")", ")", "\n", "self", ".", "age_file", "=", "open", "(", "'./dataset/train/age-label/casia-webface.txt'", ")", ".", "readlines", "(", ")", "\n", "self", ".", "id2age", "=", "{", "os", ".", "path", ".", "join", "(", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ")", ")", ",", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "2", "]", "[", ":", "-", "4", "]", ")", ")", ")", ":", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "for", "line", "in", "self", ".", "age_file", "}", "\n", "self", ".", "child_image2age", "=", "{", "os", ".", "path", ".", "join", "(", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ")", ")", ",", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "2", "]", "[", ":", "-", "4", "]", ")", ")", ")", ":", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "for", "line", "in", "self", ".", "age_file", "if", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "<", "13", "}", "\n", "self", ".", "child_image2freq", "=", "{", "id", ".", "split", "(", "'/'", ")", "[", "0", "]", ":", "0", "for", "id", "in", "self", ".", "child_image2age", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "v", "in", "self", ".", "child_image2age", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "child_image2freq", "[", "k", ".", "split", "(", "'/'", ")", "[", "0", "]", "]", "+=", "1", "\n", "\n", "# sorted in ascending order", "\n", "", "self", ".", "child_identity_freq", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "sorted", "(", "self", ".", "child_image2freq", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "1", "]", ")", "if", "v", ">=", "args", ".", "child_filter", "}", "\n", "self", ".", "child_identity", "=", "list", "(", "self", ".", "child_identity_freq", ".", "keys", "(", ")", ")", "\n", "print", "(", "f'child number: {len(self.child_identity)}'", ")", "\n", "\n", "total_list", "=", "glob", ".", "glob", "(", "self", ".", "root_dir", "+", "'/*/*'", ")", "\n", "\n", "self", ".", "total_imgs", "=", "len", "(", "total_list", ")", "\n", "self", ".", "total_list", "=", "total_list", "\n", "print", "(", "f'{imgs_folder} length: {self.total_imgs}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.CASIADataset.__len__": [[77, 79], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.CASIADataset.__getitem__": [[80, 100], ["PIL.Image.open", "int", "data_pipe.CASIADataset.transform", "img_path.split", "img_path.split", "[].split", "img_path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_path", "=", "self", ".", "total_list", "[", "index", "]", "\n", "id_img", "=", "'/'", ".", "join", "(", "(", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ",", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", ")", "\n", "if", "'jpg'", "in", "id_img", ":", "\n", "            ", "id_img", "=", "id_img", "[", ":", "-", "4", "]", "\n", "", "try", ":", "\n", "            ", "age", "=", "self", ".", "id2age", "[", "id_img", "]", "\n", "", "except", ":", "\n", "            ", "age", "=", "30", "# for images which do not have age labels", "\n", "\n", "", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "label", "=", "int", "(", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "else", ":", "\n", "            ", "age", "=", "0", "if", "age", "<", "13", "else", "1", "\n", "\n", "", "return", "img", ",", "label", ",", "age", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__init__": [[103, 125], ["len", "open().readlines", "data_pipe.MS1MDataset.child_image2age.items", "list", "print", "glob.glob", "len", "print", "os.listdir", "os.path.join", "float", "os.path.join", "float", "int", "data_pipe.MS1MDataset.child_identity_freq.keys", "open", "str", "str", "str", "str", "id.split", "data_pipe.MS1MDataset.child_image2age.keys", "sorted", "int", "int", "line.split", "int", "int", "line.split", "float", "data_pipe.MS1MDataset.child_image2freq.items", "len", "k.split", "[].split", "[].split", "line.split", "[].split", "[].split", "line.split", "line.split", "line.split", "line.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imgs_folder", ",", "train_transforms", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "root_dir", "=", "imgs_folder", "\n", "self", ".", "transform", "=", "train_transforms", "\n", "self", ".", "class_num", "=", "len", "(", "os", ".", "listdir", "(", "imgs_folder", ")", ")", "\n", "self", ".", "age_file", "=", "open", "(", "'./dataset/train/age-label/ms1m.txt'", ")", ".", "readlines", "(", ")", "\n", "self", ".", "id2age", "=", "{", "os", ".", "path", ".", "join", "(", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ")", ")", ",", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "2", "]", "[", ":", "-", "4", "]", ")", ")", ")", ":", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "for", "line", "in", "self", ".", "age_file", "}", "\n", "self", ".", "child_image2age", "=", "{", "os", ".", "path", ".", "join", "(", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "1", "]", ")", ")", ",", "str", "(", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "1", "]", ".", "split", "(", "'/'", ")", "[", "2", "]", "[", ":", "-", "4", "]", ")", ")", ")", ":", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "for", "line", "in", "self", ".", "age_file", "if", "float", "(", "line", ".", "split", "(", "' '", ")", "[", "2", "]", ")", "<", "13", "}", "\n", "self", ".", "child_image2freq", "=", "{", "id", ".", "split", "(", "'/'", ")", "[", "0", "]", ":", "0", "for", "id", "in", "self", ".", "child_image2age", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "v", "in", "self", ".", "child_image2age", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "child_image2freq", "[", "k", ".", "split", "(", "'/'", ")", "[", "0", "]", "]", "+=", "1", "\n", "\n", "# sorted in ascending order", "\n", "", "self", ".", "child_identity_freq", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "sorted", "(", "self", ".", "child_image2freq", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "1", "]", ")", "if", "v", ">=", "args", ".", "child_filter", "}", "\n", "self", ".", "child_identity", "=", "list", "(", "self", ".", "child_identity_freq", ".", "keys", "(", ")", ")", "\n", "print", "(", "f'child number: {len(self.child_identity)}'", ")", "\n", "\n", "total_list", "=", "glob", ".", "glob", "(", "self", ".", "root_dir", "+", "'/*/*.jpg'", ")", "\n", "self", ".", "total_imgs", "=", "len", "(", "total_list", ")", "\n", "\n", "self", ".", "total_list", "=", "total_list", "\n", "print", "(", "f'{imgs_folder} length: {self.total_imgs}'", ")", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__len__": [[125, 127], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.MS1MDataset.__getitem__": [[128, 148], ["PIL.Image.open", "int", "data_pipe.MS1MDataset.transform", "img_path.split", "img_path.split", "[].split", "img_path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_path", "=", "self", ".", "total_list", "[", "index", "]", "\n", "id_img", "=", "'/'", ".", "join", "(", "(", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ",", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", "0", "]", ")", ")", "\n", "if", "'jpg'", "in", "id_img", ":", "\n", "            ", "id_img", "=", "id_img", "[", ":", "-", "4", "]", "\n", "", "try", ":", "\n", "            ", "age", "=", "self", ".", "id2age", "[", "id_img", "]", "\n", "", "except", ":", "\n", "            ", "age", "=", "30", "# for images which do not have age labels", "\n", "\n", "", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "label", "=", "int", "(", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "else", ":", "\n", "            ", "age", "=", "0", "if", "age", "<", "13", "else", "1", "\n", "\n", "", "return", "img", ",", "label", ",", "age", "", "", "", ""]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.de_preprocess": [[11, 13], ["None"], "function", ["None"], ["def", "de_preprocess", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", "*", "0.5", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.get_train_loader": [[14, 38], ["torchvision.transforms.Compose", "torch.utils.data.DataLoader", "data_pipe.CASIADataset", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "data_pipe.MS1MDataset", "print"], "function", ["None"], ["", "def", "get_train_loader", "(", "args", ")", ":", "\n", "    ", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "]", ")", "\n", "\n", "data_root", "=", "f'./dataset/train/{args.data_mode}/'", "\n", "if", "args", ".", "data_mode", "==", "'casia'", ":", "\n", "        ", "ds", "=", "CASIADataset", "(", "data_root", ",", "train_transforms", "=", "train_transform", ",", "args", "=", "args", ")", "\n", "class_num", "=", "ds", ".", "class_num", "\n", "child_identity", "=", "ds", ".", "child_identity", "\n", "\n", "", "elif", "args", ".", "data_mode", "==", "'ms1m'", ":", "\n", "        ", "ds", "=", "MS1MDataset", "(", "data_root", ",", "train_transforms", "=", "train_transform", ",", "args", "=", "args", ")", "\n", "class_num", "=", "ds", ".", "class_num", "\n", "child_identity", "=", "ds", ".", "child_identity", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Wrong dataset name'", ")", "\n", "raise", "NotImplementedError", "\n", "\n", "", "loader", "=", "DataLoader", "(", "ds", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "pin_memory", "=", "True", ",", "num_workers", "=", "args", ".", "num_workers", ")", "\n", "\n", "return", "loader", ",", "class_num", ",", "child_identity", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.get_val_pair": [[39, 48], ["bcolz.carray", "numpy.load", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_val_pair", "(", "path", ",", "name", ")", ":", "\n", "    ", "'''\n    Returns image pairs with labels\n        carray: numpy-like array with image pairs\n        issame: boolean list of image pair validity\n    '''", "\n", "carray", "=", "bcolz", ".", "carray", "(", "rootdir", "=", "os", ".", "path", ".", "join", "(", "path", ",", "name", ")", ",", "mode", "=", "'r'", ")", "\n", "issame", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'{}_list.npy'", ".", "format", "(", "name", ")", ")", ")", "\n", "return", "carray", ",", "issame", "\n", "\n"]], "home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.get_val_data": [[49, 52], ["data_pipe.get_val_pair"], "function", ["home.repos.pwc.inspect_result.leebebeto_inter-prototype.data.data_pipe.get_val_pair"], ["", "def", "get_val_data", "(", "data_path", ",", "name", "=", "'cfp_fp'", ")", ":", "\n", "    ", "data", ",", "data_issame", "=", "get_val_pair", "(", "data_path", ",", "name", ")", "\n", "return", "data", ",", "data_issame", "\n", "\n"]]}