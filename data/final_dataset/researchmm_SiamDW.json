{"home.repos.pwc.inspect_result.researchmm_SiamDW.utils.extract_tpelog.collect_results": [[16, 52], ["open", "open.readlines", "numpy.array", "numpy.argmax", "print", "print", "args.path.endswith", "shutil.copy", "args.path.split", "line.startswith", "line.split", "penalty_k.append", "scale_lr.append", "wi.append", "sz.append", "bz.append", "np.array.append", "float", "float", "float", "float", "float", "float", "temp0.split", "temp1.split", "temp2.split", "temp3.split", "temp4.split", "temp5.split"], "function", ["None"], ["def", "collect_results", "(", "args", ")", ":", "\n", "    ", "if", "not", "args", ".", "path", ".", "endswith", "(", "'txt'", ")", ":", "\n", "        ", "name", "=", "args", ".", "path", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "name", "=", "name", "+", "'.txt'", "\n", "shutil", ".", "copy", "(", "args", ".", "path", ",", "name", ")", "\n", "args", ".", "path", "=", "name", "\n", "", "fin", "=", "open", "(", "args", ".", "path", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "penalty_k", "=", "[", "]", "\n", "scale_lr", "=", "[", "]", "\n", "wi", "=", "[", "]", "\n", "sz", "=", "[", "]", "\n", "bz", "=", "[", "]", "\n", "eao", "=", "[", "]", "\n", "count", "=", "0", "# total numbers", "\n", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "if", "not", "line", ".", "startswith", "(", "'penalty_k'", ")", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "#       print(line)", "\n", "            ", "count", "+=", "1", "\n", "temp0", ",", "temp1", ",", "temp2", ",", "temp3", ",", "temp4", ",", "temp5", "=", "line", ".", "split", "(", "','", ")", "\n", "penalty_k", ".", "append", "(", "float", "(", "temp0", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "scale_lr", ".", "append", "(", "float", "(", "temp1", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "wi", ".", "append", "(", "float", "(", "temp2", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "sz", ".", "append", "(", "float", "(", "temp3", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "bz", ".", "append", "(", "float", "(", "temp4", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "eao", ".", "append", "(", "float", "(", "temp5", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "\n", "# find max", "\n", "", "", "eao", "=", "np", ".", "array", "(", "eao", ")", "\n", "max_idx", "=", "np", ".", "argmax", "(", "eao", ")", "\n", "max_eao", "=", "eao", "[", "max_idx", "]", "\n", "print", "(", "'{} params group  have been tested'", ".", "format", "(", "count", ")", ")", "\n", "print", "(", "'penalty_k: {:.4f}, scale_lr: {:.4f}, wi: {:.4f}, small_sz: {}, big_sz: {}, auc: {}'", ".", "format", "(", "penalty_k", "[", "max_idx", "]", ",", "scale_lr", "[", "max_idx", "]", ",", "wi", "[", "max_idx", "]", ",", "sz", "[", "max_idx", "]", ",", "bz", "[", "max_idx", "]", ",", "max_eao", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.extract_tpelog_fc.collect_results": [[16, 50], ["open", "open.readlines", "numpy.array", "numpy.argmax", "print", "print", "args.path.endswith", "shutil.copy", "args.path.split", "line.startswith", "line.split", "scale_step.append", "scale_lr.append", "scale_penalty.append", "wi.append", "np.array.append", "float", "float", "float", "float", "float", "temp0.split", "temp1.split", "temp2.split", "temp3.split", "temp4.split"], "function", ["None"], ["def", "collect_results", "(", "args", ")", ":", "\n", "    ", "if", "not", "args", ".", "path", ".", "endswith", "(", "'txt'", ")", ":", "\n", "        ", "name", "=", "args", ".", "path", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "name", "=", "name", "+", "'.txt'", "\n", "shutil", ".", "copy", "(", "args", ".", "path", ",", "name", ")", "\n", "args", ".", "path", "=", "name", "\n", "", "fin", "=", "open", "(", "args", ".", "path", ",", "'r'", ")", "\n", "lines", "=", "fin", ".", "readlines", "(", ")", "\n", "scale_step", "=", "[", "]", "\n", "scale_lr", "=", "[", "]", "\n", "scale_penalty", "=", "[", "]", "\n", "wi", "=", "[", "]", "\n", "eao", "=", "[", "]", "\n", "count", "=", "0", "# total numbers", "\n", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "if", "not", "line", ".", "startswith", "(", "'scale_step'", ")", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "#       print(line)", "\n", "            ", "count", "+=", "1", "\n", "temp0", ",", "temp1", ",", "temp2", ",", "temp3", ",", "temp4", "=", "line", ".", "split", "(", "','", ")", "\n", "scale_step", ".", "append", "(", "float", "(", "temp0", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "scale_lr", ".", "append", "(", "float", "(", "temp1", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "scale_penalty", ".", "append", "(", "float", "(", "temp2", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "wi", ".", "append", "(", "float", "(", "temp3", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "eao", ".", "append", "(", "float", "(", "temp4", ".", "split", "(", "': '", ")", "[", "-", "1", "]", ")", ")", "\n", "\n", "# find max", "\n", "", "", "eao", "=", "np", ".", "array", "(", "eao", ")", "\n", "max_idx", "=", "np", ".", "argmax", "(", "eao", ")", "\n", "max_eao", "=", "eao", "[", "max_idx", "]", "\n", "print", "(", "'{} params group  have been tested'", ".", "format", "(", "count", ")", ")", "\n", "print", "(", "'scale_step: {:.4f}, scale_lr: {:.4f}, scale_penalty: {:.4f}, scale_penalty: {}, eao: {}'", ".", "format", "(", "scale_step", "[", "max_idx", "]", ",", "scale_lr", "[", "max_idx", "]", ",", "scale_penalty", "[", "max_idx", "]", ",", "wi", "[", "max_idx", "]", ",", "max_eao", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_yaml": [[29, 35], ["open", "yaml.load", "open.read"], "function", ["None"], ["def", "load_yaml", "(", "path", ")", ":", "\n", "    ", "file", "=", "open", "(", "path", ",", "'r'", ")", "\n", "yaml_obj", "=", "yaml", ".", "load", "(", "file", ".", "read", "(", ")", ")", "\n", "hp", "=", "yaml_obj", "[", "'TEST'", "]", "\n", "\n", "return", "hp", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.to_torch": [[37, 39], ["torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "def", "to_torch", "(", "ndarray", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "ndarray", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.im_to_torch": [[41, 45], ["numpy.transpose", "to_torch().float", "utils.to_torch"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.to_torch"], ["", "def", "im_to_torch", "(", "img", ")", ":", "\n", "    ", "img", "=", "np", ".", "transpose", "(", "img", ",", "(", "2", ",", "0", ",", "1", ")", ")", "# C*H*W", "\n", "img", "=", "to_torch", "(", "img", ")", ".", "float", "(", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking": [[47, 92], ["isinstance", "round", "round", "int", "int", "int", "int", "any", "max", "max", "max", "max", "numpy.zeros", "numpy.array_equal", "cv2.resize", "utils.im_to_torch", "cv2.resize.copy", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.im_to_torch"], ["", "def", "get_subwindow_tracking", "(", "im", ",", "pos", ",", "model_sz", ",", "original_sz", ",", "avg_chans", ",", "out_mode", "=", "'torch'", ")", ":", "\n", "    ", "\"\"\"\n    SiamFC type cropping\n    \"\"\"", "\n", "if", "isinstance", "(", "pos", ",", "float", ")", ":", "\n", "        ", "pos", "=", "[", "pos", ",", "pos", "]", "\n", "\n", "", "sz", "=", "original_sz", "\n", "im_sz", "=", "im", ".", "shape", "\n", "c", "=", "(", "original_sz", "+", "1", ")", "/", "2", "\n", "context_xmin", "=", "round", "(", "pos", "[", "0", "]", "-", "c", ")", "\n", "context_xmax", "=", "context_xmin", "+", "sz", "-", "1", "\n", "context_ymin", "=", "round", "(", "pos", "[", "1", "]", "-", "c", ")", "\n", "context_ymax", "=", "context_ymin", "+", "sz", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "im_sz", "[", "1", "]", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "im_sz", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "r", ",", "c", ",", "k", "=", "im", ".", "shape", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "        ", "te_im", "=", "np", ".", "zeros", "(", "(", "r", "+", "top_pad", "+", "bottom_pad", ",", "c", "+", "left_pad", "+", "right_pad", ",", "k", ")", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "r", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "            ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "            ", "te_im", "[", "r", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "c", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "            ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "            ", "te_im", "[", ":", ",", "c", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch_original", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "        ", "im_patch_original", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "if", "not", "np", ".", "array_equal", "(", "model_sz", ",", "original_sz", ")", ":", "\n", "        ", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch_original", ",", "(", "model_sz", ",", "model_sz", ")", ")", "\n", "", "else", ":", "\n", "        ", "im_patch", "=", "im_patch_original", "\n", "", "return", "im_to_torch", "(", "im_patch", ".", "copy", "(", ")", ")", "if", "out_mode", "in", "'torch'", "else", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.make_scale_pyramid": [[94, 113], ["len", "torch.zeros", "torch.zeros", "round", "utils.get_subwindow_tracking", "enumerate", "round", "int", "int", "round", "utils.get_subwindow_tracking"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking"], ["", "def", "make_scale_pyramid", "(", "im", ",", "pos", ",", "in_side_scaled", ",", "out_side", ",", "avg_chans", ")", ":", "\n", "    ", "\"\"\"\n    SiamFC 3/5 scale imputs\n    \"\"\"", "\n", "in_side_scaled", "=", "[", "round", "(", "x", ")", "for", "x", "in", "in_side_scaled", "]", "\n", "num_scale", "=", "len", "(", "in_side_scaled", ")", "\n", "pyramid", "=", "torch", ".", "zeros", "(", "num_scale", ",", "3", ",", "out_side", ",", "out_side", ")", "\n", "max_target_side", "=", "in_side_scaled", "[", "-", "1", "]", "\n", "min_target_side", "=", "in_side_scaled", "[", "0", "]", "\n", "beta", "=", "out_side", "/", "min_target_side", "\n", "\n", "search_side", "=", "round", "(", "beta", "*", "max_target_side", ")", "\n", "search_region", "=", "get_subwindow_tracking", "(", "im", ",", "pos", ",", "int", "(", "search_side", ")", ",", "int", "(", "max_target_side", ")", ",", "avg_chans", ",", "out_mode", "=", "'np'", ")", "\n", "\n", "for", "s", ",", "temp", "in", "enumerate", "(", "in_side_scaled", ")", ":", "\n", "        ", "target_side", "=", "round", "(", "beta", "*", "temp", ")", "\n", "pyramid", "[", "s", ",", ":", "]", "=", "get_subwindow_tracking", "(", "search_region", ",", "(", "1", "+", "search_side", ")", "/", "2", ",", "out_side", ",", "target_side", ",", "avg_chans", ")", "\n", "\n", "", "return", "pyramid", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.python2round": [[117, 124], ["round", "round", "round", "abs"], "function", ["None"], ["", "def", "python2round", "(", "f", ")", ":", "\n", "    ", "\"\"\"\n    use python2 round function in python3\n    \"\"\"", "\n", "if", "round", "(", "f", "+", "1", ")", "-", "round", "(", "f", ")", "!=", "1", ":", "\n", "        ", "return", "f", "+", "abs", "(", "f", ")", "/", "f", "*", "0.5", "\n", "", "return", "round", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.generate_anchor": [[126, 162], ["numpy.zeros", "int", "numpy.tile().reshape", "numpy.meshgrid", "numpy.reshape", "numpy.transpose", "len", "len", "int", "int", "numpy.tile().flatten", "numpy.tile().flatten", "xx.astype", "yy.astype", "numpy.sqrt", "numpy.tile", "range", "range", "numpy.tile", "numpy.tile", "xx.flatten", "yy.flatten"], "function", ["None"], ["", "def", "generate_anchor", "(", "total_stride", ",", "scales", ",", "ratios", ",", "score_size", ")", ":", "\n", "    ", "\"\"\"\n    slight different with released SiamRPN-VOT18\n    prefer original size without flatten\n    \"\"\"", "\n", "anchor_num", "=", "len", "(", "ratios", ")", "*", "len", "(", "scales", ")", "\n", "anchor", "=", "np", ".", "zeros", "(", "(", "anchor_num", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "total_stride", "*", "total_stride", "\n", "count", "=", "0", "\n", "for", "ratio", "in", "ratios", ":", "\n", "        ", "ws", "=", "int", "(", "np", ".", "sqrt", "(", "size", "/", "ratio", ")", ")", "\n", "hs", "=", "int", "(", "ws", "*", "ratio", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "wws", "=", "ws", "*", "scale", "\n", "hhs", "=", "hs", "*", "scale", "\n", "anchor", "[", "count", ",", "0", "]", "=", "0", "\n", "anchor", "[", "count", ",", "1", "]", "=", "0", "\n", "anchor", "[", "count", ",", "2", "]", "=", "wws", "\n", "anchor", "[", "count", ",", "3", "]", "=", "hhs", "\n", "count", "+=", "1", "\n", "\n", "", "", "score_size", "=", "int", "(", "score_size", ")", "\n", "anchor", "=", "np", ".", "tile", "(", "anchor", ",", "score_size", "*", "score_size", ")", ".", "reshape", "(", "(", "-", "1", ",", "4", ")", ")", "\n", "\n", "ori", "=", "-", "(", "score_size", "//", "2", ")", "*", "total_stride", "\n", "xx", ",", "yy", "=", "np", ".", "meshgrid", "(", "[", "ori", "+", "total_stride", "*", "dx", "for", "dx", "in", "range", "(", "score_size", ")", "]", ",", "\n", "[", "ori", "+", "total_stride", "*", "dy", "for", "dy", "in", "range", "(", "score_size", ")", "]", ")", "\n", "\n", "xx", ",", "yy", "=", "np", ".", "tile", "(", "xx", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", ",", "np", ".", "tile", "(", "yy", ".", "flatten", "(", ")", ",", "(", "anchor_num", ",", "1", ")", ")", ".", "flatten", "(", ")", "\n", "anchor", "[", ":", ",", "0", "]", ",", "anchor", "[", ":", ",", "1", "]", "=", "xx", ".", "astype", "(", "np", ".", "float32", ")", ",", "yy", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "anchor", "=", "np", ".", "reshape", "(", "anchor", ",", "(", "5", ",", "score_size", ",", "score_size", ",", "4", ")", ")", "# this order is right  [5, 17, 17, 4]", "\n", "anchor", "=", "np", ".", "transpose", "(", "anchor", ",", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "# [4,5,17,17]", "\n", "\n", "return", "anchor", "# [4, 5, 17, 17]", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset": [[166, 204], ["os.path.join", "os.path.join", "json.load", "json.load.keys", "os.path.realpath", "os.path.realpath", "open", "os.path.join", "os.path.join", "sorted", "ValueError", "os.path.dirname", "os.path.dirname", "os.path.join", "numpy.array", "os.path.realpath", "open", "os.path.join", "os.path.join", "sorted", "os.path.join", "numpy.loadtxt().astype", "os.path.dirname", "v.strip", "glob.glob", "len", "os.path.join", "sorted", "f.readlines", "glob.glob", "numpy.loadtxt"], "function", ["None"], ["", "def", "load_dataset", "(", "dataset", ")", ":", "\n", "    ", "\"\"\"\n    support OTB and VOT now\n    TODO: add other datasets\n    \"\"\"", "\n", "info", "=", "{", "}", "\n", "\n", "if", "'OTB'", "in", "dataset", ":", "\n", "        ", "base_path", "=", "join", "(", "realpath", "(", "dirname", "(", "__file__", ")", ")", ",", "'../../dataset'", ",", "dataset", ")", "\n", "json_path", "=", "join", "(", "realpath", "(", "dirname", "(", "__file__", ")", ")", ",", "'../../dataset'", ",", "dataset", "+", "'.json'", ")", "\n", "info", "=", "json", ".", "load", "(", "open", "(", "json_path", ",", "'r'", ")", ")", "\n", "for", "v", "in", "info", ".", "keys", "(", ")", ":", "\n", "            ", "path_name", "=", "info", "[", "v", "]", "[", "'name'", "]", "\n", "info", "[", "v", "]", "[", "'image_files'", "]", "=", "[", "join", "(", "base_path", ",", "path_name", ",", "'img'", ",", "im_f", ")", "for", "im_f", "in", "info", "[", "v", "]", "[", "'image_files'", "]", "]", "\n", "info", "[", "v", "]", "[", "'gt'", "]", "=", "np", ".", "array", "(", "info", "[", "v", "]", "[", "'gt_rect'", "]", ")", "-", "[", "1", ",", "1", ",", "0", ",", "0", "]", "\n", "info", "[", "v", "]", "[", "'name'", "]", "=", "v", "\n", "\n", "", "", "elif", "'VOT'", "in", "dataset", ":", "\n", "        ", "base_path", "=", "join", "(", "realpath", "(", "dirname", "(", "__file__", ")", ")", ",", "'../../dataset'", ",", "dataset", ")", "\n", "list_path", "=", "join", "(", "base_path", ",", "'list.txt'", ")", "\n", "with", "open", "(", "list_path", ")", "as", "f", ":", "\n", "            ", "videos", "=", "[", "v", ".", "strip", "(", ")", "for", "v", "in", "f", ".", "readlines", "(", ")", "]", "\n", "", "videos", "=", "sorted", "(", "videos", ")", "\n", "for", "video", "in", "videos", ":", "\n", "            ", "video_path", "=", "join", "(", "base_path", ",", "video", ")", "\n", "image_path", "=", "join", "(", "video_path", ",", "'*.jpg'", ")", "\n", "image_files", "=", "sorted", "(", "glob", ".", "glob", "(", "image_path", ")", ")", "\n", "if", "len", "(", "image_files", ")", "==", "0", ":", "# VOT2018", "\n", "                ", "image_path", "=", "join", "(", "video_path", ",", "'color'", ",", "'*.jpg'", ")", "\n", "image_files", "=", "sorted", "(", "glob", ".", "glob", "(", "image_path", ")", ")", "\n", "", "gt_path", "=", "join", "(", "video_path", ",", "'groundtruth.txt'", ")", "\n", "gt", "=", "np", ".", "loadtxt", "(", "gt_path", ",", "delimiter", "=", "','", ")", ".", "astype", "(", "np", ".", "float64", ")", "\n", "info", "[", "video", "]", "=", "{", "'image_files'", ":", "image_files", ",", "'gt'", ":", "gt", ",", "'name'", ":", "video", "}", "\n", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Dataset not support now, edit for other dataset youself...\"", ")", "\n", "\n", "", "return", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.check_keys": [[206, 218], ["set", "set", "print", "print", "pretrained_state_dict.keys", "model.state_dict().keys", "len", "model.state_dict"], "function", ["None"], ["", "def", "check_keys", "(", "model", ",", "pretrained_state_dict", ")", ":", "\n", "    ", "ckpt_keys", "=", "set", "(", "pretrained_state_dict", ".", "keys", "(", ")", ")", "\n", "model_keys", "=", "set", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "\n", "used_pretrained_keys", "=", "model_keys", "&", "ckpt_keys", "\n", "unused_pretrained_keys", "=", "ckpt_keys", "-", "model_keys", "\n", "missing_keys", "=", "model_keys", "-", "ckpt_keys", "\n", "\n", "print", "(", "'missing keys:{}'", ".", "format", "(", "missing_keys", ")", ")", "\n", "print", "(", "'unused checkpoint keys:{}'", ".", "format", "(", "unused_pretrained_keys", ")", ")", "\n", "# print('used keys:{}'.format(used_pretrained_keys))", "\n", "assert", "len", "(", "used_pretrained_keys", ")", ">", "0", ",", "'load NONE from pretrained checkpoint'", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.remove_prefix": [[220, 227], ["print", "f", "x.startswith", "state_dict.items", "x.split"], "function", ["None"], ["", "def", "remove_prefix", "(", "state_dict", ",", "prefix", ")", ":", "\n", "    ", "'''\n    Old style model is stored with all names of parameters share common prefix 'module.'\n    '''", "\n", "print", "(", "'remove prefix \\'{}\\''", ".", "format", "(", "prefix", ")", ")", "\n", "f", "=", "lambda", "x", ":", "x", ".", "split", "(", "prefix", ",", "1", ")", "[", "-", "1", "]", "if", "x", ".", "startswith", "(", "prefix", ")", "else", "x", "\n", "return", "{", "f", "(", "key", ")", ":", "value", "for", "key", ",", "value", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain": [[229, 242], ["print", "torch.cuda.current_device", "torch.cuda.current_device", "torch.load", "torch.load", "utils.check_keys", "model.load_state_dict", "remove_prefix.keys", "utils.remove_prefix", "utils.remove_prefix", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.check_keys", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.remove_prefix", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.remove_prefix"], ["", "def", "load_pretrain", "(", "model", ",", "pretrained_path", ")", ":", "\n", "    ", "print", "(", "'load pretrained model from {}'", ".", "format", "(", "pretrained_path", ")", ")", "\n", "\n", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "\n", "if", "\"state_dict\"", "in", "pretrained_dict", ".", "keys", "(", ")", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", "[", "'state_dict'", "]", ",", "'module.'", ")", "\n", "", "else", ":", "\n", "        ", "pretrained_dict", "=", "remove_prefix", "(", "pretrained_dict", ",", "'module.'", ")", "\n", "", "check_keys", "(", "model", ",", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "pretrained_dict", ",", "strict", "=", "False", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center": [[248, 262], ["isinstance", "Center"], "function", ["None"], ["def", "corner2center", "(", "corner", ")", ":", "\n", "    ", "\"\"\"\n    [x1, y1, x2, y2] --> [cx, cy, w, h]\n    \"\"\"", "\n", "if", "isinstance", "(", "corner", ",", "Corner", ")", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "\n", "return", "Center", "(", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "(", "x2", "-", "x1", ")", ",", "(", "y2", "-", "y1", ")", ")", "\n", "", "else", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "[", "0", "]", ",", "corner", "[", "1", "]", ",", "corner", "[", "2", "]", ",", "corner", "[", "3", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "*", "0.5", "\n", "y", "=", "(", "y1", "+", "y2", ")", "*", "0.5", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "return", "x", ",", "y", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner": [[263, 277], ["isinstance", "Corner"], "function", ["None"], ["", "", "def", "center2corner", "(", "center", ")", ":", "\n", "    ", "\"\"\"\n    [cx, cy, w, h] --> [x1, y1, x2, y2]\n    \"\"\"", "\n", "if", "isinstance", "(", "center", ",", "Center", ")", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "\n", "return", "Corner", "(", "x", "-", "w", "*", "0.5", ",", "y", "-", "h", "*", "0.5", ",", "x", "+", "w", "*", "0.5", ",", "y", "+", "h", "*", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "[", "0", "]", ",", "center", "[", "1", "]", ",", "center", "[", "2", "]", ",", "center", "[", "3", "]", "\n", "x1", "=", "x", "-", "w", "*", "0.5", "\n", "y1", "=", "y", "-", "h", "*", "0.5", "\n", "x2", "=", "x", "+", "w", "*", "0.5", "\n", "y2", "=", "y", "+", "h", "*", "0.5", "\n", "return", "x1", ",", "y1", ",", "x2", ",", "y2", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.IoU": [[278, 300], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["", "", "def", "IoU", "(", "rect1", ",", "rect2", ")", ":", "\n", "# overlap", "\n", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "rect1", "[", "0", "]", ",", "rect1", "[", "1", "]", ",", "rect1", "[", "2", "]", ",", "rect1", "[", "3", "]", "\n", "tx1", ",", "ty1", ",", "tx2", ",", "ty2", "=", "rect2", "[", "0", "]", ",", "rect2", "[", "1", "]", ",", "rect2", "[", "2", "]", ",", "rect2", "[", "3", "]", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "tx1", ",", "x1", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "ty1", ",", "y1", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "tx2", ",", "x2", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "ty2", ",", "y2", ")", "\n", "\n", "ww", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "hh", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "\n", "target_a", "=", "(", "tx2", "-", "tx1", ")", "*", "(", "ty2", "-", "ty1", ")", "\n", "\n", "inter", "=", "ww", "*", "hh", "\n", "overlap", "=", "inter", "/", "(", "area", "+", "target_a", "-", "inter", ")", "\n", "\n", "return", "overlap", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.aug_apply": [[301, 364], ["utils.corner2center", "utils.center2corner", "utils.corner2center", "utils.corner2center", "Center", "utils.center2corner", "min", "min", "Center", "max", "max", "Corner", "Corner", "min", "min", "float", "float", "map"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner"], ["", "def", "aug_apply", "(", "bbox", ",", "param", ",", "shape", ",", "inv", "=", "False", ",", "rd", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    apply augmentation\n    :param bbox: original bbox in image\n    :param param: augmentation param, shift/scale\n    :param shape: image shape, h, w, (c)\n    :param inv: inverse\n    :param rd: round bbox\n    :return: bbox(, param)\n        bbox: augmented bbox\n        param: real augmentation param\n    \"\"\"", "\n", "if", "not", "inv", ":", "\n", "        ", "center", "=", "corner2center", "(", "bbox", ")", "\n", "original_center", "=", "center", "\n", "\n", "real_param", "=", "{", "}", "\n", "if", "'scale'", "in", "param", ":", "\n", "            ", "scale_x", ",", "scale_y", "=", "param", "[", "'scale'", "]", "\n", "imh", ",", "imw", "=", "shape", "[", ":", "2", "]", "\n", "h", ",", "w", "=", "center", ".", "h", ",", "center", ".", "w", "\n", "\n", "scale_x", "=", "min", "(", "scale_x", ",", "float", "(", "imw", ")", "/", "w", ")", "\n", "scale_y", "=", "min", "(", "scale_y", ",", "float", "(", "imh", ")", "/", "h", ")", "\n", "center", "=", "Center", "(", "center", ".", "x", ",", "center", ".", "y", ",", "center", ".", "w", "*", "scale_x", ",", "center", ".", "h", "*", "scale_y", ")", "\n", "\n", "", "bbox", "=", "center2corner", "(", "center", ")", "\n", "\n", "if", "'shift'", "in", "param", ":", "\n", "            ", "tx", ",", "ty", "=", "param", "[", "'shift'", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox", "\n", "imh", ",", "imw", "=", "shape", "[", ":", "2", "]", "\n", "\n", "tx", "=", "max", "(", "-", "x1", ",", "min", "(", "imw", "-", "1", "-", "x2", ",", "tx", ")", ")", "\n", "ty", "=", "max", "(", "-", "y1", ",", "min", "(", "imh", "-", "1", "-", "y2", ",", "ty", ")", ")", "\n", "\n", "bbox", "=", "Corner", "(", "x1", "+", "tx", ",", "y1", "+", "ty", ",", "x2", "+", "tx", ",", "y2", "+", "ty", ")", "\n", "\n", "", "if", "rd", ":", "\n", "            ", "bbox", "=", "Corner", "(", "*", "map", "(", "round", ",", "bbox", ")", ")", "\n", "\n", "", "current_center", "=", "corner2center", "(", "bbox", ")", "\n", "\n", "real_param", "[", "'scale'", "]", "=", "current_center", ".", "w", "/", "original_center", ".", "w", ",", "current_center", ".", "h", "/", "original_center", ".", "h", "\n", "real_param", "[", "'shift'", "]", "=", "current_center", ".", "x", "-", "original_center", ".", "x", ",", "current_center", ".", "y", "-", "original_center", ".", "y", "\n", "\n", "return", "bbox", ",", "real_param", "\n", "", "else", ":", "\n", "        ", "if", "'scale'", "in", "param", ":", "\n", "            ", "scale_x", ",", "scale_y", "=", "param", "[", "'scale'", "]", "\n", "", "else", ":", "\n", "            ", "scale_x", ",", "scale_y", "=", "1.", ",", "1.", "\n", "\n", "", "if", "'shift'", "in", "param", ":", "\n", "            ", "tx", ",", "ty", "=", "param", "[", "'shift'", "]", "\n", "", "else", ":", "\n", "            ", "tx", ",", "ty", "=", "0", ",", "0", "\n", "\n", "", "center", "=", "corner2center", "(", "bbox", ")", "\n", "\n", "center", "=", "Center", "(", "center", ".", "x", "-", "tx", ",", "center", ".", "y", "-", "ty", ",", "center", ".", "w", "/", "scale_x", ",", "center", ".", "h", "/", "scale_y", ")", "\n", "\n", "return", "center2corner", "(", "center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect": [[367, 369], ["float", "float", "float", "float", "max", "max", "float", "float"], "function", ["None"], ["", "", "def", "cxy_wh_2_rect", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "return", "[", "float", "(", "max", "(", "float", "(", "0", ")", ",", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", ")", ")", ",", "float", "(", "max", "(", "float", "(", "0", ")", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", ")", ")", ",", "float", "(", "sz", "[", "0", "]", ")", ",", "float", "(", "sz", "[", "1", "]", ")", "]", "# 0-index", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_axis_aligned_bbox": [[371, 394], ["numpy.mean", "numpy.mean", "min", "max", "min", "max", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "get_axis_aligned_bbox", "(", "region", ")", ":", "\n", "    ", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "A1", "=", "np", ".", "linalg", ".", "norm", "(", "region", "[", "0", ":", "2", "]", "-", "region", "[", "2", ":", "4", "]", ")", "*", "np", ".", "linalg", ".", "norm", "(", "region", "[", "2", ":", "4", "]", "-", "region", "[", "4", ":", "6", "]", ")", "\n", "A2", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "A1", "/", "A2", ")", "\n", "w", "=", "s", "*", "(", "x2", "-", "x1", ")", "+", "1", "\n", "h", "=", "s", "*", "(", "y2", "-", "y1", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.poly_iou": [[396, 429], ["utils._to_polygon", "utils._to_polygon", "zip", "numpy.clip", "numpy.array", "numpy.array", "len", "len", "shapely.geometry.box", "numpy.finfo", "np.clip.append", "p.intersection", "p.intersection", "poly1.intersection", "poly1.union"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils._to_polygon", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils._to_polygon"], ["", "def", "poly_iou", "(", "polys1", ",", "polys2", ",", "bound", "=", "None", ")", ":", "\n", "    ", "r\"\"\"Intersection over union of polygons.\n\n    Args:\n        polys1 (numpy.ndarray): An N x 4 numpy array, each line represent a rectangle\n            (left, top, width, height); or an N x 8 numpy array, each line represent\n            the coordinates (x1, y1, x2, y2, x3, y3, x4, y4) of 4 corners.\n        polys2 (numpy.ndarray): An N x 4 numpy array, each line represent a rectangle\n            (left, top, width, height); or an N x 8 numpy array, each line represent\n            the coordinates (x1, y1, x2, y2, x3, y3, x4, y4) of 4 corners.\n    \"\"\"", "\n", "assert", "polys1", ".", "ndim", "in", "[", "1", ",", "2", "]", "\n", "if", "polys1", ".", "ndim", "==", "1", ":", "\n", "        ", "polys1", "=", "np", ".", "array", "(", "[", "polys1", "]", ")", "\n", "polys2", "=", "np", ".", "array", "(", "[", "polys2", "]", ")", "\n", "", "assert", "len", "(", "polys1", ")", "==", "len", "(", "polys2", ")", "\n", "\n", "polys1", "=", "_to_polygon", "(", "polys1", ")", "\n", "polys2", "=", "_to_polygon", "(", "polys2", ")", "\n", "if", "bound", "is", "not", "None", ":", "\n", "        ", "bound", "=", "box", "(", "0", ",", "0", ",", "bound", "[", "0", "]", ",", "bound", "[", "1", "]", ")", "\n", "polys1", "=", "[", "p", ".", "intersection", "(", "bound", ")", "for", "p", "in", "polys1", "]", "\n", "polys2", "=", "[", "p", ".", "intersection", "(", "bound", ")", "for", "p", "in", "polys2", "]", "\n", "\n", "", "eps", "=", "np", ".", "finfo", "(", "float", ")", ".", "eps", "\n", "ious", "=", "[", "]", "\n", "for", "poly1", ",", "poly2", "in", "zip", "(", "polys1", ",", "polys2", ")", ":", "\n", "        ", "area_inter", "=", "poly1", ".", "intersection", "(", "poly2", ")", ".", "area", "\n", "area_union", "=", "poly1", ".", "union", "(", "poly2", ")", ".", "area", "\n", "ious", ".", "append", "(", "area_inter", "/", "(", "area_union", "+", "eps", ")", ")", "\n", "", "ious", "=", "np", ".", "clip", "(", "ious", ",", "0.0", ",", "1.0", ")", "\n", "\n", "return", "ious", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils._to_polygon": [[431, 451], ["utils._to_polygon.to_polygon"], "function", ["None"], ["", "def", "_to_polygon", "(", "polys", ")", ":", "\n", "    ", "r\"\"\"Convert 4 or 8 dimensional array to Polygons\n\n    Args:\n        polys (numpy.ndarray): An N x 4 numpy array, each line represent a rectangle\n            (left, top, width, height); or an N x 8 numpy array, each line represent\n            the coordinates (x1, y1, x2, y2, x3, y3, x4, y4) of 4 corners.\n    \"\"\"", "\n", "\n", "def", "to_polygon", "(", "x", ")", ":", "\n", "        ", "assert", "len", "(", "x", ")", "in", "[", "4", ",", "8", "]", "\n", "if", "len", "(", "x", ")", "==", "4", ":", "\n", "            ", "return", "box", "(", "x", "[", "0", "]", ",", "x", "[", "1", "]", ",", "x", "[", "0", "]", "+", "x", "[", "2", "]", ",", "x", "[", "1", "]", "+", "x", "[", "3", "]", ")", "\n", "", "elif", "len", "(", "x", ")", "==", "8", ":", "\n", "            ", "return", "Polygon", "(", "[", "(", "x", "[", "2", "*", "i", "]", ",", "x", "[", "2", "*", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "4", ")", "]", ")", "\n", "\n", "", "", "if", "polys", ".", "ndim", "==", "1", ":", "\n", "        ", "return", "to_polygon", "(", "polys", ")", "\n", "", "else", ":", "\n", "        ", "return", "[", "to_polygon", "(", "t", ")", "for", "t", "in", "polys", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.restore_from": [[453, 468], ["print", "torch.cuda.current_device", "torch.cuda.current_device", "torch.load", "torch.load", "utils.remove_prefix", "utils.check_keys", "model.load_state_dict", "optimizer.load_state_dict", "storage.cuda"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.remove_prefix", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.check_keys"], ["", "", "def", "restore_from", "(", "model", ",", "optimizer", ",", "ckpt_path", ")", ":", "\n", "    ", "print", "(", "'restore from {}'", ".", "format", "(", "ckpt_path", ")", ")", "\n", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_path", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "best_val_loss", "=", "ckpt", "[", "'best_val_loss'", "]", "\n", "best_acc_b", "=", "ckpt", "[", "'best_val_accb'", "]", "\n", "best_acc_1", "=", "ckpt", "[", "'best_val_acc1'", "]", "\n", "arch", "=", "ckpt", "[", "'arch'", "]", "\n", "ckpt_model_dict", "=", "remove_prefix", "(", "ckpt", "[", "'state_dict'", "]", ",", "'module.'", ")", "\n", "check_keys", "(", "model", ",", "ckpt_model_dict", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt_model_dict", ",", "strict", "=", "False", ")", "\n", "\n", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "return", "model", ",", "optimizer", ",", "epoch", ",", "best_val_loss", ",", "best_acc_b", ",", "best_acc_1", ",", "arch", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.print_speed": [[470, 479], ["math.floor", "math.floor", "math.floor", "logger.info", "logger.info"], "function", ["None"], ["", "def", "print_speed", "(", "i", ",", "i_time", ",", "n", ",", "logger", ")", ":", "\n", "    ", "\"\"\"print_speed(index, index_time, total_iteration)\"\"\"", "\n", "average_time", "=", "i_time", "\n", "remaining_time", "=", "(", "n", "-", "i", ")", "*", "average_time", "\n", "remaining_day", "=", "math", ".", "floor", "(", "remaining_time", "/", "86400", ")", "\n", "remaining_hour", "=", "math", ".", "floor", "(", "remaining_time", "/", "3600", "-", "remaining_day", "*", "24", ")", "\n", "remaining_min", "=", "math", ".", "floor", "(", "remaining_time", "/", "60", "-", "remaining_day", "*", "1440", "-", "remaining_hour", "*", "60", ")", "\n", "logger", ".", "info", "(", "'Progress: %d / %d [%d%%], Speed: %.3f s/iter, ETA %d:%02d:%02d (D:H:M)\\n'", "%", "(", "i", ",", "n", ",", "i", "/", "n", "*", "100", ",", "average_time", ",", "remaining_day", ",", "remaining_hour", ",", "remaining_min", ")", ")", "\n", "logger", ".", "info", "(", "'\\nPROGRESS: {:.2f}%\\n'", ".", "format", "(", "100", "*", "i", "/", "n", ")", ")", "# for philly. let's reduce it in case others kill our job 100-25", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.create_logger": [[481, 511], ["pathlib.Path", "print", "final_output_dir.mkdir", "time.strftime", "logging.basicConfig", "logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.getLogger().addHandler", "print", "tensorboard_log_dir.mkdir", "pathlib.Path.exists", "print", "pathlib.Path.mkdir", "str", "str", "str", "logging.getLogger"], "function", ["None"], ["", "def", "create_logger", "(", "cfg", ",", "modelFlag", "=", "'SIAMFC'", ",", "phase", "=", "'train'", ")", ":", "\n", "    ", "root_output_dir", "=", "Path", "(", "cfg", ".", "OUTPUT_DIR", ")", "\n", "# set up logger", "\n", "if", "not", "root_output_dir", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "'=> creating {}'", ".", "format", "(", "root_output_dir", ")", ")", "\n", "root_output_dir", ".", "mkdir", "(", ")", "\n", "\n", "", "model", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "MODEL", "if", "modelFlag", "==", "'SIAMFC'", "else", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "MODEL", "\n", "\n", "final_output_dir", "=", "root_output_dir", "/", "model", "\n", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "final_output_dir", ")", ")", "\n", "final_output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "log_file", "=", "'{}_{}_{}.log'", ".", "format", "(", "model", ",", "time_str", ",", "phase", ")", "\n", "final_log_file", "=", "final_output_dir", "/", "log_file", "\n", "head", "=", "'%(asctime)-15s %(message)s'", "\n", "logging", ".", "basicConfig", "(", "filename", "=", "str", "(", "final_log_file", ")", ",", "\n", "format", "=", "head", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "\n", "tensorboard_log_dir", "=", "root_output_dir", "/", "model", "/", "(", "model", "+", "'_'", "+", "time_str", ")", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "tensorboard_log_dir", ")", ")", "\n", "tensorboard_log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "return", "logger", ",", "str", "(", "final_output_dir", ")", ",", "str", "(", "tensorboard_log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.save_checkpoint": [[513, 521], ["torch.save", "torch.save", "os.path.join", "torch.save", "torch.save", "os.path.join"], "function", ["None"], ["", "def", "save_checkpoint", "(", "states", ",", "is_best", ",", "output_dir", ",", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "\"\"\"\n    save checkpoint\n    \"\"\"", "\n", "torch", ".", "save", "(", "states", ",", "os", ".", "path", ".", "join", "(", "output_dir", ",", "filename", ")", ")", "\n", "if", "is_best", "and", "'state_dict'", "in", "states", ":", "\n", "        ", "torch", ".", "save", "(", "states", "[", "'state_dict'", "]", ",", "\n", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'model_best.pth'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.save_model": [[523, 539], ["os.path.exists", "os.makedirs", "utils.save_checkpoint", "print", "model.module.state_dict", "optimizer.state_dict"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.save_checkpoint"], ["", "", "def", "save_model", "(", "model", ",", "epoch", ",", "optimizer", ",", "model_name", ",", "cfg", ",", "isbest", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    save model\n    \"\"\"", "\n", "if", "not", "exists", "(", "cfg", ".", "CHECKPOINT_DIR", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "cfg", ".", "CHECKPOINT_DIR", ")", "\n", "\n", "", "if", "epoch", ">", "4", ":", "\n", "        ", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "model_name", ",", "\n", "'state_dict'", ":", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "\n", "}", ",", "isbest", ",", "cfg", ".", "CHECKPOINT_DIR", ",", "'checkpoint_e%d.pth'", "%", "(", "epoch", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'epoch not save(<5)'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.extract_eaos": [[540, 558], ["eaos.index", "line.split", "epochs.append", "eaos.append", "max", "line.startswith", "int", "float", "temp1.split"], "function", ["None"], ["", "", "def", "extract_eaos", "(", "lines", ")", ":", "\n", "    ", "\"\"\"\n    extract info of VOT eao\n    \"\"\"", "\n", "epochs", "=", "[", "]", "\n", "eaos", "=", "[", "]", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "if", "not", "line", ".", "startswith", "(", "'[*]'", ")", ":", "\n", "            ", "continue", "\n", "", "_", ",", "temp1", ",", "_", ",", "temp3", "=", "line", ".", "split", "(", "': '", ")", "\n", "epochs", ".", "append", "(", "int", "(", "temp1", ".", "split", "(", "'_e'", ")", "[", "-", "1", "]", ")", ")", "\n", "eaos", ".", "append", "(", "float", "(", "temp3", ")", ")", "\n", "\n", "# fine bese epoch", "\n", "", "idx", "=", "eaos", ".", "index", "(", "max", "(", "eaos", ")", ")", "\n", "epoch", "=", "epochs", "[", "idx", "]", "\n", "\n", "return", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.extract_logs": [[560, 572], ["open().readlines", "utils.extract_eaos", "ValueError", "open"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.extract_eaos"], ["", "def", "extract_logs", "(", "logfile", ",", "prefix", ")", ":", "\n", "    ", "\"\"\"\n    extract logs for tuning, return best epoch number\n    prefix: VOT, OTB, VOTLT, VOTRGBD, VOTRGBT\n    \"\"\"", "\n", "lines", "=", "open", "(", "logfile", ",", "'r'", ")", ".", "readlines", "(", ")", "\n", "if", "prefix", "==", "'VOT'", ":", "\n", "        ", "epoch", "=", "extract_eaos", "(", "lines", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'not supported now'", ")", "\n", "\n", "", "return", "'checkpoint_e{}.pth'", ".", "format", "(", "epoch", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset.__init__": [[36, 84], ["torch.utils.data.Dataset.__init__", "siamrpn.SiamRPNDataset._naive_anchors", "siamrpn.SiamRPNDataset._pair_anchors", "torchvision.Compose", "print", "siamrpn.SiamRPNDataset._shuffle", "print", "len", "len", "module.SingleData", "siamrpn.SiamRPNDataset.train_datas.append", "random.random", "torchvision.RandomRotation", "torchvision.ToPILImage", "random.random", "torchvision.RandomHorizontalFlip", "random.random", "torchvision.ColorJitter"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._naive_anchors", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._pair_anchors", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._shuffle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SiamRPNDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n", "self", ".", "search_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "score_size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# anchors information", "\n", "self", ".", "thr_high", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_THR_HIGH", "\n", "self", ".", "thr_low", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_THR_LOW", "\n", "self", ".", "pos_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_POS_KEEP", "# kept positive anchors to calc loss", "\n", "self", ".", "all_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_ALL_KEEP", "# kept anchors to calc loss", "\n", "self", ".", "stride", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "\n", "self", ".", "anchor_nums", "=", "len", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_RATIOS", ")", "*", "len", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_SCALES", ")", "\n", "self", ".", "_naive_anchors", "(", "cfg", ")", "# return self.anchors_naive [anchor_num, 4]", "\n", "self", ".", "_pair_anchors", "(", "center", "=", "self", ".", "search_size", "//", "2", ",", "score_size", "=", "self", ".", "score_size", ")", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "ROTATION", "\n", "self", ".", "blur", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "BLUR", "\n", "self", ".", "shift", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SCALE", "\n", "\n", "\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n", "(", "[", "transforms", ".", "ColorJitter", "(", "0.05", ",", "0.05", ",", "0.05", ",", "0.05", ")", ",", "]", "if", "self", ".", "color", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "print", "(", "'train datas: {}'", ".", "format", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ")", ")", "\n", "self", ".", "train_datas", "=", "[", "]", "# all train dataset", "\n", "start", "=", "0", "\n", "self", ".", "num", "=", "0", "\n", "for", "data_name", "in", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ":", "\n", "            ", "dataset", "=", "SingleData", "(", "cfg", ",", "data_name", ",", "start", ")", "\n", "self", ".", "train_datas", ".", "append", "(", "dataset", ")", "\n", "start", "+=", "dataset", ".", "num", "# real video number", "\n", "self", ".", "num", "+=", "dataset", ".", "num_use", "# the number used for subset shuffle", "\n", "\n", "# assert abs(self.num - cfg.SIAMRPN.TRAIN.PAIRS) < eps, 'given pairs is not equal to sum of all dataset'", "\n", "\n", "", "self", ".", "_shuffle", "(", ")", "\n", "print", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset.__len__": [[85, 87], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset.__getitem__": [[88, 116], ["siamrpn.SiamRPNDataset._choose_dataset", "dataset._get_pairs", "cv2.imread", "cv2.imread", "siamrpn.SiamRPNDataset._toBBox", "siamrpn.SiamRPNDataset._toBBox", "siamrpn.SiamRPNDataset._augmentation", "siamrpn.SiamRPNDataset._augmentation", "numpy.array", "numpy.array", "siamrpn.SiamRPNDataset._anchor_target", "siamrpn.SiamRPNDataset._dynamic_label", "map", "numpy.array", "numpy.transpose().astype", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._choose_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_pairs", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._toBBox", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._toBBox", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._augmentation", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._augmentation", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._anchor_target", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._dynamic_label"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# choose a dataset", "\n", "        ", "index", "=", "self", ".", "pick", "[", "index", "]", "\n", "dataset", ",", "index", "=", "self", ".", "_choose_dataset", "(", "index", ")", "\n", "\n", "template", ",", "search", "=", "dataset", ".", "_get_pairs", "(", "index", ")", "\n", "\n", "# read images", "\n", "template_image", "=", "cv2", ".", "imread", "(", "template", "[", "0", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "search", "[", "0", "]", ")", "\n", "\n", "# transform original bbox to cropped image", "\n", "template_box", "=", "self", ".", "_toBBox", "(", "template_image", ",", "template", "[", "1", "]", ")", "\n", "search_box", "=", "self", ".", "_toBBox", "(", "search_image", ",", "search", "[", "1", "]", ")", "\n", "\n", "template", ",", "_", ",", "_", "=", "self", ".", "_augmentation", "(", "template_image", ",", "template_box", ",", "self", ".", "template_size", ")", "\n", "search", ",", "bbox", ",", "dag_param", "=", "self", ".", "_augmentation", "(", "search_image", ",", "search_box", ",", "self", ".", "search_size", ")", "\n", "\n", "# from PIL image to numpy", "\n", "template", "=", "np", ".", "array", "(", "template", ")", "\n", "search", "=", "np", ".", "array", "(", "search", ")", "\n", "\n", "# get label for regression", "\n", "cls", ",", "delta", ",", "delta_weight", "=", "self", ".", "_anchor_target", "(", "bbox", ",", "pos_keep", "=", "self", ".", "pos_keep", ",", "all_keep", "=", "self", ".", "all_keep", ",", "thr_high", "=", "self", ".", "thr_high", ",", "thr_low", "=", "self", ".", "thr_low", ")", "\n", "sum_weight", "=", "self", ".", "_dynamic_label", "(", "[", "self", ".", "score_size", ",", "self", ".", "score_size", "]", ",", "dag_param", "[", "'shift'", "]", ",", "'balanced'", ")", "\n", "template", ",", "search", "=", "map", "(", "lambda", "x", ":", "np", ".", "transpose", "(", "x", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "[", "template", ",", "search", "]", ")", "\n", "\n", "return", "template", ",", "search", ",", "cls", ",", "delta", ",", "delta_weight", ",", "sum_weight", ",", "np", ".", "array", "(", "bbox", ",", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._python2round": [[120, 127], ["round", "round", "round", "abs"], "methods", ["None"], ["", "def", "_python2round", "(", "self", ",", "f", ")", ":", "\n", "        ", "\"\"\"\n        use python2 round in python3 verison.\n        \"\"\"", "\n", "if", "round", "(", "f", "+", "1", ")", "-", "round", "(", "f", ")", "!=", "1", ":", "\n", "            ", "return", "f", "+", "abs", "(", "f", ")", "/", "f", "*", "0.5", "\n", "", "return", "round", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._shuffle": [[128, 145], ["print", "sample_random.shuffle", "len"], "methods", ["None"], ["", "def", "_shuffle", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        random shuffel\n        \"\"\"", "\n", "pick", "=", "[", "]", "\n", "m", "=", "0", "\n", "while", "m", "<", "self", ".", "num", ":", "\n", "            ", "p", "=", "[", "]", "\n", "for", "subset", "in", "self", ".", "train_datas", ":", "\n", "                ", "sub_p", "=", "subset", ".", "pick", "\n", "p", "+=", "sub_p", "\n", "", "sample_random", ".", "shuffle", "(", "p", ")", "\n", "\n", "pick", "+=", "p", "\n", "m", "=", "len", "(", "pick", ")", "\n", "", "self", ".", "pick", "=", "pick", "\n", "print", "(", "\"dataset length {}\"", ".", "format", "(", "self", ".", "num", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._choose_dataset": [[146, 150], ["None"], "methods", ["None"], ["", "def", "_choose_dataset", "(", "self", ",", "index", ")", ":", "\n", "        ", "for", "dataset", "in", "self", ".", "train_datas", ":", "\n", "            ", "if", "dataset", ".", "start", "+", "dataset", ".", "num", ">", "index", ":", "\n", "                ", "return", "dataset", ",", "index", "-", "dataset", ".", "start", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._toBBox": [[151, 168], ["numpy.sqrt", "center2corner", "len", "Center"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner"], ["", "", "", "def", "_toBBox", "(", "self", ",", "image", ",", "shape", ")", ":", "\n", "        ", "imh", ",", "imw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "len", "(", "shape", ")", "==", "4", ":", "\n", "            ", "w", ",", "h", "=", "shape", "[", "2", "]", "-", "shape", "[", "0", "]", ",", "shape", "[", "3", "]", "-", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "shape", "\n", "", "context_amount", "=", "0.5", "\n", "exemplar_size", "=", "self", ".", "template_size", "\n", "wc_z", "=", "w", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "hc_z", "=", "h", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "wc_z", "*", "hc_z", ")", "\n", "scale_z", "=", "exemplar_size", "/", "s_z", "\n", "w", "=", "w", "*", "scale_z", "\n", "h", "=", "h", "*", "scale_z", "\n", "cx", ",", "cy", "=", "imw", "//", "2", ",", "imh", "//", "2", "\n", "bbox", "=", "center2corner", "(", "Center", "(", "cx", ",", "cy", ",", "w", ",", "h", ")", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._crop_hwc": [[169, 182], ["numpy.array().astype", "cv2.warpAffine", "float", "numpy.array"], "methods", ["None"], ["", "def", "_crop_hwc", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "\"\"\"\n        crop image\n        \"\"\"", "\n", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n", "b", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n", "[", "0", ",", "b", ",", "d", "]", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "crop", "=", "cv2", ".", "warpAffine", "(", "image", ",", "mapping", ",", "(", "out_sz", ",", "out_sz", ")", ",", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._posNegRandom": [[183, 188], ["random.random"], "methods", ["None"], ["", "def", "_posNegRandom", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        random number from [-1, 1]\n        \"\"\"", "\n", "return", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._augmentation": [[193, 219], ["center2corner", "easydict.EasyDict", "aug_apply", "BBox", "Corner", "siamrpn.SiamRPNDataset._crop_hwc", "siamrpn.SiamRPNDataset.transform_extra", "Corner", "random.random", "scipy.ndimage.filters.gaussian_filter", "siamrpn.SiamRPNDataset._posNegRandom", "siamrpn.SiamRPNDataset._posNegRandom", "siamrpn.SiamRPNDataset._posNegRandom", "siamrpn.SiamRPNDataset._posNegRandom"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.aug_apply", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._crop_hwc", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom"], ["", "def", "_augmentation", "(", "self", ",", "image", ",", "bbox", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        data augmentation for input pairs\n        \"\"\"", "\n", "shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "size", ",", "size", ")", ")", "\n", "param", "=", "edict", "(", ")", "\n", "\n", "param", ".", "shift", "=", "(", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "shift", ",", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "shift", ")", "# shift", "\n", "param", ".", "scale", "=", "(", "(", "1.0", "+", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "scale", ")", ",", "(", "1.0", "+", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "scale", ")", ")", "# scale change", "\n", "\n", "crop_bbox", ",", "_", "=", "aug_apply", "(", "Corner", "(", "*", "crop_bbox", ")", ",", "param", ",", "shape", ")", "\n", "\n", "x1", ",", "y1", "=", "crop_bbox", ".", "x1", ",", "crop_bbox", ".", "y1", "\n", "bbox", "=", "BBox", "(", "bbox", ".", "x1", "-", "x1", ",", "bbox", ".", "y1", "-", "y1", ",", "bbox", ".", "x2", "-", "x1", ",", "bbox", ".", "y2", "-", "y1", ")", "\n", "\n", "scale_x", ",", "scale_y", "=", "param", ".", "scale", "\n", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "/", "scale_x", ",", "bbox", ".", "y1", "/", "scale_y", ",", "bbox", ".", "x2", "/", "scale_x", ",", "bbox", ".", "y2", "/", "scale_y", ")", "\n", "\n", "image", "=", "self", ".", "_crop_hwc", "(", "image", ",", "crop_bbox", ",", "size", ")", "# shift and scale", "\n", "\n", "if", "self", ".", "blur", ">", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "gaussian_filter", "(", "image", ",", "sigma", "=", "(", "1", ",", "1", ",", "0", ")", ")", "\n", "\n", "", "image", "=", "self", ".", "transform_extra", "(", "image", ")", "# other data augmentation", "\n", "return", "image", ",", "bbox", ",", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._pair_anchors": [[225, 255], ["numpy.array", "map", "corner2center", "numpy.zeros", "map", "center2corner", "numpy.arange().reshape", "numpy.arange().reshape", "numpy.stack", "numpy.stack", "x.reshape", "numpy.arange", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner"], ["", "def", "_pair_anchors", "(", "self", ",", "center", ",", "score_size", ")", ":", "\n", "        ", "\"\"\"\n        anchors corresponding to pairs\n        :param center: center of search image\n        :param score_size: output score size after cross-correlation\n        :return: anchors not corresponding to ground truth\n        \"\"\"", "\n", "a0x", "=", "center", "-", "score_size", "//", "2", "*", "self", ".", "stride", "\n", "ori", "=", "np", ".", "array", "(", "[", "a0x", "]", "*", "4", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "zero_anchors", "=", "self", ".", "anchors_naive", "+", "ori", "\n", "\n", "x1", "=", "zero_anchors", "[", ":", ",", "0", "]", "\n", "y1", "=", "zero_anchors", "[", ":", ",", "1", "]", "\n", "x2", "=", "zero_anchors", "[", ":", ",", "2", "]", "\n", "y2", "=", "zero_anchors", "[", ":", ",", "3", "]", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "lambda", "x", ":", "x", ".", "reshape", "(", "self", ".", "anchor_nums", ",", "1", ",", "1", ")", ",", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "corner2center", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n", "disp_x", "=", "np", ".", "arange", "(", "0", ",", "score_size", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ")", "*", "self", ".", "stride", "\n", "disp_y", "=", "np", ".", "arange", "(", "0", ",", "score_size", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ")", "*", "self", ".", "stride", "\n", "\n", "cx", "=", "cx", "+", "disp_x", "\n", "cy", "=", "cy", "+", "disp_y", "\n", "\n", "zero", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_nums", ",", "score_size", ",", "score_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "map", "(", "lambda", "x", ":", "x", "+", "zero", ",", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "center2corner", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "\n", "self", ".", "anchorsPairs", "=", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", ",", "np", ".", "stack", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._naive_anchors": [[256, 272], ["numpy.zeros", "int", "int", "math.sqrt"], "methods", ["None"], ["", "def", "_naive_anchors", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "\"\"\"\n        anchors corresponding to score map\n        \"\"\"", "\n", "self", ".", "anchors_naive", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_nums", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "self", ".", "stride", "*", "self", ".", "stride", "\n", "count", "=", "0", "\n", "for", "r", "in", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_RATIOS", ":", "\n", "            ", "ws", "=", "int", "(", "math", ".", "sqrt", "(", "size", "*", "1.", "/", "r", ")", ")", "\n", "hs", "=", "int", "(", "ws", "*", "r", ")", "\n", "\n", "for", "s", "in", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_SCALES", ":", "\n", "                ", "w", "=", "ws", "*", "s", "\n", "h", "=", "hs", "*", "s", "\n", "self", ".", "anchors_naive", "[", "count", "]", "[", ":", "]", "=", "[", "-", "w", "*", "0.5", ",", "-", "h", "*", "0.5", ",", "w", "*", "0.5", ",", "h", "*", "0.5", "]", "[", ":", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._anchor_target": [[274, 309], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "corner2center", "numpy.log", "numpy.log", "IoU", "numpy.where", "numpy.where", "siamrpn.SiamRPNDataset._select", "siamrpn.SiamRPNDataset._select"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.corner2center", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.IoU", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._select", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._select"], ["", "", "", "def", "_anchor_target", "(", "self", ",", "target", ",", "pos_keep", "=", "16", ",", "all_keep", "=", "64", ",", "thr_high", "=", "0.6", ",", "thr_low", "=", "0.3", ")", ":", "\n", "        ", "cls", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_nums", ",", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "cls", "[", "...", "]", "=", "-", "1", "# -1 ignore 0 negative 1 positive", "\n", "delta", "=", "np", ".", "zeros", "(", "(", "4", ",", "self", ".", "anchor_nums", ",", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "delta_weight", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_nums", ",", "self", ".", "score_size", ",", "self", ".", "score_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "tcx", ",", "tcy", ",", "tw", ",", "th", "=", "corner2center", "(", "target", ")", "\n", "\n", "anchor_box", "=", "self", ".", "anchorsPairs", "[", "0", "]", "\n", "anchor_center", "=", "self", ".", "anchorsPairs", "[", "1", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor_box", "[", "0", "]", ",", "anchor_box", "[", "1", "]", ",", "anchor_box", "[", "2", "]", ",", "anchor_box", "[", "3", "]", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "anchor_center", "[", "0", "]", ",", "anchor_center", "[", "1", "]", ",", "anchor_center", "[", "2", "]", ",", "anchor_center", "[", "3", "]", "\n", "\n", "\n", "# delta", "\n", "delta", "[", "0", "]", "=", "(", "tcx", "-", "cx", ")", "/", "w", "\n", "delta", "[", "1", "]", "=", "(", "tcy", "-", "cy", ")", "/", "h", "\n", "delta", "[", "2", "]", "=", "np", ".", "log", "(", "tw", "/", "(", "w", "+", "eps", ")", "+", "eps", ")", "\n", "delta", "[", "3", "]", "=", "np", ".", "log", "(", "th", "/", "(", "h", "+", "eps", ")", "+", "eps", ")", "\n", "\n", "# IoU", "\n", "overlap", "=", "IoU", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ",", "target", ")", "\n", "pos", "=", "np", ".", "where", "(", "overlap", ">", "thr_high", ")", "\n", "neg", "=", "np", ".", "where", "(", "overlap", "<", "thr_low", ")", "\n", "\n", "pos", ",", "pos_num", "=", "self", ".", "_select", "(", "pos", ",", "pos_keep", ")", "\n", "neg", ",", "neg_num", "=", "self", ".", "_select", "(", "neg", ",", "all_keep", "-", "pos_num", ")", "\n", "\n", "cls", "[", "pos", "]", "=", "1", "\n", "w_temp", "=", "1.", "/", "(", "pos_num", "+", "1e-6", ")", "# fix bugs here", "\n", "delta_weight", "[", "pos", "]", "=", "w_temp", "\n", "\n", "cls", "[", "neg", "]", "=", "0", "\n", "\n", "return", "cls", ",", "delta", ",", "delta_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._select": [[310, 321], ["numpy.arange", "numpy.random.shuffle", "tuple"], "methods", ["None"], ["", "def", "_select", "(", "self", ",", "position", ",", "keep_num", "=", "16", ")", ":", "\n", "        ", "\"\"\"\n        select pos and neg anchors to balance loss\n        \"\"\"", "\n", "num", "=", "position", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "if", "num", "<=", "keep_num", ":", "\n", "            ", "return", "position", ",", "num", "\n", "", "slt", "=", "np", ".", "arange", "(", "num", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "slt", ")", "\n", "slt", "=", "slt", "[", ":", "keep_num", "]", "\n", "return", "tuple", "(", "p", "[", "slt", "]", "for", "p", "in", "position", ")", ",", "keep_num", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._dynamic_label": [[323, 335], ["isinstance", "siamrpn.SiamRPNDataset._create_dynamic_logisticloss_label", "logger.error"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._create_dynamic_logisticloss_label"], ["", "def", "_dynamic_label", "(", "self", ",", "fixedLabelSize", ",", "c_shift", ",", "labelWeight", "=", "'balanced'", ",", "rPos", "=", "2", ",", "rNeg", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "fixedLabelSize", ",", "int", ")", ":", "\n", "            ", "fixedLabelSize", "=", "[", "fixedLabelSize", ",", "fixedLabelSize", "]", "\n", "\n", "", "assert", "(", "fixedLabelSize", "[", "0", "]", "%", "2", "==", "1", ")", "\n", "\n", "if", "labelWeight", "==", "'balanced'", ":", "\n", "            ", "d_label", "=", "self", ".", "_create_dynamic_logisticloss_label", "(", "fixedLabelSize", ",", "c_shift", ",", "rPos", ",", "rNeg", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "error", "(", "'TODO or unknown'", ")", "\n", "\n", "", "return", "d_label", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamrpn.SiamRPNDataset._create_dynamic_logisticloss_label": [[336, 357], ["isinstance", "numpy.meshgrid", "numpy.where", "numpy.abs", "numpy.abs", "numpy.ones_like", "numpy.where", "round", "round", "numpy.arange", "numpy.floor", "numpy.arange", "numpy.floor", "numpy.zeros_like", "float", "float", "numpy.ones_like"], "methods", ["None"], ["", "def", "_create_dynamic_logisticloss_label", "(", "self", ",", "label_size", ",", "c_shift", ",", "rPos", "=", "2", ",", "rNeg", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "label_size", ",", "int", ")", ":", "\n", "            ", "sz", "=", "label_size", "\n", "", "else", ":", "\n", "            ", "sz", "=", "label_size", "[", "0", "]", "\n", "\n", "#\u3000the real shift is -param['shifts']", "\n", "", "sz_x", "=", "sz", "//", "2", "+", "round", "(", "-", "c_shift", "[", "0", "]", ")", "//", "8", "# 8 is strides", "\n", "sz_y", "=", "sz", "//", "2", "+", "round", "(", "-", "c_shift", "[", "1", "]", ")", "//", "8", "\n", "\n", "x", ",", "y", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "0", ",", "sz", ")", "-", "np", ".", "floor", "(", "float", "(", "sz_x", ")", ")", ",", "\n", "np", ".", "arange", "(", "0", ",", "sz", ")", "-", "np", ".", "floor", "(", "float", "(", "sz_y", ")", ")", ")", "\n", "\n", "dist_to_center", "=", "np", ".", "abs", "(", "x", ")", "+", "np", ".", "abs", "(", "y", ")", "# Block metric", "\n", "label", "=", "np", ".", "where", "(", "dist_to_center", "<=", "rPos", ",", "\n", "np", ".", "ones_like", "(", "y", ")", ",", "\n", "np", ".", "where", "(", "dist_to_center", "<", "rNeg", ",", "\n", "0.5", "*", "np", ".", "ones_like", "(", "y", ")", ",", "\n", "np", ".", "zeros_like", "(", "y", ")", ")", ")", "\n", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset.__init__": [[34, 73], ["torch.utils.data.Dataset.__init__", "torchvision.Compose", "json.load", "list", "len", "siamfc.SiamFCDataset._shuffle", "open", "siamfc.SiamFCDataset.labels.keys", "ValueError", "random.random", "torchvision.RandomRotation", "torchvision.ToPILImage", "random.random", "torchvision.RandomHorizontalFlip", "random.random", "torchvision.ColorJitter"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._shuffle"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SiamFCDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n", "self", ".", "search_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "ROTATION", "\n", "self", ".", "blur", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "BLUR", "\n", "self", ".", "shift", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SCALE", "\n", "\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n", "(", "[", "transforms", ".", "ColorJitter", "(", "0.05", ",", "0.05", ",", "0.05", ",", "0.05", ")", ",", "]", "if", "self", ".", "color", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "if", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'VID'", ":", "\n", "            ", "self", ".", "anno", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "ANNOTATION", "\n", "self", ".", "num_use", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "PAIRS", "\n", "self", ".", "root", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "PATH", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'GOT10K'", ":", "\n", "            ", "self", ".", "anno", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "GOT10K", ".", "ANNOTATION", "\n", "self", ".", "num_use", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "PAIRS", "\n", "self", ".", "root", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "GOT10K", ".", "PATH", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported training dataset'", ")", "\n", "\n", "", "self", ".", "labels", "=", "json", ".", "load", "(", "open", "(", "self", ".", "anno", ",", "'r'", ")", ")", "\n", "self", ".", "videos", "=", "list", "(", "self", ".", "labels", ".", "keys", "(", ")", ")", "\n", "self", ".", "num", "=", "len", "(", "self", ".", "videos", ")", "# video number", "\n", "self", ".", "frame_range", "=", "100", "\n", "self", ".", "pick", "=", "self", ".", "_shuffle", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset.__len__": [[74, 76], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_use", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset.__getitem__": [[77, 102], ["siamfc.SiamFCDataset._get_pairs", "cv2.imread", "cv2.imread", "siamfc.SiamFCDataset._toBBox", "siamfc.SiamFCDataset._toBBox", "siamfc.SiamFCDataset._augmentation", "siamfc.SiamFCDataset._augmentation", "numpy.array", "numpy.array", "siamfc.SiamFCDataset._dynamic_label", "map", "numpy.array", "numpy.transpose().astype", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_pairs", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._toBBox", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._toBBox", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._augmentation", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._augmentation", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._dynamic_label"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        pick a vodeo/frame --> pairs --> data aug --> label\n        \"\"\"", "\n", "index", "=", "self", ".", "pick", "[", "index", "]", "\n", "template", ",", "search", "=", "self", ".", "_get_pairs", "(", "index", ")", "\n", "\n", "template_image", "=", "cv2", ".", "imread", "(", "template", "[", "0", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "search", "[", "0", "]", ")", "\n", "\n", "template_box", "=", "self", ".", "_toBBox", "(", "template_image", ",", "template", "[", "1", "]", ")", "\n", "search_box", "=", "self", ".", "_toBBox", "(", "search_image", ",", "search", "[", "1", "]", ")", "\n", "\n", "template", ",", "_", ",", "_", "=", "self", ".", "_augmentation", "(", "template_image", ",", "template_box", ",", "self", ".", "template_size", ")", "\n", "search", ",", "bbox", ",", "dag_param", "=", "self", ".", "_augmentation", "(", "search_image", ",", "search_box", ",", "self", ".", "search_size", ")", "\n", "\n", "# from PIL image to numpy", "\n", "template", "=", "np", ".", "array", "(", "template", ")", "\n", "search", "=", "np", ".", "array", "(", "search", ")", "\n", "\n", "out_label", "=", "self", ".", "_dynamic_label", "(", "[", "self", ".", "size", ",", "self", ".", "size", "]", ",", "dag_param", ".", "shift", ")", "\n", "\n", "template", ",", "search", "=", "map", "(", "lambda", "x", ":", "np", ".", "transpose", "(", "x", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "[", "template", ",", "search", "]", ")", "\n", "\n", "return", "template", ",", "search", ",", "out_label", ",", "np", ".", "array", "(", "bbox", ",", "np", ".", "float32", ")", "# self.label 15*15/17*17", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._shuffle": [[106, 120], ["list", "range", "sample_random.shuffle"], "methods", ["None"], ["", "def", "_shuffle", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        shuffel to get random pairs index\n        \"\"\"", "\n", "lists", "=", "list", "(", "range", "(", "0", ",", "self", ".", "num", ")", ")", "\n", "m", "=", "0", "\n", "pick", "=", "[", "]", "\n", "while", "m", "<", "self", ".", "num_use", ":", "\n", "            ", "sample_random", ".", "shuffle", "(", "lists", ")", "\n", "pick", "+=", "lists", "\n", "m", "+=", "self", ".", "num", "\n", "\n", "", "self", ".", "pick", "=", "pick", "[", ":", "self", ".", "num_use", "]", "\n", "return", "self", ".", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._get_image_anno": [[121, 130], ["os.path.join"], "methods", ["None"], ["", "def", "_get_image_anno", "(", "self", ",", "video", ",", "track", ",", "frame", ")", ":", "\n", "        ", "\"\"\"\n        get image and annotation\n        \"\"\"", "\n", "frame", "=", "\"{:06d}\"", ".", "format", "(", "frame", ")", "\n", "image_path", "=", "join", "(", "self", ".", "root", ",", "video", ",", "\"{}.{}.x.jpg\"", ".", "format", "(", "frame", ",", "track", ")", ")", "\n", "image_anno", "=", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "[", "frame", "]", "\n", "\n", "return", "image_path", ",", "image_anno", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._get_pairs": [[131, 154], ["random.choice", "random.randint", "max", "int", "int", "list", "min", "random.choice", "siamfc.SiamFCDataset._get_image_anno", "siamfc.SiamFCDataset._get_image_anno", "video.keys", "list", "len", "track_info.keys", "len"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_image_anno", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_image_anno"], ["", "def", "_get_pairs", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        get training pairs\n        \"\"\"", "\n", "video_name", "=", "self", ".", "videos", "[", "index", "]", "\n", "video", "=", "self", ".", "labels", "[", "video_name", "]", "\n", "track", "=", "random", ".", "choice", "(", "list", "(", "video", ".", "keys", "(", ")", ")", ")", "\n", "track_info", "=", "video", "[", "track", "]", "\n", "try", ":", "\n", "            ", "frames", "=", "track_info", "[", "'frames'", "]", "\n", "", "except", ":", "\n", "            ", "frames", "=", "list", "(", "track_info", ".", "keys", "(", ")", ")", "\n", "\n", "", "template_frame", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "frames", ")", "-", "1", ")", "\n", "\n", "left", "=", "max", "(", "template_frame", "-", "self", ".", "frame_range", ",", "0", ")", "\n", "right", "=", "min", "(", "template_frame", "+", "self", ".", "frame_range", ",", "len", "(", "frames", ")", "-", "1", ")", "+", "1", "\n", "search_range", "=", "frames", "[", "left", ":", "right", "]", "\n", "template_frame", "=", "int", "(", "frames", "[", "template_frame", "]", ")", "\n", "search_frame", "=", "int", "(", "random", ".", "choice", "(", "search_range", ")", ")", "\n", "\n", "return", "self", ".", "_get_image_anno", "(", "video_name", ",", "track", ",", "template_frame", ")", ",", "self", ".", "_get_image_anno", "(", "video_name", ",", "track", ",", "search_frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom": [[155, 160], ["random.random"], "methods", ["None"], ["", "def", "_posNegRandom", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        random number from [-1, 1]\n        \"\"\"", "\n", "return", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._toBBox": [[161, 178], ["numpy.sqrt", "center2corner", "len", "Center"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner"], ["", "def", "_toBBox", "(", "self", ",", "image", ",", "shape", ")", ":", "\n", "        ", "imh", ",", "imw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "len", "(", "shape", ")", "==", "4", ":", "\n", "            ", "w", ",", "h", "=", "shape", "[", "2", "]", "-", "shape", "[", "0", "]", ",", "shape", "[", "3", "]", "-", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "shape", "\n", "", "context_amount", "=", "0.5", "\n", "exemplar_size", "=", "self", ".", "template_size", "\n", "wc_z", "=", "w", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "hc_z", "=", "h", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "wc_z", "*", "hc_z", ")", "\n", "scale_z", "=", "exemplar_size", "/", "s_z", "\n", "w", "=", "w", "*", "scale_z", "\n", "h", "=", "h", "*", "scale_z", "\n", "cx", ",", "cy", "=", "imw", "//", "2", ",", "imh", "//", "2", "\n", "bbox", "=", "center2corner", "(", "Center", "(", "cx", ",", "cy", ",", "w", ",", "h", ")", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._crop_hwc": [[179, 192], ["numpy.array().astype", "cv2.warpAffine", "float", "numpy.array"], "methods", ["None"], ["", "def", "_crop_hwc", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "\"\"\"\n        crop image\n        \"\"\"", "\n", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n", "b", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n", "[", "0", ",", "b", ",", "d", "]", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "crop", "=", "cv2", ".", "warpAffine", "(", "image", ",", "mapping", ",", "(", "out_sz", ",", "out_sz", ")", ",", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._draw": [[193, 203], ["image.copy", "map", "cv2.rectangle", "cv2.circle", "cv2.putText", "cv2.imwrite", "int", "int", "int", "int", "int", "round", "int", "int", "round", "round", "round", "round", "round", "round"], "methods", ["None"], ["", "def", "_draw", "(", "self", ",", "image", ",", "box", ",", "name", ")", ":", "\n", "        ", "\"\"\"\n        draw image for debugging\n        \"\"\"", "\n", "draw_image", "=", "image", ".", "copy", "(", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "lambda", "x", ":", "int", "(", "round", "(", "x", ")", ")", ",", "box", ")", "\n", "cv2", ".", "rectangle", "(", "draw_image", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "cv2", ".", "circle", "(", "draw_image", ",", "(", "int", "(", "round", "(", "x1", "+", "x2", ")", "/", "2", ")", ",", "int", "(", "round", "(", "y1", "+", "y2", ")", "/", "2", ")", ")", ",", "3", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "cv2", ".", "putText", "(", "draw_image", ",", "'[x: {}, y: {}]'", ".", "format", "(", "int", "(", "round", "(", "x1", "+", "x2", ")", "/", "2", ")", ",", "int", "(", "round", "(", "y1", "+", "y2", ")", "/", "2", ")", ")", ",", "(", "int", "(", "round", "(", "x1", "+", "x2", ")", "/", "2", ")", "-", "3", ",", "int", "(", "round", "(", "y1", "+", "y2", ")", "/", "2", ")", "-", "3", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "0.3", ",", "(", "255", ",", "255", ",", "255", ")", ",", "1", ")", "\n", "cv2", ".", "imwrite", "(", "name", ",", "draw_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._augmentation": [[207, 233], ["center2corner", "easydict.EasyDict", "aug_apply", "BBox", "Corner", "siamfc.SiamFCDataset._crop_hwc", "siamfc.SiamFCDataset.transform_extra", "Corner", "random.random", "scipy.ndimage.filters.gaussian_filter", "siamfc.SiamFCDataset._posNegRandom", "siamfc.SiamFCDataset._posNegRandom", "siamfc.SiamFCDataset._posNegRandom", "siamfc.SiamFCDataset._posNegRandom"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.center2corner", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.aug_apply", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._crop_hwc", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._posNegRandom"], ["", "def", "_augmentation", "(", "self", ",", "image", ",", "bbox", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        data augmentation for input pairs\n        \"\"\"", "\n", "shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "size", ",", "size", ")", ")", "\n", "param", "=", "edict", "(", ")", "\n", "\n", "param", ".", "shift", "=", "(", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "shift", ",", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "shift", ")", "# shift", "\n", "param", ".", "scale", "=", "(", "(", "1.0", "+", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "scale", ")", ",", "(", "1.0", "+", "self", ".", "_posNegRandom", "(", ")", "*", "self", ".", "scale", ")", ")", "# scale change", "\n", "\n", "crop_bbox", ",", "_", "=", "aug_apply", "(", "Corner", "(", "*", "crop_bbox", ")", ",", "param", ",", "shape", ")", "\n", "\n", "x1", ",", "y1", "=", "crop_bbox", ".", "x1", ",", "crop_bbox", ".", "y1", "\n", "bbox", "=", "BBox", "(", "bbox", ".", "x1", "-", "x1", ",", "bbox", ".", "y1", "-", "y1", ",", "bbox", ".", "x2", "-", "x1", ",", "bbox", ".", "y2", "-", "y1", ")", "\n", "\n", "scale_x", ",", "scale_y", "=", "param", ".", "scale", "\n", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "/", "scale_x", ",", "bbox", ".", "y1", "/", "scale_y", ",", "bbox", ".", "x2", "/", "scale_x", ",", "bbox", ".", "y2", "/", "scale_y", ")", "\n", "\n", "image", "=", "self", ".", "_crop_hwc", "(", "image", ",", "crop_bbox", ",", "size", ")", "# shift and scale", "\n", "\n", "if", "self", ".", "blur", ">", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "gaussian_filter", "(", "image", ",", "sigma", "=", "(", "1", ",", "1", ",", "0", ")", ")", "\n", "\n", "", "image", "=", "self", ".", "transform_extra", "(", "image", ")", "# other data augmentation", "\n", "return", "image", ",", "bbox", ",", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._dynamic_label": [[237, 246], ["isinstance", "siamfc.SiamFCDataset._create_dynamic_logisticloss_label"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._create_dynamic_logisticloss_label"], ["", "def", "_dynamic_label", "(", "self", ",", "fixedLabelSize", ",", "c_shift", ",", "rPos", "=", "2", ",", "rNeg", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "fixedLabelSize", ",", "int", ")", ":", "\n", "            ", "fixedLabelSize", "=", "[", "fixedLabelSize", ",", "fixedLabelSize", "]", "\n", "\n", "", "assert", "(", "fixedLabelSize", "[", "0", "]", "%", "2", "==", "1", ")", "\n", "\n", "d_label", "=", "self", ".", "_create_dynamic_logisticloss_label", "(", "fixedLabelSize", ",", "c_shift", ",", "rPos", ",", "rNeg", ")", "\n", "\n", "return", "d_label", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.siamfc.SiamFCDataset._create_dynamic_logisticloss_label": [[247, 267], ["isinstance", "numpy.meshgrid", "numpy.where", "numpy.abs", "numpy.abs", "numpy.ones_like", "numpy.where", "round", "round", "numpy.arange", "numpy.floor", "numpy.arange", "numpy.floor", "numpy.zeros_like", "float", "float", "numpy.ones_like"], "methods", ["None"], ["", "def", "_create_dynamic_logisticloss_label", "(", "self", ",", "label_size", ",", "c_shift", ",", "rPos", "=", "2", ",", "rNeg", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "label_size", ",", "int", ")", ":", "\n", "            ", "sz", "=", "label_size", "\n", "", "else", ":", "\n", "            ", "sz", "=", "label_size", "[", "0", "]", "\n", "\n", "# the real shift is -param['shifts']", "\n", "", "sz_x", "=", "sz", "//", "2", "+", "round", "(", "-", "c_shift", "[", "0", "]", ")", "//", "8", "# 8 is strides", "\n", "sz_y", "=", "sz", "//", "2", "+", "round", "(", "-", "c_shift", "[", "1", "]", ")", "//", "8", "\n", "\n", "x", ",", "y", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "0", ",", "sz", ")", "-", "np", ".", "floor", "(", "float", "(", "sz_x", ")", ")", ",", "\n", "np", ".", "arange", "(", "0", ",", "sz", ")", "-", "np", ".", "floor", "(", "float", "(", "sz_y", ")", ")", ")", "\n", "\n", "dist_to_center", "=", "np", ".", "abs", "(", "x", ")", "+", "np", ".", "abs", "(", "y", ")", "# Block metric", "\n", "label", "=", "np", ".", "where", "(", "dist_to_center", "<=", "rPos", ",", "\n", "np", ".", "ones_like", "(", "y", ")", ",", "\n", "np", ".", "where", "(", "dist_to_center", "<", "rNeg", ",", "\n", "0.5", "*", "np", ".", "ones_like", "(", "y", ")", ",", "\n", "np", ".", "zeros_like", "(", "y", ")", ")", ")", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData.__init__": [[19, 34], ["module.SingleData._shuffle", "open", "json.load", "module.SingleData._clean", "len"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._shuffle", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._clean"], ["def", "__init__", "(", "self", ",", "cfg", ",", "data_name", ",", "start", ")", ":", "\n", "        ", "self", ".", "data_name", "=", "data_name", "\n", "self", ".", "start", "=", "start", "\n", "\n", "info", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", "[", "data_name", "]", "\n", "self", ".", "frame_range", "=", "info", ".", "RANGE", "\n", "self", ".", "num_use", "=", "info", ".", "USE", "\n", "self", ".", "root", "=", "info", ".", "PATH", "\n", "\n", "with", "open", "(", "info", ".", "ANNOTATION", ")", "as", "fin", ":", "\n", "            ", "self", ".", "labels", "=", "json", ".", "load", "(", "fin", ")", "\n", "self", ".", "_clean", "(", ")", "\n", "self", ".", "num", "=", "len", "(", "self", ".", "labels", ")", "# video number", "\n", "\n", "", "self", ".", "_shuffle", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._clean": [[35, 70], ["list", "print", "to_del.append", "module.SingleData.labels.keys", "list", "list.sort", "len", "print", "to_del.append", "map", "len", "print", "to_del.append", "list.keys"], "methods", ["None"], ["", "def", "_clean", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        remove empty videos/frames/annos in dataset\n        \"\"\"", "\n", "# no frames", "\n", "to_del", "=", "[", "]", "\n", "for", "video", "in", "self", ".", "labels", ":", "\n", "            ", "for", "track", "in", "self", ".", "labels", "[", "video", "]", ":", "\n", "                ", "frames", "=", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "\n", "frames", "=", "list", "(", "map", "(", "int", ",", "frames", ".", "keys", "(", ")", ")", ")", "\n", "frames", ".", "sort", "(", ")", "\n", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "[", "'frames'", "]", "=", "frames", "\n", "if", "len", "(", "frames", ")", "<=", "0", ":", "\n", "                    ", "print", "(", "\"warning {}/{} has no frames.\"", ".", "format", "(", "video", ",", "track", ")", ")", "\n", "to_del", ".", "append", "(", "(", "video", ",", "track", ")", ")", "\n", "\n", "", "", "", "for", "video", ",", "track", "in", "to_del", ":", "\n", "            ", "del", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "\n", "\n", "# no track/annos", "\n", "", "to_del", "=", "[", "]", "\n", "\n", "if", "self", ".", "data_name", "==", "'YTB'", ":", "\n", "            ", "to_del", ".", "append", "(", "'train/1/YyE0clBPamU'", ")", "# This video has no bounding box.", "\n", "\n", "", "for", "video", "in", "self", ".", "labels", ":", "\n", "            ", "if", "len", "(", "self", ".", "labels", "[", "video", "]", ")", "<=", "0", ":", "\n", "                ", "print", "(", "\"warning {} has no tracks\"", ".", "format", "(", "video", ")", ")", "\n", "to_del", ".", "append", "(", "video", ")", "\n", "\n", "", "", "for", "video", "in", "to_del", ":", "\n", "            ", "del", "self", ".", "labels", "[", "video", "]", "\n", "\n", "", "self", ".", "videos", "=", "list", "(", "self", ".", "labels", ".", "keys", "(", ")", ")", "\n", "print", "(", "'{} loaded.'", ".", "format", "(", "self", ".", "data_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._shuffle": [[71, 85], ["list", "range", "sample_random.shuffle"], "methods", ["None"], ["", "def", "_shuffle", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        shuffel to get random pairs index (video)\n        \"\"\"", "\n", "lists", "=", "list", "(", "range", "(", "self", ".", "start", ",", "self", ".", "start", "+", "self", ".", "num", ")", ")", "\n", "m", "=", "0", "\n", "pick", "=", "[", "]", "\n", "while", "m", "<", "self", ".", "num_use", ":", "\n", "            ", "sample_random", ".", "shuffle", "(", "lists", ")", "\n", "pick", "+=", "lists", "\n", "m", "+=", "self", ".", "num", "\n", "\n", "", "self", ".", "pick", "=", "pick", "[", ":", "self", ".", "num_use", "]", "\n", "return", "self", ".", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_image_anno": [[86, 96], ["os.path.join"], "methods", ["None"], ["", "def", "_get_image_anno", "(", "self", ",", "video", ",", "track", ",", "frame", ")", ":", "\n", "        ", "\"\"\"\n        get image and annotation\n        \"\"\"", "\n", "\n", "frame", "=", "\"{:06d}\"", ".", "format", "(", "frame", ")", "\n", "image_path", "=", "join", "(", "self", ".", "root", ",", "video", ",", "\"{}.{}.x.jpg\"", ".", "format", "(", "frame", ",", "track", ")", ")", "\n", "image_anno", "=", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "[", "frame", "]", "\n", "\n", "return", "image_path", ",", "image_anno", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_pairs": [[97, 120], ["random.choice", "random.randint", "max", "random.choice", "list", "min", "module.SingleData._get_image_anno", "module.SingleData._get_image_anno", "video.keys", "list", "len", "track_info.keys", "len"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_image_anno", "home.repos.pwc.inspect_result.researchmm_SiamDW.dataset.module.SingleData._get_image_anno"], ["", "def", "_get_pairs", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        get training pairs\n        \"\"\"", "\n", "video_name", "=", "self", ".", "videos", "[", "index", "]", "\n", "video", "=", "self", ".", "labels", "[", "video_name", "]", "\n", "track", "=", "random", ".", "choice", "(", "list", "(", "video", ".", "keys", "(", ")", ")", ")", "\n", "track_info", "=", "video", "[", "track", "]", "\n", "try", ":", "\n", "            ", "frames", "=", "track_info", "[", "'frames'", "]", "\n", "", "except", ":", "\n", "            ", "frames", "=", "list", "(", "track_info", ".", "keys", "(", ")", ")", "\n", "\n", "", "template_frame", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "frames", ")", "-", "1", ")", "\n", "\n", "left", "=", "max", "(", "template_frame", "-", "self", ".", "frame_range", ",", "0", ")", "\n", "right", "=", "min", "(", "template_frame", "+", "self", ".", "frame_range", ",", "len", "(", "frames", ")", "-", "1", ")", "+", "1", "\n", "search_range", "=", "frames", "[", "left", ":", "right", "]", "\n", "template_frame", "=", "frames", "[", "template_frame", "]", "\n", "search_frame", "=", "random", ".", "choice", "(", "search_range", ")", "\n", "\n", "return", "self", ".", "_get_image_anno", "(", "video_name", ",", "track", ",", "template_frame", ")", ",", "self", ".", "_get_image_anno", "(", "video_name", ",", "track", ",", "search_frame", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.models.SiamFCRes22.__init__": [[21, 25], ["siamfc.SiamFC_.__init__", "backbones.ResNet22", "connect.Corr_Up"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SiamFCRes22", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "features", "=", "ResNet22", "(", ")", "\n", "self", ".", "connect_model", "=", "Corr_Up", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.models.SiamFCIncep22.__init__": [[28, 32], ["siamfc.SiamFC_.__init__", "backbones.Incep22", "connect.Corr_Up"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SiamFCIncep22", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "features", "=", "Incep22", "(", ")", "\n", "self", ".", "connect_model", "=", "Corr_Up", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.models.SiamFCNext22.__init__": [[35, 39], ["siamfc.SiamFC_.__init__", "backbones.ResNeXt22", "connect.Corr_Up"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SiamFCNext22", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "features", "=", "ResNeXt22", "(", ")", "\n", "self", ".", "connect_model", "=", "Corr_Up", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.models.SiamFCRes22W.__init__": [[42, 46], ["siamfc.SiamFC_.__init__", "backbones.ResNet22W", "connect.Corr_Up"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SiamFCRes22W", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "features", "=", "ResNet22W", "(", ")", "\n", "self", ".", "connect_model", "=", "Corr_Up", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.models.SiamRPNRes22.__init__": [[49, 62], ["siamrpn.SiamRPN_.__init__", "backbones.ResNet22", "connect.RPN_Up", "ValueError"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SiamRPNRes22", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "features", "=", "ResNet22", "(", ")", "\n", "inchannels", "=", "self", ".", "features", ".", "feature_size", "\n", "\n", "if", "self", ".", "cls_type", "==", "'thinner'", ":", "outchannels", "=", "256", "\n", "elif", "self", ".", "cls_type", "==", "'thicker'", ":", "outchannels", "=", "512", "\n", "else", ":", "raise", "ValueError", "(", "'not implemented loss/cls type'", ")", "\n", "\n", "self", ".", "connect_model", "=", "RPN_Up", "(", "anchor_nums", "=", "self", ".", "anchor_nums", ",", "\n", "inchannels", "=", "inchannels", ",", "\n", "outchannels", "=", "outchannels", ",", "\n", "cls_type", "=", "self", ".", "cls_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.__init__": [[16, 29], ["torch.Module.__init__", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["import", "numpy", "as", "np", "\n", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "\n", "from", "os", ".", "path", "import", "join", "\n", "from", "torch", ".", "utils", ".", "data", "import", "Dataset", "\n", "from", "easydict", "import", "EasyDict", "as", "edict", "\n", "from", "scipy", ".", "ndimage", ".", "filters", "import", "gaussian_filter", "\n", "import", "sys", "\n", "sys", ".", "path", ".", "append", "(", "'../'", ")", "\n", "from", "utils", ".", "utils", "import", "*", "\n", "from", "core", ".", "config", "import", "config", "\n", "from", ".", "module", "import", "SingleData", "\n", "\n", "sample_random", "=", "random", ".", "Random", "(", ")", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.feature_extractor": [[30, 32], ["siamrpn.SiamRPN_.features"], "methods", ["None"], ["# sample_random.seed(123456)", "\n", "\n", "eps", "=", "1e-7", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.connector": [[33, 36], ["siamrpn.SiamRPN_.connect_model"], "methods", ["None"], ["\n", "\n", "class", "SiamRPNDataset", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.template": [[37, 39], ["siamrpn.SiamRPN_.feature_extractor"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor"], ["        ", "super", "(", "SiamRPNDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.track": [[40, 44], ["siamrpn.SiamRPN_.feature_extractor", "siamrpn.SiamRPN_.connector"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.connector"], ["self", ".", "search_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "score_size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# anchors information", "\n", "self", ".", "thr_high", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_THR_HIGH", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._weight_l1_loss": [[46, 56], ["pred_reg.view.view.size", "pred_reg.view.view.view", "diff.sum().view.sum().view.sum().view", "loss.sum().div", "diff.sum().view.sum().view.sum", "loss.sum"], "methods", ["None"], ["self", ".", "pos_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_POS_KEEP", "# kept positive anchors to calc loss", "\n", "self", ".", "all_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_ALL_KEEP", "# kept anchors to calc loss", "\n", "self", ".", "stride", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "\n", "self", ".", "anchor_nums", "=", "len", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_RATIOS", ")", "*", "len", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_SCALES", ")", "\n", "self", ".", "_naive_anchors", "(", "cfg", ")", "# return self.anchors_naive [anchor_num, 4]", "\n", "self", ".", "_pair_anchors", "(", "center", "=", "self", ".", "search_size", "//", "2", ",", "score_size", "=", "self", ".", "score_size", ")", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "ROTATION", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._get_loss": [[58, 63], ["torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "siamrpn.SiamRPN_.criterion", "len", "select.size"], "methods", ["None"], ["self", ".", "shift", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SCALE", "\n", "\n", "\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._cls_loss": [[65, 77], ["pred.view.view.view", "label.view.view.view", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "siamrpn.SiamRPN_._get_loss", "siamrpn.SiamRPN_._get_loss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero", "label.view.view.data.eq().nonzero", "label.view.view.data.eq", "label.view.view.data.eq"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._get_loss", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._get_loss"], ["+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "print", "(", "'train datas: {}'", ".", "format", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ")", ")", "\n", "self", ".", "train_datas", "=", "[", "]", "# all train dataset", "\n", "start", "=", "0", "\n", "self", ".", "num", "=", "0", "\n", "for", "data_name", "in", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ":", "\n", "            ", "dataset", "=", "SingleData", "(", "cfg", ",", "data_name", ",", "start", ")", "\n", "self", ".", "train_datas", ".", "append", "(", "dataset", ")", "\n", "start", "+=", "dataset", ".", "num", "# real video number", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._loss": [[78, 88], ["pred_cls.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "siamrpn.SiamRPN_._weight_l1_loss", "siamrpn.SiamRPN_._cls_loss", "siamrpn.SiamRPN_._cls_loss"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._weight_l1_loss", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._cls_loss", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._cls_loss"], ["self", ".", "num", "+=", "dataset", ".", "num_use", "# the number used for subset shuffle", "\n", "\n", "# assert abs(self.num - cfg.SIAMRPN.TRAIN.PAIRS) < eps, 'given pairs is not equal to sum of all dataset'", "\n", "\n", "", "self", ".", "_shuffle", "(", ")", "\n", "print", "(", "cfg", ")", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._loss_thicker": [[90, 103], ["pred_cls.contiguous().view.contiguous().view.size", "pred_cls.contiguous().view.contiguous().view.view", "pred_cls.contiguous().view.contiguous().view.permute().contiguous", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "pred_cls.contiguous().view.contiguous().view.contiguous().view", "siamrpn.SiamRPN_._weighted_CE", "siamrpn.SiamRPN_._weight_l1_loss", "pred_cls.contiguous().view.contiguous().view.permute", "pred_cls.contiguous().view.contiguous().view.contiguous"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._weighted_CE", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._weight_l1_loss"], ["        ", "index", "=", "self", ".", "pick", "[", "index", "]", "\n", "dataset", ",", "index", "=", "self", ".", "_choose_dataset", "(", "index", ")", "\n", "\n", "template", ",", "search", "=", "dataset", ".", "_get_pairs", "(", "index", ")", "\n", "\n", "# read images", "\n", "template_image", "=", "cv2", ".", "imread", "(", "template", "[", "0", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "search", "[", "0", "]", ")", "\n", "\n", "# transform original bbox to cropped image", "\n", "template_box", "=", "self", ".", "_toBBox", "(", "template_image", ",", "template", "[", "1", "]", ")", "\n", "search_box", "=", "self", ".", "_toBBox", "(", "search_image", ",", "search", "[", "1", "]", ")", "\n", "\n", "template", ",", "_", ",", "_", "=", "self", ".", "_augmentation", "(", "template_image", ",", "template_box", ",", "self", ".", "template_size", ")", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._weighted_CE": [[105, 118], ["pred.view.view.view", "label.view.view.view", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "siamrpn.SiamRPN_._cls_loss_thicker", "siamrpn.SiamRPN_._cls_loss_thicker", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero", "label.view.view.data.eq().nonzero", "label.view.view.data.eq", "label.view.view.data.eq"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._cls_loss_thicker", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._cls_loss_thicker"], ["\n", "# from PIL image to numpy", "\n", "template", "=", "np", ".", "array", "(", "template", ")", "\n", "search", "=", "np", ".", "array", "(", "search", ")", "\n", "\n", "# get label for regression", "\n", "cls", ",", "delta", ",", "delta_weight", "=", "self", ".", "_anchor_target", "(", "bbox", ",", "pos_keep", "=", "self", ".", "pos_keep", ",", "all_keep", "=", "self", ".", "all_keep", ",", "thr_high", "=", "self", ".", "thr_high", ",", "thr_low", "=", "self", ".", "thr_low", ")", "\n", "sum_weight", "=", "self", ".", "_dynamic_label", "(", "[", "self", ".", "score_size", ",", "self", ".", "score_size", "]", ",", "dag_param", "[", "'shift'", "]", ",", "'balanced'", ")", "\n", "template", ",", "search", "=", "map", "(", "lambda", "x", ":", "np", ".", "transpose", "(", "x", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "[", "template", ",", "search", "]", ")", "\n", "\n", "return", "template", ",", "search", ",", "cls", ",", "delta", ",", "delta_weight", ",", "sum_weight", ",", "np", ".", "array", "(", "bbox", ",", "np", ".", "float32", ")", "\n", "\n", "# ------------------------------------", "\n", "# function groups for selecting pairs", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._cls_loss_thicker": [[119, 125], ["torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.nll_loss", "torch.nll_loss", "torch.nll_loss", "len", "select.size"], "methods", ["None"], ["# ------------------------------------", "\n", "", "def", "_python2round", "(", "self", ",", "f", ")", ":", "\n", "        ", "\"\"\"\n        use python2 round in python3 verison.\n        \"\"\"", "\n", "if", "round", "(", "f", "+", "1", ")", "-", "round", "(", "f", ")", "!=", "1", ":", "\n", "            ", "return", "f", "+", "abs", "(", "f", ")", "/", "f", "*", "0.5", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_.forward": [[126, 141], ["siamrpn.SiamRPN_.feature_extractor", "siamrpn.SiamRPN_.feature_extractor", "siamrpn.SiamRPN_.connector", "ValueError", "siamrpn.SiamRPN_._loss", "siamrpn.SiamRPN_._loss_thicker", "ValueError"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.connector", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._loss", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamrpn.SiamRPN_._loss_thicker"], ["", "return", "round", "(", "f", ")", "\n", "\n", "", "def", "_shuffle", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        random shuffel\n        \"\"\"", "\n", "pick", "=", "[", "]", "\n", "m", "=", "0", "\n", "while", "m", "<", "self", ".", "num", ":", "\n", "            ", "p", "=", "[", "]", "\n", "for", "subset", "in", "self", ".", "train_datas", ":", "\n", "                ", "sub_p", "=", "subset", ".", "pick", "\n", "p", "+=", "sub_p", "\n", "", "sample_random", ".", "shuffle", "(", "p", ")", "\n", "\n", "pick", "+=", "p", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.__init__": [[15, 21], ["torch.Module.__init__", "torch.BCEWithLogitsLoss", "torch.BCEWithLogitsLoss"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["import", "random", "\n", "import", "logging", "\n", "import", "numpy", "as", "np", "\n", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "from", "scipy", ".", "ndimage", ".", "filters", "import", "gaussian_filter", "\n", "from", "os", ".", "path", "import", "join", "\n", "from", "easydict", "import", "EasyDict", "as", "edict", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor": [[22, 24], ["siamfc.SiamFC_.features"], "methods", ["None"], ["from", "torch", ".", "utils", ".", "data", "import", "Dataset", "\n", "\n", "import", "sys", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.connector": [[25, 28], ["siamfc.SiamFC_.connect_model"], "methods", ["None"], ["sys", ".", "path", ".", "append", "(", "'../'", ")", "\n", "from", "utils", ".", "utils", "import", "*", "\n", "from", "core", ".", "config", "import", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._cls_loss": [[29, 34], ["torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "siamfc.SiamFC_.criterion", "len", "select.size"], "methods", ["None"], ["sample_random", "=", "random", ".", "Random", "(", ")", "\n", "# sample_random.seed(123456)", "\n", "\n", "\n", "class", "SiamFCDataset", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._weighted_BCE": [[35, 44], ["pred.view.view.view", "label.view.view.view", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "siamfc.SiamFC_._cls_loss", "siamfc.SiamFC_._cls_loss", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero().squeeze", "label.view.view.data.eq().nonzero", "label.view.view.data.eq().nonzero", "label.view.view.data.eq", "label.view.view.data.eq"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._cls_loss", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._cls_loss"], ["        ", "super", "(", "SiamFCDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n", "self", ".", "search_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "ROTATION", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.template": [[45, 47], ["siamfc.SiamFC_.feature_extractor"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor"], ["self", ".", "blur", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "BLUR", "\n", "self", ".", "shift", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SCALE", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.track": [[48, 52], ["siamfc.SiamFC_.feature_extractor", "siamfc.SiamFC_.connector"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.connector"], ["\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n", "(", "[", "transforms", ".", "ColorJitter", "(", "0.05", ",", "0.05", ",", "0.05", ",", "0.05", ")", ",", "]", "if", "self", ".", "color", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.forward": [[53, 61], ["siamfc.SiamFC_.feature_extractor", "siamfc.SiamFC_.feature_extractor", "siamfc.SiamFC_.connector", "siamfc.SiamFC_._weighted_BCE", "ValueError"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.feature_extractor", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.connector", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_._weighted_BCE"], ["+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "if", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'VID'", ":", "\n", "            ", "self", ".", "anno", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "ANNOTATION", "\n", "self", ".", "num_use", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "PAIRS", "\n", "self", ".", "root", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "PATH", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'GOT10K'", ":", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Bottleneck_CI.__init__": [[59, 76], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "last_relu", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck_CI", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "padding", "=", "1", "\n", "if", "abs", "(", "dilation", "-", "2", ")", "<", "eps", ":", "padding", "=", "2", "\n", "if", "abs", "(", "dilation", "-", "3", ")", "<", "eps", ":", "padding", "=", "3", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "last_relu", "=", "last_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Bottleneck_CI.forward": [[77, 102], ["modules.Bottleneck_CI.conv1", "modules.Bottleneck_CI.bn1", "modules.Bottleneck_CI.relu", "modules.Bottleneck_CI.conv2", "modules.Bottleneck_CI.bn2", "modules.Bottleneck_CI.relu", "modules.Bottleneck_CI.conv3", "modules.Bottleneck_CI.bn3", "modules.center_crop", "modules.Bottleneck_CI.downsample", "modules.Bottleneck_CI.relu"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "if", "self", ".", "last_relu", ":", "# remove relu for the last block", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "", "out", "=", "center_crop", "(", "out", ")", "# in-residual crop", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Bottleneck_BIG_CI.__init__": [[110, 127], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "last_relu", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck_BIG_CI", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "padding", "=", "1", "\n", "if", "abs", "(", "dilation", "-", "2", ")", "<", "eps", ":", "padding", "=", "2", "\n", "if", "abs", "(", "dilation", "-", "3", ")", "<", "eps", ":", "padding", "=", "3", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", "*", "2", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "last_relu", "=", "last_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Bottleneck_BIG_CI.forward": [[128, 153], ["modules.Bottleneck_BIG_CI.conv1", "modules.Bottleneck_BIG_CI.bn1", "modules.Bottleneck_BIG_CI.relu", "modules.Bottleneck_BIG_CI.conv2", "modules.Bottleneck_BIG_CI.bn2", "modules.Bottleneck_BIG_CI.relu", "modules.Bottleneck_BIG_CI.conv3", "modules.Bottleneck_BIG_CI.bn3", "modules.center_crop", "modules.Bottleneck_BIG_CI.downsample", "modules.Bottleneck_BIG_CI.relu"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "if", "self", ".", "last_relu", ":", "# feature out no relu", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "", "out", "=", "center_crop", "(", "out", ")", "# in-layer crop", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNet.__init__": [[165, 192], ["len", "torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "modules.ResNet.modules", "modules.ResNet._make_layer", "modules.ResNet._make_layer", "modules.ResNet._make_layer", "modules.ResNet._make_layer", "isinstance", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "isinstance", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "last_relus", ",", "s2p_flags", ",", "firstchannels", "=", "64", ",", "channels", "=", "[", "64", ",", "128", "]", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "firstchannels", "\n", "self", ".", "stage_len", "=", "len", "(", "layers", ")", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "firstchannels", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "firstchannels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "# stage2", "\n", "if", "s2p_flags", "[", "0", "]", ":", "\n", "            ", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "channels", "[", "0", "]", ",", "layers", "[", "0", "]", ",", "stride2pool", "=", "True", ",", "last_relu", "=", "last_relus", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "channels", "[", "0", "]", ",", "layers", "[", "0", "]", ",", "last_relu", "=", "last_relus", "[", "0", "]", ")", "\n", "\n", "# stage3", "\n", "", "if", "s2p_flags", "[", "1", "]", ":", "\n", "            ", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "channels", "[", "1", "]", ",", "layers", "[", "1", "]", ",", "stride2pool", "=", "True", ",", "last_relu", "=", "last_relus", "[", "1", "]", ",", "dilation", "=", "dilation", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "channels", "[", "1", "]", ",", "layers", "[", "1", "]", ",", "last_relu", "=", "last_relus", "[", "1", "]", ",", "dilation", "=", "dilation", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNet._make_layer": [[193, 222], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "block", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "last_relu", ",", "stride", "=", "1", ",", "stride2pool", "=", "False", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        :param block:\n        :param planes:\n        :param blocks:\n        :param stride:\n        :param stride2pool: translate (3,2) conv to (3, 1)conv + (2, 2)pool\n        :return:\n        \"\"\"", "\n", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "last_relu", "=", "True", ",", "stride", "=", "stride", ",", "downsample", "=", "downsample", ",", "dilation", "=", "dilation", ")", ")", "\n", "if", "stride2pool", ":", "\n", "            ", "layers", ".", "append", "(", "self", ".", "maxpool", ")", "\n", "", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "if", "i", "==", "blocks", "-", "1", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "last_relu", "=", "last_relu", ",", "dilation", "=", "dilation", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "last_relu", "=", "True", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNet.forward": [[223, 234], ["modules.ResNet.conv1", "modules.ResNet.bn1", "modules.ResNet.relu", "modules.center_crop7", "modules.ResNet.maxpool", "modules.ResNet.layer1", "modules.ResNet.layer2"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop7"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "# stride = 2", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "center_crop7", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "# stride = 4", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "# stride = 8", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicConv2d_1x1.__init__": [[244, 249], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "last_relu", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BasicConv2d_1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "bias", "=", "False", ",", "**", "kwargs", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "eps", "=", "0.001", ")", "\n", "self", ".", "last_relu", "=", "last_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicConv2d_1x1.forward": [[250, 258], ["modules.BasicConv2d_1x1.conv", "modules.BasicConv2d_1x1.bn", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "\n", "if", "self", ".", "last_relu", ":", "\n", "            ", "return", "F", ".", "relu", "(", "x", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicConv2d_3x3.__init__": [[266, 276], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "last_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicConv2d_3x3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "last_relu", "=", "last_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicConv2d_3x3.forward": [[277, 293], ["modules.BasicConv2d_3x3.conv1", "modules.BasicConv2d_3x3.bn1", "modules.BasicConv2d_3x3.relu", "modules.BasicConv2d_3x3.conv2", "modules.BasicConv2d_3x3.bn2", "modules.BasicConv2d_3x3.relu", "modules.BasicConv2d_3x3.conv3", "modules.BasicConv2d_3x3.bn3", "modules.BasicConv2d_3x3.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "last_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.InceptionM.__init__": [[300, 304], ["torch.Module.__init__", "modules.BasicConv2d_3x3", "modules.BasicConv2d_1x1"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "planes", ",", "last_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "InceptionM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch3x3", "=", "BasicConv2d_3x3", "(", "in_channels", ",", "planes", ",", "last_relu", ")", "\n", "self", ".", "branch1x1", "=", "BasicConv2d_1x1", "(", "in_channels", ",", "planes", ",", "last_relu", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.InceptionM.forward": [[305, 311], ["modules.InceptionM.branch3x3", "modules.InceptionM.branch1x1", "modules.center_crop", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch3x3", "=", "self", ".", "branch3x3", "(", "x", ")", "\n", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch3x3", ",", "branch1x1", "]", "\n", "return", "center_crop", "(", "torch", ".", "cat", "(", "outputs", ",", "1", ")", ")", "# in-layer crop", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Inception.__init__": [[319, 336], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "modules.Inception._make_layer", "modules.Inception._make_layer", "modules.Inception.modules", "isinstance", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "isinstance", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "Inception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "64", ",", "layers", "[", "0", "]", ",", "pool", "=", "False", ")", "# in=64, out=320", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "320", ",", "128", ",", "layers", "[", "1", "]", ",", "pool", "=", "True", ",", "last_relu", "=", "False", ")", "# in=320, out=640", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Inception._make_layer": [[337, 355], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "layers.append", "block", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "inchannels", ",", "planes", ",", "blocks", ",", "pool", "=", "True", ",", "last_relu", "=", "True", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "blocks", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "self", ".", "inchannels", "=", "inchannels", "\n", "", "else", ":", "\n", "                ", "self", ".", "inchannels", "=", "planes", "*", "5", "\n", "\n", "", "if", "i", "==", "1", "and", "pool", ":", "\n", "                ", "layers", ".", "append", "(", "self", ".", "maxpool", ")", "\n", "\n", "", "if", "i", "==", "blocks", "-", "1", "and", "not", "last_relu", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "self", ".", "inchannels", ",", "planes", ",", "last_relu", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "self", ".", "inchannels", ",", "planes", ")", ")", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.Inception.forward": [[356, 365], ["modules.Inception.conv1", "modules.Inception.bn1", "modules.Inception.relu", "modules.Inception.maxpool1", "modules.Inception.layer1", "modules.Inception.layer2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicBlock_C.__init__": [[376, 400], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "collections.OrderedDict", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "bottleneck_width", "=", "4", ",", "cardinality", "=", "32", ",", "expansion", "=", "2", ",", "last_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock_C", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inner_width", "=", "cardinality", "*", "bottleneck_width", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "basic", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "\n", "[", "\n", "(", "'conv1_0'", ",", "nn", ".", "Conv2d", "(", "in_planes", ",", "inner_width", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn1'", ",", "nn", ".", "BatchNorm2d", "(", "inner_width", ")", ")", ",", "\n", "(", "'act0'", ",", "nn", ".", "ReLU", "(", ")", ")", ",", "\n", "(", "'conv3_0'", ",", "\n", "nn", ".", "Conv2d", "(", "inner_width", ",", "inner_width", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "cardinality", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn2'", ",", "nn", ".", "BatchNorm2d", "(", "inner_width", ")", ")", ",", "\n", "(", "'act1'", ",", "nn", ".", "ReLU", "(", ")", ")", ",", "\n", "(", "'conv1_1'", ",", "nn", ".", "Conv2d", "(", "inner_width", ",", "inner_width", "*", "self", ".", "expansion", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn3'", ",", "nn", ".", "BatchNorm2d", "(", "inner_width", "*", "self", ".", "expansion", ")", ")", "\n", "]", "\n", ")", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "in_planes", "!=", "inner_width", "*", "self", ".", "expansion", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "inner_width", "*", "self", ".", "expansion", ",", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "inner_width", ")", "\n", "self", ".", "last_relu", "=", "last_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.BasicBlock_C.forward": [[401, 409], ["modules.BasicBlock_C.basic", "modules.BasicBlock_C.shortcut", "modules.center_crop", "modules.center_crop", "torch.relu", "torch.relu", "torch.relu", "modules.BasicBlock_C.bn0", "modules.BasicBlock_C.bn0"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "basic", "(", "x", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "\n", "if", "self", ".", "last_relu", ":", "\n", "            ", "return", "center_crop", "(", "F", ".", "relu", "(", "self", ".", "bn0", "(", "out", ")", ")", ")", "# CIR", "\n", "", "else", ":", "\n", "            ", "return", "center_crop", "(", "self", ".", "bn0", "(", "out", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt.__init__": [[416, 436], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.ResNeXt._make_layer", "modules.ResNeXt._make_layer", "modules.ResNeXt.modules", "isinstance", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "torch.init.kaiming_normal", "isinstance", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant", "torch.init.constant"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer"], ["def", "__init__", "(", "self", ",", "num_blocks", ",", "cardinality", ",", "bottleneck_width", ",", "expansion", "=", "2", ")", ":", "\n", "        ", "super", "(", "ResNeXt", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cardinality", "=", "cardinality", "\n", "self", ".", "bottleneck_width", "=", "bottleneck_width", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "maxpool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "in_planes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "in_planes", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "0", "]", ",", "last_relu", "=", "True", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "num_blocks", "[", "1", "]", ",", "last_relu", "=", "False", ",", "stride2pool", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt._make_layer": [[437, 453], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "layers.append", "modules.BasicBlock_C", "modules.BasicBlock_C"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "num_blocks", ",", "last_relu", "=", "True", ",", "stride2pool", "=", "False", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "num_blocks", ")", ":", "\n", "            ", "if", "i", "==", "num_blocks", "-", "1", ":", "\n", "                ", "layers", ".", "append", "(", "BasicBlock_C", "(", "self", ".", "in_planes", ",", "self", ".", "bottleneck_width", ",", "self", ".", "cardinality", ",", "self", ".", "expansion", ",", "last_relu", "=", "last_relu", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "BasicBlock_C", "(", "self", ".", "in_planes", ",", "self", ".", "bottleneck_width", ",", "self", ".", "cardinality", ",", "self", ".", "expansion", ")", ")", "\n", "", "self", ".", "in_planes", "=", "self", ".", "expansion", "*", "self", ".", "bottleneck_width", "*", "self", ".", "cardinality", "\n", "\n", "if", "i", "==", "0", "and", "stride2pool", ":", "\n", "                ", "layers", ".", "append", "(", "self", ".", "maxpool", ")", "\n", "\n", "", "", "self", ".", "bottleneck_width", "*=", "2", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.ResNeXt.forward": [[454, 462], ["torch.relu", "torch.relu", "torch.relu", "modules.ResNeXt.maxpool1", "modules.ResNeXt.layer1", "modules.ResNeXt.layer2", "modules.ResNeXt.bn0", "modules.ResNeXt.conv0"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "conv0", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "maxpool1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.conv3x3": [[21, 25], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop": [[27, 34], ["x[].contiguous"], "function", ["None"], ["", "def", "center_crop", "(", "x", ")", ":", "\n", "    ", "\"\"\"\n    center crop layer. crop [1:-2] to eliminate padding influence.\n    Crop 1 element around the tensor\n    input x can be a Variable or Tensor\n    \"\"\"", "\n", "return", "x", "[", ":", ",", ":", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.center_crop7": [[36, 43], ["x[].contiguous"], "function", ["None"], ["", "def", "center_crop7", "(", "x", ")", ":", "\n", "    ", "\"\"\"\n    Center crop layer for stage1 of resnet. (7*7)\n    input x can be a Variable or Tensor\n    \"\"\"", "\n", "\n", "return", "x", "[", ":", ",", ":", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", "]", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.modules.conv1x1": [[45, 48], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.Corr_Up.__init__": [[18, 20], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Corr_Up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.Corr_Up._conv2d_group": [[21, 28], ["kernel.view", "x.view", "torch.conv2d", "torch.conv2d", "po.view.view.view", "x.size", "x.size", "kernel.size", "kernel.size", "x.size", "x.size", "po.view.view.size", "po.view.view.size"], "methods", ["None"], ["", "def", "_conv2d_group", "(", "self", ",", "x", ",", "kernel", ")", ":", "\n", "        ", "batch", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "pk", "=", "kernel", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", ")", "[", "1", "]", ",", "kernel", ".", "size", "(", ")", "[", "2", "]", ",", "kernel", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "px", "=", "x", ".", "view", "(", "1", ",", "-", "1", ",", "x", ".", "size", "(", ")", "[", "2", "]", ",", "x", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "po", "=", "F", ".", "conv2d", "(", "px", ",", "pk", ",", "groups", "=", "batch", ")", "\n", "po", "=", "po", ".", "view", "(", "batch", ",", "-", "1", ",", "po", ".", "size", "(", ")", "[", "2", "]", ",", "po", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "return", "po", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.Corr_Up.forward": [[29, 34], ["torch.conv2d", "torch.conv2d", "connect.Corr_Up._conv2d_group"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up._conv2d_group"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "if", "not", "self", ".", "training", ":", "\n", "            ", "return", "0.1", "*", "F", ".", "conv2d", "(", "x_f", ",", "z_f", ")", "\n", "", "else", ":", "\n", "            ", "return", "0.1", "*", "self", ".", "_conv2d_group", "(", "x_f", ",", "z_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up.__init__": [[40, 59], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "anchor_nums", "=", "5", ",", "inchannels", "=", "256", ",", "outchannels", "=", "256", ",", "cls_type", "=", "'thicker'", ")", ":", "\n", "        ", "super", "(", "RPN_Up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "anchor_nums", "=", "anchor_nums", "\n", "self", ".", "inchannels", "=", "inchannels", "\n", "self", ".", "outchannels", "=", "outchannels", "\n", "\n", "if", "cls_type", "==", "'thinner'", ":", "self", ".", "cls_channel", "=", "self", ".", "anchor_nums", "\n", "elif", "cls_type", "==", "'thicker'", ":", "self", ".", "cls_channel", "=", "self", ".", "anchor_nums", "*", "2", "\n", "else", ":", "raise", "ValueError", "(", "'not implemented cls/loss type'", ")", "\n", "\n", "self", ".", "reg_channel", "=", "4", "*", "self", ".", "anchor_nums", "\n", "\n", "self", ".", "template_cls", "=", "nn", ".", "Conv2d", "(", "self", ".", "inchannels", ",", "self", ".", "outchannels", "*", "self", ".", "cls_channel", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "template_reg", "=", "nn", ".", "Conv2d", "(", "self", ".", "inchannels", ",", "self", ".", "outchannels", "*", "self", ".", "reg_channel", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "search_cls", "=", "nn", ".", "Conv2d", "(", "self", ".", "inchannels", ",", "self", ".", "outchannels", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "search_reg", "=", "nn", ".", "Conv2d", "(", "self", ".", "inchannels", ",", "self", ".", "outchannels", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "adjust", "=", "nn", ".", "Conv2d", "(", "self", ".", "reg_channel", ",", "self", ".", "reg_channel", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up._conv2d_group": [[61, 68], ["kernel.view", "x.view", "torch.conv2d", "torch.conv2d", "po.view.view.view", "kernel.size", "x.size", "kernel.size", "kernel.size", "x.size", "x.size", "po.view.view.size", "po.view.view.size"], "methods", ["None"], ["", "def", "_conv2d_group", "(", "self", ",", "x", ",", "kernel", ")", ":", "\n", "        ", "batch", "=", "kernel", ".", "size", "(", ")", "[", "0", "]", "\n", "pk", "=", "kernel", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", ")", "[", "1", "]", ",", "kernel", ".", "size", "(", ")", "[", "2", "]", ",", "kernel", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "px", "=", "x", ".", "view", "(", "1", ",", "-", "1", ",", "x", ".", "size", "(", ")", "[", "2", "]", ",", "x", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "po", "=", "F", ".", "conv2d", "(", "px", ",", "pk", ",", "groups", "=", "batch", ")", "\n", "po", "=", "po", ".", "view", "(", "batch", ",", "-", "1", ",", "po", ".", "size", "(", ")", "[", "2", "]", ",", "po", ".", "size", "(", ")", "[", "3", "]", ")", "\n", "return", "po", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up.forward": [[70, 84], ["connect.RPN_Up.template_cls", "connect.RPN_Up.template_reg", "connect.RPN_Up.search_cls", "connect.RPN_Up.search_reg", "connect.RPN_Up.size", "connect.RPN_Up.size", "connect.RPN_Up._conv2d_group", "connect.RPN_Up.adjust", "connect.RPN_Up._conv2d_group"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up._conv2d_group", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.connect.RPN_Up._conv2d_group"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ")", ":", "\n", "        ", "cls_kernel", "=", "self", ".", "template_cls", "(", "z_f", ")", "\n", "reg_kernel", "=", "self", ".", "template_reg", "(", "z_f", ")", "\n", "\n", "cls_feature", "=", "self", ".", "search_cls", "(", "x_f", ")", "\n", "loc_feature", "=", "self", ".", "search_reg", "(", "x_f", ")", "\n", "\n", "_", ",", "_", ",", "s_cls", ",", "_", "=", "cls_kernel", ".", "size", "(", ")", "\n", "_", ",", "_", ",", "s_reg", ",", "_", "=", "reg_kernel", ".", "size", "(", ")", "\n", "\n", "pred_cls", "=", "self", ".", "_conv2d_group", "(", "cls_feature", ",", "cls_kernel", ")", "\n", "pred_reg", "=", "self", ".", "adjust", "(", "self", ".", "_conv2d_group", "(", "loc_feature", ",", "reg_kernel", ")", ")", "\n", "\n", "return", "pred_cls", ",", "pred_reg", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.__init__": [[20, 26], ["torch.Module.__init__", "modules.ResNet", "backbones.ResNet22.unfix"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unfix"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNet22", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "ResNet", "(", "Bottleneck_CI", ",", "[", "3", ",", "4", "]", ",", "[", "True", ",", "False", "]", ",", "[", "False", ",", "True", "]", ")", "\n", "self", ".", "feature_size", "=", "512", "\n", "self", ".", "train_num", "=", "0", "\n", "self", ".", "unfix", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.forward": [[27, 30], ["backbones.ResNet22.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unfix": [[31, 65], ["abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock", "abs", "backbones.ResNet22.unlock"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock"], ["", "def", "unfix", "(", "self", ",", "ratio", ")", ":", "\n", "        ", "\"\"\"\n        unfix gradually as paper said\n        \"\"\"", "\n", "if", "abs", "(", "ratio", "-", "0.0", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "2", "# epoch0 1*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.1", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "3", "# epoch5 2*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.2", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "4", "# epoch10 3*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.3", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "6", "# epoch15 4*[1,3,1]  stride2pool makes stage2 have a more index", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.5", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "7", "# epoch25 5*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.6", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "8", "# epoch30 6*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "", "elif", "abs", "(", "ratio", "-", "0.7", ")", "<", "eps", ":", "\n", "            ", "self", ".", "train_num", "=", "9", "# epoch35 7*[1,3,1]", "\n", "self", ".", "unlock", "(", ")", "\n", "return", "True", "\n", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unlock": [[66, 82], ["backbones.ResNet22.parameters", "range", "backbones.ResNet22.eval", "backbones.ResNet22.train", "m.parameters"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train"], ["", "def", "unlock", "(", "self", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "for", "i", "in", "range", "(", "1", ",", "self", ".", "train_num", ")", ":", "# zzp pay attention here", "\n", "            ", "if", "i", "<=", "5", ":", "\n", "                ", "m", "=", "self", ".", "features", ".", "layer2", "[", "-", "i", "]", "\n", "", "elif", "i", "<=", "8", ":", "\n", "                ", "m", "=", "self", ".", "features", ".", "layer1", "[", "-", "(", "i", "-", "5", ")", "]", "\n", "", "else", ":", "\n", "                ", "m", "=", "self", ".", "features", "\n", "\n", "", "for", "p", "in", "m", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad", "=", "True", "\n", "", "", "self", ".", "eval", "(", ")", "\n", "self", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train": [[83, 98], ["super().train", "range", "m.train"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train"], ["", "def", "train", "(", "self", ",", "mode", "=", "True", ")", ":", "\n", "        ", "self", ".", "training", "=", "mode", "\n", "if", "mode", "==", "False", ":", "\n", "            ", "super", "(", "ResNet22", ",", "self", ")", ".", "train", "(", "False", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "train_num", ")", ":", "# zzp pay attention here", "\n", "                ", "if", "i", "<=", "5", ":", "\n", "                    ", "m", "=", "self", ".", "features", ".", "layer2", "[", "-", "i", "]", "\n", "", "elif", "i", "<=", "8", ":", "\n", "                    ", "m", "=", "self", ".", "features", ".", "layer1", "[", "-", "(", "i", "-", "5", ")", "]", "\n", "", "else", ":", "\n", "                    ", "m", "=", "self", ".", "features", "\n", "", "m", ".", "train", "(", "mode", ")", "\n", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.Incep22.__init__": [[107, 111], ["torch.Module.__init__", "modules.Inception"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Incep22", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "Inception", "(", "InceptionM", ",", "[", "3", ",", "4", "]", ")", "\n", "self", ".", "feature_size", "=", "640", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.Incep22.forward": [[112, 115], ["backbones.Incep22.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNeXt22.__init__": [[118, 122], ["torch.Module.__init__", "modules.ResNeXt"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNeXt22", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "ResNeXt", "(", "num_blocks", "=", "[", "3", ",", "4", "]", ",", "cardinality", "=", "32", ",", "bottleneck_width", "=", "4", ")", "\n", "self", ".", "feature_size", "=", "512", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNeXt22.forward": [[123, 126], ["backbones.ResNeXt22.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22W.__init__": [[132, 136], ["torch.Module.__init__", "modules.ResNet"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNet22W", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "ResNet", "(", "Bottleneck_BIG_CI", ",", "[", "3", ",", "4", "]", ",", "[", "True", ",", "False", "]", ",", "[", "False", ",", "True", "]", ",", "firstchannels", "=", "64", ",", "channels", "=", "[", "64", ",", "128", "]", ")", "\n", "self", ".", "feature_size", "=", "512", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22W.forward": [[137, 141], ["backbones.ResNet22W.features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.__init__": [[20, 23], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["from", "torch", ".", "utils", ".", "data", "import", "Dataset", "\n", "from", "easydict", "import", "EasyDict", "as", "edict", "\n", "from", "scipy", ".", "ndimage", ".", "filters", "import", "gaussian_filter", "\n", "import", "sys", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.init": [[24, 90], ["dict", "siamrpn.RPNConfig", "utils.utils.generate_anchor", "numpy.mean", "utils.utils.python2round", "utils.utils.get_subwindow_tracking", "torch.autograd.Variable", "torch.autograd.Variable", "net.template", "numpy.expand_dims", "numpy.repeat", "utils.utils.load_yaml", "siamrpn.RPNConfig.update", "siamrpn.RPNConfig.renew", "siamrpn.RPNConfig.update", "siamrpn.RPNConfig.renew", "numpy.sqrt", "utils.utils.get_subwindow_tracking.unsqueeze", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "numpy.outer", "siamrpn.RPNConfig.renew", "siamrpn.RPNConfig.renew", "siamrpn.RPNConfig.renew", "siamrpn.RPNConfig.renew", "sum", "sum", "numpy.hanning", "numpy.hanning", "numpy.ones", "float", "float"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.generate_anchor", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.python2round", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.template", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_yaml", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew"], ["sys", ".", "path", ".", "append", "(", "'../'", ")", "\n", "from", "utils", ".", "utils", "import", "*", "\n", "from", "core", ".", "config", "import", "config", "\n", "from", ".", "module", "import", "SingleData", "\n", "\n", "sample_random", "=", "random", ".", "Random", "(", ")", "\n", "# sample_random.seed(123456)", "\n", "\n", "eps", "=", "1e-7", "\n", "\n", "\n", "class", "SiamRPNDataset", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SiamRPNDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n", "self", ".", "search_size", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "score_size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# anchors information", "\n", "self", ".", "thr_high", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_THR_HIGH", "\n", "self", ".", "thr_low", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_THR_LOW", "\n", "self", ".", "pos_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_POS_KEEP", "# kept positive anchors to calc loss", "\n", "self", ".", "all_keep", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_ALL_KEEP", "# kept anchors to calc loss", "\n", "self", ".", "stride", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "STRIDE", "\n", "self", ".", "anchor_nums", "=", "len", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_RATIOS", ")", "*", "len", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_SCALES", ")", "\n", "self", ".", "_naive_anchors", "(", "cfg", ")", "# return self.anchors_naive [anchor_num, 4]", "\n", "self", ".", "_pair_anchors", "(", "center", "=", "self", ".", "search_size", "//", "2", ",", "score_size", "=", "self", ".", "score_size", ")", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "ROTATION", "\n", "self", ".", "blur", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "BLUR", "\n", "self", ".", "shift", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMRPN", ".", "DATASET", ".", "SCALE", "\n", "\n", "\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n", "(", "[", "transforms", ".", "ColorJitter", "(", "0.05", ",", "0.05", ",", "0.05", ",", "0.05", ")", ",", "]", "if", "self", ".", "color", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "print", "(", "'train datas: {}'", ".", "format", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ")", ")", "\n", "self", ".", "train_datas", "=", "[", "]", "# all train dataset", "\n", "start", "=", "0", "\n", "self", ".", "num", "=", "0", "\n", "for", "data_name", "in", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WHICH_USE", ":", "\n", "            ", "dataset", "=", "SingleData", "(", "cfg", ",", "data_name", ",", "start", ")", "\n", "self", ".", "train_datas", ".", "append", "(", "dataset", ")", "\n", "start", "+=", "dataset", ".", "num", "# real video number", "\n", "self", ".", "num", "+=", "dataset", ".", "num_use", "# the number used for subset shuffle", "\n", "\n", "# assert abs(self.num - cfg.SIAMRPN.TRAIN.PAIRS) < eps, 'given pairs is not equal to sum of all dataset'", "\n", "\n", "", "self", ".", "_shuffle", "(", ")", "\n", "print", "(", "cfg", ")", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# choose a dataset", "\n", "        ", "index", "=", "self", ".", "pick", "[", "index", "]", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.update": [[91, 132], ["net.track", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.size", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy", "siamrpn.SiamRPN.change", "siamrpn.SiamRPN.change", "numpy.exp", "numpy.unravel_index", "numpy.array", "numpy.array", "torch.sigmoid().squeeze().cpu().data.numpy", "torch.sigmoid().squeeze().cpu().data.numpy", "torch.sigmoid().squeeze().cpu().data.numpy", "torch.sigmoid().squeeze().cpu().data.numpy", "numpy.exp", "numpy.exp", "pscore.argmax", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu", "torch.softmax().squeeze().data[].cpu().numpy", "torch.softmax().squeeze().data[].cpu().numpy", "siamrpn.SiamRPN.sz", "siamrpn.SiamRPN.sz_wh", "torch.sigmoid().squeeze().cpu", "torch.sigmoid().squeeze().cpu", "torch.sigmoid().squeeze().cpu", "torch.sigmoid().squeeze().cpu", "torch.softmax().squeeze().data[].cpu", "torch.softmax().squeeze().data[].cpu", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view", "torch.sigmoid().squeeze", "torch.sigmoid().squeeze", "torch.sigmoid().squeeze", "torch.sigmoid().squeeze", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.permute().contiguous", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.softmax().squeeze", "torch.softmax().squeeze", "delta.permute().contiguous().view().data.cpu().numpy.permute().contiguous().view().data.cpu().numpy.permute", "torch.softmax", "torch.softmax", "torch.softmax().squeeze().data[].cpu().numpy.permute().contiguous().view", "torch.softmax().squeeze().data[].cpu().numpy.permute().contiguous", "torch.softmax().squeeze().data[].cpu().numpy.permute"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.change", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.change", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.sz", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.sz_wh"], ["dataset", ",", "index", "=", "self", ".", "_choose_dataset", "(", "index", ")", "\n", "\n", "template", ",", "search", "=", "dataset", ".", "_get_pairs", "(", "index", ")", "\n", "\n", "# read images", "\n", "template_image", "=", "cv2", ".", "imread", "(", "template", "[", "0", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "search", "[", "0", "]", ")", "\n", "\n", "# transform original bbox to cropped image", "\n", "template_box", "=", "self", ".", "_toBBox", "(", "template_image", ",", "template", "[", "1", "]", ")", "\n", "search_box", "=", "self", ".", "_toBBox", "(", "search_image", ",", "search", "[", "1", "]", ")", "\n", "\n", "template", ",", "_", ",", "_", "=", "self", ".", "_augmentation", "(", "template_image", ",", "template_box", ",", "self", ".", "template_size", ")", "\n", "search", ",", "bbox", ",", "dag_param", "=", "self", ".", "_augmentation", "(", "search_image", ",", "search_box", ",", "self", ".", "search_size", ")", "\n", "\n", "# from PIL image to numpy", "\n", "template", "=", "np", ".", "array", "(", "template", ")", "\n", "search", "=", "np", ".", "array", "(", "search", ")", "\n", "\n", "# get label for regression", "\n", "cls", ",", "delta", ",", "delta_weight", "=", "self", ".", "_anchor_target", "(", "bbox", ",", "pos_keep", "=", "self", ".", "pos_keep", ",", "all_keep", "=", "self", ".", "all_keep", ",", "thr_high", "=", "self", ".", "thr_high", ",", "thr_low", "=", "self", ".", "thr_low", ")", "\n", "sum_weight", "=", "self", ".", "_dynamic_label", "(", "[", "self", ".", "score_size", ",", "self", ".", "score_size", "]", ",", "dag_param", "[", "'shift'", "]", ",", "'balanced'", ")", "\n", "template", ",", "search", "=", "map", "(", "lambda", "x", ":", "np", ".", "transpose", "(", "x", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "[", "template", ",", "search", "]", ")", "\n", "\n", "return", "template", ",", "search", ",", "cls", ",", "delta", ",", "delta_weight", ",", "sum_weight", ",", "np", ".", "array", "(", "bbox", ",", "np", ".", "float32", ")", "\n", "\n", "# ------------------------------------", "\n", "# function groups for selecting pairs", "\n", "# ------------------------------------", "\n", "", "def", "_python2round", "(", "self", ",", "f", ")", ":", "\n", "        ", "\"\"\"\n        use python2 round in python3 verison.\n        \"\"\"", "\n", "if", "round", "(", "f", "+", "1", ")", "-", "round", "(", "f", ")", "!=", "1", ":", "\n", "            ", "return", "f", "+", "abs", "(", "f", ")", "/", "f", "*", "0.5", "\n", "", "return", "round", "(", "f", ")", "\n", "\n", "", "def", "_shuffle", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        random shuffel\n        \"\"\"", "\n", "pick", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.track": [[133, 161], ["numpy.sqrt", "torch.autograd.Variable", "torch.autograd.Variable", "siamrpn.SiamRPN.update", "max", "max", "max", "max", "utils.utils.get_subwindow_tracking().unsqueeze", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "min", "min", "min", "min", "sum", "sum", "utils.utils.get_subwindow_tracking", "utils.utils.python2round"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.python2round"], ["m", "=", "0", "\n", "while", "m", "<", "self", ".", "num", ":", "\n", "            ", "p", "=", "[", "]", "\n", "for", "subset", "in", "self", ".", "train_datas", ":", "\n", "                ", "sub_p", "=", "subset", ".", "pick", "\n", "p", "+=", "sub_p", "\n", "", "sample_random", ".", "shuffle", "(", "p", ")", "\n", "\n", "pick", "+=", "p", "\n", "m", "=", "len", "(", "pick", ")", "\n", "", "self", ".", "pick", "=", "pick", "\n", "print", "(", "\"dataset length {}\"", ".", "format", "(", "self", ".", "num", ")", ")", "\n", "\n", "", "def", "_choose_dataset", "(", "self", ",", "index", ")", ":", "\n", "        ", "for", "dataset", "in", "self", ".", "train_datas", ":", "\n", "            ", "if", "dataset", ".", "start", "+", "dataset", ".", "num", ">", "index", ":", "\n", "                ", "return", "dataset", ",", "index", "-", "dataset", ".", "start", "\n", "\n", "", "", "", "def", "_toBBox", "(", "self", ",", "image", ",", "shape", ")", ":", "\n", "        ", "imh", ",", "imw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "len", "(", "shape", ")", "==", "4", ":", "\n", "            ", "w", ",", "h", "=", "shape", "[", "2", "]", "-", "shape", "[", "0", "]", ",", "shape", "[", "3", "]", "-", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "shape", "\n", "", "context_amount", "=", "0.5", "\n", "exemplar_size", "=", "self", ".", "template_size", "\n", "wc_z", "=", "w", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "hc_z", "=", "h", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "wc_z", "*", "hc_z", ")", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.change": [[162, 164], ["numpy.maximum"], "methods", ["None"], ["scale_z", "=", "exemplar_size", "/", "s_z", "\n", "w", "=", "w", "*", "scale_z", "\n", "h", "=", "h", "*", "scale_z", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.sz": [[165, 169], ["numpy.sqrt"], "methods", ["None"], ["cx", ",", "cy", "=", "imw", "//", "2", ",", "imh", "//", "2", "\n", "bbox", "=", "center2corner", "(", "Center", "(", "cx", ",", "cy", ",", "w", ",", "h", ")", ")", "\n", "return", "bbox", "\n", "\n", "", "def", "_crop_hwc", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.SiamRPN.sz_wh": [[170, 174], ["numpy.sqrt"], "methods", ["None"], ["        ", "\"\"\"\n        crop image\n        \"\"\"", "\n", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.RPNConfig.update": [[191, 196], ["newparam.items", "siamrpn.RPNConfig.renew", "setattr"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew"], ["# function for data augmentation", "\n", "# ------------------------------------", "\n", "", "def", "_augmentation", "(", "self", ",", "image", ",", "bbox", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        data augmentation for input pairs\n        \"\"\"", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamrpn.RPNConfig.renew": [[197, 200], ["len", "len"], "methods", ["None"], ["shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "size", ",", "size", ")", ")", "\n", "param", "=", "edict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.__init__": [[16, 19], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__"], ["import", "logging", "\n", "import", "numpy", "as", "np", "\n", "import", "torchvision", ".", "transforms", "as", "transforms", "\n", "from", "scipy", ".", "ndimage", ".", "filters", "import", "gaussian_filter", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init": [[20, 81], ["dict", "siamfc.FCConfig", "numpy.mean", "round", "utils.utils.get_subwindow_tracking", "siamfc.FCConfig.update", "torch.autograd.Variable", "net.template", "numpy.ones.sum", "utils.utils.load_yaml", "siamfc.FCConfig.update", "siamfc.FCConfig.renew", "siamfc.FCConfig.update", "siamfc.FCConfig.renew", "numpy.sqrt", "utils.utils.get_subwindow_tracking.unsqueeze", "torch.autograd.Variable.cuda", "numpy.outer", "sum", "sum", "numpy.hanning", "numpy.hanning", "numpy.ones", "range", "numpy.ceil", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_subwindow_tracking", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.siamfc.SiamFC_.template", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_yaml", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew"], ["from", "os", ".", "path", "import", "join", "\n", "from", "easydict", "import", "EasyDict", "as", "edict", "\n", "from", "torch", ".", "utils", ".", "data", "import", "Dataset", "\n", "\n", "import", "sys", "\n", "sys", ".", "path", ".", "append", "(", "'../'", ")", "\n", "from", "utils", ".", "utils", "import", "*", "\n", "from", "core", ".", "config", "import", "config", "\n", "\n", "sample_random", "=", "random", ".", "Random", "(", ")", "\n", "# sample_random.seed(123456)", "\n", "\n", "\n", "class", "SiamFCDataset", "(", "Dataset", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SiamFCDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pair information", "\n", "self", ".", "template_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "TEMPLATE_SIZE", "\n", "self", ".", "search_size", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "SEARCH_SIZE", "\n", "self", ".", "size", "=", "(", "self", ".", "search_size", "-", "self", ".", "template_size", ")", "//", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "STRIDE", "+", "1", "# from cross-correlation", "\n", "\n", "# aug information", "\n", "self", ".", "color", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "COLOR", "\n", "self", ".", "flip", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "FLIP", "\n", "self", ".", "rotation", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "ROTATION", "\n", "self", ".", "blur", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "BLUR", "\n", "self", ".", "shift", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SHIFT", "\n", "self", ".", "scale", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "SCALE", "\n", "\n", "self", ".", "transform_extra", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToPILImage", "(", ")", ",", "]", "+", "\n", "(", "[", "transforms", ".", "ColorJitter", "(", "0.05", ",", "0.05", ",", "0.05", ",", "0.05", ")", ",", "]", "if", "self", ".", "color", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "]", "if", "self", ".", "flip", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", "+", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "10", ")", ",", "]", "if", "self", ".", "rotation", ">", "random", ".", "random", "(", ")", "else", "[", "]", ")", "\n", ")", "\n", "\n", "# train data information", "\n", "if", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'VID'", ":", "\n", "            ", "self", ".", "anno", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "ANNOTATION", "\n", "self", ".", "num_use", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "PAIRS", "\n", "self", ".", "root", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "VID", ".", "PATH", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WHICH_USE", "==", "'GOT10K'", ":", "\n", "            ", "self", ".", "anno", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "GOT10K", ".", "ANNOTATION", "\n", "self", ".", "num_use", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "PAIRS", "\n", "self", ".", "root", "=", "cfg", ".", "SIAMFC", ".", "DATASET", ".", "GOT10K", ".", "PATH", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported training dataset'", ")", "\n", "\n", "", "self", ".", "labels", "=", "json", ".", "load", "(", "open", "(", "self", ".", "anno", ",", "'r'", ")", ")", "\n", "self", ".", "videos", "=", "list", "(", "self", ".", "labels", ".", "keys", "(", ")", ")", "\n", "self", ".", "num", "=", "len", "(", "self", ".", "videos", ")", "# video number", "\n", "self", ".", "frame_range", "=", "100", "\n", "self", ".", "pick", "=", "self", ".", "_shuffle", "(", ")", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_use", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        pick a vodeo/frame --> pairs --> data aug --> label\n        \"\"\"", "\n", "index", "=", "self", ".", "pick", "[", "index", "]", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.update": [[82, 107], ["net.track().squeeze().permute().cpu().data.numpy", "cv2.resize", "numpy.max", "numpy.array", "numpy.argmax", "numpy.unravel_index", "net.track().squeeze().permute().cpu().data.numpy.min", "net.track().squeeze().permute().cpu().data.numpy.sum", "net.track().squeeze().permute().cpu().data.numpy.argmax", "numpy.ceil", "net.track().squeeze().permute().cpu", "net.track().squeeze().permute", "net.track().squeeze", "net.track"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track"], ["template", ",", "search", "=", "self", ".", "_get_pairs", "(", "index", ")", "\n", "\n", "template_image", "=", "cv2", ".", "imread", "(", "template", "[", "0", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "search", "[", "0", "]", ")", "\n", "\n", "template_box", "=", "self", ".", "_toBBox", "(", "template_image", ",", "template", "[", "1", "]", ")", "\n", "search_box", "=", "self", ".", "_toBBox", "(", "search_image", ",", "search", "[", "1", "]", ")", "\n", "\n", "template", ",", "_", ",", "_", "=", "self", ".", "_augmentation", "(", "template_image", ",", "template_box", ",", "self", ".", "template_size", ")", "\n", "search", ",", "bbox", ",", "dag_param", "=", "self", ".", "_augmentation", "(", "search_image", ",", "search_box", ",", "self", ".", "search_size", ")", "\n", "\n", "# from PIL image to numpy", "\n", "template", "=", "np", ".", "array", "(", "template", ")", "\n", "search", "=", "np", ".", "array", "(", "search", ")", "\n", "\n", "out_label", "=", "self", ".", "_dynamic_label", "(", "[", "self", ".", "size", ",", "self", ".", "size", "]", ",", "dag_param", ".", "shift", ")", "\n", "\n", "template", ",", "search", "=", "map", "(", "lambda", "x", ":", "np", ".", "transpose", "(", "x", ",", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "[", "template", ",", "search", "]", ")", "\n", "\n", "return", "template", ",", "search", ",", "out_label", ",", "np", ".", "array", "(", "bbox", ",", "np", ".", "float32", ")", "# self.label 15*15/17*17", "\n", "\n", "# ------------------------------------", "\n", "# function groups for selecting pairs", "\n", "# ------------------------------------", "\n", "", "def", "_shuffle", "(", "self", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.track": [[108, 138], ["torch.autograd.Variable", "siamfc.SiamFC.update", "max", "max", "max", "max", "max", "utils.utils.make_scale_pyramid", "torch.autograd.Variable.cuda", "min", "min", "min", "min", "min"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.make_scale_pyramid"], ["\n", "lists", "=", "list", "(", "range", "(", "0", ",", "self", ".", "num", ")", ")", "\n", "m", "=", "0", "\n", "pick", "=", "[", "]", "\n", "while", "m", "<", "self", ".", "num_use", ":", "\n", "            ", "sample_random", ".", "shuffle", "(", "lists", ")", "\n", "pick", "+=", "lists", "\n", "m", "+=", "self", ".", "num", "\n", "\n", "", "self", ".", "pick", "=", "pick", "[", ":", "self", ".", "num_use", "]", "\n", "return", "self", ".", "pick", "\n", "\n", "", "def", "_get_image_anno", "(", "self", ",", "video", ",", "track", ",", "frame", ")", ":", "\n", "        ", "\"\"\"\n        get image and annotation\n        \"\"\"", "\n", "frame", "=", "\"{:06d}\"", ".", "format", "(", "frame", ")", "\n", "image_path", "=", "join", "(", "self", ".", "root", ",", "video", ",", "\"{}.{}.x.jpg\"", ".", "format", "(", "frame", ",", "track", ")", ")", "\n", "image_anno", "=", "self", ".", "labels", "[", "video", "]", "[", "track", "]", "[", "frame", "]", "\n", "\n", "return", "image_path", ",", "image_anno", "\n", "\n", "", "def", "_get_pairs", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        get training pairs\n        \"\"\"", "\n", "video_name", "=", "self", ".", "videos", "[", "index", "]", "\n", "video", "=", "self", ".", "labels", "[", "video_name", "]", "\n", "track", "=", "random", ".", "choice", "(", "list", "(", "video", ".", "keys", "(", ")", ")", ")", "\n", "track_info", "=", "video", "[", "track", "]", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.update": [[157, 162], ["newparam.items", "siamfc.FCConfig.renew", "setattr"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew"], ["\n", "return", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n", "", "def", "_toBBox", "(", "self", ",", "image", ",", "shape", ")", ":", "\n", "        ", "imh", ",", "imw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.FCConfig.renew": [[163, 166], ["None"], "methods", ["None"], ["if", "len", "(", "shape", ")", "==", "4", ":", "\n", "            ", "w", ",", "h", "=", "shape", "[", "2", "]", "-", "shape", "[", "0", "]", ",", "shape", "[", "3", "]", "-", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "shape", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.overlap_ratio": [[28, 49], ["numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.minimum", "numpy.clip", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["def", "overlap_ratio", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "'''\n    Compute overlap ratio between two rects\n    - rect: 1d array of [x,y,w,h] or\n            2d array of N x [x,y,w,h]\n    '''", "\n", "\n", "if", "rect1", ".", "ndim", "==", "1", ":", "\n", "        ", "rect1", "=", "rect1", "[", "None", ",", ":", "]", "\n", "", "if", "rect2", ".", "ndim", "==", "1", ":", "\n", "        ", "rect2", "=", "rect2", "[", "None", ",", ":", "]", "\n", "\n", "", "left", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "0", "]", ",", "rect2", "[", ":", ",", "0", "]", ")", "\n", "right", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "0", "]", "+", "rect1", "[", ":", ",", "2", "]", ",", "rect2", "[", ":", ",", "0", "]", "+", "rect2", "[", ":", ",", "2", "]", ")", "\n", "top", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "1", "]", ",", "rect2", "[", ":", ",", "1", "]", ")", "\n", "bottom", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "1", "]", "+", "rect1", "[", ":", ",", "3", "]", ",", "rect2", "[", ":", ",", "1", "]", "+", "rect2", "[", ":", ",", "3", "]", ")", "\n", "\n", "intersect", "=", "np", ".", "maximum", "(", "0", ",", "right", "-", "left", ")", "*", "np", ".", "maximum", "(", "0", ",", "bottom", "-", "top", ")", "\n", "union", "=", "rect1", "[", ":", ",", "2", "]", "*", "rect1", "[", ":", ",", "3", "]", "+", "rect2", "[", ":", ",", "2", "]", "*", "rect2", "[", ":", ",", "3", "]", "-", "intersect", "\n", "iou", "=", "np", ".", "clip", "(", "intersect", "/", "union", ",", "0", ",", "1", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.compute_success_overlap": [[51, 59], ["numpy.arange", "len", "numpy.zeros", "eval_otb.overlap_ratio", "range", "len", "len", "sum", "float"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.overlap_ratio"], ["", "def", "compute_success_overlap", "(", "gt_bb", ",", "result_bb", ")", ":", "\n", "    ", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "n_frame", "=", "len", "(", "gt_bb", ")", "\n", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds_overlap", ")", ")", "\n", "iou", "=", "overlap_ratio", "(", "gt_bb", ",", "result_bb", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds_overlap", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "sum", "(", "iou", ">", "thresholds_overlap", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.compute_success_error": [[61, 69], ["numpy.arange", "len", "numpy.zeros", "numpy.sqrt", "range", "len", "numpy.sum", "len", "numpy.power", "sum", "float"], "function", ["None"], ["", "def", "compute_success_error", "(", "gt_center", ",", "result_center", ")", ":", "\n", "    ", "thresholds_error", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "n_frame", "=", "len", "(", "gt_center", ")", "\n", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds_error", ")", ")", "\n", "dist", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "power", "(", "gt_center", "-", "result_center", ",", "2", ")", ",", "axis", "=", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds_error", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "sum", "(", "dist", "<=", "thresholds_error", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.get_result_bb": [[71, 75], ["os.path.join", "numpy.loadtxt().astype", "numpy.array", "numpy.loadtxt"], "function", ["None"], ["", "def", "get_result_bb", "(", "arch", ",", "seq", ")", ":", "\n", "    ", "result_path", "=", "join", "(", "arch", ",", "seq", "+", "'.txt'", ")", "\n", "temp", "=", "np", ".", "loadtxt", "(", "result_path", ",", "delimiter", "=", "','", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "return", "np", ".", "array", "(", "temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.convert_bb_to_center": [[77, 80], ["numpy.array"], "function", ["None"], ["", "def", "convert_bb_to_center", "(", "bboxes", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "(", "bboxes", "[", ":", ",", "0", "]", "+", "(", "bboxes", "[", ":", ",", "2", "]", "-", "1", ")", "/", "2", ")", ",", "\n", "(", "bboxes", "[", ":", ",", "1", "]", "+", "(", "bboxes", "[", ":", ",", "3", "]", "-", "1", ")", "/", "2", ")", "]", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.eval_auc": [[82, 144], ["os.path.join", "json.load", "list", "glob.glob", "len", "numpy.arange", "numpy.zeros", "range", "print", "os.path.realpath", "open", "json.load.keys", "os.path.join", "numpy.array().astype", "eval_otb.convert_bb_to_center", "range", "range", "range", "range", "print", "range", "print", "os.path.dirname", "min", "len", "len", "len", "print", "eval_otb.get_result_bb", "eval_otb.convert_bb_to_center", "eval_otb.compute_success_overlap", "len", "success_overlap[].mean", "len", "success_overlap[].mean", "print", "len", "success_overlap[].mean", "print", "len", "numpy.array", "OTB2013_id.append"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.convert_bb_to_center", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.get_result_bb", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.convert_bb_to_center", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.compute_success_overlap"], ["", "def", "eval_auc", "(", "dataset", "=", "'OTB2015'", ",", "result_path", "=", "'./test/'", ",", "tracker_reg", "=", "'S*'", ",", "start", "=", "0", ",", "end", "=", "1e6", ")", ":", "\n", "    ", "list_path", "=", "os", ".", "path", ".", "join", "(", "realpath", "(", "dirname", "(", "__file__", ")", ")", ",", "'../../'", ",", "'dataset'", ",", "dataset", "+", "'.json'", ")", "\n", "annos", "=", "json", ".", "load", "(", "open", "(", "list_path", ",", "'r'", ")", ")", "\n", "seqs", "=", "list", "(", "annos", ".", "keys", "(", ")", ")", "# dict to list for py3", "\n", "\n", "trackers", "=", "glob", ".", "glob", "(", "join", "(", "result_path", ",", "dataset", ",", "tracker_reg", ")", ")", "\n", "trackers", "=", "trackers", "[", "start", ":", "min", "(", "end", ",", "len", "(", "trackers", ")", ")", "]", "\n", "\n", "n_seq", "=", "len", "(", "seqs", ")", "\n", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "# thresholds_error = np.arange(0, 51, 1)", "\n", "\n", "success_overlap", "=", "np", ".", "zeros", "(", "(", "n_seq", ",", "len", "(", "trackers", ")", ",", "len", "(", "thresholds_overlap", ")", ")", ")", "\n", "# success_error = np.zeros((n_seq, len(trackers), len(thresholds_error)))", "\n", "for", "i", "in", "range", "(", "n_seq", ")", ":", "\n", "        ", "seq", "=", "seqs", "[", "i", "]", "\n", "gt_rect", "=", "np", ".", "array", "(", "annos", "[", "seq", "]", "[", "'gt_rect'", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "gt_center", "=", "convert_bb_to_center", "(", "gt_rect", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "trackers", ")", ")", ":", "\n", "            ", "tracker", "=", "trackers", "[", "j", "]", "\n", "print", "(", "'{:d} processing:{} tracker: {}'", ".", "format", "(", "i", ",", "seq", ",", "tracker", ")", ")", "\n", "bb", "=", "get_result_bb", "(", "tracker", ",", "seq", ")", "\n", "center", "=", "convert_bb_to_center", "(", "bb", ")", "\n", "success_overlap", "[", "i", "]", "[", "j", "]", "=", "compute_success_overlap", "(", "gt_rect", ",", "bb", ")", "\n", "# success_error[i][j] = compute_success_error(gt_center, center)", "\n", "\n", "", "", "print", "(", "'Success Overlap'", ")", "\n", "\n", "if", "'OTB2015'", "==", "dataset", ":", "\n", "        ", "OTB2013_id", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_seq", ")", ":", "\n", "            ", "if", "seqs", "[", "i", "]", "in", "OTB2013", ":", "\n", "                ", "OTB2013_id", ".", "append", "(", "i", ")", "\n", "", "", "max_auc_OTB2013", "=", "0.", "\n", "max_name_OTB2013", "=", "''", "\n", "for", "i", "in", "range", "(", "len", "(", "trackers", ")", ")", ":", "\n", "            ", "auc", "=", "success_overlap", "[", "OTB2013_id", ",", "i", ",", ":", "]", ".", "mean", "(", ")", "\n", "if", "auc", ">", "max_auc_OTB2013", ":", "\n", "                ", "max_auc_OTB2013", "=", "auc", "\n", "max_name_OTB2013", "=", "trackers", "[", "i", "]", "\n", "# print('%s(%.4f)' % (trackers[i], auc))", "\n", "\n", "", "", "max_auc", "=", "0.", "\n", "max_name", "=", "''", "\n", "for", "i", "in", "range", "(", "len", "(", "trackers", ")", ")", ":", "\n", "            ", "auc", "=", "success_overlap", "[", ":", ",", "i", ",", ":", "]", ".", "mean", "(", ")", "\n", "if", "auc", ">", "max_auc", ":", "\n", "                ", "max_auc", "=", "auc", "\n", "max_name", "=", "trackers", "[", "i", "]", "\n", "", "print", "(", "'%s(%.4f)'", "%", "(", "trackers", "[", "i", "]", ",", "auc", ")", ")", "\n", "", "print", "(", "'\\nOTB2015 Best: %s(%.4f)'", "%", "(", "max_name", ",", "max_auc", ")", ")", "\n", "", "else", ":", "\n", "        ", "max_auc", "=", "0.", "\n", "max_name", "=", "''", "\n", "for", "i", "in", "range", "(", "len", "(", "trackers", ")", ")", ":", "\n", "            ", "auc", "=", "success_overlap", "[", ":", ",", "i", ",", ":", "]", ".", "mean", "(", ")", "\n", "if", "auc", ">", "max_auc", ":", "\n", "                ", "max_auc", "=", "auc", "\n", "max_name", "=", "trackers", "[", "i", "]", "\n", "", "print", "(", "'%s(%.4f)'", "%", "(", "trackers", "[", "i", "]", ",", "auc", ")", ")", "\n", "\n", "", "print", "(", "'\\n%s Best: %s(%.4f)'", "%", "(", "dataset", ",", "max_name", ",", "max_auc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.eval_auc_tune": [[151, 169], ["os.path.join", "json.load", "list", "len", "numpy.arange", "numpy.zeros", "range", "success_overlap[].mean", "os.path.realpath", "open", "json.load.keys", "numpy.array().astype", "eval_otb.convert_bb_to_center", "eval_otb.get_result_bb", "eval_otb.convert_bb_to_center", "eval_otb.compute_success_overlap", "os.path.dirname", "len", "numpy.array"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.convert_bb_to_center", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.get_result_bb", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.convert_bb_to_center", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.compute_success_overlap"], ["", "", "def", "eval_auc_tune", "(", "result_path", ",", "dataset", "=", "'OTB2015'", ")", ":", "\n", "    ", "list_path", "=", "os", ".", "path", ".", "join", "(", "realpath", "(", "dirname", "(", "__file__", ")", ")", ",", "'../../'", ",", "'dataset'", ",", "dataset", "+", "'.json'", ")", "\n", "annos", "=", "json", ".", "load", "(", "open", "(", "list_path", ",", "'r'", ")", ")", "\n", "seqs", "=", "list", "(", "annos", ".", "keys", "(", ")", ")", "# dict to list for py3", "\n", "n_seq", "=", "len", "(", "seqs", ")", "\n", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success_overlap", "=", "np", ".", "zeros", "(", "(", "n_seq", ",", "1", ",", "len", "(", "thresholds_overlap", ")", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_seq", ")", ":", "\n", "        ", "seq", "=", "seqs", "[", "i", "]", "\n", "gt_rect", "=", "np", ".", "array", "(", "annos", "[", "seq", "]", "[", "'gt_rect'", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "gt_center", "=", "convert_bb_to_center", "(", "gt_rect", ")", "\n", "bb", "=", "get_result_bb", "(", "result_path", ",", "seq", ")", "\n", "center", "=", "convert_bb_to_center", "(", "bb", ")", "\n", "success_overlap", "[", "i", "]", "[", "0", "]", "=", "compute_success_overlap", "(", "gt_rect", ",", "bb", ")", "\n", "\n", "", "auc", "=", "success_overlap", "[", ":", ",", "0", ",", ":", "]", ".", "mean", "(", ")", "\n", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.config._update_dict": [[162, 175], ["v.items", "v.items", "vv.items"], "function", ["None"], ["def", "_update_dict", "(", "k", ",", "v", ",", "model_name", ")", ":", "\n", "    ", "if", "k", "in", "[", "'TRAIN'", ",", "'TEST'", ",", "'TUNE'", "]", ":", "\n", "        ", "for", "vk", ",", "vv", "in", "v", ".", "items", "(", ")", ":", "\n", "            ", "config", "[", "model_name", "]", "[", "k", "]", "[", "vk", "]", "=", "vv", "\n", "", "", "elif", "k", "==", "'DATASET'", ":", "\n", "        ", "for", "vk", ",", "vv", "in", "v", ".", "items", "(", ")", ":", "\n", "            ", "if", "vk", "not", "in", "[", "'VID'", ",", "'GOT10K'", ",", "'COCO'", ",", "'DET'", ",", "'YTB'", "]", ":", "\n", "                ", "config", "[", "model_name", "]", "[", "k", "]", "[", "vk", "]", "=", "vv", "\n", "", "else", ":", "\n", "                ", "for", "vvk", ",", "vvv", "in", "vv", ".", "items", "(", ")", ":", "\n", "                    ", "config", "[", "model_name", "]", "[", "k", "]", "[", "vk", "]", "[", "vvk", "]", "=", "vvv", "\n", "", "", "", "", "else", ":", "\n", "        ", "config", "[", "k", "]", "=", "v", "# gpu et.", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.config.update_config": [[177, 194], ["open", "easydict.EasyDict", "model_config.items", "yaml.load", "list", "ValueError", "easydict.EasyDict.keys", "config._update_dict", "ValueError"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.config._update_dict"], ["", "", "def", "update_config", "(", "config_file", ")", ":", "\n", "    ", "\"\"\"\n    ADD new keys to config\n    \"\"\"", "\n", "exp_config", "=", "None", "\n", "with", "open", "(", "config_file", ")", "as", "f", ":", "\n", "        ", "exp_config", "=", "edict", "(", "yaml", ".", "load", "(", "f", ")", ")", "\n", "model_name", "=", "list", "(", "exp_config", ".", "keys", "(", ")", ")", "[", "0", "]", "\n", "if", "model_name", "not", "in", "[", "'SIAMFC'", ",", "'SIAMRPN'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'please edit config.py to support new model'", ")", "\n", "\n", "", "model_config", "=", "exp_config", "[", "model_name", "]", "# siamfc or siamrpn", "\n", "for", "k", ",", "v", "in", "model_config", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "config", "or", "k", "in", "config", "[", "model_name", "]", ":", "\n", "                ", "_update_dict", "(", "k", ",", "v", ",", "model_name", ")", "# k=SIAMFC or SIAMRPN", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"{} not exist in config.py\"", ".", "format", "(", "k", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_vot.eval_vot": [[21, 30], ["os.listdir", "os.path.join", "os.path.join", "eval_vot.eval_eao", "print", "eng.cd"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_vot.eval_eao"], ["def", "eval_vot", "(", "dataset", ",", "result_path", ")", ":", "\n", "    ", "trackers", "=", "listdir", "(", "join", "(", "result_path", ",", "dataset", ")", ")", "\n", "\n", "for", "tracker", "in", "trackers", ":", "\n", "        ", "base_path", "=", "join", "(", "result_path", ",", "dataset", ",", "tracker", ",", "'baseline'", ")", "\n", "eao", "=", "eval_eao", "(", "base_path", ",", "dataset", ")", "\n", "\n", "print", "(", "'[*] tracker: {0} : EAO: {1}'", ".", "format", "(", "tracker", ",", "eao", ")", ")", "\n", "eng", ".", "cd", "(", "eval_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_vot.eval_eao": [[32, 57], ["sorted", "eng.get_eao", "os.listdir", "os.path.join", "open().readlines", "results.append", "dataset.split", "eval", "video_re.append", "open", "isinstance", "isinstance", "list", "float"], "function", ["None"], ["", "", "def", "eval_eao", "(", "base_path", ",", "dataset", ")", ":", "\n", "    ", "\"\"\"\n    start matlab engin and test eao in vot toolkit\n    \"\"\"", "\n", "results", "=", "[", "]", "\n", "videos", "=", "sorted", "(", "listdir", "(", "base_path", ")", ")", "# must sorted!!", "\n", "\n", "for", "video", "in", "videos", ":", "\n", "        ", "video_re", "=", "[", "]", "\n", "path_v", "=", "join", "(", "base_path", ",", "video", ",", "'{}_001.txt'", ".", "format", "(", "video", ")", ")", "\n", "fin", "=", "open", "(", "path_v", ")", ".", "readlines", "(", ")", "\n", "\n", "for", "line", "in", "fin", ":", "\n", "            ", "line", "=", "eval", "(", "line", ")", "# tuple", "\n", "if", "isinstance", "(", "line", ",", "float", ")", "or", "isinstance", "(", "line", ",", "int", ")", ":", "\n", "                ", "line", "=", "[", "float", "(", "line", ")", "]", "# have to be float", "\n", "", "else", ":", "\n", "                ", "line", "=", "list", "(", "line", ")", "\n", "", "video_re", ".", "append", "(", "line", ")", "\n", "", "results", ".", "append", "(", "video_re", ")", "\n", "\n", "", "year", "=", "dataset", ".", "split", "(", "'VOT'", ")", "[", "-", "1", "]", "\n", "eao", "=", "eng", ".", "get_eao", "(", "results", ",", "year", ")", "\n", "\n", "return", "eao", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.__init__": [[165, 167], ["function.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.reset": [[168, 173], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update": [[174, 179], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "if", "self", ".", "count", "!=", "0", "else", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.siamfc_train": [[17, 71], ["function.unfix_more", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "time.time", "model.cuda.train", "model.cuda.cuda", "enumerate", "function.AverageMeter.update", "input[].type", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model.cuda.", "torch.mean", "optimizer.zero_grad", "torch.mean.backward", "torch.nn.utils.clip_grad_norm", "function.is_valid_number", "function.AverageMeter.update", "function.AverageMeter.update", "time.time", "writer.add_scalar", "model.cuda.parameters", "optimizer.step", "Variable().cuda.size", "logger.info", "utils.utils.print_speed", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.unfix_more", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.is_valid_number", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.print_speed"], ["def", "siamfc_train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", ",", "cur_lr", ",", "cfg", ",", "writer_dict", ",", "logger", ")", ":", "\n", "# unfix for FREEZE-OUT method", "\n", "    ", "model", ",", "optimizer", "=", "unfix_more", "(", "model", ",", "optimizer", ",", "epoch", ",", "cfg", ",", "cur_lr", ",", "logger", ")", "\n", "\n", "# prepare", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "for", "iter", ",", "input", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# input and output/loss", "\n", "label_cls", "=", "input", "[", "2", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", "# BCE need float", "\n", "template", "=", "Variable", "(", "input", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "search", "=", "Variable", "(", "input", "[", "1", "]", ")", ".", "cuda", "(", ")", "\n", "label_cls", "=", "Variable", "(", "label_cls", ")", ".", "cuda", "(", ")", "\n", "\n", "loss", "=", "model", "(", "template", ",", "search", ",", "label_cls", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "loss", ")", "\n", "\n", "# compute gradient and do update step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm", "(", "model", ".", "parameters", "(", ")", ",", "10", ")", "# gradient clip", "\n", "\n", "if", "is_valid_number", "(", "loss", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "optimizer", ".", "step", "(", ")", "\n", "\n", "# record loss", "\n", "", "loss", "=", "loss", ".", "data", "[", "0", "]", "\n", "losses", ".", "update", "(", "loss", ",", "template", ".", "size", "(", "0", ")", ")", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "iter", "+", "1", ")", "%", "cfg", ".", "PRINT_FREQ", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch: [{0}][{1}/{2}] lr: {lr:.7f}\\t Batch Time: {batch_time.avg:.3f}s \\t Data Time:{data_time.avg:.3f}s \\t Loss:{loss.avg:.5f}'", ".", "format", "(", "\n", "epoch", ",", "iter", "+", "1", ",", "len", "(", "train_loader", ")", ",", "lr", "=", "cur_lr", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "loss", "=", "losses", ")", ")", "\n", "\n", "print_speed", "(", "(", "epoch", "-", "1", ")", "*", "len", "(", "train_loader", ")", "+", "iter", "+", "1", ",", "batch_time", ".", "avg", ",", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "END_EPOCH", "*", "len", "(", "train_loader", ")", ",", "logger", ")", "\n", "\n", "# write to tensorboard", "\n", "", "writer", "=", "writer_dict", "[", "'writer'", "]", "\n", "global_steps", "=", "writer_dict", "[", "'train_global_steps'", "]", "\n", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "loss", ",", "global_steps", ")", "\n", "writer_dict", "[", "'train_global_steps'", "]", "=", "global_steps", "+", "1", "\n", "\n", "", "return", "model", ",", "writer_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.siamrpn_train": [[72, 139], ["function.unfix_more", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "function.AverageMeter", "time.time", "model.cuda.train", "model.cuda.cuda", "enumerate", "function.AverageMeter.update", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model.cuda.", "torch.mean", "torch.mean", "optimizer.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_norm", "function.is_valid_number", "function.AverageMeter.update", "function.AverageMeter.update", "function.AverageMeter.update", "function.AverageMeter.update", "time.time", "writer.add_scalar", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model.cuda.parameters", "optimizer.step", "Variable().cuda.size", "Variable().cuda.size", "Variable().cuda.size", "logger.info", "utils.utils.print_speed", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "input[].type", "len", "len", "input[].type", "len"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.unfix_more", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.train", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.is_valid_number", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.AverageMeter.update", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.print_speed"], ["", "def", "siamrpn_train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", ",", "cur_lr", ",", "cfg", ",", "writer_dict", ",", "logger", ",", "cls_type", "=", "'thicker'", ")", ":", "\n", "    ", "model", ",", "optimizer", "=", "unfix_more", "(", "model", ",", "optimizer", ",", "epoch", ",", "cfg", ",", "cur_lr", ",", "logger", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "cls_losses", "=", "AverageMeter", "(", ")", "\n", "reg_losses", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# switch to train mode", "\n", "model", ".", "train", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "for", "iter", ",", "input", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# input and output/loss", "\n", "template", "=", "Variable", "(", "input", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "search", "=", "Variable", "(", "input", "[", "1", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "cls_type", "==", "'thinner'", ":", "\n", "            ", "label_cls", "=", "Variable", "(", "input", "[", "2", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "label_cls", "=", "Variable", "(", "input", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "", "label_reg", "=", "Variable", "(", "input", "[", "3", "]", ")", ".", "cuda", "(", ")", "\n", "label_reg_weight", "=", "Variable", "(", "input", "[", "4", "]", ")", ".", "cuda", "(", ")", "\n", "sum_weight", "=", "Variable", "(", "input", "[", "5", "]", ".", "type", "(", "torch", ".", "FloatTensor", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "cls_loss", ",", "loc_loss", "=", "model", "(", "template", ",", "search", ",", "label_cls", ",", "label_reg", ",", "label_reg_weight", ",", "sum_weight", ")", "\n", "cls_loss", "=", "torch", ".", "mean", "(", "cls_loss", ")", "\n", "loc_loss", "=", "torch", ".", "mean", "(", "loc_loss", ")", "\n", "loss", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "CLS_WEIGHT", "*", "cls_loss", "+", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "REG_WEIGHT", "*", "loc_loss", "\n", "\n", "# compute gradient and do update step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm", "(", "model", ".", "parameters", "(", ")", ",", "10", ")", "# gradient clip", "\n", "\n", "if", "is_valid_number", "(", "loss", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "optimizer", ".", "step", "(", ")", "\n", "\n", "# record loss", "\n", "", "cls_loss", "=", "cls_loss", ".", "data", "[", "0", "]", "\n", "loc_loss", "=", "loc_loss", ".", "data", "[", "0", "]", "\n", "loss", "=", "loss", ".", "data", "[", "0", "]", "\n", "losses", ".", "update", "(", "loss", ",", "template", ".", "size", "(", "0", ")", ")", "\n", "cls_losses", ".", "update", "(", "cls_loss", ",", "template", ".", "size", "(", "0", ")", ")", "\n", "reg_losses", ".", "update", "(", "loc_loss", ",", "template", ".", "size", "(", "0", ")", ")", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "(", "iter", "+", "1", ")", "%", "cfg", ".", "PRINT_FREQ", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'Epoch: [{0}][{1}/{2}] lr : {lr:.7f} \\t Batch Time: {batch_time.avg:.3f} \\t Data Time:{data_time.avg:.3f} '", "\n", "'\\tCLS_Loss:{cls_loss.avg:.5f}\\tREG_Loss:{reg_loss.avg:.5f} \\t Loss:{loss.avg:.5f}'", ".", "format", "(", "\n", "epoch", ",", "iter", "+", "1", ",", "len", "(", "train_loader", ")", ",", "lr", "=", "cur_lr", ",", "batch_time", "=", "batch_time", ",", "\n", "data_time", "=", "data_time", ",", "cls_loss", "=", "cls_losses", ",", "reg_loss", "=", "reg_losses", ",", "loss", "=", "losses", ")", ")", "\n", "\n", "print_speed", "(", "(", "epoch", "-", "1", ")", "*", "len", "(", "train_loader", ")", "+", "iter", "+", "1", ",", "batch_time", ".", "avg", ",", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "END_EPOCH", "*", "len", "(", "train_loader", ")", ",", "logger", ")", "\n", "\n", "# write to tensorboard", "\n", "", "writer", "=", "writer_dict", "[", "'writer'", "]", "\n", "global_steps", "=", "writer_dict", "[", "'train_global_steps'", "]", "\n", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "loss", ",", "global_steps", ")", "\n", "writer_dict", "[", "'train_global_steps'", "]", "=", "global_steps", "+", "1", "\n", "\n", "", "return", "model", ",", "writer_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.unfix_more": [[141, 157], ["model.module.features.unfix", "logger.info", "torch.optim.SGD", "logger.info", "model.named_parameters", "logger.info", "model.parameters", "logger.info"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unfix"], ["", "def", "unfix_more", "(", "model", ",", "optimizer", ",", "epoch", ",", "cfg", ",", "cur_lr", ",", "logger", ")", ":", "\n", "    ", "if", "model", ".", "module", ".", "features", ".", "unfix", "(", "epoch", "/", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "END_EPOCH", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'unfix part model.'", ")", "\n", "trainable_params", "=", "[", "p", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "trainable_params", ",", "cur_lr", ",", "\n", "momentum", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WEIGHT_DECAY", ")", "\n", "\n", "logger", ".", "info", "(", "'trainable params:'", ")", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "requires_grad", ":", "\n", "                ", "logger", ".", "info", "(", "name", ")", "\n", "", "", "", "else", ":", "\n", "        ", "logger", ".", "info", "(", "'no unfix in this epoch.'", ")", "\n", "\n", "", "return", "model", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.is_valid_number": [[159, 161], ["math.isnan", "math.isinf"], "function", ["None"], ["", "def", "is_valid_number", "(", "x", ")", ":", "\n", "    ", "return", "not", "(", "math", ".", "isnan", "(", "x", ")", "or", "math", ".", "isinf", "(", "x", ")", "or", "x", ">", "1e4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.tune_tpe.fitness": [[59, 110], ["dict", "dict", "args.dataset.startswith", "test_siamfc.auc_otb", "print", "reporter", "args.dataset.startswith", "test_siamfc.eao_vot", "print", "reporter", "args.dataset.startswith", "test_siamrpn.eao_vot_rpn", "print", "reporter", "dict", "dict", "test_siamfc.auc_otb.item"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.auc_otb", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.eao_vot", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.eao_vot_rpn"], ["def", "fitness", "(", "config", ",", "reporter", ")", ":", "\n", "# different params for SiamFC and SiamRPN", "\n", "    ", "if", "'SiamFC'", "in", "args", ".", "arch", ":", "\n", "        ", "scale_step", "=", "config", "[", "\"scale_step\"", "]", "\n", "scale_penalty", "=", "config", "[", "\"scale_penalty\"", "]", "\n", "scale_lr", "=", "config", "[", "\"scale_lr\"", "]", "\n", "w_influence", "=", "config", "[", "\"w_influence\"", "]", "\n", "model_config", "=", "dict", "(", ")", "\n", "model_config", "[", "'benchmark'", "]", "=", "args", ".", "dataset", "\n", "model_config", "[", "'arch'", "]", "=", "args", ".", "arch", "\n", "model_config", "[", "'resume'", "]", "=", "args", ".", "resume", "\n", "model_config", "[", "'hp'", "]", "=", "dict", "(", ")", "\n", "model_config", "[", "'hp'", "]", "[", "'scale_step'", "]", "=", "scale_step", "\n", "model_config", "[", "'hp'", "]", "[", "'scale_penalty'", "]", "=", "scale_penalty", "\n", "model_config", "[", "'hp'", "]", "[", "'w_influence'", "]", "=", "w_influence", "\n", "model_config", "[", "'hp'", "]", "[", "'scale_lr'", "]", "=", "scale_lr", "\n", "", "elif", "'SiamRPN'", "in", "args", ".", "arch", ":", "\n", "        ", "penalty_k", "=", "config", "[", "\"penalty_k\"", "]", "\n", "scale_lr", "=", "config", "[", "\"scale_lr\"", "]", "\n", "window_influence", "=", "config", "[", "\"window_influence\"", "]", "\n", "small_sz", "=", "config", "[", "\"small_sz\"", "]", "\n", "big_sz", "=", "config", "[", "\"big_sz\"", "]", "\n", "\n", "model_config", "=", "dict", "(", ")", "\n", "model_config", "[", "'benchmark'", "]", "=", "args", ".", "dataset", "\n", "model_config", "[", "'arch'", "]", "=", "args", ".", "arch", "\n", "model_config", "[", "'resume'", "]", "=", "args", ".", "resume", "\n", "model_config", "[", "'hp'", "]", "=", "dict", "(", ")", "\n", "model_config", "[", "'hp'", "]", "[", "'penalty_k'", "]", "=", "penalty_k", "\n", "model_config", "[", "'hp'", "]", "[", "'window_influence'", "]", "=", "window_influence", "\n", "model_config", "[", "'hp'", "]", "[", "'lr'", "]", "=", "scale_lr", "\n", "model_config", "[", "'hp'", "]", "[", "'small_sz'", "]", "=", "small_sz", "\n", "model_config", "[", "'hp'", "]", "[", "'big_sz'", "]", "=", "big_sz", "\n", "\n", "# OTB and SiamFC", "\n", "", "if", "args", ".", "dataset", ".", "startswith", "(", "'OTB'", ")", "and", "'SiamFC'", "in", "args", ".", "arch", ":", "\n", "        ", "auc", "=", "auc_otb", "(", "tracker", ",", "model", ",", "model_config", ")", "\n", "print", "(", "\"scale_step: {0}, scale_lr: {1}, scale_penalty: {2}, window_influence: {3}, auc: {4}\"", ".", "format", "(", "scale_step", ",", "scale_lr", ",", "scale_penalty", ",", "w_influence", ",", "auc", ".", "item", "(", ")", ")", ")", "\n", "reporter", "(", "AUC", "=", "auc", ")", "\n", "\n", "# VOT and SiamFC", "\n", "", "if", "args", ".", "dataset", ".", "startswith", "(", "'VOT'", ")", "and", "'SiamFC'", "in", "args", ".", "arch", ":", "\n", "        ", "eao", "=", "eao_vot", "(", "tracker", ",", "model", ",", "model_config", ")", "\n", "print", "(", "\"scale_step: {0}, scale_lr: {1}, scale_penalty: {2}, window_influence: {3}, eao: {4}\"", ".", "format", "(", "scale_step", ",", "scale_lr", ",", "scale_penalty", ",", "w_influence", ",", "eao", ")", ")", "\n", "reporter", "(", "EAO", "=", "eao", ")", "\n", "\n", "# VOT and SiamRPN", "\n", "", "if", "args", ".", "dataset", ".", "startswith", "(", "'VOT'", ")", "and", "'SiamRPN'", "in", "args", ".", "arch", ":", "\n", "        ", "eao", "=", "eao_vot_rpn", "(", "tracker", ",", "model", ",", "model_config", ")", "\n", "print", "(", "\"penalty_k: {0}, scale_lr: {1}, window_influence: {2}, small_sz: {3}, big_sz: {4}, eao: {5}\"", ".", "format", "(", "penalty_k", ",", "scale_lr", ",", "window_influence", ",", "small_sz", ",", "big_sz", ",", "eao", ")", ")", "\n", "reporter", "(", "EAO", "=", "eao", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_webcam.parse_args": [[27, 37], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for fc testing.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch SiamFC Tracking Test'", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "'SiamRPNRes22'", ",", "type", "=", "str", ",", "help", "=", "'backbone architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "'snapshot/CIResNet22RPN.model'", ",", "type", "=", "str", ",", "help", "=", "'pretrained model'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_webcam.track_webcam": [[39, 131], ["UIControl", "cv2.VideoCapture", "cv2.namedWindow", "cv2.resizeWindow", "cv2.setMouseCallback", "cv2.VideoCapture.release", "cv2.destroyAllWindows", "cv2.VideoCapture.read", "frame.copy", "cv2.imshow", "cv2.waitKey", "run_webcam..get_tl", "run_webcam..get_br", "UIControl.get_bb", "numpy.array", "numpy.array", "tracker.init", "cv2.rectangle", "cv2.putText", "cv2.putText", "ord", "min", "min", "abs", "abs", "UIControl.get_tl", "UIControl.get_br", "tracker.track", "utils.utils.cxy_wh_2_rect", "cv2.rectangle", "cv2.putText", "cv2.putText", "cv2.putText", "ord", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect"], ["", "def", "track_webcam", "(", "tracker", ",", "model", ")", ":", "\n", "    ", "\"\"\"Run tracker with webcam.\"\"\"", "\n", "\n", "class", "UIControl", ":", "\n", "        ", "def", "__init__", "(", "self", ")", ":", "\n", "            ", "self", ".", "mode", "=", "'init'", "# init, select, track", "\n", "self", ".", "target_tl", "=", "(", "-", "1", ",", "-", "1", ")", "\n", "self", ".", "target_br", "=", "(", "-", "1", ",", "-", "1", ")", "\n", "self", ".", "mode_switch", "=", "False", "\n", "\n", "", "def", "mouse_callback", "(", "self", ",", "event", ",", "x", ",", "y", ",", "flags", ",", "param", ")", ":", "\n", "            ", "if", "event", "==", "cv2", ".", "EVENT_LBUTTONDOWN", "and", "self", ".", "mode", "==", "'init'", ":", "\n", "                ", "self", ".", "target_tl", "=", "(", "x", ",", "y", ")", "\n", "self", ".", "target_br", "=", "(", "x", ",", "y", ")", "\n", "self", ".", "mode", "=", "'select'", "\n", "self", ".", "mode_switch", "=", "True", "\n", "", "elif", "event", "==", "cv2", ".", "EVENT_MOUSEMOVE", "and", "self", ".", "mode", "==", "'select'", ":", "\n", "                ", "self", ".", "target_br", "=", "(", "x", ",", "y", ")", "\n", "", "elif", "event", "==", "cv2", ".", "EVENT_LBUTTONDOWN", "and", "self", ".", "mode", "==", "'select'", ":", "\n", "                ", "self", ".", "target_br", "=", "(", "x", ",", "y", ")", "\n", "self", ".", "mode", "=", "'track'", "\n", "self", ".", "mode_switch", "=", "True", "\n", "\n", "", "", "def", "get_tl", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "target_tl", "if", "self", ".", "target_tl", "[", "0", "]", "<", "self", ".", "target_br", "[", "0", "]", "else", "self", ".", "target_br", "\n", "\n", "", "def", "get_br", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "target_br", "if", "self", ".", "target_tl", "[", "0", "]", "<", "self", ".", "target_br", "[", "0", "]", "else", "self", ".", "target_tl", "\n", "\n", "", "def", "get_bb", "(", "self", ")", ":", "\n", "            ", "tl", "=", "self", ".", "get_tl", "(", ")", "\n", "br", "=", "self", ".", "get_br", "(", ")", "\n", "\n", "bb", "=", "[", "min", "(", "tl", "[", "0", "]", ",", "br", "[", "0", "]", ")", ",", "min", "(", "tl", "[", "1", "]", ",", "br", "[", "1", "]", ")", ",", "abs", "(", "br", "[", "0", "]", "-", "tl", "[", "0", "]", ")", ",", "abs", "(", "br", "[", "1", "]", "-", "tl", "[", "1", "]", ")", "]", "\n", "return", "bb", "# [lx, ly, w, h]", "\n", "\n", "", "", "ui_control", "=", "UIControl", "(", ")", "\n", "cap", "=", "cv2", ".", "VideoCapture", "(", "0", ")", "\n", "display_name", "=", "'SiamDW on webcam'", "\n", "cv2", ".", "namedWindow", "(", "display_name", ",", "cv2", ".", "WINDOW_NORMAL", "|", "cv2", ".", "WINDOW_KEEPRATIO", ")", "\n", "cv2", ".", "resizeWindow", "(", "display_name", ",", "960", ",", "720", ")", "\n", "cv2", ".", "setMouseCallback", "(", "display_name", ",", "ui_control", ".", "mouse_callback", ")", "\n", "\n", "\n", "while", "True", ":", "\n", "# Capture frame-by-frame", "\n", "        ", "ret", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "frame_disp", "=", "frame", ".", "copy", "(", ")", "\n", "\n", "if", "ui_control", ".", "mode", "==", "'track'", "and", "ui_control", ".", "mode_switch", ":", "\n", "            ", "ui_control", ".", "mode_switch", "=", "False", "\n", "lx", ",", "ly", ",", "w", ",", "h", "=", "ui_control", ".", "get_bb", "(", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "lx", "+", "w", "/", "2", ",", "ly", "+", "h", "/", "2", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "frame_disp", ",", "target_pos", ",", "target_sz", ",", "model", ")", "# init tracker", "\n", "\n", "\n", "# Draw box", "\n", "", "if", "ui_control", ".", "mode", "==", "'select'", ":", "\n", "            ", "cv2", ".", "rectangle", "(", "frame_disp", ",", "ui_control", ".", "get_tl", "(", ")", ",", "ui_control", ".", "get_br", "(", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "", "elif", "ui_control", ".", "mode", "==", "'track'", ":", "\n", "            ", "state", "=", "tracker", ".", "track", "(", "state", ",", "frame_disp", ")", "# track", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "int", "(", "location", "[", "0", "]", ")", ",", "int", "(", "location", "[", "1", "]", ")", ",", "int", "(", "location", "[", "0", "]", "+", "location", "[", "2", "]", ")", ",", "int", "(", "\n", "location", "[", "1", "]", "+", "location", "[", "3", "]", ")", "\n", "\n", "cv2", ".", "rectangle", "(", "frame_disp", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "5", ")", "\n", "\n", "# Put text", "\n", "", "font_color", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "if", "ui_control", ".", "mode", "==", "'init'", "or", "ui_control", ".", "mode", "==", "'select'", ":", "\n", "            ", "cv2", ".", "putText", "(", "frame_disp", ",", "'Select target'", ",", "(", "20", ",", "30", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "font_color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Press q to quit'", ",", "(", "20", ",", "55", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "", "elif", "ui_control", ".", "mode", "==", "'track'", ":", "\n", "            ", "cv2", ".", "putText", "(", "frame_disp", ",", "'Tracking!'", ",", "(", "20", ",", "30", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Press r to reset'", ",", "(", "20", ",", "55", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Press q to quit'", ",", "(", "20", ",", "80", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "# Display the resulting frame", "\n", "", "cv2", ".", "imshow", "(", "display_name", ",", "frame_disp", ")", "\n", "key", "=", "cv2", ".", "waitKey", "(", "1", ")", "\n", "if", "key", "==", "ord", "(", "'q'", ")", ":", "\n", "            ", "break", "\n", "", "elif", "key", "==", "ord", "(", "'r'", ")", ":", "\n", "            ", "ui_control", ".", "mode", "=", "'init'", "\n", "\n", "# When everything done, release the capture", "\n", "", "", "cap", ".", "release", "(", ")", "\n", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_webcam.main": [[133, 160], ["run_webcam.parse_args", "easydict.EasyDict", "print", "utils.utils.load_pretrain", "net.cuda.eval", "net.cuda.cuda", "run_webcam.track_webcam", "tracker.siamfc.SiamFC", "tracker.siamrpn.SiamRPN"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_webcam.track_webcam"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "# prepare model (SiamRPN or SiamFC)", "\n", "\n", "# prepare tracker", "\n", "info", "=", "edict", "(", ")", "\n", "info", ".", "arch", "=", "args", ".", "arch", "\n", "info", ".", "dataset", "=", "'NOUSE'", "\n", "info", ".", "epoch_test", "=", "True", "\n", "info", ".", "cls_type", "=", "'thinner'", "\n", "\n", "if", "'FC'", "in", "args", ".", "arch", ":", "\n", "        ", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", ")", "\n", "tracker", "=", "SiamFC", "(", "info", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "anchors_nums", "=", "5", ",", "cls_type", "=", "'thinner'", ")", "\n", "tracker", "=", "SiamRPN", "(", "info", ")", "\n", "\n", "", "print", "(", "'[*] ======= Track video with {} ======='", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "\n", "net", "=", "load_pretrain", "(", "net", ",", "args", ".", "resume", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "\n", "\n", "track_webcam", "(", "tracker", ",", "net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_video.parse_args": [[26, 38], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for fc testing.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch SiamFC Tracking Test'", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "'SiamRPNRes22'", ",", "type", "=", "str", ",", "help", "=", "'backbone architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "'/data/zpzhang/project4/siamese/Siamese/snapshot/CIResNet22RPN.model'", ",", "type", "=", "str", ",", "help", "=", "'pretrained model'", ")", "\n", "parser", ".", "add_argument", "(", "'--video'", ",", "default", "=", "'/data/zpzhang/project4/siamese/Siamese/videos/bag.mp4'", ",", "type", "=", "str", ",", "help", "=", "'video file path'", ")", "\n", "parser", ".", "add_argument", "(", "'--init_bbox'", ",", "default", "=", "None", ",", "help", "=", "'bbox in the first frame None or [lx, ly, w, h]'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_video.track_video": [[40, 122], ["os.path.isfile", "cv2.VideoCapture", "cv2.namedWindow", "cv2.resizeWindow", "cv2.VideoCapture.read", "cv2.imshow", "cv2.VideoCapture.release", "cv2.destroyAllWindows", "print", "exit", "numpy.array", "numpy.array", "tracker.init", "cv2.VideoCapture.read", "frame.copy", "tracker.track", "utils.utils.cxy_wh_2_rect", "cv2.rectangle", "cv2.putText", "cv2.putText", "cv2.putText", "cv2.imshow", "cv2.waitKey", "video_path.split", "frame.copy", "cv2.putText", "cv2.selectROI", "numpy.array", "numpy.array", "tracker.init", "int", "int", "int", "int", "ord", "ord", "cv2.VideoCapture.read", "frame.copy", "cv2.putText", "cv2.imshow", "cv2.selectROI", "numpy.array", "numpy.array", "tracker.init"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init"], ["", "def", "track_video", "(", "tracker", ",", "model", ",", "video_path", ",", "init_box", "=", "None", ")", ":", "\n", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "video_path", ")", ",", "\"please provide a valid video file\"", "\n", "\n", "cap", "=", "cv2", ".", "VideoCapture", "(", "video_path", ")", "\n", "display_name", "=", "'Video: {}'", ".", "format", "(", "video_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ")", "\n", "cv2", ".", "namedWindow", "(", "display_name", ",", "cv2", ".", "WINDOW_NORMAL", "|", "cv2", ".", "WINDOW_KEEPRATIO", ")", "\n", "cv2", ".", "resizeWindow", "(", "display_name", ",", "960", ",", "720", ")", "\n", "success", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "cv2", ".", "imshow", "(", "display_name", ",", "frame", ")", "\n", "\n", "if", "success", "is", "not", "True", ":", "\n", "        ", "print", "(", "\"Read failed.\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "# init", "\n", "", "if", "init_box", "is", "not", "None", ":", "\n", "        ", "lx", ",", "ly", ",", "w", ",", "h", "=", "init_box", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "lx", "+", "w", "/", "2", ",", "ly", "+", "h", "/", "2", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "frame", ",", "target_pos", ",", "target_sz", ",", "model", ")", "# init tracker", "\n", "\n", "", "else", ":", "\n", "        ", "while", "True", ":", "\n", "\n", "            ", "frame_disp", "=", "frame", ".", "copy", "(", ")", "\n", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Select target ROI and press ENTER'", ",", "(", "20", ",", "30", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "\n", "1", ",", "(", "0", ",", "0", ",", "255", ")", ",", "1", ")", "\n", "\n", "lx", ",", "ly", ",", "w", ",", "h", "=", "cv2", ".", "selectROI", "(", "display_name", ",", "frame_disp", ",", "fromCenter", "=", "False", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "lx", "+", "w", "/", "2", ",", "ly", "+", "h", "/", "2", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "frame_disp", ",", "target_pos", ",", "target_sz", ",", "model", ")", "# init tracker", "\n", "\n", "break", "\n", "\n", "", "", "while", "True", ":", "\n", "        ", "ret", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "\n", "if", "frame", "is", "None", ":", "\n", "            ", "return", "\n", "\n", "", "frame_disp", "=", "frame", ".", "copy", "(", ")", "\n", "\n", "# Draw box", "\n", "state", "=", "tracker", ".", "track", "(", "state", ",", "frame_disp", ")", "# track", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "int", "(", "location", "[", "0", "]", ")", ",", "int", "(", "location", "[", "1", "]", ")", ",", "int", "(", "location", "[", "0", "]", "+", "location", "[", "2", "]", ")", ",", "int", "(", "location", "[", "1", "]", "+", "location", "[", "3", "]", ")", "\n", "\n", "cv2", ".", "rectangle", "(", "frame_disp", ",", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "5", ")", "\n", "\n", "font_color", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Tracking!'", ",", "(", "20", ",", "30", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Press r to reset'", ",", "(", "20", ",", "55", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Press q to quit'", ",", "(", "20", ",", "80", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "1", ",", "\n", "font_color", ",", "1", ")", "\n", "\n", "# Display the resulting frame", "\n", "cv2", ".", "imshow", "(", "display_name", ",", "frame_disp", ")", "\n", "key", "=", "cv2", ".", "waitKey", "(", "1", ")", "\n", "if", "key", "==", "ord", "(", "'q'", ")", ":", "\n", "            ", "break", "\n", "", "elif", "key", "==", "ord", "(", "'r'", ")", ":", "\n", "            ", "ret", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "frame_disp", "=", "frame", ".", "copy", "(", ")", "\n", "\n", "cv2", ".", "putText", "(", "frame_disp", ",", "'Select target ROI and press ENTER'", ",", "(", "20", ",", "30", ")", ",", "cv2", ".", "FONT_HERSHEY_COMPLEX_SMALL", ",", "\n", "1.5", ",", "\n", "(", "0", ",", "0", ",", "0", ")", ",", "1", ")", "\n", "\n", "cv2", ".", "imshow", "(", "display_name", ",", "frame_disp", ")", "\n", "lx", ",", "ly", ",", "w", ",", "h", "=", "cv2", ".", "selectROI", "(", "display_name", ",", "frame_disp", ",", "fromCenter", "=", "False", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "lx", "+", "w", "/", "2", ",", "ly", "+", "h", "/", "2", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "frame_disp", ",", "target_pos", ",", "target_sz", ",", "model", ")", "\n", "\n", "# When everything done, release the capture", "\n", "", "", "cap", ".", "release", "(", ")", "\n", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_video.main": [[124, 156], ["run_video.parse_args", "easydict.EasyDict", "print", "utils.utils.load_pretrain", "net.cuda.eval", "net.cuda.cuda", "run_video.track_video", "tracker.siamfc.SiamFC", "tracker.siamrpn.SiamRPN", "list", "isinstance", "eval"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.run_video.track_video"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "# prepare model (SiamRPN or SiamFC)", "\n", "\n", "# prepare tracker", "\n", "info", "=", "edict", "(", ")", "\n", "info", ".", "arch", "=", "args", ".", "arch", "\n", "info", ".", "dataset", "=", "args", ".", "video", "\n", "info", ".", "epoch_test", "=", "True", "\n", "info", ".", "cls_type", "=", "'thinner'", "\n", "\n", "if", "'FC'", "in", "args", ".", "arch", ":", "\n", "        ", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", ")", "\n", "tracker", "=", "SiamFC", "(", "info", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "anchors_nums", "=", "5", ",", "cls_type", "=", "'thinner'", ")", "\n", "tracker", "=", "SiamRPN", "(", "info", ")", "\n", "\n", "", "print", "(", "'[*] ======= Track video with {} ======='", ".", "format", "(", "args", ".", "arch", ")", ")", "\n", "\n", "net", "=", "load_pretrain", "(", "net", ",", "args", ".", "resume", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "\n", "# check init box is list or not", "\n", "if", "not", "isinstance", "(", "args", ".", "init_bbox", ",", "list", ")", "and", "args", ".", "init_bbox", "is", "not", "None", ":", "\n", "        ", "args", ".", "init_bbox", "=", "list", "(", "eval", "(", "args", ".", "init_bbox", ")", ")", "\n", "", "else", ":", "\n", "        ", "pass", "\n", "\n", "", "track_video", "(", "tracker", ",", "net", ",", "args", ".", "video", ",", "init_box", "=", "args", ".", "init_bbox", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.onekey.parse_args": [[15, 26], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for onekey.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train SiamRPN with onekey'", ")", "\n", "# for train", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "type", "=", "str", ",", "default", "=", "'experiments/train/SiamRPN.yaml'", ",", "help", "=", "'yaml configure file name'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.onekey.main": [[28, 86], ["onekey.parse_args", "yaml.load", "open().read", "print", "print", "os.system", "print", "print", "os.system", "print", "print", "os.system", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.system", "ValueError", "utils.utils.extract_logs", "ValueError", "os.path.exists", "os.makedirs", "open", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.extract_logs"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "# train - test - tune information", "\n", "info", "=", "yaml", ".", "load", "(", "open", "(", "args", ".", "cfg", ",", "'r'", ")", ".", "read", "(", ")", ")", "\n", "info", "=", "info", "[", "'SIAMRPN'", "]", "\n", "trainINFO", "=", "info", "[", "'TRAIN'", "]", "\n", "testINFO", "=", "info", "[", "'TEST'", "]", "\n", "tuneINFO", "=", "info", "[", "'TUNE'", "]", "\n", "\n", "# epoch training -- train 50 or more epochs", "\n", "if", "trainINFO", "[", "'ISTRUE'", "]", ":", "\n", "        ", "print", "(", "'==> train phase'", ")", "\n", "print", "(", "'python ./siamese_tracking/train_siamrpn.py --cfg {0} --gpus {1} --workers {2} 2>&1 | tee logs/siamrpn_train.log'", "\n", ".", "format", "(", "args", ".", "cfg", ",", "info", "[", "'GPUS'", "]", ",", "info", "[", "'WORKERS'", "]", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "\n", "", "os", ".", "system", "(", "'python ./siamese_tracking/train_siamrpn.py --cfg {0} --gpus {1} --workers {2} 2>&1 | tee logs/siamrpn_train.log'", "\n", ".", "format", "(", "args", ".", "cfg", ",", "info", "[", "'GPUS'", "]", ",", "info", "[", "'WORKERS'", "]", ")", ")", "\n", "\n", "# epoch testing -- test 30-50 epochs (or more)", "\n", "", "if", "testINFO", "[", "'ISTRUE'", "]", ":", "\n", "        ", "print", "(", "'==> test phase'", ")", "\n", "print", "(", "'mpiexec -n {0} python ./siamese_tracking/test_epochs.py --arch {1} --start_epoch {2} --end_epoch {3} --gpu_nums={4} \\\n                  --threads {0} --dataset {5} --anchor_nums {6} 2>&1 | tee logs/siamrpn_epoch_test.log'", "\n", ".", "format", "(", "testINFO", "[", "'THREADS'", "]", ",", "trainINFO", "[", "'MODEL'", "]", ",", "testINFO", "[", "'START_EPOCH'", "]", ",", "testINFO", "[", "'END_EPOCH'", "]", ",", "\n", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "testINFO", "[", "'DATA'", "]", ",", "len", "(", "trainINFO", "[", "'ANCHORS_RATIOS'", "]", ")", "*", "len", "(", "trainINFO", "[", "'ANCHORS_SCALES'", "]", ")", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "\n", "", "os", ".", "system", "(", "'mpiexec -n {0} python ./siamese_tracking/test_epochs.py --arch {1} --start_epoch {2} --end_epoch {3} --gpu_nums={4} \\\n                  --threads {0} --dataset {5} --anchor_nums {6} 2>&1 | tee logs/siamrpn_epoch_test.log'", "\n", ".", "format", "(", "testINFO", "[", "'THREADS'", "]", ",", "trainINFO", "[", "'MODEL'", "]", ",", "testINFO", "[", "'START_EPOCH'", "]", ",", "testINFO", "[", "'END_EPOCH'", "]", ",", "\n", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "testINFO", "[", "'DATA'", "]", ",", "len", "(", "trainINFO", "[", "'ANCHORS_RATIOS'", "]", ")", "*", "len", "(", "trainINFO", "[", "'ANCHORS_SCALES'", "]", ")", ")", ")", "\n", "if", "'VOT'", "in", "testINFO", "[", "'DATA'", "]", ":", "\n", "            ", "os", ".", "system", "(", "'python ./lib/core/eval_vot.py {0} ./result 2>&1 | tee logs/siamrpn_eval_epochs.log'", ".", "format", "(", "testINFO", "[", "'DATA'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported'", ")", "\n", "\n", "# tuning -- with TPE", "\n", "", "", "if", "tuneINFO", "[", "'ISTRUE'", "]", ":", "\n", "\n", "        ", "if", "'VOT'", "in", "testINFO", "[", "'DATA'", "]", ":", "# for vot real-time and baseline", "\n", "            ", "resume", "=", "extract_logs", "(", "'logs/siamrpn_eval_epochs.log'", ",", "'VOT'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported now'", ")", "\n", "\n", "", "print", "(", "'==> tune phase'", ")", "\n", "print", "(", "'python -u ./siamese_tracking/tune_tpe.py --arch {0} --resume {1} --dataset {2} --gpu_nums {3}  --anchor_nums {4} \\\n                  2>&1 | tee logs/tpe_tune_rpn.log'", ".", "format", "(", "trainINFO", "[", "'MODEL'", "]", ",", "'snapshot/'", "+", "resume", ",", "tuneINFO", "[", "'DATA'", "]", ",", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "len", "(", "trainINFO", "[", "'ANCHORS_RATIOS'", "]", ")", "*", "len", "(", "trainINFO", "[", "'ANCHORS_SCALES'", "]", ")", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "", "os", ".", "system", "(", "'python -u ./siamese_tracking/tune_tpe.py --arch {0} --resume {1} --dataset {2} --gpu_nums {3}  --anchor_nums {4} \\\n                  2>&1 | tee logs/tpe_tune_rpn.log'", ".", "format", "(", "trainINFO", "[", "'MODEL'", "]", ",", "'snapshot/'", "+", "resume", ",", "tuneINFO", "[", "'DATA'", "]", ",", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "len", "(", "trainINFO", "[", "'ANCHORS_RATIOS'", "]", ")", "*", "len", "(", "trainINFO", "[", "'ANCHORS_SCALES'", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.onekey_fc.parse_args": [[16, 29], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for onekey.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train SiamFC with onekey'", ")", "\n", "# for train", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "type", "=", "str", ",", "default", "=", "'experiments/train/SiamFC.yaml'", ",", "help", "=", "'yaml configure file name'", ")", "\n", "\n", "# for", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.onekey_fc.main": [[31, 99], ["onekey_fc.parse_args", "yaml.load", "open().read", "print", "print", "os.system", "print", "print", "os.system", "print", "print", "os.system", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.system", "os.path.exists", "os.makedirs", "open", "os.system", "ValueError", "utils.utils.extract_logs", "ValueError", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.extract_logs"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "# train - test - tune information", "\n", "info", "=", "yaml", ".", "load", "(", "open", "(", "args", ".", "cfg", ",", "'r'", ")", ".", "read", "(", ")", ")", "\n", "info", "=", "info", "[", "'SIAMFC'", "]", "\n", "trainINFO", "=", "info", "[", "'TRAIN'", "]", "\n", "testINFO", "=", "info", "[", "'TEST'", "]", "\n", "tuneINFO", "=", "info", "[", "'TUNE'", "]", "\n", "dataINFO", "=", "info", "[", "'DATASET'", "]", "\n", "\n", "# epoch training -- train 50 or more epochs", "\n", "if", "trainINFO", "[", "'ISTRUE'", "]", ":", "\n", "        ", "print", "(", "'==> train phase'", ")", "\n", "print", "(", "'python ./siamese_tracking/train_siamfc.py --cfg {0} --gpus {1} --workers {2} 2>&1 | tee logs/siamfc_train.log'", "\n", ".", "format", "(", "args", ".", "cfg", ",", "info", "[", "'GPUS'", "]", ",", "info", "[", "'WORKERS'", "]", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "\n", "", "os", ".", "system", "(", "'python ./siamese_tracking/train_siamfc.py --cfg {0} --gpus {1} --workers {2} 2>&1 | tee logs/siamrpn_train.log'", "\n", ".", "format", "(", "args", ".", "cfg", ",", "info", "[", "'GPUS'", "]", ",", "info", "[", "'WORKERS'", "]", ")", ")", "\n", "\n", "# epoch testing -- test 30-50 epochs (or more)", "\n", "", "if", "testINFO", "[", "'ISTRUE'", "]", ":", "\n", "        ", "print", "(", "'==> test phase'", ")", "\n", "print", "(", "'mpiexec -n {0} python ./siamese_tracking/test_epochs.py --arch {1} --start_epoch {2} --end_epoch {3} --gpu_nums={4} \\\n                  --threads {0} --dataset {5}  2>&1 | tee logs/siamfc_epoch_test.log'", "\n", ".", "format", "(", "testINFO", "[", "'THREADS'", "]", ",", "trainINFO", "[", "'MODEL'", "]", ",", "testINFO", "[", "'START_EPOCH'", "]", ",", "testINFO", "[", "'END_EPOCH'", "]", ",", "\n", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "testINFO", "[", "'DATA'", "]", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "\n", "", "os", ".", "system", "(", "'mpiexec -n {0} python ./siamese_tracking/test_epochs.py --arch {1} --start_epoch {2} --end_epoch {3} --gpu_nums={4} \\\n                  --threads {0} --dataset {5}   2>&1 | tee logs/siamfc_epoch_test.log'", "\n", ".", "format", "(", "testINFO", "[", "'THREADS'", "]", ",", "trainINFO", "[", "'MODEL'", "]", ",", "testINFO", "[", "'START_EPOCH'", "]", ",", "testINFO", "[", "'END_EPOCH'", "]", ",", "\n", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ",", "testINFO", "[", "'DATA'", "]", ")", ")", "\n", "\n", "# test on vot or otb benchmark", "\n", "if", "'OTB'", "in", "testINFO", "[", "'DATA'", "]", ":", "\n", "            ", "os", ".", "system", "(", "'python ./lib/core/eval_otb.py {0} ./result SiamFC* 0 100 2>&1 | tee logs/siamfc_eval_epochs.log'", ".", "format", "(", "testINFO", "[", "'DATA'", "]", ")", ")", "\n", "", "elif", "'VOT'", "in", "testINFO", "[", "'DATA'", "]", ":", "\n", "            ", "os", ".", "system", "(", "'python ./lib/core/eval_vot.py {0} ./result 2>&1 | tee logs/siamfc_eval_epochs.log'", ".", "format", "(", "testINFO", "[", "'DATA'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported'", ")", "\n", "\n", "\n", "# tuning -- with TPE", "\n", "", "", "if", "tuneINFO", "[", "'ISTRUE'", "]", ":", "\n", "\n", "        ", "if", "'OTB'", "in", "testINFO", "[", "'DATA'", "]", ":", "\n", "            ", "pass", "\n", "", "elif", "'VOT'", "in", "testINFO", "[", "'DATA'", "]", "and", "'LT'", "not", "in", "testINFO", "[", "'DATA'", "]", ":", "# for vot real-time and baseline", "\n", "            ", "resume", "=", "extract_logs", "(", "'logs/siamfc_eval_epochs.log'", ",", "'VOT'", ")", "\n", "", "elif", "'LT'", "in", "testINFO", "[", "'DATA'", "]", ":", "# for vot longterm", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'not supported now'", ")", "\n", "\n", "", "print", "(", "'==> tune phase'", ")", "\n", "print", "(", "'python -u ./siamese_tracking/tune_tpe.py --arch {0} --resume {1} --dataset {2} --gpu_nums {3} \\\n                  2>&1 | tee logs/tpe_tune_fc.log'", ".", "format", "(", "trainINFO", "[", "'MODEL'", "]", ",", "'snapshot/'", "+", "resume", ",", "tuneINFO", "[", "'DATA'", "]", ",", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ")", ")", "\n", "\n", "if", "not", "exists", "(", "'logs'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs'", ")", "\n", "", "os", ".", "system", "(", "'python -u ./siamese_tracking/tune_tpe.py --arch {0} --resume {1} --dataset {2} --gpu_nums {3}\\\n                  2>&1 | tee logs/tpe_tune_fc.log'", ".", "format", "(", "trainINFO", "[", "'MODEL'", "]", ",", "'snapshot/'", "+", "resume", ",", "tuneINFO", "[", "'DATA'", "]", ",", "(", "len", "(", "info", "[", "'GPUS'", "]", ")", "+", "1", ")", "//", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.tune_gene.fitness": [[82, 114], ["dict", "dict", "args.dataset.startswith", "test_siamfc.auc_otb", "print", "test_siamfc.auc_otb.item", "args.dataset.startswith", "test_siamfc.eao_vot", "print", "test_siamfc.auc_otb.item"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.auc_otb", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.eao_vot"], ["@", "engine", ".", "fitness_register", "\n", "def", "fitness", "(", "indv", ")", ":", "\n", "    ", "scale_step", ",", "scale_lr", ",", "scale_penalty", ",", "window_influence", "=", "indv", ".", "solution", "\n", "\n", "# add params top config", "\n", "config", "=", "dict", "(", ")", "\n", "config", "[", "'benchmark'", "]", "=", "args", ".", "dataset", "\n", "config", "[", "'arch'", "]", "=", "args", ".", "arch", "\n", "config", "[", "'resume'", "]", "=", "args", ".", "resume", "\n", "config", "[", "'hp'", "]", "=", "dict", "(", ")", "\n", "config", "[", "'hp'", "]", "[", "'scale_step'", "]", "=", "scale_step", "\n", "config", "[", "'hp'", "]", "[", "'scale_penalty'", "]", "=", "scale_penalty", "\n", "config", "[", "'hp'", "]", "[", "'scale_lr'", "]", "=", "scale_lr", "\n", "config", "[", "'hp'", "]", "[", "'w_influence'", "]", "=", "window_influence", "\n", "\n", "if", "args", ".", "dataset", ".", "startswith", "(", "'OTB'", ")", ":", "\n", "        ", "auc", "=", "auc_otb", "(", "tracker", ",", "net", ",", "config", ")", "\n", "print", "(", "\"scale_step: {0}, scale_lr: {1}, scale_penalty: {2}, window_influence: {3}, auc: {4}\"", ".", "format", "(", "scale_step", ",", "\n", "scale_lr", ",", "\n", "scale_penalty", ",", "\n", "window_influence", ",", "\n", "auc", ".", "item", "(", ")", ")", ")", "\n", "return", "auc", ".", "item", "(", ")", "\n", "\n", "", "elif", "args", ".", "dataset", ".", "startswith", "(", "'VOT'", ")", ":", "\n", "        ", "eao", "=", "eao_vot", "(", "tracker", ",", "net", ",", "config", ")", "\n", "print", "(", "\"scale_step: {0}, scale_lr: {1}, scale_penalty: {2}, window_influence: {3}, eao: {4}\"", ".", "format", "(", "scale_step", ",", "\n", "scale_lr", ",", "\n", "scale_penalty", ",", "\n", "window_influence", ",", "\n", "eao", ")", ")", "\n", "return", "eao", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking._init_paths.add_path": [[16, 19], ["sys.path.insert"], "function", ["None"], ["def", "add_path", "(", "path", ")", ":", "\n", "    ", "if", "path", "not", "in", "sys", ".", "path", ":", "\n", "        ", "sys", ".", "path", ".", "insert", "(", "0", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.parse_args": [[31, 43], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for fc testing.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch SiamFC Tracking Test'", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "dest", "=", "'arch'", ",", "default", "=", "'SiamFCIncep22'", ",", "help", "=", "'backbone architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "help", "=", "'pretrained model'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'VOT2017'", ",", "help", "=", "'dataset test'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_test'", ",", "default", "=", "False", ",", "type", "=", "bool", ",", "help", "=", "'multi-gpu epoch test flag'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.track": [[45, 117], ["os.path.exists", "enumerate", "cv2.getTickFrequency", "print", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "cv2.imread", "cv2.getTickCount", "open", "args.resume.split", "suffix.split", "os.path.exists", "os.makedirs", "len", "cv2.cvtColor", "utils.utils.get_axis_aligned_bbox", "numpy.array", "numpy.array", "tracker.init", "utils.utils.cxy_wh_2_rect", "regions.append", "cv2.getTickCount", "tracker.track", "utils.utils.cxy_wh_2_rect", "regions.append", "isinstance", "x.copy", "fin.write", "utils.utils.poly_iou", "regions.append", "regions.append", "fin.write", "x.copy", "fin.write", "str", "str", "str", "enumerate"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.poly_iou"], ["", "def", "track", "(", "tracker", ",", "net", ",", "video", ",", "args", ")", ":", "\n", "    ", "start_frame", ",", "toc", "=", "0", ",", "0", "\n", "\n", "# save result to evaluate", "\n", "if", "args", ".", "epoch_test", ":", "\n", "        ", "suffix", "=", "args", ".", "resume", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "suffix", "=", "suffix", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "tracker_path", "=", "os", ".", "path", ".", "join", "(", "'result'", ",", "args", ".", "dataset", ",", "args", ".", "arch", "+", "suffix", ")", "\n", "", "else", ":", "\n", "        ", "tracker_path", "=", "os", ".", "path", ".", "join", "(", "'result'", ",", "args", ".", "dataset", ",", "args", ".", "arch", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "tracker_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "tracker_path", ")", "\n", "\n", "", "if", "'VOT'", "in", "args", ".", "dataset", ":", "\n", "        ", "baseline_path", "=", "os", ".", "path", ".", "join", "(", "tracker_path", ",", "'baseline'", ")", "\n", "video_path", "=", "os", ".", "path", ".", "join", "(", "baseline_path", ",", "video", "[", "'name'", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "video_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "os", ".", "path", ".", "join", "(", "video_path", ",", "video", "[", "'name'", "]", "+", "'_001.txt'", ")", "\n", "", "else", ":", "\n", "        ", "result_path", "=", "os", ".", "path", ".", "join", "(", "tracker_path", ",", "'{:s}.txt'", ".", "format", "(", "video", "[", "'name'", "]", ")", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "return", "# for mult-gputesting", "\n", "\n", "", "regions", "=", "[", "]", "\n", "image_files", ",", "gt", "=", "video", "[", "'image_files'", "]", ",", "video", "[", "'gt'", "]", "\n", "for", "f", ",", "image_file", "in", "enumerate", "(", "image_files", ")", ":", "\n", "        ", "im", "=", "cv2", ".", "imread", "(", "image_file", ")", "\n", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "            ", "im", "=", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "# align with training", "\n", "\n", "", "tic", "=", "cv2", ".", "getTickCount", "(", ")", "\n", "\n", "if", "f", "==", "start_frame", ":", "# init", "\n", "            ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "gt", "[", "f", "]", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "im", ",", "target_pos", ",", "target_sz", ",", "net", ")", "# init tracker", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "regions", ".", "append", "(", "1", "if", "'VOT'", "in", "args", ".", "dataset", "else", "gt", "[", "f", "]", ")", "\n", "", "elif", "f", ">", "start_frame", ":", "# tracking", "\n", "            ", "state", "=", "tracker", ".", "track", "(", "state", ",", "im", ")", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "b_overlap", "=", "poly_iou", "(", "gt", "[", "f", "]", ",", "location", ")", "if", "'VOT'", "in", "args", ".", "dataset", "else", "1", "\n", "if", "b_overlap", ">", "0", ":", "\n", "                ", "regions", ".", "append", "(", "location", ")", "\n", "", "else", ":", "\n", "                ", "regions", ".", "append", "(", "2", ")", "\n", "start_frame", "=", "f", "+", "5", "\n", "", "", "else", ":", "\n", "            ", "regions", ".", "append", "(", "0", ")", "\n", "\n", "", "toc", "+=", "cv2", ".", "getTickCount", "(", ")", "-", "tic", "\n", "\n", "", "with", "open", "(", "result_path", ",", "\"w\"", ")", "as", "fin", ":", "\n", "        ", "if", "'VOT'", "in", "args", ".", "dataset", ":", "\n", "            ", "for", "x", "in", "regions", ":", "\n", "                ", "if", "isinstance", "(", "x", ",", "int", ")", ":", "\n", "                    ", "fin", ".", "write", "(", "\"{:d}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                    ", "p_bbox", "=", "x", ".", "copy", "(", ")", "\n", "fin", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "p_bbox", "]", ")", "+", "'\\n'", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "x", "in", "regions", ":", "\n", "                ", "p_bbox", "=", "x", ".", "copy", "(", ")", "\n", "fin", ".", "write", "(", "\n", "','", ".", "join", "(", "[", "str", "(", "i", "+", "1", ")", "if", "idx", "==", "0", "or", "idx", "==", "1", "else", "str", "(", "i", ")", "for", "idx", ",", "i", "in", "enumerate", "(", "p_bbox", ")", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "", "toc", "/=", "cv2", ".", "getTickFrequency", "(", ")", "\n", "print", "(", "'Video: {:12s} Time: {:2.1f}s Speed: {:3.1f}fps'", ".", "format", "(", "video", "[", "'name'", "]", ",", "toc", ",", "f", "/", "toc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.main": [[119, 142], ["test_siamfc.parse_args", "utils.utils.load_pretrain", "net.cuda.eval", "net.cuda.cuda", "utils.utils.load_dataset", "list().copy", "easydict.EasyDict", "tracker.siamfc.SiamFC", "test_siamfc.track", "list", "utils.utils.load_dataset.keys"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "# prepare model", "\n", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", ")", "\n", "net", "=", "load_pretrain", "(", "net", ",", "args", ".", "resume", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "\n", "# prepare video", "\n", "dataset", "=", "load_dataset", "(", "args", ".", "dataset", ")", "\n", "video_keys", "=", "list", "(", "dataset", ".", "keys", "(", ")", ")", ".", "copy", "(", ")", "\n", "\n", "# prepare tracker", "\n", "info", "=", "edict", "(", ")", "\n", "info", ".", "arch", "=", "args", ".", "arch", "\n", "info", ".", "dataset", "=", "args", ".", "dataset", "\n", "info", ".", "epoch_test", "=", "args", ".", "epoch_test", "\n", "tracker", "=", "SiamFC", "(", "info", ")", "\n", "\n", "# tracking all videos in benchmark", "\n", "for", "video", "in", "video_keys", ":", "\n", "        ", "track", "(", "tracker", ",", "net", ",", "dataset", "[", "video", "]", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.track_tune": [[148, 213], ["os.path.join", "os.path.join", "enumerate", "benchmark_name.startswith", "os.path.exists", "os.makedirs", "os.path.exists", "open", "open.close", "cv2.imread", "benchmark_name.startswith", "len", "cv2.cvtColor", "utils.utils.get_axis_aligned_bbox", "numpy.array", "numpy.array", "tracker.init", "utils.utils.cxy_wh_2_rect", "regions.append", "ValueError", "tracker.track", "utils.utils.cxy_wh_2_rect", "regions.append", "open", "utils.utils.poly_iou", "regions.append", "regions.append", "x.copy", "open.write", "float", "float", "float", "[].split", "str", "str", "enumerate", "resume.split"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.poly_iou"], ["", "", "def", "track_tune", "(", "tracker", ",", "net", ",", "video", ",", "config", ")", ":", "\n", "    ", "arch", "=", "config", "[", "'arch'", "]", "\n", "benchmark_name", "=", "config", "[", "'benchmark'", "]", "\n", "resume", "=", "config", "[", "'resume'", "]", "\n", "hp", "=", "config", "[", "'hp'", "]", "# scale_step, scale_penalty, scale_lr, window_influence", "\n", "\n", "tracker_path", "=", "join", "(", "'test'", ",", "(", "benchmark_name", "+", "resume", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "\n", "'_step_{:.4f}'", ".", "format", "(", "hp", "[", "'scale_step'", "]", ")", "+", "\n", "'_penalty_s_{:.4f}'", ".", "format", "(", "hp", "[", "'scale_penalty'", "]", ")", "+", "\n", "'_w_influence_{:.4f}'", ".", "format", "(", "hp", "[", "'w_influence'", "]", ")", "+", "\n", "'_scale_lr_{:.4f}'", ".", "format", "(", "hp", "[", "'scale_lr'", "]", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ")", "# no .", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "tracker_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "tracker_path", ")", "\n", "\n", "", "result_path", "=", "join", "(", "tracker_path", ",", "'{:s}.txt'", ".", "format", "(", "video", "[", "'name'", "]", ")", ")", "\n", "\n", "# occ for parallel running", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "fin", "=", "open", "(", "result_path", ",", "'w'", ")", "\n", "fin", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "tracker_path", "\n", "\n", "", "start_frame", ",", "lost_times", ",", "toc", "=", "0", ",", "0", ",", "0", "\n", "\n", "regions", "=", "[", "]", "# result and states[1 init / 2 lost / 0 skip]", "\n", "image_files", ",", "gt", "=", "video", "[", "'image_files'", "]", ",", "video", "[", "'gt'", "]", "\n", "for", "f", ",", "image_file", "in", "enumerate", "(", "image_files", ")", ":", "\n", "        ", "im", "=", "cv2", ".", "imread", "(", "image_file", ")", "\n", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "            ", "im", "=", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "if", "f", "==", "start_frame", ":", "# init", "\n", "            ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "gt", "[", "f", "]", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "im", ",", "target_pos", ",", "target_sz", ",", "net", ",", "hp", "=", "hp", ")", "# init tracker", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "regions", ".", "append", "(", "[", "float", "(", "1", ")", "]", "if", "'VOT'", "in", "benchmark_name", "else", "gt", "[", "f", "]", ")", "\n", "", "elif", "f", ">", "start_frame", ":", "# tracking", "\n", "            ", "state", "=", "tracker", ".", "track", "(", "state", ",", "im", ")", "# track", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "b_overlap", "=", "poly_iou", "(", "gt", "[", "f", "]", ",", "location", ")", "if", "'VOT'", "in", "benchmark_name", "else", "1", "\n", "if", "b_overlap", ">", "0", ":", "\n", "                ", "regions", ".", "append", "(", "location", ")", "\n", "", "else", ":", "\n", "                ", "regions", ".", "append", "(", "[", "float", "(", "2", ")", "]", ")", "\n", "lost_times", "+=", "1", "\n", "start_frame", "=", "f", "+", "5", "# skip 5 frames", "\n", "", "", "else", ":", "# skip", "\n", "            ", "regions", ".", "append", "(", "[", "float", "(", "0", ")", "]", ")", "\n", "\n", "", "", "if", "benchmark_name", ".", "startswith", "(", "'VOT'", ")", ":", "\n", "        ", "return", "regions", "\n", "", "elif", "benchmark_name", ".", "startswith", "(", "'OTB'", ")", ":", "\n", "        ", "with", "open", "(", "result_path", ",", "\"w\"", ")", "as", "fin", ":", "\n", "            ", "for", "x", "in", "regions", ":", "\n", "                ", "p_bbox", "=", "x", ".", "copy", "(", ")", "\n", "fin", ".", "write", "(", "\n", "','", ".", "join", "(", "\n", "[", "str", "(", "i", "+", "1", ")", "if", "idx", "==", "0", "or", "idx", "==", "1", "else", "str", "(", "i", ")", "for", "idx", ",", "i", "in", "enumerate", "(", "p_bbox", ")", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "return", "tracker_path", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'not supported'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.auc_otb": [[215, 229], ["utils.utils.load_dataset", "list().copy", "random.shuffle", "core.eval_otb.eval_auc_tune", "test_siamfc.track_tune", "list", "utils.utils.load_dataset.keys"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.eval_otb.eval_auc_tune", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track_tune"], ["", "", "def", "auc_otb", "(", "tracker", ",", "net", ",", "config", ")", ":", "\n", "    ", "\"\"\"\n    get AUC for OTB benchmark\n    \"\"\"", "\n", "dataset", "=", "load_dataset", "(", "config", "[", "'benchmark'", "]", ")", "\n", "video_keys", "=", "list", "(", "dataset", ".", "keys", "(", ")", ")", ".", "copy", "(", ")", "\n", "random", ".", "shuffle", "(", "video_keys", ")", "\n", "\n", "for", "video", "in", "video_keys", ":", "\n", "        ", "result_path", "=", "track_tune", "(", "tracker", ",", "net", ",", "dataset", "[", "video", "]", ",", "config", ")", "\n", "\n", "", "auc", "=", "eval_auc_tune", "(", "result_path", ",", "config", "[", "'benchmark'", "]", ")", "\n", "\n", "return", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamfc.eao_vot": [[231, 245], ["utils.utils.load_dataset", "sorted", "eng.cd", "eng.get_eao", "list().copy", "test_siamfc.track_tune", "results.append", "config[].split", "list", "utils.utils.load_dataset.keys"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track_tune"], ["", "def", "eao_vot", "(", "tracker", ",", "net", ",", "config", ")", ":", "\n", "    ", "dataset", "=", "load_dataset", "(", "config", "[", "'benchmark'", "]", ")", "\n", "video_keys", "=", "sorted", "(", "list", "(", "dataset", ".", "keys", "(", ")", ")", ".", "copy", "(", ")", ")", "\n", "results", "=", "[", "]", "\n", "for", "video", "in", "video_keys", ":", "\n", "        ", "video_result", "=", "track_tune", "(", "tracker", ",", "net", ",", "dataset", "[", "video", "]", ",", "config", ")", "\n", "results", ".", "append", "(", "video_result", ")", "\n", "\n", "", "channel", "=", "config", "[", "'benchmark'", "]", ".", "split", "(", "'VOT'", ")", "[", "-", "1", "]", "\n", "\n", "eng", ".", "cd", "(", "'./lib/core'", ")", "\n", "eao", "=", "eng", ".", "get_eao", "(", "results", ",", "channel", ")", "\n", "\n", "return", "eao", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.parse_args": [[33, 51], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "core.config.update_config", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.config.update_config", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for training.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train SiamRPN'", ")", "\n", "# general", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "type", "=", "str", ",", "default", "=", "'experiments/train/SiamRPN.yaml'", ",", "help", "=", "'yaml configure file name'", ")", "\n", "\n", "args", ",", "rest", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "# update config", "\n", "update_config", "(", "args", ".", "cfg", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpus'", ",", "type", "=", "str", ",", "help", "=", "'gpus'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "help", "=", "'num of dataloader workers'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.reset_config": [[53, 61], ["core.config.config"], "function", ["None"], ["", "def", "reset_config", "(", "config", ",", "args", ")", ":", "\n", "    ", "\"\"\"\n    set gpus and workers\n    \"\"\"", "\n", "if", "args", ".", "gpus", ":", "\n", "        ", "config", ".", "GPUS", "=", "args", ".", "gpus", "\n", "", "if", "args", ".", "workers", ":", "\n", "        ", "config", ".", "WORKERS", "=", "args", ".", "workers", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.check_trainable": [[63, 76], ["logger.info", "model.named_parameters", "len", "model.parameters", "logger.info"], "function", ["None"], ["", "", "def", "check_trainable", "(", "model", ",", "logger", ")", ":", "\n", "    ", "\"\"\"\n    print trainable params info\n    \"\"\"", "\n", "trainable_params", "=", "[", "p", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", "\n", "logger", ".", "info", "(", "'trainable params:'", ")", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "requires_grad", ":", "\n", "            ", "logger", ".", "info", "(", "name", ")", "\n", "\n", "", "", "assert", "len", "(", "trainable_params", ")", ">", "0", ",", "'no trainable parameters'", "\n", "\n", "return", "trainable_params", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.get_optimizer": [[78, 88], ["torch.optim.SGD", "core.config.config"], "function", ["None"], ["", "def", "get_optimizer", "(", "cfg", ",", "trainable_params", ")", ":", "\n", "    ", "\"\"\"\n    get optimizer\n    \"\"\"", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "trainable_params", ",", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR", ",", "\n", "momentum", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "WEIGHT_DECAY", ")", "\n", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.pretrain_zoo": [[90, 94], ["dict"], "function", ["None"], ["", "def", "pretrain_zoo", "(", ")", ":", "\n", "    ", "GDriveIDs", "=", "dict", "(", ")", "\n", "GDriveIDs", "[", "'SiamRPNRes22'", "]", "=", "\"1kgYJdydU7Wm6oj9-tGA5EFc6Io2V7rPT\"", "\n", "return", "GDriveIDs", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.lr_decay": [[96, 109], ["torch.optim.lr_scheduler.ExponentialLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.ReduceLROnPlateau", "numpy.logspace", "ValueError", "math.log10", "math.log10", "core.config.config"], "function", ["None"], ["", "def", "lr_decay", "(", "cfg", ",", "optimizer", ")", ":", "\n", "    ", "if", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_POLICY", "==", "'exp'", ":", "\n", "        ", "scheduler", "=", "ExponentialLR", "(", "optimizer", ",", "gamma", "=", "0.8685", ")", "\n", "", "elif", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_POLICY", "==", "'cos'", ":", "\n", "        ", "scheduler", "=", "CosineAnnealingLR", "(", "optimizer", ",", "T_max", "=", "args", ".", "epochs", ")", "\n", "", "elif", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_POLICY", "==", "'Reduce'", ":", "\n", "        ", "scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "patience", "=", "5", ")", "\n", "", "elif", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_POLICY", "==", "'log'", ":", "\n", "        ", "scheduler", "=", "np", ".", "logspace", "(", "math", ".", "log10", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR", ")", ",", "math", ".", "log10", "(", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_END", ")", ",", "cfg", ".", "SIAMRPN", ".", "TRAIN", ".", "END_EPOCH", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'unsupported learing rate scheduler'", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.get_lr": [[111, 117], ["None"], "function", ["None"], ["", "def", "get_lr", "(", "optimizer", ")", ":", "\n", "    ", "\"\"\"\n    get current learning rate\n    \"\"\"", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "return", "param_group", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.main": [[119, 194], ["train_siamrpn.parse_args", "train_siamrpn.reset_config", "utils.utils.create_logger", "logger.info", "logger.info", "print", "utils.utils.load_pretrain", "train_siamrpn.check_trainable", "train_siamrpn.get_optimizer", "train_siamrpn.lr_decay", "len", "logger.info", "torch.nn.DataParallel().cuda", "logger.info", "range", "writer_dict[].close", "pprint.pformat", "pprint.pformat", "tensorboardX.SummaryWriter", "os.path.exists", "os.makedirs", "train_siamrpn.pretrain_zoo", "len", "len", "torch.nn.DataParallel().cuda.features.unfix", "utils.utils.restore_from", "int", "dataset.siamrpn.SiamRPNDataset", "torch.utils.data.DataLoader", "core.function.siamrpn_train", "utils.utils.save_model", "os.path.exists", "os.system", "print", "core.config.config.GPUS.split", "len", "torch.nn.DataParallel", "lr_decay.step", "train_siamrpn.get_lr"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.reset_config", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.create_logger", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.check_trainable", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.get_optimizer", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.lr_decay", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.pretrain_zoo", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unfix", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.restore_from", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.siamrpn_train", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.save_model", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamrpn.get_lr"], ["", "", "def", "main", "(", ")", ":", "\n", "# [*] args, loggers and tensorboard", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "reset_config", "(", "config", ",", "args", ")", "\n", "\n", "logger", ",", "_", ",", "tb_log_dir", "=", "create_logger", "(", "config", ",", "'SIAMRPN'", ",", "'train'", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "config", ")", ")", "\n", "\n", "writer_dict", "=", "{", "\n", "'writer'", ":", "SummaryWriter", "(", "log_dir", "=", "tb_log_dir", ")", ",", "\n", "'train_global_steps'", ":", "0", ",", "\n", "}", "\n", "\n", "# [*] gpus parallel and model prepare", "\n", "# prepare pretrained model -- download from google drive", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./pretrain'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'./pretrain'", ")", "\n", "\n", "# auto-download train model from GoogleDrive", "\n", "", "try", ":", "\n", "        ", "DRIVEID", "=", "pretrain_zoo", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./pretrain/{}'", ".", "format", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "PRETRAIN", ")", ")", ":", "\n", "            ", "os", ".", "system", "(", "\n", "'wget --no-check-certificate \\'https://drive.google.com/uc?export=download&id={0}\\' -O ./pretrain/{1}'", "\n", ".", "format", "(", "DRIVEID", "[", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "MODEL", "]", ",", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "PRETRAIN", ")", ")", "\n", "", "", "except", ":", "\n", "        ", "print", "(", "'auto-download pretrained model fail, please download it and put it in pretrain directory'", ")", "\n", "\n", "\n", "# define model", "\n", "", "anchor_nums", "=", "len", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_RATIOS", ")", "*", "len", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "ANCHORS_SCALES", ")", "\n", "model", "=", "models", ".", "__dict__", "[", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "MODEL", "]", "(", "anchors_nums", "=", "anchor_nums", ",", "cls_type", "=", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "CLS_TYPE", ")", "# build model", "\n", "print", "(", "model", ")", "\n", "model", "=", "load_pretrain", "(", "model", ",", "'./pretrain/{0}'", ".", "format", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "PRETRAIN", ")", ")", "# load pretrain", "\n", "trainable_params", "=", "check_trainable", "(", "model", ",", "logger", ")", "# print trainable params info", "\n", "optimizer", "=", "get_optimizer", "(", "config", ",", "trainable_params", ")", "# optimizer", "\n", "lr_scheduler", "=", "lr_decay", "(", "config", ",", "optimizer", ")", "# learning rate decay scheduler", "\n", "\n", "if", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "RESUME", "and", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "START_EPOCH", "!=", "0", ":", "# resume", "\n", "        ", "model", ".", "features", ".", "unfix", "(", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "START_EPOCH", "-", "1", ")", "/", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "END_EPOCH", ")", "\n", "model", ",", "optimizer", ",", "args", ".", "start_epoch", ",", "arch", "=", "restore_from", "(", "model", ",", "optimizer", ",", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "RESUME", ")", "\n", "\n", "# parallel", "\n", "", "gpus", "=", "[", "int", "(", "i", ")", "for", "i", "in", "config", ".", "GPUS", ".", "split", "(", "','", ")", "]", "\n", "gpu_num", "=", "len", "(", "gpus", ")", "\n", "logger", ".", "info", "(", "'GPU NUM: {:2d}'", ".", "format", "(", "len", "(", "gpus", ")", ")", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "cuda", "(", ")", "\n", "logger", ".", "info", "(", "'model prepare done'", ")", "\n", "\n", "# [*] train", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "START_EPOCH", ",", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "END_EPOCH", ")", ":", "\n", "# build dataloader, benefit to tracking", "\n", "        ", "train_set", "=", "SiamRPNDataset", "(", "config", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "BATCH", "*", "gpu_num", ",", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "if", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "LR_POLICY", "==", "'log'", ":", "\n", "            ", "curLR", "=", "lr_scheduler", "[", "epoch", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "curLR", "\n", "", "", "else", ":", "\n", "            ", "lr_scheduler", ".", "step", "(", ")", "\n", "curLR", "=", "get_lr", "(", "optimizer", ")", "\n", "\n", "", "model", ",", "writer_dict", "=", "siamrpn_train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", "+", "1", ",", "curLR", ",", "config", ",", "writer_dict", ",", "\n", "logger", ",", "cls_type", "=", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "CLS_TYPE", ")", "\n", "\n", "# save model", "\n", "save_model", "(", "model", ",", "epoch", ",", "optimizer", ",", "config", ".", "SIAMRPN", ".", "TRAIN", ".", "MODEL", ",", "config", ",", "isbest", "=", "False", ")", "\n", "\n", "\n", "", "writer_dict", "[", "'writer'", "]", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.parse_args": [[31, 49], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "core.config.update_config", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.core.config.update_config", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for training.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train SiamFC'", ")", "\n", "# general", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "default", "=", "'experiments/train/SiamFC.yaml'", ",", "help", "=", "'yaml configure file name'", ")", "\n", "\n", "args", ",", "rest", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "# update config", "\n", "update_config", "(", "args", ".", "cfg", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--gpus'", ",", "type", "=", "str", ",", "help", "=", "'gpus'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "help", "=", "'num of dataloader workers'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.reset_config": [[51, 59], ["core.config.config"], "function", ["None"], ["", "def", "reset_config", "(", "config", ",", "args", ")", ":", "\n", "    ", "\"\"\"\n    set gpus and workers\n    \"\"\"", "\n", "if", "args", ".", "gpus", ":", "\n", "        ", "config", ".", "GPUS", "=", "args", ".", "gpus", "\n", "", "if", "args", ".", "workers", ":", "\n", "        ", "config", ".", "WORKERS", "=", "args", ".", "workers", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.check_trainable": [[61, 74], ["logger.info", "model.named_parameters", "len", "model.parameters", "logger.info"], "function", ["None"], ["", "", "def", "check_trainable", "(", "model", ",", "logger", ")", ":", "\n", "    ", "\"\"\"\n    print trainable params info\n    \"\"\"", "\n", "trainable_params", "=", "[", "p", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", "\n", "logger", ".", "info", "(", "'trainable params:'", ")", "\n", "for", "name", ",", "param", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "param", ".", "requires_grad", ":", "\n", "            ", "logger", ".", "info", "(", "name", ")", "\n", "\n", "", "", "assert", "len", "(", "trainable_params", ")", ">", "0", ",", "'no trainable parameters'", "\n", "\n", "return", "trainable_params", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.get_optimizer": [[76, 86], ["torch.optim.SGD", "core.config.config"], "function", ["None"], ["", "def", "get_optimizer", "(", "cfg", ",", "trainable_params", ")", ":", "\n", "    ", "\"\"\"\n    get optimizer\n    \"\"\"", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "trainable_params", ",", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR", ",", "\n", "momentum", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "WEIGHT_DECAY", ")", "\n", "\n", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.lr_decay": [[88, 101], ["torch.optim.lr_scheduler.ExponentialLR", "torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.ReduceLROnPlateau", "numpy.logspace", "ValueError", "math.log10", "math.log10", "core.config.config"], "function", ["None"], ["", "def", "lr_decay", "(", "cfg", ",", "optimizer", ")", ":", "\n", "    ", "if", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR_POLICY", "==", "'exp'", ":", "\n", "        ", "scheduler", "=", "ExponentialLR", "(", "optimizer", ",", "gamma", "=", "0.8685", ")", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR_POLICY", "==", "'cos'", ":", "\n", "        ", "scheduler", "=", "CosineAnnealingLR", "(", "optimizer", ",", "T_max", "=", "args", ".", "epochs", ")", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR_POLICY", "==", "'Reduce'", ":", "\n", "        ", "scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "patience", "=", "5", ")", "\n", "", "elif", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR_POLICY", "==", "'log'", ":", "\n", "        ", "scheduler", "=", "np", ".", "logspace", "(", "math", ".", "log10", "(", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR", ")", ",", "math", ".", "log10", "(", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "LR_END", ")", ",", "cfg", ".", "SIAMFC", ".", "TRAIN", ".", "END_EPOCH", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'unsupported learing rate scheduler'", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.pretrain_zoo": [[103, 109], ["dict"], "function", ["None"], ["", "def", "pretrain_zoo", "(", ")", ":", "\n", "    ", "GDriveIDs", "=", "dict", "(", ")", "\n", "GDriveIDs", "[", "'SiamFCRes22'", "]", "=", "\"1kgYJdydU7Wm6oj9-tGA5EFc6Io2V7rPT\"", "\n", "GDriveIDs", "[", "'SiamFCIncep22'", "]", "=", "\"1FxbQOSsG51Wau6-MUzsteoald3Y14xJ4\"", "\n", "GDriveIDs", "[", "'SiamFCNext22'", "]", "=", "\"1sURid92u4hEHR4Ev0wrQPAw8GZtLmB5n\"", "\n", "return", "GDriveIDs", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.main": [[111, 179], ["train_siamfc.parse_args", "train_siamfc.reset_config", "utils.utils.create_logger", "logger.info", "logger.info", "utils.utils.load_pretrain", "train_siamfc.check_trainable", "train_siamfc.get_optimizer", "train_siamfc.lr_decay", "len", "logger.info", "torch.nn.DataParallel().cuda", "logger.info", "range", "writer_dict[].close", "pprint.pformat", "pprint.pformat", "tensorboardX.SummaryWriter", "os.path.exists", "os.makedirs", "train_siamfc.pretrain_zoo", "torch.nn.DataParallel().cuda.features.unfix", "utils.utils.restore_from", "int", "dataset.siamfc.SiamFCDataset", "torch.utils.data.DataLoader", "core.function.siamfc_train", "utils.utils.save_model", "os.path.exists", "os.system", "print", "core.config.config.GPUS.split", "len", "torch.nn.DataParallel", "lr_decay.step"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.reset_config", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.create_logger", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.check_trainable", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.get_optimizer", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.lr_decay", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.train_siamfc.pretrain_zoo", "home.repos.pwc.inspect_result.researchmm_SiamDW.models.backbones.ResNet22.unfix", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.restore_from", "home.repos.pwc.inspect_result.researchmm_SiamDW.core.function.siamfc_train", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.save_model"], ["", "def", "main", "(", ")", ":", "\n", "# [*] args, loggers and tensorboard", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "reset_config", "(", "config", ",", "args", ")", "\n", "\n", "logger", ",", "_", ",", "tb_log_dir", "=", "create_logger", "(", "config", ",", "'SIAMFC'", ",", "'train'", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "config", ")", ")", "\n", "\n", "writer_dict", "=", "{", "\n", "'writer'", ":", "SummaryWriter", "(", "log_dir", "=", "tb_log_dir", ")", ",", "\n", "'train_global_steps'", ":", "0", ",", "\n", "}", "\n", "\n", "# auto-download train model from GoogleDrive", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./pretrain'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'./pretrain'", ")", "\n", "", "try", ":", "\n", "        ", "DRIVEID", "=", "pretrain_zoo", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./pretrain/{}'", ".", "format", "(", "config", ".", "SIAMFC", ".", "TRAIN", ".", "PRETRAIN", ")", ")", ":", "\n", "            ", "os", ".", "system", "(", "\n", "'wget --no-check-certificate \\'https://drive.google.com/uc?export=download&id={0}\\' -O ./pretrain/{1}'", "\n", ".", "format", "(", "DRIVEID", "[", "config", ".", "SIAMFC", ".", "TRAIN", ".", "MODEL", "]", ",", "config", ".", "SIAMFC", ".", "TRAIN", ".", "PRETRAIN", ")", ")", "\n", "", "", "except", ":", "\n", "        ", "print", "(", "'auto-download pretrained model fail, please download it and put it in pretrain directory'", ")", "\n", "\n", "\n", "# [*] gpus parallel and model prepare", "\n", "# prepare", "\n", "", "model", "=", "models", ".", "__dict__", "[", "config", ".", "SIAMFC", ".", "TRAIN", ".", "MODEL", "]", "(", ")", "# build model", "\n", "model", "=", "load_pretrain", "(", "model", ",", "'./pretrain/{}'", ".", "format", "(", "config", ".", "SIAMFC", ".", "TRAIN", ".", "PRETRAIN", ")", ")", "# load pretrain", "\n", "trainable_params", "=", "check_trainable", "(", "model", ",", "logger", ")", "# print trainable params info", "\n", "optimizer", "=", "get_optimizer", "(", "config", ",", "trainable_params", ")", "# optimizer", "\n", "lr_scheduler", "=", "lr_decay", "(", "config", ",", "optimizer", ")", "# learning rate decay scheduler", "\n", "\n", "if", "config", ".", "SIAMFC", ".", "TRAIN", ".", "RESUME", "and", "config", ".", "SIAMFC", ".", "TRAIN", ".", "START_EPOCH", "!=", "0", ":", "# resume", "\n", "        ", "model", ".", "features", ".", "unfix", "(", "(", "config", ".", "SIAMFC", ".", "TRAIN", ".", "START_EPOCH", "-", "1", ")", "/", "config", ".", "SIAMFC", ".", "TRAIN", ".", "END_EPOCH", ")", "\n", "model", ",", "optimizer", ",", "args", ".", "start_epoch", ",", "arch", "=", "restore_from", "(", "model", ",", "optimizer", ",", "config", ".", "SIAMFC", ".", "TRAIN", ".", "RESUME", ")", "\n", "\n", "# parallel", "\n", "", "gpus", "=", "[", "int", "(", "i", ")", "for", "i", "in", "config", ".", "GPUS", ".", "split", "(", "','", ")", "]", "\n", "gpu_num", "=", "len", "(", "gpus", ")", "\n", "logger", ".", "info", "(", "'GPU NUM: {:2d}'", ".", "format", "(", "len", "(", "gpus", ")", ")", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "gpus", ")", ".", "cuda", "(", ")", "\n", "logger", ".", "info", "(", "'model prepare done'", ")", "\n", "\n", "# [*] train", "\n", "\n", "for", "epoch", "in", "range", "(", "config", ".", "SIAMFC", ".", "TRAIN", ".", "START_EPOCH", ",", "config", ".", "SIAMFC", ".", "TRAIN", ".", "END_EPOCH", ")", ":", "\n", "# build dataloader, benefit to tracking", "\n", "        ", "train_set", "=", "SiamFCDataset", "(", "config", ")", "\n", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "config", ".", "SIAMFC", ".", "TRAIN", ".", "BATCH", "*", "gpu_num", ",", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "if", "config", ".", "SIAMFC", ".", "TRAIN", ".", "LR_POLICY", "==", "'log'", ":", "\n", "            ", "curLR", "=", "lr_scheduler", "[", "epoch", "]", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "curLR", "\n", "", "", "else", ":", "\n", "            ", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "model", ",", "writer_dict", "=", "siamfc_train", "(", "train_loader", ",", "model", ",", "optimizer", ",", "epoch", "+", "1", ",", "curLR", ",", "config", ",", "writer_dict", ",", "logger", ")", "\n", "\n", "# save model", "\n", "save_model", "(", "model", ",", "epoch", ",", "optimizer", ",", "config", ".", "SIAMFC", ".", "TRAIN", ".", "MODEL", ",", "config", ",", "isbest", "=", "False", ")", "\n", "\n", "", "writer_dict", "[", "'writer'", "]", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args": [[26, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"\n    args for rpn testing.\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'PyTorch SiamRPN Tracking Test'", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "dest", "=", "'arch'", ",", "default", "=", "'SiamRPNIncep22'", ",", "help", "=", "'backbone architecture'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "help", "=", "'pretrained model'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'VOT2017'", ",", "help", "=", "'dataset test'", ")", "\n", "parser", ".", "add_argument", "(", "'--anchor_nums'", ",", "default", "=", "5", ",", "type", "=", "int", ",", "help", "=", "'anchor numbers'", ")", "\n", "parser", ".", "add_argument", "(", "'--cls_type'", ",", "default", "=", "\"thicker\"", ",", "type", "=", "str", ",", "help", "=", "'cls/loss type, thicker or thinner or else you defined'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_test'", ",", "default", "=", "False", ",", "type", "=", "bool", ",", "help", "=", "'multi-gpu epoch test flag'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track": [[42, 114], ["os.path.exists", "enumerate", "cv2.getTickFrequency", "print", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "cv2.imread", "cv2.getTickCount", "open", "args.resume.split", "suffix.split", "os.path.exists", "os.makedirs", "len", "cv2.cvtColor", "utils.utils.get_axis_aligned_bbox", "numpy.array", "numpy.array", "tracker.init", "regions.append", "cv2.getTickCount", "tracker.track", "utils.utils.cxy_wh_2_rect", "regions.append", "isinstance", "x.copy", "fin.write", "utils.utils.poly_iou", "regions.append", "regions.append", "fin.write", "x.copy", "fin.write", "str", "str", "str", "enumerate"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.poly_iou"], ["", "def", "track", "(", "tracker", ",", "net", ",", "video", ",", "args", ")", ":", "\n", "    ", "start_frame", ",", "lost_times", ",", "toc", "=", "0", ",", "0", ",", "0", "\n", "\n", "# save result to evaluate", "\n", "if", "args", ".", "epoch_test", ":", "\n", "        ", "suffix", "=", "args", ".", "resume", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "suffix", "=", "suffix", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "tracker_path", "=", "os", ".", "path", ".", "join", "(", "'result'", ",", "args", ".", "dataset", ",", "args", ".", "arch", "+", "suffix", ")", "\n", "", "else", ":", "\n", "        ", "tracker_path", "=", "os", ".", "path", ".", "join", "(", "'result'", ",", "args", ".", "dataset", ",", "args", ".", "arch", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "tracker_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "tracker_path", ")", "\n", "\n", "", "if", "'VOT'", "in", "args", ".", "dataset", ":", "\n", "        ", "baseline_path", "=", "join", "(", "tracker_path", ",", "'baseline'", ")", "\n", "video_path", "=", "join", "(", "baseline_path", ",", "video", "[", "'name'", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "video_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "join", "(", "video_path", ",", "video", "[", "'name'", "]", "+", "'_001.txt'", ")", "\n", "", "else", ":", "\n", "        ", "result_path", "=", "join", "(", "tracker_path", ",", "'{:s}.txt'", ".", "format", "(", "video", "[", "'name'", "]", ")", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "return", "0", "# for mult-gputesting", "\n", "\n", "", "regions", "=", "[", "]", "# result and states[1 init / 2 lost / 0 skip]", "\n", "image_files", ",", "gt", "=", "video", "[", "'image_files'", "]", ",", "video", "[", "'gt'", "]", "\n", "for", "f", ",", "image_file", "in", "enumerate", "(", "image_files", ")", ":", "\n", "        ", "im", "=", "cv2", ".", "imread", "(", "image_file", ")", "\n", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "            ", "im", "=", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "\n", "", "tic", "=", "cv2", ".", "getTickCount", "(", ")", "\n", "\n", "if", "f", "==", "start_frame", ":", "# init", "\n", "            ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "gt", "[", "f", "]", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "im", ",", "target_pos", ",", "target_sz", ",", "net", ")", "# init tracker", "\n", "regions", ".", "append", "(", "1", "if", "'VOT'", "in", "args", ".", "dataset", "else", "gt", "[", "f", "]", ")", "\n", "", "elif", "f", ">", "start_frame", ":", "# tracking", "\n", "            ", "state", "=", "tracker", ".", "track", "(", "state", ",", "im", ")", "# track", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "b_overlap", "=", "poly_iou", "(", "gt", "[", "f", "]", ",", "location", ")", "if", "'VOT'", "in", "args", ".", "dataset", "else", "1", "\n", "if", "b_overlap", ">", "0", ":", "\n", "                ", "regions", ".", "append", "(", "location", ")", "\n", "", "else", ":", "\n", "                ", "regions", ".", "append", "(", "2", ")", "\n", "lost_times", "+=", "1", "\n", "start_frame", "=", "f", "+", "5", "# skip 5 frames", "\n", "", "", "else", ":", "# skip", "\n", "            ", "regions", ".", "append", "(", "0", ")", "\n", "", "toc", "+=", "cv2", ".", "getTickCount", "(", ")", "-", "tic", "\n", "", "toc", "/=", "cv2", ".", "getTickFrequency", "(", ")", "\n", "\n", "with", "open", "(", "result_path", ",", "\"w\"", ")", "as", "fin", ":", "\n", "        ", "if", "'VOT'", "in", "args", ".", "dataset", ":", "\n", "            ", "for", "x", "in", "regions", ":", "\n", "                ", "if", "isinstance", "(", "x", ",", "int", ")", ":", "\n", "                    ", "fin", ".", "write", "(", "\"{:d}\\n\"", ".", "format", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "                    ", "p_bbox", "=", "x", ".", "copy", "(", ")", "\n", "fin", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", ")", "for", "i", "in", "p_bbox", "]", ")", "+", "'\\n'", ")", "\n", "", "", "", "else", ":", "\n", "            ", "for", "x", "in", "regions", ":", "\n", "                ", "p_bbox", "=", "x", ".", "copy", "(", ")", "\n", "fin", ".", "write", "(", "','", ".", "join", "(", "[", "str", "(", "i", "+", "1", ")", "if", "idx", "==", "0", "or", "idx", "==", "1", "else", "str", "(", "i", ")", "for", "idx", ",", "i", "in", "enumerate", "(", "p_bbox", ")", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "", "print", "(", "'Video: {:12s} Time: {:2.1f}s Speed: {:3.1f}fps Lost: {:d}'", ".", "format", "(", "video", "[", "'name'", "]", ",", "toc", ",", "f", "/", "toc", ",", "lost_times", ")", ")", "\n", "\n", "return", "lost_times", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.main": [[116, 141], ["test_siamrpn.parse_args", "utils.utils.load_pretrain", "net.cuda.eval", "net.cuda.cuda", "utils.utils.load_dataset", "list().copy", "easydict.EasyDict", "tracker.siamrpn.SiamRPN", "print", "test_siamrpn.track", "list", "utils.utils.load_dataset.keys"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.parse_args", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_pretrain", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "total_lost", "=", "0", "\n", "\n", "# prepare model", "\n", "net", "=", "models", ".", "__dict__", "[", "args", ".", "arch", "]", "(", "anchors_nums", "=", "args", ".", "anchor_nums", ",", "cls_type", "=", "args", ".", "cls_type", ")", "\n", "net", "=", "load_pretrain", "(", "net", ",", "args", ".", "resume", ")", "\n", "net", ".", "eval", "(", ")", "\n", "net", "=", "net", ".", "cuda", "(", ")", "\n", "\n", "# prepare video", "\n", "dataset", "=", "load_dataset", "(", "args", ".", "dataset", ")", "\n", "video_keys", "=", "list", "(", "dataset", ".", "keys", "(", ")", ")", ".", "copy", "(", ")", "\n", "\n", "# prepare tracker", "\n", "info", "=", "edict", "(", ")", "\n", "info", ".", "arch", "=", "args", ".", "arch", "\n", "info", ".", "cls_type", "=", "args", ".", "cls_type", "\n", "info", ".", "dataset", "=", "args", ".", "dataset", "\n", "info", ".", "epoch_test", "=", "args", ".", "epoch_test", "\n", "tracker", "=", "SiamRPN", "(", "info", ")", "\n", "\n", "for", "video", "in", "video_keys", ":", "\n", "        ", "total_lost", "+=", "track", "(", "tracker", ",", "net", ",", "dataset", "[", "video", "]", ",", "args", ")", "\n", "", "print", "(", "'Total Lost: {:d}'", ".", "format", "(", "total_lost", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track_tune": [[148, 215], ["os.path.join", "enumerate", "benchmark_name.startswith", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "ValueError", "os.path.exists", "open", "open.close", "benchmark_name.startswith", "cv2.imread", "ValueError", "os.path.exists", "os.makedirs", "ValueError", "len", "cv2.cvtColor", "utils.utils.get_axis_aligned_bbox", "numpy.array", "numpy.array", "tracker.init", "regions.append", "tracker.track", "utils.utils.cxy_wh_2_rect", "regions.append", "utils.utils.poly_iou", "regions.append", "regions.append", "float", "float", "float", "[].split", "resume.split"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.get_axis_aligned_bbox", "home.repos.pwc.inspect_result.researchmm_SiamDW.tracker.siamfc.SiamFC.init", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.cxy_wh_2_rect", "home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.poly_iou"], ["", "def", "track_tune", "(", "tracker", ",", "net", ",", "video", ",", "config", ")", ":", "\n", "    ", "arch", "=", "config", "[", "'arch'", "]", "\n", "benchmark_name", "=", "config", "[", "'benchmark'", "]", "\n", "resume", "=", "config", "[", "'resume'", "]", "\n", "hp", "=", "config", "[", "'hp'", "]", "# penalty_k, scale_lr, window_influence, adaptive size (for vot2017 or later)", "\n", "\n", "tracker_path", "=", "join", "(", "'test'", ",", "(", "benchmark_name", "+", "resume", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "\n", "'_small_size_{:.4f}'", ".", "format", "(", "hp", "[", "'small_sz'", "]", ")", "+", "\n", "'_big_size_{:.4f}'", ".", "format", "(", "hp", "[", "'big_sz'", "]", ")", "+", "\n", "'_penalty_k_{:.4f}'", ".", "format", "(", "hp", "[", "'penalty_k'", "]", ")", "+", "\n", "'_w_influence_{:.4f}'", ".", "format", "(", "hp", "[", "'window_influence'", "]", ")", "+", "\n", "'_scale_lr_{:.4f}'", ".", "format", "(", "hp", "[", "'lr'", "]", ")", ")", ".", "replace", "(", "'.'", ",", "'_'", ")", ")", "# no .", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "tracker_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "tracker_path", ")", "\n", "\n", "", "if", "'VOT'", "in", "benchmark_name", ":", "\n", "        ", "baseline_path", "=", "join", "(", "tracker_path", ",", "'baseline'", ")", "\n", "video_path", "=", "join", "(", "baseline_path", ",", "video", "[", "'name'", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "video_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "video_path", ")", "\n", "", "result_path", "=", "join", "(", "video_path", ",", "video", "[", "'name'", "]", "+", "'_001.txt'", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Only VOT is supported'", ")", "\n", "\n", "# occ for parallel running", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "result_path", ")", ":", "\n", "        ", "fin", "=", "open", "(", "result_path", ",", "'w'", ")", "\n", "fin", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "if", "benchmark_name", ".", "startswith", "(", "'VOT'", ")", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Only VOT is supported'", ")", "\n", "\n", "\n", "", "", "start_frame", ",", "lost_times", ",", "toc", "=", "0", ",", "0", ",", "0", "\n", "regions", "=", "[", "]", "# result and states[1 init / 2 lost / 0 skip]", "\n", "image_files", ",", "gt", "=", "video", "[", "'image_files'", "]", ",", "video", "[", "'gt'", "]", "\n", "for", "f", ",", "image_file", "in", "enumerate", "(", "image_files", ")", ":", "\n", "        ", "im", "=", "cv2", ".", "imread", "(", "image_file", ")", "\n", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "            ", "im", "=", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "", "if", "f", "==", "start_frame", ":", "# init", "\n", "            ", "cx", ",", "cy", ",", "w", ",", "h", "=", "get_axis_aligned_bbox", "(", "gt", "[", "f", "]", ")", "\n", "target_pos", "=", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", "\n", "target_sz", "=", "np", ".", "array", "(", "[", "w", ",", "h", "]", ")", "\n", "state", "=", "tracker", ".", "init", "(", "im", ",", "target_pos", ",", "target_sz", ",", "net", ",", "hp", "=", "hp", ")", "# init tracker", "\n", "regions", ".", "append", "(", "[", "float", "(", "1", ")", "]", "if", "'VOT'", "in", "benchmark_name", "else", "gt", "[", "f", "]", ")", "\n", "", "elif", "f", ">", "start_frame", ":", "# tracking", "\n", "            ", "state", "=", "tracker", ".", "track", "(", "state", ",", "im", ")", "# track", "\n", "location", "=", "cxy_wh_2_rect", "(", "state", "[", "'target_pos'", "]", ",", "state", "[", "'target_sz'", "]", ")", "\n", "b_overlap", "=", "poly_iou", "(", "gt", "[", "f", "]", ",", "location", ")", "if", "'VOT'", "in", "benchmark_name", "else", "1", "\n", "if", "b_overlap", ">", "0", ":", "\n", "                ", "regions", ".", "append", "(", "location", ")", "\n", "", "else", ":", "\n", "                ", "regions", ".", "append", "(", "[", "float", "(", "2", ")", "]", ")", "\n", "lost_times", "+=", "1", "\n", "start_frame", "=", "f", "+", "5", "# skip 5 frames", "\n", "", "", "else", ":", "# skip", "\n", "            ", "regions", ".", "append", "(", "[", "float", "(", "0", ")", "]", ")", "\n", "\n", "# save results for OTB", "\n", "", "", "if", "benchmark_name", ".", "startswith", "(", "'VOT'", ")", ":", "\n", "        ", "return", "regions", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Only VOT is supported'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.eao_vot_rpn": [[218, 231], ["utils.utils.load_dataset", "sorted", "eng.cd", "eng.get_eao", "list().copy", "test_siamrpn.track_tune", "results.append", "list", "utils.utils.load_dataset.keys"], "function", ["home.repos.pwc.inspect_result.researchmm_SiamDW.utils.utils.load_dataset", "home.repos.pwc.inspect_result.researchmm_SiamDW.siamese_tracking.test_siamrpn.track_tune"], ["", "", "def", "eao_vot_rpn", "(", "tracker", ",", "net", ",", "config", ")", ":", "\n", "    ", "dataset", "=", "load_dataset", "(", "config", "[", "'benchmark'", "]", ")", "\n", "video_keys", "=", "sorted", "(", "list", "(", "dataset", ".", "keys", "(", ")", ")", ".", "copy", "(", ")", ")", "\n", "results", "=", "[", "]", "\n", "for", "video", "in", "video_keys", ":", "\n", "        ", "video_result", "=", "track_tune", "(", "tracker", ",", "net", ",", "dataset", "[", "video", "]", ",", "config", ")", "\n", "results", ".", "append", "(", "video_result", ")", "\n", "\n", "", "year", "=", "config", "[", "'benchmark'", "]", "[", "-", "4", ":", "]", "# need a str, instead of a int", "\n", "eng", ".", "cd", "(", "'./lib/core'", ")", "\n", "eao", "=", "eng", ".", "get_eao", "(", "results", ",", "year", ")", "\n", "\n", "return", "eao", "\n", "\n"]]}