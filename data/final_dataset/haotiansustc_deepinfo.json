{"home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_capability_y.step_capability_y": [[24, 240], ["os.path.join", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.MSELoss().cuda", "torch.nn.MSELoss().cuda", "torch.nn.ReLU", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "make_dir", "make_dir", "get_net", "args.task_name.startswith", "get_net.load_state_dict", "get_net.eval", "torch.nn.Upsample", "get_num_layer", "range", "enumerate", "str", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "torch.ones().cuda", "torch.ones().cuda", "get_feature", "get_feature.size", "get_feature.size", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder", "os.path.join", "os.path.join", "os.path.join", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.load_state_dict", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.eval", "all_decoder.append", "torch.nn.MSELoss", "torch.nn.MSELoss", "str", "os.path.join", "os.path.join", "math.log", "str", "torch.load", "torch.load", "image.cuda.cuda", "print", "range", "str", "str", "torch.ones", "torch.ones", "mean.expand().cuda", "std.cuda", "get_layer_name", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "model.noise_layer.get_model_noise_layer.get_model_noise_layer", "torch.optim.SGD", "torch.optim.SGD", "AverageMeter", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.train", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.detach", "range", "str", "str", "torch.zeros().size", "torch.zeros().size", "visual_image.data.cpu", "numpy.array", "np.uint8.transpose", "numpy.uint8", "Image.fromarray", "Image.fromarray.save", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "AverageMeter.reset", "np.array.data.cpu", "numpy.array", "os.path.join", "numpy.save", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.", "numpy.array", "os.path.join", "numpy.save", "torch.mean", "torch.mean", "torch.optim.SGD.zero_grad", "loss.backward", "torch.optim.SGD.step", "AverageMeter.update", "train_feature_loss_list.append", "str", "str", "mean.expand", "str", "str", "str", "std.cuda", "mean.expand().cuda", "os.path.join", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "torch.nn.MSELoss().cuda.", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "decoder_image.detach", "torch.mean.data.cpu", "torch.mean.data.cpu", "torch.log", "torch.log", "nn.Upsample.", "[].data.cpu", "os.path.join", "plot_feature", "torch.log", "torch.log", "print", "criterion.data.cpu", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "image.cuda.size", "int", "torch.zeros", "torch.zeros", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.parameters", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.state_dict", "mean.expand", "get_channel_vector", "get_channel_vector", "str", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "str", "float", "image.cuda.size", "str", "get_channel_vector", "get_channel_vector", "str", "str", "str", "str", "float", "str", "math.log", "float", "str", "str"], "function", ["None"], ["def", "step_capability_y", "(", "root_path", ",", "args", ")", ":", "\n", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "make_dir", "(", "plot_path", ")", "\n", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "plot_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "train_set", "=", "get_datasets", "(", "args", ",", "args", ".", "datasets_name", ",", "data_path", "=", "data_datasets_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "1", ")", "\n", "# Just for CUB_ratio dataset. set dataset_mode to 1, and we get postive samples.", "\n", "if", "args", ".", "capability_if_shuffle", "==", "1", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "shuffle", ")", "\n", "# train one image and get one sigma.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "plot_dataset_net_path", ")", "\n", "\n", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_y_multiepoch_'", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_y_multiepoch_'", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_y'", "+", "f\"_{args.decoder_num_block}\"", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_y'", "+", "f\"_{args.decoder_num_block}\"", ")", "\n", "", "make_dir", "(", "capability_path", ")", "\n", "make_dir", "(", "plot_capability_path", ")", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.bin'", ")", "\n", "", "else", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "            ", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "else", ":", "\n", "            ", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "net", ".", "eval", "(", ")", "\n", "# all parameters of net is fixed and dropout will lose efficacy", "\n", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "args", ".", "image_size", ",", "mode", "=", "'nearest'", ")", "\n", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "all_decoder", "=", "[", "]", "\n", "\n", "for", "layer_id", "in", "range", "(", "1", ",", "num_layer", "+", "1", ")", ":", "\n", "\n", "        ", "image_sample", "=", "torch", ".", "ones", "(", "1", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "decoder_feature_sample", "=", "get_feature", "(", "image_sample", ",", "net", ",", "args", ".", "net_name", ",", "\n", "model_mode", "=", "args", ".", "net_mode", ",", "layer_id", "=", "layer_id", ")", "\n", "decoder_feature_sample_channel", "=", "decoder_feature_sample", ".", "size", "(", "1", ")", "\n", "decoder_feature_sample_size", "=", "decoder_feature_sample", ".", "size", "(", "2", ")", "\n", "if", "args", ".", "if_alexnet", "==", "1", ":", "\n", "            ", "num_block_upsample", "=", "[", "2", ",", "3", ",", "4", ",", "4", ",", "4", "]", "[", "layer_id", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "num_block_upsample", "=", "math", ".", "log", "(", "(", "args", ".", "image_size", "/", "decoder_feature_sample_size", ")", ",", "2", ")", "\n", "# upsample block can make the size of feature double.", "\n", "", "decoder", "=", "get_model_resnet_decoder", "(", "gpu_id", "=", "args", ".", "gpu_id", ",", "\n", "num_input_channels", "=", "decoder_feature_sample_channel", ",", "\n", "num_block", "=", "args", ".", "decoder_num_block", ",", "num_block_upsample", "=", "num_block_upsample", ",", "if_alexnet", "=", "args", ".", "if_alexnet", ")", "\n", "decoder_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'decoder_'", "+", "args", ".", "task_name", "+", "f\"_{args.decoder_num_block}\"", ")", "\n", "decoder_sub_path", "=", "os", ".", "path", ".", "join", "(", "decoder_path", ",", "str", "(", "layer_id", ")", ")", "\n", "load_decoder_path", "=", "os", ".", "path", ".", "join", "(", "decoder_sub_path", ",", "\"decoder_\"", "+", "str", "(", "args", ".", "decoder_epoch", "-", "1", ")", "+", "'.bin'", ")", "\n", "decoder", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_decoder_path", ")", ")", "\n", "decoder", ".", "eval", "(", ")", "\n", "all_decoder", ".", "append", "(", "decoder", ")", "\n", "\n", "", "for", "batch_id", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "batch_id", "%", "50", "!=", "0", ":", "\n", "            ", "continue", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "            ", "image", "=", "image", ".", "cuda", "(", ")", "\n", "decoder_image", "=", "image", "\n", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "cuda", "(", ")", "\n", "print", "(", "'------'", "+", "str", "(", "batch_id", ")", "+", "'------'", ")", "\n", "for", "layer_id", "in", "range", "(", "1", ",", "num_layer", "+", "1", ")", ":", "\n", "                ", "decoder", "=", "all_decoder", "[", "int", "(", "layer_id", ")", "-", "1", "]", "\n", "labmda_init", "=", "args", ".", "capability_lambda_init_y", "\n", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "capability_data_path", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "data_result_path", ")", "\n", "plot_capability_data_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "plot_capability_data_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "plot_result_path", ")", "\n", "noise_layer", "=", "get_model_noise_layer", "(", "args", ".", "gpu_id", ",", "torch", ".", "zeros", "(", "1", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "size", "(", ")", ",", "\n", "args", ".", "capability_sigma_init_decay", ",", "args", ".", "image_size", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "noise_layer", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "capability_lr_y", ",", "'initial_lr'", ":", "args", ".", "capability_lr_y", "}", "]", ")", "\n", "\n", "train_feature_loss_list", "=", "[", "]", "\n", "train_feature_loss", "=", "AverageMeter", "(", ")", "\n", "noise_layer", ".", "train", "(", ")", "\n", "\n", "if", "batch_id", "<", "args", ".", "capability_visual_sample_num", "*", "args", ".", "batch_interval_num", "and", "batch_id", "%", "args", ".", "batch_interval_num", "==", "0", ":", "\n", "                    ", "visual_image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "visual_image", "=", "visual_image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "visual_image", "=", "visual_image", "*", "255", "\n", "origin_image_visual", "=", "visual_image", ".", "data", ".", "cpu", "(", ")", "\n", "origin_image_visual", "=", "np", ".", "array", "(", "origin_image_visual", "[", "0", "]", ")", "\n", "origin_image_visual", "=", "origin_image_visual", "\n", "origin_image_visual", "=", "origin_image_visual", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "origin_image_visual", "=", "np", ".", "uint8", "(", "origin_image_visual", ")", "\n", "origin_image_img", "=", "Image", ".", "fromarray", "(", "origin_image_visual", ",", "'RGB'", ")", "\n", "origin_image_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'origin_image_'", "+", "str", "(", "batch_id", ")", "+", "\"_.png\"", ")", ")", "\n", "\n", "", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                    ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "sigma_f", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", ".", "detach", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "                    ", "lambda_param", "=", "labmda_init", "*", "math", ".", "e", "**", "(", "args", ".", "capability_lambda_change_ratio", "*", "epoch", "/", "args", ".", "capability_epoch", ")", "\n", "# the parameter lambda is rising over epochs", "\n", "\n", "train_feature_loss", ".", "reset", "(", ")", "\n", "\n", "# train", "\n", "params_data", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'params'", "]", "[", "0", "]", ".", "data", "\n", "sigma_data", "=", "params_data", "\n", "sigma_data", "=", "sigma_data", ".", "data", ".", "cpu", "(", ")", "\n", "sigma_data", "=", "np", ".", "array", "(", "sigma_data", ")", "\n", "sigma_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.npy'", ")", "\n", "np", ".", "save", "(", "sigma_path", ",", "sigma_data", ")", "\n", "\n", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                        ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "feature_loss", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", "\n", "\n", "noise_decoder_feature", "=", "decoder", "(", "noise_feature", ")", "\n", "\n", "image_var", "=", "noise_decoder_feature", "-", "decoder_image", ".", "detach", "(", ")", "\n", "image_data", "=", "np", ".", "array", "(", "image_var", ".", "data", ".", "cpu", "(", ")", ")", "\n", "if", "batch_id", "<", "args", ".", "capability_visual_sample_num", "*", "args", ".", "batch_interval_num", "and", "batch_id", "%", "args", ".", "batch_interval_num", "==", "0", ":", "\n", "                        ", "visual_data", "=", "image_var", ".", "data", ".", "cpu", "(", ")", "\n", "visual_data", "=", "2", "*", "math", ".", "pi", "*", "math", ".", "e", "*", "visual_data", "*", "visual_data", "\n", "visual_data", "=", "torch", ".", "log", "(", "visual_data", ")", "\n", "visual_data", "=", "upsample_method", "(", "visual_data", ")", "\n", "visual_data", "=", "visual_data", "[", "0", "]", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'image_'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ")", "\n", "", "image_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'image_'", "+", "str", "(", "epoch", ")", "+", "'.npy'", ")", "\n", "np", ".", "save", "(", "image_path", ",", "image_data", ")", "\n", "image_var", "=", "torch", ".", "mean", "(", "torch", ".", "log", "(", "2", "*", "math", ".", "pi", "*", "math", ".", "e", "*", "image_var", "*", "image_var", "+", "1e-6", ")", ")", "\n", "\n", "feature_loss", "=", "feature_loss", "/", "sigma_f", "\n", "penalty_loss", "=", "-", "lambda_param", "*", "image_var", "\n", "loss", "=", "feature_loss", "+", "penalty_loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "epoch", "%", "2", "==", "0", ":", "\n", "                        ", "print", "(", "\"Train: [\"", "+", "str", "(", "epoch", ")", "+", "\"/\"", "+", "str", "(", "args", ".", "capability_epoch", ")", "+", "\"]\"", "+", "\"\\n\"", "\n", "+", "'feature_loss: '", "+", "str", "(", "float", "(", "feature_loss", ")", ")", "+", "\"\\n\"", "\n", "+", "'penalty_loss: '", "+", "str", "(", "float", "(", "-", "penalty_loss", "/", "lambda_param", "-", "math", ".", "log", "(", "2", "*", "(", "math", ".", "pi", ")", "*", "(", "math", ".", "e", ")", ")", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "\n", "", "train_feature_loss", ".", "update", "(", "feature_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_feature_loss_list", ".", "append", "(", "train_feature_loss", ".", "avg", ")", "\n", "\n", "if", "epoch", "==", "args", ".", "capability_epoch", "-", "1", ":", "\n", "                        ", "save_capability_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "torch", ".", "save", "(", "noise_layer", ".", "state_dict", "(", ")", ",", "save_capability_path", ")", "\n", "torch", ".", "save", "(", "[", "train_feature_loss_list", ",", "float", "(", "sigma_f", ")", "]", ",", "save_list_path", ")", "\n", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_capability_unet.step_unet": [[25, 248], ["os.path.join", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.MSELoss().cuda", "torch.nn.MSELoss().cuda", "torch.nn.ReLU", "os.path.join", "os.path.join", "make_dir", "make_dir", "make_dir", "get_net", "args.task_name.startswith", "get_net.load_state_dict", "get_net.eval", "args.net_name.endswith", "torch.nn.Upsample", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "get_num_layer", "torch.nn.MSELoss", "torch.nn.MSELoss", "os.path.join", "image.cuda.cuda", "print", "range", "str", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torchvision.utils.save_image", "torchvision.utils.save_image", "get_layer_name", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "model.noise_layer.get_model_noise_layer.get_model_noise_layer", "torch.optim.SGD", "torch.optim.SGD", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.detach", "AverageMeter", "AverageMeter", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.train", "range", "str", "str", "str", "str", "get_net.argmax().float", "os.path.join", "torch.zeros().size", "torch.zeros().size", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "visual_image.data.cpu", "numpy.array", "Image.fromarray.transpose", "numpy.uint8", "Image.fromarray", "Image.fromarray.save", "AverageMeter.reset", "AverageMeter.reset", "np.array.data.cpu", "numpy.array", "os.path.join", "numpy.save", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.", "torch.optim.SGD.zero_grad", "loss.backward", "torch.optim.SGD.step", "AverageMeter.update", "AverageMeter.update", "train_feature_loss_list.append", "train_penalty_loss_list.append", "train_lambda_list.append", "str", "str", "str", "str", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "torch.nn.MSELoss().cuda.", "os.path.join", "torch.log", "torch.log", "nn.Upsample.", "[].data.cpu", "os.path.join", "plot_feature", "os.path.join", "plot_feature", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "print", "criterion.data.cpu", "penalty_loss.data.cpu", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "str", "str", "get_net.argmax", "torch.zeros", "torch.zeros", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.parameters", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "print", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "plot_result", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.state_dict", "get_channel_vector", "get_channel_vector", "str", "[].data.cpu.min", "[].data.cpu.max", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "os.path.join", "float", "get_net.", "str", "str", "str", "get_channel_vector", "get_channel_vector", "str", "str", "str", "float", "str", "math.log", "float", "str", "str"], "function", ["None"], ["def", "step_unet", "(", "root_path", ",", "args", ")", ":", "\n", "# hyperparameters", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "make_dir", "(", "plot_path", ")", "\n", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "plot_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "train_set", "=", "get_datasets", "(", "args", ",", "args", ".", "datasets_name", ",", "data_path", "=", "data_datasets_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "1", ")", "\n", "# set dataset_mode to 1, and we get postive samples.", "\n", "if", "args", ".", "capability_if_shuffle", "==", "1", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "shuffle", ")", "\n", "# train one image and get one sigma.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "plot_dataset_net_path", ")", "\n", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "else", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "make_dir", "(", "capability_path", ")", "\n", "make_dir", "(", "plot_capability_path", ")", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.pth'", ")", "\n", "", "elif", "args", ".", "net_name", "==", "\"unet\"", ":", "\n", "        ", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "str", "(", "args", ".", "task_name", ")", ",", "str", "(", "args", ".", "net_id", ")", ",", "\"unet_medical.pth\"", ")", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_multiepoch'", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", "+", "\".pth\"", ")", "\n", "", "else", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "str", "(", "args", ".", "task_name", ")", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".pth\"", ")", "\n", "", "", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "        ", "net", "=", "net", ".", "encoder", "\n", "# all parameters of net is fixed and dropout will lose efficacy", "\n", "# upsample_method = nn.Upsample(size=args.image_size, mode='nearest')", "\n", "", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "args", ".", "image_size", ",", "mode", "=", "'bilinear'", ")", "\n", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "if", "args", ".", "capability_num_layer", "==", "0", ":", "\n", "        ", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "", "else", ":", "\n", "        ", "num_layer", "=", "args", ".", "capability_num_layer", "\n", "\n", "", "for", "batch_id", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "batch_id", "%", "5", "!=", "0", ":", "\n", "            ", "continue", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "            ", "image", "=", "image", ".", "cuda", "(", ")", "\n", "# image = image - mean.expand(image.size()).cuda()", "\n", "# image = image / std.cuda()", "\n", "if", "args", ".", "net_name", "==", "\"unet\"", ":", "\n", "                ", "y", "=", "1", "-", "net", "(", "image", ")", ".", "argmax", "(", "1", ")", ".", "float", "(", ")", "\n", "torchvision", ".", "utils", ".", "save_image", "(", "y", ",", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "f\"output_{batch_id}.png\"", ")", ")", "\n", "", "print", "(", "'------'", "+", "str", "(", "batch_id", ")", "+", "'------'", ")", "\n", "for", "layer_id", "in", "range", "(", "args", ".", "capability_start_layer", ",", "args", ".", "capability_start_layer", "+", "num_layer", ")", ":", "\n", "                ", "labmda_init", "=", "args", ".", "capability_lambda_init_x", "\n", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "capability_data_path", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "data_result_path", ")", "\n", "plot_capability_data_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "plot_capability_data_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "plot_result_path", ")", "\n", "noise_layer", "=", "get_model_noise_layer", "(", "args", ".", "gpu_id", ",", "torch", ".", "zeros", "(", "1", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "size", "(", ")", ",", "\n", "args", ".", "capability_sigma_init_decay", ",", "args", ".", "image_size", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "noise_layer", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "capability_lr_x", ",", "\n", "'initial_lr'", ":", "args", ".", "capability_lr_x", "}", "]", ")", "\n", "\n", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                    ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "sigma_f", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", ".", "detach", "(", ")", "\n", "\n", "train_feature_loss_list", "=", "[", "]", "\n", "train_penalty_loss_list", "=", "[", "]", "\n", "train_lambda_list", "=", "[", "]", "\n", "train_feature_loss", "=", "AverageMeter", "(", ")", "\n", "train_penalty_loss", "=", "AverageMeter", "(", ")", "\n", "noise_layer", ".", "train", "(", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "# visual_image = image * std.cuda()", "\n", "# visual_image = visual_image + mean.expand(image.size()).cuda()", "\n", "# visual_image = visual_image * 255", "\n", "                    ", "visual_image", "=", "image", "*", "255", "\n", "origin_image_visual", "=", "visual_image", ".", "data", ".", "cpu", "(", ")", "\n", "origin_image_visual", "=", "np", ".", "array", "(", "origin_image_visual", "[", "0", "]", ")", "\n", "origin_image_visual", "=", "origin_image_visual", "\n", "origin_image_visual", "=", "origin_image_visual", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "origin_image_visual", "=", "np", ".", "uint8", "(", "origin_image_visual", ")", "\n", "origin_image_visual", "=", "Image", ".", "fromarray", "(", "origin_image_visual", ",", "'RGB'", ")", "\n", "origin_image_visual", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'origin_image_'", "+", "str", "(", "batch_id", ")", "+", "\"_.png\"", ")", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "# lambda_param = labmda_init * math.e ** (args.capability_lambda_change_ratio * epoch / args.capability_epoch)", "\n", "                    ", "lambda_param", "=", "labmda_init", "\n", "# the parameter lambda is rising over epochs", "\n", "\n", "train_feature_loss", ".", "reset", "(", ")", "\n", "train_penalty_loss", ".", "reset", "(", ")", "\n", "\n", "# train", "\n", "params_data", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'params'", "]", "[", "0", "]", ".", "data", "\n", "sigma_data", "=", "params_data", "\n", "sigma_data", "=", "sigma_data", ".", "data", ".", "cpu", "(", ")", "\n", "sigma_data", "=", "np", ".", "array", "(", "sigma_data", ")", "\n", "sigma_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.npy'", ")", "\n", "np", ".", "save", "(", "sigma_path", ",", "sigma_data", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", "and", "epoch", "%", "10", "==", "9", ":", "\n", "                        ", "visual_data", "=", "params_data", "\n", "visual_data", "=", "2", "*", "math", ".", "pi", "*", "math", ".", "e", "*", "visual_data", "*", "visual_data", "\n", "visual_data", "=", "torch", ".", "log", "(", "visual_data", ")", "\n", "visual_data", "=", "upsample_method", "(", "visual_data", ")", "\n", "if", "layer_id", "==", "args", ".", "capability_start_layer", "+", "num_layer", "-", "1", "and", "epoch", "==", "args", ".", "capability_epoch", "-", "1", ":", "\n", "                            ", "print", "(", "visual_data", ".", "min", "(", ")", ",", "visual_data", ".", "max", "(", ")", ")", "\n", "", "visual_data", "=", "visual_data", "[", "0", "]", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'norm_sigma_'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ",", "norm", "=", "False", ")", "\n", "\n", "", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                        ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "feature_loss", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", "\n", "\n", "penalty_loss", "=", "-", "penalty", "*", "lambda_param", "\n", "feature_loss", "=", "feature_loss", "/", "sigma_f", "\n", "\n", "loss", "=", "feature_loss", "+", "penalty_loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "epoch", "%", "10", "==", "0", ":", "\n", "                        ", "print", "(", "\"Train: [\"", "+", "str", "(", "epoch", ")", "+", "\"/\"", "+", "str", "(", "args", ".", "capability_epoch", ")", "+", "\"]\"", "+", "\"\\n\"", "\n", "+", "'feature_loss: '", "+", "str", "(", "float", "(", "feature_loss", ")", ")", "+", "\"\\n\"", "\n", "+", "'penalty_loss: '", "+", "str", "(", "\n", "float", "(", "-", "penalty_loss", "/", "lambda_param", "-", "math", ".", "log", "(", "2", "*", "(", "math", ".", "pi", ")", "*", "(", "math", ".", "e", ")", ")", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "\n", "", "train_feature_loss", ".", "update", "(", "feature_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_penalty_loss", ".", "update", "(", "penalty_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_feature_loss_list", ".", "append", "(", "train_feature_loss", ".", "avg", ")", "\n", "train_penalty_loss_list", ".", "append", "(", "train_penalty_loss", ".", "avg", ")", "\n", "train_lambda_list", ".", "append", "(", "lambda_param", ")", "\n", "\n", "if", "epoch", "==", "args", ".", "capability_epoch", "-", "1", ":", "\n", "# np.save(sigma_path, sigma_data)", "\n", "                        ", "save_capability_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "if", "batch_id", "<", "args", ".", "capability_visual_sample_num", ":", "\n", "                            ", "plot_result", "(", "train_feature_loss_list", ",", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list.png\"", ")", ")", "\n", "", "torch", ".", "save", "(", "noise_layer", ".", "state_dict", "(", ")", ",", "save_capability_path", ")", "\n", "torch", ".", "save", "(", "\n", "[", "train_feature_loss_list", ",", "train_penalty_loss_list", ",", "train_lambda_list", ",", "float", "(", "sigma_f", ")", "]", ",", "\n", "save_list_path", ")", "\n", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_net.step_net": [[21, 176], ["os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "get_net", "print", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "range", "os.path.join", "save_csv_result", "str", "os.path.join", "args.datasets_name.startswith", "torch.nn.BCEWithLogitsLoss().cuda", "torch.nn.BCEWithLogitsLoss().cuda", "get_net.train", "AverageMeter.reset", "AverageMeter.reset", "AverageMeter.reset", "AverageMeter.reset", "enumerate", "train_loss_list.append", "train_error_list.append", "torch.optim.lr_scheduler.MultiStepLR.step", "get_net.eval", "os.path.join", "plot_loss_error", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "str", "str", "os.path.exists", "get_net.load_state_dict", "torch.save", "torch.save", "args.net_name.endswith", "torch.nn.CrossEntropyLoss().cuda", "torch.nn.CrossEntropyLoss().cuda", "torch.nn.BCELoss().cuda", "torch.nn.BCELoss().cuda", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "image.detach.size", "image.detach.cuda", "torch.optim.SGD.zero_grad", "criterion.backward", "torch.optim.SGD.step", "AverageMeter.update", "AverageMeter.update", "torch.no_grad", "torch.no_grad", "enumerate", "val_loss_list.append", "val_error_list.append", "get_net.state_dict", "torch.load", "torch.load", "get_net.state_dict", "get_net.parameters", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "mean.expand().float", "std.float", "args.datasets_name.startswith", "label.cuda.view().float().cuda", "get_net.", "get_binary_error", "torch.nn.BCELoss().cuda.", "criterion.data.cpu", "print", "image.detach.size", "image.detach.cuda", "AverageMeter.update", "AverageMeter.update", "len", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "args.net_name.endswith", "label.cuda.cuda", "get_net.", "get_multilabel_error", "torch.nn.BCELoss().cuda.", "get_net.", "image.detach.detach", "torch.nn.Sigmoid.", "torch.nn.BCELoss().cuda.", "label.cuda.long", "mean.expand().float", "std.float", "args.datasets_name.startswith", "label.cuda.view().float().cuda", "get_net.", "get_binary_error", "torch.nn.BCELoss().cuda.", "criterion.data.cpu", "print", "str", "str", "str", "mean.expand", "label.cuda.long", "label.cuda.long", "std.cuda", "mean.expand().cuda", "label.cuda.view().float", "args.net_name.endswith", "label.cuda.cuda", "get_net.", "get_multilabel_error", "torch.nn.BCELoss().cuda.", "get_net.", "image.detach.detach", "torch.nn.Sigmoid.", "torch.nn.BCELoss().cuda.", "label.cuda.long", "image.detach.size", "int", "str", "mean.expand", "label.cuda.long", "label.cuda.long", "std.cuda", "mean.expand().cuda", "label.cuda.view().float", "mean.expand", "label.cuda.view", "float", "image.detach.size", "int", "str", "image.detach.size", "mean.expand", "label.cuda.view", "float", "str", "image.detach.size", "float", "str", "float", "str", "str", "str", "len", "str", "str", "len", "str"], "function", ["None"], ["def", "step_net", "(", "root_path", ",", "args", ")", ":", "\n", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "make_dir", "(", "experiment_path", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "make_dir", "(", "data_path", ")", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "experiment_dataset_path", ")", "\n", "data_dataset_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "data_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "training_set", "=", "get_datasets", "(", "args", ",", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "0", ")", "\n", "val_set", "=", "get_datasets", "(", "args", ",", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "False", ",", "dataset_mode", "=", "0", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "training_set", ",", "batch_size", "=", "args", ".", "net_batch_size", ",", "shuffle", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", ".", "net_batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "experiment_dataset_net_path", ")", "\n", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "make_dir", "(", "net_path", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "make_dir", "(", "net_sub_path", ")", "\n", "\n", "# Get net.", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "print", "(", "net", ")", "\n", "if", "args", ".", "datasets_name", "==", "'CUB'", "and", "args", ".", "net_name", "==", "'alexnet'", ":", "\n", "        ", "seed_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'seed_net.bin'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "seed_net_path", ")", "and", "args", ".", "net_if_pretrained", "==", "0", ":", "\n", "            ", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "seed_net_path", ")", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "seed_net_path", ")", "\n", "", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "net", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "net_lr", ",", "'initial_lr'", ":", "args", ".", "net_lr", "}", "]", ",", "weight_decay", "=", "args", ".", "net_weight_decay", ",", "momentum", "=", "args", ".", "net_momentum", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", "=", "optimizer", ",", "milestones", "=", "args", ".", "net_milestones", ",", "gamma", "=", "args", ".", "net_gama", ",", "last_epoch", "=", "-", "1", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "        ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "sigmoid_method", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "criterion", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "\n", "", "val_loss_list", "=", "[", "]", "\n", "train_loss_list", "=", "[", "]", "\n", "val_error_list", "=", "[", "]", "\n", "train_error_list", "=", "[", "]", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "val_error", "=", "AverageMeter", "(", ")", "\n", "train_error", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "net_epoch", ")", ":", "\n", "\n", "        ", "net", ".", "train", "(", ")", "\n", "val_loss", ".", "reset", "(", ")", "\n", "train_loss", ".", "reset", "(", ")", "\n", "val_error", ".", "reset", "(", ")", "\n", "train_error", ".", "reset", "(", ")", "\n", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "float", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "float", "(", ")", "\n", "image_size", "=", "image", ".", "size", "(", ")", "\n", "batch_use", "=", "image_size", "[", "0", "]", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "                ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "                    ", "label", "=", "label", "[", "0", ":", "int", "(", "batch_use", ")", "]", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_multilabel_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "outputs", "=", "net", "(", "image", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "sigmoid_method", "(", "outputs", ")", "\n", "reconstruction_loss", "=", "criterion", "(", "outputs", ",", "image", ")", "\n", "loss", "=", "reconstruction_loss", "\n", "error", "=", "1", "\n", "", "", "else", ":", "\n", "                ", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_binary_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ",", "binary_threshold", "=", "0.5", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "train_error", ".", "update", "(", "error", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "\"Train: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "train_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", "+", "\"error: \"", "+", "str", "(", "float", "(", "error", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "", "train_loss_list", ".", "append", "(", "train_loss", ".", "avg", ")", "\n", "train_error_list", ".", "append", "(", "train_error", ".", "avg", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "            ", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "                ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "float", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "float", "(", ")", "\n", "image_size", "=", "image", ".", "size", "(", ")", "\n", "batch_use", "=", "image_size", "[", "0", "]", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "                    ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "                        ", "label", "=", "label", "[", "0", ":", "int", "(", "batch_use", ")", "]", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_multilabel_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "outputs", "=", "net", "(", "image", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "sigmoid_method", "(", "outputs", ")", "\n", "reconstruction_loss", "=", "criterion", "(", "outputs", ",", "image", ")", "\n", "loss", "=", "reconstruction_loss", "\n", "error", "=", "1", "\n", "", "", "else", ":", "\n", "                    ", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_binary_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ",", "binary_threshold", "=", "0.5", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ")", "\n", "", "val_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "val_error", ".", "update", "(", "error", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                    ", "print", "(", "\"Val: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "val_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", "+", "\"error: \"", "+", "str", "(", "float", "(", "error", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "", "val_loss_list", ".", "append", "(", "val_loss", ".", "avg", ")", "\n", "val_error_list", ".", "append", "(", "val_error", ".", "avg", ")", "\n", "\n", "", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "args", ".", "net_id", ")", "+", "\".png\"", ")", "\n", "plot_loss_error", "(", "train_loss_list", ",", "val_loss_list", ",", "train_error_list", ",", "val_error_list", ",", "plot_result_path", ")", "\n", "save_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "save_net_path", ")", "\n", "torch", ".", "save", "(", "[", "train_loss_list", ",", "train_error_list", ",", "val_loss_list", ",", "val_error_list", "]", ",", "save_list_path", ")", "\n", "\n", "", "final_error", "=", "val_error_list", "[", "len", "(", "val_error_list", ")", "-", "1", "]", "\n", "result_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'result.csv'", ")", "\n", "result_item", "=", "[", "str", "(", "args", ".", "net_id", ")", ",", "str", "(", "final_error", ")", "]", "\n", "save_csv_result", "(", "result_path", ",", "result_item", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_capability_x.step_capability_x": [[24, 230], ["os.path.join", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.MSELoss().cuda", "torch.nn.MSELoss().cuda", "torch.nn.ReLU", "os.path.join", "os.path.join", "make_dir", "make_dir", "make_dir", "get_net", "args.task_name.startswith", "print", "get_net.load_state_dict", "get_net.eval", "args.net_name.endswith", "torch.nn.Upsample", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "get_num_layer", "torch.nn.MSELoss", "torch.nn.MSELoss", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "image.cuda.cuda", "print", "range", "str", "str", "mean.expand().cuda", "std.cuda", "get_layer_name", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "model.noise_layer.get_model_noise_layer.get_model_noise_layer", "torch.optim.SGD", "torch.optim.SGD", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.detach", "AverageMeter", "AverageMeter", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.train", "range", "str", "str", "torch.zeros().size", "torch.zeros().size", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "visual_image.data.cpu", "numpy.array", "Image.fromarray.transpose", "numpy.uint8", "Image.fromarray", "Image.fromarray.save", "AverageMeter.reset", "AverageMeter.reset", "np.array.data.cpu", "numpy.array", "os.path.join", "numpy.save", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.", "torch.optim.SGD.zero_grad", "loss.backward", "torch.optim.SGD.step", "AverageMeter.update", "AverageMeter.update", "train_feature_loss_list.append", "train_penalty_loss_list.append", "train_lambda_list.append", "str", "str", "mean.expand", "str", "str", "str", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "torch.nn.MSELoss().cuda.", "std.cuda", "mean.expand().cuda", "os.path.join", "torch.log", "torch.log", "nn.Upsample.", "[].data.cpu", "os.path.join", "plot_feature", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "print", "criterion.data.cpu", "penalty_loss.data.cpu", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "image.cuda.size", "torch.zeros", "torch.zeros", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.parameters", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "plot_result", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.state_dict", "get_channel_vector", "get_channel_vector", "mean.expand", "str", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "os.path.join", "float", "image.cuda.size", "str", "str", "get_channel_vector", "get_channel_vector", "str", "str", "str", "float", "str", "math.log", "float", "str", "str"], "function", ["None"], ["def", "step_capability_x", "(", "root_path", ",", "args", ")", ":", "\n", "\n", "# hyperparameters", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "make_dir", "(", "plot_path", ")", "\n", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "plot_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "train_set", "=", "get_datasets", "(", "args", ",", "args", ".", "datasets_name", ",", "data_path", "=", "data_datasets_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "1", ")", "\n", "# set dataset_mode to 1, and we get postive samples.", "\n", "if", "args", ".", "capability_if_shuffle", "==", "1", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "shuffle", ")", "\n", "# train one image and get one sigma.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "plot_dataset_net_path", ")", "\n", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "else", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "make_dir", "(", "capability_path", ")", "\n", "make_dir", "(", "plot_capability_path", ")", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.bin'", ")", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_multiepoch'", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "else", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "str", "(", "args", ".", "task_name", ")", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "", "print", "(", "load_net_path", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "       ", "net", "=", "net", ".", "encoder", "\n", "# all parameters of net is fixed and dropout will lose efficacy", "\n", "", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "args", ".", "image_size", ",", "mode", "=", "'nearest'", ")", "\n", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "if", "args", ".", "capability_num_layer", "==", "0", ":", "\n", "        ", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "", "else", ":", "\n", "        ", "num_layer", "=", "args", ".", "capability_num_layer", "\n", "\n", "", "for", "batch_id", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "batch_id", "%", "50", "!=", "0", ":", "\n", "            ", "continue", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "            ", "image", "=", "image", ".", "cuda", "(", ")", "\n", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "cuda", "(", ")", "\n", "print", "(", "'------'", "+", "str", "(", "batch_id", ")", "+", "'------'", ")", "\n", "for", "layer_id", "in", "range", "(", "args", ".", "capability_start_layer", ",", "args", ".", "capability_start_layer", "+", "num_layer", ")", ":", "\n", "                ", "labmda_init", "=", "args", ".", "capability_lambda_init_x", "\n", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "capability_data_path", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "data_result_path", ")", "\n", "plot_capability_data_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "plot_capability_data_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "plot_result_path", ")", "\n", "noise_layer", "=", "get_model_noise_layer", "(", "args", ".", "gpu_id", ",", "torch", ".", "zeros", "(", "1", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "size", "(", ")", ",", "\n", "args", ".", "capability_sigma_init_decay", ",", "args", ".", "image_size", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "noise_layer", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "capability_lr_x", ",", "'initial_lr'", ":", "args", ".", "capability_lr_x", "}", "]", ")", "\n", "\n", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                    ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "sigma_f", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", ".", "detach", "(", ")", "\n", "\n", "train_feature_loss_list", "=", "[", "]", "\n", "train_penalty_loss_list", "=", "[", "]", "\n", "train_lambda_list", "=", "[", "]", "\n", "train_feature_loss", "=", "AverageMeter", "(", ")", "\n", "train_penalty_loss", "=", "AverageMeter", "(", ")", "\n", "noise_layer", ".", "train", "(", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "                    ", "visual_image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "visual_image", "=", "visual_image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "visual_image", "=", "visual_image", "*", "255", "\n", "origin_image_visual", "=", "visual_image", ".", "data", ".", "cpu", "(", ")", "\n", "origin_image_visual", "=", "np", ".", "array", "(", "origin_image_visual", "[", "0", "]", ")", "\n", "origin_image_visual", "=", "origin_image_visual", "\n", "origin_image_visual", "=", "origin_image_visual", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "origin_image_visual", "=", "np", ".", "uint8", "(", "origin_image_visual", ")", "\n", "origin_image_visual", "=", "Image", ".", "fromarray", "(", "origin_image_visual", ",", "'RGB'", ")", "\n", "origin_image_visual", ".", "save", "(", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'origin_image_'", "+", "str", "(", "batch_id", ")", "+", "\"_.png\"", ")", ")", "\n", "\n", "", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "# lambda_param = labmda_init * math.e ** (args.capability_lambda_change_ratio * epoch / args.capability_epoch)", "\n", "                    ", "lambda_param", "=", "labmda_init", "\n", "# the parameter lambda is rising over epochs", "\n", "\n", "train_feature_loss", ".", "reset", "(", ")", "\n", "train_penalty_loss", ".", "reset", "(", ")", "\n", "\n", "# train", "\n", "params_data", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'params'", "]", "[", "0", "]", ".", "data", "\n", "sigma_data", "=", "params_data", "\n", "sigma_data", "=", "sigma_data", ".", "data", ".", "cpu", "(", ")", "\n", "sigma_data", "=", "np", ".", "array", "(", "sigma_data", ")", "\n", "sigma_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.npy'", ")", "\n", "np", ".", "save", "(", "sigma_path", ",", "sigma_data", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", "and", "epoch", "%", "10", "==", "9", ":", "\n", "                        ", "visual_data", "=", "params_data", "\n", "visual_data", "=", "2", "*", "math", ".", "pi", "*", "math", ".", "e", "*", "visual_data", "*", "visual_data", "\n", "visual_data", "=", "torch", ".", "log", "(", "visual_data", ")", "\n", "visual_data", "=", "upsample_method", "(", "visual_data", ")", "\n", "visual_data", "=", "visual_data", "[", "0", "]", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ")", "\n", "\n", "", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                        ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "feature_loss", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", "\n", "\n", "penalty_loss", "=", "-", "penalty", "*", "lambda_param", "\n", "feature_loss", "=", "feature_loss", "/", "sigma_f", "\n", "\n", "loss", "=", "feature_loss", "+", "penalty_loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "epoch", "%", "10", "==", "0", ":", "\n", "                        ", "print", "(", "\"Train: [\"", "+", "str", "(", "epoch", ")", "+", "\"/\"", "+", "str", "(", "args", ".", "capability_epoch", ")", "+", "\"]\"", "+", "\"\\n\"", "\n", "+", "'feature_loss: '", "+", "str", "(", "float", "(", "feature_loss", ")", ")", "+", "\"\\n\"", "\n", "+", "'penalty_loss: '", "+", "str", "(", "float", "(", "-", "penalty_loss", "/", "lambda_param", "-", "math", ".", "log", "(", "2", "*", "(", "math", ".", "pi", ")", "*", "(", "math", ".", "e", ")", ")", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "\n", "", "train_feature_loss", ".", "update", "(", "feature_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_penalty_loss", ".", "update", "(", "penalty_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_feature_loss_list", ".", "append", "(", "train_feature_loss", ".", "avg", ")", "\n", "train_penalty_loss_list", ".", "append", "(", "train_penalty_loss", ".", "avg", ")", "\n", "train_lambda_list", ".", "append", "(", "lambda_param", ")", "\n", "\n", "if", "epoch", "==", "args", ".", "capability_epoch", "-", "1", ":", "\n", "# np.save(sigma_path, sigma_data)", "\n", "                        ", "save_capability_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "if", "batch_id", "<", "args", ".", "capability_visual_sample_num", ":", "\n", "                            ", "plot_result", "(", "train_feature_loss_list", ",", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list.png\"", ")", ")", "\n", "", "torch", ".", "save", "(", "noise_layer", ".", "state_dict", "(", ")", ",", "save_capability_path", ")", "\n", "torch", ".", "save", "(", "[", "train_feature_loss_list", ",", "train_penalty_loss_list", ",", "train_lambda_list", ",", "float", "(", "sigma_f", ")", "]", ",", "save_list_path", ")", "\n", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CelebADataset.__init__": [[39, 79], ["open", "open", "re.compile", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "line.rstrip.rstrip.rstrip", "re.compile.split", "imgs.append", "lbls.append", "list", "len", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "category", ",", "dst_path", "=", "'/data/cropped_CelebA'", ",", "training", "=", "True", ",", "number", "=", "1000000", ")", ":", "\n", "        ", "fn", "=", "open", "(", "src_path", "+", "'/Anno/'", "+", "category", ",", "'r'", ")", "\n", "fh2", "=", "open", "(", "src_path", "+", "'/Eval/list_eval_partition.txt'", ",", "'r'", ")", "\n", "imgs", "=", "[", "]", "\n", "lbls", "=", "[", "]", "\n", "ln", "=", "0", "\n", "regex", "=", "re", ".", "compile", "(", "'\\s+'", ")", "\n", "num", "=", "0", "\n", "for", "line", "in", "fn", ":", "\n", "            ", "ln", "+=", "1", "\n", "if", "ln", "<=", "2", ":", "\n", "                ", "continue", "\n", "", "if", "(", "ln", "-", "2", "<=", "train_num", "and", "training", ")", "or", "(", "ln", "-", "2", ">", "train_num", "and", "not", "training", ")", ":", "\n", "                ", "line", "=", "line", ".", "rstrip", "(", "'\\n'", ")", "\n", "line_value", "=", "regex", ".", "split", "(", "line", ")", "\n", "imgs", ".", "append", "(", "line_value", "[", "0", "]", ")", "\n", "lbls", ".", "append", "(", "list", "(", "int", "(", "i", ")", "if", "int", "(", "i", ")", ">", "0", "else", "0", "for", "i", "in", "line_value", "[", "1", ":", "]", ")", ")", "\n", "num", "+=", "1", "\n", "if", "num", ">=", "number", ":", "\n", "                    ", "break", "\n", "", "", "", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "lbls", "=", "lbls", "\n", "self", ".", "is_train", "=", "training", "\n", "self", ".", "dst_path", "=", "root", "+", "dst_path", "\n", "if", "\"best\"", "in", "self", ".", "dst_path", ":", "\n", "            ", "num", "=", "len", "(", "self", ".", "imgs", ")", "//", "3", "*", "3", "\n", "self", ".", "imgs", "=", "self", ".", "imgs", "[", ":", "num", "]", "\n", "self", ".", "lbls", "=", "self", ".", "lbls", "[", ":", "num", "]", "\n", "", "if", "training", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "std", "=", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CelebADataset.__getitem__": [[81, 91], ["celeba_dataset.CelebADataset.transform", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "fn", "=", "self", ".", "imgs", "[", "idx", "]", "\n", "lbls", "=", "self", ".", "lbls", "[", "idx", "]", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "imgs", "=", "Image", ".", "open", "(", "self", ".", "dst_path", "+", "'/train/'", "+", "fn", ")", "\n", "", "else", ":", "\n", "            ", "imgs", "=", "Image", ".", "open", "(", "self", ".", "dst_path", "+", "'/test/'", "+", "fn", ")", "\n", "", "imgs", "=", "self", ".", "transform", "(", "imgs", ")", "\n", "lbls", "=", "torch", ".", "Tensor", "(", "lbls", ")", "\n", "return", "[", "imgs", ",", "lbls", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CelebADataset.__len__": [[92, 94], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011.__init__": [[98, 136], ["torch.utils.data.Dataset.__init__", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "celeba_dataset.CUB_200_2011._train_test_split", "celeba_dataset.CUB_200_2011._get_image_class_labels", "celeba_dataset.CUB_200_2011._get_image_path", "celeba_dataset.CUB_200_2011._get_image_bounding_box", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize"], "methods", ["home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__init__", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._train_test_split", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_class_labels", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_path", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_bounding_box"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "CUB_200_2011", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "self", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "# self.transform = transforms.Compose([", "\n", "#     transforms.Resize((224, 224)),", "\n", "#     transforms.RandomCrop((224, 224), 32),", "\n", "#     transforms.RandomHorizontalFlip(0.5),", "\n", "#     transforms.ToTensor(),", "\n", "#     transforms.Normalize(mean=self.mean, std=self.std)", "\n", "# ])", "\n", "# deepinfo\u76ee\u524d\u4e0d\u80fd\u8bc4\u6d4b\u6570\u636e\u589e\u5f3a\u7684task", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "self", ".", "mean", ",", "std", "=", "self", ".", "std", ")", "\n", "]", ")", "\n", "\n", "self", ".", "CUB_root", "=", "data_path", "\n", "self", ".", "classes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'classes.txt'", ")", "# <class_id> <class_name>", "\n", "self", ".", "image_class_labels_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'image_class_labels.txt'", ")", "# <image_id> <class_id>", "\n", "self", ".", "images_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'images.txt'", ")", "# <image_id> <image_name>", "\n", "self", ".", "train_test_split_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'train_test_split.txt'", ")", "# <image_id> <is_training_image>", "\n", "self", ".", "bounding_boxes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'bounding_boxes.txt'", ")", "# <image_id> <x> <y> <width> <height>", "\n", "\n", "self", ".", "_train_ids", "=", "[", "]", "\n", "self", ".", "_test_ids", "=", "[", "]", "\n", "self", ".", "_image_class_labels", "=", "{", "}", "\n", "self", ".", "_image_bounding_boxes", "=", "{", "}", "\n", "self", ".", "_train_path_label", "=", "[", "]", "\n", "self", ".", "_test_path_label", "=", "[", "]", "\n", "\n", "self", ".", "_train_test_split", "(", ")", "\n", "self", ".", "_get_image_class_labels", "(", ")", "\n", "self", ".", "_get_image_path", "(", ")", "\n", "self", ".", "_get_image_bounding_box", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._train_test_split": [[137, 146], ["open", "line.strip().split", "celeba_dataset.CUB_200_2011._train_ids.append", "line.strip", "celeba_dataset.CUB_200_2011._test_ids.append", "Exception"], "methods", ["None"], ["", "def", "_train_test_split", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "train_test_split_file", ")", ":", "\n", "            ", "image_id", ",", "label", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "label", "==", "'1'", ":", "\n", "                    ", "self", ".", "_train_ids", ".", "append", "(", "image_id", ")", "\n", "", "elif", "label", "==", "'0'", ":", "\n", "                    ", "self", ".", "_test_ids", ".", "append", "(", "image_id", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'label error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_class_labels": [[147, 151], ["open", "line.strip().split", "line.strip"], "methods", ["None"], ["", "", "", "def", "_get_image_class_labels", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "image_class_labels_file", ")", ":", "\n", "            ", "image_id", ",", "class_id", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "self", ".", "_image_class_labels", "[", "image_id", "]", "=", "class_id", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_bounding_box": [[152, 156], ["open", "line.strip().split", "line.strip"], "methods", ["None"], ["", "", "def", "_get_image_bounding_box", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "bounding_boxes_file", ")", ":", "\n", "            ", "image_id", ",", "x", ",", "y", ",", "width", ",", "height", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "self", ".", "_image_bounding_boxes", "[", "image_id", "]", "=", "[", "x", ",", "y", ",", "width", ",", "height", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011._get_image_path": [[157, 165], ["open", "line.strip().split", "celeba_dataset.CUB_200_2011._train_path_label.append", "celeba_dataset.CUB_200_2011._test_path_label.append", "line.strip"], "methods", ["None"], ["", "", "def", "_get_image_path", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "images_file", ")", ":", "\n", "            ", "image_id", ",", "image_name", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "label", "=", "self", ".", "_image_class_labels", "[", "image_id", "]", "\n", "if", "image_id", "in", "self", ".", "_train_ids", ":", "\n", "                ", "self", ".", "_train_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_test_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011.__getitem__": [[166, 205], ["img.convert.convert.float", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open", "celeba_dataset.CUB_200_2011.transform", "int", "int", "int", "int", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open", "celeba_dataset.CUB_200_2011.transform", "int", "int", "int", "int", "img.convert.convert.convert", "int", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.convert", "int", "img.convert.convert.size", "img.convert.convert.size", "float", "float", "float", "float", "float", "float", "float", "float"], "methods", ["None"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "image_name", ",", "label", "=", "self", ".", "_train_path_label", "[", "index", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "label", "=", "int", "(", "label", ")", "-", "1", "\n", "# ------------------------- Bounding box -----------------------------------", "\n", "bbox_x", ",", "bbox_y", ",", "bbox_w", ",", "bbox_h", "=", "self", ".", "_image_bounding_boxes", "[", "self", ".", "_train_ids", "[", "index", "]", "]", "\n", "ori_height", ",", "ori_width", "=", "img", ".", "height", ",", "img", ".", "width", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "new_height", ",", "new_width", "=", "img", ".", "size", "(", "-", "2", ")", ",", "img", ".", "size", "(", "-", "1", ")", "\n", "bbox_y", "=", "int", "(", "float", "(", "bbox_y", ")", "/", "ori_height", "*", "new_height", ")", "\n", "bbox_x", "=", "int", "(", "float", "(", "bbox_x", ")", "/", "ori_width", "*", "new_width", ")", "\n", "bbox_h", "=", "int", "(", "float", "(", "bbox_h", ")", "/", "ori_height", "*", "new_height", ")", "\n", "bbox_w", "=", "int", "(", "float", "(", "bbox_w", ")", "/", "ori_width", "*", "new_width", ")", "\n", "# --------------------------------------------------------------------------", "\n", "", "else", ":", "\n", "            ", "image_name", ",", "label", "=", "self", ".", "_test_path_label", "[", "index", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "label", "=", "int", "(", "label", ")", "-", "1", "\n", "# ------------------------- Bounding box -----------------------------------", "\n", "bbox_x", ",", "bbox_y", ",", "bbox_w", ",", "bbox_h", "=", "self", ".", "_image_bounding_boxes", "[", "self", ".", "_test_ids", "[", "index", "]", "]", "\n", "ori_height", ",", "ori_width", "=", "img", ".", "height", ",", "img", ".", "width", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "new_height", ",", "new_width", "=", "img", ".", "size", "(", "-", "2", ")", ",", "img", ".", "size", "(", "-", "1", ")", "\n", "bbox_y", "=", "int", "(", "float", "(", "bbox_y", ")", "/", "ori_height", "*", "new_height", ")", "\n", "bbox_x", "=", "int", "(", "float", "(", "bbox_x", ")", "/", "ori_width", "*", "new_width", ")", "\n", "bbox_h", "=", "int", "(", "float", "(", "bbox_h", ")", "/", "ori_height", "*", "new_height", ")", "\n", "bbox_w", "=", "int", "(", "float", "(", "bbox_w", ")", "/", "ori_width", "*", "new_width", ")", "\n", "# --------------------------------------------------------------------------", "\n", "", "img", "=", "img", ".", "float", "(", ")", "\n", "\n", "return", "img", ",", "label", ",", "bbox_x", ",", "bbox_y", ",", "bbox_w", ",", "bbox_h", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.celeba_dataset.CUB_200_2011.__len__": [[206, 211], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "_train_ids", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "_test_ids", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_capacility_x_imagenet.step_capability_x_imagenet": [[25, 241], ["os.path.join", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.MSELoss().cuda", "torch.nn.MSELoss().cuda", "torch.nn.ReLU", "os.path.join", "os.path.join", "make_dir", "make_dir", "make_dir", "args.task_name.startswith", "get_net.eval", "get_net.cuda", "args.net_name.endswith", "torch.nn.Upsample", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torchvision.models.alexnet", "torchvision.models.alexnet", "get_net", "os.path.join", "os.path.join", "get_net.load_state_dict", "get_num_layer", "torch.nn.MSELoss", "torch.nn.MSELoss", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "image.cuda.cuda", "print", "range", "str", "str", "mean.expand().cuda", "std.cuda", "get_layer_name", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "model.noise_layer.get_model_noise_layer.get_model_noise_layer", "torch.optim.SGD", "torch.optim.SGD", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.detach", "AverageMeter", "AverageMeter", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.train", "range", "str", "str", "torch.zeros().size", "torch.zeros().size", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "torchvision.utils.save_image", "torchvision.utils.save_image", "AverageMeter.reset", "AverageMeter.reset", "np.array.data.cpu", "numpy.array", "os.path.join", "numpy.save", "torch.ones().cuda", "torch.ones().cuda", "torch.randn().cuda", "torch.randn().cuda", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.", "get_feature", "get_feature", "relu_method.detach", "nn.ReLU.", "nn.ReLU.", "torch.nn.MSELoss().cuda.", "torch.optim.SGD.zero_grad", "loss.backward", "torch.optim.SGD.step", "AverageMeter.update", "AverageMeter.update", "train_feature_loss_list.append", "train_penalty_loss_list.append", "train_lambda_list.append", "str", "str", "mean.expand", "str", "str", "str", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "torch.nn.MSELoss().cuda.", "os.path.join", "torch.log", "torch.log", "nn.Upsample.", "[].data.cpu", "os.path.join", "plot_feature", "args.datasets_name.endswith", "get_channel_vector().data.cpu", "get_channel_vector().data.cpu", "origin_channel_vector.view().cuda.view().cuda", "noise_channel_vector.view().cuda.view().cuda", "nn.ReLU.", "nn.ReLU.", "print", "criterion.data.cpu", "penalty_loss.data.cpu", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "image.cuda.size", "torch.zeros", "torch.zeros", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.parameters", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "torch.ones", "torch.ones", "torch.randn", "torch.randn", "plot_result", "model.noise_layer.get_model_noise_layer.get_model_noise_layer.state_dict", "get_channel_vector", "get_channel_vector", "str", "origin_channel_vector.view().cuda.view", "noise_channel_vector.view().cuda.view", "os.path.join", "float", "str", "str", "get_channel_vector", "get_channel_vector", "str", "str", "str", "float", "str", "math.log", "float", "str", "str"], "function", ["None"], ["def", "step_capability_x_imagenet", "(", "root_path", ",", "args", ")", ":", "\n", "# hyperparameters", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "make_dir", "(", "plot_path", ")", "\n", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "\"/data/wx/adv_interaction_order/data/ImageNet/ILSVRC2012_img_val/\"", "\n", "make_dir", "(", "plot_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "train_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_datasets_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "1", ")", "\n", "# set dataset_mode to 1, and we get postive samples.", "\n", "if", "args", ".", "capability_if_shuffle", "==", "1", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "shuffle", ")", "\n", "# train one image and get one sigma.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "plot_dataset_net_path", ")", "\n", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "else", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_x'", ")", "\n", "", "make_dir", "(", "capability_path", ")", "\n", "make_dir", "(", "plot_capability_path", ")", "\n", "if", "args", ".", "datasets_name", "==", "\"ImageNet\"", "and", "args", ".", "net_name", "==", "\"alexnet\"", ":", "\n", "        ", "net", "=", "torchvision", ".", "models", ".", "alexnet", "(", "pretrained", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.bin'", ")", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_multiepoch'", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "else", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "str", "(", "args", ".", "task_name", ")", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "", "if", "args", ".", "datasets_name", "!=", "\"ImageNet\"", "or", "args", ".", "net_name", "!=", "\"alexnet\"", ":", "\n", "        ", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "", "net", ".", "eval", "(", ")", "\n", "net", ".", "cuda", "(", ")", "\n", "if", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "        ", "net", "=", "net", ".", "encoder", "\n", "# all parameters of net is fixed and dropout will lose efficacy", "\n", "", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "args", ".", "image_size", ",", "mode", "=", "'nearest'", ")", "\n", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "if", "args", ".", "capability_num_layer", "==", "0", ":", "\n", "        ", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "", "else", ":", "\n", "        ", "num_layer", "=", "args", ".", "capability_num_layer", "\n", "\n", "", "for", "batch_id", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "        ", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "            ", "image", "=", "image", ".", "cuda", "(", ")", "\n", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "cuda", "(", ")", "\n", "print", "(", "'------'", "+", "str", "(", "batch_id", ")", "+", "'------'", ")", "\n", "for", "layer_id", "in", "range", "(", "args", ".", "capability_start_layer", ",", "args", ".", "capability_start_layer", "+", "num_layer", ")", ":", "\n", "                ", "labmda_init", "=", "args", ".", "capability_lambda_init_x", "\n", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "capability_data_path", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "data_result_path", ")", "\n", "plot_capability_data_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "plot_capability_data_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "plot_result_path", ")", "\n", "noise_layer", "=", "get_model_noise_layer", "(", "args", ".", "gpu_id", ",", "torch", ".", "zeros", "(", "1", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "size", "(", ")", ",", "\n", "args", ".", "capability_sigma_init_decay", ",", "args", ".", "image_size", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "noise_layer", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "capability_lr_x", ",", "\n", "'initial_lr'", ":", "args", ".", "capability_lr_x", "}", "]", ")", "\n", "\n", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                    ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "sigma_f", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", ".", "detach", "(", ")", "\n", "\n", "train_feature_loss_list", "=", "[", "]", "\n", "train_penalty_loss_list", "=", "[", "]", "\n", "train_lambda_list", "=", "[", "]", "\n", "train_feature_loss", "=", "AverageMeter", "(", ")", "\n", "train_penalty_loss", "=", "AverageMeter", "(", ")", "\n", "noise_layer", ".", "train", "(", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "                    ", "torchvision", ".", "utils", ".", "save_image", "(", "image", ",", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'origin_image_'", "+", "str", "(", "batch_id", ")", "+", "\"_.png\"", ")", ",", "normalize", "=", "True", ")", "\n", "# visual_image = image * std.cuda()", "\n", "# visual_image = visual_image + mean.expand(image.size()).cuda()", "\n", "# visual_image = visual_image * 255", "\n", "# origin_image_visual = visual_image.data.cpu()", "\n", "# origin_image_visual = np.array(origin_image_visual[0])", "\n", "# origin_image_visual = origin_image_visual", "\n", "# origin_image_visual = origin_image_visual.transpose((1, 2, 0))", "\n", "# origin_image_visual = np.uint8(origin_image_visual)", "\n", "# origin_image_visual = Image.fromarray(origin_image_visual, 'RGB')", "\n", "# origin_image_visual.save(", "\n", "#     os.path.join(plot_capability_path, 'origin_image_' + str(batch_id) + \"_.png\"))", "\n", "\n", "", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "# lambda_param = labmda_init * math.e ** (args.capability_lambda_change_ratio * epoch / args.capability_epoch)", "\n", "                    ", "lambda_param", "=", "labmda_init", "\n", "# the parameter lambda is rising over epochs", "\n", "\n", "train_feature_loss", ".", "reset", "(", ")", "\n", "train_penalty_loss", ".", "reset", "(", ")", "\n", "\n", "# train", "\n", "params_data", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'params'", "]", "[", "0", "]", ".", "data", "\n", "sigma_data", "=", "params_data", "\n", "sigma_data", "=", "sigma_data", ".", "data", ".", "cpu", "(", ")", "\n", "sigma_data", "=", "np", ".", "array", "(", "sigma_data", ")", "\n", "sigma_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.npy'", ")", "\n", "np", ".", "save", "(", "sigma_path", ",", "sigma_data", ")", "\n", "\n", "# if batch_id < args.capability_visual_sample_num*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "                        ", "visual_data", "=", "params_data", "\n", "visual_data", "=", "2", "*", "math", ".", "pi", "*", "math", ".", "e", "*", "visual_data", "*", "visual_data", "\n", "visual_data", "=", "torch", ".", "log", "(", "visual_data", ")", "\n", "visual_data", "=", "upsample_method", "(", "visual_data", ")", "\n", "visual_data", "=", "visual_data", "[", "0", "]", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'sigma_'", "+", "str", "(", "epoch", ")", "+", "'.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ")", "\n", "\n", "", "unit_vector", "=", "torch", ".", "ones", "(", "args", ".", "capability_batch_size", ",", "1", ",", "args", ".", "capability_sigma_size", ",", "\n", "args", ".", "capability_sigma_size", ")", ".", "cuda", "(", ")", "\n", "unit_noise", "=", "torch", ".", "randn", "(", "args", ".", "capability_batch_size", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "noise_image", ",", "penalty", "=", "noise_layer", "(", "image", ",", "unit_vector", ",", "unit_noise", ")", "\n", "\n", "noise_feature", "=", "get_feature", "(", "noise_image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "origin_feature", "=", "origin_feature", ".", "detach", "(", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", "and", "layer_id", "<=", "5", ":", "\n", "                        ", "noise_channel_vector", "=", "get_channel_vector", "(", "noise_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "get_channel_vector", "(", "origin_feature", ")", ".", "data", ".", "cpu", "(", ")", "\n", "origin_channel_vector", "=", "origin_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_channel_vector", "=", "noise_channel_vector", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "noise_feature", "=", "relu_method", "(", "noise_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", "*", "noise_channel_vector", "*", "origin_channel_vector", ")", "\n", "", "noise_feature", "=", "relu_method", "(", "noise_feature", ")", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "feature_loss", "=", "criterion", "(", "noise_feature", ",", "origin_feature", ")", "\n", "\n", "penalty_loss", "=", "-", "penalty", "*", "lambda_param", "\n", "feature_loss", "=", "feature_loss", "/", "sigma_f", "\n", "\n", "loss", "=", "feature_loss", "+", "penalty_loss", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "epoch", "%", "10", "==", "0", ":", "\n", "                        ", "print", "(", "\"Train: [\"", "+", "str", "(", "epoch", ")", "+", "\"/\"", "+", "str", "(", "args", ".", "capability_epoch", ")", "+", "\"]\"", "+", "\"\\n\"", "\n", "+", "'feature_loss: '", "+", "str", "(", "float", "(", "feature_loss", ")", ")", "+", "\"\\n\"", "\n", "+", "'penalty_loss: '", "+", "str", "(", "\n", "float", "(", "-", "penalty_loss", "/", "lambda_param", "-", "math", ".", "log", "(", "2", "*", "(", "math", ".", "pi", ")", "*", "(", "math", ".", "e", ")", ")", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "\n", "", "train_feature_loss", ".", "update", "(", "feature_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_penalty_loss", ".", "update", "(", "penalty_loss", ".", "data", ".", "cpu", "(", ")", ")", "\n", "train_feature_loss_list", ".", "append", "(", "train_feature_loss", ".", "avg", ")", "\n", "train_penalty_loss_list", ".", "append", "(", "train_penalty_loss", ".", "avg", ")", "\n", "train_lambda_list", ".", "append", "(", "lambda_param", ")", "\n", "\n", "if", "epoch", "==", "args", ".", "capability_epoch", "-", "1", ":", "\n", "                        ", "save_capability_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "if", "batch_id", "<", "args", ".", "capability_visual_sample_num", ":", "\n", "                            ", "plot_result", "(", "train_feature_loss_list", ",", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list.png\"", ")", ")", "\n", "", "torch", ".", "save", "(", "noise_layer", ".", "state_dict", "(", ")", ",", "save_capability_path", ")", "\n", "torch", ".", "save", "(", "\n", "[", "train_feature_loss_list", ",", "train_penalty_loss_list", ",", "train_lambda_list", ",", "float", "(", "sigma_f", ")", "]", ",", "\n", "save_list_path", ")", "\n", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.ISBI_dataset.__init__": [[23, 30], ["torch.utils.data.Dataset.__init__", "len", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.listdir", "os.path.join", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "num_classes", ",", "image_size", ")", ":", "\n", "        ", "super", "(", "ISBI_dataset", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "len", "=", "len", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"Images\"", ")", ")", ")", "\n", "self", ".", "transformations", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "self", ".", "image_size", "=", "image_size", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.ISBI_dataset.__len__": [[31, 33], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.ISBI_dataset._letterbox_image": [[34, 52], ["PIL.Image.fromarray", "min", "int", "int", "image.resize.resize.resize", "PIL.Image.new", "PIL.Image.new.paste", "label.resize.resize.resize", "PIL.Image.new", "PIL.Image.new.paste", "numpy.array"], "methods", ["None"], ["", "def", "_letterbox_image", "(", "self", ",", "image", ",", "label", ",", "size", ")", ":", "\n", "        ", "label", "=", "Image", ".", "fromarray", "(", "np", ".", "array", "(", "label", ")", ")", "\n", "'''resize image with unchanged aspect ratio using padding'''", "\n", "iw", ",", "ih", "=", "image", ".", "size", "\n", "w", ",", "h", "=", "size", "\n", "scale", "=", "min", "(", "w", "/", "iw", ",", "h", "/", "ih", ")", "\n", "nw", "=", "int", "(", "iw", "*", "scale", ")", "\n", "nh", "=", "int", "(", "ih", "*", "scale", ")", "\n", "\n", "image", "=", "image", ".", "resize", "(", "(", "nw", ",", "nh", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "new_image", "=", "Image", ".", "new", "(", "'RGB'", ",", "size", ",", "(", "128", ",", "128", ",", "128", ")", ")", "\n", "new_image", ".", "paste", "(", "image", ",", "(", "(", "w", "-", "nw", ")", "//", "2", ",", "(", "h", "-", "nh", ")", "//", "2", ")", ")", "\n", "\n", "label", "=", "label", ".", "resize", "(", "(", "nw", ",", "nh", ")", ",", "Image", ".", "NEAREST", ")", "\n", "new_label", "=", "Image", ".", "new", "(", "'L'", ",", "size", ",", "(", "0", ")", ")", "\n", "new_label", ".", "paste", "(", "label", ",", "(", "(", "w", "-", "nw", ")", "//", "2", ",", "(", "h", "-", "nh", ")", "//", "2", ")", ")", "\n", "\n", "return", "new_image", ",", "new_label", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.ISBI_dataset.__getitem__": [[53, 75], ["os.path.join", "os.path.join", "PIL.Image.open", "PIL.Image.open", "dataset.ISBI_dataset._letterbox_image", "numpy.array", "numpy.zeros_like", "seg_labels.reshape.reshape.reshape", "dataset.ISBI_dataset.transformations", "lbl.unsqueeze_().expand.unsqueeze_().expand.unsqueeze_().expand", "numpy.eye", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "int", "seg_labels.reshape.reshape.reshape", "int", "int", "lbl.unsqueeze_().expand.unsqueeze_().expand.unsqueeze_"], "methods", ["home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.ISBI_dataset._letterbox_image"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img_pth", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"Images\"", ",", "f\"{item}.png\"", ")", "\n", "lbl_pth", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "\"Labels\"", ",", "f\"{item}.png\"", ")", "\n", "img", "=", "Image", ".", "open", "(", "img_pth", ")", "\n", "lbl", "=", "Image", ".", "open", "(", "lbl_pth", ")", "\n", "\n", "img", ",", "lbl", "=", "self", ".", "_letterbox_image", "(", "img", ",", "lbl", ",", "(", "int", "(", "self", ".", "image_size", "[", "1", "]", ")", ",", "int", "(", "self", ".", "image_size", "[", "0", "]", ")", ")", ")", "\n", "\n", "# img = np.transpose(np.array(img), [2, 0, 1]) / 255", "\n", "lbl", "=", "np", ".", "array", "(", "lbl", ")", "\n", "modify_png", "=", "np", ".", "zeros_like", "(", "lbl", ")", "\n", "modify_png", "[", "lbl", "<=", "127.5", "]", "=", "1", "\n", "\n", "seg_labels", "=", "modify_png", "\n", "seg_labels", "=", "np", ".", "eye", "(", "self", ".", "num_classes", "+", "1", ")", "[", "seg_labels", ".", "reshape", "(", "[", "-", "1", "]", ")", "]", "\n", "seg_labels", "=", "seg_labels", ".", "reshape", "(", "(", "int", "(", "self", ".", "image_size", "[", "1", "]", ")", ",", "int", "(", "self", ".", "image_size", "[", "0", "]", ")", ",", "self", ".", "num_classes", "+", "1", ")", ")", "\n", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", "/", "255.", "\n", "lbl", "=", "lbl", ".", "unsqueeze_", "(", "2", ")", ".", "expand", "(", "self", ".", "image_size", "[", "1", "]", ",", "self", ".", "image_size", "[", "0", "]", ",", "self", ".", "num_classes", "+", "1", ")", "\n", "\n", "return", "img", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding.__init__": [[79, 110], ["torch.utils.data.Dataset.__init__", "torch.nn.Upsample", "torch.nn.Upsample", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.CUBBounding._get_if_use", "dataset.CUBBounding._train_test_split", "dataset.CUBBounding._get_id_to_label", "dataset.CUBBounding._get_path_label", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__init__", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_if_use", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._train_test_split", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_id_to_label", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_path_label"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "0", ")", ":", "\n", "        ", "super", "(", "CUBBounding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "dataset_mode", "=", "dataset_mode", "\n", "self", ".", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "224", ",", "mode", "=", "'bilinear'", ")", "\n", "self", ".", "transformations", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n", "self", ".", "CUB_root", "=", "data_path", "\n", "self", ".", "CUB_200_211_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_200_2011'", ")", "\n", "self", ".", "CUB_200_2011_bounding_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_200_2011_bounding'", ")", "\n", "self", ".", "CUB_200_2011_negetive_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_200_2011_negetive'", ")", "\n", "\n", "self", ".", "classes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'classes.txt'", ")", "# <class_id> <class_name>", "\n", "self", ".", "image_class_labels_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'image_class_labels.txt'", ")", "# <image_id> <class_id>", "\n", "self", ".", "images_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'images.txt'", ")", "# <image_id> <image_name>", "\n", "self", ".", "train_test_split_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'train_test_split.txt'", ")", "# <image_id> <is_training_image>", "\n", "self", ".", "bounding_boxes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'bounding_boxes.txt'", ")", "# <image_id> <x> <y> <width> <height>", "\n", "self", ".", "if_use_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'if_use.txt'", ")", "# <used_image_id>", "\n", "\n", "self", ".", "_train_ids", "=", "[", "]", "\n", "self", ".", "_test_ids", "=", "[", "]", "\n", "self", ".", "_image_id_label", "=", "{", "}", "\n", "self", ".", "_train_path_label", "=", "[", "]", "\n", "self", ".", "_test_path_label", "=", "[", "]", "\n", "self", ".", "_if_use", "=", "[", "]", "\n", "\n", "self", ".", "_get_if_use", "(", ")", "\n", "self", ".", "_train_test_split", "(", ")", "\n", "self", ".", "_get_id_to_label", "(", ")", "\n", "self", ".", "_get_path_label", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding._get_if_use": [[111, 115], ["open", "line.strip().split", "dataset.CUBBounding._if_use.append", "line.strip"], "methods", ["None"], ["", "def", "_get_if_use", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "if_use_file", ")", ":", "\n", "            ", "used_id", ",", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "self", ".", "_if_use", ".", "append", "(", "used_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding._train_test_split": [[116, 126], ["open", "line.strip().split", "line.strip", "dataset.CUBBounding._train_ids.append", "dataset.CUBBounding._test_ids.append", "Exception"], "methods", ["None"], ["", "", "def", "_train_test_split", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "train_test_split_file", ")", ":", "\n", "            ", "image_id", ",", "label", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "if", "label", "==", "'1'", ":", "\n", "                        ", "self", ".", "_train_ids", ".", "append", "(", "image_id", ")", "\n", "", "elif", "label", "==", "'0'", ":", "\n", "                        ", "self", ".", "_test_ids", ".", "append", "(", "image_id", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "'label error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding._get_id_to_label": [[127, 132], ["open", "line.strip().split", "line.strip"], "methods", ["None"], ["", "", "", "", "def", "_get_id_to_label", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "image_class_labels_file", ")", ":", "\n", "            ", "image_id", ",", "class_id", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "self", ".", "_image_id_label", "[", "image_id", "]", "=", "class_id", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding._get_path_label": [[133, 142], ["open", "line.strip().split", "line.strip", "dataset.CUBBounding._train_path_label.append", "dataset.CUBBounding._test_path_label.append"], "methods", ["None"], ["", "", "", "def", "_get_path_label", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "images_file", ")", ":", "\n", "            ", "image_id", ",", "image_name", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "label", "=", "self", ".", "_image_id_label", "[", "image_id", "]", "\n", "if", "image_id", "in", "self", ".", "_train_ids", ":", "\n", "                    ", "self", ".", "_train_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_test_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding.__getitem__": [[143, 172], ["img.convert.convert.float", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBounding.transformations", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBounding.transformations", "img.convert.convert.convert", "int", "dataset.CUBBounding.upsample_method", "img.convert.convert.convert", "int", "dataset.CUBBounding.upsample_method", "img.convert.convert.view", "img.convert.convert.view", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size"], "methods", ["None"], ["", "", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "train", ":", "\n", "\n", "            ", "image_name", ",", "label", "=", "self", ".", "_train_path_label", "[", "index", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "label", "=", "int", "(", "label", ")", "-", "1", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "image_name", ",", "label", "=", "self", ".", "_test_path_label", "[", "index", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_bounding_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "label", "=", "int", "(", "label", ")", "-", "1", "\n", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "\n", "", "img", "=", "img", ".", "float", "(", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBounding.__len__": [[173, 178], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "_train_ids", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "_test_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__init__": [[181, 226], ["torch.utils.data.Dataset.__init__", "torch.nn.Upsample", "torch.nn.Upsample", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset.CUBBinaryBounding._get_if_use", "dataset.CUBBinaryBounding._train_test_split", "dataset.CUBBinaryBounding._get_id_to_label", "dataset.CUBBinaryBounding._get_path_label", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__init__", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_if_use", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._train_test_split", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_id_to_label", "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_path_label"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "0", ")", ":", "\n", "        ", "super", "(", "CUBBinaryBounding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "dataset_mode", "=", "dataset_mode", "\n", "self", ".", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "224", ",", "mode", "=", "'bilinear'", ")", "\n", "self", ".", "transformations", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n", "self", ".", "CUB_root", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"..\"", ",", "\"CUB\"", ")", "\n", "self", ".", "CUB_200_211_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_200_2011'", ")", "\n", "self", ".", "CUB_binary_bounding_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_binary_bounding'", ")", "\n", "self", ".", "CUB_200_2011_negetive_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_root", ",", "'CUB_200_2011_negetive'", ")", "\n", "\n", "self", ".", "classes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'classes.txt'", ")", "# <class_id> <class_name>", "\n", "self", ".", "image_class_labels_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'image_class_labels.txt'", ")", "# <image_id> <class_id>", "\n", "self", ".", "images_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'images.txt'", ")", "# <image_id> <image_name>", "\n", "self", ".", "train_test_split_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'train_test_split.txt'", ")", "# <image_id> <is_training_image>", "\n", "self", ".", "bounding_boxes_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'bounding_boxes.txt'", ")", "# <image_id> <x> <y> <width> <height>", "\n", "self", ".", "if_use_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'if_use.txt'", ")", "# <used_image_id>", "\n", "\n", "self", ".", "classes_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'classes.txt'", ")", "# <class_id> <class_name>", "\n", "self", ".", "image_class_labels_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'image_class_labels.txt'", ")", "# <image_id> <class_id>", "\n", "self", ".", "images_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'images.txt'", ")", "# <image_id> <image_name>", "\n", "self", ".", "train_test_split_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'train_test_split.txt'", ")", "# <image_id> <is_training_image>", "\n", "self", ".", "bounding_boxes_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'bounding_boxes.txt'", ")", "# <image_id> <x> <y> <width> <height>", "\n", "self", ".", "if_use_file_negetive", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'if_use.txt'", ")", "# <used_image_id>", "\n", "\n", "self", ".", "_train_ids", "=", "[", "]", "\n", "self", ".", "_test_ids", "=", "[", "]", "\n", "self", ".", "_image_id_label", "=", "{", "}", "\n", "self", ".", "_train_path_label", "=", "[", "]", "\n", "self", ".", "_test_path_label", "=", "[", "]", "\n", "self", ".", "_if_use", "=", "[", "]", "\n", "\n", "self", ".", "_train_ids_negetive", "=", "[", "]", "\n", "self", ".", "_test_ids_negetive", "=", "[", "]", "\n", "self", ".", "_image_id_label_negetive", "=", "{", "}", "\n", "self", ".", "_train_path_label_negetive", "=", "[", "]", "\n", "self", ".", "_test_path_label_negetive", "=", "[", "]", "\n", "self", ".", "_if_use_negetive", "=", "[", "]", "\n", "\n", "self", ".", "_get_if_use", "(", ")", "\n", "self", ".", "_train_test_split", "(", ")", "\n", "self", ".", "_get_id_to_label", "(", ")", "\n", "self", ".", "_get_path_label", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_if_use": [[227, 234], ["open", "open", "line.strip().split", "dataset.CUBBinaryBounding._if_use.append", "line.strip().split", "dataset.CUBBinaryBounding._if_use_negetive.append", "line.strip", "line.strip"], "methods", ["None"], ["", "def", "_get_if_use", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "if_use_file", ")", ":", "\n", "            ", "used_id", ",", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "self", ".", "_if_use", ".", "append", "(", "used_id", ")", "\n", "", "for", "line", "in", "open", "(", "self", ".", "if_use_file_negetive", ")", ":", "\n", "            ", "used_id", ",", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "self", ".", "_if_use_negetive", ".", "append", "(", "used_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._train_test_split": [[235, 254], ["open", "open", "line.strip().split", "line.strip().split", "line.strip", "dataset.CUBBinaryBounding._train_ids.append", "line.strip", "dataset.CUBBinaryBounding._train_ids_negetive.append", "dataset.CUBBinaryBounding._test_ids.append", "Exception", "dataset.CUBBinaryBounding._test_ids_negetive.append", "Exception"], "methods", ["None"], ["", "", "def", "_train_test_split", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "train_test_split_file", ")", ":", "\n", "            ", "image_id", ",", "label", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "if", "label", "==", "'1'", ":", "\n", "                        ", "self", ".", "_train_ids", ".", "append", "(", "image_id", ")", "\n", "", "elif", "label", "==", "'0'", ":", "\n", "                        ", "self", ".", "_test_ids", ".", "append", "(", "image_id", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "'label error'", ")", "\n", "", "", "", "for", "line", "in", "open", "(", "self", ".", "train_test_split_file_negetive", ")", ":", "\n", "            ", "image_id", ",", "label", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use_negetive", ":", "\n", "                ", "if", "label", "==", "'1'", ":", "\n", "                        ", "self", ".", "_train_ids_negetive", ".", "append", "(", "image_id", ")", "\n", "", "elif", "label", "==", "'0'", ":", "\n", "                        ", "self", ".", "_test_ids_negetive", ".", "append", "(", "image_id", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "'label error'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_id_to_label": [[255, 264], ["open", "open", "line.strip().split", "line.strip().split", "line.strip", "line.strip"], "methods", ["None"], ["", "", "", "", "def", "_get_id_to_label", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "image_class_labels_file", ")", ":", "\n", "            ", "image_id", ",", "class_id", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "self", ".", "_image_id_label", "[", "image_id", "]", "=", "class_id", "\n", "", "", "for", "line", "in", "open", "(", "self", ".", "image_class_labels_file_negetive", ")", ":", "\n", "            ", "image_id", ",", "class_id", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use_negetive", ":", "\n", "                ", "self", ".", "_image_id_label_negetive", "[", "image_id", "]", "=", "class_id", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding._get_path_label": [[265, 282], ["open", "open", "line.strip().split", "line.strip().split", "line.strip", "dataset.CUBBinaryBounding._train_path_label.append", "dataset.CUBBinaryBounding._test_path_label.append", "line.strip", "dataset.CUBBinaryBounding._train_path_label_negetive.append", "dataset.CUBBinaryBounding._test_path_label_negetive.append"], "methods", ["None"], ["", "", "", "def", "_get_path_label", "(", "self", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "self", ".", "images_file", ")", ":", "\n", "            ", "image_id", ",", "image_name", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use", ":", "\n", "                ", "label", "=", "self", ".", "_image_id_label", "[", "image_id", "]", "\n", "if", "image_id", "in", "self", ".", "_train_ids", ":", "\n", "                    ", "self", ".", "_train_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_test_path_label", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "", "", "", "for", "line", "in", "open", "(", "self", ".", "images_file_negetive", ")", ":", "\n", "            ", "image_id", ",", "image_name", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", ")", "\n", "if", "image_id", "in", "self", ".", "_if_use_negetive", ":", "\n", "                ", "label", "=", "self", ".", "_image_id_label_negetive", "[", "image_id", "]", "\n", "if", "image_id", "in", "self", ".", "_train_ids", ":", "\n", "                    ", "self", ".", "_train_path_label_negetive", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_test_path_label_negetive", ".", "append", "(", "(", "image_name", ",", "label", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__getitem__": [[283, 341], ["img.convert.convert.float", "random.randint", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBinaryBounding.transformations", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBinaryBounding.transformations", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBinaryBounding.transformations", "os.path.join", "PIL.Image.open", "numpy.array", "dataset.CUBBinaryBounding.transformations", "img.convert.convert.convert", "dataset.CUBBinaryBounding.upsample_method", "len", "img.convert.convert.convert", "dataset.CUBBinaryBounding.upsample_method", "img.convert.convert.convert", "dataset.CUBBinaryBounding.upsample_method", "len", "img.convert.convert.convert", "dataset.CUBBinaryBounding.upsample_method", "img.convert.convert.view", "img.convert.convert.view", "img.convert.convert.view", "img.convert.convert.view", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size", "img.convert.convert.size"], "methods", ["None"], ["", "", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "dataset_mode", "==", "0", ":", "\n", "            ", "mode_num", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "mode_num", "=", "1", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "\n", "            ", "if", "mode_num", "==", "1", ":", "\n", "                ", "image_name", ",", "label", "=", "self", ".", "_train_path_label", "[", "index", "]", "\n", "label", "=", "1", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                    ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "index", "=", "index", "%", "len", "(", "self", ".", "_train_path_label_negetive", ")", "\n", "image_name", ",", "label", "=", "self", ".", "_train_path_label_negetive", "[", "index", "]", "\n", "label", "=", "0", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                    ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "\n", "", "", "else", ":", "\n", "\n", "            ", "if", "mode_num", "==", "1", ":", "\n", "                ", "image_name", ",", "label", "=", "self", ".", "_test_path_label", "[", "index", "]", "\n", "label", "=", "1", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_binary_bounding_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                    ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "index", "=", "index", "%", "len", "(", "self", ".", "_test_path_label_negetive", ")", "\n", "image_name", ",", "label", "=", "self", ".", "_test_path_label_negetive", "[", "index", "]", "\n", "label", "=", "0", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "CUB_200_2011_negetive_root", ",", "'images'", ",", "image_name", ")", "\n", "img", "=", "Image", ".", "open", "(", "image_path", ")", "\n", "if", "img", ".", "mode", "==", "'L'", ":", "\n", "                    ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "img", "=", "self", ".", "transformations", "(", "img", ")", "\n", "img", "=", "self", ".", "upsample_method", "(", "img", ".", "view", "(", "1", ",", "img", ".", "size", "(", ")", "[", "0", "]", ",", "img", ".", "size", "(", ")", "[", "1", "]", ",", "img", ".", "size", "(", ")", "[", "2", "]", ")", ")", "[", "0", "]", "\n", "\n", "", "", "img", "=", "img", ".", "float", "(", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.dataset.CUBBinaryBounding.__len__": [[342, 347], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "_train_ids", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "_test_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_decoder.step_decoder": [[23, 163], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "get_mean_std", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_net", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.ReLU", "args.task_name.startswith", "get_net.load_state_dict", "get_net.eval", "get_datasets", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "get_num_layer", "torch.ones().cuda", "torch.ones().cuda", "get_net.", "range", "str", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "get_layer_name", "torch.ones().cuda", "torch.ones().cuda", "get_feature", "get_feature.size", "get_feature.size", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder", "torch.optim.Adam", "torch.optim.Adam", "os.path.join", "make_dir", "AverageMeter", "AverageMeter", "range", "str", "torch.ones", "torch.ones", "math.log", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.parameters", "str", "os.path.join", "make_dir", "enumerate", "train_loss_list.append", "get_net.eval", "val_loss_list.append", "os.path.join", "torch.save", "torch.save", "os.path.join", "torch.save", "torch.save", "os.path.join", "plot_loss", "torch.ones", "torch.ones", "str", "image.cuda.cuda", "image.cuda.size", "get_feature", "decoder_feature.detach.detach", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.", "torch.nn.MSELoss.", "torch.optim.Adam.zero_grad", "criterion.backward", "torch.optim.Adam.step", "AverageMeter.update", "torch.no_grad", "torch.no_grad", "enumerate", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.state_dict", "str", "str", "mean.expand", "std.cuda", "mean.expand().cuda", "criterion.data.cpu", "print", "image.cuda.size", "image.cuda.cuda", "image.cuda.size", "get_feature", "nn.ReLU.", "decoder_feature.detach.detach", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.", "torch.nn.MSELoss.", "AverageMeter.update", "image.cuda.data.cpu", "numpy.array", "np.uint8.transpose", "numpy.uint8", "Image.fromarray", "Image.fromarray.save", "model.resnet_decoder.get_model_resnet_decoder.get_model_resnet_decoder.", "decoder.data.cpu", "numpy.array", "np.uint8.transpose", "numpy.uint8", "Image.fromarray", "Image.fromarray.save", "str", "str", "str", "mean.expand", "mean.expand", "std.cuda", "mean.expand().cuda", "criterion.data.cpu", "print", "os.path.join", "os.path.join", "image.cuda.size", "str", "image.cuda.size", "float", "mean.expand", "image.cuda.size", "str", "str", "str", "str", "float", "str", "str", "len", "str", "str", "len", "str"], "function", ["None"], ["def", "step_decoder", "(", "root_path", ",", "args", ")", ":", "\n", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_dataset_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "decoder_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'decoder_'", "+", "args", ".", "task_name", "+", "f\"_{args.decoder_num_block}\"", ")", "\n", "make_dir", "(", "decoder_path", ")", "\n", "\n", "# Get net.", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.bin'", ")", "\n", "", "else", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "training_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "0", ")", "\n", "val_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "False", ",", "dataset_mode", "=", "0", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "training_set", ",", "batch_size", "=", "args", ".", "decoder_batch_size", ",", "shuffle", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", ".", "decoder_batch_size", ",", "shuffle", "=", "False", ")", "\n", "# print(net)", "\n", "\n", "\n", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "\n", "image_sample", "=", "torch", ".", "ones", "(", "1", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "out_sample", "=", "net", "(", "image_sample", ")", "\n", "\n", "for", "layer_id", "in", "range", "(", "1", ",", "num_layer", "+", "1", ")", ":", "\n", "\n", "        ", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "image_sample", "=", "torch", ".", "ones", "(", "1", ",", "3", ",", "args", ".", "image_size", ",", "args", ".", "image_size", ")", ".", "cuda", "(", ")", "\n", "decoder_feature_sample", "=", "get_feature", "(", "image_sample", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "layer_id", "=", "layer_id", ")", "\n", "decoder_feature_sample_channel", "=", "decoder_feature_sample", ".", "size", "(", "1", ")", "\n", "decoder_feature_sample_size", "=", "decoder_feature_sample", ".", "size", "(", "2", ")", "\n", "if", "args", ".", "if_alexnet", "==", "1", ":", "\n", "            ", "num_block_upsample", "=", "[", "2", ",", "3", ",", "4", ",", "4", ",", "4", "]", "[", "layer_id", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "num_block_upsample", "=", "math", ".", "log", "(", "(", "args", ".", "image_size", "/", "decoder_feature_sample_size", ")", ",", "2", ")", "\n", "# upsample block can make the size of feature double.", "\n", "\n", "", "decoder", "=", "get_model_resnet_decoder", "(", "gpu_id", "=", "args", ".", "gpu_id", ",", "num_input_channels", "=", "decoder_feature_sample_channel", ",", "num_block", "=", "args", ".", "decoder_num_block", ",", "num_block_upsample", "=", "num_block_upsample", ",", "if_alexnet", "=", "args", ".", "if_alexnet", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "decoder", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "decoder_lr", ")", "\n", "decoder_sub_path", "=", "os", ".", "path", ".", "join", "(", "decoder_path", ",", "str", "(", "layer_id", ")", ")", "\n", "make_dir", "(", "decoder_sub_path", ")", "\n", "\n", "val_loss_list", "=", "[", "]", "\n", "train_loss_list", "=", "[", "]", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "decoder_epoch", ")", ":", "\n", "\n", "            ", "visual_path", "=", "os", ".", "path", ".", "join", "(", "decoder_sub_path", ",", "str", "(", "epoch", ")", ")", "\n", "make_dir", "(", "visual_path", ")", "\n", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", "\n", "image", "=", "image", "/", "std", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "batch_use", "=", "image", ".", "size", "(", "0", ")", "\n", "decoder_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "layer_id", "=", "layer_id", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "decoder_image", "=", "image", "\n", "decoder_feature", "=", "decoder_feature", ".", "detach", "(", ")", "\n", "decoder_out", "=", "decoder", "(", "decoder_feature", ")", "\n", "loss", "=", "criterion", "(", "decoder_out", ",", "decoder_image", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                    ", "print", "(", "\"Train: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "train_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "", "train_loss_list", ".", "append", "(", "train_loss", ".", "avg", ")", "\n", "\n", "# validate", "\n", "net", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "                    ", "if", "i", "<", "args", ".", "capability_visual_sample_num", ":", "\n", "                        ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", "\n", "image", "=", "image", "/", "std", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "batch_use", "=", "image", ".", "size", "(", "0", ")", "\n", "decoder_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "layer_id", "=", "layer_id", ")", "\n", "decoder_feature", "=", "relu_method", "(", "decoder_feature", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "decoder_image", "=", "image", "\n", "decoder_feature", "=", "decoder_feature", ".", "detach", "(", ")", "\n", "decoder_out", "=", "decoder", "(", "decoder_feature", ")", "\n", "loss", "=", "criterion", "(", "decoder_out", ",", "decoder_image", ")", "\n", "val_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                            ", "print", "(", "\"Val: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "val_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "image", "=", "image", "*", "255", "\n", "origin_image_visual", "=", "image", ".", "data", ".", "cpu", "(", ")", "\n", "origin_image_visual", "=", "np", ".", "array", "(", "origin_image_visual", "[", "0", "]", ")", "\n", "origin_image_visual", "=", "origin_image_visual", "\n", "origin_image_visual", "=", "origin_image_visual", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "origin_image_visual", "=", "np", ".", "uint8", "(", "origin_image_visual", ")", "\n", "origin_image_img", "=", "Image", ".", "fromarray", "(", "origin_image_visual", ",", "'RGB'", ")", "\n", "origin_image_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "visual_path", ",", "'origin_image_'", "+", "str", "(", "i", ")", "+", "\"_.png\"", ")", ")", "\n", "decoder_out", "=", "decoder", "(", "decoder_feature", ")", "\n", "decoder_out", "=", "decoder_out", "*", "255", "\n", "decoder_out_visual", "=", "decoder_out", ".", "data", ".", "cpu", "(", ")", "\n", "decoder_out_visual", "=", "np", ".", "array", "(", "decoder_out_visual", "[", "0", "]", ")", "\n", "decoder_out_visual", "=", "decoder_out_visual", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "decoder_out_visual", "=", "np", ".", "uint8", "(", "decoder_out_visual", ")", "\n", "decoder_out_img", "=", "Image", ".", "fromarray", "(", "decoder_out_visual", ",", "'RGB'", ")", "\n", "decoder_out_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "visual_path", ",", "'decoder_image_'", "+", "str", "(", "i", ")", "+", "\"_.png\"", ")", ")", "\n", "", "", "", "val_loss_list", ".", "append", "(", "val_loss", ".", "avg", ")", "\n", "\n", "save_decoder_path", "=", "os", ".", "path", ".", "join", "(", "decoder_sub_path", ",", "\"decoder_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "torch", ".", "save", "(", "decoder", ".", "state_dict", "(", ")", ",", "save_decoder_path", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "decoder_sub_path", ",", "\"decoder_list\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "torch", ".", "save", "(", "[", "train_loss_list", ",", "val_loss_list", "]", ",", "save_list_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "decoder_sub_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "layer_id", ")", "+", "\".png\"", ")", "\n", "plot_loss", "(", "train_loss_list", ",", "val_loss_list", ",", "plot_result_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_adv_net.step_adv_net": [[21, 177], ["os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "get_net", "print", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "range", "os.path.join", "save_csv_result", "str", "os.path.join", "args.datasets_name.startswith", "torch.nn.BCEWithLogitsLoss().cuda", "torch.nn.BCEWithLogitsLoss().cuda", "get_net.train", "AverageMeter.reset", "AverageMeter.reset", "AverageMeter.reset", "AverageMeter.reset", "enumerate", "train_loss_list.append", "train_error_list.append", "torch.optim.lr_scheduler.MultiStepLR.step", "get_net.eval", "os.path.join", "plot_loss_error", "os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "str", "str", "os.path.exists", "get_net.load_state_dict", "torch.save", "torch.save", "args.net_name.endswith", "torch.nn.CrossEntropyLoss().cuda", "torch.nn.CrossEntropyLoss().cuda", "torch.nn.BCELoss().cuda", "torch.nn.BCELoss().cuda", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "image.detach.size", "image.detach.cuda", "get_adversarial", "torch.optim.SGD.zero_grad", "criterion.backward", "torch.optim.SGD.step", "AverageMeter.update", "AverageMeter.update", "torch.no_grad", "torch.no_grad", "enumerate", "val_loss_list.append", "val_error_list.append", "get_net.state_dict", "torch.load", "torch.load", "get_net.state_dict", "get_net.parameters", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "mean.expand().float", "std.float", "args.datasets_name.startswith", "label.cuda.view().float().cuda", "get_net.", "get_binary_error", "torch.nn.BCELoss().cuda.", "criterion.data.cpu", "print", "image.detach.size", "image.detach.cuda", "AverageMeter.update", "AverageMeter.update", "len", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "args.net_name.endswith", "label.cuda.cuda", "get_net.", "get_multilabel_error", "torch.nn.BCELoss().cuda.", "get_net.", "image.detach.detach", "torch.nn.Sigmoid.", "torch.nn.BCELoss().cuda.", "label.cuda.long", "mean.expand().float", "std.float", "args.datasets_name.startswith", "label.cuda.view().float().cuda", "get_net.", "get_binary_error", "torch.nn.BCELoss().cuda.", "criterion.data.cpu", "print", "str", "str", "str", "mean.expand", "label.cuda.long", "label.cuda.long", "std.cuda", "mean.expand().cuda", "label.cuda.view().float", "args.net_name.endswith", "label.cuda.cuda", "get_net.", "get_multilabel_error", "torch.nn.BCELoss().cuda.", "get_net.", "image.detach.detach", "torch.nn.Sigmoid.", "torch.nn.BCELoss().cuda.", "label.cuda.long", "image.detach.size", "int", "str", "mean.expand", "label.cuda.long", "label.cuda.long", "std.cuda", "mean.expand().cuda", "label.cuda.view().float", "mean.expand", "label.cuda.view", "float", "image.detach.size", "int", "str", "image.detach.size", "mean.expand", "label.cuda.view", "float", "str", "image.detach.size", "float", "str", "float", "str", "str", "str", "len", "str", "str", "len", "str"], "function", ["None"], ["def", "step_adv_net", "(", "root_path", ",", "args", ")", ":", "\n", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "make_dir", "(", "experiment_path", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "make_dir", "(", "data_path", ")", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "experiment_dataset_path", ")", "\n", "data_dataset_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "data_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "training_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "True", ",", "dataset_mode", "=", "0", ")", "\n", "val_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_dataset_path", ",", "train", "=", "False", ",", "dataset_mode", "=", "0", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "training_set", ",", "batch_size", "=", "args", ".", "net_batch_size", ",", "shuffle", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_set", ",", "batch_size", "=", "args", ".", "net_batch_size", ",", "shuffle", "=", "False", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "experiment_dataset_net_path", ")", "\n", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "args", ".", "task_name", ")", "\n", "make_dir", "(", "net_path", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "make_dir", "(", "net_sub_path", ")", "\n", "\n", "# Get net.", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "print", "(", "net", ")", "\n", "if", "args", ".", "datasets_name", "==", "'CUB'", "and", "args", ".", "net_name", "==", "'alexnet'", ":", "\n", "        ", "seed_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'seed_net.bin'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "seed_net_path", ")", "and", "args", ".", "net_if_pretrained", "==", "0", ":", "\n", "            ", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "seed_net_path", ")", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "seed_net_path", ")", "\n", "", "", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "{", "\"params\"", ":", "net", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "net_lr", ",", "'initial_lr'", ":", "args", ".", "net_lr", "}", "]", ",", "weight_decay", "=", "args", ".", "net_weight_decay", ",", "momentum", "=", "args", ".", "net_momentum", ")", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", "=", "optimizer", ",", "milestones", "=", "args", ".", "net_milestones", ",", "gamma", "=", "args", ".", "net_gama", ",", "last_epoch", "=", "-", "1", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "        ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "sigmoid_method", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "criterion", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "\n", "", "val_loss_list", "=", "[", "]", "\n", "train_loss_list", "=", "[", "]", "\n", "val_error_list", "=", "[", "]", "\n", "train_error_list", "=", "[", "]", "\n", "val_loss", "=", "AverageMeter", "(", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "val_error", "=", "AverageMeter", "(", ")", "\n", "train_error", "=", "AverageMeter", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "net_epoch", ")", ":", "\n", "\n", "        ", "net", ".", "train", "(", ")", "\n", "val_loss", ".", "reset", "(", ")", "\n", "train_loss", ".", "reset", "(", ")", "\n", "val_error", ".", "reset", "(", ")", "\n", "train_error", ".", "reset", "(", ")", "\n", "\n", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "float", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "float", "(", ")", "\n", "image_size", "=", "image", ".", "size", "(", ")", "\n", "batch_use", "=", "image_size", "[", "0", "]", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "image", "=", "get_adversarial", "(", "args", ",", "image", ",", "net", ",", "label", ",", "criterion", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "                ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "                    ", "label", "=", "label", "[", "0", ":", "int", "(", "batch_use", ")", "]", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_multilabel_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "outputs", "=", "net", "(", "image", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "sigmoid_method", "(", "outputs", ")", "\n", "reconstruction_loss", "=", "criterion", "(", "outputs", ",", "image", ")", "\n", "loss", "=", "reconstruction_loss", "\n", "error", "=", "1", "\n", "", "", "else", ":", "\n", "                ", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_binary_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ",", "binary_threshold", "=", "0.5", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "train_error", ".", "update", "(", "error", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "\"Train: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "train_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", "+", "\"error: \"", "+", "str", "(", "float", "(", "error", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "", "train_loss_list", ".", "append", "(", "train_loss", ".", "avg", ")", "\n", "train_error_list", ".", "append", "(", "train_error", ".", "avg", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "            ", "for", "i", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "                ", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "float", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "float", "(", ")", "\n", "image_size", "=", "image", ".", "size", "(", ")", "\n", "batch_use", "=", "image_size", "[", "0", "]", "\n", "image", "=", "image", ".", "cuda", "(", ")", "\n", "if", "args", ".", "datasets_name", "==", "'cifar10'", "or", "args", ".", "datasets_name", ".", "startswith", "(", "'VOC'", ")", "or", "args", ".", "datasets_name", "==", "'CUB'", ":", "\n", "                    ", "if", "not", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "                        ", "label", "=", "label", "[", "0", ":", "int", "(", "batch_use", ")", "]", "\n", "label", "=", "label", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_multilabel_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ".", "long", "(", ")", ")", "\n", "", "else", ":", "\n", "                        ", "outputs", "=", "net", "(", "image", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", "\n", "image", "=", "image", "*", "std", ".", "cuda", "(", ")", "\n", "image", "=", "image", "+", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "sigmoid_method", "(", "outputs", ")", "\n", "reconstruction_loss", "=", "criterion", "(", "outputs", ",", "image", ")", "\n", "loss", "=", "reconstruction_loss", "\n", "error", "=", "1", "\n", "", "", "else", ":", "\n", "                    ", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "outputs", "=", "net", "(", "image", ")", "\n", "error", "=", "get_binary_error", "(", "outputs", ",", "label", ".", "long", "(", ")", ",", "binary_threshold", "=", "0.5", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "label", ")", "\n", "", "val_loss", ".", "update", "(", "loss", ".", "data", ".", "cpu", "(", ")", ",", "n", "=", "batch_use", ")", "\n", "val_error", ".", "update", "(", "error", ",", "n", "=", "batch_use", ")", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "                    ", "print", "(", "\"Val: [\"", "+", "str", "(", "i", ")", "+", "\"/\"", "+", "str", "(", "len", "(", "val_loader", ")", ")", "+", "\"] of epoch \"", "+", "str", "(", "epoch", ")", "+", "\"\\n\"", "\n", "+", "\"loss: \"", "+", "str", "(", "float", "(", "loss", ")", ")", "+", "\"\\n\"", "\n", "+", "\"error: \"", "+", "str", "(", "float", "(", "error", ")", ")", "+", "\"\\n\"", "\n", ")", "\n", "", "", "val_loss_list", ".", "append", "(", "val_loss", ".", "avg", ")", "\n", "val_error_list", ".", "append", "(", "val_error", ".", "avg", ")", "\n", "\n", "", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "args", ".", "net_id", ")", "+", "\".png\"", ")", "\n", "plot_loss_error", "(", "train_loss_list", ",", "val_loss_list", ",", "train_error_list", ",", "val_error_list", ",", "plot_result_path", ")", "\n", "save_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_list_\"", "+", "str", "(", "epoch", ")", "+", "\".bin\"", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "save_net_path", ")", "\n", "torch", ".", "save", "(", "[", "train_loss_list", ",", "train_error_list", ",", "val_loss_list", ",", "val_error_list", "]", ",", "save_list_path", ")", "\n", "\n", "", "final_error", "=", "val_error_list", "[", "len", "(", "val_error_list", ")", "-", "1", "]", "\n", "result_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'result.csv'", ")", "\n", "result_item", "=", "[", "str", "(", "args", ".", "net_id", ")", ",", "str", "(", "final_error", ")", "]", "\n", "save_csv_result", "(", "result_path", ",", "result_item", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_capability_jacobian.step_capability_jac": [[25, 129], ["os.path.join", "os.path.join", "os.path.join", "make_dir", "os.path.join", "os.path.join", "os.path.join", "make_dir", "get_mean_std", "get_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.nn.MSELoss().cuda", "torch.nn.MSELoss().cuda", "torch.nn.ReLU", "os.path.join", "os.path.join", "make_dir", "make_dir", "make_dir", "get_net", "args.task_name.startswith", "get_net.load_state_dict", "get_net.eval", "args.net_name.endswith", "torch.nn.Upsample", "torch.nn.AdaptiveAvgPool2d", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "get_num_layer", "torch.nn.MSELoss", "torch.nn.MSELoss", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "image.cuda.cuda", "print", "range", "str", "str", "mean.expand().cuda", "std.cuda", "get_layer_name", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "os.path.join", "make_dir", "image.cuda.requires_grad_", "get_feature", "nn.ReLU.", "relu_method.sum", "origin_feature.sum.backward", "nn.Upsample.detach", "[].data.abs().cpu", "os.path.join", "plot_feature", "torch.save", "torch.save", "str", "str", "os.path.join", "str", "str", "mean.expand", "str", "str", "str", "nn.Upsample.", "[].data.abs", "image.cuda.size", "nn.AdaptiveAvgPool2d.", "upsample_method().detach.mean"], "function", ["None"], ["def", "step_capability_jac", "(", "root_path", ",", "args", ")", ":", "\n", "# hyperparameters", "\n", "    ", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'data'", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "make_dir", "(", "plot_path", ")", "\n", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "data_datasets_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "make_dir", "(", "plot_dataset_path", ")", "\n", "mean", ",", "std", "=", "get_mean_std", "(", "args", ".", "datasets_name", ")", "\n", "\n", "# Get data", "\n", "train_set", "=", "get_datasets", "(", "args", ".", "datasets_name", ",", "data_path", "=", "data_datasets_path", ",", "train", "=", "False", ",", "dataset_mode", "=", "1", ")", "\n", "# set dataset_mode to 1, and we get postive samples.", "\n", "if", "args", ".", "capability_if_shuffle", "==", "1", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "shuffle", ")", "\n", "# train one image and get one sigma.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", "size_average", "=", "True", ")", ".", "cuda", "(", ")", "\n", "relu_method", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "make_dir", "(", "plot_dataset_net_path", ")", "\n", "\n", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_jac'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_jac'", ")", "\n", "", "else", ":", "\n", "        ", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_jac'", ")", "\n", "plot_capability_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_jac'", ")", "\n", "", "make_dir", "(", "capability_path", ")", "\n", "make_dir", "(", "plot_capability_path", ")", "\n", "net", "=", "get_net", "(", "net_name", "=", "args", ".", "net_name", ",", "gpu_id", "=", "args", ".", "gpu_id", ",", "model_mode", "=", "args", ".", "net_mode", ",", "out_planes", "=", "args", ".", "out_planes", ",", "\n", "if_pretrained", "=", "args", ".", "net_if_pretrained", ")", "\n", "if", "args", ".", "task_name", ".", "startswith", "(", "'compressed'", ")", ":", "\n", "        ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_compressed'", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "'model_'", "+", "str", "(", "args", ".", "net_compressed_id", ")", "+", "'.bin'", ")", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "capability_if_multiepoch", "==", "1", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_multiepoch'", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "capability_multiepoch_epoch_num", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "else", ":", "\n", "            ", "net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_'", "+", "str", "(", "args", ".", "task_name", ")", ")", "\n", "net_sub_path", "=", "os", ".", "path", ".", "join", "(", "net_path", ",", "str", "(", "args", ".", "net_id", ")", ")", "\n", "load_net_path", "=", "os", ".", "path", ".", "join", "(", "net_sub_path", ",", "\"net_\"", "+", "str", "(", "args", ".", "net_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "", "", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "load_net_path", ")", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "args", ".", "net_name", ".", "endswith", "(", "'_autoencoder'", ")", ":", "\n", "        ", "net", "=", "net", ".", "encoder", "\n", "\n", "", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "upsample_method", "=", "nn", ".", "Upsample", "(", "size", "=", "args", ".", "image_size", ",", "mode", "=", "'nearest'", ")", "\n", "downsample_method", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "args", ".", "capability_sigma_size", ",", "args", ".", "capability_sigma_size", ")", ")", "\n", "if", "args", ".", "capability_num_layer", "==", "0", ":", "\n", "        ", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "get_all_layer", ")", "\n", "", "else", ":", "\n", "        ", "num_layer", "=", "args", ".", "capability_num_layer", "\n", "\n", "", "for", "batch_id", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "batch_id", "%", "50", "!=", "0", ":", "\n", "            ", "continue", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id > args.capability_num_batch and batch_id % args.batch_interval_num == 0:", "\n", "# if batch_id < args.capability_num_batch*args.batch_interval_num and batch_id % args.batch_interval_num == 0:", "\n", "", "if", "batch_id", "<", "args", ".", "capability_num_batch", ":", "\n", "            ", "image", "=", "image", ".", "cuda", "(", ")", "\n", "image", "=", "image", "-", "mean", ".", "expand", "(", "image", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "image", "=", "image", "/", "std", ".", "cuda", "(", ")", "\n", "print", "(", "'------'", "+", "str", "(", "batch_id", ")", "+", "'------'", ")", "\n", "for", "layer_id", "in", "range", "(", "args", ".", "capability_start_layer", ",", "args", ".", "capability_start_layer", "+", "num_layer", ")", ":", "\n", "                ", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "capability_data_path", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "data_result_path", ")", "\n", "plot_capability_data_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "make_dir", "(", "plot_capability_data_path", ")", "\n", "plot_result_path", "=", "os", ".", "path", ".", "join", "(", "plot_capability_data_path", ",", "layer_name", ")", "\n", "make_dir", "(", "plot_result_path", ")", "\n", "\n", "image", ".", "requires_grad_", "(", ")", "\n", "origin_feature", "=", "get_feature", "(", "image", ",", "net", ",", "args", ".", "net_name", ",", "model_mode", "=", "args", ".", "net_mode", ",", "\n", "layer_id", "=", "layer_id", ",", "get_all_layer", "=", "get_all_layer", ")", "\n", "\n", "origin_feature", "=", "relu_method", "(", "origin_feature", ")", "\n", "\n", "feature_sum", "=", "origin_feature", ".", "sum", "(", ")", "\n", "feature_sum", ".", "backward", "(", ")", "\n", "\n", "jac_grad", "=", "image", ".", "grad", "\n", "\n", "jac_grad", "=", "upsample_method", "(", "downsample_method", "(", "jac_grad", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", ")", ")", ".", "detach", "(", ")", "\n", "\n", "visual_data", "=", "jac_grad", "[", "0", "]", "[", "0", "]", ".", "data", ".", "abs", "(", ")", ".", "cpu", "(", ")", "\n", "visual_path", "=", "os", ".", "path", ".", "join", "(", "plot_result_path", ",", "'jacobian.png'", ")", "\n", "plot_feature", "(", "visual_data", ",", "visual_path", ")", "\n", "torch", ".", "save", "(", "jac_grad", ",", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"jacobian.bin\"", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.haotiansustc_deepinfo.None.step_result.step_result": [[21, 124], ["get_num_layer", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.zeros", "args.datasets_name.endswith", "range", "numpy.mean", "print", "print", "print", "print", "print", "print", "print", "numpy.zeros", "range", "numpy.save", "os.path.join", "plot_result", "print", "save_csv_result", "numpy.zeros", "print", "range", "print", "os.path.join", "str", "str", "str", "str", "output_mean_result.append", "args.datasets_name.endswith", "numpy.mean", "print", "numpy.save", "os.path.join", "plot_result", "print", "save_csv_result", "str", "get_layer_name", "print", "os.path.join", "os.path.join", "os.path.join", "torch.load", "torch.load", "numpy.zeros", "range", "numpy.argmin", "range", "str", "str", "str", "str", "float", "os.path.join", "str", "str", "str", "str", "output_background_foreground_result.append", "abs", "str", "float", "str", "print", "os.path.join", "os.path.join", "numpy.log", "numpy.mean", "str", "str", "str", "float", "str", "numpy.zeros", "print", "str", "str", "numpy.load", "numpy.load"], "function", ["None"], ["def", "step_result", "(", "root_path", ",", "args", ",", "x_or_y", ")", ":", "\n", "\n", "    ", "get_all_layer", "=", "False", "\n", "if", "args", ".", "capability_get_all_layer", "==", "1", ":", "\n", "        ", "get_all_layer", "=", "True", "\n", "", "num_layer", "=", "get_num_layer", "(", "args", ".", "net_name", ",", "args", ".", "capability_get_all_layer", ")", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'plot'", ")", "\n", "plot_dataset_path", "=", "os", ".", "path", ".", "join", "(", "plot_path", ",", "args", ".", "datasets_name", ")", "\n", "plot_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "plot_dataset_path", ",", "args", ".", "net_name", ")", "\n", "\n", "experiment_path", "=", "os", ".", "path", ".", "join", "(", "root_path", ",", "'experiment'", ")", "\n", "result_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "'result.csv'", ")", "\n", "experiment_dataset_path", "=", "os", ".", "path", ".", "join", "(", "experiment_path", ",", "args", ".", "datasets_name", ")", "\n", "experiment_dataset_net_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_path", ",", "args", ".", "net_name", ")", "\n", "capability_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "'net_capability_'", "+", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "x_or_y", ")", ")", "\n", "output_mean", "=", "np", ".", "zeros", "(", "(", "args", ".", "capability_num_batch", ",", "num_layer", ")", ")", "\n", "output_mean", "=", "output_mean", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", ":", "\n", "        ", "output_background_foreground", "=", "np", ".", "zeros", "(", "(", "args", ".", "capability_num_batch", ",", "num_layer", ")", ")", "\n", "\n", "", "for", "batch_id", "in", "range", "(", "0", ",", "args", ".", "capability_num_batch", ")", ":", "\n", "        ", "if", "batch_id", "%", "5", "!=", "0", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'-------'", ")", "\n", "for", "layer_id", "in", "range", "(", "args", ".", "capability_start_layer", ",", "args", ".", "capability_start_layer", "+", "num_layer", ")", ":", "\n", "            ", "layer_name", "=", "get_layer_name", "(", "args", ".", "net_name", ",", "layer_id", ",", "get_all_layer", ")", "\n", "print", "(", "layer_name", ")", "\n", "capability_data_path", "=", "os", ".", "path", ".", "join", "(", "capability_path", ",", "'batch_'", "+", "str", "(", "batch_id", ")", ")", "\n", "data_result_path", "=", "os", ".", "path", ".", "join", "(", "capability_data_path", ",", "layer_name", ")", "\n", "save_list_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "\"capability_list_\"", "+", "str", "(", "args", ".", "capability_epoch", "-", "1", ")", "+", "\".bin\"", ")", "\n", "capability_list", "=", "torch", ".", "load", "(", "save_list_path", ")", "\n", "feature_loss_list", "=", "capability_list", "[", "0", "]", "\n", "feature_capability", "=", "np", ".", "zeros", "(", "(", "args", ".", "capability_epoch", ")", ")", "\n", "for", "epoch_id", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "                ", "feature_capability", "[", "epoch_id", "]", "=", "abs", "(", "float", "(", "feature_loss_list", "[", "epoch_id", "]", ")", "-", "args", ".", "result_distance_clip", ")", "\n", "# we choose the epoch where the least distance between feature_loss and DISTANCE_CLIP.", "\n", "", "best_epoch_id", "=", "np", ".", "argmin", "(", "feature_capability", "[", ":", "]", ")", "\n", "\n", "for", "epoch_id", "in", "range", "(", "0", ",", "args", ".", "capability_epoch", ")", ":", "\n", "                ", "if", "epoch_id", "==", "best_epoch_id", ":", "\n", "                    ", "print", "(", "epoch_id", ")", "\n", "sigma_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'sigma_'", "+", "str", "(", "epoch_id", ")", "+", "'.npy'", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "data_result_path", ",", "'image_'", "+", "str", "(", "epoch_id", ")", "+", "'.npy'", ")", "\n", "if", "x_or_y", "==", "'x'", ":", "\n", "                        ", "entropy_capability", "=", "np", ".", "load", "(", "sigma_path", ")", "[", "0", "]", "[", "0", "]", "\n", "", "elif", "x_or_y", "==", "'y'", ":", "\n", "                        ", "entropy_capability", "=", "np", ".", "load", "(", "image_path", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                        ", "entropy_capability", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ")", "\n", "print", "(", "'the suffix of task name must be \"_x\" or \"_y\" Error'", ")", "\n", "", "best_capability", "=", "np", ".", "log", "(", "entropy_capability", "*", "entropy_capability", "+", "1e-6", ")", "\n", "# plot log(sigma*2) or log(image*2)", "\n", "output_mean", "[", "batch_id", "]", "[", "layer_id", "-", "args", ".", "capability_start_layer", "]", "=", "np", ".", "mean", "(", "best_capability", ")", "\n", "# if args.datasets_name.endswith('_ratio') and args.task_name != 'visual':", "\n", "#     best_capability = torch.from_numpy(best_capability).view(1,1,args.capability_sigma_size,args.capability_sigma_size)", "\n", "#     small_bounding_capability = best_capability[:,:,int(args.capability_sigma_size/6):int(args.capability_sigma_size*5/6),", "\n", "#                           int(args.capability_sigma_size/6):int(args.capability_sigma_size*5/6)]", "\n", "#     background_size = args.capability_sigma_size*args.capability_sigma_size-small_bounding_capability.size(2)*small_bounding_capability.size(3)", "\n", "#     background_entropy = torch.sum(best_capability)/background_size - torch.sum(small_bounding_capability)/background_size", "\n", "#     foreground_entropy = torch.mean(small_bounding_capability)", "\n", "#     output_background_foreground[batch_id][layer_id-1] = background_entropy - foreground_entropy", "\n", "\n", "\n", "\n", "", "", "", "", "for", "item", "in", "output_mean", ":", "\n", "        ", "print", "(", "item", ")", "\n", "", "output_mean", "=", "np", ".", "mean", "(", "output_mean", ",", "axis", "=", "0", ")", "\n", "print", "(", "'----show results-----'", ")", "\n", "print", "(", "'datasets_name: '", "+", "str", "(", "args", ".", "datasets_name", ")", ")", "\n", "print", "(", "'net_name: '", "+", "str", "(", "args", ".", "net_name", ")", ")", "\n", "print", "(", "'task_name: '", "+", "str", "(", "args", ".", "task_name", ")", ")", "\n", "print", "(", "'x_or_y: '", "+", "str", "(", "x_or_y", ")", ")", "\n", "print", "(", "'result:'", ")", "\n", "print", "(", "output_mean", ")", "\n", "\n", "output_new_mean", "=", "np", ".", "zeros", "(", "num_layer", ")", "\n", "output_new_mean", "[", "0", "]", "=", "output_mean", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "num_layer", ")", ":", "\n", "        ", "if", "output_mean", "[", "i", "]", "<", "output_new_mean", "[", "i", "-", "1", "]", ":", "\n", "            ", "output_new_mean", "[", "i", "]", "=", "output_new_mean", "[", "i", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "output_new_mean", "[", "i", "]", "=", "output_mean", "[", "i", "]", "\n", "", "", "output_mean", "=", "output_new_mean", "\n", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "x_or_y", ")", "+", "'_entropy'", ")", ",", "output_mean", ")", "\n", "plot_mean_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "x_or_y", ")", "+", "'_entropy.png'", ")", "\n", "plot_result", "(", "output_mean", ",", "plot_mean_path", ")", "\n", "output_mean_result", "=", "[", "str", "(", "args", ".", "datasets_name", ")", ",", "str", "(", "args", ".", "net_name", ")", ",", "str", "(", "args", ".", "task_name", ")", ",", "str", "(", "x_or_y", ")", ",", "'mean'", "]", "\n", "for", "item", "in", "output_mean", ":", "\n", "        ", "output_mean_result", ".", "append", "(", "float", "(", "item", ")", ")", "\n", "", "print", "(", "output_mean_result", ")", "\n", "save_csv_result", "(", "result_path", ",", "output_mean_result", ")", "\n", "if", "args", ".", "datasets_name", ".", "endswith", "(", "'_ratio'", ")", "and", "args", ".", "task_name", "!=", "'visual'", ":", "\n", "        ", "output_background_foreground", "=", "np", ".", "mean", "(", "output_background_foreground", ",", "axis", "=", "0", ")", "\n", "print", "(", "output_background_foreground", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "x_or_y", ")", "+", "'_background_foreground'", ")", ",", "output_background_foreground", ")", "\n", "plot_background_foreground_path", "=", "os", ".", "path", ".", "join", "(", "experiment_dataset_net_path", ",", "args", ".", "task_name", "+", "'_'", "+", "str", "(", "x_or_y", ")", "+", "'_background_foreground.png'", ")", "\n", "plot_result", "(", "output_background_foreground", ",", "plot_background_foreground_path", ")", "\n", "output_background_foreground_result", "=", "[", "str", "(", "args", ".", "datasets_name", ")", ",", "str", "(", "args", ".", "net_name", ")", ",", "str", "(", "args", ".", "task_name", ")", ",", "str", "(", "x_or_y", ")", ",", "'background_foreground'", "]", "\n", "for", "item", "in", "output_background_foreground", ":", "\n", "            ", "output_background_foreground_result", ".", "append", "(", "float", "(", "item", ")", ")", "\n", "", "print", "(", "output_background_foreground_result", ")", "\n", "save_csv_result", "(", "result_path", ",", "output_background_foreground_result", ")", "\n", "\n"]]}