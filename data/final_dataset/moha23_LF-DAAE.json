{"home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.make_mat": [[5, 13], ["sorted", "os.listdir", "f.startswith", "Data_path_mat.append"], "function", ["None"], ["def", "make_mat", "(", "path1", ")", ":", "\n", "    ", "\"\"\"Read folder paths to a list\"\"\"", "\n", "Data_folder", "=", "sorted", "(", "os", ".", "listdir", "(", "path1", ")", ")", "\n", "Data_path_mat", "=", "[", "]", "\n", "for", "f", "in", "Data_folder", ":", "\n", "        ", "if", "not", "f", ".", "startswith", "(", "'.'", ")", ":", "\n", "            ", "Data_path_mat", ".", "append", "(", "path1", "+", "'/'", "+", "f", ")", "\n", "", "", "return", "(", "Data_path_mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.select_views": [[14, 24], ["sorted", "os.path.basename", "os.path.basename.split", "str", "sorted.append", "int", "[].split", "f.split"], "function", ["None"], ["", "def", "select_views", "(", "x_train_images_path", ",", "row", ")", ":", "\n", "    ", "\"\"\"Select views belonging to given row.\"\"\"", "\n", "finalViews", "=", "[", "]", "\n", "for", "view", "in", "x_train_images_path", ":", "\n", "        ", "name", "=", "os", ".", "path", ".", "basename", "(", "view", ")", "\n", "namelist", "=", "name", ".", "split", "(", "'_'", ")", "\n", "if", "namelist", "[", "0", "]", "==", "str", "(", "row", ")", ":", "\n", "            ", "finalViews", ".", "append", "(", "view", ")", "\n", "", "", "finalViews", "=", "sorted", "(", "finalViews", ",", "key", "=", "lambda", "f", ":", "int", "(", "(", "f", ".", "split", "(", "'_'", ")", "[", "1", "]", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ")", "\n", "return", "(", "finalViews", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.read_image": [[25, 32], ["tensorflow.io.read_file", "tensorflow.image.decode_image", "tensorflow.cast"], "function", ["None"], ["", "def", "read_image", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Loads and returns a PNG image file with values in [0..1].\"\"\"", "\n", "string", "=", "tf", ".", "io", ".", "read_file", "(", "filename", ")", "\n", "image", "=", "tf", ".", "image", ".", "decode_image", "(", "string", ",", "channels", "=", "3", ")", "\n", "image", "=", "tf", ".", "cast", "(", "image", ",", "tf", ".", "float32", ")", "\n", "image", "/=", "255", "\n", "return", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.quantize_image": [[33, 38], ["tensorflow.round", "tensorflow.saturate_cast"], "function", ["None"], ["", "def", "quantize_image", "(", "image", ")", ":", "\n", "    ", "\"\"\"Convert [0..1] float image to [0..255] uint8.\"\"\"", "\n", "image", "=", "tf", ".", "round", "(", "image", "*", "255", ")", "\n", "image", "=", "tf", ".", "saturate_cast", "(", "image", ",", "tf", ".", "uint8", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.read_image_test": [[39, 56], ["utils.read_image", "numpy.shape"], "function", ["home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.read_image"], ["", "def", "read_image_test", "(", "path1", ")", ":", "\n", "    ", "\"\"\"Loads and returns a PNG image file with values in [0..1].\"\"\"", "\n", "img", "=", "read_image", "(", "path1", ")", "\n", "[", "h", ",", "w", ",", "c", "]", "=", "np", ".", "shape", "(", "img", ")", "\n", "if", "h", "!=", "512", ":", "\n", "        ", "if", "h", "!=", "434", ":", "\n", "            ", "if", "(", "w", "-", "528", ")", "%", "2", "==", "0", ":", "\n", "                ", "img", "=", "img", "[", ":", ",", "6", ":", "-", "6", ",", ":", "]", "\n", "", "else", ":", "\n", "                ", "img", "=", "img", "[", ":", ",", "7", ":", "-", "6", ",", ":", "]", "\n", "", "if", "(", "h", "-", "352", ")", "%", "2", "==", "0", ":", "\n", "                ", "img", "=", "img", "[", "12", ":", "-", "12", ",", ":", ",", ":", "]", "\n", "", "else", ":", "\n", "                ", "img", "=", "img", "[", "12", ":", "-", "11", ",", ":", ",", ":", "]", "\n", "", "", "else", ":", "\n", "            ", "img", "=", "img", "[", "1", ":", "-", "1", ",", "1", ":", ",", ":", "]", "\n", "", "", "return", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.save_img": [[57, 66], ["tensorflow.squeeze", "tensorflow.image.encode_png", "tensorflow.io.write_file", "utils.quantize_image", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.quantize_image"], ["", "def", "save_img", "(", "path", ",", "org", ",", "img", ",", "row", ",", "col", ")", ":", "\n", "    ", "\"\"\"Saves an image to a PNG file.\"\"\"", "\n", "img", "=", "tf", ".", "squeeze", "(", "quantize_image", "(", "img", ")", ")", "\n", "if", "org", ":", "\n", "        ", "filename", "=", "path", "+", "'/org_'", "+", "str", "(", "row", ")", "+", "'_'", "+", "str", "(", "col", ")", "+", "'.png'", "\n", "", "else", ":", "\n", "        ", "filename", "=", "path", "+", "'/rec_'", "+", "str", "(", "row", ")", "+", "'_'", "+", "str", "(", "col", ")", "+", "'.png'", "\n", "", "string", "=", "tf", ".", "image", ".", "encode_png", "(", "img", ")", "\n", "return", "tf", ".", "io", ".", "write_file", "(", "filename", ",", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.preprocess_data": [[67, 86], ["range", "tensorflow.strings.to_number", "tensorflow.math.divide", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.expand_dims", "utils.read_image", "tensorflow.concat", "tensorflow.strings.split", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones", "tensorflow.strings.split"], "function", ["home.repos.pwc.inspect_result.moha23_LF-DAAE.None.utils.read_image"], ["", "def", "preprocess_data", "(", "images_path", ")", ":", "\n", "    ", "\"\"\"Read data and create feature tensors.\"\"\"", "\n", "for", "i", "in", "range", "(", "8", ")", ":", "\n", "        ", "img", "=", "tf", ".", "expand_dims", "(", "read_image", "(", "images_path", "[", "i", "]", ")", ",", "axis", "=", "0", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "images", "=", "img", "\n", "", "else", ":", "\n", "            ", "images", "=", "tf", ".", "concat", "(", "(", "images", ",", "img", ")", ",", "axis", "=", "0", ")", "\n", "", "", "row", "=", "tf", ".", "strings", ".", "to_number", "(", "tf", ".", "strings", ".", "split", "(", "tf", ".", "strings", ".", "split", "(", "images_path", "[", "0", "]", ",", "'_'", ")", "[", "0", "]", ",", "'/'", ")", "[", "-", "1", "]", ")", "\n", "pos_x", "=", "tf", ".", "math", ".", "divide", "(", "row", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ",", "5", ")", "\n", "batchfeature1", "=", "tf", ".", "stack", "(", "(", "images", "[", "0", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "1", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature2", "=", "tf", ".", "stack", "(", "(", "images", "[", "1", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "2", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature3", "=", "tf", ".", "stack", "(", "(", "images", "[", "2", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "3", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature4", "=", "tf", ".", "stack", "(", "(", "images", "[", "3", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "4", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature5", "=", "tf", ".", "stack", "(", "(", "images", "[", "4", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "5", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature6", "=", "tf", ".", "stack", "(", "(", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "6", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature7", "=", "tf", ".", "stack", "(", "(", "images", "[", "6", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "7", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "batchfeature8", "=", "tf", ".", "stack", "(", "(", "images", "[", "7", ",", ":", ",", ":", ",", ":", "]", ",", "images", "[", "5", ",", ":", ",", ":", ",", ":", "]", ",", "pos_x", ",", "(", "8", "/", "5", ")", "*", "tf", ".", "ones", "(", "[", "64", ",", "64", ",", "3", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "return", "(", "images", ",", "batchfeature1", ",", "batchfeature2", ",", "batchfeature3", ",", "batchfeature4", ",", "batchfeature5", ",", "batchfeature6", ",", "batchfeature7", ",", "batchfeature8", ")", "\n", "", ""]]}