{"home.repos.pwc.inspect_result.facebookresearch_deit.None.models.DistilledVisionTransformer.__init__": [[21, 31], ["timm.models.vision_transformer.VisionTransformer.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.trunc_normal_", "timm.models.layers.trunc_normal_", "models.DistilledVisionTransformer.head_dist.apply", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "dist_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "self", ".", "embed_dim", ")", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "self", ".", "pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", "+", "2", ",", "self", ".", "embed_dim", ")", ")", "\n", "self", ".", "head_dist", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "num_classes", ")", "if", "self", ".", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "dist_token", ",", "std", "=", ".02", ")", "\n", "trunc_normal_", "(", "self", ".", "pos_embed", ",", "std", "=", ".02", ")", "\n", "self", ".", "head_dist", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.DistilledVisionTransformer.forward_features": [[32, 50], ["models.DistilledVisionTransformer.patch_embed", "models.DistilledVisionTransformer.cls_token.expand", "models.DistilledVisionTransformer.dist_token.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.DistilledVisionTransformer.pos_drop", "models.DistilledVisionTransformer.norm", "blk"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "# taken from https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/vision_transformer.py", "\n", "# with slight modifications to add the dist_token", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "cls_tokens", "=", "self", ".", "cls_token", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "# stole cls_tokens impl from Phil Wang, thanks", "\n", "dist_token", "=", "self", ".", "dist_token", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "cls_tokens", ",", "dist_token", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "x", "+", "self", ".", "pos_embed", "\n", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "return", "x", "[", ":", ",", "0", "]", ",", "x", "[", ":", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.DistilledVisionTransformer.forward": [[51, 60], ["models.DistilledVisionTransformer.forward_features", "models.DistilledVisionTransformer.head", "models.DistilledVisionTransformer.head_dist"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "x_dist", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x_dist", "=", "self", ".", "head_dist", "(", "x_dist", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "x", ",", "x_dist", "\n", "", "else", ":", "\n", "# during inference, return the average of both classifier predictions", "\n", "            ", "return", "(", "x", "+", "x_dist", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_tiny_patch16_224": [[62, 75], ["timm.models.vision_transformer.VisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "timm.models.vision_transformer.VisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "", "", "@", "register_model", "\n", "def", "deit_tiny_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "12", ",", "num_heads", "=", "3", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_tiny_patch16_224-a1311bcf.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_small_patch16_224": [[77, 90], ["timm.models.vision_transformer.VisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "timm.models.vision_transformer.VisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "12", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_small_patch16_224-cd65a155.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_base_patch16_224": [[92, 105], ["timm.models.vision_transformer.VisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "timm.models.vision_transformer.VisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_base_patch16_224-b5f2ef4d.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_tiny_distilled_patch16_224": [[107, 120], ["models.DistilledVisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "DistilledVisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_tiny_distilled_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "DistilledVisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "12", ",", "num_heads", "=", "3", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_tiny_distilled_patch16_224-b40b3cf7.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_small_distilled_patch16_224": [[122, 135], ["models.DistilledVisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "DistilledVisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_distilled_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "DistilledVisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "12", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_small_distilled_patch16_224-649709d9.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_base_distilled_patch16_224": [[137, 150], ["models.DistilledVisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "DistilledVisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_distilled_patch16_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "DistilledVisionTransformer", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_224-df68dfff.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_base_patch16_384": [[152, 165], ["timm.models.vision_transformer.VisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "timm.models.vision_transformer.VisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_384", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_base_patch16_384-8de9b5d1.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models.deit_base_distilled_patch16_384": [[167, 180], ["models.DistilledVisionTransformer", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "DistilledVisionTransformer.load_state_dict", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_distilled_patch16_384", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "DistilledVisionTransformer", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/deit_base_distilled_patch16_384-d0272ac0.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.GaussianBlur.__init__": [[28, 32], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.1", ",", "radius_min", "=", "0.1", ",", "radius_max", "=", "2.", ")", ":", "\n", "        ", "self", ".", "prob", "=", "p", "\n", "self", ".", "radius_min", "=", "radius_min", "\n", "self", ".", "radius_max", "=", "radius_max", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.GaussianBlur.__call__": [[33, 44], ["img.filter.filter.filter", "random.random", "PIL.ImageFilter.GaussianBlur", "random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "do_it", "=", "random", ".", "random", "(", ")", "<=", "self", ".", "prob", "\n", "if", "not", "do_it", ":", "\n", "            ", "return", "img", "\n", "\n", "", "img", "=", "img", ".", "filter", "(", "\n", "ImageFilter", ".", "GaussianBlur", "(", "\n", "radius", "=", "random", ".", "uniform", "(", "self", ".", "radius_min", ",", "self", ".", "radius_max", ")", "\n", ")", "\n", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.Solarization.__init__": [[49, 51], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.2", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.Solarization.__call__": [[52, 57], ["random.random", "PIL.ImageOps.solarize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "ImageOps", ".", "solarize", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.gray_scale.__init__": [[62, 65], ["torchvision.transforms.Grayscale"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.2", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "self", ".", "transf", "=", "transforms", ".", "Grayscale", "(", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.gray_scale.__call__": [[66, 71], ["random.random", "augment.gray_scale.transf"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "self", ".", "transf", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.horizontal_flip.__init__": [[78, 81], ["torchvision.transforms.RandomHorizontalFlip"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.2", ",", "activate_pred", "=", "False", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "self", ".", "transf", "=", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.horizontal_flip.__call__": [[82, 87], ["random.random", "augment.horizontal_flip.transf"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "self", ".", "transf", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.new_data_aug_generator": [[90, 124], ["torchvision.transforms.Compose", "torchvision.transforms.RandomChoice", "secondary_tfl.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "timm.data.transforms.RandomResizedCropAndInterpolation", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ColorJitter", "augment.gray_scale", "augment.Solarization", "augment.GaussianBlur", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "", "", "def", "new_data_aug_generator", "(", "args", "=", "None", ")", ":", "\n", "    ", "img_size", "=", "args", ".", "input_size", "\n", "remove_random_resized_crop", "=", "args", ".", "src", "\n", "mean", ",", "std", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "primary_tfl", "=", "[", "]", "\n", "scale", "=", "(", "0.08", ",", "1.0", ")", "\n", "interpolation", "=", "'bicubic'", "\n", "if", "remove_random_resized_crop", ":", "\n", "        ", "primary_tfl", "=", "[", "\n", "transforms", ".", "Resize", "(", "img_size", ",", "interpolation", "=", "3", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "img_size", ",", "padding", "=", "4", ",", "padding_mode", "=", "'reflect'", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "primary_tfl", "=", "[", "\n", "RandomResizedCropAndInterpolation", "(", "\n", "img_size", ",", "scale", "=", "scale", ",", "interpolation", "=", "interpolation", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", "\n", "]", "\n", "\n", "\n", "", "secondary_tfl", "=", "[", "transforms", ".", "RandomChoice", "(", "[", "gray_scale", "(", "p", "=", "1.0", ")", ",", "\n", "Solarization", "(", "p", "=", "1.0", ")", ",", "\n", "GaussianBlur", "(", "p", "=", "1.0", ")", "]", ")", "]", "\n", "\n", "if", "args", ".", "color_jitter", "is", "not", "None", "and", "not", "args", ".", "color_jitter", "==", "0", ":", "\n", "        ", "secondary_tfl", ".", "append", "(", "transforms", ".", "ColorJitter", "(", "args", ".", "color_jitter", ",", "args", ".", "color_jitter", ",", "args", ".", "color_jitter", ")", ")", "\n", "", "final_tfl", "=", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "torch", ".", "tensor", "(", "mean", ")", ",", "\n", "std", "=", "torch", ".", "tensor", "(", "std", ")", ")", "\n", "]", "\n", "return", "transforms", ".", "Compose", "(", "primary_tfl", "+", "secondary_tfl", "+", "final_tfl", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.engine.train_one_epoch": [[19, 67], ["model.train", "utils.MetricLogger", "utils.MetricLogger.add_meter", "utils.MetricLogger.log_every", "utils.MetricLogger.synchronize_between_processes", "print", "utils.SmoothedValue", "samples.to.to", "targets.gt().type.to", "criterion.item", "optimizer.zero_grad", "loss_scaler", "torch.cuda.synchronize", "utils.MetricLogger.update", "utils.MetricLogger.update", "mixup_fn", "targets.gt().type.gt().type", "torch.cuda.amp.autocast", "model", "criterion", "math.isfinite", "print", "sys.exit", "hasattr", "model_ema.update", "utils.MetricLogger.meters.items", "model.parameters", "targets.gt().type.gt"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.add_meter", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.log_every", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.synchronize_between_processes", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update"], ["def", "train_one_epoch", "(", "model", ":", "torch", ".", "nn", ".", "Module", ",", "criterion", ":", "DistillationLoss", ",", "\n", "data_loader", ":", "Iterable", ",", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ",", "\n", "device", ":", "torch", ".", "device", ",", "epoch", ":", "int", ",", "loss_scaler", ",", "max_norm", ":", "float", "=", "0", ",", "\n", "model_ema", ":", "Optional", "[", "ModelEma", "]", "=", "None", ",", "mixup_fn", ":", "Optional", "[", "Mixup", "]", "=", "None", ",", "\n", "set_training_mode", "=", "True", ",", "args", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", "set_training_mode", ")", "\n", "metric_logger", "=", "utils", ".", "MetricLogger", "(", "delimiter", "=", "\"  \"", ")", "\n", "metric_logger", ".", "add_meter", "(", "'lr'", ",", "utils", ".", "SmoothedValue", "(", "window_size", "=", "1", ",", "fmt", "=", "'{value:.6f}'", ")", ")", "\n", "header", "=", "'Epoch: [{}]'", ".", "format", "(", "epoch", ")", "\n", "print_freq", "=", "10", "\n", "\n", "for", "samples", ",", "targets", "in", "metric_logger", ".", "log_every", "(", "data_loader", ",", "print_freq", ",", "header", ")", ":", "\n", "        ", "samples", "=", "samples", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "targets", "=", "targets", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "\n", "if", "mixup_fn", "is", "not", "None", ":", "\n", "            ", "samples", ",", "targets", "=", "mixup_fn", "(", "samples", ",", "targets", ")", "\n", "\n", "", "if", "args", ".", "bce_loss", ":", "\n", "            ", "targets", "=", "targets", ".", "gt", "(", "0.0", ")", ".", "type", "(", "targets", ".", "dtype", ")", "\n", "\n", "", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", ")", ":", "\n", "            ", "outputs", "=", "model", "(", "samples", ")", "\n", "loss", "=", "criterion", "(", "samples", ",", "outputs", ",", "targets", ")", "\n", "\n", "", "loss_value", "=", "loss", ".", "item", "(", ")", "\n", "\n", "if", "not", "math", ".", "isfinite", "(", "loss_value", ")", ":", "\n", "            ", "print", "(", "\"Loss is {}, stopping training\"", ".", "format", "(", "loss_value", ")", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# this attribute is added by timm on one optimizer (adahessian)", "\n", "is_second_order", "=", "hasattr", "(", "optimizer", ",", "'is_second_order'", ")", "and", "optimizer", ".", "is_second_order", "\n", "loss_scaler", "(", "loss", ",", "optimizer", ",", "clip_grad", "=", "max_norm", ",", "\n", "parameters", "=", "model", ".", "parameters", "(", ")", ",", "create_graph", "=", "is_second_order", ")", "\n", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "if", "model_ema", "is", "not", "None", ":", "\n", "            ", "model_ema", ".", "update", "(", "model", ")", "\n", "\n", "", "metric_logger", ".", "update", "(", "loss", "=", "loss_value", ")", "\n", "metric_logger", ".", "update", "(", "lr", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ")", "\n", "# gather the stats from all processes", "\n", "", "metric_logger", ".", "synchronize_between_processes", "(", ")", "\n", "print", "(", "\"Averaged stats:\"", ",", "metric_logger", ")", "\n", "return", "{", "k", ":", "meter", ".", "global_avg", "for", "k", ",", "meter", "in", "metric_logger", ".", "meters", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.engine.evaluate": [[69, 100], ["torch.no_grad", "torch.nn.CrossEntropyLoss", "utils.MetricLogger", "model.eval", "utils.MetricLogger.log_every", "utils.MetricLogger.synchronize_between_processes", "print", "images.to.to", "target.to.to", "timm.utils.accuracy", "utils.MetricLogger.update", "utils.MetricLogger.meters[].update", "utils.MetricLogger.meters[].update", "torch.cuda.amp.autocast", "model", "torch.nn.CrossEntropyLoss.", "acc1.item", "acc5.item", "utils.MetricLogger.meters.items", "criterion.item"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.log_every", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.synchronize_between_processes", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "evaluate", "(", "data_loader", ",", "model", ",", "device", ")", ":", "\n", "    ", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "metric_logger", "=", "utils", ".", "MetricLogger", "(", "delimiter", "=", "\"  \"", ")", "\n", "header", "=", "'Test:'", "\n", "\n", "# switch to evaluation mode", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "for", "images", ",", "target", "in", "metric_logger", ".", "log_every", "(", "data_loader", ",", "10", ",", "header", ")", ":", "\n", "        ", "images", "=", "images", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "\n", "# compute output", "\n", "with", "torch", ".", "cuda", ".", "amp", ".", "autocast", "(", ")", ":", "\n", "            ", "output", "=", "model", "(", "images", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "\n", "batch_size", "=", "images", ".", "shape", "[", "0", "]", "\n", "metric_logger", ".", "update", "(", "loss", "=", "loss", ".", "item", "(", ")", ")", "\n", "metric_logger", ".", "meters", "[", "'acc1'", "]", ".", "update", "(", "acc1", ".", "item", "(", ")", ",", "n", "=", "batch_size", ")", "\n", "metric_logger", ".", "meters", "[", "'acc5'", "]", ".", "update", "(", "acc5", ".", "item", "(", ")", ",", "n", "=", "batch_size", ")", "\n", "# gather the stats from all processes", "\n", "", "metric_logger", ".", "synchronize_between_processes", "(", ")", "\n", "print", "(", "'* Acc@1 {top1.global_avg:.3f} Acc@5 {top5.global_avg:.3f} loss {losses.global_avg:.3f}'", "\n", ".", "format", "(", "top1", "=", "metric_logger", ".", "acc1", ",", "top5", "=", "metric_logger", ".", "acc5", ",", "losses", "=", "metric_logger", ".", "loss", ")", ")", "\n", "\n", "return", "{", "k", ":", "meter", ".", "global_avg", "for", "k", ",", "meter", "in", "metric_logger", ".", "meters", ".", "items", "(", ")", "}", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.samplers.RASampler.__init__": [[16, 37], ["int", "int", "torch.get_world_size", "torch.get_world_size", "torch.get_rank", "torch.get_rank", "ValueError", "math.ceil", "math.floor", "torch.is_available", "torch.is_available", "RuntimeError", "torch.is_available", "torch.is_available", "RuntimeError", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank"], ["def", "__init__", "(", "self", ",", "dataset", ",", "num_replicas", "=", "None", ",", "rank", "=", "None", ",", "shuffle", "=", "True", ",", "num_repeats", ":", "int", "=", "3", ")", ":", "\n", "        ", "if", "num_replicas", "is", "None", ":", "\n", "            ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "num_replicas", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "if", "rank", "is", "None", ":", "\n", "            ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "                ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "", "if", "num_repeats", "<", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"num_repeats should be greater than 0\"", ")", "\n", "", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "num_replicas", "=", "num_replicas", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "num_repeats", "=", "num_repeats", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "num_samples", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "self", ".", "dataset", ")", "*", "self", ".", "num_repeats", "/", "self", ".", "num_replicas", ")", ")", "\n", "self", ".", "total_size", "=", "self", ".", "num_samples", "*", "self", ".", "num_replicas", "\n", "# self.num_selected_samples = int(math.ceil(len(self.dataset) / self.num_replicas))", "\n", "self", ".", "num_selected_samples", "=", "int", "(", "math", ".", "floor", "(", "len", "(", "self", ".", "dataset", ")", "//", "256", "*", "256", "/", "self", ".", "num_replicas", ")", ")", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.samplers.RASampler.__iter__": [[38, 59], ["torch.repeat_interleave().tolist", "torch.repeat_interleave().tolist", "torch.repeat_interleave().tolist", "torch.repeat_interleave().tolist", "iter", "torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator", "torch.Generator.manual_seed", "torch.Generator.manual_seed", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len", "len", "len", "len", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "shuffle", ":", "\n", "# deterministically shuffle based on epoch", "\n", "            ", "g", "=", "torch", ".", "Generator", "(", ")", "\n", "g", ".", "manual_seed", "(", "self", ".", "epoch", ")", "\n", "indices", "=", "torch", ".", "randperm", "(", "len", "(", "self", ".", "dataset", ")", ",", "generator", "=", "g", ")", "\n", "", "else", ":", "\n", "            ", "indices", "=", "torch", ".", "arange", "(", "start", "=", "0", ",", "end", "=", "len", "(", "self", ".", "dataset", ")", ")", "\n", "\n", "# add extra samples to make it evenly divisible", "\n", "", "indices", "=", "torch", ".", "repeat_interleave", "(", "indices", ",", "repeats", "=", "self", ".", "num_repeats", ",", "dim", "=", "0", ")", ".", "tolist", "(", ")", "\n", "padding_size", ":", "int", "=", "self", ".", "total_size", "-", "len", "(", "indices", ")", "\n", "if", "padding_size", ">", "0", ":", "\n", "            ", "indices", "+=", "indices", "[", ":", "padding_size", "]", "\n", "", "assert", "len", "(", "indices", ")", "==", "self", ".", "total_size", "\n", "\n", "# subsample", "\n", "indices", "=", "indices", "[", "self", ".", "rank", ":", "self", ".", "total_size", ":", "self", ".", "num_replicas", "]", "\n", "assert", "len", "(", "indices", ")", "==", "self", ".", "num_samples", "\n", "\n", "return", "iter", "(", "indices", "[", ":", "self", ".", "num_selected_samples", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.samplers.RASampler.__len__": [[60, 62], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_selected_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.samplers.RASampler.set_epoch": [[63, 65], ["None"], "methods", ["None"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "epoch", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.Affine.__init__": [[17, 21], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "dim", ")", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.Affine.forward": [[22, 24], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "alpha", "*", "x", "+", "self", ".", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.layers_scale_mlp_blocks.__init__": [[27, 36], ["torch.Module.__init__", "resmlp_models.Affine", "torch.Linear", "torch.Linear", "resmlp_models.Affine", "timm.models.vision_transformer.Mlp", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "int", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "drop", "=", "0.", ",", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "init_values", "=", "1e-4", ",", "num_patches", "=", "196", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "Affine", "(", "dim", ")", "\n", "self", ".", "attn", "=", "nn", ".", "Linear", "(", "num_patches", ",", "num_patches", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "Affine", "(", "dim", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "int", "(", "4.0", "*", "dim", ")", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.layers_scale_mlp_blocks.forward": [[37, 41], ["resmlp_models.layers_scale_mlp_blocks.drop_path", "resmlp_models.layers_scale_mlp_blocks.drop_path", "resmlp_models.layers_scale_mlp_blocks.attn().transpose", "resmlp_models.layers_scale_mlp_blocks.mlp", "resmlp_models.layers_scale_mlp_blocks.norm2", "resmlp_models.layers_scale_mlp_blocks.attn", "resmlp_models.layers_scale_mlp_blocks.norm1().transpose", "resmlp_models.layers_scale_mlp_blocks.norm1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models.__init__": [[45, 75], ["torch.Module.__init__", "Patch_layer", "torch.ModuleList", "torch.ModuleList", "resmlp_models.Affine", "resmlp_models.resmlp_models.apply", "dict", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "int", "range", "resmlp_models.layers_scale_mlp_blocks", "range"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "drop_rate", "=", "0.", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "drop_path_rate", "=", "0.0", ",", "init_scale", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_features", "=", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "patch_embed", "=", "Patch_layer", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "int", "(", "in_chans", ")", ",", "embed_dim", "=", "embed_dim", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "dpr", "=", "[", "drop_path_rate", "for", "i", "in", "range", "(", "depth", ")", "]", "\n", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "layers_scale_mlp_blocks", "(", "\n", "dim", "=", "embed_dim", ",", "drop", "=", "drop_rate", ",", "drop_path", "=", "dpr", "[", "i", "]", ",", "\n", "act_layer", "=", "act_layer", ",", "init_values", "=", "init_scale", ",", "\n", "num_patches", "=", "num_patches", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "\n", "self", ".", "norm", "=", "Affine", "(", "embed_dim", ")", "\n", "\n", "\n", "\n", "self", ".", "feature_info", "=", "[", "dict", "(", "num_chs", "=", "embed_dim", ",", "reduction", "=", "0", ",", "module", "=", "'head'", ")", "]", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models._init_weights": [[76, 84], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models.get_classifier": [[87, 89], ["None"], "methods", ["None"], ["", "", "def", "get_classifier", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "head", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models.reset_classifier": [[90, 93], ["torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity"], "methods", ["None"], ["", "def", "reset_classifier", "(", "self", ",", "num_classes", ",", "global_pool", "=", "''", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models.forward_features": [[94, 106], ["resmlp_models.resmlp_models.patch_embed", "enumerate", "resmlp_models.resmlp_models.norm", "blk.mean().reshape", "blk", "blk.mean"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "x", ".", "mean", "(", "dim", "=", "1", ")", ".", "reshape", "(", "B", ",", "1", ",", "-", "1", ")", "\n", "\n", "return", "x", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_models.forward": [[107, 111], ["resmlp_models.resmlp_models.forward_features", "resmlp_models.resmlp_models.head"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_12": [[112, 132], ["resmlp_models.resmlp_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "resmlp_models.load_state_dict"], "function", ["None"], ["", "", "@", "register_model", "\n", "def", "resmlp_12", "(", "pretrained", "=", "False", ",", "dist", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "resmlp_models", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "12", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "\n", "init_scale", "=", "0.1", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "if", "dist", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_12_dist.pth\"", "\n", "", "else", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_12_no_dist.pth\"", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "url_path", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_24": [[133, 154], ["resmlp_models.resmlp_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "resmlp_models.load_state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "resmlp_24", "(", "pretrained", "=", "False", ",", "dist", "=", "False", ",", "dino", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "resmlp_models", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "24", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "\n", "init_scale", "=", "1e-5", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "if", "dist", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_24_dist.pth\"", "\n", "", "elif", "dino", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_24_dino.pth\"", "\n", "", "else", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_24_no_dist.pth\"", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "url_path", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlp_36": [[155, 174], ["resmlp_models.resmlp_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "resmlp_models.load_state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "resmlp_36", "(", "pretrained", "=", "False", ",", "dist", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "resmlp_models", "(", "\n", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "36", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "\n", "init_scale", "=", "1e-6", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "if", "dist", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_36_dist.pth\"", "\n", "", "else", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlp_36_no_dist.pth\"", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "url_path", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.resmlp_models.resmlpB_24": [[175, 198], ["resmlp_models.resmlp_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "resmlp_models.load_state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "resmlpB_24", "(", "pretrained", "=", "False", ",", "dist", "=", "False", ",", "in_22k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "resmlp_models", "(", "\n", "patch_size", "=", "8", ",", "embed_dim", "=", "768", ",", "depth", "=", "24", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "\n", "init_scale", "=", "1e-6", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "if", "dist", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlpB_24_dist.pth\"", "\n", "", "elif", "in_22k", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlpB_24_22k.pth\"", "\n", "", "else", ":", "\n", "          ", "url_path", "=", "\"https://dl.fbaipublicfiles.com/deit/resmlpB_24_no_dist.pth\"", "\n", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "url_path", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.main.get_args_parser": [[32, 180], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "get_args_parser", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "'DeiT training and evaluation script'", ",", "add_help", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "default", "=", "64", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "300", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--bce-loss'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--unscale-lr'", ",", "action", "=", "'store_true'", ")", "\n", "\n", "# Model parameters", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'deit_base_patch16_224'", ",", "type", "=", "str", ",", "metavar", "=", "'MODEL'", ",", "\n", "help", "=", "'Name of model to train'", ")", "\n", "parser", ".", "add_argument", "(", "'--input-size'", ",", "default", "=", "224", ",", "type", "=", "int", ",", "help", "=", "'images input size'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--drop'", ",", "type", "=", "float", ",", "default", "=", "0.0", ",", "metavar", "=", "'PCT'", ",", "\n", "help", "=", "'Dropout rate (default: 0.)'", ")", "\n", "parser", ".", "add_argument", "(", "'--drop-path'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'PCT'", ",", "\n", "help", "=", "'Drop path rate (default: 0.1)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--model-ema'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-model-ema'", ",", "action", "=", "'store_false'", ",", "dest", "=", "'model_ema'", ")", "\n", "parser", ".", "set_defaults", "(", "model_ema", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--model-ema-decay'", ",", "type", "=", "float", ",", "default", "=", "0.99996", ",", "help", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--model-ema-force-cpu'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "''", ")", "\n", "\n", "# Optimizer parameters", "\n", "parser", ".", "add_argument", "(", "'--opt'", ",", "default", "=", "'adamw'", ",", "type", "=", "str", ",", "metavar", "=", "'OPTIMIZER'", ",", "\n", "help", "=", "'Optimizer (default: \"adamw\"'", ")", "\n", "parser", ".", "add_argument", "(", "'--opt-eps'", ",", "default", "=", "1e-8", ",", "type", "=", "float", ",", "metavar", "=", "'EPSILON'", ",", "\n", "help", "=", "'Optimizer Epsilon (default: 1e-8)'", ")", "\n", "parser", ".", "add_argument", "(", "'--opt-betas'", ",", "default", "=", "None", ",", "type", "=", "float", ",", "nargs", "=", "'+'", ",", "metavar", "=", "'BETA'", ",", "\n", "help", "=", "'Optimizer Betas (default: None, use opt default)'", ")", "\n", "parser", ".", "add_argument", "(", "'--clip-grad'", ",", "type", "=", "float", ",", "default", "=", "None", ",", "metavar", "=", "'NORM'", ",", "\n", "help", "=", "'Clip gradient norm (default: None, no clipping)'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight-decay'", ",", "type", "=", "float", ",", "default", "=", "0.05", ",", "\n", "help", "=", "'weight decay (default: 0.05)'", ")", "\n", "# Learning rate schedule parameters", "\n", "parser", ".", "add_argument", "(", "'--sched'", ",", "default", "=", "'cosine'", ",", "type", "=", "str", ",", "metavar", "=", "'SCHEDULER'", ",", "\n", "help", "=", "'LR scheduler (default: \"cosine\"'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 5e-4)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr-noise'", ",", "type", "=", "float", ",", "nargs", "=", "'+'", ",", "default", "=", "None", ",", "metavar", "=", "'pct, pct'", ",", "\n", "help", "=", "'learning rate noise on/off epoch percentages'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr-noise-pct'", ",", "type", "=", "float", ",", "default", "=", "0.67", ",", "metavar", "=", "'PERCENT'", ",", "\n", "help", "=", "'learning rate noise limit percent (default: 0.67)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr-noise-std'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "metavar", "=", "'STDDEV'", ",", "\n", "help", "=", "'learning rate noise std-dev (default: 1.0)'", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup-lr'", ",", "type", "=", "float", ",", "default", "=", "1e-6", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'warmup learning rate (default: 1e-6)'", ")", "\n", "parser", ".", "add_argument", "(", "'--min-lr'", ",", "type", "=", "float", ",", "default", "=", "1e-5", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'lower lr bound for cyclic schedulers that hit 0 (1e-5)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--decay-epochs'", ",", "type", "=", "float", ",", "default", "=", "30", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'epoch interval to decay LR'", ")", "\n", "parser", ".", "add_argument", "(", "'--warmup-epochs'", ",", "type", "=", "int", ",", "default", "=", "5", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'epochs to warmup LR, if scheduler supports'", ")", "\n", "parser", ".", "add_argument", "(", "'--cooldown-epochs'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'epochs to cooldown LR at min_lr, after cyclic schedule ends'", ")", "\n", "parser", ".", "add_argument", "(", "'--patience-epochs'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'patience epochs for Plateau LR scheduler (default: 10'", ")", "\n", "parser", ".", "add_argument", "(", "'--decay-rate'", ",", "'--dr'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'RATE'", ",", "\n", "help", "=", "'LR decay rate (default: 0.1)'", ")", "\n", "\n", "# Augmentation parameters", "\n", "parser", ".", "add_argument", "(", "'--color-jitter'", ",", "type", "=", "float", ",", "default", "=", "0.3", ",", "metavar", "=", "'PCT'", ",", "\n", "help", "=", "'Color jitter factor (default: 0.3)'", ")", "\n", "parser", ".", "add_argument", "(", "'--aa'", ",", "type", "=", "str", ",", "default", "=", "'rand-m9-mstd0.5-inc1'", ",", "metavar", "=", "'NAME'", ",", "\n", "help", "=", "'Use AutoAugment policy. \"v0\" or \"original\". \" + \\\n                             \"(default: rand-m9-mstd0.5-inc1)'", ")", ",", "\n", "parser", ".", "add_argument", "(", "'--smoothing'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'Label smoothing (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--train-interpolation'", ",", "type", "=", "str", ",", "default", "=", "'bicubic'", ",", "\n", "help", "=", "'Training interpolation (random, bilinear, bicubic default: \"bicubic\")'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--repeated-aug'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-repeated-aug'", ",", "action", "=", "'store_false'", ",", "dest", "=", "'repeated_aug'", ")", "\n", "parser", ".", "set_defaults", "(", "repeated_aug", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--ThreeAugment'", ",", "action", "=", "'store_true'", ")", "#3augment", "\n", "\n", "parser", ".", "add_argument", "(", "'--src'", ",", "action", "=", "'store_true'", ")", "#simple random crop", "\n", "\n", "# * Random Erase params", "\n", "parser", ".", "add_argument", "(", "'--reprob'", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "metavar", "=", "'PCT'", ",", "\n", "help", "=", "'Random erase prob (default: 0.25)'", ")", "\n", "parser", ".", "add_argument", "(", "'--remode'", ",", "type", "=", "str", ",", "default", "=", "'pixel'", ",", "\n", "help", "=", "'Random erase mode (default: \"pixel\")'", ")", "\n", "parser", ".", "add_argument", "(", "'--recount'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Random erase count (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--resplit'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'Do not random erase first (clean) augmentation split'", ")", "\n", "\n", "# * Mixup params", "\n", "parser", ".", "add_argument", "(", "'--mixup'", ",", "type", "=", "float", ",", "default", "=", "0.8", ",", "\n", "help", "=", "'mixup alpha, mixup enabled if > 0. (default: 0.8)'", ")", "\n", "parser", ".", "add_argument", "(", "'--cutmix'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "\n", "help", "=", "'cutmix alpha, cutmix enabled if > 0. (default: 1.0)'", ")", "\n", "parser", ".", "add_argument", "(", "'--cutmix-minmax'", ",", "type", "=", "float", ",", "nargs", "=", "'+'", ",", "default", "=", "None", ",", "\n", "help", "=", "'cutmix min/max ratio, overrides alpha and enables cutmix if set (default: None)'", ")", "\n", "parser", ".", "add_argument", "(", "'--mixup-prob'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "\n", "help", "=", "'Probability of performing mixup or cutmix when either/both is enabled'", ")", "\n", "parser", ".", "add_argument", "(", "'--mixup-switch-prob'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "\n", "help", "=", "'Probability of switching to cutmix when both mixup and cutmix enabled'", ")", "\n", "parser", ".", "add_argument", "(", "'--mixup-mode'", ",", "type", "=", "str", ",", "default", "=", "'batch'", ",", "\n", "help", "=", "'How to apply mixup/cutmix params. Per \"batch\", \"pair\", or \"elem\"'", ")", "\n", "\n", "# Distillation parameters", "\n", "parser", ".", "add_argument", "(", "'--teacher-model'", ",", "default", "=", "'regnety_160'", ",", "type", "=", "str", ",", "metavar", "=", "'MODEL'", ",", "\n", "help", "=", "'Name of teacher model to train (default: \"regnety_160\"'", ")", "\n", "parser", ".", "add_argument", "(", "'--teacher-path'", ",", "type", "=", "str", ",", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--distillation-type'", ",", "default", "=", "'none'", ",", "choices", "=", "[", "'none'", ",", "'soft'", ",", "'hard'", "]", ",", "type", "=", "str", ",", "help", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "'--distillation-alpha'", ",", "default", "=", "0.5", ",", "type", "=", "float", ",", "help", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "'--distillation-tau'", ",", "default", "=", "1.0", ",", "type", "=", "float", ",", "help", "=", "\"\"", ")", "\n", "\n", "# * Finetuning params", "\n", "parser", ".", "add_argument", "(", "'--finetune'", ",", "default", "=", "''", ",", "help", "=", "'finetune from checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'--attn-only'", ",", "action", "=", "'store_true'", ")", "\n", "\n", "# Dataset parameters", "\n", "parser", ".", "add_argument", "(", "'--data-path'", ",", "default", "=", "'/datasets01/imagenet_full_size/061417/'", ",", "type", "=", "str", ",", "\n", "help", "=", "'dataset path'", ")", "\n", "parser", ".", "add_argument", "(", "'--data-set'", ",", "default", "=", "'IMNET'", ",", "choices", "=", "[", "'CIFAR'", ",", "'IMNET'", ",", "'INAT'", ",", "'INAT19'", "]", ",", "\n", "type", "=", "str", ",", "help", "=", "'Image Net dataset path'", ")", "\n", "parser", ".", "add_argument", "(", "'--inat-category'", ",", "default", "=", "'name'", ",", "\n", "choices", "=", "[", "'kingdom'", ",", "'phylum'", ",", "'class'", ",", "'order'", ",", "'supercategory'", ",", "'family'", ",", "'genus'", ",", "'name'", "]", ",", "\n", "type", "=", "str", ",", "help", "=", "'semantic granularity'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--output_dir'", ",", "default", "=", "''", ",", "\n", "help", "=", "'path where to save, empty for no saving'", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "'cuda'", ",", "\n", "help", "=", "'device to use for training / testing'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "help", "=", "'resume from checkpoint'", ")", "\n", "parser", ".", "add_argument", "(", "'--start_epoch'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'start epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Perform evaluation only'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist-eval'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'Enabling distributed evaluation'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "default", "=", "10", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--pin-mem'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Pin CPU memory in DataLoader for more efficient (sometimes) transfer to GPU.'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-pin-mem'", ",", "action", "=", "'store_false'", ",", "dest", "=", "'pin_mem'", ",", "\n", "help", "=", "''", ")", "\n", "parser", ".", "set_defaults", "(", "pin_mem", "=", "True", ")", "\n", "\n", "# distributed training parameters", "\n", "parser", ".", "add_argument", "(", "'--world_size'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "'number of distributed processes'", ")", "\n", "parser", ".", "add_argument", "(", "'--dist_url'", ",", "default", "=", "'env://'", ",", "help", "=", "'url used to set up distributed training'", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.main.main": [[182, 473], ["utils.init_distributed_mode", "print", "torch.device", "torch.device", "torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "datasets.build_dataset", "datasets.build_dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "timm.models.create_model", "torch.nn.parallel.DistributedDataParallel.to", "sum", "print", "timm.optim.create_optimizer", "timm.utils.NativeScaler", "timm.scheduler.create_scheduler", "timm.loss.LabelSmoothingCrossEntropy", "losses.DistillationLoss", "pathlib.Path", "print", "time.time", "range", "str", "print", "NotImplementedError", "utils.get_rank", "utils.get_world_size", "utils.get_rank", "torch.utils.data.RandomSampler", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "augment.new_data_aug_generator", "timm.data.Mixup", "args.finetune.startswith", "torch.nn.parallel.DistributedDataParallel.state_dict", "int", "int", "pos_tokens.permute().flatten.reshape().permute", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "pos_tokens.permute().flatten.permute().flatten", "torch.cat", "torch.cat", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.nn.parallel.DistributedDataParallel.named_parameters", "timm.utils.ModelEma", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "timm.loss.SoftTargetCrossEntropy", "torch.nn.BCEWithLogitsLoss", "torch.nn.BCEWithLogitsLoss", "print", "timm.models.create_model", "args.teacher_path.startswith", "timm.models.create_model.load_state_dict", "timm.models.create_model.to", "timm.models.create_model.eval", "args.resume.startswith", "model_without_ddp.load_state_dict", "lr_scheduler.step", "engine.evaluate", "print", "engine.train_one_epoch", "lr_scheduler.step", "engine.evaluate", "print", "print", "time.time", "datetime.timedelta", "samplers.RASampler", "torch.utils.data.DistributedSampler", "torch.utils.data.DistributedSampler", "torch.utils.data.DistributedSampler", "torch.utils.data.DistributedSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.SequentialSampler", "int", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "torch.load", "torch.load", "torch.nn.parallel.DistributedDataParallel.patch_embed.parameters", "p.numel", "timm.loss.LabelSmoothingCrossEntropy", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "torch.load", "torch.load", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "torch.load", "torch.load", "timm.optim.create_optimizer.load_state_dict", "lr_scheduler.load_state_dict", "torch.utils.data.DataLoader.sampler.set_epoch", "utils.is_main_process", "print", "print", "pos_tokens.permute().flatten.reshape", "pos_tokens.permute().flatten.permute", "print", "print", "torch.nn.parallel.DistributedDataParallel.parameters", "utils.get_world_size", "utils._load_checkpoint_for_ema", "timm.utils.NativeScaler.load_state_dict", "utils.save_on_master", "f.write", "int", "len", "len", "len", "utils.save_on_master", "engine.train_one_epoch.items", "engine.evaluate.items", "model_without_ddp.state_dict", "timm.optim.create_optimizer.state_dict", "lr_scheduler.state_dict", "timm.utils.get_state_dict", "timm.utils.NativeScaler.state_dict", "json.dumps", "model_without_ddp.state_dict", "timm.optim.create_optimizer.state_dict", "lr_scheduler.state_dict", "timm.utils.get_state_dict", "timm.utils.NativeScaler.state_dict"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.init_distributed_mode", "home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.build_dataset", "home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.build_dataset", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank", "home.repos.pwc.inspect_result.facebookresearch_deit.None.augment.new_data_aug_generator", "home.repos.pwc.inspect_result.facebookresearch_deit.None.engine.evaluate", "home.repos.pwc.inspect_result.facebookresearch_deit.None.engine.train_one_epoch", "home.repos.pwc.inspect_result.facebookresearch_deit.None.engine.evaluate", "home.repos.pwc.inspect_result.facebookresearch_deit.None.samplers.RASampler.set_epoch", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_main_process", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils._load_checkpoint_for_ema", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.save_on_master", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.save_on_master"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "utils", ".", "init_distributed_mode", "(", "args", ")", "\n", "\n", "print", "(", "args", ")", "\n", "\n", "if", "args", ".", "distillation_type", "!=", "'none'", "and", "args", ".", "finetune", "and", "not", "args", ".", "eval", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"Finetuning with distillation not yet supported\"", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "args", ".", "device", ")", "\n", "\n", "# fix the seed for reproducibility", "\n", "seed", "=", "args", ".", "seed", "+", "utils", ".", "get_rank", "(", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "# random.seed(seed)", "\n", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "dataset_train", ",", "args", ".", "nb_classes", "=", "build_dataset", "(", "is_train", "=", "True", ",", "args", "=", "args", ")", "\n", "dataset_val", ",", "_", "=", "build_dataset", "(", "is_train", "=", "False", ",", "args", "=", "args", ")", "\n", "\n", "if", "True", ":", "# args.distributed:", "\n", "        ", "num_tasks", "=", "utils", ".", "get_world_size", "(", ")", "\n", "global_rank", "=", "utils", ".", "get_rank", "(", ")", "\n", "if", "args", ".", "repeated_aug", ":", "\n", "            ", "sampler_train", "=", "RASampler", "(", "\n", "dataset_train", ",", "num_replicas", "=", "num_tasks", ",", "rank", "=", "global_rank", ",", "shuffle", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "            ", "sampler_train", "=", "torch", ".", "utils", ".", "data", ".", "DistributedSampler", "(", "\n", "dataset_train", ",", "num_replicas", "=", "num_tasks", ",", "rank", "=", "global_rank", ",", "shuffle", "=", "True", "\n", ")", "\n", "", "if", "args", ".", "dist_eval", ":", "\n", "            ", "if", "len", "(", "dataset_val", ")", "%", "num_tasks", "!=", "0", ":", "\n", "                ", "print", "(", "'Warning: Enabling distributed evaluation with an eval dataset not divisible by process number. '", "\n", "'This will slightly alter validation results as extra duplicate entries are added to achieve '", "\n", "'equal num of samples per-process.'", ")", "\n", "", "sampler_val", "=", "torch", ".", "utils", ".", "data", ".", "DistributedSampler", "(", "\n", "dataset_val", ",", "num_replicas", "=", "num_tasks", ",", "rank", "=", "global_rank", ",", "shuffle", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "sampler_val", "=", "torch", ".", "utils", ".", "data", ".", "SequentialSampler", "(", "dataset_val", ")", "\n", "", "", "else", ":", "\n", "        ", "sampler_train", "=", "torch", ".", "utils", ".", "data", ".", "RandomSampler", "(", "dataset_train", ")", "\n", "sampler_val", "=", "torch", ".", "utils", ".", "data", ".", "SequentialSampler", "(", "dataset_val", ")", "\n", "\n", "", "data_loader_train", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset_train", ",", "sampler", "=", "sampler_train", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "args", ".", "pin_mem", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n", "if", "args", ".", "ThreeAugment", ":", "\n", "        ", "data_loader_train", ".", "dataset", ".", "transform", "=", "new_data_aug_generator", "(", "args", ")", "\n", "\n", "", "data_loader_val", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset_val", ",", "sampler", "=", "sampler_val", ",", "\n", "batch_size", "=", "int", "(", "1.5", "*", "args", ".", "batch_size", ")", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "args", ".", "pin_mem", ",", "\n", "drop_last", "=", "False", "\n", ")", "\n", "\n", "mixup_fn", "=", "None", "\n", "mixup_active", "=", "args", ".", "mixup", ">", "0", "or", "args", ".", "cutmix", ">", "0.", "or", "args", ".", "cutmix_minmax", "is", "not", "None", "\n", "if", "mixup_active", ":", "\n", "        ", "mixup_fn", "=", "Mixup", "(", "\n", "mixup_alpha", "=", "args", ".", "mixup", ",", "cutmix_alpha", "=", "args", ".", "cutmix", ",", "cutmix_minmax", "=", "args", ".", "cutmix_minmax", ",", "\n", "prob", "=", "args", ".", "mixup_prob", ",", "switch_prob", "=", "args", ".", "mixup_switch_prob", ",", "mode", "=", "args", ".", "mixup_mode", ",", "\n", "label_smoothing", "=", "args", ".", "smoothing", ",", "num_classes", "=", "args", ".", "nb_classes", ")", "\n", "\n", "", "print", "(", "f\"Creating model: {args.model}\"", ")", "\n", "model", "=", "create_model", "(", "\n", "args", ".", "model", ",", "\n", "pretrained", "=", "False", ",", "\n", "num_classes", "=", "args", ".", "nb_classes", ",", "\n", "drop_rate", "=", "args", ".", "drop", ",", "\n", "drop_path_rate", "=", "args", ".", "drop_path", ",", "\n", "drop_block_rate", "=", "None", ",", "\n", "img_size", "=", "args", ".", "input_size", "\n", ")", "\n", "\n", "\n", "if", "args", ".", "finetune", ":", "\n", "        ", "if", "args", ".", "finetune", ".", "startswith", "(", "'https'", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "args", ".", "finetune", ",", "map_location", "=", "'cpu'", ",", "check_hash", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "finetune", ",", "map_location", "=", "'cpu'", ")", "\n", "\n", "", "checkpoint_model", "=", "checkpoint", "[", "'model'", "]", "\n", "state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "k", "in", "[", "'head.weight'", ",", "'head.bias'", ",", "'head_dist.weight'", ",", "'head_dist.bias'", "]", ":", "\n", "            ", "if", "k", "in", "checkpoint_model", "and", "checkpoint_model", "[", "k", "]", ".", "shape", "!=", "state_dict", "[", "k", "]", ".", "shape", ":", "\n", "                ", "print", "(", "f\"Removing key {k} from pretrained checkpoint\"", ")", "\n", "del", "checkpoint_model", "[", "k", "]", "\n", "\n", "# interpolate position embedding", "\n", "", "", "pos_embed_checkpoint", "=", "checkpoint_model", "[", "'pos_embed'", "]", "\n", "embedding_size", "=", "pos_embed_checkpoint", ".", "shape", "[", "-", "1", "]", "\n", "num_patches", "=", "model", ".", "patch_embed", ".", "num_patches", "\n", "num_extra_tokens", "=", "model", ".", "pos_embed", ".", "shape", "[", "-", "2", "]", "-", "num_patches", "\n", "# height (== width) for the checkpoint position embedding", "\n", "orig_size", "=", "int", "(", "(", "pos_embed_checkpoint", ".", "shape", "[", "-", "2", "]", "-", "num_extra_tokens", ")", "**", "0.5", ")", "\n", "# height (== width) for the new position embedding", "\n", "new_size", "=", "int", "(", "num_patches", "**", "0.5", ")", "\n", "# class_token and dist_token are kept unchanged", "\n", "extra_tokens", "=", "pos_embed_checkpoint", "[", ":", ",", ":", "num_extra_tokens", "]", "\n", "# only the position tokens are interpolated", "\n", "pos_tokens", "=", "pos_embed_checkpoint", "[", ":", ",", "num_extra_tokens", ":", "]", "\n", "pos_tokens", "=", "pos_tokens", ".", "reshape", "(", "-", "1", ",", "orig_size", ",", "orig_size", ",", "embedding_size", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "pos_tokens", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "\n", "pos_tokens", ",", "size", "=", "(", "new_size", ",", "new_size", ")", ",", "mode", "=", "'bicubic'", ",", "align_corners", "=", "False", ")", "\n", "pos_tokens", "=", "pos_tokens", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "flatten", "(", "1", ",", "2", ")", "\n", "new_pos_embed", "=", "torch", ".", "cat", "(", "(", "extra_tokens", ",", "pos_tokens", ")", ",", "dim", "=", "1", ")", "\n", "checkpoint_model", "[", "'pos_embed'", "]", "=", "new_pos_embed", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint_model", ",", "strict", "=", "False", ")", "\n", "\n", "", "if", "args", ".", "attn_only", ":", "\n", "        ", "for", "name_p", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'.attn.'", "in", "name_p", ":", "\n", "                ", "p", ".", "requires_grad", "=", "True", "\n", "", "else", ":", "\n", "                ", "p", ".", "requires_grad", "=", "False", "\n", "", "", "try", ":", "\n", "            ", "model", ".", "head", ".", "weight", ".", "requires_grad", "=", "True", "\n", "model", ".", "head", ".", "bias", ".", "requires_grad", "=", "True", "\n", "", "except", ":", "\n", "            ", "model", ".", "fc", ".", "weight", ".", "requires_grad", "=", "True", "\n", "model", ".", "fc", ".", "bias", ".", "requires_grad", "=", "True", "\n", "", "try", ":", "\n", "            ", "model", ".", "pos_embed", ".", "requires_grad", "=", "True", "\n", "", "except", ":", "\n", "            ", "print", "(", "'no position encoding'", ")", "\n", "", "try", ":", "\n", "            ", "for", "p", "in", "model", ".", "patch_embed", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad", "=", "False", "\n", "", "", "except", ":", "\n", "            ", "print", "(", "'no patch embed'", ")", "\n", "\n", "", "", "model", ".", "to", "(", "device", ")", "\n", "\n", "model_ema", "=", "None", "\n", "if", "args", ".", "model_ema", ":", "\n", "# Important to create EMA model after cuda(), DP wrapper, and AMP but before SyncBN and DDP wrapper", "\n", "        ", "model_ema", "=", "ModelEma", "(", "\n", "model", ",", "\n", "decay", "=", "args", ".", "model_ema_decay", ",", "\n", "device", "=", "'cpu'", "if", "args", ".", "model_ema_force_cpu", "else", "''", ",", "\n", "resume", "=", "''", ")", "\n", "\n", "", "model_without_ddp", "=", "model", "\n", "if", "args", ".", "distributed", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "device_ids", "=", "[", "args", ".", "gpu", "]", ")", "\n", "model_without_ddp", "=", "model", ".", "module", "\n", "", "n_parameters", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "print", "(", "'number of params:'", ",", "n_parameters", ")", "\n", "if", "not", "args", ".", "unscale_lr", ":", "\n", "        ", "linear_scaled_lr", "=", "args", ".", "lr", "*", "args", ".", "batch_size", "*", "utils", ".", "get_world_size", "(", ")", "/", "512.0", "\n", "args", ".", "lr", "=", "linear_scaled_lr", "\n", "", "optimizer", "=", "create_optimizer", "(", "args", ",", "model_without_ddp", ")", "\n", "loss_scaler", "=", "NativeScaler", "(", ")", "\n", "\n", "lr_scheduler", ",", "_", "=", "create_scheduler", "(", "args", ",", "optimizer", ")", "\n", "\n", "criterion", "=", "LabelSmoothingCrossEntropy", "(", ")", "\n", "\n", "if", "mixup_active", ":", "\n", "# smoothing is handled with mixup label transform", "\n", "        ", "criterion", "=", "SoftTargetCrossEntropy", "(", ")", "\n", "", "elif", "args", ".", "smoothing", ":", "\n", "        ", "criterion", "=", "LabelSmoothingCrossEntropy", "(", "smoothing", "=", "args", ".", "smoothing", ")", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "if", "args", ".", "bce_loss", ":", "\n", "        ", "criterion", "=", "torch", ".", "nn", ".", "BCEWithLogitsLoss", "(", ")", "\n", "\n", "", "teacher_model", "=", "None", "\n", "if", "args", ".", "distillation_type", "!=", "'none'", ":", "\n", "        ", "assert", "args", ".", "teacher_path", ",", "'need to specify teacher-path when using distillation'", "\n", "print", "(", "f\"Creating teacher model: {args.teacher_model}\"", ")", "\n", "teacher_model", "=", "create_model", "(", "\n", "args", ".", "teacher_model", ",", "\n", "pretrained", "=", "False", ",", "\n", "num_classes", "=", "args", ".", "nb_classes", ",", "\n", "global_pool", "=", "'avg'", ",", "\n", ")", "\n", "if", "args", ".", "teacher_path", ".", "startswith", "(", "'https'", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "args", ".", "teacher_path", ",", "map_location", "=", "'cpu'", ",", "check_hash", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "teacher_path", ",", "map_location", "=", "'cpu'", ")", "\n", "", "teacher_model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "teacher_model", ".", "to", "(", "device", ")", "\n", "teacher_model", ".", "eval", "(", ")", "\n", "\n", "# wrap the criterion in our custom DistillationLoss, which", "\n", "# just dispatches to the original criterion if args.distillation_type is 'none'", "\n", "", "criterion", "=", "DistillationLoss", "(", "\n", "criterion", ",", "teacher_model", ",", "args", ".", "distillation_type", ",", "args", ".", "distillation_alpha", ",", "args", ".", "distillation_tau", "\n", ")", "\n", "\n", "output_dir", "=", "Path", "(", "args", ".", "output_dir", ")", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "if", "args", ".", "resume", ".", "startswith", "(", "'https'", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "args", ".", "resume", ",", "map_location", "=", "'cpu'", ",", "check_hash", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ",", "map_location", "=", "'cpu'", ")", "\n", "", "model_without_ddp", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "if", "not", "args", ".", "eval", "and", "'optimizer'", "in", "checkpoint", "and", "'lr_scheduler'", "in", "checkpoint", "and", "'epoch'", "in", "checkpoint", ":", "\n", "            ", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "if", "args", ".", "model_ema", ":", "\n", "                ", "utils", ".", "_load_checkpoint_for_ema", "(", "model_ema", ",", "checkpoint", "[", "'model_ema'", "]", ")", "\n", "", "if", "'scaler'", "in", "checkpoint", ":", "\n", "                ", "loss_scaler", ".", "load_state_dict", "(", "checkpoint", "[", "'scaler'", "]", ")", "\n", "", "", "lr_scheduler", ".", "step", "(", "args", ".", "start_epoch", ")", "\n", "", "if", "args", ".", "eval", ":", "\n", "        ", "test_stats", "=", "evaluate", "(", "data_loader_val", ",", "model", ",", "device", ")", "\n", "print", "(", "f\"Accuracy of the network on the {len(dataset_val)} test images: {test_stats['acc1']:.1f}%\"", ")", "\n", "return", "\n", "\n", "", "print", "(", "f\"Start training for {args.epochs} epochs\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "max_accuracy", "=", "0.0", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "args", ".", "distributed", ":", "\n", "            ", "data_loader_train", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "train_stats", "=", "train_one_epoch", "(", "\n", "model", ",", "criterion", ",", "data_loader_train", ",", "\n", "optimizer", ",", "device", ",", "epoch", ",", "loss_scaler", ",", "\n", "args", ".", "clip_grad", ",", "model_ema", ",", "mixup_fn", ",", "\n", "set_training_mode", "=", "args", ".", "finetune", "==", "''", ",", "# keep in eval mode during finetuning", "\n", "args", "=", "args", ",", "\n", ")", "\n", "\n", "lr_scheduler", ".", "step", "(", "epoch", ")", "\n", "if", "args", ".", "output_dir", ":", "\n", "            ", "checkpoint_paths", "=", "[", "output_dir", "/", "'checkpoint.pth'", "]", "\n", "for", "checkpoint_path", "in", "checkpoint_paths", ":", "\n", "                ", "utils", ".", "save_on_master", "(", "{", "\n", "'model'", ":", "model_without_ddp", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model_ema'", ":", "get_state_dict", "(", "model_ema", ")", ",", "\n", "'scaler'", ":", "loss_scaler", ".", "state_dict", "(", ")", ",", "\n", "'args'", ":", "args", ",", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n", "\n", "", "", "test_stats", "=", "evaluate", "(", "data_loader_val", ",", "model", ",", "device", ")", "\n", "print", "(", "f\"Accuracy of the network on the {len(dataset_val)} test images: {test_stats['acc1']:.1f}%\"", ")", "\n", "\n", "if", "max_accuracy", "<", "test_stats", "[", "\"acc1\"", "]", ":", "\n", "            ", "max_accuracy", "=", "test_stats", "[", "\"acc1\"", "]", "\n", "if", "args", ".", "output_dir", ":", "\n", "                ", "checkpoint_paths", "=", "[", "output_dir", "/", "'best_checkpoint.pth'", "]", "\n", "for", "checkpoint_path", "in", "checkpoint_paths", ":", "\n", "                    ", "utils", ".", "save_on_master", "(", "{", "\n", "'model'", ":", "model_without_ddp", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model_ema'", ":", "get_state_dict", "(", "model_ema", ")", ",", "\n", "'scaler'", ":", "loss_scaler", ".", "state_dict", "(", ")", ",", "\n", "'args'", ":", "args", ",", "\n", "}", ",", "checkpoint_path", ")", "\n", "\n", "", "", "", "print", "(", "f'Max accuracy: {max_accuracy:.2f}%'", ")", "\n", "\n", "log_stats", "=", "{", "**", "{", "f'train_{k}'", ":", "v", "for", "k", ",", "v", "in", "train_stats", ".", "items", "(", ")", "}", ",", "\n", "**", "{", "f'test_{k}'", ":", "v", "for", "k", ",", "v", "in", "test_stats", ".", "items", "(", ")", "}", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'n_parameters'", ":", "n_parameters", "}", "\n", "\n", "\n", "\n", "\n", "if", "args", ".", "output_dir", "and", "utils", ".", "is_main_process", "(", ")", ":", "\n", "            ", "with", "(", "output_dir", "/", "\"log.txt\"", ")", ".", "open", "(", "\"a\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "json", ".", "dumps", "(", "log_stats", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "", "total_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "total_time_str", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "total_time", ")", ")", ")", "\n", "print", "(", "'Training time {}'", ".", "format", "(", "total_time_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Attention.__init__": [[15, 25], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Attention.forward": [[26, 41], ["models_v2.Attention.qkv().reshape().permute", "models_v2.Attention.softmax", "models_v2.Attention.attn_drop", "models_v2.Attention.proj", "models_v2.Attention.proj_drop", "k.transpose", "models_v2.Attention.qkv().reshape", "models_v2.Attention.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Block.__init__": [[44, 56], ["torch.Module.__init__", "norm_layer", "Attention_block", "norm_layer", "int", "Mlp_block", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Attention", ",", "Mlp_block", "=", "Mlp", "\n", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Block.forward": [[57, 61], ["models_v2.Block.drop_path", "models_v2.Block.drop_path", "models_v2.Block.attn", "models_v2.Block.mlp", "models_v2.Block.norm1", "models_v2.Block.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Layer_scale_init_Block.__init__": [[65, 79], ["torch.Module.__init__", "norm_layer", "Attention_block", "norm_layer", "int", "Mlp_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Attention", ",", "Mlp_block", "=", "Mlp", "\n", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Layer_scale_init_Block.forward": [[80, 84], ["models_v2.Layer_scale_init_Block.drop_path", "models_v2.Layer_scale_init_Block.drop_path", "models_v2.Layer_scale_init_Block.attn", "models_v2.Layer_scale_init_Block.mlp", "models_v2.Layer_scale_init_Block.norm1", "models_v2.Layer_scale_init_Block.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Layer_scale_init_Block_paralx2.__init__": [[88, 109], ["torch.Module.__init__", "norm_layer", "norm_layer", "Attention_block", "Attention_block", "norm_layer", "norm_layer", "int", "Mlp_block", "Mlp_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Attention", ",", "Mlp_block", "=", "Mlp", "\n", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "norm11", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "attn1", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "norm21", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "mlp1", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_1_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Layer_scale_init_Block_paralx2.forward": [[110, 114], ["models_v2.Layer_scale_init_Block_paralx2.drop_path", "models_v2.Layer_scale_init_Block_paralx2.drop_path", "models_v2.Layer_scale_init_Block_paralx2.drop_path", "models_v2.Layer_scale_init_Block_paralx2.drop_path", "models_v2.Layer_scale_init_Block_paralx2.attn1", "models_v2.Layer_scale_init_Block_paralx2.mlp1", "models_v2.Layer_scale_init_Block_paralx2.attn", "models_v2.Layer_scale_init_Block_paralx2.norm11", "models_v2.Layer_scale_init_Block_paralx2.mlp", "models_v2.Layer_scale_init_Block_paralx2.norm21", "models_v2.Layer_scale_init_Block_paralx2.norm1", "models_v2.Layer_scale_init_Block_paralx2.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1_1", "*", "self", ".", "attn1", "(", "self", ".", "norm11", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2_1", "*", "self", ".", "mlp1", "(", "self", ".", "norm21", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Block_paralx2.__init__": [[118, 135], ["torch.Module.__init__", "norm_layer", "norm_layer", "Attention_block", "Attention_block", "norm_layer", "norm_layer", "int", "Mlp_block", "Mlp_block", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Attention", ",", "Mlp_block", "=", "Mlp", "\n", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "norm11", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "attn1", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "norm21", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "mlp1", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.Block_paralx2.forward": [[136, 140], ["models_v2.Block_paralx2.drop_path", "models_v2.Block_paralx2.drop_path", "models_v2.Block_paralx2.drop_path", "models_v2.Block_paralx2.attn1", "models_v2.Block_paralx2.drop_path", "models_v2.Block_paralx2.mlp1", "models_v2.Block_paralx2.attn", "models_v2.Block_paralx2.norm11", "models_v2.Block_paralx2.mlp", "models_v2.Block_paralx2.norm21", "models_v2.Block_paralx2.norm1", "models_v2.Block_paralx2.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "+", "self", ".", "drop_path", "(", "self", ".", "attn1", "(", "self", ".", "norm11", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "+", "self", ".", "drop_path", "(", "self", ".", "mlp1", "(", "self", ".", "norm21", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.hMLP_stem.__init__": [[147, 163], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "timm.models.layers.to_2tuple", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.GELU", "torch.GELU", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.GELU", "torch.GELU", "torch.Conv2d", "torch.Conv2d", "norm_layer"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "embed_dim", "=", "768", ",", "norm_layer", "=", "nn", ".", "SyncBatchNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "num_patches", "=", "(", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", ")", "*", "(", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "self", ".", "proj", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Conv2d", "(", "in_chans", ",", "embed_dim", "//", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ")", ",", "\n", "norm_layer", "(", "embed_dim", "//", "4", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "embed_dim", "//", "4", ",", "embed_dim", "//", "4", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "norm_layer", "(", "embed_dim", "//", "4", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "embed_dim", "//", "4", ",", "embed_dim", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ",", "\n", "norm_layer", "(", "embed_dim", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.hMLP_stem.forward": [[166, 170], ["models_v2.hMLP_stem.proj().flatten().transpose", "models_v2.hMLP_stem.proj().flatten", "models_v2.hMLP_stem.proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.__init__": [[176, 219], ["torch.Module.__init__", "Patch_layer", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ModuleList", "torch.ModuleList", "norm_layer", "timm.models.layers.trunc_normal_", "timm.models.layers.trunc_normal_", "models_v2.vit_models.apply", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "dict", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "range", "block_layers", "range"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop_rate", "=", "0.", ",", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "global_pool", "=", "None", ",", "\n", "block_layers", "=", "Block", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "Attention_block", "=", "Attention", ",", "Mlp_block", "=", "Mlp", ",", "\n", "dpr_constant", "=", "True", ",", "init_scale", "=", "1e-4", ",", "\n", "mlp_ratio_clstk", "=", "4.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout_rate", "=", "drop_rate", "\n", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_features", "=", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "patch_embed", "=", "Patch_layer", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "\n", "self", ".", "cls_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "embed_dim", ")", ")", "\n", "\n", "self", ".", "pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", ",", "embed_dim", ")", ")", "\n", "\n", "dpr", "=", "[", "drop_path_rate", "for", "i", "in", "range", "(", "depth", ")", "]", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "block_layers", "(", "\n", "dim", "=", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "mlp_ratio", "=", "mlp_ratio", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "0.0", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "act_layer", "=", "act_layer", ",", "Attention_block", "=", "Attention_block", ",", "Mlp_block", "=", "Mlp_block", ",", "init_values", "=", "init_scale", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "\n", "\n", "\n", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "\n", "self", ".", "feature_info", "=", "[", "dict", "(", "num_chs", "=", "embed_dim", ",", "reduction", "=", "0", ",", "module", "=", "'head'", ")", "]", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "pos_embed", ",", "std", "=", ".02", ")", "\n", "trunc_normal_", "(", "self", ".", "cls_token", ",", "std", "=", ".02", ")", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models._init_weights": [[220, 228], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.no_weight_decay": [[229, 232], ["None"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "        ", "return", "{", "'pos_embed'", ",", "'cls_token'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.get_classifier": [[233, 235], ["None"], "methods", ["None"], ["", "def", "get_classifier", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "head", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.get_num_layers": [[236, 238], ["len"], "methods", ["None"], ["", "def", "get_num_layers", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.reset_classifier": [[239, 242], ["torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity"], "methods", ["None"], ["", "def", "reset_classifier", "(", "self", ",", "num_classes", ",", "global_pool", "=", "''", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.forward_features": [[243, 258], ["models_v2.vit_models.patch_embed", "models_v2.vit_models.cls_token.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "models_v2.vit_models.norm", "blk"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "cls_tokens", "=", "self", ".", "cls_token", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "x", "=", "x", "+", "self", ".", "pos_embed", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "cls_tokens", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "return", "x", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.vit_models.forward": [[259, 268], ["models_v2.vit_models.forward_features", "models_v2.vit_models.head", "F.dropout", "float"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "\n", "if", "self", ".", "dropout_rate", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "float", "(", "self", ".", "dropout_rate", ")", ",", "training", "=", "self", ".", "training", ")", "\n", "", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_tiny_patch16_LS": [[271, 278], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "", "@", "register_model", "\n", "def", "deit_tiny_patch16_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "12", ",", "num_heads", "=", "3", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_small_patch16_LS": [[280, 300], ["models_v2.vit_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "vit_models.load_state_dict", "functools.partial", "str"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "12", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "name", "=", "'https://dl.fbaipublicfiles.com/deit/deit_3_small_'", "+", "str", "(", "img_size", ")", "+", "'_'", "\n", "if", "pretrained_21k", ":", "\n", "            ", "name", "+=", "'21k.pth'", "\n", "", "else", ":", "\n", "            ", "name", "+=", "'1k.pth'", "\n", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "name", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_base_patch16_LS": [[301, 319], ["models_v2.vit_models", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "vit_models.load_state_dict", "functools.partial", "str"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "name", "=", "'https://dl.fbaipublicfiles.com/deit/deit_3_base_'", "+", "str", "(", "img_size", ")", "+", "'_'", "\n", "if", "pretrained_21k", ":", "\n", "            ", "name", "+=", "'21k.pth'", "\n", "", "else", ":", "\n", "            ", "name", "+=", "'1k.pth'", "\n", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "name", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_large_patch16_LS": [[320, 338], ["models_v2.vit_models", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "vit_models.load_state_dict", "functools.partial", "str"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_large_patch16_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "1024", ",", "depth", "=", "24", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "name", "=", "'https://dl.fbaipublicfiles.com/deit/deit_3_large_'", "+", "str", "(", "img_size", ")", "+", "'_'", "\n", "if", "pretrained_21k", ":", "\n", "            ", "name", "+=", "'21k.pth'", "\n", "", "else", ":", "\n", "            ", "name", "+=", "'1k.pth'", "\n", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "name", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_huge_patch14_LS": [[339, 357], ["models_v2.vit_models", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "vit_models.load_state_dict", "functools.partial", "str"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_huge_patch14_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1280", ",", "depth", "=", "32", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "name", "=", "'https://dl.fbaipublicfiles.com/deit/deit_3_huge_'", "+", "str", "(", "img_size", ")", "+", "'_'", "\n", "if", "pretrained_21k", ":", "\n", "            ", "name", "+=", "'21k_v1.pth'", "\n", "", "else", ":", "\n", "            ", "name", "+=", "'1k_v1.pth'", "\n", "\n", "", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "name", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"model\"", "]", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_huge_patch14_52_LS": [[358, 365], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_huge_patch14_52_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1280", ",", "depth", "=", "52", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_huge_patch14_26x2_LS": [[366, 373], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_huge_patch14_26x2_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1280", ",", "depth", "=", "26", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block_paralx2", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_Giant_48x2_patch14_LS": [[374, 381], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_Giant_48x2_patch14_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1664", ",", "depth", "=", "48", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Block_paral_LS", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_giant_40x2_patch14_LS": [[382, 388], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_giant_40x2_patch14_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1408", ",", "depth", "=", "40", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Block_paral_LS", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_Giant_48_patch14_LS": [[389, 395], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_Giant_48_patch14_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1664", ",", "depth", "=", "48", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_giant_40_patch14_LS": [[396, 404], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_giant_40_patch14_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "14", ",", "embed_dim", "=", "1408", ",", "depth", "=", "40", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "#model.default_cfg = _cfg()", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_small_patch16_36_LS": [[407, 414], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_36_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "36", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_small_patch16_36": [[415, 422], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_36", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "36", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_small_patch16_18x2_LS": [[423, 430], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_18x2_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "18", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block_paralx2", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_small_patch16_18x2": [[431, 438], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_small_patch16_18x2", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "18", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Block_paralx2", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_base_patch16_18x2_LS": [[440, 447], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_18x2_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "18", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block_paralx2", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_base_patch16_18x2": [[449, 456], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_18x2", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "18", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Block_paralx2", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_base_patch16_36x1_LS": [[458, 465], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_36x1_LS", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "36", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "block_layers", "=", "Layer_scale_init_Block", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.models_v2.deit_base_patch16_36x1": [[466, 473], ["models_v2.vit_models", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "deit_base_patch16_36x1", "(", "pretrained", "=", "False", ",", "img_size", "=", "224", ",", "pretrained_21k", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "vit_models", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "36", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.Class_Attention.__init__": [[23, 35], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "q", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "k", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "v", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.Class_Attention.forward": [[37, 55], ["cait_models.Class_Attention.q().unsqueeze().reshape().permute", "cait_models.Class_Attention.k().reshape().permute", "cait_models.Class_Attention.v().reshape().permute", "cait_models.Class_Attention.softmax", "cait_models.Class_Attention.attn_drop", "cait_models.Class_Attention.proj", "cait_models.Class_Attention.proj_drop", "cait_models.Class_Attention.transpose", "cait_models.Class_Attention.q().unsqueeze().reshape", "cait_models.Class_Attention.k().reshape", "cait_models.Class_Attention.v().reshape", "cait_models.Class_Attention.q().unsqueeze", "cait_models.Class_Attention.k", "cait_models.Class_Attention.v", "cait_models.Class_Attention.q"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "q", "=", "self", ".", "q", "(", "x", "[", ":", ",", "0", "]", ")", ".", "unsqueeze", "(", "1", ")", ".", "reshape", "(", "B", ",", "1", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "k", "=", "self", ".", "k", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "v", "=", "self", ".", "v", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x_cls", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "1", ",", "C", ")", "\n", "x_cls", "=", "self", ".", "proj", "(", "x_cls", ")", "\n", "x_cls", "=", "self", ".", "proj_drop", "(", "x_cls", ")", "\n", "\n", "return", "x_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.LayerScale_Block_CA.__init__": [[59, 72], ["torch.Module.__init__", "norm_layer", "Attention_block", "norm_layer", "int", "Mlp_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Class_Attention", ",", "\n", "Mlp_block", "=", "Mlp", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.LayerScale_Block_CA.forward": [[74, 84], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "cait_models.LayerScale_Block_CA.drop_path", "cait_models.LayerScale_Block_CA.drop_path", "cait_models.LayerScale_Block_CA.attn", "cait_models.LayerScale_Block_CA.mlp", "cait_models.LayerScale_Block_CA.norm1", "cait_models.LayerScale_Block_CA.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_cls", ")", ":", "\n", "\n", "        ", "u", "=", "torch", ".", "cat", "(", "(", "x_cls", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "x_cls", "=", "x_cls", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "u", ")", ")", ")", "\n", "\n", "x_cls", "=", "x_cls", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x_cls", ")", ")", ")", "\n", "\n", "return", "x_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.Attention_talking_head.__init__": [[89, 107], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "\n", "self", ".", "proj_l", "=", "nn", ".", "Linear", "(", "num_heads", ",", "num_heads", ")", "\n", "self", ".", "proj_w", "=", "nn", ".", "Linear", "(", "num_heads", ",", "num_heads", ")", "\n", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.Attention_talking_head.forward": [[110, 128], ["cait_models.Attention_talking_head.qkv().reshape().permute", "cait_models.Attention_talking_head.proj_l().permute", "cait_models.Attention_talking_head.softmax", "cait_models.Attention_talking_head.proj_w().permute", "cait_models.Attention_talking_head.attn_drop", "cait_models.Attention_talking_head.proj", "cait_models.Attention_talking_head.proj_drop", "k.transpose", "cait_models.Attention_talking_head.qkv().reshape", "cait_models.Attention_talking_head.proj_l", "cait_models.Attention_talking_head.proj_w", "cait_models.Attention_talking_head.permute", "cait_models.Attention_talking_head.permute", "cait_models.Attention_talking_head.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", "*", "self", ".", "scale", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "\n", "\n", "attn", "=", "self", ".", "proj_l", "(", "attn", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n", "attn", "=", "self", ".", "proj_w", "(", "attn", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.LayerScale_Block.__init__": [[132, 145], ["torch.Module.__init__", "norm_layer", "Attention_block", "norm_layer", "int", "Mlp_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "drop_path", "=", "0.", ",", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "Attention_block", "=", "Attention_talking_head", ",", "\n", "Mlp_block", "=", "Mlp", ",", "init_values", "=", "1e-4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.LayerScale_Block.forward": [[146, 150], ["cait_models.LayerScale_Block.drop_path", "cait_models.LayerScale_Block.drop_path", "cait_models.LayerScale_Block.attn", "cait_models.LayerScale_Block.mlp", "cait_models.LayerScale_Block.norm1", "cait_models.LayerScale_Block.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_models.__init__": [[157, 211], ["torch.Module.__init__", "Patch_layer", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "timm.models.layers.trunc_normal_", "timm.models.layers.trunc_normal_", "cait_models.cait_models.apply", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "dict", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "range", "block_layers", "block_layers_token", "range", "range"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_chans", "=", "3", ",", "num_classes", "=", "1000", ",", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "\n", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop_rate", "=", "0.", ",", "attn_drop_rate", "=", "0.", ",", "\n", "drop_path_rate", "=", "0.", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "global_pool", "=", "None", ",", "\n", "block_layers", "=", "LayerScale_Block", ",", "\n", "block_layers_token", "=", "LayerScale_Block_CA", ",", "\n", "Patch_layer", "=", "PatchEmbed", ",", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "Attention_block", "=", "Attention_talking_head", ",", "Mlp_block", "=", "Mlp", ",", "\n", "init_scale", "=", "1e-4", ",", "\n", "Attention_block_token_only", "=", "Class_Attention", ",", "\n", "Mlp_block_token_only", "=", "Mlp", ",", "\n", "depth_token_only", "=", "2", ",", "\n", "mlp_ratio_clstk", "=", "4.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_features", "=", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n", "self", ".", "patch_embed", "=", "Patch_layer", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", ")", "\n", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "\n", "self", ".", "cls_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "embed_dim", ")", ")", "\n", "self", ".", "pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", ",", "embed_dim", ")", ")", "\n", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_rate", ")", "\n", "\n", "dpr", "=", "[", "drop_path_rate", "for", "i", "in", "range", "(", "depth", ")", "]", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "\n", "block_layers", "(", "\n", "dim", "=", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "mlp_ratio", "=", "mlp_ratio", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "drop_path", "=", "dpr", "[", "i", "]", ",", "norm_layer", "=", "norm_layer", ",", "\n", "act_layer", "=", "act_layer", ",", "Attention_block", "=", "Attention_block", ",", "Mlp_block", "=", "Mlp_block", ",", "init_values", "=", "init_scale", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "\n", "self", ".", "blocks_token_only", "=", "nn", ".", "ModuleList", "(", "[", "\n", "block_layers_token", "(", "\n", "dim", "=", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "mlp_ratio", "=", "mlp_ratio_clstk", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "0.0", ",", "attn_drop", "=", "0.0", ",", "drop_path", "=", "0.0", ",", "norm_layer", "=", "norm_layer", ",", "\n", "act_layer", "=", "act_layer", ",", "Attention_block", "=", "Attention_block_token_only", ",", "\n", "Mlp_block", "=", "Mlp_block_token_only", ",", "init_values", "=", "init_scale", ")", "\n", "for", "i", "in", "range", "(", "depth_token_only", ")", "]", ")", "\n", "\n", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "\n", "\n", "self", ".", "feature_info", "=", "[", "dict", "(", "num_chs", "=", "embed_dim", ",", "reduction", "=", "0", ",", "module", "=", "'head'", ")", "]", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "pos_embed", ",", "std", "=", ".02", ")", "\n", "trunc_normal_", "(", "self", ".", "cls_token", ",", "std", "=", ".02", ")", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_models._init_weights": [[212, 220], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_models.no_weight_decay": [[221, 224], ["None"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "        ", "return", "{", "'pos_embed'", ",", "'cls_token'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_models.forward_features": [[226, 246], ["cait_models.cait_models.patch_embed", "cait_models.cait_models.cls_token.expand", "cait_models.cait_models.pos_drop", "enumerate", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cait_models.cait_models.norm", "blk", "blk"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "cls_tokens", "=", "self", ".", "cls_token", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "x", "=", "x", "+", "self", ".", "pos_embed", "\n", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks_token_only", ")", ":", "\n", "            ", "cls_tokens", "=", "blk", "(", "x", ",", "cls_tokens", ")", "\n", "\n", "", "x", "=", "torch", ".", "cat", "(", "(", "cls_tokens", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "return", "x", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_models.forward": [[247, 253], ["cait_models.cait_models.forward_features", "cait_models.cait_models.head"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_XXS24_224": [[254, 275], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "", "@", "register_model", "\n", "def", "cait_XXS24_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "24", ",", "num_heads", "=", "4", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/XXS24_224.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_XXS24": [[276, 297], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_XXS24", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "24", ",", "num_heads", "=", "4", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/XXS24_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "", "@", "register_model", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_XXS36_224": [[297, 318], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_XXS36_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "36", ",", "num_heads", "=", "4", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/XXS36_224.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_XXS36": [[319, 340], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_XXS36", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "192", ",", "depth", "=", "36", ",", "num_heads", "=", "4", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/XXS36_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_XS24": [[341, 362], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_XS24", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "288", ",", "depth", "=", "24", ",", "num_heads", "=", "6", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/XS24_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_S24_224": [[366, 387], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_S24_224", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "24", ",", "num_heads", "=", "8", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/S24_224.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_S24": [[388, 409], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_S24", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "24", ",", "num_heads", "=", "8", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-5", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/S24_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_S36": [[410, 431], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_S36", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "384", ",", "depth", "=", "36", ",", "num_heads", "=", "8", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/S36_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_M36": [[436, 457], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_M36", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "384", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "36", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/M36_384.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.cait_models.cait_M48": [[459, 480], ["cait_models.cait_models", "timm.models.vision_transformer._cfg", "torch.hub.load_state_dict_from_url", "torch.hub.load_state_dict_from_url", "cait_models.state_dict().keys", "cait_models.load_state_dict", "functools.partial", "cait_models.state_dict"], "function", ["None"], ["", "@", "register_model", "\n", "def", "cait_M48", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "cait_models", "(", "\n", "img_size", "=", "448", ",", "patch_size", "=", "16", ",", "embed_dim", "=", "768", ",", "depth", "=", "48", ",", "num_heads", "=", "16", ",", "mlp_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "depth_token_only", "=", "2", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "default_cfg", "=", "_cfg", "(", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "\n", "url", "=", "\"https://dl.fbaipublicfiles.com/deit/M48_448.pth\"", ",", "\n", "map_location", "=", "\"cpu\"", ",", "check_hash", "=", "True", "\n", ")", "\n", "checkpoint_no_module", "=", "{", "}", "\n", "for", "k", "in", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ":", "\n", "            ", "checkpoint_no_module", "[", "k", "]", "=", "checkpoint", "[", "\"model\"", "]", "[", "'module.'", "+", "k", "]", "\n", "\n", "", "model", ".", "load_state_dict", "(", "checkpoint_no_module", ")", "\n", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.__init__": [[23, 30], ["collections.deque"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "window_size", "=", "20", ",", "fmt", "=", "None", ")", ":", "\n", "        ", "if", "fmt", "is", "None", ":", "\n", "            ", "fmt", "=", "\"{median:.4f} ({global_avg:.4f})\"", "\n", "", "self", ".", "deque", "=", "deque", "(", "maxlen", "=", "window_size", ")", "\n", "self", ".", "total", "=", "0.0", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "fmt", "=", "fmt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.update": [[31, 35], ["utils.SmoothedValue.deque.append"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "value", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "deque", ".", "append", "(", "value", ")", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "total", "+=", "value", "*", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.synchronize_between_processes": [[36, 48], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.barrier", "torch.barrier", "torch.all_reduce", "torch.all_reduce", "t.tolist.tolist.tolist", "int", "utils.is_dist_avail_and_initialized"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_dist_avail_and_initialized"], ["", "def", "synchronize_between_processes", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Warning: does not synchronize the deque!\n        \"\"\"", "\n", "if", "not", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "            ", "return", "\n", "", "t", "=", "torch", ".", "tensor", "(", "[", "self", ".", "count", ",", "self", ".", "total", "]", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "'cuda'", ")", "\n", "dist", ".", "barrier", "(", ")", "\n", "dist", ".", "all_reduce", "(", "t", ")", "\n", "t", "=", "t", ".", "tolist", "(", ")", "\n", "self", ".", "count", "=", "int", "(", "t", "[", "0", "]", ")", "\n", "self", ".", "total", "=", "t", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.median": [[49, 53], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor.median().item", "torch.tensor.median().item", "list", "torch.tensor.median", "torch.tensor.median"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.median", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.median"], ["", "@", "property", "\n", "def", "median", "(", "self", ")", ":", "\n", "        ", "d", "=", "torch", ".", "tensor", "(", "list", "(", "self", ".", "deque", ")", ")", "\n", "return", "d", ".", "median", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.avg": [[54, 58], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor.mean().item", "torch.tensor.mean().item", "list", "torch.tensor.mean", "torch.tensor.mean"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg", "(", "self", ")", ":", "\n", "        ", "d", "=", "torch", ".", "tensor", "(", "list", "(", "self", ".", "deque", ")", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "return", "d", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.global_avg": [[59, 62], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "global_avg", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "total", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.max": [[63, 66], ["utils.SmoothedValue.max"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.max"], ["", "@", "property", "\n", "def", "max", "(", "self", ")", ":", "\n", "        ", "return", "max", "(", "self", ".", "deque", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.value": [[67, 70], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "deque", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.SmoothedValue.__str__": [[71, 78], ["utils.SmoothedValue.fmt.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "fmt", ".", "format", "(", "\n", "median", "=", "self", ".", "median", ",", "\n", "avg", "=", "self", ".", "avg", ",", "\n", "global_avg", "=", "self", ".", "global_avg", ",", "\n", "max", "=", "self", ".", "max", ",", "\n", "value", "=", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.__init__": [[81, 84], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "delimiter", "=", "\"\\t\"", ")", ":", "\n", "        ", "self", ".", "meters", "=", "defaultdict", "(", "SmoothedValue", ")", "\n", "self", ".", "delimiter", "=", "delimiter", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update": [[85, 91], ["kwargs.items", "isinstance", "isinstance", "utils.MetricLogger.meters[].update", "v.item.item.item"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update"], ["", "def", "update", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "v", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "v", "=", "v", ".", "item", "(", ")", "\n", "", "assert", "isinstance", "(", "v", ",", "(", "float", ",", "int", ")", ")", "\n", "self", ".", "meters", "[", "k", "]", ".", "update", "(", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.__getattr__": [[92, 99], ["AttributeError", "type"], "methods", ["None"], ["", "", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "if", "attr", "in", "self", ".", "meters", ":", "\n", "            ", "return", "self", ".", "meters", "[", "attr", "]", "\n", "", "if", "attr", "in", "self", ".", "__dict__", ":", "\n", "            ", "return", "self", ".", "__dict__", "[", "attr", "]", "\n", "", "raise", "AttributeError", "(", "\"'{}' object has no attribute '{}'\"", ".", "format", "(", "\n", "type", "(", "self", ")", ".", "__name__", ",", "attr", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.__str__": [[100, 107], ["utils.MetricLogger.meters.items", "utils.MetricLogger.delimiter.join", "loss_str.append", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "loss_str", "=", "[", "]", "\n", "for", "name", ",", "meter", "in", "self", ".", "meters", ".", "items", "(", ")", ":", "\n", "            ", "loss_str", ".", "append", "(", "\n", "\"{}: {}\"", ".", "format", "(", "name", ",", "str", "(", "meter", ")", ")", "\n", ")", "\n", "", "return", "self", ".", "delimiter", ".", "join", "(", "loss_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.synchronize_between_processes": [[108, 111], ["utils.MetricLogger.meters.values", "meter.synchronize_between_processes"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.synchronize_between_processes"], ["", "def", "synchronize_between_processes", "(", "self", ")", ":", "\n", "        ", "for", "meter", "in", "self", ".", "meters", ".", "values", "(", ")", ":", "\n", "            ", "meter", ".", "synchronize_between_processes", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.add_meter": [[112, 114], ["None"], "methods", ["None"], ["", "", "def", "add_meter", "(", "self", ",", "name", ",", "meter", ")", ":", "\n", "        ", "self", ".", "meters", "[", "name", "]", "=", "meter", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.log_every": [[115, 160], ["time.time", "time.time", "utils.SmoothedValue", "utils.SmoothedValue", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.MetricLogger.delimiter.join", "str", "print", "utils.MetricLogger.append", "utils.SmoothedValue.update", "utils.SmoothedValue.update", "time.time", "time.time", "datetime.timedelta", "str", "str", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "len", "time.time", "time.time", "datetime.timedelta", "print", "print", "int", "len", "str", "len", "len", "utils.MetricLogger.format", "utils.MetricLogger.format", "len", "int", "len", "len", "str", "str", "str", "str", "str", "str", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.MetricLogger.update"], ["", "def", "log_every", "(", "self", ",", "iterable", ",", "print_freq", ",", "header", "=", "None", ")", ":", "\n", "        ", "i", "=", "0", "\n", "if", "not", "header", ":", "\n", "            ", "header", "=", "''", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "iter_time", "=", "SmoothedValue", "(", "fmt", "=", "'{avg:.4f}'", ")", "\n", "data_time", "=", "SmoothedValue", "(", "fmt", "=", "'{avg:.4f}'", ")", "\n", "space_fmt", "=", "':'", "+", "str", "(", "len", "(", "str", "(", "len", "(", "iterable", ")", ")", ")", ")", "+", "'d'", "\n", "log_msg", "=", "[", "\n", "header", ",", "\n", "'[{0'", "+", "space_fmt", "+", "'}/{1}]'", ",", "\n", "'eta: {eta}'", ",", "\n", "'{meters}'", ",", "\n", "'time: {time}'", ",", "\n", "'data: {data}'", "\n", "]", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "log_msg", ".", "append", "(", "'max mem: {memory:.0f}'", ")", "\n", "", "log_msg", "=", "self", ".", "delimiter", ".", "join", "(", "log_msg", ")", "\n", "MB", "=", "1024.0", "*", "1024.0", "\n", "for", "obj", "in", "iterable", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "yield", "obj", "\n", "iter_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "i", "%", "print_freq", "==", "0", "or", "i", "==", "len", "(", "iterable", ")", "-", "1", ":", "\n", "                ", "eta_seconds", "=", "iter_time", ".", "global_avg", "*", "(", "len", "(", "iterable", ")", "-", "i", ")", "\n", "eta_string", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "eta_seconds", ")", ")", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                    ", "print", "(", "log_msg", ".", "format", "(", "\n", "i", ",", "len", "(", "iterable", ")", ",", "eta", "=", "eta_string", ",", "\n", "meters", "=", "str", "(", "self", ")", ",", "\n", "time", "=", "str", "(", "iter_time", ")", ",", "data", "=", "str", "(", "data_time", ")", ",", "\n", "memory", "=", "torch", ".", "cuda", ".", "max_memory_allocated", "(", ")", "/", "MB", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "log_msg", ".", "format", "(", "\n", "i", ",", "len", "(", "iterable", ")", ",", "eta", "=", "eta_string", ",", "\n", "meters", "=", "str", "(", "self", ")", ",", "\n", "time", "=", "str", "(", "iter_time", ")", ",", "data", "=", "str", "(", "data_time", ")", ")", ")", "\n", "", "", "i", "+=", "1", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "", "total_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "total_time_str", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "total_time", ")", ")", ")", "\n", "print", "(", "'{} Total time: {} ({:.4f} s / it)'", ".", "format", "(", "\n", "header", ",", "total_time_str", ",", "total_time", "/", "len", "(", "iterable", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils._load_checkpoint_for_ema": [[162, 170], ["io.BytesIO", "torch.save", "torch.save", "io.BytesIO.seek", "model_ema._load_checkpoint"], "function", ["None"], ["", "", "def", "_load_checkpoint_for_ema", "(", "model_ema", ",", "checkpoint", ")", ":", "\n", "    ", "\"\"\"\n    Workaround for ModelEma._load_checkpoint to accept an already-loaded object\n    \"\"\"", "\n", "mem_file", "=", "io", ".", "BytesIO", "(", ")", "\n", "torch", ".", "save", "(", "checkpoint", ",", "mem_file", ")", "\n", "mem_file", ".", "seek", "(", "0", ")", "\n", "model_ema", ".", "_load_checkpoint", "(", "mem_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.setup_for_distributed": [[172, 185], ["kwargs.pop", "builtin_print"], "function", ["None"], ["", "def", "setup_for_distributed", "(", "is_master", ")", ":", "\n", "    ", "\"\"\"\n    This function disables printing when not in master process\n    \"\"\"", "\n", "import", "builtins", "as", "__builtin__", "\n", "builtin_print", "=", "__builtin__", ".", "print", "\n", "\n", "def", "print", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "force", "=", "kwargs", ".", "pop", "(", "'force'", ",", "False", ")", "\n", "if", "is_master", "or", "force", ":", "\n", "            ", "builtin_print", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n", "", "", "__builtin__", ".", "print", "=", "print", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_dist_avail_and_initialized": [[187, 193], ["torch.is_available", "torch.is_initialized"], "function", ["None"], ["", "def", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "False", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size": [[195, 199], ["torch.get_world_size", "utils.is_dist_avail_and_initialized"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_dist_avail_and_initialized"], ["", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "", "return", "dist", ".", "get_world_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank": [[201, 205], ["torch.get_rank", "utils.is_dist_avail_and_initialized"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank", "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_dist_avail_and_initialized"], ["", "def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "is_dist_avail_and_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n", "", "return", "dist", ".", "get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_main_process": [[207, 209], ["utils.get_rank"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.get_rank"], ["", "def", "is_main_process", "(", ")", ":", "\n", "    ", "return", "get_rank", "(", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.save_on_master": [[211, 214], ["utils.is_main_process", "torch.save", "torch.save"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.is_main_process"], ["", "def", "save_on_master", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "is_main_process", "(", ")", ":", "\n", "        ", "torch", ".", "save", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.init_distributed_mode": [[216, 239], ["torch.cuda.set_device", "torch.cuda.set_device", "utils.setup_for_distributed.print", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.barrier", "torch.distributed.barrier", "utils.setup_for_distributed", "int", "int", "int", "int", "utils.setup_for_distributed.print", "torch.cuda.device_count", "torch.cuda.device_count"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.utils.setup_for_distributed"], ["", "", "def", "init_distributed_mode", "(", "args", ")", ":", "\n", "    ", "if", "'RANK'", "in", "os", ".", "environ", "and", "'WORLD_SIZE'", "in", "os", ".", "environ", ":", "\n", "        ", "args", ".", "rank", "=", "int", "(", "os", ".", "environ", "[", "\"RANK\"", "]", ")", "\n", "args", ".", "world_size", "=", "int", "(", "os", ".", "environ", "[", "'WORLD_SIZE'", "]", ")", "\n", "args", ".", "gpu", "=", "int", "(", "os", ".", "environ", "[", "'LOCAL_RANK'", "]", ")", "\n", "", "elif", "'SLURM_PROCID'", "in", "os", ".", "environ", ":", "\n", "        ", "args", ".", "rank", "=", "int", "(", "os", ".", "environ", "[", "'SLURM_PROCID'", "]", ")", "\n", "args", ".", "gpu", "=", "args", ".", "rank", "%", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Not using distributed mode'", ")", "\n", "args", ".", "distributed", "=", "False", "\n", "return", "\n", "\n", "", "args", ".", "distributed", "=", "True", "\n", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "gpu", ")", "\n", "args", ".", "dist_backend", "=", "'nccl'", "\n", "print", "(", "'| distributed init (rank {}): {}'", ".", "format", "(", "\n", "args", ".", "rank", ",", "args", ".", "dist_url", ")", ",", "flush", "=", "True", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "args", ".", "dist_backend", ",", "init_method", "=", "args", ".", "dist_url", ",", "\n", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "args", ".", "rank", ")", "\n", "torch", ".", "distributed", ".", "barrier", "(", ")", "\n", "setup_for_distributed", "(", "args", ".", "rank", "==", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.losses.DistillationLoss.__init__": [[15, 24], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["def", "__init__", "(", "self", ",", "base_criterion", ":", "torch", ".", "nn", ".", "Module", ",", "teacher_model", ":", "torch", ".", "nn", ".", "Module", ",", "\n", "distillation_type", ":", "str", ",", "alpha", ":", "float", ",", "tau", ":", "float", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_criterion", "=", "base_criterion", "\n", "self", ".", "teacher_model", "=", "teacher_model", "\n", "assert", "distillation_type", "in", "[", "'none'", ",", "'soft'", ",", "'hard'", "]", "\n", "self", ".", "distillation_type", "=", "distillation_type", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "tau", "=", "tau", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.losses.DistillationLoss.forward": [[25, 71], ["losses.DistillationLoss.base_criterion", "isinstance", "ValueError", "torch.no_grad", "losses.DistillationLoss.teacher_model", "outputs_kd.numel", "torch.nn.functional.cross_entropy", "torch.nn.functional.kl_div", "losses.DistillationLoss.argmax", "torch.nn.functional.log_softmax", "torch.nn.functional.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "outputs", ",", "labels", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            inputs: The original inputs that are feed to the teacher model\n            outputs: the outputs of the model to be trained. It is expected to be\n                either a Tensor, or a Tuple[Tensor, Tensor], with the original output\n                in the first position and the distillation predictions as the second output\n            labels: the labels for the base criterion\n        \"\"\"", "\n", "outputs_kd", "=", "None", "\n", "if", "not", "isinstance", "(", "outputs", ",", "torch", ".", "Tensor", ")", ":", "\n", "# assume that the model outputs a tuple of [outputs, outputs_kd]", "\n", "            ", "outputs", ",", "outputs_kd", "=", "outputs", "\n", "", "base_loss", "=", "self", ".", "base_criterion", "(", "outputs", ",", "labels", ")", "\n", "if", "self", ".", "distillation_type", "==", "'none'", ":", "\n", "            ", "return", "base_loss", "\n", "\n", "", "if", "outputs_kd", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"When knowledge distillation is enabled, the model is \"", "\n", "\"expected to return a Tuple[Tensor, Tensor] with the output of the \"", "\n", "\"class_token and the dist_token\"", ")", "\n", "# don't backprop throught the teacher", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "teacher_outputs", "=", "self", ".", "teacher_model", "(", "inputs", ")", "\n", "\n", "", "if", "self", ".", "distillation_type", "==", "'soft'", ":", "\n", "            ", "T", "=", "self", ".", "tau", "\n", "# taken from https://github.com/peterliht/knowledge-distillation-pytorch/blob/master/model/net.py#L100", "\n", "# with slight modifications", "\n", "distillation_loss", "=", "F", ".", "kl_div", "(", "\n", "F", ".", "log_softmax", "(", "outputs_kd", "/", "T", ",", "dim", "=", "1", ")", ",", "\n", "#We provide the teacher's targets in log probability because we use log_target=True ", "\n", "#(as recommended in pytorch https://github.com/pytorch/pytorch/blob/9324181d0ac7b4f7949a574dbc3e8be30abe7041/torch/nn/functional.py#L2719)", "\n", "#but it is possible to give just the probabilities and set log_target=False. In our experiments we tried both.", "\n", "F", ".", "log_softmax", "(", "teacher_outputs", "/", "T", ",", "dim", "=", "1", ")", ",", "\n", "reduction", "=", "'sum'", ",", "\n", "log_target", "=", "True", "\n", ")", "*", "(", "T", "*", "T", ")", "/", "outputs_kd", ".", "numel", "(", ")", "\n", "#We divide by outputs_kd.numel() to have the legacy PyTorch behavior. ", "\n", "#But we also experiments output_kd.size(0) ", "\n", "#see issue 61(https://github.com/facebookresearch/deit/issues/61) for more details", "\n", "", "elif", "self", ".", "distillation_type", "==", "'hard'", ":", "\n", "            ", "distillation_loss", "=", "F", ".", "cross_entropy", "(", "outputs_kd", ",", "teacher_outputs", ".", "argmax", "(", "dim", "=", "1", ")", ")", "\n", "\n", "", "loss", "=", "base_loss", "*", "(", "1", "-", "self", ".", "alpha", ")", "+", "distillation_loss", "*", "self", ".", "alpha", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Mlp.__init__": [[19, 34], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_features", ":", "int", ",", "\n", "hidden_features", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "out_features", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "GELU", ",", "\n", "drop", ":", "float", "=", "0.0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Mlp.forward": [[35, 42], ["patchconvnet_models.Mlp.fc1", "patchconvnet_models.Mlp.act", "patchconvnet_models.Mlp.drop", "patchconvnet_models.Mlp.fc2", "patchconvnet_models.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Learned_Aggregation_Layer.__init__": [[45, 67], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.Identity", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dim", ":", "int", ",", "\n", "num_heads", ":", "int", "=", "1", ",", "\n", "qkv_bias", ":", "bool", "=", "False", ",", "\n", "qk_scale", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "attn_drop", ":", "float", "=", "0.0", ",", "\n", "proj_drop", ":", "float", "=", "0.0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", ":", "int", "=", "dim", "//", "num_heads", "\n", "# NOTE scale factor was wrong in my original version, can set manually to be compat with prev weights", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "q", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "k", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "v", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "id", "=", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Learned_Aggregation_Layer.forward": [[68, 86], ["patchconvnet_models.Learned_Aggregation_Layer.q().unsqueeze().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer.k().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer.v().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer.id", "patchconvnet_models.Learned_Aggregation_Layer.softmax", "patchconvnet_models.Learned_Aggregation_Layer.attn_drop", "patchconvnet_models.Learned_Aggregation_Layer.proj", "patchconvnet_models.Learned_Aggregation_Layer.proj_drop", "patchconvnet_models.Learned_Aggregation_Layer.transpose", "patchconvnet_models.Learned_Aggregation_Layer.q().unsqueeze().reshape", "patchconvnet_models.Learned_Aggregation_Layer.k().reshape", "patchconvnet_models.Learned_Aggregation_Layer.v().reshape", "patchconvnet_models.Learned_Aggregation_Layer.q().unsqueeze", "patchconvnet_models.Learned_Aggregation_Layer.k", "patchconvnet_models.Learned_Aggregation_Layer.v", "patchconvnet_models.Learned_Aggregation_Layer.q"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "q", "=", "self", ".", "q", "(", "x", "[", ":", ",", "0", "]", ")", ".", "unsqueeze", "(", "1", ")", ".", "reshape", "(", "B", ",", "1", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "k", "=", "self", ".", "k", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "v", "=", "self", ".", "v", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "attn", "=", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "attn", "=", "self", ".", "id", "(", "attn", ")", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x_cls", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "1", ",", "C", ")", "\n", "x_cls", "=", "self", ".", "proj", "(", "x_cls", ")", "\n", "x_cls", "=", "self", ".", "proj_drop", "(", "x_cls", ")", "\n", "\n", "return", "x_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Learned_Aggregation_Layer_multi.__init__": [[89, 111], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dim", ":", "int", ",", "\n", "num_heads", ":", "int", "=", "8", ",", "\n", "qkv_bias", ":", "bool", "=", "False", ",", "\n", "qk_scale", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "attn_drop", ":", "float", "=", "0.0", ",", "\n", "proj_drop", ":", "float", "=", "0.0", ",", "\n", "num_classes", ":", "int", "=", "1000", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", ":", "int", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "q", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "k", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "v", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Learned_Aggregation_Layer_multi.forward": [[112, 141], ["patchconvnet_models.Learned_Aggregation_Layer_multi.q().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer_multi.k().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer_multi.v().reshape().permute", "patchconvnet_models.Learned_Aggregation_Layer_multi.softmax", "patchconvnet_models.Learned_Aggregation_Layer_multi.attn_drop", "patchconvnet_models.Learned_Aggregation_Layer_multi.proj", "patchconvnet_models.Learned_Aggregation_Layer_multi.proj_drop", "patchconvnet_models.Learned_Aggregation_Layer_multi.transpose", "patchconvnet_models.Learned_Aggregation_Layer_multi.q().reshape", "patchconvnet_models.Learned_Aggregation_Layer_multi.k().reshape", "patchconvnet_models.Learned_Aggregation_Layer_multi.v().reshape", "patchconvnet_models.Learned_Aggregation_Layer_multi.q", "patchconvnet_models.Learned_Aggregation_Layer_multi.k", "patchconvnet_models.Learned_Aggregation_Layer_multi.v"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "q", "=", "(", "\n", "self", ".", "q", "(", "x", "[", ":", ",", ":", "self", ".", "num_classes", "]", ")", "\n", ".", "reshape", "(", "B", ",", "self", ".", "num_classes", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", "\n", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", ")", "\n", "k", "=", "(", "\n", "self", ".", "k", "(", "x", "[", ":", ",", "self", ".", "num_classes", ":", "]", ")", "\n", ".", "reshape", "(", "B", ",", "N", "-", "self", ".", "num_classes", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", "\n", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", ")", "\n", "\n", "q", "=", "q", "*", "self", ".", "scale", "\n", "v", "=", "(", "\n", "self", ".", "v", "(", "x", "[", ":", ",", "self", ".", "num_classes", ":", "]", ")", "\n", ".", "reshape", "(", "B", ",", "N", "-", "self", ".", "num_classes", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", "\n", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", ")", "\n", "\n", "attn", "=", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x_cls", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "self", ".", "num_classes", ",", "C", ")", "\n", "x_cls", "=", "self", ".", "proj", "(", "x_cls", ")", "\n", "x_cls", "=", "self", ".", "proj_drop", "(", "x_cls", ")", "\n", "\n", "return", "x_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Layer_scale_init_Block_only_token.__init__": [[144, 172], ["torch.Module.__init__", "norm_layer", "Attention_block", "norm_layer", "int", "Mlp_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dim", ":", "int", ",", "\n", "num_heads", ":", "int", ",", "\n", "mlp_ratio", ":", "float", "=", "4.0", ",", "\n", "qkv_bias", ":", "bool", "=", "False", ",", "\n", "qk_scale", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "drop", ":", "float", "=", "0.0", ",", "\n", "attn_drop", ":", "float", "=", "0.0", ",", "\n", "drop_path", ":", "float", "=", "0.0", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "Attention_block", "=", "Learned_Aggregation_Layer", ",", "\n", "Mlp_block", "=", "Mlp", ",", "\n", "init_values", ":", "float", "=", "1e-4", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", "\n", ")", "\n", "# NOTE: drop path for stochastic depth, we shall see if this is better than dropout here", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.0", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp_block", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "gamma_2", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Layer_scale_init_Block_only_token.forward": [[173, 178], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "patchconvnet_models.Layer_scale_init_Block_only_token.drop_path", "patchconvnet_models.Layer_scale_init_Block_only_token.drop_path", "patchconvnet_models.Layer_scale_init_Block_only_token.attn", "patchconvnet_models.Layer_scale_init_Block_only_token.mlp", "patchconvnet_models.Layer_scale_init_Block_only_token.norm1", "patchconvnet_models.Layer_scale_init_Block_only_token.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "x_cls", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "u", "=", "torch", ".", "cat", "(", "(", "x_cls", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "x_cls", "=", "x_cls", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "u", ")", ")", ")", "\n", "x_cls", "=", "x_cls", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_2", "*", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x_cls", ")", ")", ")", "\n", "return", "x_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Conv_blocks_se.__init__": [[181, 191], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GELU", "torch.GELU", "torch.GELU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.GELU", "torch.GELU", "torch.GELU", "timm.models.efficientnet_blocks.SqueezeExcite", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ":", "int", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "qkv_pos", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "groups", "=", "dim", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "SqueezeExcite", "(", "dim", ",", "rd_ratio", "=", "0.25", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "kernel_size", "=", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Conv_blocks_se.forward": [[193, 202], ["int", "x.transpose.transpose.transpose", "x.transpose.transpose.reshape", "patchconvnet_models.Conv_blocks_se.qkv_pos", "x.transpose.transpose.reshape", "x.transpose.transpose.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "H", "=", "W", "=", "int", "(", "N", "**", "0.5", ")", "\n", "x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "C", ",", "H", ",", "W", ")", "\n", "x", "=", "self", ".", "qkv_pos", "(", "x", ")", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "C", ",", "N", ")", "\n", "x", "=", "x", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Layer_scale_init_Block.__init__": [[205, 219], ["torch.Module.__init__", "norm_layer", "Attention_block", "torch.Parameter", "torch.Parameter", "torch.Parameter", "timm.models.layers.DropPath", "torch.Identity", "torch.Identity", "torch.Identity", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "dim", ":", "int", ",", "\n", "drop_path", ":", "float", "=", "0.0", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "Attention_block", "=", "None", ",", "\n", "init_values", ":", "float", "=", "1e-4", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention_block", "(", "dim", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path", ")", "if", "drop_path", ">", "0.0", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "gamma_1", "=", "nn", ".", "Parameter", "(", "init_values", "*", "torch", ".", "ones", "(", "(", "dim", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.Layer_scale_init_Block.forward": [[220, 222], ["patchconvnet_models.Layer_scale_init_Block.drop_path", "patchconvnet_models.Layer_scale_init_Block.attn", "patchconvnet_models.Layer_scale_init_Block.norm1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "x", "+", "self", ".", "drop_path", "(", "self", ".", "gamma_1", "*", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.ConvStem.__init__": [[234, 251], ["torch.Module.__init__", "timm.models.layers.to_2tuple", "timm.models.layers.to_2tuple", "torch.Sequential", "torch.Sequential", "torch.Sequential", "patchconvnet_models.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "patchconvnet_models.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "patchconvnet_models.conv3x3", "torch.GELU", "torch.GELU", "torch.GELU", "patchconvnet_models.conv3x3"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__", "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.conv3x3", "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.conv3x3", "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.conv3x3", "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.conv3x3"], ["def", "__init__", "(", "self", ",", "img_size", ":", "int", "=", "224", ",", "patch_size", ":", "int", "=", "16", ",", "in_chans", ":", "int", "=", "3", ",", "embed_dim", ":", "int", "=", "768", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "to_2tuple", "(", "img_size", ")", "\n", "patch_size", "=", "to_2tuple", "(", "patch_size", ")", "\n", "num_patches", "=", "(", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", ")", "*", "(", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "in_chans", ",", "embed_dim", "//", "8", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "embed_dim", "//", "8", ",", "embed_dim", "//", "4", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "embed_dim", "//", "4", ",", "embed_dim", "//", "2", ",", "2", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "conv3x3", "(", "embed_dim", "//", "2", ",", "embed_dim", ",", "2", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.ConvStem.forward": [[253, 257], ["patchconvnet_models.ConvStem.proj().flatten().transpose", "patchconvnet_models.ConvStem.proj().flatten", "patchconvnet_models.ConvStem.proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "padding_size", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.__init__": [[260, 360], ["torch.Module.__init__", "Patch_layer", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "norm_layer", "timm.models.layers.trunc_normal_", "patchconvnet_models.PatchConvnet.apply", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "int", "dict", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "x.item", "block_layers", "block_layers_token", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.Identity", "int", "int", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "range", "range", "range", "int", "int", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "range"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "img_size", ":", "int", "=", "224", ",", "\n", "patch_size", ":", "int", "=", "16", ",", "\n", "in_chans", ":", "int", "=", "3", ",", "\n", "num_classes", ":", "int", "=", "1000", ",", "\n", "embed_dim", ":", "int", "=", "768", ",", "\n", "depth", ":", "int", "=", "12", ",", "\n", "num_heads", ":", "int", "=", "1", ",", "\n", "qkv_bias", ":", "bool", "=", "False", ",", "\n", "qk_scale", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "drop_rate", ":", "float", "=", "0.0", ",", "\n", "attn_drop_rate", ":", "float", "=", "0.0", ",", "\n", "drop_path_rate", ":", "float", "=", "0.0", ",", "\n", "hybrid_backbone", ":", "Optional", "=", "None", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ",", "\n", "global_pool", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "block_layers", "=", "Layer_scale_init_Block", ",", "\n", "block_layers_token", "=", "Layer_scale_init_Block_only_token", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "GELU", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "dpr_constant", ":", "bool", "=", "True", ",", "\n", "init_scale", ":", "float", "=", "1e-4", ",", "\n", "Attention_block_token_only", "=", "Learned_Aggregation_Layer", ",", "\n", "Mlp_block_token_only", "=", "Mlp", ",", "\n", "depth_token_only", ":", "int", "=", "1", ",", "\n", "mlp_ratio_clstk", ":", "float", "=", "3.0", ",", "\n", "multiclass", ":", "bool", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "multiclass", "=", "multiclass", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_features", "=", "self", ".", "embed_dim", "=", "embed_dim", "# num_features for consistency with other models", "\n", "\n", "self", ".", "patch_embed", "=", "Patch_layer", "(", "\n", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_chans", "=", "in_chans", ",", "embed_dim", "=", "embed_dim", "\n", ")", "\n", "\n", "if", "not", "self", ".", "multiclass", ":", "\n", "            ", "self", ".", "cls_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "int", "(", "embed_dim", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "cls_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_classes", ",", "int", "(", "embed_dim", ")", ")", ")", "\n", "\n", "", "if", "not", "dpr_constant", ":", "\n", "            ", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_rate", ",", "depth", ")", "]", "\n", "", "else", ":", "\n", "            ", "dpr", "=", "[", "drop_path_rate", "for", "i", "in", "range", "(", "depth", ")", "]", "\n", "\n", "", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "block_layers", "(", "\n", "dim", "=", "embed_dim", ",", "\n", "drop_path", "=", "dpr", "[", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "act_layer", "=", "act_layer", ",", "\n", "Attention_block", "=", "Attention_block", ",", "\n", "init_values", "=", "init_scale", ",", "\n", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "\n", "]", "\n", ")", "\n", "\n", "self", ".", "blocks_token_only", "=", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "block_layers_token", "(", "\n", "dim", "=", "int", "(", "embed_dim", ")", ",", "\n", "num_heads", "=", "num_heads", ",", "\n", "mlp_ratio", "=", "mlp_ratio_clstk", ",", "\n", "qkv_bias", "=", "qkv_bias", ",", "\n", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "\n", "attn_drop", "=", "attn_drop_rate", ",", "\n", "drop_path", "=", "0.0", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", "act_layer", "=", "act_layer", ",", "\n", "Attention_block", "=", "Attention_block_token_only", ",", "\n", "Mlp_block", "=", "Mlp_block_token_only", ",", "\n", "init_values", "=", "init_scale", ",", "\n", ")", "\n", "for", "i", "in", "range", "(", "depth_token_only", ")", "\n", "]", "\n", ")", "\n", "\n", "self", ".", "norm", "=", "norm_layer", "(", "int", "(", "embed_dim", ")", ")", "\n", "\n", "self", ".", "total_len", "=", "depth_token_only", "+", "depth", "\n", "\n", "self", ".", "feature_info", "=", "[", "dict", "(", "num_chs", "=", "int", "(", "embed_dim", ")", ",", "reduction", "=", "0", ",", "module", "=", "'head'", ")", "]", "\n", "if", "not", "self", ".", "multiclass", ":", "\n", "            ", "self", ".", "head", "=", "nn", ".", "Linear", "(", "int", "(", "embed_dim", ")", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "head", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Linear", "(", "int", "(", "embed_dim", ")", ",", "1", ")", "for", "_", "in", "range", "(", "num_classes", ")", "]", ")", "\n", "\n", "", "self", ".", "rescale", ":", "float", "=", "0.02", "\n", "\n", "trunc_normal_", "(", "self", ".", "cls_token", ",", "std", "=", "self", ".", "rescale", ")", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet._init_weights": [[361, 369], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", "self", ".", "rescale", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.no_weight_decay": [[370, 373], ["None"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "ignore", "\n", "def", "no_weight_decay", "(", "self", ")", ":", "\n", "        ", "return", "{", "'cls_token'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.get_classifier": [[374, 376], ["None"], "methods", ["None"], ["", "def", "get_classifier", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "head", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.get_num_layers": [[377, 379], ["len"], "methods", ["None"], ["", "def", "get_num_layers", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "blocks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.reset_classifier": [[380, 383], ["torch.Linear", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.Identity"], "methods", ["None"], ["", "def", "reset_classifier", "(", "self", ",", "num_classes", ":", "int", ",", "global_pool", ":", "str", "=", "''", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features": [[384, 402], ["patchconvnet_models.PatchConvnet.patch_embed", "patchconvnet_models.PatchConvnet.cls_token.expand", "enumerate", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "patchconvnet_models.PatchConvnet.norm", "blk", "blk", "x[].reshape"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "cls_tokens", "=", "self", ".", "cls_token", ".", "expand", "(", "B", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "for", "i", ",", "blk", "in", "enumerate", "(", "self", ".", "blocks_token_only", ")", ":", "\n", "            ", "cls_tokens", "=", "blk", "(", "x", ",", "cls_tokens", ")", "\n", "", "x", "=", "torch", ".", "cat", "(", "(", "cls_tokens", ",", "x", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "\n", "if", "not", "self", ".", "multiclass", ":", "\n", "            ", "return", "x", "[", ":", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "x", "[", ":", ",", ":", "self", ".", "num_classes", "]", ".", "reshape", "(", "B", ",", "self", ".", "num_classes", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward": [[403, 414], ["patchconvnet_models.PatchConvnet.forward_features", "patchconvnet_models.PatchConvnet.head", "range", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "all_results.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.PatchConvnet.forward_features"], ["", "", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "forward_features", "(", "x", ")", "\n", "if", "not", "self", ".", "multiclass", ":", "\n", "            ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "return", "x", "\n", "", "else", ":", "\n", "            ", "all_results", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "                ", "all_results", ".", "append", "(", "self", ".", "head", "[", "i", "]", "(", "x", "[", ":", ",", "i", "]", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "all_results", ",", "dim", "=", "1", ")", ".", "reshape", "(", "B", ",", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.conv3x3": [[224, 228], ["torch.Sequential", "torch.Conv2d"], "function", ["None"], ["", "", "def", "conv3x3", "(", "in_planes", ":", "int", ",", "out_planes", ":", "int", ",", "stride", ":", "int", "=", "1", ")", "->", "nn", ".", "Sequential", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.S60": [[416, 433], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "", "", "@", "register_model", "\n", "def", "S60", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "384", ",", "\n", "depth", "=", "60", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "depth_token_only", "=", "1", ",", "\n", "mlp_ratio_clstk", "=", "3.0", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.S120": [[435, 452], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "S120", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "384", ",", "\n", "depth", "=", "120", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "mlp_ratio_clstk", "=", "3.0", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.B60": [[454, 469], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "B60", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "60", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.B120": [[471, 487], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "B120", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "768", ",", "\n", "depth", "=", "120", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.L60": [[489, 506], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "L60", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "1024", ",", "\n", "depth", "=", "60", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "mlp_ratio_clstk", "=", "3.0", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.L120": [[508, 525], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "L120", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "1024", ",", "\n", "depth", "=", "120", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "init_scale", "=", "1e-6", ",", "\n", "mlp_ratio_clstk", "=", "3.0", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.patchconvnet_models.S60_multi": [[527, 546], ["patchconvnet_models.PatchConvnet", "functools.partial"], "function", ["None"], ["", "@", "register_model", "\n", "def", "S60_multi", "(", "pretrained", ":", "bool", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "PatchConvnet", "(", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "384", ",", "\n", "depth", "=", "60", ",", "\n", "num_heads", "=", "1", ",", "\n", "qkv_bias", "=", "True", ",", "\n", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "Patch_layer", "=", "ConvStem", ",", "\n", "Attention_block", "=", "Conv_blocks_se", ",", "\n", "Attention_block_token_only", "=", "Learned_Aggregation_Layer_multi", ",", "\n", "depth_token_only", "=", "1", ",", "\n", "mlp_ratio_clstk", "=", "3.0", ",", "\n", "multiclass", "=", "True", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.Trainer.__init__": [[49, 51], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.Trainer.__call__": [[52, 57], ["run_with_submitit.Trainer._setup_gpu_args", "main.main"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.Trainer._setup_gpu_args", "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.main"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "import", "main", "as", "classification", "\n", "\n", "self", ".", "_setup_gpu_args", "(", ")", "\n", "classification", ".", "main", "(", "self", ".", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.Trainer.checkpoint": [[58, 69], ["get_init_file().as_uri", "os.path.join", "os.path.exists", "print", "submitit.helpers.DelayedSubmission", "type", "run_with_submitit.get_init_file"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_init_file"], ["", "def", "checkpoint", "(", "self", ")", ":", "\n", "        ", "import", "os", "\n", "import", "submitit", "\n", "\n", "self", ".", "args", ".", "dist_url", "=", "get_init_file", "(", ")", ".", "as_uri", "(", ")", "\n", "checkpoint_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "output_dir", ",", "\"checkpoint.pth\"", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "checkpoint_file", ")", ":", "\n", "            ", "self", ".", "args", ".", "resume", "=", "checkpoint_file", "\n", "", "print", "(", "\"Requeuing \"", ",", "self", ".", "args", ")", "\n", "empty_trainer", "=", "type", "(", "self", ")", "(", "self", ".", "args", ")", "\n", "return", "submitit", ".", "helpers", ".", "DelayedSubmission", "(", "empty_trainer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.Trainer._setup_gpu_args": [[70, 80], ["submitit.JobEnvironment", "pathlib.Path", "print", "str().replace", "str", "str"], "methods", ["None"], ["", "def", "_setup_gpu_args", "(", "self", ")", ":", "\n", "        ", "import", "submitit", "\n", "from", "pathlib", "import", "Path", "\n", "\n", "job_env", "=", "submitit", ".", "JobEnvironment", "(", ")", "\n", "self", ".", "args", ".", "output_dir", "=", "Path", "(", "str", "(", "self", ".", "args", ".", "output_dir", ")", ".", "replace", "(", "\"%j\"", ",", "str", "(", "job_env", ".", "job_id", ")", ")", ")", "\n", "self", ".", "args", ".", "gpu", "=", "job_env", ".", "local_rank", "\n", "self", ".", "args", ".", "rank", "=", "job_env", ".", "global_rank", "\n", "self", ".", "args", ".", "world_size", "=", "job_env", ".", "num_tasks", "\n", "print", "(", "f\"Process group: {job_env.num_tasks} tasks, rank: {job_env.global_rank}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.parse_args": [[15, 28], ["main.get_args_parser", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.main.get_args_parser", "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "classification_parser", "=", "classification", ".", "get_args_parser", "(", ")", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\"Submitit for DeiT\"", ",", "parents", "=", "[", "classification_parser", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--ngpus\"", ",", "default", "=", "8", ",", "type", "=", "int", ",", "help", "=", "\"Number of gpus to request on each node\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--nodes\"", ",", "default", "=", "2", ",", "type", "=", "int", ",", "help", "=", "\"Number of nodes to request\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--timeout\"", ",", "default", "=", "2800", ",", "type", "=", "int", ",", "help", "=", "\"Duration of the job\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--job_dir\"", ",", "default", "=", "\"\"", ",", "type", "=", "str", ",", "help", "=", "\"Job dir. Leave empty for automatic.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--partition\"", ",", "default", "=", "\"learnfair\"", ",", "type", "=", "str", ",", "help", "=", "\"Partition where to submit\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_volta32\"", ",", "action", "=", "'store_true'", ",", "help", "=", "\"Big models? Use this\"", ")", "\n", "parser", ".", "add_argument", "(", "'--comment'", ",", "default", "=", "\"\"", ",", "type", "=", "str", ",", "\n", "help", "=", "'Comment to pass to scheduler, e.g. priority message'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_shared_folder": [[30, 37], ["os.getenv", "pathlib.Path().is_dir", "RuntimeError", "pathlib.Path", "pathlib.Path.mkdir", "pathlib.Path"], "function", ["None"], ["", "def", "get_shared_folder", "(", ")", "->", "Path", ":", "\n", "    ", "user", "=", "os", ".", "getenv", "(", "\"USER\"", ")", "\n", "if", "Path", "(", "\"/checkpoint/\"", ")", ".", "is_dir", "(", ")", ":", "\n", "        ", "p", "=", "Path", "(", "f\"/checkpoint/{user}/experiments\"", ")", "\n", "p", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "return", "p", "\n", "", "raise", "RuntimeError", "(", "\"No shared folder available\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_init_file": [[39, 46], ["os.makedirs", "init_file.exists", "str", "run_with_submitit.get_shared_folder", "os.remove", "run_with_submitit.get_shared_folder", "str", "uuid.uuid4"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_shared_folder", "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_shared_folder"], ["", "def", "get_init_file", "(", ")", ":", "\n", "# Init file must not exist, but it's parent dir must exist.", "\n", "    ", "os", ".", "makedirs", "(", "str", "(", "get_shared_folder", "(", ")", ")", ",", "exist_ok", "=", "True", ")", "\n", "init_file", "=", "get_shared_folder", "(", ")", "/", "f\"{uuid.uuid4().hex}_init\"", "\n", "if", "init_file", ".", "exists", "(", ")", ":", "\n", "        ", "os", ".", "remove", "(", "str", "(", "init_file", ")", ")", "\n", "", "return", "init_file", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.main": [[82, 123], ["run_with_submitit.parse_args", "submitit.AutoExecutor", "submitit.AutoExecutor.update_parameters", "submitit.AutoExecutor.update_parameters", "get_init_file().as_uri", "run_with_submitit.Trainer", "submitit.AutoExecutor.submit", "print", "run_with_submitit.get_shared_folder", "run_with_submitit.get_init_file"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.parse_args", "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_shared_folder", "home.repos.pwc.inspect_result.facebookresearch_deit.None.run_with_submitit.get_init_file"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "if", "args", ".", "job_dir", "==", "\"\"", ":", "\n", "        ", "args", ".", "job_dir", "=", "get_shared_folder", "(", ")", "/", "\"%j\"", "\n", "\n", "# Note that the folder will depend on the job_id, to easily track experiments", "\n", "", "executor", "=", "submitit", ".", "AutoExecutor", "(", "folder", "=", "args", ".", "job_dir", ",", "slurm_max_num_timeout", "=", "30", ")", "\n", "\n", "num_gpus_per_node", "=", "args", ".", "ngpus", "\n", "nodes", "=", "args", ".", "nodes", "\n", "timeout_min", "=", "args", ".", "timeout", "\n", "\n", "partition", "=", "args", ".", "partition", "\n", "kwargs", "=", "{", "}", "\n", "if", "args", ".", "use_volta32", ":", "\n", "        ", "kwargs", "[", "'slurm_constraint'", "]", "=", "'volta32gb'", "\n", "", "if", "args", ".", "comment", ":", "\n", "        ", "kwargs", "[", "'slurm_comment'", "]", "=", "args", ".", "comment", "\n", "\n", "", "executor", ".", "update_parameters", "(", "\n", "mem_gb", "=", "40", "*", "num_gpus_per_node", ",", "\n", "gpus_per_node", "=", "num_gpus_per_node", ",", "\n", "tasks_per_node", "=", "num_gpus_per_node", ",", "# one task per GPU", "\n", "cpus_per_task", "=", "10", ",", "\n", "nodes", "=", "nodes", ",", "\n", "timeout_min", "=", "timeout_min", ",", "# max is 60 * 72", "\n", "# Below are cluster dependent parameters", "\n", "slurm_partition", "=", "partition", ",", "\n", "slurm_signal_delay_s", "=", "120", ",", "\n", "**", "kwargs", "\n", ")", "\n", "\n", "executor", ".", "update_parameters", "(", "name", "=", "\"deit\"", ")", "\n", "\n", "args", ".", "dist_url", "=", "get_init_file", "(", ")", ".", "as_uri", "(", ")", "\n", "args", ".", "output_dir", "=", "args", ".", "job_dir", "\n", "\n", "trainer", "=", "Trainer", "(", "args", ")", "\n", "job", "=", "executor", ".", "submit", "(", "trainer", ")", "\n", "\n", "print", "(", "\"Submitted job_id:\"", ",", "job", ".", "job_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.INatDataset.__init__": [[14, 52], ["os.path.join", "os.path.join", "len", "open", "json.load", "open", "json.load", "open", "json.load", "king.append", "elem[].split", "int", "os.path.join", "torchvision.datasets.INatDataset.samples.append", "os.path.join", "targeter.keys", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "year", "=", "2018", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "category", "=", "'name'", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "loader", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "year", "=", "year", "\n", "# assert category in ['kingdom','phylum','class','order','supercategory','family','genus','name']", "\n", "path_json", "=", "os", ".", "path", ".", "join", "(", "root", ",", "f'{\"train\" if train else \"val\"}{year}.json'", ")", "\n", "with", "open", "(", "path_json", ")", "as", "json_file", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "json_file", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'categories.json'", ")", ")", "as", "json_file", ":", "\n", "            ", "data_catg", "=", "json", ".", "load", "(", "json_file", ")", "\n", "\n", "", "path_json_for_targeter", "=", "os", ".", "path", ".", "join", "(", "root", ",", "f\"train{year}.json\"", ")", "\n", "\n", "with", "open", "(", "path_json_for_targeter", ")", "as", "json_file", ":", "\n", "            ", "data_for_targeter", "=", "json", ".", "load", "(", "json_file", ")", "\n", "\n", "", "targeter", "=", "{", "}", "\n", "indexer", "=", "0", "\n", "for", "elem", "in", "data_for_targeter", "[", "'annotations'", "]", ":", "\n", "            ", "king", "=", "[", "]", "\n", "king", ".", "append", "(", "data_catg", "[", "int", "(", "elem", "[", "'category_id'", "]", ")", "]", "[", "category", "]", ")", "\n", "if", "king", "[", "0", "]", "not", "in", "targeter", ".", "keys", "(", ")", ":", "\n", "                ", "targeter", "[", "king", "[", "0", "]", "]", "=", "indexer", "\n", "indexer", "+=", "1", "\n", "", "", "self", ".", "nb_classes", "=", "len", "(", "targeter", ")", "\n", "\n", "self", ".", "samples", "=", "[", "]", "\n", "for", "elem", "in", "data", "[", "'images'", "]", ":", "\n", "            ", "cut", "=", "elem", "[", "'file_name'", "]", ".", "split", "(", "'/'", ")", "\n", "target_current", "=", "int", "(", "cut", "[", "2", "]", ")", "\n", "path_current", "=", "os", ".", "path", ".", "join", "(", "root", ",", "cut", "[", "0", "]", ",", "cut", "[", "2", "]", ",", "cut", "[", "3", "]", ")", "\n", "\n", "categors", "=", "data_catg", "[", "target_current", "]", "\n", "target_current_true", "=", "targeter", "[", "categors", "[", "category", "]", "]", "\n", "self", ".", "samples", ".", "append", "(", "(", "path_current", ",", "target_current_true", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.build_dataset": [[56, 76], ["datasets.build_transform", "torchvision.datasets.CIFAR100", "os.path.join", "torchvision.datasets.ImageFolder", "datasets.INatDataset", "datasets.INatDataset"], "function", ["home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.build_transform"], ["", "", "", "def", "build_dataset", "(", "is_train", ",", "args", ")", ":", "\n", "    ", "transform", "=", "build_transform", "(", "is_train", ",", "args", ")", "\n", "\n", "if", "args", ".", "data_set", "==", "'CIFAR'", ":", "\n", "        ", "dataset", "=", "datasets", ".", "CIFAR100", "(", "args", ".", "data_path", ",", "train", "=", "is_train", ",", "transform", "=", "transform", ")", "\n", "nb_classes", "=", "100", "\n", "", "elif", "args", ".", "data_set", "==", "'IMNET'", ":", "\n", "        ", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_path", ",", "'train'", "if", "is_train", "else", "'val'", ")", "\n", "dataset", "=", "datasets", ".", "ImageFolder", "(", "root", ",", "transform", "=", "transform", ")", "\n", "nb_classes", "=", "1000", "\n", "", "elif", "args", ".", "data_set", "==", "'INAT'", ":", "\n", "        ", "dataset", "=", "INatDataset", "(", "args", ".", "data_path", ",", "train", "=", "is_train", ",", "year", "=", "2018", ",", "\n", "category", "=", "args", ".", "inat_category", ",", "transform", "=", "transform", ")", "\n", "nb_classes", "=", "dataset", ".", "nb_classes", "\n", "", "elif", "args", ".", "data_set", "==", "'INAT19'", ":", "\n", "        ", "dataset", "=", "INatDataset", "(", "args", ".", "data_path", ",", "train", "=", "is_train", ",", "year", "=", "2019", ",", "\n", "category", "=", "args", ".", "inat_category", ",", "transform", "=", "transform", ")", "\n", "nb_classes", "=", "dataset", ".", "nb_classes", "\n", "\n", "", "return", "dataset", ",", "nb_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_deit.None.datasets.build_transform": [[78, 110], ["t.append", "t.append", "torchvision.transforms.Compose", "timm.data.create_transform", "int", "t.append", "t.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.RandomCrop", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop"], "function", ["None"], ["", "def", "build_transform", "(", "is_train", ",", "args", ")", ":", "\n", "    ", "resize_im", "=", "args", ".", "input_size", ">", "32", "\n", "if", "is_train", ":", "\n", "# this should always dispatch to transforms_imagenet_train", "\n", "        ", "transform", "=", "create_transform", "(", "\n", "input_size", "=", "args", ".", "input_size", ",", "\n", "is_training", "=", "True", ",", "\n", "color_jitter", "=", "args", ".", "color_jitter", ",", "\n", "auto_augment", "=", "args", ".", "aa", ",", "\n", "interpolation", "=", "args", ".", "train_interpolation", ",", "\n", "re_prob", "=", "args", ".", "reprob", ",", "\n", "re_mode", "=", "args", ".", "remode", ",", "\n", "re_count", "=", "args", ".", "recount", ",", "\n", ")", "\n", "if", "not", "resize_im", ":", "\n", "# replace RandomResizedCropAndInterpolation with", "\n", "# RandomCrop", "\n", "            ", "transform", ".", "transforms", "[", "0", "]", "=", "transforms", ".", "RandomCrop", "(", "\n", "args", ".", "input_size", ",", "padding", "=", "4", ")", "\n", "", "return", "transform", "\n", "\n", "", "t", "=", "[", "]", "\n", "if", "resize_im", ":", "\n", "        ", "size", "=", "int", "(", "(", "256", "/", "224", ")", "*", "args", ".", "input_size", ")", "\n", "t", ".", "append", "(", "\n", "transforms", ".", "Resize", "(", "size", ",", "interpolation", "=", "3", ")", ",", "# to maintain same ratio w.r.t. 224 images", "\n", ")", "\n", "t", ".", "append", "(", "transforms", ".", "CenterCrop", "(", "args", ".", "input_size", ")", ")", "\n", "\n", "", "t", ".", "append", "(", "transforms", ".", "ToTensor", "(", ")", ")", "\n", "t", ".", "append", "(", "transforms", ".", "Normalize", "(", "IMAGENET_DEFAULT_MEAN", ",", "IMAGENET_DEFAULT_STD", ")", ")", "\n", "return", "transforms", ".", "Compose", "(", "t", ")", "\n", "", ""]]}