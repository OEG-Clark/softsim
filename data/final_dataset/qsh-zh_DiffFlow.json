{"home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.run": [[16, 62], ["jamtorch.ddp.ddp_utils.is_master", "jamtorch.set_gpu_mode", "modules.import_fns", "init_model", "jammy.jam_instantiate", "trainer.set_model_optim", "trainer_register", "jamtorch.trainer.check_loss_error", "datasets.get_dataset", "jamtorch.data.get_subset", "jamtorch.data.get_subset", "jammy.jam_instantiate", "trainer.set_dataloader", "jamtorch.ddp.ddp_utils.is_master", "trainer.train", "jammy.logging.Wandb.finish", "jammy.logging.Wandb.launch", "jammy.logging.get_logger", "jammy.load_class", "loss_fn_wrapper", "trainer.set_sampler", "jamtorch.trainer.trainer_save_cfg", "trainer.set_monitor", "trainer.save_ckpt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.__init__.import_fns", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde.init_model", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.__init__.get_dataset", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_loss.loss_fn_wrapper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer.set_monitor"], ["def", "run", "(", "cfg", ")", ":", "\n", "    ", "if", "ddp_utils", ".", "is_master", "(", ")", ":", "\n", "        ", "Wandb", ".", "launch", "(", "cfg", ",", "cfg", ".", "log", ",", "True", ")", "\n", "get_logger", "(", "\n", "\"jam_.log\"", ",", "\n", "clear", "=", "True", ",", "\n", "format", "=", "\"{time:YYYY-MM-DD at HH:mm:ss} | {level} | {message}\"", ",", "\n", "level", "=", "\"DEBUG\"", ",", "\n", ")", "\n", "", "jampt", ".", "set_gpu_mode", "(", "cfg", ".", "cuda", ",", "cfg", ".", "trainer", ".", "gpu", ")", "\n", "\n", "init_model", ",", "loss_fn_wrapper", ",", "trainer_register", "=", "import_fns", "(", "cfg", ".", "model", ")", "\n", "\n", "trainer_str", "=", "(", "\n", "\"utils.ddp_trainer.Trainer\"", "if", "cfg", ".", "is_dist", "else", "\"utils.trainer.Trainer\"", "\n", ")", "\n", "trainer", "=", "load_class", "(", "trainer_str", ")", "(", "cfg", ".", "trainer", ",", "loss_fn_wrapper", "(", "cfg", ")", ")", "\n", "model", "=", "init_model", "(", "cfg", ".", "model", ")", "\n", "optimizer", "=", "jam_instantiate", "(", "cfg", ".", "optimizer", ".", "fn", ",", "cfg", ".", "optimizer", ",", "model", ")", "\n", "trainer", ".", "set_model_optim", "(", "model", ",", "optimizer", ")", "\n", "trainer_register", "(", "trainer", ",", "cfg", ")", "\n", "check_loss_error", "(", "trainer", ")", "\n", "\n", "# data", "\n", "trainset", ",", "valset", "=", "get_dataset", "(", "cfg", ".", "data", ")", "\n", "trainset", "=", "get_subset", "(", "trainset", ",", "cfg", ".", "data", ".", "train_size", ")", "\n", "valset", "=", "get_subset", "(", "valset", ",", "cfg", ".", "data", ".", "val_size", ")", "\n", "train_loader", ",", "train_sampler", ",", "val_loader", ",", "val_sampler", "=", "jam_instantiate", "(", "\n", "cfg", ".", "data", ".", "dataloader", ",", "\n", "trainset", ",", "\n", "valset", ",", "\n", "rank", "=", "cfg", ".", "trainer", ".", "rank", ",", "\n", "world_size", "=", "cfg", ".", "trainer", ".", "world_size", ",", "\n", ")", "\n", "if", "cfg", ".", "is_dist", ":", "\n", "        ", "trainer", ".", "set_sampler", "(", "train_sampler", ",", "val_sampler", ")", "\n", "", "trainer", ".", "set_dataloader", "(", "train_loader", ",", "val_loader", ")", "\n", "\n", "if", "ddp_utils", ".", "is_master", "(", ")", ":", "\n", "        ", "trainer_save_cfg", "(", "trainer", ",", "cfg", ")", "\n", "trainer", ".", "set_monitor", "(", "cfg", ".", "log", ")", "\n", "trainer", ".", "save_ckpt", "(", ")", "\n", "\n", "", "trainer", ".", "train", "(", ")", "\n", "\n", "Wandb", ".", "finish", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.mock_run": [[64, 67], ["main.run"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.run"], ["", "@", "ddp_utils", ".", "ddp_runner", "\n", "def", "mock_run", "(", "cfg", ")", ":", "\n", "    ", "run", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.main": [[69, 80], ["hydra.main", "omegaconf.OmegaConf.set_struct", "jammy.link_hyd_run", "jammy.hydpath", "torch.cuda.device_count", "torch.cuda.device_count", "jamtorch.ddp.ddp_utils.prepare_cfg", "torch.spawn", "main.run"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.main", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.None.main.run"], ["", "@", "hydra", ".", "main", "(", "config_path", "=", "\"conf\"", ",", "config_name", "=", "\"config.yaml\"", ")", "\n", "def", "main", "(", "cfg", ")", ":", "\n", "    ", "OmegaConf", ".", "set_struct", "(", "cfg", ",", "False", ")", "\n", "link_hyd_run", "(", ")", "\n", "cfg", ".", "data", ".", "path", "=", "hydpath", "(", "\"data\"", ")", "# address hyd relative path", "\n", "if", "cfg", ".", "is_dist", ":", "\n", "        ", "world_size", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "ddp_utils", ".", "prepare_cfg", "(", "cfg", ")", "\n", "mp", ".", "spawn", "(", "mock_run", ",", "args", "=", "(", "world_size", ",", "None", ",", "cfg", ")", ",", "nprocs", "=", "world_size", ",", "join", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "run", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.__attrs_post_init__": [[64, 72], ["torch.linspace", "torch.linspace"], "methods", ["None"], ["def", "__attrs_post_init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "base", "=", "torch", ".", "linspace", "(", "\n", "self", ".", "t_start", "**", "self", ".", "exp", ",", "self", ".", "t_end", "**", "self", ".", "exp", ",", "self", ".", "num_steps", "\n", ")", "\n", "self", ".", "fix_x_slot", "=", "torch", ".", "linspace", "(", "\n", "self", ".", "t_start", "**", "self", ".", "exp", ",", "self", ".", "t_end", "**", "self", ".", "exp", ",", "self", ".", "num_steps", "+", "1", "\n", ")", "\n", "self", ".", "intervals", "=", "self", ".", "base", "[", "1", ":", "]", "-", "self", ".", "base", "[", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.__call__": [[73, 76], ["torch.pow", "scalars.ExpTimer.deal_flip"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.deal_flip"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "value", "=", "torch", ".", "pow", "(", "self", ".", "fix_x_slot", ",", "1.0", "/", "self", ".", "exp", ")", "\n", "return", "self", ".", "deal_flip", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.deal_flip": [[77, 82], ["torch.flip"], "methods", ["None"], ["", "def", "deal_flip", "(", "self", ",", "value", ")", ":", "\n", "        ", "if", "self", ".", "exp", ">", "1.0", ":", "\n", "            ", "value", "=", "self", ".", "t_start", "+", "self", ".", "t_end", "-", "value", "\n", "value", "=", "torch", ".", "flip", "(", "value", ",", "(", "0", ",", ")", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.rand": [[83, 89], ["torch.rand", "torch.cat().flatten", "torch.pow", "scalars.ExpTimer.deal_flip", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.deal_flip"], ["", "def", "rand", "(", "self", ")", ":", "\n", "        ", "ratio", "=", "torch", ".", "rand", "(", "self", ".", "num_steps", "-", "1", ")", "\n", "mid_times", "=", "ratio", "*", "self", ".", "intervals", "+", "self", ".", "base", "[", ":", "-", "1", "]", "\n", "times", "=", "torch", ".", "cat", "(", "[", "self", ".", "base", "[", ":", "1", "]", ",", "mid_times", ",", "self", ".", "base", "[", "-", "1", ":", "]", "]", ")", ".", "flatten", "(", ")", "\n", "value", "=", "torch", ".", "pow", "(", "times", ",", "1.0", "/", "self", ".", "exp", ")", "\n", "return", "self", ".", "deal_flip", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.ExpTimer.index": [[90, 95], ["numpy.isclose", "torch.clip", "torch.pow", "torch.ones_like"], "methods", ["None"], ["", "def", "index", "(", "self", ",", "time", ")", ":", "\n", "        ", "if", "np", ".", "isclose", "(", "self", ".", "t_start", ",", "self", ".", "t_end", ")", ":", "\n", "            ", "return", "torch", ".", "pow", "(", "self", ".", "base", "[", "-", "1", "]", ",", "1.0", "/", "self", ".", "exp", ")", "*", "torch", ".", "ones_like", "(", "time", ")", "\n", "", "time", "=", "torch", ".", "clip", "(", "time", ",", "self", ".", "t_start", ",", "self", ".", "t_end", ")", "\n", "return", "time", "\n", "# base = time ** self.exp", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.SCurve.__attrs_post_init__": [[108, 119], ["numpy.interp", "numpy.linspace", "numpy.cumsum"], "methods", ["None"], ["def", "__attrs_post_init__", "(", "self", ")", ":", "\n", "        ", "avg", "=", "(", "self", ".", "t_end", "-", "self", ".", "t_start", ")", "/", "self", ".", "num_steps", "\n", "self", ".", "ratio_x", "=", "[", "0.0", ",", "0.2", ",", "0.9", ",", "1", "]", "\n", "# self.ratio_y = [0., 0.1, 0.1, 1]", "\n", "self", ".", "ratio_y", "=", "[", "0.0", ",", "avg", ",", "avg", ",", "0.2", "]", "\n", "int_y", "=", "np", ".", "interp", "(", "\n", "np", ".", "linspace", "(", "0", ",", "1", ",", "self", ".", "num_steps", "+", "1", ")", ",", "self", ".", "ratio_x", ",", "self", ".", "ratio_y", "\n", ")", "\n", "# delta = int_y * avg / 0.1", "\n", "delta", "=", "int_y", "\n", "self", ".", "_time", "=", "np", ".", "cumsum", "(", "delta", ")", "+", "self", ".", "t_start", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.SCurve.__call__": [[120, 122], ["torch.from_numpy().float", "torch.from_numpy"], "methods", ["None"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "self", ".", "_time", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.SCurve.rand": [[123, 131], ["numpy.linspace", "numpy.random.rand", "numpy.concatenate().flatten", "torch.from_numpy().float", "numpy.concatenate", "torch.from_numpy", "numpy.interp", "numpy.linspace"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand"], ["", "def", "rand", "(", "self", ")", ":", "\n", "        ", "midpoints", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "self", ".", "num_steps", ")", "\n", "delta_t", "=", "midpoints", "[", "1", ":", "]", "-", "midpoints", "[", ":", "-", "1", "]", "\n", "ratio", "=", "np", ".", "random", ".", "rand", "(", "self", ".", "num_steps", "-", "1", ")", "\n", "mid_timestamps", "=", "delta_t", "*", "ratio", "+", "midpoints", "[", ":", "-", "1", "]", "\n", "timestamps", "=", "np", ".", "concatenate", "(", "[", "[", "0", "]", ",", "mid_timestamps", ",", "[", "1", "]", "]", ")", ".", "flatten", "(", ")", "\n", "return", "torch", ".", "from_numpy", "(", "\n", "np", ".", "interp", "(", "timestamps", ",", "np", ".", "linspace", "(", "0", ",", "1", ",", "self", ".", "num_steps", "+", "1", ")", ",", "self", ".", "_time", ")", "\n", ")", ".", "float", "(", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.SCurve.index": [[133, 137], ["numpy.isclose", "torch.ones_like"], "methods", ["None"], ["", "def", "index", "(", "self", ",", "time", ")", ":", "\n", "        ", "if", "np", ".", "isclose", "(", "self", ".", "t_start", ",", "self", ".", "t_end", ")", ":", "\n", "            ", "return", "torch", ".", "ones_like", "(", "time", ")", "*", "self", ".", "t_start", "\n", "", "return", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.FTimer.__attrs_post_init__": [[146, 150], ["int", "scalars.ExpTimer", "scalars.ExpTimer"], "methods", ["None"], ["def", "__attrs_post_init__", "(", "self", ")", ":", "\n", "        ", "first_p", "=", "int", "(", "self", ".", "num_steps", "*", "0.9", ")", "\n", "self", ".", "t1", "=", "ExpTimer", "(", "first_p", ",", "self", ".", "t_start", ",", "self", ".", "t_end", ",", "self", ".", "exp", ")", "\n", "self", ".", "t2", "=", "ExpTimer", "(", "self", ".", "num_steps", "-", "first_p", ",", "self", ".", "t_end", ",", "0.5", ",", "1.0", "/", "self", ".", "exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.FTimer.__call__": [[151, 153], ["torch.cat", "scalars.FTimer.t2", "scalars.FTimer.t1"], "methods", ["None"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "self", ".", "t1", "(", ")", "[", ":", "-", "1", "]", ",", "self", ".", "t2", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.__attrs_post_init__": [[162, 182], ["scipy.interpolate.interp1d", "numpy.linspace", "scalars.STimer.interp1d_fn", "scipy.interpolate.interp1d", "numpy.linspace", "torch.from_numpy().float", "numpy.sum", "numpy.cumsum", "torch.from_numpy", "scalars.STimer.time_fn"], "methods", ["None"], ["def", "__attrs_post_init__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "up", ":", "\n", "            ", "x", "=", "[", "0", ",", "0.1", ",", "0.20", ",", "0.4", ",", "0.70", ",", "0.9", ",", "1.0", "]", "\n", "y", "=", "[", "1e-4", ",", "0.05", ",", "0.10", ",", "0.6", ",", "0.93", ",", "0.98", ",", "1.0", "]", "\n", "", "else", ":", "\n", "            ", "x", "=", "[", "0", ",", "0.1", ",", "0.30", ",", "0.6", ",", "0.93", ",", "0.98", ",", "1.0", "]", "\n", "y", "=", "[", "1e-4", ",", "0.2", ",", "0.35", ",", "0.4", ",", "0.70", ",", "0.9", ",", "1.0", "]", "\n", "", "self", ".", "interp1d_fn", "=", "interp1d", "(", "x", ",", "y", ",", "kind", "=", "\"cubic\"", ")", "\n", "fix_x_slot", "=", "np", ".", "linspace", "(", "1e-4", ",", "1.0", ",", "self", ".", "num_steps", "+", "1", ")", "\n", "dt", "=", "self", ".", "interp1d_fn", "(", "fix_x_slot", ")", "\n", "dt_sum", "=", "np", ".", "sum", "(", "dt", ")", "+", "self", ".", "t_start", "\n", "self", ".", "scale", "=", "self", ".", "t_end", "/", "dt_sum", "\n", "self", ".", "fix_t_slot", "=", "(", "np", ".", "cumsum", "(", "dt", ")", "+", "self", ".", "t_start", ")", "*", "self", ".", "scale", "\n", "self", ".", "time_fn", "=", "interp1d", "(", "fix_x_slot", ",", "self", ".", "fix_t_slot", ")", "\n", "self", ".", "fix_x_slot", "=", "fix_x_slot", "\n", "\n", "# for dealing with t", "\n", "random_x_slot", "=", "np", ".", "linspace", "(", "1e-4", ",", "1.0", ",", "self", ".", "num_steps", ")", "\n", "self", ".", "random_t_slot", "=", "torch", ".", "from_numpy", "(", "self", ".", "time_fn", "(", "random_x_slot", ")", ")", ".", "float", "(", ")", "\n", "self", ".", "random_t_interval", "=", "self", ".", "random_t_slot", "[", "1", ":", "]", "-", "self", ".", "random_t_slot", "[", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.__call__": [[183, 185], ["torch.from_numpy().float", "torch.from_numpy"], "methods", ["None"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "from_numpy", "(", "self", ".", "fix_t_slot", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand": [[186, 191], ["torch.rand", "torch.cat().flatten", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand"], ["", "def", "rand", "(", "self", ")", ":", "\n", "        ", "ratio", "=", "torch", ".", "rand", "(", "self", ".", "num_steps", "-", "1", ")", "\n", "mid_times", "=", "ratio", "*", "self", ".", "random_t_interval", "+", "self", ".", "random_t_slot", "[", ":", "-", "1", "]", "\n", "return", "torch", ".", "cat", "(", "\n", "[", "self", ".", "random_t_slot", "[", ":", "1", "]", ",", "mid_times", ",", "self", ".", "random_t_slot", "[", "-", "1", ":", "]", "]", "\n", ")", ".", "flatten", "(", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.index": [[193, 198], ["numpy.isclose", "torch.clip", "torch.ones_like"], "methods", ["None"], ["", "def", "index", "(", "self", ",", "time", ")", ":", "\n", "        ", "if", "np", ".", "isclose", "(", "self", ".", "t_start", ",", "self", ".", "t_end", ")", ":", "\n", "            ", "return", "self", ".", "t_start", "*", "torch", ".", "ones_like", "(", "time", ")", "\n", "", "time", "=", "torch", ".", "clip", "(", "time", ",", "self", ".", "t_start", ",", "self", ".", "t_end", ")", "\n", "return", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.create_alpha_schedule": [[10, 18], ["numpy.linspace", "torch.FloatTensor", "result.append"], "function", ["None"], ["def", "create_alpha_schedule", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ")", ":", "\n", "    ", "betas", "=", "np", ".", "linspace", "(", "t_start", ",", "t_end", ",", "num_steps", ")", "\n", "result", "=", "[", "1.0", "]", "\n", "alpha", "=", "1.0", "\n", "for", "beta", "in", "betas", ":", "\n", "        ", "alpha", "*=", "1", "-", "beta", "\n", "result", ".", "append", "(", "alpha", ")", "\n", "", "return", "torch", ".", "FloatTensor", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.timestamp_fn": [[20, 27], ["numpy.linspace", "numpy.tril", "numpy.concatenate", "torch.FloatTensor().flatten", "numpy.ones", "np.linspace.reshape", "numpy.zeros().reshape", "torch.FloatTensor", "numpy.zeros"], "function", ["None"], ["", "def", "timestamp_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ")", ":", "\n", "    ", "betas", "=", "np", ".", "linspace", "(", "t_start", ",", "t_end", ",", "num_steps", ")", "\n", "low_tri", "=", "np", ".", "tril", "(", "np", ".", "ones", "(", "(", "num_steps", ",", "num_steps", ")", ")", ")", "\n", "m", "=", "np", ".", "concatenate", "(", "(", "np", ".", "zeros", "(", "num_steps", ")", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "low_tri", ")", ",", "axis", "=", "0", ")", "\n", "times", "=", "m", "@", "betas", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "assert", "times", ".", "size", "==", "num_steps", "+", "1", "\n", "return", "torch", ".", "FloatTensor", "(", "times", ")", ".", "flatten", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.diffusion_fn": [[29, 32], ["numpy.linspace", "torch.sqrt", "torch.FloatTensor"], "function", ["None"], ["", "def", "diffusion_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ")", ":", "\n", "    ", "betas", "=", "np", ".", "linspace", "(", "t_start", ",", "t_end", ",", "num_steps", "+", "1", ")", "\n", "return", "torch", ".", "sqrt", "(", "torch", ".", "FloatTensor", "(", "betas", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.squareliner_fn": [[34, 37], ["numpy.linspace", "torch.pow", "numpy.sqrt", "numpy.sqrt", "torch.FloatTensor"], "function", ["None"], ["", "def", "squareliner_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ")", ":", "\n", "    ", "square", "=", "np", ".", "linspace", "(", "np", ".", "sqrt", "(", "t_start", ")", ",", "np", ".", "sqrt", "(", "t_end", ")", ",", "num_steps", "+", "1", ")", "\n", "return", "torch", ".", "pow", "(", "torch", ".", "FloatTensor", "(", "square", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.linear_fn": [[39, 42], ["numpy.linspace", "torch.FloatTensor"], "function", ["None"], ["", "def", "linear_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ")", ":", "\n", "    ", "square", "=", "np", ".", "linspace", "(", "t_start", ",", "t_end", ",", "num_steps", "+", "1", ")", "\n", "return", "torch", ".", "FloatTensor", "(", "square", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.exp_fn": [[44, 47], ["numpy.linspace", "torch.pow", "torch.FloatTensor"], "function", ["None"], ["", "def", "exp_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ",", "exp", "=", "0.9", ")", ":", "\n", "    ", "base", "=", "np", ".", "linspace", "(", "t_start", "**", "exp", ",", "t_end", "**", "exp", ",", "num_steps", "+", "1", ")", "\n", "return", "torch", ".", "pow", "(", "torch", ".", "FloatTensor", "(", "base", ")", ",", "1.0", "/", "exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.g_square_fn": [[49, 55], ["scalars.exp_fn", "torch.cat"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.exp_fn"], ["", "def", "g_square_fn", "(", "num_steps", "=", "100", ",", "t_start", "=", "0.0001", ",", "t_end", "=", "0.02", ",", "exp", "=", "0.9", ")", ":", "\n", "    ", "avg", "=", "(", "t_end", "-", "t_start", ")", "/", "num_steps", "\n", "time", "=", "exp_fn", "(", "num_steps", ",", "t_start", ",", "t_end", ",", "exp", ")", "\n", "dt", "=", "time", "[", "1", ":", "]", "-", "time", "[", ":", "-", "1", "]", "\n", "g", "=", "(", "avg", "/", "dt", ")", "**", "1.5", "\n", "return", "torch", ".", "cat", "(", "[", "g", "[", "-", "1", ":", "]", "*", "1.2", ",", "g", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.instantiate_scaler": [[200, 205], ["jammy.jam_instantiate", "jammy.jam_instantiate", "jammy.jam_instantiate"], "function", ["None"], ["", "", "def", "instantiate_scaler", "(", "cfg", ")", ":", "\n", "    ", "timer", "=", "jam_instantiate", "(", "cfg", ".", "model", ".", "time_fn", ")", "\n", "differ", "=", "jam_instantiate", "(", "cfg", ".", "model", ".", "diff_fn", ")", "\n", "conder", "=", "jam_instantiate", "(", "cfg", ".", "model", ".", "cond_fn", ")", "\n", "return", "timer", ",", "differ", ",", "conder", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.scalar_helper": [[207, 209], ["None"], "function", ["None"], ["", "def", "scalar_helper", "(", "model", ")", ":", "\n", "    ", "return", "model", ".", "timestamps", ",", "model", ".", "diffusion", ",", "model", ".", "condition", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer.__init__": [[9, 12], ["jamtorch.ddp.ema_trainer.EMATrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "loss_fn", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "cfg", ",", "loss_fn", ")", "\n", "self", ".", "trainer_monitor", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer.monitor_update": [[13, 23], ["dict", "ddp_trainer.Trainer.trainer_monitor.update"], "methods", ["None"], ["", "def", "monitor_update", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "trainer_monitor", ":", "\n", "            ", "self", ".", "trainer_monitor", ".", "update", "(", "\n", "{", "\n", "**", "self", ".", "cur_monitor", ",", "# pylint: disable=access-member-before-definition", "\n", "\"epoch\"", ":", "self", ".", "epoch_cnt", ",", "\n", "\"iter\"", ":", "self", ".", "iter_cnt", ",", "\n", "}", "\n", ")", "\n", "", "self", ".", "cur_monitor", "=", "dict", "(", ")", "# pylint: disable=attribute-defined-outside-init", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer.set_monitor": [[24, 29], ["jamtorch.trainer.trainer_monitor.TrainerMonitor"], "methods", ["None"], ["", "def", "set_monitor", "(", "self", ",", "is_wandb", ",", "tblogger", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        docstring\n        \"\"\"", "\n", "self", ".", "trainer_monitor", "=", "TrainerMonitor", "(", "is_wandb", ",", "tblogger", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer._impl_load_ckpt": [[30, 37], ["super()._impl_load_ckpt"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.trainer.Trainer._impl_load_ckpt"], ["", "def", "_impl_load_ckpt", "(", "self", ",", "state", ")", ":", "\n", "# do not overwrite the time coef", "\n", "        ", "state", "[", "\"model\"", "]", "[", "\"timestamps\"", "]", "=", "self", ".", "model", ".", "module", ".", "timestamps", "\n", "state", "[", "\"model\"", "]", "[", "\"diffusion\"", "]", "=", "self", ".", "model", ".", "module", ".", "diffusion", "\n", "state", "[", "\"model\"", "]", "[", "\"condition\"", "]", "=", "self", ".", "model", ".", "module", ".", "condition", "\n", "state", "[", "\"model\"", "]", "[", "\"delta_t\"", "]", "=", "self", ".", "model", ".", "module", ".", "delta_t", "\n", "super", "(", ")", ".", "_impl_load_ckpt", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.ddp_trainer.Trainer.train_step": [[38, 41], ["retry.api.retry_call"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "feed_dict", ")", ":", "\n", "        ", "retry_call", "(", "\n", "super", "(", ")", ".", "train_step", ",", "fargs", "=", "[", "feed_dict", "]", ",", "tries", "=", "3", ",", "exceptions", "=", "LossException", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.trainer.Trainer.__init__": [[8, 12], ["jamtorch.trainer.ema_trainer.EMATrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "loss_fn", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "cfg", ",", "loss_fn", ")", "\n", "self", ".", "rank", "=", "0", "\n", "self", ".", "is_master", "=", "True", "# for sync ddp_trainer", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.trainer.Trainer._impl_load_ckpt": [[13, 20], ["super()._impl_load_ckpt"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.trainer.Trainer._impl_load_ckpt"], ["", "def", "_impl_load_ckpt", "(", "self", ",", "state", ")", ":", "\n", "# do not overwrite the time coef", "\n", "        ", "state", "[", "\"model\"", "]", "[", "\"timestamps\"", "]", "=", "self", ".", "model", ".", "timestamps", "\n", "state", "[", "\"model\"", "]", "[", "\"diffusion\"", "]", "=", "self", ".", "model", ".", "diffusion", "\n", "state", "[", "\"model\"", "]", "[", "\"condition\"", "]", "=", "self", ".", "model", ".", "condition", "\n", "state", "[", "\"model\"", "]", "[", "\"delta_t\"", "]", "=", "self", ".", "model", ".", "delta_t", "\n", "super", "(", ")", ".", "_impl_load_ckpt", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.trainer.Trainer.train_step": [[21, 24], ["jammy.utils.retry.retry_call"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "feed_dict", ")", ":", "\n", "        ", "retry_call", "(", "\n", "super", "(", ")", ".", "train_step", ",", "fargs", "=", "[", "feed_dict", "]", ",", "tries", "=", "3", ",", "exceptions", "=", "LossException", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_whole_process": [[8, 26], ["x.clone.clone", "enumerate", "model.drift", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "x.clone.clone", "model.sample_noise", "x.clone.clone", "torch.sqrt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["@", "no_grad_func", "\n", "def", "forward_whole_process", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "x", "=", "x", ".", "clone", "(", ")", "# avoid overwrite the origin data", "\n", "# TODO: dict can be slow", "\n", "rtn", "=", "{", "\"data\"", ":", "[", "x", ".", "clone", "(", ")", "]", ",", "\"grad\"", ":", "[", "]", ",", "\"noise\"", ":", "[", "]", ",", "\"step_size\"", ":", "[", "]", "}", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "delta_t", ")", ":", "\n", "        ", "cond_f", ",", "diff_f", "=", "condition", "[", "i_th", "]", ",", "diffusion", "[", "i_th", "]", "\n", "grad", "=", "model", ".", "drift", "(", "x", ",", "cond_f", ")", "\n", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "noise", "=", "torch", ".", "sqrt", "(", "cur_delta_t", ")", "*", "diff_f", "*", "model", ".", "sample_noise", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "x", "+=", "grad_step", "+", "noise", "\n", "rtn", "[", "\"data\"", "]", ".", "append", "(", "x", ".", "clone", "(", ")", ")", "\n", "rtn", "[", "\"grad\"", "]", ".", "append", "(", "grad", ")", "\n", "rtn", "[", "\"noise\"", "]", ".", "append", "(", "(", "noise", "/", "cur_delta_t", ")", ")", "\n", "rtn", "[", "\"step_size\"", "]", ".", "append", "(", "cur_delta_t", ")", "\n", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process": [[28, 67], ["z.clone.clone", "enumerate", "torch.flip", "model.drift", "model.score", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "z.clone.clone", "model.sample_noise", "z_mean.clone", "torch.sqrt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["", "@", "no_grad_func", "\n", "def", "backward_whole_process", "(", "\n", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ",", "drift_only", "=", "False", ",", "score_only", "=", "False", "\n", ")", ":", "\n", "    ", "rtn", "=", "{", "\n", "\"data\"", ":", "[", "z", ".", "clone", "(", ")", "]", ",", "\n", "\"grad\"", ":", "[", "]", ",", "\n", "\"noise\"", ":", "[", "]", ",", "\n", "\"drift\"", ":", "[", "]", ",", "\n", "\"diff\"", ":", "[", "]", ",", "\n", "\"score\"", ":", "[", "]", ",", "\n", "\"noise_step\"", ":", "[", "]", ",", "\n", "\"step_size\"", ":", "[", "]", ",", "\n", "}", "\n", "z", "=", "z", ".", "clone", "(", ")", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "        ", "cond_b", ",", "diff_b", "=", "condition", "[", "-", "i_th", "-", "1", "]", ",", "diffusion", "[", "-", "i_th", "-", "1", "]", "\n", "drift", "=", "model", ".", "drift", "(", "z", ",", "cond_b", ")", "\n", "score", "=", "model", ".", "score", "(", "z", ",", "cond_b", ")", "\n", "diff", "=", "-", "(", "diff_b", "**", "2", ")", "*", "score", "\n", "if", "drift_only", ":", "\n", "            ", "grad", "=", "drift", "\n", "", "else", ":", "\n", "            ", "grad", "=", "drift", "+", "diff", "\n", "", "if", "score_only", ":", "\n", "            ", "grad", "=", "diff", "\n", "", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "noise", "=", "torch", ".", "sqrt", "(", "cur_delta_t", ")", "*", "diff_b", "*", "model", ".", "sample_noise", "(", "z", ".", "shape", "[", "0", "]", ")", "\n", "z_mean", "=", "z", "-", "grad_step", "\n", "z", "=", "z_mean", "+", "noise", "\n", "rtn", "[", "\"data\"", "]", ".", "append", "(", "z_mean", ".", "clone", "(", ")", ")", "\n", "rtn", "[", "\"grad\"", "]", ".", "append", "(", "grad", ")", "\n", "rtn", "[", "\"drift\"", "]", ".", "append", "(", "drift", ")", "\n", "rtn", "[", "\"diff\"", "]", ".", "append", "(", "diff", ")", "\n", "rtn", "[", "\"score\"", "]", ".", "append", "(", "-", "score", ")", "\n", "rtn", "[", "\"noise\"", "]", ".", "append", "(", "noise", "/", "cur_delta_t", ")", "\n", "rtn", "[", "\"step_size\"", "]", ".", "append", "(", "cur_delta_t", ")", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.fb_whole_process": [[69, 76], ["diagnosis.forward_whole_process", "diagnosis.backward_whole_process", "torch.randn_like"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process"], ["", "def", "fb_whole_process", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ",", "is_gt", "=", "True", ")", ":", "\n", "    ", "f_process", "=", "forward_whole_process", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "z", "=", "f_process", "[", "\"data\"", "]", "[", "-", "1", "]", "\n", "if", "not", "is_gt", ":", "\n", "        ", "z", "=", "torch", ".", "randn_like", "(", "z", ")", "\n", "", "b_process", "=", "backward_whole_process", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "return", "f_process", ",", "b_process", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.ema_whole_process": [[101, 120], ["torch.randn_like", "diagnosis.backward_whole_process", "jamtorch.as_cpu", "load_ema_fn", "diagnosis.backward_whole_process", "jamtorch.as_cpu"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process"], ["", "def", "ema_whole_process", "(", "model", ",", "load_ema_fn", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "\"\"\"Only used in check ema in cmp_fb_process\"\"\"", "\n", "z", "=", "torch", ".", "randn_like", "(", "z", ")", "\n", "non_ema", "=", "backward_whole_process", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "non_ema", "=", "as_cpu", "(", "non_ema", ")", "\n", "\n", "load_ema_fn", "(", "model", ")", "\n", "ema", "=", "backward_whole_process", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "ema", "=", "as_cpu", "(", "ema", ")", "\n", "\n", "composite", "=", "{", "\n", "\"ema_x\"", ":", "ema", "[", "\"data\"", "]", ",", "\n", "\"non_ema_x\"", ":", "non_ema", "[", "\"data\"", "]", ",", "\n", "\"ema_grad\"", ":", "ema", "[", "\"grad\"", "]", ",", "\n", "\"non_ema_grad\"", ":", "non_ema", "[", "\"grad\"", "]", ",", "\n", "\"ema_drift\"", ":", "ema", "[", "\"drift\"", "]", ",", "\n", "\"non_ema_drift\"", ":", "non_ema", "[", "\"drift\"", "]", ",", "\n", "}", "\n", "return", "composite", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_data_process": [[122, 136], ["x.clone.clone", "enumerate", "x.clone.clone", "model.drift", "rtn.append", "model.sample_noise", "x.clone.clone", "torch.sqrt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["", "@", "no_grad_func", "\n", "def", "forward_data_process", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "x", "=", "x", ".", "clone", "(", ")", "# avoid overwrite the origin data", "\n", "rtn", "=", "[", "x", ".", "clone", "(", ")", "]", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "delta_t", ")", ":", "\n", "        ", "cond_f", ",", "diff_f", "=", "condition", "[", "i_th", "]", ",", "diffusion", "[", "i_th", "]", "\n", "grad", "=", "model", ".", "drift", "(", "x", ",", "cond_f", ")", "\n", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "noise", "=", "torch", ".", "sqrt", "(", "cur_delta_t", ")", "*", "diff_f", "*", "model", ".", "sample_noise", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "x", "+=", "grad_step", "+", "noise", "\n", "rtn", ".", "append", "(", "x", ".", "clone", "(", ")", ")", "\n", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_x2z": [[138, 149], ["x.clone.clone", "enumerate", "model.drift", "model.sample_noise", "torch.sqrt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["", "@", "no_grad_func", "\n", "def", "forward_x2z", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "x", "=", "x", ".", "clone", "(", ")", "# avoid overwrite the origin data", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "delta_t", ")", ":", "\n", "        ", "cond_f", ",", "diff_f", "=", "condition", "[", "i_th", "]", ",", "diffusion", "[", "i_th", "]", "\n", "grad", "=", "model", ".", "drift", "(", "x", ",", "cond_f", ")", "\n", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "noise", "=", "torch", ".", "sqrt", "(", "cur_delta_t", ")", "*", "diff_f", "*", "model", ".", "sample_noise", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "x", "+=", "grad_step", "+", "noise", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_z2x": [[151, 169], ["z.clone.clone", "enumerate", "len", "torch.flip", "model.drift", "model.score", "model.sample_noise", "torch.sqrt"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["", "@", "no_grad_func", "\n", "def", "backward_z2x", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "# from noise to data", "\n", "    ", "z", "=", "z", ".", "clone", "(", ")", "\n", "if", "len", "(", "timestamps", ")", "<", "2", ":", "\n", "        ", "return", "z", "\n", "", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "        ", "cond_b", ",", "diff_b", "=", "condition", "[", "-", "i_th", "-", "1", "]", ",", "diffusion", "[", "-", "i_th", "-", "1", "]", "\n", "drift", "=", "model", ".", "drift", "(", "z", ",", "cond_b", ")", "\n", "score", "=", "model", ".", "score", "(", "z", ",", "cond_b", ")", "\n", "diff", "=", "-", "(", "diff_b", "**", "2", ")", "*", "score", "\n", "grad", "=", "drift", "+", "diff", "\n", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "noise", "=", "torch", ".", "sqrt", "(", "cur_delta_t", ")", "*", "diff_b", "*", "model", ".", "sample_noise", "(", "z", ".", "shape", "[", "0", "]", ")", "\n", "z_mean", "=", "z", "-", "grad_step", "\n", "z", "=", "z_mean", "+", "noise", "\n", "", "return", "z_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.recon_x": [[171, 174], ["diagnosis.forward_x2z", "diagnosis.backward_z2x"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_x2z", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_z2x"], ["", "def", "recon_x", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "z", "=", "forward_x2z", "(", "model", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "return", "backward_z2x", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_deterministic_process": [[176, 196], ["z.clone.clone", "enumerate", "torch.flip", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "z.clone.clone", "model.drift", "z.clone.clone", "model.score"], "function", ["None"], ["", "@", "no_grad_func", "\n", "def", "backward_deterministic_process", "(", "model", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "    ", "rtn", "=", "{", "\n", "\"data\"", ":", "[", "z", ".", "clone", "(", ")", "]", ",", "\n", "\"grad\"", ":", "[", "]", ",", "\n", "\"grad_step\"", ":", "[", "]", ",", "\n", "\"step_size\"", ":", "[", "]", ",", "\n", "}", "\n", "z", "=", "z", ".", "clone", "(", ")", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "        ", "cond_b", ",", "diff_b", "=", "condition", "[", "-", "i_th", "-", "1", "]", ",", "diffusion", "[", "-", "i_th", "-", "1", "]", "\n", "grad", "=", "model", ".", "drift", "(", "z", ",", "cond_b", ")", "-", "0.5", "*", "diff_b", "**", "2", "*", "model", ".", "score", "(", "z", ",", "cond_b", ")", "\n", "grad_step", "=", "grad", "*", "cur_delta_t", "\n", "z", "+=", "-", "grad_step", "\n", "rtn", "[", "\"data\"", "]", ".", "append", "(", "z", ".", "clone", "(", ")", ")", "\n", "rtn", "[", "\"grad\"", "]", ".", "append", "(", "grad", ")", "\n", "rtn", "[", "\"grad_step\"", "]", ".", "append", "(", "grad_step", ")", "\n", "rtn", "[", "\"step_size\"", "]", ".", "append", "(", "cur_delta_t", ")", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.langevin_process": [[198, 231], ["z.clone.clone", "range", "model.sample_noise", "model.score", "torch.mean", "torch.mean", "torch.norm", "torch.norm", "rtn[].append", "rtn[].append", "rtn[].append", "rtn[].append", "z.clone.clone", "model.sample_noise.flatten", "model.score.flatten", "torch.sqrt", "z.clone.clone", "step_size.item"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise"], ["", "@", "no_grad_func", "\n", "def", "langevin_process", "(", "model", ",", "z", ",", "idx", ",", "steps", ",", "snr", ",", "condition", "=", "None", ",", "all_img", "=", "False", ")", ":", "\n", "    ", "condition", "=", "model", ".", "condition", "if", "condition", "is", "None", "else", "condition", "\n", "cond_b", "=", "condition", "[", "-", "idx", "-", "1", "]", "\n", "if", "all_img", ":", "\n", "        ", "rtn", "=", "{", "\n", "\"data\"", ":", "[", "z", ".", "clone", "(", ")", "]", ",", "\n", "\"data_mean\"", ":", "[", "]", ",", "\n", "\"grad\"", ":", "[", "]", ",", "\n", "\"step_size\"", ":", "[", "]", ",", "\n", "}", "\n", "", "z", "=", "z", ".", "clone", "(", ")", "\n", "for", "_", "in", "range", "(", "steps", ")", ":", "\n", "        ", "noise", "=", "model", ".", "sample_noise", "(", "z", ".", "shape", "[", "0", "]", ")", "\n", "grad", "=", "model", ".", "score", "(", "z", ",", "cond_b", ")", "\n", "noise_norm", "=", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "noise", ".", "flatten", "(", "start_dim", "=", "1", ")", ",", "dim", "=", "1", ")", ")", "\n", "grad_norm", "=", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "grad", ".", "flatten", "(", "start_dim", "=", "1", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n", "step_size", "=", "(", "snr", "*", "noise_norm", "/", "grad_norm", ")", "**", "2", "*", "2", "\n", "\n", "z_mean", "=", "z", "+", "grad", "*", "step_size", "\n", "\n", "z", "=", "z_mean", "+", "torch", ".", "sqrt", "(", "2", "*", "step_size", ")", "*", "noise", "\n", "\n", "if", "all_img", ":", "\n", "            ", "rtn", "[", "\"data\"", "]", ".", "append", "(", "z", ".", "clone", "(", ")", ")", "\n", "rtn", "[", "\"data_mean\"", "]", ".", "append", "(", "z_mean", ")", "\n", "rtn", "[", "\"grad\"", "]", ".", "append", "(", "grad", ")", "\n", "rtn", "[", "\"step_size\"", "]", ".", "append", "(", "step_size", ".", "item", "(", ")", ")", "\n", "\n", "", "", "if", "all_img", ":", "\n", "        ", "return", "rtn", "\n", "", "return", "z_mean", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.sdefunction.SdeF.forward": [[24, 75], ["x.new_zeros", "x.new_zeros", "numpy.sum", "ctx.save_for_backward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "tuple", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "x.new_zeros.clone", "new_x.clone", "tensor_list.append", "len", "model.forward_step", "shape.numel", "shape.numel", "tensor[].view", "param.flatten", "x.new_zeros", "zip", "shape.numel"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward_step"], ["    ", "@", "staticmethod", "\n", "@", "amp", ".", "custom_fwd", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "model", ",", "timestamps", ",", "diffusion", ",", "condition", ",", "*", "model_parameter", ")", ":", "\n", "        ", "shapes", "=", "[", "y0_", ".", "shape", "for", "y0_", "in", "model_parameter", "]", "\n", "\n", "def", "_flatten", "(", "parameter", ")", ":", "\n", "# flatten the gradient dict and parameter dict", "\n", "            ", "return", "torch", ".", "cat", "(", "\n", "[", "\n", "param", ".", "flatten", "(", ")", "if", "param", "is", "not", "None", "else", "x", ".", "new_zeros", "(", "shape", ".", "numel", "(", ")", ")", "\n", "for", "param", ",", "shape", "in", "zip", "(", "parameter", ",", "shapes", ")", "\n", "]", "\n", ")", "\n", "\n", "", "def", "_unflatten", "(", "tensor", ",", "length", ")", ":", "\n", "# return object like parameter groups", "\n", "            ", "tensor_list", "=", "[", "]", "\n", "total", "=", "0", "\n", "for", "shape", "in", "shapes", ":", "\n", "                ", "next_total", "=", "total", "+", "shape", ".", "numel", "(", ")", "\n", "# It's important that this be view((...)), not view(...). Else when length=(), shape=() it fails.", "\n", "tensor_list", ".", "append", "(", "\n", "tensor", "[", "...", ",", "total", ":", "next_total", "]", ".", "view", "(", "(", "*", "length", ",", "*", "shape", ")", ")", "\n", ")", "\n", "total", "=", "next_total", "\n", "", "return", "tuple", "(", "tensor_list", ")", "\n", "\n", "", "history_x_state", "=", "x", ".", "new_zeros", "(", "len", "(", "timestamps", ")", "-", "1", ",", "*", "x", ".", "shape", ")", "\n", "rtn_logabsdet", "=", "x", ".", "new_zeros", "(", "x", ".", "shape", "[", "0", "]", ")", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "new_x", "=", "x", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "delta_t", ")", ":", "\n", "                ", "history_x_state", "[", "i_th", "]", "=", "new_x", "\n", "new_x", ",", "new_logabsdet", "=", "model", ".", "forward_step", "(", "\n", "new_x", ",", "\n", "cur_delta_t", ",", "\n", "condition", "[", "i_th", "]", ",", "\n", "condition", "[", "i_th", "+", "1", "]", ",", "\n", "diffusion", "[", "i_th", "]", ",", "\n", "diffusion", "[", "i_th", "+", "1", "]", ",", "\n", ")", "\n", "rtn_logabsdet", "+=", "new_logabsdet", "\n", "", "", "ctx", ".", "model", "=", "model", "\n", "ctx", ".", "_flatten", "=", "_flatten", "\n", "ctx", ".", "_unflatten", "=", "_unflatten", "\n", "ctx", ".", "nparam", "=", "np", ".", "sum", "(", "[", "shape", ".", "numel", "(", ")", "for", "shape", "in", "shapes", "]", ")", "\n", "ctx", ".", "save_for_backward", "(", "\n", "history_x_state", ".", "clone", "(", ")", ",", "new_x", ".", "clone", "(", ")", ",", "timestamps", ",", "diffusion", ",", "condition", "\n", ")", "\n", "return", "new_x", ",", "rtn_logabsdet", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.sdefunction.SdeF.backward": [[76, 128], ["dL_dz.new_zeros", "tuple", "model.parameters", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "sdefunction.SdeF.forward._unflatten", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "history_x_state[].requires_grad_", "z.requires_grad_.requires_grad_.requires_grad_", "model.cal_backnoise", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "cur_delta_s.mean", "_flatten().unsqueeze", "_flatten().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "model.cal_next_nodiffusion", "sdefunction.SdeF.forward._flatten", "sdefunction.SdeF.forward._flatten", "model.cal_backnoise.flatten"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_backnoise", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_next_nodiffusion"], ["", "@", "staticmethod", "\n", "@", "amp", ".", "custom_bwd", "\n", "def", "backward", "(", "ctx", ",", "dL_dz", ",", "dL_logabsdet", ")", ":", "\n", "        ", "history_x_state", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", "=", "ctx", ".", "saved_tensors", "\n", "dL_dparameter", "=", "dL_dz", ".", "new_zeros", "(", "(", "1", ",", "ctx", ".", "nparam", ")", ")", "\n", "\n", "model", ",", "_flatten", ",", "_unflatten", "=", "ctx", ".", "model", ",", "ctx", ".", "_flatten", ",", "ctx", ".", "_unflatten", "\n", "model_parameter", "=", "tuple", "(", "model", ".", "parameters", "(", ")", ")", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "b_noise", "=", "{", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "bi_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "                ", "bi_th", "+=", "1", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "                    ", "x", "=", "history_x_state", "[", "-", "bi_th", "]", ".", "requires_grad_", "(", "True", ")", "\n", "z", "=", "z", ".", "requires_grad_", "(", "True", ")", "\n", "noise_b", "=", "model", ".", "cal_backnoise", "(", "\n", "x", ",", "z", ",", "cur_delta_t", ",", "condition", "[", "-", "bi_th", "]", ",", "diffusion", "[", "-", "bi_th", "]", "\n", ")", "\n", "\n", "cur_delta_s", "=", "-", "0.5", "*", "(", "\n", "torch", ".", "sum", "(", "noise_b", ".", "flatten", "(", "start_dim", "=", "1", ")", "**", "2", ",", "dim", "=", "1", ")", "\n", ")", "\n", "dl_dprev_state", ",", "dl_dnext_state", ",", "*", "dl_model_b", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "(", "cur_delta_s", ")", ",", "\n", "(", "x", ",", "z", ")", "+", "model_parameter", ",", "\n", "grad_outputs", "=", "(", "dL_logabsdet", ")", ",", "\n", "allow_unused", "=", "True", ",", "\n", "retain_graph", "=", "True", ",", "\n", ")", "\n", "dl_dx", ",", "*", "dl_model_f", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "(", "\n", "model", ".", "cal_next_nodiffusion", "(", "\n", "x", ",", "cur_delta_t", ",", "condition", "[", "-", "bi_th", "-", "1", "]", "\n", ")", "\n", ")", ",", "\n", "(", "x", ",", ")", "+", "model_parameter", ",", "\n", "grad_outputs", "=", "(", "dl_dnext_state", "+", "dL_dz", ")", ",", "\n", "allow_unused", "=", "True", ",", "\n", "retain_graph", "=", "True", ",", "\n", ")", "\n", "del", "x", ",", "z", ",", "dl_dnext_state", "\n", "", "b_noise", "[", "f\"stat/{bi_th}\"", "]", "=", "-", "1", "*", "cur_delta_s", ".", "mean", "(", ")", "\n", "z", "=", "history_x_state", "[", "-", "bi_th", "]", "\n", "dL_dz", "=", "dl_dx", "+", "dl_dprev_state", "\n", "dL_dparameter", "+=", "_flatten", "(", "dl_model_b", ")", ".", "unsqueeze", "(", "0", ")", "+", "_flatten", "(", "\n", "dl_model_f", "\n", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "# trainer_stat(trainer, as_float(b_noise))", "\n", "\n", "", "", "return", "(", "dL_dz", ",", "None", ",", "None", ",", "None", ",", "None", ",", "*", "_unflatten", "(", "dL_dparameter", ",", "(", "1", ",", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.mnist_dataset": [[15, 39], ["torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.Compose", "torchvision.Compose", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor"], "function", ["None"], ["def", "mnist_dataset", "(", "data_path", ",", "img_size", "=", "28", ")", ":", "\n", "    ", "train", "=", "MNIST", "(", "\n", "data_path", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "img_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", "\n", "test", "=", "MNIST", "(", "\n", "data_path", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "img_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", "\n", "return", "train", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.init_data_config": [[41, 44], ["jammy.utils.git.git_rootdir"], "function", ["None"], ["", "def", "init_data_config", "(", "config", ")", ":", "\n", "    ", "if", "\"path\"", "not", "in", "config", ":", "\n", "        ", "config", ".", "path", "=", "git_rootdir", "(", "\"data\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.get_img_dataset": [[46, 193], ["image_dataset.init_data_config", "image_dataset.mnist_dataset", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "os.path.join", "os.path.join", "datasets.celeba.CelebA", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.ToTensor", "datasets.celeba.CelebA", "datasets.celeba.CelebA", "torchvision.datasets.LSUN", "os.path.join", "torchvision.Compose", "torchvision.datasets.LSUN", "torchvision.datasets.LSUN", "len", "list", "numpy.random.get_state", "numpy.random.seed", "numpy.random.shuffle", "numpy.random.set_state", "torch.utils.data.Subset", "torch.utils.data.Subset", "os.path.join", "torchvision.Compose", "os.path.join", "torchvision.Compose", "os.path.join", "torchvision.Compose", "datasets.ffhq.FFHQ", "datasets.ffhq.FFHQ", "range", "torchvision.CenterCrop", "torchvision.Resize", "torchvision.ToTensor", "os.path.join", "torchvision.Compose", "os.path.join", "torchvision.Compose", "torchvision.CenterCrop", "torchvision.Resize", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.CenterCrop", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "os.path.join", "torchvision.Compose", "os.path.join", "torchvision.ToTensor", "int", "int", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.init_data_config", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.mnist_dataset"], ["", "", "def", "get_img_dataset", "(", "config", ")", ":", "# pylint: disable=too-many-branches", "\n", "    ", "init_data_config", "(", "config", ")", "\n", "if", "config", ".", "dataset", "==", "\"MNIST\"", ":", "\n", "        ", "return", "mnist_dataset", "(", "config", ".", "path", ",", "config", ".", "image_size", ")", "\n", "", "if", "config", ".", "random_flip", "is", "False", ":", "\n", "        ", "tran_transform", "=", "test_transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", ")", "\n", "", "else", ":", "\n", "        ", "tran_transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", "\n", "test_transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", ")", "\n", "\n", "", "if", "config", ".", "dataset", "==", "\"CIFAR10\"", ":", "\n", "        ", "dataset", "=", "CIFAR10", "(", "\n", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"cifar10\"", ")", ",", "\n", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "tran_transform", ",", "\n", ")", "\n", "test_dataset", "=", "CIFAR10", "(", "\n", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"cifar10_test\"", ")", ",", "\n", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "\n", "transform", "=", "test_transform", ",", "\n", ")", "\n", "\n", "", "elif", "config", ".", "dataset", "==", "\"CELEBA\"", ":", "\n", "        ", "if", "config", ".", "random_flip", ":", "\n", "            ", "dataset", "=", "CelebA", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"celeba\"", ")", ",", "\n", "split", "=", "\"train\"", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "CenterCrop", "(", "140", ")", ",", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", "download", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "dataset", "=", "CelebA", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"celeba\"", ")", ",", "\n", "split", "=", "\"train\"", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "CenterCrop", "(", "140", ")", ",", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", "download", "=", "True", ",", "\n", ")", "\n", "\n", "", "test_dataset", "=", "CelebA", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"celeba_test\"", ")", ",", "\n", "split", "=", "\"test\"", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "CenterCrop", "(", "140", ")", ",", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", "download", "=", "True", ",", "\n", ")", "\n", "\n", "", "elif", "config", ".", "dataset", "==", "\"LSUN\"", ":", "\n", "        ", "train_folder", "=", "\"{}_train\"", ".", "format", "(", "config", ".", "category", ")", "\n", "val_folder", "=", "\"{}_val\"", ".", "format", "(", "config", ".", "category", ")", "\n", "if", "config", ".", "random_flip", ":", "\n", "            ", "dataset", "=", "LSUN", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"lsun\"", ")", ",", "\n", "classes", "=", "[", "train_folder", "]", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "dataset", "=", "LSUN", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"lsun\"", ")", ",", "\n", "classes", "=", "[", "train_folder", "]", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "", "test_dataset", "=", "LSUN", "(", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"lsun\"", ")", ",", "\n", "classes", "=", "[", "val_folder", "]", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "transforms", ".", "Resize", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "config", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", ")", ",", "\n", ")", "\n", "\n", "", "elif", "config", ".", "dataset", "==", "\"FFHQ\"", ":", "\n", "        ", "if", "config", ".", "random_flip", ":", "\n", "            ", "dataset", "=", "FFHQ", "(", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"FFHQ\"", ")", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "0.5", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", ")", ",", "\n", "resolution", "=", "config", ".", "image_size", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "dataset", "=", "FFHQ", "(", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"datasets\"", ",", "\"FFHQ\"", ")", ",", "\n", "transform", "=", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "resolution", "=", "config", ".", "image_size", ",", "\n", ")", "\n", "\n", "", "num_items", "=", "len", "(", "dataset", ")", "\n", "indices", "=", "list", "(", "range", "(", "num_items", ")", ")", "\n", "random_state", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", "2019", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "np", ".", "random", ".", "set_state", "(", "random_state", ")", "\n", "train_indices", ",", "test_indices", "=", "(", "\n", "indices", "[", ":", "int", "(", "num_items", "*", "0.9", ")", "]", ",", "\n", "indices", "[", "int", "(", "num_items", "*", "0.9", ")", ":", "]", ",", "\n", ")", "\n", "test_dataset", "=", "Subset", "(", "dataset", ",", "test_indices", ")", "\n", "dataset", "=", "Subset", "(", "dataset", ",", "train_indices", ")", "\n", "\n", "", "return", "dataset", ",", "test_dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.__init__": [[12, 16], ["isinstance", "os.path.expanduser"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root", ")", ":", "\n", "        ", "if", "isinstance", "(", "root", ",", "torch", ".", "_six", ".", "string_classes", ")", ":", "\n", "            ", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "", "self", ".", "root", "=", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.__getitem__": [[17, 19], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.__len__": [[20, 22], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.__repr__": [[23, 37], ["vision.VisionDataset.extra_repr().splitlines", "body.append", "hasattr", "vision.VisionDataset._format_transform_repr", "hasattr", "vision.VisionDataset._format_transform_repr", "vision.VisionDataset.__len__", "vision.VisionDataset.extra_repr"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset._format_transform_repr", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset._format_transform_repr", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.ffhq.FFHQ.__len__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.extra_repr"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "head", "=", "\"Dataset \"", "+", "self", ".", "__class__", ".", "__name__", "\n", "body", "=", "[", "\"Number of datapoints: {}\"", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "]", "\n", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "            ", "body", ".", "append", "(", "\"Root location: {}\"", ".", "format", "(", "self", ".", "root", ")", ")", "\n", "", "body", "+=", "self", ".", "extra_repr", "(", ")", ".", "splitlines", "(", ")", "\n", "if", "hasattr", "(", "self", ",", "\"transform\"", ")", "and", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "body", "+=", "self", ".", "_format_transform_repr", "(", "self", ".", "transform", ",", "\"Transforms: \"", ")", "\n", "", "if", "hasattr", "(", "self", ",", "\"target_transform\"", ")", "and", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "body", "+=", "self", ".", "_format_transform_repr", "(", "\n", "self", ".", "target_transform", ",", "\"Target transforms: \"", "\n", ")", "\n", "", "lines", "=", "[", "head", "]", "+", "[", "\" \"", "*", "self", ".", "_repr_indent", "+", "line", "for", "line", "in", "body", "]", "\n", "return", "\"\\n\"", ".", "join", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset._format_transform_repr": [[38, 42], ["transform.__repr__().splitlines", "transform.__repr__", "len"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.__repr__"], ["", "def", "_format_transform_repr", "(", "self", ",", "transform", ",", "head", ")", ":", "\n", "        ", "lines", "=", "transform", ".", "__repr__", "(", ")", ".", "splitlines", "(", ")", "\n", "return", "[", "\"{}{}\"", ".", "format", "(", "head", ",", "lines", "[", "0", "]", ")", "]", "+", "[", "\n", "\"{}{}\"", ".", "format", "(", "\" \"", "*", "len", "(", "head", ")", ",", "line", ")", "for", "line", "in", "lines", "[", "1", ":", "]", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.vision.VisionDataset.extra_repr": [[44, 46], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "\"\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.__init__": [[192, 204], ["numpy.linspace", "points_dataset.PointsDataSet.generate_sample"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.generate_sample"], ["    ", "def", "__init__", "(", "\n", "self", ",", "data_name", ",", "num_sample", ",", "noise", ",", "dim_range", "=", "1.0", ",", "iscenter", "=", "True", ",", "shuffle", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "name", "=", "data_name", "\n", "self", ".", "num_sample", "=", "num_sample", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "iscenter", "=", "iscenter", "\n", "global", "DIM_LINSPACE", "\n", "DIM_LINSPACE", "=", "np", ".", "linspace", "(", "-", "dim_range", ",", "dim_range", ",", "200", ")", "\n", "self", ".", "dim_range", "=", "dim_range", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "data", "=", "self", ".", "generate_sample", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.generate_sample": [[205, 213], ["numpy.max", "numpy.abs", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "generate_sample", "(", "self", ")", ":", "\n", "        ", "global", "skd_func", "\n", "data", "=", "skd_func", "[", "self", ".", "name", "]", "(", "self", ".", "num_sample", ",", "self", ".", "noise", ")", "\n", "_max", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "data", ")", ")", "\n", "data", "=", "(", "self", ".", "dim_range", "*", "0.85", "/", "_max", ")", "*", "data", "\n", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "data", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.normalize": [[214, 222], ["numpy.mean", "numpy.std"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "set_std", ")", ":", "\n", "        ", "global", "G_MEAN", ",", "G_STD", ",", "G_SET_STD", "\n", "if", "self", ".", "iscenter", ":", "\n", "            ", "G_MEAN", "=", "np", ".", "mean", "(", "self", ".", "data", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "G_STD", "=", "np", ".", "std", "(", "self", ".", "data", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "", "G_SET_STD", "=", "set_std", "\n", "\n", "self", ".", "data", "=", "(", "self", ".", "data", "-", "G_MEAN", ")", "/", "G_STD", "*", "set_std", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.__len__": [[223, 225], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.__getitem__": [[226, 228], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.swissroll_generate_sample": [[19, 23], ["sklearn.make_swiss_roll", "data.astype"], "function", ["None"], ["def", "swissroll_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "data", "=", "skd", ".", "make_swiss_roll", "(", "n_samples", "=", "N", ",", "noise", "=", "noise", ")", "[", "0", "]", "\n", "data", "=", "data", ".", "astype", "(", "\"float32\"", ")", "[", ":", ",", "[", "0", ",", "2", "]", "]", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.moon_generate_sample": [[25, 29], ["data.astype.astype", "sklearn.make_moons"], "function", ["None"], ["", "def", "moon_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "data", "=", "skd", ".", "make_moons", "(", "n_samples", "=", "N", ",", "noise", "=", "noise", ")", "[", "0", "]", "\n", "data", "=", "data", ".", "astype", "(", "\"float32\"", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.checkerboard_generate_sample": [[31, 36], ["numpy.random.rand", "numpy.concatenate", "numpy.random.rand", "numpy.random.randint", "numpy.floor"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand"], ["", "def", "checkerboard_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "x1", "=", "np", ".", "random", ".", "rand", "(", "N", ")", "*", "4", "-", "2", "\n", "x2_", "=", "np", ".", "random", ".", "rand", "(", "N", ")", "-", "np", ".", "random", ".", "randint", "(", "0", ",", "2", ",", "N", ")", "*", "2", "\n", "x2", "=", "x2_", "+", "(", "np", ".", "floor", "(", "x1", ")", "%", "2", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "x1", "[", ":", ",", "None", "]", ",", "x2", "[", ":", ",", "None", "]", "]", ",", "1", ")", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.line_generate_sample": [[38, 43], ["numpy.array", "numpy.array", "numpy.random.multivariate_normal"], "function", ["None"], ["", "def", "line_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "assert", "noise", "<=", "1.0", "\n", "cov", "=", "np", ".", "array", "(", "[", "[", "1.0", ",", "1", "-", "noise", "]", ",", "[", "1", "-", "noise", ",", "1.0", "]", "]", ")", "\n", "mean", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", "]", ")", "\n", "return", "np", ".", "random", ".", "multivariate_normal", "(", "mean", ",", "cov", ",", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.circle_generate_sample": [[45, 51], ["numpy.random.uniform", "numpy.random.normal", "numpy.concatenate", "einops.rearrange", "numpy.sqrt", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "circle_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "angle", "=", "np", ".", "random", ".", "uniform", "(", "high", "=", "2", "*", "np", ".", "pi", ",", "size", "=", "N", ")", "\n", "random_noise", "=", "np", ".", "random", ".", "normal", "(", "scale", "=", "np", ".", "sqrt", "(", "0.2", ")", ",", "size", "=", "(", "N", ",", "2", ")", ")", "\n", "pos", "=", "np", ".", "concatenate", "(", "[", "np", ".", "cos", "(", "angle", ")", ",", "np", ".", "sin", "(", "angle", ")", "]", ")", "\n", "pos", "=", "rearrange", "(", "pos", ",", "\"(b c) -> c b\"", ",", "b", "=", "2", ")", "\n", "return", "pos", "+", "noise", "*", "random_noise", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.olympic_generate_sample": [[53, 61], ["numpy.array", "numpy.concatenate", "points_dataset.circle_generate_sample", "range"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.circle_generate_sample"], ["", "def", "olympic_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "w", "=", "3.5", "\n", "h", "=", "1.5", "\n", "centers", "=", "np", ".", "array", "(", "[", "[", "-", "w", ",", "h", "]", ",", "[", "0.0", ",", "h", "]", ",", "[", "w", ",", "h", "]", ",", "[", "-", "w", "*", "0.6", ",", "-", "h", "]", ",", "[", "w", "*", "0.6", ",", "-", "h", "]", "]", ")", "\n", "pos", "=", "[", "\n", "circle_generate_sample", "(", "N", "//", "5", ",", "noise", ")", "+", "centers", "[", "i", ":", "i", "+", "1", "]", "/", "2", "for", "i", "in", "range", "(", "5", ")", "\n", "]", "\n", "return", "np", ".", "concatenate", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.four_generate_sample": [[63, 71], ["numpy.array", "numpy.concatenate", "points_dataset.circle_generate_sample", "range"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.circle_generate_sample"], ["", "def", "four_generate_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "w", "=", "3.5", "\n", "h", "=", "1.5", "\n", "centers", "=", "np", ".", "array", "(", "[", "[", "0.0", ",", "h", "]", ",", "[", "w", ",", "h", "]", ",", "[", "-", "w", "*", "0.6", ",", "-", "h", "]", ",", "[", "w", "*", "0.6", ",", "-", "h", "]", "]", ")", "\n", "pos", "=", "[", "\n", "circle_generate_sample", "(", "N", "//", "4", ",", "noise", ")", "+", "centers", "[", "i", ":", "i", "+", "1", "]", "/", "2", "for", "i", "in", "range", "(", "4", ")", "\n", "]", "\n", "return", "np", ".", "concatenate", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.dog_sample": [[73, 82], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "dog_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"dog.jpg\"", ")", ",", "\n", "crop", "=", "(", "10", ",", "710", ",", "240", ",", "940", ")", ",", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "350", ",", "350", "]", ",", "scale", "=", "[", "100", ",", "100", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.tree_sample": [[84, 93], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "tree_sample", "(", "N", ",", "noise", "=", "0.0", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"tree.png\"", ")", ",", "\n", "# crop=(10, 710, 240, 940),", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "275", ",", "225", "]", ",", "scale", "=", "[", "275", ",", "225", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.sier_sample": [[95, 103], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "sier_sample", "(", "N", ",", "noise", "=", "0.0", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"sierpinski.jpg\"", ")", ",", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "365", ",", "365", "]", ",", "scale", "=", "[", "365", ",", "365", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.sier_hard_sample": [[105, 113], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "sier_hard_sample", "(", "N", ",", "noise", "=", "0.0", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"sierpinski_hard.jpg\"", ")", ",", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "365", ",", "365", "]", ",", "scale", "=", "[", "365", ",", "365", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.word_sample": [[115, 123], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "word_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"word.jpg\"", ")", ",", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "350", ",", "350", "]", ",", "scale", "=", "[", "100", ",", "100", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.smile_sample": [[125, 134], ["img_tool.prepare_image", "img_tool.ImageSampler", "img_tool.ImageSampler.sample", "pathlib.Path().parent.joinpath", "density[].copy", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "smile_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "density", "=", "prepare_image", "(", "\n", "Path", "(", "__file__", ")", ".", "parent", ".", "joinpath", "(", "\"smile.jpg\"", ")", ",", "\n", "embed", "=", "(", "1000", ",", "1000", ")", ",", "\n", "white_cutoff", "=", "225", ",", "\n", "gauss_sigma", "=", "10", "*", "noise", ",", "\n", ")", "\n", "sampler", "=", "ImageSampler", "(", "density", "[", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ",", "mean", "=", "[", "500", ",", "225", "]", ",", "scale", "=", "[", "200", ",", "200", "]", ")", "\n", "return", "sampler", ".", "sample", "(", "N", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.spirals_sample": [[136, 143], ["numpy.vstack", "numpy.random.randn", "numpy.random.rand", "numpy.sin", "numpy.random.rand", "numpy.sqrt", "numpy.cos", "numpy.hstack", "numpy.hstack", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand"], ["", "def", "spirals_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "n", "=", "np", ".", "sqrt", "(", "np", ".", "random", ".", "rand", "(", "N", "//", "2", ",", "1", ")", ")", "*", "540", "*", "(", "2", "*", "np", ".", "pi", ")", "/", "360", "\n", "d1x", "=", "-", "np", ".", "cos", "(", "n", ")", "*", "n", "+", "np", ".", "random", ".", "rand", "(", "N", "//", "2", ",", "1", ")", "*", "0.5", "\n", "d1y", "=", "np", ".", "sin", "(", "n", ")", "*", "n", "+", "np", ".", "random", ".", "rand", "(", "N", "//", "2", ",", "1", ")", "*", "0.5", "\n", "x", "=", "np", ".", "vstack", "(", "(", "np", ".", "hstack", "(", "(", "d1x", ",", "d1y", ")", ")", ",", "np", ".", "hstack", "(", "(", "-", "d1x", ",", "-", "d1y", ")", ")", ")", ")", "/", "3", "\n", "x", "+=", "np", ".", "random", ".", "randn", "(", "*", "x", ".", "shape", ")", "*", "0.1", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.gaussian_sample": [[145, 170], ["range", "numpy.array", "numpy.random.randint", "np.array.append", "numpy.random.randn", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "gaussian_sample", "(", "N", ",", "noise", "=", "0.25", ")", ":", "\n", "    ", "scale", "=", "4.0", "\n", "centers", "=", "[", "\n", "(", "1", ",", "0", ")", ",", "\n", "(", "-", "1", ",", "0", ")", ",", "\n", "(", "0", ",", "1", ")", ",", "\n", "(", "0", ",", "-", "1", ")", ",", "\n", "(", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ",", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ")", ",", "\n", "(", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ",", "-", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ")", ",", "\n", "(", "-", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ",", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ")", ",", "\n", "(", "-", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ",", "-", "1.0", "/", "np", ".", "sqrt", "(", "2", ")", ")", ",", "\n", "]", "\n", "centers", "=", "[", "(", "scale", "*", "x", ",", "scale", "*", "y", ")", "for", "x", ",", "y", "in", "centers", "]", "\n", "\n", "dataset", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "        ", "point", "=", "np", ".", "random", ".", "randn", "(", "2", ")", "*", "0.5", "\n", "idx", "=", "np", ".", "random", ".", "randint", "(", "8", ")", "\n", "center", "=", "centers", "[", "idx", "]", "\n", "point", "[", "0", "]", "+=", "center", "[", "0", "]", "\n", "point", "[", "1", "]", "+=", "center", "[", "1", "]", "\n", "dataset", ".", "append", "(", "point", ")", "\n", "", "dataset", "=", "np", ".", "array", "(", "dataset", ",", "dtype", "=", "\"float32\"", ")", "\n", "dataset", "/=", "1.414", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.restore": [[230, 235], ["jamtorch.utils.meta.as_numpy"], "function", ["None"], ["", "", "def", "restore", "(", "data", ")", ":", "\n", "    ", "global", "G_MEAN", ",", "G_STD", ",", "G_SET_STD", "\n", "data", "=", "as_numpy", "(", "data", ")", "\n", "sample", "=", "data", "/", "G_SET_STD", "*", "G_STD", "+", "G_MEAN", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.get_ps_dataset": [[237, 243], ["jammy.jam_instantiate", "jammy.jam_instantiate", "jammy.jam_instantiate.normalize", "jammy.jam_instantiate.normalize"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.normalize", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.PointsDataSet.normalize"], ["", "def", "get_ps_dataset", "(", "config", ")", ":", "\n", "    ", "trainset", "=", "jam_instantiate", "(", "config", ".", "train_data", ")", "\n", "valset", "=", "jam_instantiate", "(", "config", ".", "val_data", ")", "\n", "trainset", ".", "normalize", "(", "config", ".", "std", ")", "\n", "valset", ".", "normalize", "(", "config", ".", "std", ")", "\n", "return", "trainset", ",", "valset", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.__init__": [[78, 159], ["vision.VisionDataset.__init__", "isinstance", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "celeba.CelebA.download", "celeba.CelebA._check_integrity", "RuntimeError", "split.lower", "open", "pandas.read_csv", "open", "pandas.read_csv", "open", "pandas.read_csv", "open", "pandas.read_csv", "open", "pandas.read_csv", "split.lower", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "split.lower", "ValueError"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.download", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA._check_integrity"], ["def", "__init__", "(", "\n", "self", ",", "\n", "root", ",", "\n", "split", "=", "\"train\"", ",", "\n", "target_type", "=", "\"attr\"", ",", "\n", "transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ",", "\n", ")", ":", "\n", "        ", "import", "pandas", "\n", "\n", "super", "(", "CelebA", ",", "self", ")", ".", "__init__", "(", "root", ")", "\n", "self", ".", "split", "=", "split", "\n", "if", "isinstance", "(", "target_type", ",", "list", ")", ":", "\n", "            ", "self", ".", "target_type", "=", "target_type", "\n", "", "else", ":", "\n", "            ", "self", ".", "target_type", "=", "[", "target_type", "]", "\n", "", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"Dataset not found or corrupted.\"", "\n", "+", "\" You can use download=True to download it\"", "\n", ")", "\n", "\n", "", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "split", ".", "lower", "(", ")", "==", "\"train\"", ":", "\n", "            ", "split", "=", "0", "\n", "", "elif", "split", ".", "lower", "(", ")", "==", "\"valid\"", ":", "\n", "            ", "split", "=", "1", "\n", "", "elif", "split", ".", "lower", "(", ")", "==", "\"test\"", ":", "\n", "            ", "split", "=", "2", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Wrong split entered! Please use split=\"train\" '", "\n", "'or split=\"valid\" or split=\"test\"'", "\n", ")", "\n", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"list_eval_partition.txt\"", ")", ",", "\"r\"", "\n", ")", "as", "f", ":", "\n", "            ", "splits", "=", "pandas", ".", "read_csv", "(", "f", ",", "delim_whitespace", "=", "True", ",", "header", "=", "None", ",", "index_col", "=", "0", ")", "\n", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"identity_CelebA.txt\"", ")", ",", "\"r\"", "\n", ")", "as", "f", ":", "\n", "            ", "self", ".", "identity", "=", "pandas", ".", "read_csv", "(", "\n", "f", ",", "delim_whitespace", "=", "True", ",", "header", "=", "None", ",", "index_col", "=", "0", "\n", ")", "\n", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"list_bbox_celeba.txt\"", ")", ",", "\"r\"", "\n", ")", "as", "f", ":", "\n", "            ", "self", ".", "bbox", "=", "pandas", ".", "read_csv", "(", "f", ",", "delim_whitespace", "=", "True", ",", "header", "=", "1", ",", "index_col", "=", "0", ")", "\n", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"list_landmarks_align_celeba.txt\"", "\n", ")", ",", "\n", "\"r\"", ",", "\n", ")", "as", "f", ":", "\n", "            ", "self", ".", "landmarks_align", "=", "pandas", ".", "read_csv", "(", "f", ",", "delim_whitespace", "=", "True", ",", "header", "=", "1", ")", "\n", "\n", "", "with", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"list_attr_celeba.txt\"", ")", ",", "\"r\"", "\n", ")", "as", "f", ":", "\n", "            ", "self", ".", "attr", "=", "pandas", ".", "read_csv", "(", "f", ",", "delim_whitespace", "=", "True", ",", "header", "=", "1", ")", "\n", "\n", "", "mask", "=", "splits", "[", "1", "]", "==", "split", "\n", "self", ".", "filename", "=", "splits", "[", "mask", "]", ".", "index", ".", "values", "\n", "self", ".", "identity", "=", "torch", ".", "as_tensor", "(", "self", ".", "identity", "[", "mask", "]", ".", "values", ")", "\n", "self", ".", "bbox", "=", "torch", ".", "as_tensor", "(", "self", ".", "bbox", "[", "mask", "]", ".", "values", ")", "\n", "self", ".", "landmarks_align", "=", "torch", ".", "as_tensor", "(", "self", ".", "landmarks_align", "[", "mask", "]", ".", "values", ")", "\n", "self", ".", "attr", "=", "torch", ".", "as_tensor", "(", "self", ".", "attr", "[", "mask", "]", ".", "values", ")", "\n", "self", ".", "attr", "=", "(", "self", ".", "attr", "+", "1", ")", "//", "2", "# map from {-1, 1} to {0, 1}", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA._check_integrity": [[160, 172], ["os.path.isdir", "os.path.join", "os.path.splitext", "os.path.join", "utils.check_integrity"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.check_integrity"], ["", "def", "_check_integrity", "(", "self", ")", ":", "\n", "        ", "for", "(", "_", ",", "md5", ",", "filename", ")", "in", "self", ".", "file_list", ":", "\n", "            ", "fpath", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "filename", ")", "\n", "_", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "# Allow original archive to be deleted (zip and 7z)", "\n", "# Only need the extracted images", "\n", "if", "ext", "not", "in", "[", "\".zip\"", ",", "\".7z\"", "]", "and", "not", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "                ", "return", "False", "\n", "\n", "# Should check a hash of the images", "\n", "", "", "return", "os", ".", "path", ".", "isdir", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"img_align_celeba\"", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.download": [[174, 190], ["celeba.CelebA._check_integrity", "print", "utils.download_file_from_google_drive", "zipfile.ZipFile", "f.extractall", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA._check_integrity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.download_file_from_google_drive"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "import", "zipfile", "\n", "\n", "if", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "print", "(", "\"Files already downloaded and verified\"", ")", "\n", "return", "\n", "\n", "", "for", "(", "file_id", ",", "md5", ",", "filename", ")", "in", "self", ".", "file_list", ":", "\n", "            ", "download_file_from_google_drive", "(", "\n", "file_id", ",", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ")", ",", "filename", ",", "md5", "\n", ")", "\n", "\n", "", "with", "zipfile", ".", "ZipFile", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"img_align_celeba.zip\"", ")", ",", "\"r\"", "\n", ")", "as", "f", ":", "\n", "            ", "f", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.__getitem__": [[191, 219], ["PIL.Image.open", "os.path.join", "tuple", "celeba.CelebA.transform", "celeba.CelebA.target_transform", "celeba.CelebA.append", "len", "celeba.CelebA.append", "celeba.CelebA.append", "celeba.CelebA.append", "ValueError"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "X", "=", "PIL", ".", "Image", ".", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "self", ".", "base_folder", ",", "\"img_align_celeba\"", ",", "self", ".", "filename", "[", "index", "]", "\n", ")", "\n", ")", "\n", "\n", "target", "=", "[", "]", "\n", "for", "t", "in", "self", ".", "target_type", ":", "\n", "            ", "if", "t", "==", "\"attr\"", ":", "\n", "                ", "target", ".", "append", "(", "self", ".", "attr", "[", "index", ",", ":", "]", ")", "\n", "", "elif", "t", "==", "\"identity\"", ":", "\n", "                ", "target", ".", "append", "(", "self", ".", "identity", "[", "index", ",", "0", "]", ")", "\n", "", "elif", "t", "==", "\"bbox\"", ":", "\n", "                ", "target", ".", "append", "(", "self", ".", "bbox", "[", "index", ",", ":", "]", ")", "\n", "", "elif", "t", "==", "\"landmarks\"", ":", "\n", "                ", "target", ".", "append", "(", "self", ".", "landmarks_align", "[", "index", ",", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Target type \"{}\" is not recognized.'", ".", "format", "(", "t", ")", ")", "\n", "", "", "target", "=", "tuple", "(", "target", ")", "if", "len", "(", "target", ")", ">", "1", "else", "target", "[", "0", "]", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "X", "=", "self", ".", "transform", "(", "X", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "X", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.__len__": [[220, 222], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.celeba.CelebA.extra_repr": [[223, 226], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "lines", "=", "[", "\"Target type: {target_type}\"", ",", "\"Split: {split}\"", "]", "\n", "return", "\"\\n\"", ".", "join", "(", "lines", ")", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.ffhq.FFHQ.__init__": [[11, 29], ["lmdb.open", "IOError", "ffhq.FFHQ.env.begin", "int", "txn.get().decode", "txn.get"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "transform", ",", "resolution", "=", "8", ")", ":", "\n", "        ", "self", ".", "env", "=", "lmdb", ".", "open", "(", "\n", "path", ",", "\n", "max_readers", "=", "32", ",", "\n", "readonly", "=", "True", ",", "\n", "lock", "=", "False", ",", "\n", "readahead", "=", "False", ",", "\n", "meminit", "=", "False", ",", "\n", ")", "\n", "\n", "if", "not", "self", ".", "env", ":", "\n", "            ", "raise", "IOError", "(", "\"Cannot open lmdb dataset\"", ",", "path", ")", "\n", "\n", "", "with", "self", ".", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "            ", "self", ".", "length", "=", "int", "(", "txn", ".", "get", "(", "\"length\"", ".", "encode", "(", "\"utf-8\"", ")", ")", ".", "decode", "(", "\"utf-8\"", ")", ")", "\n", "\n", "", "self", ".", "resolution", "=", "resolution", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.ffhq.FFHQ.__len__": [[30, 32], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.ffhq.FFHQ.__getitem__": [[33, 44], ["io.BytesIO", "PIL.Image.open", "ffhq.FFHQ.transform", "ffhq.FFHQ.env.begin", "txn.get", "str().zfill", "str"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "with", "self", ".", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "            ", "key", "=", "f\"{self.resolution}-{str(index).zfill(5)}\"", ".", "encode", "(", "\"utf-8\"", ")", "\n", "img_bytes", "=", "txn", ".", "get", "(", "key", ")", "\n", "\n", "", "buffer", "=", "BytesIO", "(", "img_bytes", ")", "\n", "img", "=", "Image", ".", "open", "(", "buffer", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "target", "=", "0", "\n", "\n", "return", "img", ",", "target", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.logit_transform": [[6, 9], ["torch.log", "torch.log1p"], "function", ["None"], ["def", "logit_transform", "(", "image", ",", "lam", "=", "1e-6", ")", ":", "\n", "    ", "image", "=", "lam", "+", "(", "1", "-", "2", "*", "lam", ")", "*", "image", "\n", "return", "torch", ".", "log", "(", "image", ")", "-", "torch", ".", "log1p", "(", "-", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.data_transform": [[11, 27], ["img_transform.logit_transform", "torch.rand_like", "torch.randn_like", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.logit_transform"], ["", "def", "data_transform", "(", "config", ",", "x", ")", ":", "\n", "    ", "if", "config", ".", "uniform_dequantization", ":", "\n", "        ", "x", "=", "x", "/", "256.0", "*", "255.0", "+", "torch", ".", "rand_like", "(", "x", ")", "/", "256.0", "\n", "", "if", "config", ".", "gaussian_dequantization", ":", "\n", "        ", "x", "=", "x", "+", "torch", ".", "randn_like", "(", "x", ")", "*", "0.01", "\n", "\n", "", "if", "config", ".", "rescaled", ":", "\n", "        ", "x", "=", "2", "*", "x", "-", "1.0", "\n", "", "elif", "config", ".", "logit_transform", ":", "\n", "        ", "x", "=", "logit_transform", "(", "x", ")", "\n", "\n", "", "if", "config", ".", "image_mean", "is", "not", "None", "and", "config", ".", "image_std", "is", "not", "None", ":", "\n", "        ", "return", "(", "\n", "x", "-", "torch", ".", "FloatTensor", "(", "config", ".", "image_mean", ")", ".", "to", "(", "x", ".", "device", ")", "[", ":", ",", "None", ",", "None", "]", "\n", ")", "/", "torch", ".", "FloatTensor", "(", "config", ".", "image_std", ")", ".", "to", "(", "x", ".", "device", ")", "[", ":", ",", "None", ",", "None", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.inverse_data_transform": [[29, 42], ["torch.clamp", "torch.sigmoid", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor", "torch.FloatTensor"], "function", ["None"], ["", "def", "inverse_data_transform", "(", "config", ",", "x", ")", ":", "\n", "    ", "if", "config", ".", "image_mean", "is", "not", "None", "and", "config", ".", "image_std", "is", "not", "None", ":", "\n", "        ", "x", "=", "(", "\n", "x", "*", "torch", ".", "FloatTensor", "(", "config", ".", "image_std", ")", ".", "to", "(", "x", ".", "device", ")", "[", ":", ",", "None", ",", "None", "]", "\n", "+", "torch", ".", "FloatTensor", "(", "config", ".", "image_mean", ")", ".", "to", "(", "x", ".", "device", ")", "[", ":", ",", "None", ",", "None", "]", "\n", ")", "\n", "\n", "", "if", "config", ".", "logit_transform", ":", "\n", "        ", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "", "elif", "config", ".", "rescaled", ":", "\n", "        ", "x", "=", "(", "x", "+", "1.0", ")", "/", "2.0", "\n", "\n", "", "return", "torch", ".", "clamp", "(", "x", ",", "0.0", ",", "1.0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.__init__.get_dataset": [[7, 14], ["RuntimeError", "datasets.get_ps_dataset", "datasets.get_img_dataset"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.get_ps_dataset", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.image_dataset.get_img_dataset"], []], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.gen_bar_updater": [[11, 21], ["torch.utils.model_zoo.tqdm", "torch.utils.model_zoo.tqdm.update"], "function", ["None"], ["def", "gen_bar_updater", "(", ")", ":", "\n", "    ", "pbar", "=", "tqdm", "(", "total", "=", "None", ")", "\n", "\n", "def", "bar_update", "(", "count", ",", "block_size", ",", "total_size", ")", ":", "\n", "        ", "if", "pbar", ".", "total", "is", "None", "and", "total_size", ":", "\n", "            ", "pbar", ".", "total", "=", "total_size", "\n", "", "progress_bytes", "=", "count", "*", "block_size", "\n", "pbar", ".", "update", "(", "progress_bytes", "-", "pbar", ".", "n", ")", "\n", "\n", "", "return", "bar_update", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.check_integrity": [[23, 37], ["hashlib.md5", "hashlib.md5.hexdigest", "os.path.isfile", "os.path.isfile", "open", "iter", "hashlib.md5.update", "f.read"], "function", ["None"], ["", "def", "check_integrity", "(", "fpath", ",", "md5", "=", "None", ")", ":", "\n", "    ", "if", "md5", "is", "None", ":", "\n", "        ", "return", "True", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "fpath", ")", ":", "\n", "        ", "return", "False", "\n", "", "md5o", "=", "hashlib", ".", "md5", "(", ")", "\n", "with", "open", "(", "fpath", ",", "\"rb\"", ")", "as", "f", ":", "\n", "# read in 1MB chunks", "\n", "        ", "for", "chunk", "in", "iter", "(", "lambda", ":", "f", ".", "read", "(", "1024", "*", "1024", ")", ",", "b\"\"", ")", ":", "\n", "            ", "md5o", ".", "update", "(", "chunk", ")", "\n", "", "", "md5c", "=", "md5o", ".", "hexdigest", "(", ")", "\n", "if", "md5c", "!=", "md5", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.makedir_exist_ok": [[39, 50], ["os.makedirs", "os.makedirs"], "function", ["None"], ["", "def", "makedir_exist_ok", "(", "dirpath", ")", ":", "\n", "    ", "\"\"\"\n    Python2 support for os.makedirs(.., exist_ok=True)\n    \"\"\"", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirpath", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.download_url": [[52, 85], ["os.path.expanduser", "os.path.expanduser", "os.path.join", "os.path.join", "utils.makedir_exist_ok", "os.path.basename", "os.path.basename", "os.path.isfile", "os.path.isfile", "utils.check_integrity", "print", "print", "urllib.request.urlretrieve", "utils.gen_bar_updater", "url.replace.replace", "print", "urllib.request.urlretrieve", "utils.gen_bar_updater"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.makedir_exist_ok", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.check_integrity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.gen_bar_updater", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.gen_bar_updater"], ["", "", "", "def", "download_url", "(", "url", ",", "root", ",", "filename", "=", "None", ",", "md5", "=", "None", ")", ":", "\n", "    ", "\"\"\"Download a file from a url and place it in root.\n\n    Args:\n        url (str): URL to download file from\n        root (str): Directory to place downloaded file in\n        filename (str, optional): Name to save the file under. If None, use the basename of the URL\n        md5 (str, optional): MD5 checksum of the download. If None, do not check\n    \"\"\"", "\n", "from", "six", ".", "moves", "import", "urllib", "\n", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "if", "not", "filename", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "basename", "(", "url", ")", "\n", "", "fpath", "=", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", "\n", "\n", "makedir_exist_ok", "(", "root", ")", "\n", "\n", "# downloads file", "\n", "if", "os", ".", "path", ".", "isfile", "(", "fpath", ")", "and", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "        ", "print", "(", "\"Using downloaded and verified file: \"", "+", "fpath", ")", "\n", "", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "print", "(", "\"Downloading \"", "+", "url", "+", "\" to \"", "+", "fpath", ")", "\n", "urllib", ".", "request", ".", "urlretrieve", "(", "url", ",", "fpath", ",", "reporthook", "=", "gen_bar_updater", "(", ")", ")", "\n", "", "except", "OSError", ":", "\n", "            ", "if", "url", "[", ":", "5", "]", "==", "\"https\"", ":", "\n", "                ", "url", "=", "url", ".", "replace", "(", "\"https:\"", ",", "\"http:\"", ")", "\n", "print", "(", "\n", "\"Failed download. Trying https -> http instead.\"", "\n", "\" Downloading \"", "+", "url", "+", "\" to \"", "+", "fpath", "\n", ")", "\n", "urllib", ".", "request", ".", "urlretrieve", "(", "url", ",", "fpath", ",", "reporthook", "=", "gen_bar_updater", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.list_dir": [[87, 104], ["os.path.expanduser", "os.path.expanduser", "list", "filter", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "", "", "def", "list_dir", "(", "root", ",", "prefix", "=", "False", ")", ":", "\n", "    ", "\"\"\"List all directories at a given root\n\n    Args:\n        root (str): Path to directory whose folders need to be listed\n        prefix (bool, optional): If true, prepends the path to each result, otherwise\n            only returns the name of the directories found\n    \"\"\"", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "directories", "=", "list", "(", "\n", "filter", "(", "lambda", "p", ":", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "p", ")", ")", ",", "os", ".", "listdir", "(", "root", ")", ")", "\n", ")", "\n", "\n", "if", "prefix", "is", "True", ":", "\n", "        ", "directories", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "d", ")", "for", "d", "in", "directories", "]", "\n", "\n", "", "return", "directories", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.list_files": [[106, 128], ["os.path.expanduser", "os.path.expanduser", "list", "filter", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.isfile", "os.path.isfile", "p.endswith", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "list_files", "(", "root", ",", "suffix", ",", "prefix", "=", "False", ")", ":", "\n", "    ", "\"\"\"List all files ending with a suffix at a given root\n\n    Args:\n        root (str): Path to directory whose folders need to be listed\n        suffix (str or tuple): Suffix of the files to match, e.g. '.png' or ('.jpg', '.png').\n            It uses the Python \"str.endswith\" method and is passed directly\n        prefix (bool, optional): If true, prepends the path to each result, otherwise\n            only returns the name of the files found\n    \"\"\"", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "files", "=", "list", "(", "\n", "filter", "(", "\n", "lambda", "p", ":", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "root", ",", "p", ")", ")", "and", "p", ".", "endswith", "(", "suffix", ")", ",", "\n", "os", ".", "listdir", "(", "root", ")", ",", "\n", ")", "\n", ")", "\n", "\n", "if", "prefix", "is", "True", ":", "\n", "        ", "files", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "d", ")", "for", "d", "in", "files", "]", "\n", "\n", "", "return", "files", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.download_file_from_google_drive": [[130, 164], ["os.path.expanduser", "os.path.expanduser", "os.path.join", "os.path.join", "utils.makedir_exist_ok", "os.path.isfile", "os.path.isfile", "utils.check_integrity", "print", "requests.Session", "requests.Session.get", "utils._get_confirm_token", "utils._save_response_content", "requests.Session.get"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.makedir_exist_ok", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils.check_integrity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils._get_confirm_token", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils._save_response_content"], ["", "def", "download_file_from_google_drive", "(", "file_id", ",", "root", ",", "filename", "=", "None", ",", "md5", "=", "None", ")", ":", "\n", "    ", "\"\"\"Download a Google Drive file from  and place it in root.\n\n    Args:\n        file_id (str): id of file to be downloaded\n        root (str): Directory to place downloaded file in\n        filename (str, optional): Name to save the file under. If None, use the id of the file.\n        md5 (str, optional): MD5 checksum of the download. If None, do not check\n    \"\"\"", "\n", "# Based on https://stackoverflow.com/questions/38511444/python-download-files-from-google-drive-using-url", "\n", "import", "requests", "\n", "\n", "url", "=", "\"https://docs.google.com/uc?export=download\"", "\n", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "if", "not", "filename", ":", "\n", "        ", "filename", "=", "file_id", "\n", "", "fpath", "=", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", "\n", "\n", "makedir_exist_ok", "(", "root", ")", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "fpath", ")", "and", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "        ", "print", "(", "\"Using downloaded and verified file: \"", "+", "fpath", ")", "\n", "", "else", ":", "\n", "        ", "session", "=", "requests", ".", "Session", "(", ")", "\n", "\n", "response", "=", "session", ".", "get", "(", "url", ",", "params", "=", "{", "\"id\"", ":", "file_id", "}", ",", "stream", "=", "True", ")", "\n", "token", "=", "_get_confirm_token", "(", "response", ")", "\n", "\n", "if", "token", ":", "\n", "            ", "params", "=", "{", "\"id\"", ":", "file_id", ",", "\"confirm\"", ":", "token", "}", "\n", "response", "=", "session", ".", "get", "(", "url", ",", "params", "=", "params", ",", "stream", "=", "True", ")", "\n", "\n", "", "_save_response_content", "(", "response", ",", "fpath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils._get_confirm_token": [[166, 172], ["response.cookies.items", "key.startswith"], "function", ["None"], ["", "", "def", "_get_confirm_token", "(", "response", ")", ":", "\n", "    ", "for", "key", ",", "value", "in", "response", ".", "cookies", ".", "items", "(", ")", ":", "\n", "        ", "if", "key", ".", "startswith", "(", "\"download_warning\"", ")", ":", "\n", "            ", "return", "value", "\n", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.utils._save_response_content": [[174, 184], ["open", "torch.utils.model_zoo.tqdm", "response.iter_content", "torch.utils.model_zoo.tqdm.close", "f.write", "len", "torch.utils.model_zoo.tqdm.update"], "function", ["None"], ["", "def", "_save_response_content", "(", "response", ",", "destination", ",", "chunk_size", "=", "32768", ")", ":", "\n", "    ", "with", "open", "(", "destination", ",", "\"wb\"", ")", "as", "f", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "None", ")", "\n", "progress", "=", "0", "\n", "for", "chunk", "in", "response", ".", "iter_content", "(", "chunk_size", ")", ":", "\n", "            ", "if", "chunk", ":", "# filter out keep-alive new chunks", "\n", "                ", "f", ".", "write", "(", "chunk", ")", "\n", "progress", "+=", "len", "(", "chunk", ")", "\n", "pbar", ".", "update", "(", "progress", "-", "pbar", ".", "n", ")", "\n", "", "", "pbar", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.ImageSampler.__init__": [[59, 86], ["numpy.meshgrid", "img_density.astype", "img_density.astype.sum", "img_density.astype.flatten", "numpy.array", "numpy.array", "numpy.arange", "numpy.arange", "numpy.vstack", "Ix.flatten", "Iy.flatten"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_density", ",", "mean", "=", "[", "350", ",", "350", "]", ",", "scale", "=", "[", "350", ",", "350", "]", ")", ":", "\n", "        ", "\"\"\"Samples continuous coordinates from image density\n\n        Parameters\n        ----------\n        img_density : ndarray(width, height)\n            Image probability density\n\n        mean : (int, int)\n            center pixel\n\n        scale : (int, int)\n            number of pixels to scale to 1.0 (in x and y direction)\n\n        \"\"\"", "\n", "self", ".", "img_density", "=", "img_density", "\n", "Ix", ",", "Iy", "=", "np", ".", "meshgrid", "(", "\n", "np", ".", "arange", "(", "img_density", ".", "shape", "[", "1", "]", ")", ",", "np", ".", "arange", "(", "img_density", ".", "shape", "[", "0", "]", ")", "\n", ")", "\n", "self", ".", "idx", "=", "np", ".", "vstack", "(", "[", "Ix", ".", "flatten", "(", ")", ",", "Iy", ".", "flatten", "(", ")", "]", ")", ".", "T", "\n", "\n", "# draw samples from density", "\n", "density_normed", "=", "img_density", ".", "astype", "(", "np", ".", "float64", ")", "\n", "density_normed", "/=", "density_normed", ".", "sum", "(", ")", "\n", "self", ".", "density_flat", "=", "density_normed", ".", "flatten", "(", ")", "\n", "self", ".", "mean", "=", "np", ".", "array", "(", "[", "mean", "]", ")", "\n", "self", ".", "scale", "=", "np", ".", "array", "(", "[", "scale", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.ImageSampler.sample": [[87, 99], ["numpy.random.choice", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.STimer.rand"], ["", "def", "sample", "(", "self", ",", "nsample", ")", ":", "\n", "# draw random index", "\n", "        ", "i", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "idx", ".", "shape", "[", "0", "]", ",", "size", "=", "nsample", ",", "p", "=", "self", ".", "density_flat", ")", "\n", "ixy", "=", "self", ".", "idx", "[", "i", ",", ":", "]", "\n", "\n", "# simple dequantization, uniformally sample in the grid", "\n", "xy", "=", "ixy", "+", "np", ".", "random", ".", "rand", "(", "nsample", ",", "2", ")", "-", "0.5", "\n", "\n", "# normalize shape", "\n", "xy", "=", "(", "xy", "-", "self", ".", "mean", ")", "/", "self", ".", "scale", "\n", "\n", "return", "xy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_tool.prepare_image": [[6, 56], ["jammy.image.imread", "img.astype.mean", "img.astype.astype", "img.astype.max", "gaussian_filter", "gaussian_filter", "gaussian_filter", "gaussian_filter", "numpy.ones"], "function", ["None"], ["def", "prepare_image", "(", "\n", "img_path", ",", "crop", "=", "None", ",", "embed", "=", "None", ",", "white_cutoff", "=", "225", ",", "gauss_sigma", "=", "5", ",", "background", "=", "0.0001", "\n", ")", ":", "\n", "    ", "\"\"\"Transforms rgb image array into 2D-density and energy\n\n    Parameters\n    ----------\n    density : ndarray(width, height)\n        Probability density\n\n    energy : ndarray(width, height)\n        Energy\n\n    \"\"\"", "\n", "img", "=", "imread", "(", "img_path", ")", "\n", "\n", "# make one channel", "\n", "img", "=", "img", ".", "mean", "(", "axis", "=", "2", ")", "\n", "\n", "# make background white", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img", "[", "img", ">", "white_cutoff", "]", "=", "255", "\n", "\n", "# normalize", "\n", "img", "/=", "img", ".", "max", "(", ")", "\n", "\n", "if", "crop", "is", "not", "None", ":", "\n", "# crop", "\n", "        ", "img", "=", "img", "[", "crop", "[", "0", "]", ":", "crop", "[", "1", "]", ",", "crop", "[", "2", "]", ":", "crop", "[", "3", "]", "]", "\n", "\n", "", "if", "embed", "is", "not", "None", ":", "\n", "        ", "tmp", "=", "np", ".", "ones", "(", "(", "embed", "[", "0", "]", ",", "embed", "[", "1", "]", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "shift_x", "=", "(", "embed", "[", "0", "]", "-", "img", ".", "shape", "[", "0", "]", ")", "//", "2", "\n", "shift_y", "=", "(", "embed", "[", "1", "]", "-", "img", ".", "shape", "[", "1", "]", ")", "//", "2", "\n", "tmp", "[", "shift_x", ":", "img", ".", "shape", "[", "0", "]", "+", "shift_x", ",", "shift_y", ":", "img", ".", "shape", "[", "1", "]", "+", "shift_y", "]", "=", "img", "\n", "img", "=", "tmp", "\n", "\n", "# convolve with Gaussian", "\n", "", "from", "scipy", ".", "ndimage", "import", "gaussian_filter", "\n", "\n", "# TODO: need to tune the gauss_sigma smoothness of image", "\n", "img2", "=", "gaussian_filter", "(", "img", ",", "sigma", "=", "gauss_sigma", ")", "\n", "\n", "# add background", "\n", "background1", "=", "gaussian_filter", "(", "img", ",", "sigma", "=", "10", ")", "\n", "background2", "=", "gaussian_filter", "(", "img", ",", "sigma", "=", "20", ")", "\n", "background3", "=", "gaussian_filter", "(", "img", ",", "sigma", "=", "50", ")", "\n", "density", "=", "(", "1.0", "-", "img2", ")", "+", "background", "*", "(", "background1", "+", "background2", "+", "background3", ")", "\n", "\n", "return", "density", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde._init_model": [[8, 12], ["jammy.hyd_instantiate"], "function", ["None"], ["def", "_init_model", "(", "cfg", ")", ":", "\n", "    ", "if", "\"_target_\"", "in", "cfg", ":", "\n", "        ", "return", "hyd_instantiate", "(", "cfg", ")", "\n", "", "raise", "RuntimeError", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde.init_model": [[14, 24], ["sde._init_model", "sde._init_model", "module", "jammy.hyd_instantiate", "jammy.hyd_instantiate", "jammy.hyd_instantiate"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde._init_model", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde._init_model"], ["", "def", "init_model", "(", "cfg", ")", ":", "\n", "    ", "timestamps", "=", "hyd_instantiate", "(", "cfg", ".", "time_fn", ")", "(", ")", "\n", "diffusion", "=", "hyd_instantiate", "(", "cfg", ".", "diff_fn", ")", "(", ")", "\n", "condition", "=", "hyd_instantiate", "(", "cfg", ".", "cond_fn", ")", "(", ")", "\n", "\n", "drift", "=", "_init_model", "(", "cfg", ".", "drift", ")", "\n", "score", "=", "_init_model", "(", "cfg", ".", "score", ")", "\n", "\n", "module", "=", "QuickDiffFlow", "if", "cfg", ".", "quick", "else", "DiffFlow", "\n", "return", "module", "(", "cfg", ".", "d_in", ",", "timestamps", ",", "diffusion", ",", "condition", ",", "drift", ",", "score", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.image_fidelity": [[28, 39], ["torch_fidelity.calculate_metrics"], "function", ["None"], ["def", "image_fidelity", "(", "img_dir", ")", ":", "\n", "    ", "metric", "=", "torch_fidelity", ".", "calculate_metrics", "(", "\n", "input1", "=", "img_dir", ",", "\n", "input2", "=", "\"cifar10-train\"", ",", "\n", "cuda", "=", "True", ",", "\n", "isc", "=", "False", ",", "\n", "fid", "=", "True", ",", "\n", "kid", "=", "False", ",", "\n", "verbose", "=", "False", ",", "\n", ")", "\n", "return", "metric", "[", "\"frechet_inception_distance\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.epoch_start_wrapper": [[41, 59], ["jamtorch.data.get_batch", "datasets.data_transform", "model.sample_noise", "viz.img.check_unnormal_imgs", "viz.img.check_unnormal_imgs", "check_dflow_coef"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.data_transform", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.check_unnormal_imgs", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.check_unnormal_imgs", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.check_dflow_coef"], ["", "def", "epoch_start_wrapper", "(", "cfg", ")", ":", "\n", "    ", "def", "_epoch_start", "(", "trainer", ")", ":", "\n", "        ", "from", "viz", ".", "lines", "import", "check_dflow_coef", "\n", "\n", "model", "=", "trainer", ".", "mmodel", "\n", "dataset", "=", "trainer", ".", "train_loader", ".", "dataset", "\n", "num_grid", "=", "cfg", ".", "data", ".", "eval_n_samples", "\n", "sample", "=", "get_batch", "(", "dataset", ",", "num_grid", "*", "num_grid", ")", "\n", "\n", "trainer", ".", "test_sample", "=", "data_transform", "(", "cfg", ".", "data", ",", "sample", ")", "\n", "trainer", ".", "test_noise", "=", "model", ".", "sample_noise", "(", "num_grid", "*", "num_grid", ")", "\n", "\n", "check_unnormal_imgs", "(", "cfg", ",", "trainer", ".", "test_sample", ",", "num_grid", ",", "0", ",", "\"GT-sample\"", ")", "\n", "check_unnormal_imgs", "(", "cfg", ",", "trainer", ".", "test_noise", ",", "num_grid", ",", "0", ",", "\"GT-noise\"", ")", "\n", "\n", "check_dflow_coef", "(", "model", ")", "\n", "\n", "", "return", "_epoch_start", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.viz_gt_process": [[61, 80], ["utils.diagnosis.fb_whole_process", "viz.img.viz_img_process", "viz.img.viz_img_process"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.fb_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.viz_img_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.viz_img_process"], ["", "def", "viz_gt_process", "(", "model", ",", "x", ",", "gif_suffix", ",", "eval_n", ",", "reverse_transform_fn", ")", ":", "\n", "    ", "forward_kv", ",", "backward_kv", "=", "fb_whole_process", "(", "\n", "model", ",", "x", ",", "model", ".", "timestamps", ",", "model", ".", "diffusion", ",", "model", ".", "condition", ",", "is_gt", "=", "True", "\n", ")", "\n", "viz_img_process", "(", "\n", "forward_kv", ",", "\n", "f\"f_{gif_suffix}\"", ",", "\n", "eval_n", ",", "\n", "[", "\"data\"", ",", "\"grad\"", ",", "\"noise\"", "]", ",", "\n", "reverse_transform_fn", ",", "\n", ")", "\n", "viz_img_process", "(", "\n", "backward_kv", ",", "\n", "f\"b_{gif_suffix}\"", ",", "\n", "eval_n", ",", "\n", "[", "\"data\"", ",", "\"drift\"", ",", "\"diff\"", "]", ",", "\n", "reverse_transform_fn", ",", "\n", ")", "\n", "return", "forward_kv", ",", "backward_kv", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.viz_sample_process": [[82, 97], ["utils.diagnosis.backward_whole_process", "viz.img.viz_img_process", "viz.img.tensor2imgnd", "reverse_transform_fn"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.viz_img_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd"], ["", "def", "viz_sample_process", "(", "model", ",", "z", ",", "gif_suffix", ",", "eval_n", ",", "reverse_transform_fn", ")", ":", "\n", "    ", "backward_kv", "=", "backward_whole_process", "(", "\n", "model", ",", "z", ",", "model", ".", "timestamps", ",", "model", ".", "diffusion", ",", "model", ".", "condition", "\n", ")", "\n", "viz_img_process", "(", "\n", "backward_kv", ",", "\n", "f\"s_{gif_suffix}\"", ",", "\n", "eval_n", ",", "\n", "[", "\"data\"", ",", "\"drift\"", ",", "\"diff\"", "]", ",", "\n", "reverse_transform_fn", ",", "\n", ")", "\n", "b_imgnd", "=", "tensor2imgnd", "(", "\n", "reverse_transform_fn", "(", "backward_kv", "[", "\"data\"", "]", "[", "-", "1", "]", ")", ",", "eval_n", ",", "eval_n", "\n", ")", "\n", "return", "backward_kv", ",", "b_imgnd", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.epoch_after_wrapper": [[99, 190], ["functools.partial", "jamtorch.ddp.ddp_utils.get_world_size", "jammy.io.makedirs", "jammy.io.makedirs", "trainer.test_sample.to", "sde_img_fns.viz_gt_process", "viz.img.tensor2imgnd", "viz.img.tensor2imgnd", "viz.img.wandb_write_ndimg", "viz.img.wandb_write_ndimg", "logger.info", "trainer.test_noise.to", "sde_img_fns.viz_sample_process", "viz.img.wandb_write_ndimg", "jamtorch.data.num_to_groups", "jamtorch.ddp.ddp_utils.barrier", "jamtorch.ddp.ddp_utils.barrier", "check_fid_fn", "check_fid_fn", "print", "trainer.cmdviz.update", "jamtorch.ddp.ddp_utils.barrier", "sde_img_fns.epoch_after_wrapper.check_sampling"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.viz_gt_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.wandb_write_ndimg", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.wandb_write_ndimg", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.viz_sample_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.wandb_write_ndimg", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.num_to_groups"], ["", "def", "epoch_after_wrapper", "(", "cfg", ")", ":", "# pylint: disable=too-many-statements", "\n", "    ", "eval_n", "=", "cfg", ".", "data", ".", "eval_n_samples", "\n", "reverse_transform_fn", "=", "functools", ".", "partial", "(", "inverse_data_transform", ",", "cfg", ".", "data", ")", "\n", "\n", "## prepare fid check", "\n", "n_gpu", "=", "ddp_utils", ".", "get_world_size", "(", ")", "\n", "img_per_gpu", "=", "cfg", ".", "data", ".", "fid", ".", "num_samples", "//", "n_gpu", "\n", "sample_fid_path", "=", "\"sample_fid_imgs\"", "\n", "io", ".", "makedirs", "(", "sample_fid_path", ")", "\n", "gtimg_per_gpu", "=", "cfg", ".", "data", ".", "val_size", "//", "n_gpu", "\n", "sample_gt_path", "=", "\"fb_fid_imgs\"", "\n", "io", ".", "makedirs", "(", "sample_gt_path", ")", "\n", "check_fid_fn", "=", "image_fidelity", "\n", "\n", "@", "ddp", ".", "master_only", "\n", "@", "no_grad_func", "\n", "def", "check_gtsample_traj", "(", "trainer", ")", ":", "\n", "        ", "n_epoch", ",", "n_iter", "=", "trainer", ".", "epoch_cnt", ",", "trainer", ".", "iter_cnt", "\n", "\n", "model", "=", "trainer", ".", "ema", ".", "model", "\n", "gt_sample", "=", "trainer", ".", "test_sample", ".", "to", "(", "trainer", ".", "device", ")", "\n", "forward_kv", ",", "backward_kv", "=", "viz_gt_process", "(", "\n", "model", ",", "gt_sample", ",", "f\"{n_epoch}_{n_iter}\"", ",", "eval_n", ",", "reverse_transform_fn", "\n", ")", "\n", "f_imgnd", "=", "tensor2imgnd", "(", "\n", "reverse_transform_fn", "(", "forward_kv", "[", "\"data\"", "]", "[", "-", "1", "]", ")", ",", "eval_n", ",", "eval_n", "\n", ")", "\n", "b_imgnd", "=", "tensor2imgnd", "(", "\n", "reverse_transform_fn", "(", "backward_kv", "[", "\"data\"", "]", "[", "-", "1", "]", ")", ",", "eval_n", ",", "eval_n", "\n", ")", "\n", "wandb_write_ndimg", "(", "f_imgnd", ",", "n_iter", ",", "\"t_f\"", ")", "\n", "wandb_write_ndimg", "(", "b_imgnd", ",", "n_iter", ",", "\"t_b\"", ")", "\n", "\n", "", "@", "ddp", ".", "master_only", "\n", "def", "check_sampling", "(", "trainer", ")", ":", "\n", "        ", "logger", ".", "info", "(", "f\"eval {trainer.iter_cnt}\"", ")", "\n", "n_epoch", ",", "n_iter", "=", "trainer", ".", "epoch_cnt", ",", "trainer", ".", "iter_cnt", "\n", "\n", "model", "=", "trainer", ".", "ema", ".", "model", "\n", "z", "=", "trainer", ".", "test_noise", ".", "to", "(", "trainer", ".", "device", ")", "\n", "_", ",", "sampling_img", "=", "viz_sample_process", "(", "\n", "model", ",", "z", ",", "f\"{n_epoch}_{n_iter}\"", ",", "eval_n", ",", "reverse_transform_fn", "\n", ")", "\n", "wandb_write_ndimg", "(", "sampling_img", ",", "n_iter", ",", "\"sample\"", ")", "\n", "\n", "", "@", "no_grad_func", "\n", "def", "runtime_fid_sample", "(", "trainer", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "ema", ".", "model", "\n", "batch_size", "=", "cfg", ".", "data", ".", "fid", ".", "batch_size", "\n", "cnt", "=", "trainer", ".", "rank", "*", "img_per_gpu", "\n", "for", "_batch_size", "in", "num_to_groups", "(", "img_per_gpu", ",", "batch_size", ")", ":", "\n", "            ", "s_n", "=", "model", ".", "sample_noise", "(", "_batch_size", ")", "\n", "sample", "=", "backward_z2x", "(", "model", ",", "s_n", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "sample", "=", "inverse_data_transform", "(", "cfg", ".", "data", ",", "sample", ")", "\n", "save_seperate_imgs", "(", "sample", ".", "cpu", "(", ")", ",", "sample_fid_path", ",", "cnt", ")", "\n", "cnt", "+=", "_batch_size", "\n", "", "ddp_utils", ".", "barrier", "(", ")", "\n", "\n", "", "@", "no_grad_func", "\n", "def", "runtime_fid_gt", "(", "trainer", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "ema", ".", "model", "\n", "cnt", "=", "trainer", ".", "rank", "*", "gtimg_per_gpu", "\n", "for", "data", "in", "trainer", ".", "val_loader", ":", "\n", "            ", "data", "=", "data", "[", "0", "]", ".", "float", "(", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "data_trans", "=", "data_transform", "(", "cfg", ".", "data", ",", "data", ")", "\n", "x", "=", "recon_x", "(", "\n", "model", ",", "data_trans", ",", "model", ".", "timestamps", ",", "model", ".", "diffusion", ",", "model", ".", "condition", "\n", ")", "\n", "data_rec", "=", "inverse_data_transform", "(", "cfg", ".", "data", ",", "x", ")", "\n", "save_seperate_imgs", "(", "data_rec", ",", "sample_gt_path", ",", "cnt", ")", "\n", "cnt", "+=", "len", "(", "data", ")", "\n", "", "ddp_utils", ".", "barrier", "(", ")", "\n", "\n", "", "@", "ddp", ".", "master_only", "\n", "def", "runtime_check_fid", "(", "trainer", ")", ":", "\n", "        ", "sample_fid", "=", "check_fid_fn", "(", "sample_fid_path", ")", "\n", "gt_fid", "=", "check_fid_fn", "(", "sample_gt_path", ")", "\n", "print", "(", "sample_fid", ",", "gt_fid", ")", "\n", "trainer", ".", "cmdviz", ".", "update", "(", "\"eval\"", ",", "{", "\"sample_fid\"", ":", "sample_fid", ",", "\"gt_fid\"", ":", "gt_fid", "}", ")", "\n", "\n", "", "@", "no_grad_func", "\n", "def", "epoch_after", "(", "trainer", ")", ":", "\n", "        ", "ddp_utils", ".", "barrier", "(", ")", "\n", "check_sampling", "(", "trainer", ")", "\n", "check_gtsample_traj", "(", "trainer", ")", "\n", "if", "cfg", ".", "model", ".", "enable_fid", ":", "\n", "            ", "runtime_fid_sample", "(", "trainer", ")", "\n", "runtime_fid_gt", "(", "trainer", ")", "\n", "runtime_check_fid", "(", "trainer", ")", "\n", "\n", "", "", "return", "epoch_after", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.img_trainer_register": [[192, 195], ["trainer.register_event", "trainer.register_event", "sde_img_fns.epoch_start_wrapper", "sde_img_fns.epoch_after_wrapper"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_img_fns.epoch_start_wrapper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.epoch_after_wrapper"], ["", "def", "img_trainer_register", "(", "trainer", ",", "cfg", ")", ":", "\n", "    ", "trainer", ".", "register_event", "(", "\"epoch:start\"", ",", "epoch_start_wrapper", "(", "cfg", ")", ")", "\n", "trainer", ".", "register_event", "(", "\"val:start\"", ",", "epoch_after_wrapper", "(", "cfg", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.epoch_start": [[15, 19], ["viz.ps.viz_sample"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.viz_sample"], ["def", "epoch_start", "(", "trainer", ")", ":", "\n", "    ", "dataset", "=", "trainer", ".", "train_loader", ".", "dataset", "\n", "trainer", ".", "test_sample", "=", "dataset", ".", "dataset", ".", "data", "[", ":", "50000", "]", "\n", "viz_sample", "(", "trainer", ".", "test_sample", ",", "\"ground sample\"", ",", "\"GT-sample.png\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.epoch_after_wrapper": [[21, 40], ["jamtorch.from_numpy", "utils.forward_x2z", "viz.ps.viz_sample", "utils.backward_z2x", "viz.ps.viz_sample", "trainer.model.sample", "viz.ps.viz_sample", "sde_ps_fns.epoch_after_wrapper.check_gtsample_traj"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_x2z", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.viz_sample", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_z2x", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.viz_sample", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.viz_sample"], ["", "def", "epoch_after_wrapper", "(", "cfg", ")", ":", "\n", "    ", "@", "no_grad_func", "\n", "def", "check_gtsample_traj", "(", "trainer", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "model", "\n", "gt_sample", "=", "jampt", ".", "from_numpy", "(", "trainer", ".", "test_sample", ")", "\n", "z", "=", "dgns", ".", "forward_x2z", "(", "model", ",", "gt_sample", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "viz_sample", "(", "\n", "z", ",", "\"test forward\"", ",", "f\"forward_{trainer.epoch_cnt:02}.png\"", ",", "fix_lim", "=", "False", "\n", ")", "\n", "x", "=", "dgns", ".", "backward_z2x", "(", "model", ",", "z", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "viz_sample", "(", "x", ",", "\"test backward\"", ",", "f\"backward_{trainer.epoch_cnt:02}.png\"", ")", "\n", "\n", "", "@", "no_grad_func", "\n", "def", "epoch_after", "(", "trainer", ")", ":", "\n", "        ", "sample", "=", "trainer", ".", "model", ".", "sample", "(", "50000", ")", "\n", "viz_sample", "(", "sample", ",", "\"sde sample\"", ",", "f\"epoch_{trainer.epoch_cnt:02}.png\"", ")", "\n", "check_gtsample_traj", "(", "trainer", ")", "\n", "\n", "", "return", "epoch_after", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.check_process": [[42, 94], ["jamtorch.from_numpy", "model.sample_noise", "utils.forward_whole_process", "viz.ps.seqSample2img", "jimg.imgstack.suptitle", "imgs.append", "matplotlib.close", "utils.backward_whole_process", "viz.ps.seqSample2img", "jimg.imgstack.suptitle", "imgs.append", "matplotlib.close", "utils.backward_whole_process", "viz.ps.seqSample2img", "jimg.imgstack.suptitle", "imgs.append", "matplotlib.close", "utils.backward_deterministic_process", "viz.ps.seqSample2img", "jimg.imgstack.suptitle", "imgs.append", "matplotlib.close", "utils.langevin_process", "viz.ps.seqSample2img", "jimg.imgstack.suptitle", "imgs.append", "matplotlib.close", "jammy.imgstack", "jammy.savefig", "matplotlib.close", "jammy.plt2pil", "jammy.plt2pil", "jammy.plt2pil", "jammy.plt2pil", "jammy.plt2pil", "utils.scalars.scalar_helper", "utils.scalars.scalar_helper", "utils.scalars.scalar_helper", "utils.scalars.scalar_helper"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.forward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_whole_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.backward_deterministic_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.diagnosis.langevin_process", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.scalar_helper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.scalar_helper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.scalar_helper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.scalar_helper"], ["", "def", "check_process", "(", "cfg", ")", ":", "\n", "    ", "def", "_fn", "(", "trainer", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "model", "\n", "gt_sample", "=", "jampt", ".", "from_numpy", "(", "trainer", ".", "test_sample", ")", "\n", "noise", "=", "model", ".", "sample_noise", "(", "5000", ")", "\n", "imgs", "=", "[", "]", "\n", "\n", "# GT Forward", "\n", "f_process", "=", "dgns", ".", "forward_whole_process", "(", "model", ",", "gt_sample", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "fig", "=", "seqSample2img", "(", "f_process", "[", "\"data\"", "]", ",", "10", ")", "\n", "fig", ".", "suptitle", "(", "\"GT Forward\"", ")", "\n", "imgs", ".", "append", "(", "jimg", ".", "plt2pil", "(", "fig", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "# GT Backward", "\n", "gt_noise", "=", "f_process", "[", "\"data\"", "]", "[", "-", "1", "]", "\n", "b_process", "=", "dgns", ".", "backward_whole_process", "(", "model", ",", "gt_noise", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "fig", "=", "seqSample2img", "(", "b_process", "[", "\"data\"", "]", "[", ":", ":", "-", "1", "]", ",", "10", ")", "\n", "fig", ".", "suptitle", "(", "\"GT Backward\"", ")", "\n", "imgs", ".", "append", "(", "jimg", ".", "plt2pil", "(", "fig", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "# Noise Backward", "\n", "b_process", "=", "dgns", ".", "backward_whole_process", "(", "model", ",", "noise", ",", "*", "scalar_helper", "(", "model", ")", ")", "\n", "fig", "=", "seqSample2img", "(", "b_process", "[", "\"data\"", "]", ",", "10", ")", "\n", "fig", ".", "suptitle", "(", "\"Noise Backward\"", ")", "\n", "imgs", ".", "append", "(", "jimg", ".", "plt2pil", "(", "fig", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "# Deterministic Backward", "\n", "d_process", "=", "dgns", ".", "backward_deterministic_process", "(", "\n", "model", ",", "noise", ",", "*", "scalar_helper", "(", "model", ")", "\n", ")", "\n", "fig", "=", "seqSample2img", "(", "d_process", "[", "\"data\"", "]", ",", "10", ")", "\n", "fig", ".", "suptitle", "(", "\"Deterministic Backward\"", ")", "\n", "imgs", ".", "append", "(", "jimg", ".", "plt2pil", "(", "fig", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "# LGV", "\n", "lgv_process", "=", "dgns", ".", "langevin_process", "(", "\n", "model", ",", "noise", ",", "-", "1", ",", "1000", ",", "0.05", ",", "model", ".", "condition", ",", "all_img", "=", "True", "\n", ")", "\n", "fig", "=", "seqSample2img", "(", "lgv_process", "[", "\"data_mean\"", "]", ",", "10", ")", "\n", "fig", ".", "suptitle", "(", "\"LGV process\"", ")", "\n", "imgs", ".", "append", "(", "jimg", ".", "plt2pil", "(", "fig", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "fig", "=", "jimg", ".", "imgstack", "(", "imgs", ")", "\n", "jimg", ".", "savefig", "(", "fig", ",", "f\"whole-{trainer.epoch_cnt:02}.png\"", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "", "return", "_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.points_trainer_register": [[96, 104], ["trainer.register_event", "trainer.register_event", "trainer.register_event", "torch.optim.lr_scheduler.StepLR", "trainer.register_event", "sde_ps_fns.epoch_after_wrapper", "sde_ps_fns.check_process"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.epoch_after_wrapper", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_ps_fns.check_process"], ["", "def", "points_trainer_register", "(", "trainer", ",", "cfg", ")", ":", "\n", "    ", "trainer", ".", "register_event", "(", "\"val:end\"", ",", "epoch_after_wrapper", "(", "cfg", ")", ")", "\n", "trainer", ".", "register_event", "(", "\"epoch:end\"", ",", "check_process", "(", "cfg", ")", ")", "\n", "trainer", ".", "register_event", "(", "\"epoch:start\"", ",", "epoch_start", ")", "\n", "\n", "scheduler", "=", "StepLR", "(", "trainer", ".", "optimizer", ",", "step_size", "=", "2", ",", "gamma", "=", "cfg", ".", "optimizer", ".", "gamma", ")", "\n", "trainer", ".", "lr_scheduler", "=", "scheduler", "\n", "trainer", ".", "register_event", "(", "\"epoch:after\"", ",", "step_lr", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.__init__.import_fns": [[4, 9], ["jammy.load_class", "jammy.load_class", "jammy.load_class"], "function", ["None"], []], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.optimizers.get_optimizer": [[5, 7], ["jammy.jam_instantiate", "model.parameters"], "function", ["None"], ["def", "get_optimizer", "(", "opt_cfg", ",", "model", ")", ":", "\n", "    ", "return", "jam_instantiate", "(", "opt_cfg", ",", "model", ".", "parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.optimizers.get_tune_optimizer": [[9, 16], ["torch.optim.Adam", "model.drift.parameters", "model.score.parameters"], "function", ["None"], ["", "def", "get_tune_optimizer", "(", "opt_cfg", ",", "model", ")", ":", "\n", "    ", "return", "torch", ".", "optim", ".", "Adam", "(", "\n", "[", "\n", "{", "\"params\"", ":", "model", ".", "drift", ".", "parameters", "(", ")", ",", "\"lr\"", ":", "opt_cfg", ".", "drift", "}", ",", "\n", "{", "\"params\"", ":", "model", ".", "score", ".", "parameters", "(", ")", ",", "\"lr\"", ":", "opt_cfg", ".", "score", "}", ",", "\n", "]", ",", "\n", "lr", "=", "2e-4", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.optimizers.fix_drift_optimizer": [[19, 24], ["model.drift.parameters", "torch.optim.Adam", "model.score.parameters"], "function", ["None"], ["", "def", "fix_drift_optimizer", "(", "opt_cfg", ",", "model", ")", ":", "\n", "    ", "for", "param", "in", "model", ".", "drift", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "", "return", "torch", ".", "optim", ".", "Adam", "(", "\n", "[", "{", "\"params\"", ":", "model", ".", "score", ".", "parameters", "(", ")", ",", "\"lr\"", ":", "opt_cfg", ".", "score", "}", "]", ",", "lr", "=", "2e-4", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_loss.img_preprocess": [[11, 14], ["feed_dict[].float().to", "datasets.data_transform", "feed_dict[].float"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.data_transform"], ["def", "img_preprocess", "(", "cfg", ",", "feed_dict", ",", "device", ")", ":", "\n", "    ", "feed_dict", "=", "feed_dict", "[", "0", "]", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "return", "data_transform", "(", "cfg", ".", "data", ",", "feed_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_loss.point_preprocess": [[16, 18], ["feed_dict.float().to", "feed_dict.float"], "function", ["None"], ["", "def", "point_preprocess", "(", "cfg", ",", "feed_dict", ",", "device", ")", ":", "\n", "    ", "return", "feed_dict", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_loss.loss_fn_wrapper": [[20, 41], ["jammy.hyd_instantiate", "jammy.hyd_instantiate.", "model", "model.noise_log_prob().mean", "logabsdet.mean", "model.noise_log_prob", "numpy.prod", "z.flatten"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.noise_log_prob"], ["", "def", "loss_fn_wrapper", "(", "cfg", ")", ":", "\n", "    ", "preprocess_fn", "=", "hyd_instantiate", "(", "cfg", ".", "data", ".", "preprocess_fn", ",", "cfg", ")", "\n", "\n", "def", "loss_fn", "(", "trainer", ",", "feed_dict", ",", "is_train", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "mmodel", "\n", "feed_dict", "=", "preprocess_fn", "(", "feed_dict", ",", "trainer", ".", "device", ")", "\n", "z", ",", "logabsdet", "=", "model", "(", "feed_dict", ")", "\n", "\n", "norm_loss", "=", "-", "model", ".", "noise_log_prob", "(", "z", ".", "flatten", "(", "start_dim", "=", "1", ")", ")", ".", "mean", "(", ")", "\n", "det_loss", "=", "-", "logabsdet", ".", "mean", "(", ")", "\n", "return", "(", "\n", "norm_loss", "+", "det_loss", ",", "\n", "{", "}", ",", "\n", "{", "\n", "\"norm\"", ":", "norm_loss", ",", "\n", "\"det_loss\"", ":", "det_loss", ",", "\n", "\"dim/norm\"", ":", "norm_loss", "/", "np", ".", "prod", "(", "z", ".", "shape", "[", "1", ":", "]", ")", ",", "\n", "}", ",", "\n", ")", "\n", "\n", "", "return", "loss_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.modules.sde_loss.cont_loss_fn_wrapper": [[43, 100], ["jammy.hyd_instantiate", "numpy.array", "numpy.array", "utils.scalars.instantiate_scaler", "get_logger", "numpy.sum", "sde_loss.cont_loss_fn_wrapper.update_scalar"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.utils.scalars.instantiate_scaler"], ["", "def", "cont_loss_fn_wrapper", "(", "cfg", ")", ":", "\n", "    ", "preprocess_fn", "=", "hyd_instantiate", "(", "cfg", ".", "data", ".", "preprocess_fn", ",", "cfg", ")", "\n", "n_idx", "=", "0", "\n", "# FIXME: FIX IN CONFIG", "\n", "n_iters", "=", "np", ".", "array", "(", "cfg", ".", "model", ".", "N_iter", ")", "\n", "n_values", "=", "np", ".", "array", "(", "cfg", ".", "model", ".", "N_values", ")", "\n", "timer", ",", "differ", ",", "conder", "=", "instantiate_scaler", "(", "cfg", ")", "\n", "from", "jamtorch", "import", "get_logger", "\n", "\n", "logger", "=", "get_logger", "(", ")", "\n", "\n", "def", "update_scalar", "(", "iter_cnt", ")", ":", "\n", "        ", "nonlocal", "n_idx", ",", "timer", ",", "differ", ",", "conder", "\n", "cur_idx", "=", "np", ".", "sum", "(", "iter_cnt", ">", "n_iters", ")", "\n", "if", "cur_idx", ">", "n_idx", ":", "\n", "            ", "new_num", "=", "int", "(", "n_values", "[", "cur_idx", "]", ")", "\n", "cfg", ".", "model", ".", "time_fn", ".", "num_steps", "=", "new_num", "\n", "cfg", ".", "model", ".", "diff_fn", ".", "num_steps", "=", "new_num", "\n", "cfg", ".", "model", ".", "cond_fn", ".", "num_steps", "=", "new_num", "\n", "n_idx", "=", "cur_idx", "\n", "timer", ",", "differ", ",", "conder", "=", "instantiate_scaler", "(", "\n", "cfg", "\n", ")", "# pylint: disable=unused-variable", "\n", "logger", ".", "critical", "(", "f\"\\nIter{iter_cnt}: {n_idx} steps level: {new_num}\"", ")", "\n", "return", "True", "\n", "", "return", "False", "\n", "\n", "", "def", "loss_fn", "(", "trainer", ",", "feed_dict", ",", "is_train", ")", ":", "\n", "        ", "model", "=", "trainer", ".", "mmodel", "\n", "if", "update_scalar", "(", "trainer", ".", "iter_cnt", ")", ":", "\n", "            ", "model", ".", "timestamps", "=", "timer", "(", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "model", ".", "diffusion", "=", "differ", "(", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "model", ".", "condition", "=", "conder", "(", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "model", ".", "delta_t", "=", "model", ".", "timestamps", "[", "1", ":", "]", "-", "model", ".", "timestamps", "[", ":", "-", "1", "]", "\n", "check_dflow_coef", "(", "model", ",", "prefix_caption", "=", "trainer", ".", "iter_cnt", ")", "\n", "", "feed_dict", "=", "preprocess_fn", "(", "feed_dict", ",", "trainer", ".", "device", ")", "\n", "\n", "cur_time", "=", "timer", ".", "rand", "(", ")", "\n", "cur_diff", "=", "differ", ".", "index", "(", "cur_time", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "cur_cond", "=", "conder", ".", "index", "(", "cur_time", ")", ".", "to", "(", "trainer", ".", "device", ")", "\n", "cur_time", "=", "cur_time", ".", "to", "(", "trainer", ".", "device", ")", "\n", "\n", "z", ",", "logabsdet", "=", "model", ".", "forward_cond", "(", "feed_dict", ",", "cur_time", ",", "cur_diff", ",", "cur_cond", ")", "\n", "\n", "norm_loss", "=", "-", "model", ".", "noise_log_prob", "(", "z", ".", "flatten", "(", "start_dim", "=", "1", ")", ")", ".", "mean", "(", ")", "\n", "det_loss", "=", "-", "logabsdet", ".", "mean", "(", ")", "\n", "return", "(", "\n", "norm_loss", "+", "det_loss", ",", "\n", "{", "}", ",", "\n", "{", "\n", "\"norm\"", ":", "norm_loss", ",", "\n", "\"det_loss\"", ":", "det_loss", ",", "\n", "\"dim/norm\"", ":", "norm_loss", "/", "np", ".", "prod", "(", "z", ".", "shape", "[", "1", ":", "]", ")", ",", "\n", "}", ",", "\n", ")", "\n", "\n", "", "return", "loss_fn", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Residual.__init__": [[36, 39], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fn", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fn", "=", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Residual.forward": [[40, 42], ["unet.Residual.fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "fn", "(", "x", ",", "*", "args", ",", "**", "kwargs", ")", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.SinusoidalPosEmb.__init__": [[45, 48], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.SinusoidalPosEmb.forward": [[49, 57], ["torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "math.log", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.cat.sin", "torch.cat.sin", "torch.cat.cos", "torch.cat.cos"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "device", "=", "x", ".", "device", "\n", "half_dim", "=", "self", ".", "dim", "//", "2", "\n", "emb", "=", "math", ".", "log", "(", "10000", ")", "/", "(", "half_dim", "-", "1", ")", "\n", "emb", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "half_dim", ",", "device", "=", "device", ")", "*", "-", "emb", ")", "\n", "emb", "=", "x", "[", ":", ",", "None", "]", "*", "emb", "[", "None", ",", ":", "]", "\n", "emb", "=", "torch", ".", "cat", "(", "(", "emb", ".", "sin", "(", ")", ",", "emb", ".", "cos", "(", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "return", "emb", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Mish.forward": [[60, 62], ["torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.softplus", "torch.softplus"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "*", "torch", ".", "tanh", "(", "F", ".", "softplus", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Upsample.__init__": [[65, 68], ["torch.nn.Module.__init__", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "ConvTranspose2d", "(", "dim", ",", "dim", ",", "4", ",", "2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Upsample.forward": [[69, 71], ["unet.Upsample.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Downsample.__init__": [[74, 77], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "dim", ",", "dim", ",", "3", ",", "2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Downsample.forward": [[78, 80], ["unet.Downsample.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Rezero.__init__": [[83, 87], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fn", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fn", "=", "fn", "\n", "self", ".", "g", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Rezero.forward": [[88, 90], ["unet.Rezero.fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "fn", "(", "x", ")", "*", "self", ".", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Block.__init__": [[96, 100], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.GroupNorm", "torch.nn.GroupNorm", "unet.Mish"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "dim_out", ",", "groups", "=", "8", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim", ",", "dim_out", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "GroupNorm", "(", "groups", ",", "dim_out", ")", ",", "Mish", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Block.forward": [[102, 104], ["unet.Block.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "block", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.ResnetBlock.__init__": [[107, 114], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "unet.Block", "unet.Block", "unet.Mish", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Identity", "torch.nn.Identity"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "dim_out", ",", "*", ",", "time_emb_dim", ",", "groups", "=", "8", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "Mish", "(", ")", ",", "nn", ".", "Linear", "(", "time_emb_dim", ",", "dim_out", ")", ")", "\n", "\n", "self", ".", "block1", "=", "Block", "(", "dim", ",", "dim_out", ")", "\n", "self", ".", "block2", "=", "Block", "(", "dim_out", ",", "dim_out", ")", "\n", "self", ".", "res_conv", "=", "nn", ".", "Conv2d", "(", "dim", ",", "dim_out", ",", "1", ")", "if", "dim", "!=", "dim_out", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.ResnetBlock.forward": [[115, 120], ["unet.ResnetBlock.block1", "unet.ResnetBlock.block2", "unet.ResnetBlock.mlp", "unet.ResnetBlock.res_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "time_emb", ")", ":", "\n", "        ", "h", "=", "self", ".", "block1", "(", "x", ")", "\n", "h", "+=", "self", ".", "mlp", "(", "time_emb", ")", "[", ":", ",", ":", ",", "None", ",", "None", "]", "\n", "h", "=", "self", ".", "block2", "(", "h", ")", "\n", "return", "h", "+", "self", ".", "res_conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.LinearAttention.__init__": [[123, 129], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "heads", "=", "4", ",", "dim_head", "=", "32", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "heads", "=", "heads", "\n", "hidden_dim", "=", "dim_head", "*", "heads", "\n", "self", ".", "to_qkv", "=", "nn", ".", "Conv2d", "(", "dim", ",", "hidden_dim", "*", "3", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "to_out", "=", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "dim", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.LinearAttention.forward": [[130, 143], ["unet.LinearAttention.to_qkv", "einops.rearrange", "k.softmax.softmax.softmax", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "einops.rearrange", "unet.LinearAttention.to_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "to_qkv", "(", "x", ")", "\n", "q", ",", "k", ",", "v", "=", "rearrange", "(", "\n", "qkv", ",", "\"b (qkv heads c) h w -> qkv b heads c (h w)\"", ",", "heads", "=", "self", ".", "heads", ",", "qkv", "=", "3", "\n", ")", "\n", "k", "=", "k", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "context", "=", "torch", ".", "einsum", "(", "\"bhdn,bhen->bhde\"", ",", "k", ",", "v", ")", "\n", "out", "=", "torch", ".", "einsum", "(", "\"bhde,bhdn->bhen\"", ",", "context", ",", "q", ")", "\n", "out", "=", "rearrange", "(", "\n", "out", ",", "\"b heads c (h w) -> b (heads c) h w\"", ",", "heads", "=", "self", ".", "heads", ",", "h", "=", "h", ",", "w", "=", "w", "\n", ")", "\n", "return", "self", ".", "to_out", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Unet.__init__": [[150, 201], ["torch.nn.Module.__init__", "list", "unet.SinusoidalPosEmb", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "len", "enumerate", "unet.ResnetBlock", "unet.Residual", "unet.ResnetBlock", "enumerate", "unet.default", "torch.nn.Sequential", "torch.nn.Sequential", "zip", "torch.nn.Linear", "torch.nn.Linear", "unet.Mish", "torch.nn.Linear", "torch.nn.Linear", "unet.Unet.downs.append", "unet.Rezero", "reversed", "unet.Unet.ups.append", "unet.Block", "torch.nn.Conv2d", "torch.nn.Conv2d", "map", "torch.nn.ModuleList", "torch.nn.ModuleList", "unet.LinearAttention", "torch.nn.ModuleList", "torch.nn.ModuleList", "unet.ResnetBlock", "unet.ResnetBlock", "unet.Residual", "unet.ResnetBlock", "unet.ResnetBlock", "unet.Residual", "unet.Rezero", "unet.Downsample", "torch.nn.Identity", "torch.nn.Identity", "unet.Rezero", "unet.Upsample", "torch.nn.Identity", "torch.nn.Identity", "unet.LinearAttention", "unet.LinearAttention"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.default"], ["    ", "def", "__init__", "(", "\n", "self", ",", "dim", ",", "out_dim", "=", "None", ",", "dim_mults", "=", "(", "1", ",", "2", ",", "4", ",", "8", ")", ",", "groups", "=", "8", ",", "in_channel", "=", "3", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "dims", "=", "[", "in_channel", ",", "*", "map", "(", "lambda", "m", ":", "dim", "*", "m", ",", "dim_mults", ")", "]", "\n", "in_out", "=", "list", "(", "zip", "(", "dims", "[", ":", "-", "1", "]", ",", "dims", "[", "1", ":", "]", ")", ")", "\n", "\n", "self", ".", "time_pos_emb", "=", "SinusoidalPosEmb", "(", "dim", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "4", ")", ",", "Mish", "(", ")", ",", "nn", ".", "Linear", "(", "dim", "*", "4", ",", "dim", ")", "\n", ")", "\n", "\n", "self", ".", "downs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "self", ".", "ups", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "num_resolutions", "=", "len", "(", "in_out", ")", "\n", "\n", "for", "ind", ",", "(", "dim_in", ",", "dim_out", ")", "in", "enumerate", "(", "in_out", ")", ":", "\n", "            ", "is_last", "=", "ind", ">=", "(", "num_resolutions", "-", "1", ")", "\n", "\n", "self", ".", "downs", ".", "append", "(", "\n", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "ResnetBlock", "(", "dim_in", ",", "dim_out", ",", "time_emb_dim", "=", "dim", ")", ",", "\n", "ResnetBlock", "(", "dim_out", ",", "dim_out", ",", "time_emb_dim", "=", "dim", ")", ",", "\n", "Residual", "(", "Rezero", "(", "LinearAttention", "(", "dim_out", ")", ")", ")", ",", "\n", "Downsample", "(", "dim_out", ")", "if", "not", "is_last", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "]", "\n", ")", "\n", ")", "\n", "\n", "", "mid_dim", "=", "dims", "[", "-", "1", "]", "\n", "self", ".", "mid_block1", "=", "ResnetBlock", "(", "mid_dim", ",", "mid_dim", ",", "time_emb_dim", "=", "dim", ")", "\n", "self", ".", "mid_attn", "=", "Residual", "(", "Rezero", "(", "LinearAttention", "(", "mid_dim", ")", ")", ")", "\n", "self", ".", "mid_block2", "=", "ResnetBlock", "(", "mid_dim", ",", "mid_dim", ",", "time_emb_dim", "=", "dim", ")", "\n", "\n", "for", "ind", ",", "(", "dim_in", ",", "dim_out", ")", "in", "enumerate", "(", "reversed", "(", "in_out", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "is_last", "=", "ind", ">=", "(", "num_resolutions", "-", "1", ")", "\n", "\n", "self", ".", "ups", ".", "append", "(", "\n", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "ResnetBlock", "(", "dim_out", "*", "2", ",", "dim_in", ",", "time_emb_dim", "=", "dim", ")", ",", "\n", "ResnetBlock", "(", "dim_in", ",", "dim_in", ",", "time_emb_dim", "=", "dim", ")", ",", "\n", "Residual", "(", "Rezero", "(", "LinearAttention", "(", "dim_in", ")", ")", ")", ",", "\n", "Upsample", "(", "dim_in", ")", "if", "not", "is_last", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "]", "\n", ")", "\n", ")", "\n", "\n", "", "out_dim", "=", "default", "(", "out_dim", ",", "in_channel", ")", "\n", "self", ".", "final_conv", "=", "nn", ".", "Sequential", "(", "Block", "(", "dim", ",", "dim", ")", ",", "nn", ".", "Conv2d", "(", "dim", ",", "out_dim", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.Unet.forward": [[202, 228], ["time.expand.expand.expand", "unet.Unet.time_pos_emb", "unet.Unet.mlp", "unet.Unet.mid_block1", "unet.Unet.mid_attn", "unet.Unet.mid_block2", "unet.Unet.final_conv", "resnet", "resnet2", "attn", "h.append", "downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet", "resnet2", "attn", "upsample", "h.pop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "time", ")", ":", "\n", "        ", "time", "=", "time", ".", "expand", "(", "(", "x", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "t", "=", "self", ".", "time_pos_emb", "(", "time", ")", "\n", "t", "=", "self", ".", "mlp", "(", "t", ")", "\n", "\n", "h", "=", "[", "]", "\n", "\n", "for", "resnet", ",", "resnet2", ",", "attn", ",", "downsample", "in", "self", ".", "downs", ":", "\n", "            ", "x", "=", "resnet", "(", "x", ",", "t", ")", "\n", "x", "=", "resnet2", "(", "x", ",", "t", ")", "\n", "x", "=", "attn", "(", "x", ")", "\n", "h", ".", "append", "(", "x", ")", "\n", "x", "=", "downsample", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "mid_block1", "(", "x", ",", "t", ")", "\n", "x", "=", "self", ".", "mid_attn", "(", "x", ")", "\n", "x", "=", "self", ".", "mid_block2", "(", "x", ",", "t", ")", "\n", "\n", "for", "resnet", ",", "resnet2", ",", "attn", ",", "upsample", "in", "self", ".", "ups", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "h", ".", "pop", "(", ")", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "resnet", "(", "x", ",", "t", ")", "\n", "x", "=", "resnet2", "(", "x", ",", "t", ")", "\n", "x", "=", "attn", "(", "x", ")", "\n", "x", "=", "upsample", "(", "x", ")", "\n", "\n", "", "return", "self", ".", "final_conv", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.exists": [[16, 18], ["None"], "function", ["None"], ["def", "exists", "(", "x", ")", ":", "\n", "    ", "return", "x", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.default": [[20, 24], ["unet.exists", "inspect.isfunction", "d"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.exists"], ["", "def", "default", "(", "val", ",", "d", ")", ":", "\n", "    ", "if", "exists", "(", "val", ")", ":", "\n", "        ", "return", "val", "\n", "", "return", "d", "(", ")", "if", "isfunction", "(", "d", ")", "else", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.unet.num_to_groups": [[26, 33], ["arr.append"], "function", ["None"], ["", "def", "num_to_groups", "(", "num", ",", "divisor", ")", ":", "\n", "    ", "groups", "=", "num", "//", "divisor", "\n", "remainder", "=", "num", "%", "divisor", "\n", "arr", "=", "[", "divisor", "]", "*", "groups", "\n", "if", "remainder", ">", "0", ":", "\n", "        ", "arr", ".", "append", "(", "remainder", ")", "\n", "", "return", "arr", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Upsample.__init__": [[41, 47], ["torch.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "with_conv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_conv", "=", "with_conv", "\n", "if", "self", ".", "with_conv", ":", "\n", "            ", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Upsample.forward": [[49, 54], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "official_unet.Upsample.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2.0", ",", "mode", "=", "\"nearest\"", ")", "\n", "if", "self", ".", "with_conv", ":", "\n", "            ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Downsample.__init__": [[57, 64], ["torch.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "with_conv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_conv", "=", "with_conv", "\n", "if", "self", ".", "with_conv", ":", "\n", "# no asymmetric padding in torch conv, must do it ourselves", "\n", "            ", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Downsample.forward": [[66, 74], ["torch.nn.functional.pad", "torch.nn.functional.pad", "torch.nn.functional.pad", "torch.nn.functional.pad", "official_unet.Downsample.conv", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "with_conv", ":", "\n", "            ", "pad", "=", "(", "0", ",", "1", ",", "0", ",", "1", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "x", ",", "pad", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "nn", ".", "functional", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.ResnetBlock.__init__": [[79, 112], ["torch.Module.__init__", "official_unet.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "official_unet.Normalize", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Normalize", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Normalize"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "in_channels", ",", "\n", "out_channels", "=", "None", ",", "\n", "conv_shortcut", "=", "False", ",", "\n", "dropout", ",", "\n", "temb_channels", "=", "512", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "out_channels", "=", "in_channels", "if", "out_channels", "is", "None", "else", "out_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "use_conv_shortcut", "=", "conv_shortcut", "\n", "\n", "self", ".", "norm1", "=", "Normalize", "(", "in_channels", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "self", ".", "temb_proj", "=", "torch", ".", "nn", ".", "Linear", "(", "temb_channels", ",", "out_channels", ")", "\n", "self", ".", "norm2", "=", "Normalize", "(", "out_channels", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "out_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "if", "self", ".", "in_channels", "!=", "self", ".", "out_channels", ":", "\n", "            ", "if", "self", ".", "use_conv_shortcut", ":", "\n", "                ", "self", ".", "conv_shortcut", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "nin_shortcut", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.ResnetBlock.forward": [[114, 134], ["official_unet.ResnetBlock.norm1", "official_unet.nonlinearity", "official_unet.ResnetBlock.conv1", "official_unet.ResnetBlock.norm2", "official_unet.nonlinearity", "official_unet.ResnetBlock.dropout", "official_unet.ResnetBlock.conv2", "official_unet.ResnetBlock.temb_proj", "official_unet.ResnetBlock.conv_shortcut", "official_unet.ResnetBlock.nin_shortcut", "official_unet.nonlinearity"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "temb", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "norm1", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "conv1", "(", "h", ")", "\n", "\n", "h", "=", "h", "+", "self", ".", "temb_proj", "(", "nonlinearity", "(", "temb", ")", ")", "[", ":", ",", ":", ",", "None", ",", "None", "]", "\n", "\n", "h", "=", "self", ".", "norm2", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "dropout", "(", "h", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "\n", "if", "self", ".", "in_channels", "!=", "self", ".", "out_channels", ":", "\n", "            ", "if", "self", ".", "use_conv_shortcut", ":", "\n", "                ", "x", "=", "self", ".", "conv_shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "nin_shortcut", "(", "x", ")", "\n", "\n", "", "", "return", "x", "+", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.AttnBlock.__init__": [[137, 153], ["torch.Module.__init__", "official_unet.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Normalize"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "norm", "=", "Normalize", "(", "in_channels", ")", "\n", "self", ".", "q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n", "self", ".", "k", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n", "self", ".", "v", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n", "self", ".", "proj_out", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.AttnBlock.forward": [[155, 181], ["official_unet.AttnBlock.norm", "official_unet.AttnBlock.q", "official_unet.AttnBlock.k", "official_unet.AttnBlock.v", "q.permute.permute.reshape", "q.permute.permute.permute", "k.reshape.reshape.reshape", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "v.reshape.reshape.reshape", "w_.permute.permute.permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "official_unet.AttnBlock.reshape", "official_unet.AttnBlock.proj_out", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h_", "=", "x", "\n", "h_", "=", "self", ".", "norm", "(", "h_", ")", "\n", "q", "=", "self", ".", "q", "(", "h_", ")", "\n", "k", "=", "self", ".", "k", "(", "h_", ")", "\n", "v", "=", "self", ".", "v", "(", "h_", ")", "\n", "\n", "# compute attention", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "q", ".", "shape", "\n", "q", "=", "q", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "\n", "q", "=", "q", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# b,hw,c", "\n", "k", "=", "k", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "# b,c,hw", "\n", "w_", "=", "torch", ".", "bmm", "(", "q", ",", "k", ")", "# b,hw,hw    w[b,i,j]=sum_c q[b,i,c]k[b,c,j]", "\n", "w_", "=", "w_", "*", "(", "int", "(", "c", ")", "**", "(", "-", "0.5", ")", ")", "\n", "w_", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "w_", ",", "dim", "=", "2", ")", "\n", "\n", "# attend to values", "\n", "v", "=", "v", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "\n", "w_", "=", "w_", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# b,hw,hw (first hw of k, second of q)", "\n", "# b, c,hw (hw of q) h_[b,c,j] = sum_i v[b,c,i] w_[b,i,j]", "\n", "h_", "=", "torch", ".", "bmm", "(", "v", ",", "w_", ")", "\n", "h_", "=", "h_", ".", "reshape", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "h_", "=", "self", ".", "proj_out", "(", "h_", ")", "\n", "\n", "return", "x", "+", "h_", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Model.__init__": [[184, 297], ["torch.Module.__init__", "tuple", "len", "torch.Module", "torch.Module", "torch.ModuleList", "torch.ModuleList", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "official_unet.ResnetBlock", "official_unet.AttnBlock", "official_unet.ResnetBlock", "torch.ModuleList", "torch.ModuleList", "reversed", "official_unet.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "official_unet.Model.down.append", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "official_unet.Model.up.insert", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.ModuleList.append", "official_unet.Downsample", "torch.ModuleList.append", "official_unet.Upsample", "official_unet.ResnetBlock", "torch.ModuleList.append", "official_unet.ResnetBlock", "torch.ModuleList.append", "official_unet.AttnBlock", "official_unet.AttnBlock"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Normalize"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "ch", ",", "\n", "out_ch", ",", "\n", "ch_mult", ",", "\n", "num_res_blocks", ",", "\n", "attn_resolutions", ",", "\n", "dropout", ",", "\n", "in_channels", ",", "\n", "resolution", ",", "\n", "resamp_with_conv", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "ch_mult", "=", "tuple", "(", "ch_mult", ")", "\n", "\n", "self", ".", "ch", "=", "ch", "\n", "self", ".", "temb_ch", "=", "self", ".", "ch", "*", "4", "\n", "self", ".", "num_resolutions", "=", "len", "(", "ch_mult", ")", "\n", "self", ".", "num_res_blocks", "=", "num_res_blocks", "\n", "self", ".", "resolution", "=", "resolution", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "# timestep embedding", "\n", "self", ".", "temb", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "temb", ".", "dense", "=", "nn", ".", "ModuleList", "(", "\n", "[", "\n", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "ch", ",", "self", ".", "temb_ch", ")", ",", "\n", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "temb_ch", ",", "self", ".", "temb_ch", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "# downsampling", "\n", "self", ".", "conv_in", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "self", ".", "ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "\n", "curr_res", "=", "resolution", "\n", "in_ch_mult", "=", "(", "1", ",", ")", "+", "ch_mult", "\n", "self", ".", "down", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_in", "=", "None", "\n", "for", "i_level", "in", "range", "(", "self", ".", "num_resolutions", ")", ":", "# 4", "\n", "            ", "block", "=", "nn", ".", "ModuleList", "(", ")", "\n", "attn", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_in", "=", "ch", "*", "in_ch_mult", "[", "i_level", "]", "\n", "block_out", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", ")", ":", "# 2", "\n", "                ", "block", ".", "append", "(", "\n", "ResnetBlock", "(", "\n", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_out", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ",", "\n", ")", "\n", ")", "\n", "block_in", "=", "block_out", "\n", "if", "curr_res", "in", "attn_resolutions", ":", "\n", "                    ", "attn", ".", "append", "(", "AttnBlock", "(", "block_in", ")", ")", "#", "\n", "", "", "down", "=", "nn", ".", "Module", "(", ")", "\n", "down", ".", "block", "=", "block", "\n", "down", ".", "attn", "=", "attn", "\n", "if", "i_level", "!=", "self", ".", "num_resolutions", "-", "1", ":", "\n", "                ", "down", ".", "downsample", "=", "Downsample", "(", "block_in", ",", "resamp_with_conv", ")", "\n", "curr_res", "=", "curr_res", "//", "2", "\n", "", "self", ".", "down", ".", "append", "(", "down", ")", "\n", "\n", "", "self", ".", "mid", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "mid", ".", "block_1", "=", "ResnetBlock", "(", "\n", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_in", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ",", "\n", ")", "\n", "self", ".", "mid", ".", "attn_1", "=", "AttnBlock", "(", "block_in", ")", "\n", "self", ".", "mid", ".", "block_2", "=", "ResnetBlock", "(", "\n", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_in", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ",", "\n", ")", "\n", "\n", "# upsampling", "\n", "self", ".", "up", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_level", "in", "reversed", "(", "range", "(", "self", ".", "num_resolutions", ")", ")", ":", "\n", "            ", "block", "=", "nn", ".", "ModuleList", "(", ")", "\n", "attn", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_out", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "skip_in", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", "+", "1", ")", ":", "\n", "                ", "if", "i_block", "==", "self", ".", "num_res_blocks", ":", "\n", "                    ", "skip_in", "=", "ch", "*", "in_ch_mult", "[", "i_level", "]", "\n", "", "block", ".", "append", "(", "\n", "ResnetBlock", "(", "\n", "in_channels", "=", "block_in", "+", "skip_in", ",", "\n", "out_channels", "=", "block_out", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ",", "\n", ")", "\n", ")", "\n", "block_in", "=", "block_out", "\n", "if", "curr_res", "in", "attn_resolutions", ":", "\n", "                    ", "attn", ".", "append", "(", "AttnBlock", "(", "block_in", ")", ")", "\n", "", "", "up", "=", "nn", ".", "Module", "(", ")", "\n", "up", ".", "block", "=", "block", "\n", "up", ".", "attn", "=", "attn", "\n", "if", "i_level", "!=", "0", ":", "\n", "                ", "up", ".", "upsample", "=", "Upsample", "(", "block_in", ",", "resamp_with_conv", ")", "\n", "curr_res", "=", "curr_res", "*", "2", "\n", "", "self", ".", "up", ".", "insert", "(", "0", ",", "up", ")", "# prepend to get consistent order", "\n", "\n", "# end", "\n", "", "self", ".", "norm_out", "=", "Normalize", "(", "block_in", ")", "\n", "self", ".", "conv_out", "=", "torch", ".", "nn", ".", "Conv2d", "(", "\n", "block_in", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Model.forward": [[299, 342], ["t.expand.expand.expand", "official_unet.get_timestep_embedding", "official_unet.nonlinearity", "range", "official_unet.Model.mid.block_1", "official_unet.Model.mid.attn_1", "official_unet.Model.mid.block_2", "reversed", "official_unet.Model.norm_out", "official_unet.nonlinearity", "official_unet.Model.conv_out", "official_unet.Model.conv_in", "range", "range", "range", "hs.append", "hs.append", "official_unet.Model.up[].upsample", "len", "official_unet.Model.down[].downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "hs.pop"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.get_timestep_embedding", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "[", "2", "]", "==", "x", ".", "shape", "[", "3", "]", "==", "self", ".", "resolution", "\n", "\n", "# timestep embedding", "\n", "t", "=", "t", ".", "expand", "(", "(", "x", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "temb", "=", "get_timestep_embedding", "(", "t", ",", "self", ".", "ch", ")", "\n", "temb", "=", "self", ".", "temb", ".", "dense", "[", "0", "]", "(", "temb", ")", "\n", "temb", "=", "nonlinearity", "(", "temb", ")", "\n", "temb", "=", "self", ".", "temb", ".", "dense", "[", "1", "]", "(", "temb", ")", "\n", "\n", "# downsampling", "\n", "hs", "=", "[", "self", ".", "conv_in", "(", "x", ")", "]", "\n", "for", "i_level", "in", "range", "(", "self", ".", "num_resolutions", ")", ":", "\n", "            ", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", ")", ":", "\n", "                ", "h", "=", "self", ".", "down", "[", "i_level", "]", ".", "block", "[", "i_block", "]", "(", "hs", "[", "-", "1", "]", ",", "temb", ")", "\n", "if", "len", "(", "self", ".", "down", "[", "i_level", "]", ".", "attn", ")", ">", "0", ":", "\n", "                    ", "h", "=", "self", ".", "down", "[", "i_level", "]", ".", "attn", "[", "i_block", "]", "(", "h", ")", "\n", "", "hs", ".", "append", "(", "h", ")", "\n", "", "if", "i_level", "!=", "self", ".", "num_resolutions", "-", "1", ":", "\n", "                ", "hs", ".", "append", "(", "self", ".", "down", "[", "i_level", "]", ".", "downsample", "(", "hs", "[", "-", "1", "]", ")", ")", "\n", "\n", "# middle", "\n", "", "", "h", "=", "hs", "[", "-", "1", "]", "\n", "h", "=", "self", ".", "mid", ".", "block_1", "(", "h", ",", "temb", ")", "\n", "h", "=", "self", ".", "mid", ".", "attn_1", "(", "h", ")", "\n", "h", "=", "self", ".", "mid", ".", "block_2", "(", "h", ",", "temb", ")", "\n", "\n", "# upsampling", "\n", "for", "i_level", "in", "reversed", "(", "range", "(", "self", ".", "num_resolutions", ")", ")", ":", "\n", "            ", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", "+", "1", ")", ":", "\n", "                ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "block", "[", "i_block", "]", "(", "\n", "torch", ".", "cat", "(", "[", "h", ",", "hs", ".", "pop", "(", ")", "]", ",", "dim", "=", "1", ")", ",", "temb", "\n", ")", "\n", "if", "len", "(", "self", ".", "up", "[", "i_level", "]", ".", "attn", ")", ">", "0", ":", "\n", "                    ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "attn", "[", "i_block", "]", "(", "h", ")", "\n", "", "", "if", "i_level", "!=", "0", ":", "\n", "                ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "upsample", "(", "h", ")", "\n", "\n", "# end", "\n", "", "", "h", "=", "self", ".", "norm_out", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "conv_out", "(", "h", ")", "\n", "return", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.get_timestep_embedding": [[8, 27], ["torch.exp", "torch.exp", "torch.nn.functional.pad.to", "torch.cat", "torch.cat", "len", "math.log", "torch.nn.functional.pad", "torch.nn.functional.pad", "torch.arange", "torch.arange", "timesteps.float", "torch.sin", "torch.sin", "torch.cos", "torch.cos"], "function", ["None"], ["def", "get_timestep_embedding", "(", "timesteps", ",", "embedding_dim", ")", ":", "\n", "    ", "\"\"\"\n    This matches the implementation in Denoising Diffusion Probabilistic Models:\n    From Fairseq.\n    Build sinusoidal embeddings.\n    This matches the implementation in tensor2tensor, but differs slightly\n    from the description in Section 3.5 of \"Attention Is All You Need\".\n    \"\"\"", "\n", "assert", "len", "(", "timesteps", ".", "shape", ")", "==", "1", "\n", "\n", "half_dim", "=", "embedding_dim", "//", "2", "\n", "emb", "=", "math", ".", "log", "(", "10000", ")", "/", "(", "half_dim", "-", "1", ")", "\n", "emb", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "half_dim", ",", "dtype", "=", "torch", ".", "float32", ")", "*", "-", "emb", ")", "\n", "emb", "=", "emb", ".", "to", "(", "device", "=", "timesteps", ".", "device", ")", "\n", "emb", "=", "timesteps", ".", "float", "(", ")", "[", ":", ",", "None", "]", "*", "emb", "[", "None", ",", ":", "]", "\n", "emb", "=", "torch", ".", "cat", "(", "[", "torch", ".", "sin", "(", "emb", ")", ",", "torch", ".", "cos", "(", "emb", ")", "]", ",", "dim", "=", "1", ")", "\n", "if", "embedding_dim", "%", "2", "==", "1", ":", "# zero pad", "\n", "        ", "emb", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "emb", ",", "(", "0", ",", "1", ",", "0", ",", "0", ")", ")", "\n", "", "return", "emb", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.nonlinearity": [[29, 32], ["torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "def", "nonlinearity", "(", "x", ")", ":", "\n", "# swish", "\n", "    ", "return", "x", "*", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.official_unet.Normalize": [[34, 37], ["torch.nn.GroupNorm", "torch.nn.GroupNorm"], "function", ["None"], ["", "def", "Normalize", "(", "in_channels", ")", ":", "\n", "    ", "return", "torch", ".", "nn", ".", "GroupNorm", "(", "\n", "num_groups", "=", "32", ",", "num_channels", "=", "in_channels", ",", "eps", "=", "1e-6", ",", "affine", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.__init__": [[9, 18], ["base_model.BaseModel.__init__", "diff_flow.DiffFlow.register_buffer", "diff_flow.DiffFlow.register_buffer", "diff_flow.DiffFlow.register_buffer", "diff_flow.DiffFlow.register_buffer"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "data_shape", ",", "timestamp", ",", "diffusion", ",", "condition", ",", "drift_net", ",", "score_net", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_shape", ",", "drift_net", ",", "score_net", ")", "\n", "self", ".", "register_buffer", "(", "\"timestamps\"", ",", "timestamp", ")", "\n", "self", ".", "register_buffer", "(", "\"diffusion\"", ",", "diffusion", ")", "\n", "self", ".", "register_buffer", "(", "\"condition\"", ",", "condition", ")", "\n", "assert", "self", ".", "timestamps", ".", "shape", "==", "self", ".", "diffusion", ".", "shape", "\n", "self", ".", "register_buffer", "(", "\"delta_t\"", ",", "self", ".", "timestamps", "[", "1", ":", "]", "-", "self", ".", "timestamps", "[", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.forward": [[19, 21], ["super().forward"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "forward", "(", "x", ",", "self", ".", "timestamps", ",", "self", ".", "diffusion", ",", "self", ".", "condition", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.backward": [[22, 24], ["super().backward"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward"], ["", "def", "backward", "(", "self", ",", "z", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "backward", "(", "z", ",", "self", ".", "timestamps", ",", "self", ".", "diffusion", ",", "self", ".", "condition", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample": [[25, 29], ["diff_flow.DiffFlow._distribution.sample().view", "diff_flow.DiffFlow.backward", "diff_flow.DiffFlow._distribution.sample"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "sample", "(", "self", ",", "n_samples", ")", ":", "\n", "        ", "z", "=", "self", ".", "_distribution", ".", "sample", "(", "n_samples", ")", ".", "view", "(", "-", "1", ",", "*", "self", ".", "data_shape", ")", "\n", "x", ",", "_", "=", "self", ".", "backward", "(", "z", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.sample_noise": [[30, 32], ["diff_flow.DiffFlow._distribution.sample().view", "diff_flow.DiffFlow._distribution.sample"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "sample_noise", "(", "self", ",", "n_samples", ")", ":", "\n", "        ", "return", "self", ".", "_distribution", ".", "sample", "(", "n_samples", ")", ".", "view", "(", "-", "1", ",", "*", "self", ".", "data_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.DiffFlow.noise_log_prob": [[33, 35], ["diff_flow.DiffFlow._distribution.log_prob"], "methods", ["None"], ["", "def", "noise_log_prob", "(", "self", ",", "z", ")", ":", "\n", "        ", "return", "self", ".", "_distribution", ".", "log_prob", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.QuickDiffFlow.forward": [[38, 46], ["utils.sdefunction.SdeF.apply", "tuple", "diff_flow.QuickDiffFlow.parameters"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "SdeF", ".", "apply", "(", "\n", "x", ",", "\n", "self", ",", "\n", "self", ".", "timestamps", ",", "\n", "self", ".", "diffusion", ",", "\n", "self", ".", "condition", ",", "\n", "*", "tuple", "(", "self", ".", "parameters", "(", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.diff_flow.QuickDiffFlow.forward_cond": [[48, 51], ["utils.sdefunction.SdeF.apply", "tuple", "diff_flow.QuickDiffFlow.parameters"], "methods", ["None"], ["", "def", "forward_cond", "(", "self", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "        ", "return", "SdeF", ".", "apply", "(", "\n", "x", ",", "self", ",", "timestamps", ",", "diffusion", ",", "condition", ",", "*", "tuple", "(", "self", ".", "parameters", "(", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.__init__": [[16, 22], ["super().__init__", "tuple", "jamtorch.distributions.StandardNormal", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_shape", ",", "drift_net", ",", "score_net", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_shape", "=", "tuple", "(", "data_shape", ")", "\n", "self", ".", "drift", "=", "drift_net", "\n", "self", ".", "score", "=", "score_net", "\n", "self", ".", "_distribution", "=", "StandardNormal", "(", "[", "np", ".", "prod", "(", "data_shape", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward_step": [[23, 34], ["base_model.BaseModel._distribution.sample().view", "base_model.BaseModel.cal_backnoise", "base_model.BaseModel.cal_next_nodiffusion", "base_model.BaseModel._distribution.sample", "base_model.batch_noise_square", "base_model.batch_noise_square", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_backnoise", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_next_nodiffusion", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.batch_noise_square", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.batch_noise_square"], ["", "def", "forward_step", "(", "self", ",", "x", ",", "step_size", ",", "cond_f", ",", "cond_b", ",", "diff_f", ",", "diff_b", ")", ":", "\n", "        ", "forward_noise", "=", "self", ".", "_distribution", ".", "sample", "(", "x", ".", "shape", "[", "0", "]", ")", ".", "view", "(", "x", ".", "shape", ")", "\n", "z", "=", "(", "\n", "self", ".", "cal_next_nodiffusion", "(", "x", ",", "step_size", ",", "cond_f", ")", "\n", "+", "torch", ".", "sqrt", "(", "step_size", ")", "*", "diff_f", "*", "forward_noise", "\n", ")", "\n", "backward_noise", "=", "self", ".", "cal_backnoise", "(", "x", ",", "z", ",", "step_size", ",", "cond_b", ",", "diff_b", ")", "\n", "delta_s", "=", "-", "0.5", "*", "(", "\n", "batch_noise_square", "(", "backward_noise", ")", "-", "batch_noise_square", "(", "forward_noise", ")", "\n", ")", "\n", "return", "z", ",", "delta_s", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_backnoise": [[35, 38], ["base_model.BaseModel.drift", "base_model.BaseModel.score", "torch.sqrt"], "methods", ["None"], ["", "def", "cal_backnoise", "(", "self", ",", "x", ",", "z", ",", "step_size", ",", "cond_b", ",", "diff_b", ")", ":", "\n", "        ", "f_backward", "=", "self", ".", "drift", "(", "z", ",", "cond_b", ")", "-", "diff_b", "**", "2", "*", "self", ".", "score", "(", "z", ",", "cond_b", ")", "\n", "return", "(", "x", "-", "z", "+", "f_backward", "*", "step_size", ")", "/", "(", "diff_b", "*", "torch", ".", "sqrt", "(", "step_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_forwardnoise": [[39, 42], ["base_model.BaseModel.drift", "torch.sqrt"], "methods", ["None"], ["", "def", "cal_forwardnoise", "(", "self", ",", "x", ",", "z", ",", "step_size", ",", "cond_f", ",", "diff_f", ")", ":", "\n", "        ", "f_backward", "=", "self", ".", "drift", "(", "x", ",", "cond_f", ")", "\n", "return", "(", "z", "-", "x", "-", "f_backward", "*", "step_size", ")", "/", "(", "diff_f", "*", "torch", ".", "sqrt", "(", "step_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_next_nodiffusion": [[43, 45], ["base_model.BaseModel.drift"], "methods", ["None"], ["", "def", "cal_next_nodiffusion", "(", "self", ",", "x", ",", "step_size", ",", "cond_f", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "drift", "(", "x", ",", "cond_f", ")", "*", "step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_prev_nodiffusion": [[46, 50], ["base_model.BaseModel.drift", "base_model.BaseModel.score"], "methods", ["None"], ["", "def", "cal_prev_nodiffusion", "(", "self", ",", "z", ",", "step_size", ",", "cond_b", ",", "diff_b", ")", ":", "\n", "        ", "return", "(", "\n", "z", "\n", "-", "(", "self", ".", "drift", "(", "z", ",", "cond_b", ")", "-", "diff_b", "**", "2", "*", "self", ".", "score", "(", "z", ",", "cond_b", ")", ")", "*", "step_size", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward_step": [[52, 63], ["base_model.BaseModel._distribution.sample().view", "base_model.BaseModel.cal_forwardnoise", "base_model.BaseModel.cal_prev_nodiffusion", "base_model.BaseModel._distribution.sample", "base_model.batch_noise_square", "base_model.batch_noise_square", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_forwardnoise", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.cal_prev_nodiffusion", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.batch_noise_square", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.batch_noise_square"], ["", "def", "backward_step", "(", "self", ",", "z", ",", "step_size", ",", "cond_f", ",", "cond_b", ",", "diff_f", ",", "diff_b", ")", ":", "\n", "        ", "backward_noise", "=", "self", ".", "_distribution", ".", "sample", "(", "z", ".", "shape", "[", "0", "]", ")", ".", "view", "(", "z", ".", "shape", ")", "\n", "x", "=", "(", "\n", "self", ".", "cal_prev_nodiffusion", "(", "z", ",", "step_size", ",", "cond_b", ",", "diff_b", ")", "\n", "+", "torch", ".", "sqrt", "(", "step_size", ")", "*", "diff_b", "*", "backward_noise", "\n", ")", "\n", "forward_noise", "=", "self", ".", "cal_forwardnoise", "(", "x", ",", "z", ",", "step_size", ",", "cond_f", ",", "diff_f", ")", "\n", "delta_s", "=", "-", "0.5", "*", "(", "\n", "batch_noise_square", "(", "forward_noise", ")", "-", "batch_noise_square", "(", "backward_noise", ")", "\n", ")", "\n", "return", "x", ",", "delta_s", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample": [[64, 68], ["base_model.BaseModel._distribution.sample().view", "base_model.BaseModel.backward", "base_model.BaseModel._distribution.sample"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.sample"], ["", "def", "sample", "(", "self", ",", "num_samples", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "        ", "z", "=", "self", ".", "_distribution", ".", "sample", "(", "num_samples", ")", ".", "view", "(", "-", "1", ",", "*", "self", ".", "data_shape", ")", "\n", "x", ",", "_", "=", "self", ".", "backward", "(", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward": [[69, 84], ["x.new_zeros", "enumerate", "base_model.BaseModel.forward_step"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward_step"], ["", "def", "forward", "(", "self", ",", "x", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "logabsdet", "=", "x", ".", "new_zeros", "(", "batch_size", ")", "\n", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "delta_t", ")", ":", "\n", "            ", "x", ",", "new_det", "=", "self", ".", "forward_step", "(", "\n", "x", ",", "\n", "cur_delta_t", ",", "\n", "condition", "[", "i_th", "]", ",", "\n", "condition", "[", "i_th", "+", "1", "]", ",", "\n", "diffusion", "[", "i_th", "]", ",", "\n", "diffusion", "[", "i_th", "+", "1", "]", ",", "\n", ")", "\n", "logabsdet", "+=", "new_det", "\n", "", "return", "x", ",", "logabsdet", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward": [[85, 99], ["z.new_zeros", "enumerate", "torch.flip", "base_model.BaseModel.backward_step"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward_step"], ["", "def", "backward", "(", "self", ",", "z", ",", "timestamps", ",", "diffusion", ",", "condition", ")", ":", "\n", "        ", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "logabsdet", "=", "z", ".", "new_zeros", "(", "z", ".", "shape", "[", "0", "]", ")", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "            ", "z", ",", "new_det", "=", "self", ".", "backward_step", "(", "\n", "z", ",", "\n", "cur_delta_t", ",", "\n", "condition", "[", "-", "i_th", "-", "2", "]", ",", "\n", "condition", "[", "-", "i_th", "-", "1", "]", ",", "\n", "diffusion", "[", "-", "i_th", "-", "2", "]", ",", "\n", "diffusion", "[", "-", "i_th", "-", "1", "]", ",", "\n", ")", "\n", "logabsdet", "+=", "new_det", "\n", "", "return", "z", ",", "logabsdet", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward_list": [[100, 113], ["enumerate", "base_model.BaseModel.forward_step", "rtn.append"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.forward_step"], ["", "def", "forward_list", "(", "self", ",", "x", ")", ":", "\n", "        ", "rtn", "=", "[", "x", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "self", ".", "delta_t", ")", ":", "\n", "            ", "x", ",", "_", "=", "self", ".", "forward_step", "(", "\n", "x", ",", "\n", "cur_delta_t", ",", "\n", "self", ".", "condition", "[", "i_th", "]", ",", "\n", "self", ".", "condition", "[", "i_th", "+", "1", "]", ",", "\n", "self", ".", "diffusion", "[", "i_th", "]", ",", "\n", "self", ".", "diffusion", "[", "i_th", "+", "1", "]", ",", "\n", ")", "\n", "rtn", ".", "append", "(", "x", ")", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward_list": [[114, 127], ["enumerate", "torch.flip", "base_model.BaseModel.backward_step", "rtn.append"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.BaseModel.backward_step"], ["", "def", "backward_list", "(", "self", ",", "z", ")", ":", "\n", "        ", "rtn", "=", "[", "z", "]", "\n", "for", "i_th", ",", "cur_delta_t", "in", "enumerate", "(", "torch", ".", "flip", "(", "self", ".", "delta_t", ",", "(", "0", ",", ")", ")", ")", ":", "\n", "            ", "z", ",", "_", "=", "self", ".", "backward_step", "(", "\n", "z", ",", "\n", "cur_delta_t", ",", "\n", "self", ".", "condition", "[", "-", "i_th", "-", "2", "]", ",", "\n", "self", ".", "condition", "[", "-", "i_th", "-", "1", "]", ",", "\n", "self", ".", "diffusion", "[", "-", "i_th", "-", "2", "]", ",", "\n", "self", ".", "diffusion", "[", "-", "i_th", "-", "1", "]", ",", "\n", ")", "\n", "rtn", ".", "append", "(", "z", ")", "\n", "", "return", "rtn", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.base_model.batch_noise_square": [[6, 8], ["torch.sum", "noise.flatten"], "function", ["None"], ["def", "batch_noise_square", "(", "noise", ")", ":", "\n", "    ", "return", "torch", ".", "sum", "(", "noise", ".", "flatten", "(", "start_dim", "=", "1", ")", "**", "2", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__": [[10, 31], ["torch.Module.__init__", "fouriermlp.FourierMLP.register_buffer", "torch.Parameter", "torch.Parameter", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "torch.Linear", "torch.Linear", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "numpy.prod", "int", "torch.Sequential", "torch.Sequential", "numpy.prod", "torch.Linear", "torch.Linear", "torch.GELU", "torch.GELU", "range"], "methods", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_shape", ",", "num_layers", "=", "2", ",", "channels", "=", "128", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_shape", "=", "[", "data_shape", "]", "\n", "\n", "self", ".", "register_buffer", "(", "\n", "\"timestep_coeff\"", ",", "torch", ".", "linspace", "(", "start", "=", "0.1", ",", "end", "=", "100", ",", "steps", "=", "channels", ")", "[", "None", "]", "\n", ")", "\n", "self", ".", "timestep_phase", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "channels", ")", "[", "None", "]", ")", "\n", "self", ".", "input_embed", "=", "nn", ".", "Linear", "(", "int", "(", "np", ".", "prod", "(", "data_shape", ")", ")", ",", "channels", ")", "\n", "self", ".", "timestep_embed", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", "*", "channels", ",", "channels", ")", ",", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "channels", ",", "channels", ")", ",", "\n", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "GELU", "(", ")", ",", "\n", "*", "[", "\n", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "channels", ",", "channels", ")", ",", "nn", ".", "GELU", "(", ")", ")", "\n", "for", "_", "in", "range", "(", "num_layers", ")", "\n", "]", ",", "\n", "nn", ".", "Linear", "(", "channels", ",", "int", "(", "np", ".", "prod", "(", "data_shape", ")", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.networks.fouriermlp.FourierMLP.forward": [[33, 46], ["torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "fouriermlp.FourierMLP.timestep_embed", "fouriermlp.FourierMLP.input_embed", "fouriermlp.FourierMLP.layers", "fouriermlp.FourierMLP.view", "einops.rearrange", "inputs.view", "cond.float", "cond.float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "cond", ")", ":", "\n", "        ", "sin_embed_cond", "=", "torch", ".", "sin", "(", "\n", "(", "self", ".", "timestep_coeff", "*", "cond", ".", "float", "(", ")", ")", "+", "self", ".", "timestep_phase", "\n", ")", "\n", "cos_embed_cond", "=", "torch", ".", "cos", "(", "\n", "(", "self", ".", "timestep_coeff", "*", "cond", ".", "float", "(", ")", ")", "+", "self", ".", "timestep_phase", "\n", ")", "\n", "embed_cond", "=", "self", ".", "timestep_embed", "(", "\n", "rearrange", "(", "[", "sin_embed_cond", ",", "cos_embed_cond", "]", ",", "\"d b w -> b (d w)\"", ")", "\n", ")", "\n", "embed_ins", "=", "self", ".", "input_embed", "(", "inputs", ".", "view", "(", "inputs", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "out", "=", "self", ".", "layers", "(", "embed_ins", "+", "embed_cond", ")", "\n", "return", "out", ".", "view", "(", "inputs", ".", "shape", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.draw_line": [[7, 16], ["matplotlib.subplots", "axs.plot", "fig.suptitle", "fig.savefig"], "function", ["None"], ["@", "wandb_plt", "\n", "def", "draw_line", "(", "data", ",", "title", ",", "caption", "=", "None", ")", ":", "\n", "    ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "1", ")", "\n", "axs", ".", "plot", "(", "data", ")", "\n", "fig", ".", "suptitle", "(", "title", ")", "\n", "fig", ".", "savefig", "(", "f\"{title}.png\"", ")", "\n", "if", "caption", "is", "None", ":", "\n", "        ", "caption", "=", "title", "\n", "", "return", "fig", ",", "title", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.check_dflow_coef": [[18, 28], ["hasattr", "hasattr", "lines.draw_line", "jamtorch.utils.as_numpy", "getattr"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.draw_line"], ["", "def", "check_dflow_coef", "(", "model", ",", "prefix_caption", "=", "None", ")", ":", "\n", "    ", "if", "hasattr", "(", "model", ",", "\"module\"", ")", ":", "\n", "        ", "model", "=", "model", ".", "module", "\n", "", "for", "name", "in", "[", "\"timestamps\"", ",", "\"diffusion\"", ",", "\"condition\"", ",", "\"delta_t\"", "]", ":", "\n", "        ", "if", "hasattr", "(", "model", ",", "name", ")", ":", "\n", "            ", "if", "prefix_caption", "is", "None", ":", "\n", "                ", "caption", "=", "name", "\n", "", "else", ":", "\n", "                ", "caption", "=", "f\"{name}_{prefix_caption}\"", "\n", "", "draw_line", "(", "as_numpy", "(", "getattr", "(", "model", ",", "name", ")", ")", ",", "name", ",", "caption", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.plt_scalars": [[30, 47], ["len", "isinstance", "matplotlib.subplots", "enumerate", "jamtorch.utils.as_numpy", "axs[].plot", "axs[].set_title"], "function", ["None"], ["", "", "", "def", "plt_scalars", "(", "scalars", ",", "names", ")", ":", "\n", "    ", "\"\"\"viz scalars and names plot figure\n\n    :param scalars: [description]\n    :type scalars: List[Tensor,ndarray]\n    :param names: names of scalars\n    :type names: List[string]\n    :return: plt,fig\n    \"\"\"", "\n", "length", "=", "len", "(", "names", ")", "\n", "if", "isinstance", "(", "scalars", "[", "0", "]", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "scalars", "=", "as_numpy", "(", "scalars", ")", "\n", "", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "length", ",", "figsize", "=", "(", "length", "*", "7", ",", "1", "*", "7", ")", ")", "\n", "for", "i_th", ",", "cur_data", "in", "enumerate", "(", "scalars", ")", ":", "\n", "        ", "axs", "[", "i_th", "]", ".", "plot", "(", "cur_data", ")", "\n", "axs", "[", "i_th", "]", ".", "set_title", "(", "names", "[", "i_th", "]", ")", "\n", "", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.plt_model_scalars": [[49, 58], ["isinstance", "lines.plt_scalars", "model[].cpu().numpy", "model[].cpu().numpy", "model[].cpu().numpy", "model[].cpu", "model[].cpu", "model[].cpu"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.lines.plt_scalars"], ["", "def", "plt_model_scalars", "(", "model", ")", ":", "\n", "    ", "if", "isinstance", "(", "model", ",", "dict", ")", ":", "\n", "        ", "timestamps", "=", "model", "[", "\"timestamps\"", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "diffusion", "=", "model", "[", "\"diffusion\"", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "condition", "=", "model", "[", "\"condition\"", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "delta_t", "=", "timestamps", "[", "1", ":", "]", "-", "timestamps", "[", ":", "-", "1", "]", "\n", "scalars", "=", "[", "timestamps", ",", "diffusion", ",", "condition", ",", "delta_t", "]", "\n", "labels", "=", "[", "\"timestamps\"", ",", "\"diffusion\"", ",", "\"condition\"", ",", "\"delta_t\"", "]", "\n", "return", "plt_scalars", "(", "scalars", ",", "labels", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd": [[18, 29], ["torchvision.utils.make_grid", "torchvision.utils.make_grid.mul().add_().clamp_().permute().to().numpy", "torchvision.utils.make_grid.mul().add_().clamp_().permute().to", "torchvision.utils.make_grid.mul().add_().clamp_().permute", "torchvision.utils.make_grid.mul().add_().clamp_", "torchvision.utils.make_grid.mul().add_", "torchvision.utils.make_grid.mul"], "function", ["None"], ["def", "tensor2imgnd", "(", "tensor", ",", "n_rows", ",", "n_cols", ")", ":", "# pylint: disable=unused-argument", "\n", "    ", "grid", "=", "make_grid", "(", "tensor", ",", "n_rows", ")", "\n", "ndarr", "=", "(", "\n", "grid", ".", "mul", "(", "255", ")", "\n", ".", "add_", "(", "0.5", ")", "\n", ".", "clamp_", "(", "0", ",", "255", ")", "\n", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", ".", "to", "(", "\"cpu\"", ",", "torch", ".", "uint8", ")", "\n", ".", "numpy", "(", ")", "\n", ")", "\n", "return", "ndarr", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.kv_img2gif": [[31, 55], ["min", "len", "range", "imageio.mimsave", "torch.stack", "matplotlib.subplots", "range", "fig.suptitle", "save_imgs.append", "matplotlib.close", "img.tensor2imgnd", "axs[].imshow", "axs[].axes.xaxis.set_visible", "axs[].axes.yaxis.set_visible", "numpy.asarray", "jammy.image.plt2nd"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd"], ["", "def", "kv_img2gif", "(", "\n", "kv_tensor_imgs", ",", "fname", ",", "img_row", ",", "img_col", ",", "keys", "\n", ")", ":", "# pylint: disable=too-many-locals", "\n", "    ", "save_imgs", "=", "[", "]", "\n", "input_imgs", "=", "{", "key", ":", "torch", ".", "stack", "(", "kv_tensor_imgs", "[", "key", "]", ")", "for", "key", "in", "keys", "}", "\n", "length", "=", "min", "(", "[", "input_imgs", "[", "key", "]", ".", "shape", "[", "0", "]", "for", "key", "in", "keys", "]", ")", "\n", "num_keys", "=", "len", "(", "keys", ")", "\n", "dpi", "=", "128", "\n", "img_size", "=", "400", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "\n", "1", ",", "num_keys", ",", "figsize", "=", "(", "num_keys", "*", "img_size", "/", "dpi", ",", "img_size", "/", "dpi", ")", ",", "dpi", "=", "dpi", "\n", ")", "\n", "for", "j", "in", "range", "(", "num_keys", ")", ":", "\n", "            ", "cur_img", "=", "input_imgs", "[", "keys", "[", "j", "]", "]", "[", "i", "]", "# j-th key, i-th image", "\n", "img2show", "=", "tensor2imgnd", "(", "cur_img", ",", "img_row", ",", "img_col", ")", "\n", "axs", "[", "j", "]", ".", "imshow", "(", "img2show", ")", "\n", "axs", "[", "j", "]", ".", "axes", ".", "xaxis", ".", "set_visible", "(", "False", ")", "\n", "axs", "[", "j", "]", ".", "axes", ".", "yaxis", ".", "set_visible", "(", "False", ")", "\n", "\n", "", "fig", ".", "suptitle", "(", "f\"t={i:03d} {'  '.join(keys)}\"", ")", "\n", "save_imgs", ".", "append", "(", "np", ".", "asarray", "(", "plt2nd", "(", "fig", ")", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "imageio", ".", "mimsave", "(", "f\"{fname}.gif\"", ",", "save_imgs", "+", "(", "[", "save_imgs", "[", "-", "1", "]", "]", "*", "5", ")", ",", "fps", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.viz_img_process": [[57, 60], ["jammy.stmap", "img.kv_img2gif", "list"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.kv_img2gif"], ["", "def", "viz_img_process", "(", "procss_kv", ",", "gif_file", ",", "num_grid", ",", "keys", ",", "reverse_transform_fn", ")", ":", "\n", "    ", "imgs", "=", "stmap", "(", "reverse_transform_fn", ",", "procss_kv", ")", "\n", "kv_img2gif", "(", "imgs", ",", "gif_file", ",", "num_grid", ",", "num_grid", ",", "list", "(", "keys", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.wandb_write_ndimg": [[62, 68], ["jammy.image.imwrite", "wandb.log", "wandb.Image", "jammy.image.nd2pil"], "function", ["None"], ["", "def", "wandb_write_ndimg", "(", "img", ",", "epoch_cnt", ",", "naming", ")", ":", "\n", "    ", "if", "Wandb", ".", "IS_ACTIVE", ":", "\n", "        ", "wandb", ".", "log", "(", "\n", "{", "naming", ":", "wandb", ".", "Image", "(", "nd2pil", "(", "img", ")", ",", "caption", "=", "f\"{naming}_{epoch_cnt:05}.png\"", ")", "}", "\n", ")", "\n", "", "imwrite", "(", "f\"{naming}_{epoch_cnt:03}.png\"", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.save_seperate_imgs": [[70, 75], ["len", "range", "torchvision.utils.save_image", "os.join"], "function", ["None"], ["", "def", "save_seperate_imgs", "(", "sample", ",", "sample_path", ",", "cnt", ")", ":", "\n", "    ", "batch_size", "=", "len", "(", "sample", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "save_image", "(", "sample", "[", "i", "]", ",", "osp", ".", "join", "(", "sample_path", ",", "f\"{cnt:07d}.png\"", ")", ")", "\n", "cnt", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.check_unnormal_imgs": [[77, 81], ["datasets.inverse_data_transform", "img.tensor2imgnd", "img.wandb_write_ndimg"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.img_transform.inverse_data_transform", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.tensor2imgnd", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.img.wandb_write_ndimg"], ["", "", "def", "check_unnormal_imgs", "(", "cfg", ",", "x", ",", "num_grid", ",", "num_iter", ",", "fname", ")", ":", "\n", "    ", "trans_x", "=", "inverse_data_transform", "(", "cfg", ".", "data", ",", "x", ")", "\n", "noise_nd", "=", "tensor2imgnd", "(", "trans_x", ",", "num_grid", ",", "num_grid", ")", "\n", "wandb_write_ndimg", "(", "noise_nd", ",", "num_iter", ",", "fname", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.fix_ax_lim": [[10, 13], ["ax.set_xlim", "ax.set_ylim"], "function", ["None"], ["def", "fix_ax_lim", "(", "ax", ")", ":", "\n", "    ", "ax", ".", "set_xlim", "(", "ps_dataset", ".", "DIM_LINSPACE", "[", "0", "]", ",", "ps_dataset", ".", "DIM_LINSPACE", "[", "-", "1", "]", ")", "\n", "ax", ".", "set_ylim", "(", "ps_dataset", ".", "DIM_LINSPACE", "[", "0", "]", ",", "ps_dataset", ".", "DIM_LINSPACE", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.viz_sample": [[15, 40], ["datasets.restore", "matplotlib.subplots", "ax[].set_title", "ax[].hist2d", "ax[].set_facecolor", "ax[].plot", "fig.suptitle", "fig.savefig", "matplotlib.axis", "matplotlib.cm.jet", "ps.fix_ax_lim", "jammy.io.get_name"], "function", ["home.repos.pwc.inspect_result.qsh-zh_DiffFlow.datasets.points_dataset.restore", "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.fix_ax_lim"], ["", "@", "wandb_plt", "\n", "def", "viz_sample", "(", "sample", ",", "title_name", ",", "fig_name", ",", "sample_num", "=", "50000", ",", "fix_lim", "=", "True", ")", ":", "\n", "    ", "sample", "=", "ps_dataset", ".", "restore", "(", "sample", ")", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "1", ",", "2", ",", "figsize", "=", "(", "14", ",", "7", ")", ")", "\n", "ax", "[", "0", "]", ".", "set_title", "(", "title_name", ")", "\n", "ax", "[", "0", "]", ".", "hist2d", "(", "\n", "sample", "[", ":", "sample_num", ",", "0", "]", ",", "\n", "sample", "[", ":", "sample_num", ",", "1", "]", ",", "\n", "bins", "=", "ps_dataset", ".", "DIM_LINSPACE", ",", "\n", "cmap", "=", "plt", ".", "cm", ".", "jet", ",", "\n", ")", "\n", "ax", "[", "0", "]", ".", "set_facecolor", "(", "plt", ".", "cm", ".", "jet", "(", "0.0", ")", ")", "\n", "ax", "[", "1", "]", ".", "plot", "(", "\n", "sample", "[", ":", "sample_num", ",", "0", "]", ",", "\n", "sample", "[", ":", "sample_num", ",", "1", "]", ",", "\n", "linewidth", "=", "0", ",", "\n", "marker", "=", "\".\"", ",", "\n", "markersize", "=", "1", ",", "\n", ")", "\n", "if", "fix_lim", ":", "\n", "        ", "fix_ax_lim", "(", "ax", "[", "1", "]", ")", "\n", "", "fig", ".", "suptitle", "(", "title_name", ")", "\n", "fig", ".", "savefig", "(", "fig_name", ")", "\n", "plt", ".", "axis", "(", "\"off\"", ")", "\n", "return", "fig", ",", "get_name", "(", "fig_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qsh-zh_DiffFlow.viz.ps.seqSample2img": [[91, 105], ["len", "numpy.linspace", "matplotlib.style.context", "matplotlib.subplots", "enumerate", "list_x[].cpu().numpy", "axs[].plot", "axs[].set_xlim", "axs[].set_ylim", "axs[].set_title", "list_x[].cpu"], "function", ["None"], ["", "def", "seqSample2img", "(", "list_x", ",", "n", ")", ":", "\n", "    ", "length", "=", "len", "(", "list_x", ")", "\n", "idxes", "=", "np", ".", "linspace", "(", "0", ",", "length", "-", "1", ",", "n", ",", "dtype", "=", "int", ")", "\n", "with", "plt", ".", "style", ".", "context", "(", "\"img\"", ")", ":", "\n", "        ", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "1", ",", "n", ",", "figsize", "=", "(", "3", "*", "n", ",", "3", ")", ")", "\n", "for", "i_th", ",", "idx", "in", "enumerate", "(", "idxes", ")", ":", "\n", "            ", "data", "=", "list_x", "[", "idx", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "axs", "[", "i_th", "]", ".", "plot", "(", "\n", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", ",", "linewidth", "=", "0", ",", "marker", "=", "\".\"", ",", "markersize", "=", "1", ",", "alpha", "=", "0.5", "\n", ")", "\n", "axs", "[", "i_th", "]", ".", "set_xlim", "(", "-", "2", ",", "2", ")", "\n", "axs", "[", "i_th", "]", ".", "set_ylim", "(", "-", "2", ",", "2", ")", "\n", "axs", "[", "i_th", "]", ".", "set_title", "(", "idx", ")", "\n", "", "", "return", "fig", "\n", "", ""]]}