{"home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.LSP_Data.__init__": [[80, 87], ["lsp_lspet_data.read_data_file", "lsp_lspet_data.read_mat_file"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.read_data_file", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.read_mat_file"], ["def", "__init__", "(", "self", ",", "mode", ",", "root_dir", ",", "stride", ",", "transformer", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "img_list", "=", "read_data_file", "(", "root_dir", ")", "\n", "self", ".", "kpt_list", ",", "self", ".", "center_list", ",", "self", ".", "scale_list", "=", "read_mat_file", "(", "mode", ",", "root_dir", ",", "self", ".", "img_list", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "transformer", "=", "transformer", "\n", "self", ".", "sigma", "=", "3.0", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.LSP_Data.__getitem__": [[89, 125], ["numpy.array", "lsp_lspet_data.LSP_Data.transformer", "numpy.zeros", "range", "numpy.zeros", "lsp_lspet_data.guassian_kernel", "Mytransforms.normalize", "Mytransforms.to_tensor", "Mytransforms.to_tensor", "cv2.imread", "len", "lsp_lspet_data.guassian_kernel", "numpy.max", "Mytransforms.to_tensor", "len", "int", "int"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.guassian_kernel", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.normalize", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.to_tensor", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.to_tensor", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.guassian_kernel", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.to_tensor"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img_path", "=", "self", ".", "img_list", "[", "index", "]", "\n", "img", "=", "np", ".", "array", "(", "cv2", ".", "imread", "(", "img_path", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "kpt", "=", "self", ".", "kpt_list", "[", "index", "]", "\n", "center", "=", "self", ".", "center_list", "[", "index", "]", "\n", "scale", "=", "self", ".", "scale_list", "[", "index", "]", "\n", "\n", "# expand dataset", "\n", "img", ",", "kpt", ",", "center", "=", "self", ".", "transformer", "(", "img", ",", "kpt", ",", "center", ",", "scale", ")", "\n", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "\n", "heatmap", "=", "np", ".", "zeros", "(", "(", "height", "/", "self", ".", "stride", ",", "width", "/", "self", ".", "stride", ",", "len", "(", "kpt", ")", "+", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "kpt", ")", ")", ":", "\n", "# resize from 368 to 46", "\n", "            ", "x", "=", "int", "(", "kpt", "[", "i", "]", "[", "0", "]", ")", "*", "1.0", "/", "self", ".", "stride", "\n", "y", "=", "int", "(", "kpt", "[", "i", "]", "[", "1", "]", ")", "*", "1.0", "/", "self", ".", "stride", "\n", "heat_map", "=", "guassian_kernel", "(", "size_h", "=", "height", "/", "self", ".", "stride", ",", "size_w", "=", "width", "/", "self", ".", "stride", ",", "center_x", "=", "x", ",", "center_y", "=", "y", ",", "sigma", "=", "self", ".", "sigma", ")", "\n", "heat_map", "[", "heat_map", ">", "1", "]", "=", "1", "\n", "heat_map", "[", "heat_map", "<", "0.0099", "]", "=", "0", "\n", "heatmap", "[", ":", ",", ":", ",", "i", "+", "1", "]", "=", "heat_map", "\n", "\n", "", "heatmap", "[", ":", ",", ":", ",", "0", "]", "=", "1.0", "-", "np", ".", "max", "(", "heatmap", "[", ":", ",", ":", ",", "1", ":", "]", ",", "axis", "=", "2", ")", "# for background", "\n", "\n", "centermap", "=", "np", ".", "zeros", "(", "(", "height", ",", "width", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_map", "=", "guassian_kernel", "(", "size_h", "=", "height", ",", "size_w", "=", "width", ",", "center_x", "=", "center", "[", "0", "]", ",", "center_y", "=", "center", "[", "1", "]", ",", "sigma", "=", "3", ")", "\n", "center_map", "[", "center_map", ">", "1", "]", "=", "1", "\n", "center_map", "[", "center_map", "<", "0.0099", "]", "=", "0", "\n", "centermap", "[", ":", ",", ":", ",", "0", "]", "=", "center_map", "\n", "\n", "img", "=", "Mytransforms", ".", "normalize", "(", "Mytransforms", ".", "to_tensor", "(", "img", ")", ",", "[", "128.0", ",", "128.0", ",", "128.0", "]", ",", "\n", "[", "256.0", ",", "256.0", ",", "256.0", "]", ")", "\n", "heatmap", "=", "Mytransforms", ".", "to_tensor", "(", "heatmap", ")", "\n", "centermap", "=", "Mytransforms", ".", "to_tensor", "(", "centermap", ")", "\n", "return", "img", ",", "heatmap", ",", "centermap", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.LSP_Data.__len__": [[126, 128], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.read_data_file": [[13, 21], ["numpy.array", "numpy.array", "sorted_image_arr.tolist", "glob.glob", "os.path.join", "float", "numpy.argsort", "s.rsplit"], "function", ["None"], ["def", "read_data_file", "(", "root_dir", ")", ":", "\n", "    ", "\"\"\"get train or val images\n        return: image list: train or val images list\n    \"\"\"", "\n", "image_arr", "=", "np", ".", "array", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'images/*.jpg'", ")", ")", ")", "\n", "image_nums_arr", "=", "np", ".", "array", "(", "[", "float", "(", "s", ".", "rsplit", "(", "'/'", ")", "[", "-", "1", "]", "[", "2", ":", "-", "4", "]", ")", "for", "s", "in", "image_arr", "]", ")", "\n", "sorted_image_arr", "=", "image_arr", "[", "np", ".", "argsort", "(", "image_nums_arr", ")", "]", "\n", "return", "sorted_image_arr", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.read_mat_file": [[22, 61], ["range", "scipy.io.loadmat", "scipy.io.loadmat", "mat_arr.transpose", "mat_arr.transpose().tolist", "numpy.logical_not", "mat_arr.transpose", "mat_arr.transpose().tolist", "PIL.Image.open", "centers.append", "scales.append", "os.path.join", "mat_arr.transpose", "mat_arr.transpose", "[].max", "[].min", "[].max", "[].min", "[].max", "[].min"], "function", ["None"], ["", "def", "read_mat_file", "(", "mode", ",", "root_dir", ",", "img_list", ")", ":", "\n", "    ", "\"\"\"\n        get the groundtruth\n\n        mode (str): 'lsp' or 'lspet'\n        return: three list: key_points list , centers list and scales list\n\n        Notice:\n            lsp_dataset differ from lspet dataset\n    \"\"\"", "\n", "mat_arr", "=", "scipy", ".", "io", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "'joints.mat'", ")", ")", "[", "'joints'", "]", "\n", "# lspnet (14,3,10000)", "\n", "if", "mode", "==", "'lspet'", ":", "\n", "        ", "lms", "=", "mat_arr", ".", "transpose", "(", "[", "2", ",", "1", ",", "0", "]", ")", "\n", "kpts", "=", "mat_arr", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", ".", "tolist", "(", ")", "\n", "# lsp (3,14,2000)", "\n", "", "if", "mode", "==", "'lsp'", ":", "\n", "        ", "mat_arr", "[", "2", "]", "=", "np", ".", "logical_not", "(", "mat_arr", "[", "2", "]", ")", "\n", "lms", "=", "mat_arr", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "kpts", "=", "mat_arr", ".", "transpose", "(", "[", "2", ",", "1", ",", "0", "]", ")", ".", "tolist", "(", ")", "\n", "\n", "", "centers", "=", "[", "]", "\n", "scales", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "lms", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "im", "=", "Image", ".", "open", "(", "img_list", "[", "idx", "]", ")", "\n", "w", "=", "im", ".", "size", "[", "0", "]", "\n", "h", "=", "im", ".", "size", "[", "1", "]", "\n", "# lsp and lspet dataset doesn't exist groundtruth of center points", "\n", "center_x", "=", "(", "lms", "[", "idx", "]", "[", "0", "]", "[", "lms", "[", "idx", "]", "[", "0", "]", "<", "w", "]", ".", "max", "(", ")", "+", "\n", "lms", "[", "idx", "]", "[", "0", "]", "[", "lms", "[", "idx", "]", "[", "0", "]", ">", "0", "]", ".", "min", "(", ")", ")", "/", "2", "\n", "center_y", "=", "(", "lms", "[", "idx", "]", "[", "1", "]", "[", "lms", "[", "idx", "]", "[", "1", "]", "<", "h", "]", ".", "max", "(", ")", "+", "\n", "lms", "[", "idx", "]", "[", "1", "]", "[", "lms", "[", "idx", "]", "[", "1", "]", ">", "0", "]", ".", "min", "(", ")", ")", "/", "2", "\n", "centers", ".", "append", "(", "[", "center_x", ",", "center_y", "]", ")", "\n", "\n", "scale", "=", "(", "lms", "[", "idx", "]", "[", "1", "]", "[", "lms", "[", "idx", "]", "[", "1", "]", "<", "h", "]", ".", "max", "(", ")", "-", "\n", "lms", "[", "idx", "]", "[", "1", "]", "[", "lms", "[", "idx", "]", "[", "1", "]", ">", "0", "]", ".", "min", "(", ")", "+", "4", ")", "/", "368.0", "\n", "scales", ".", "append", "(", "scale", ")", "\n", "\n", "", "return", "kpts", ",", "centers", ",", "scales", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.lsp_lspet_data.guassian_kernel": [[63, 67], ["numpy.exp"], "function", ["None"], ["", "def", "guassian_kernel", "(", "size_w", ",", "size_h", ",", "center_x", ",", "center_y", ",", "sigma", ")", ":", "\n", "    ", "gridy", ",", "gridx", "=", "np", ".", "mgrid", "[", "0", ":", "size_h", ",", "0", ":", "size_w", "]", "\n", "D2", "=", "(", "gridx", "-", "center_x", ")", "**", "2", "+", "(", "gridy", "-", "center_y", ")", "**", "2", "\n", "return", "np", ".", "exp", "(", "-", "D2", "/", "2.0", "/", "sigma", "/", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomResized.__init__": [[94, 97], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scale_min", "=", "0.3", ",", "scale_max", "=", "1.1", ")", ":", "\n", "        ", "self", ".", "scale_min", "=", "scale_min", "\n", "self", ".", "scale_max", "=", "scale_max", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomResized.get_params": [[98, 107], ["random.uniform"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "img", ",", "scale_min", ",", "scale_max", ",", "scale", ")", ":", "\n", "\n", "        ", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "\n", "ratio", "=", "random", ".", "uniform", "(", "scale_min", ",", "scale_max", ")", "\n", "ratio", "=", "ratio", "*", "1.0", "/", "scale", "\n", "\n", "return", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomResized.__call__": [[108, 123], ["Mytransforms.RandomResized.get_params", "Mytransforms.resize"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.get_params", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.resize"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ",", "scale", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img     (numpy.ndarray): Image to be resized.\n            kpt     (list):          keypoints to be resized.\n            center: (list):          center points to be resized.\n\n        Returns:\n            numpy.ndarray: Randomly resize image.\n            list:          Randomly resize keypoints.\n            list:          Randomly resize center points.\n        \"\"\"", "\n", "ratio", "=", "self", ".", "get_params", "(", "img", ",", "self", ".", "scale_min", ",", "self", ".", "scale_max", ",", "scale", ")", "\n", "\n", "return", "resize", "(", "img", ",", "kpt", ",", "center", ",", "ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.TestResized.__init__": [[131, 137], ["isinstance", "isinstance", "isinstance", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "assert", "(", "isinstance", "(", "size", ",", "int", ")", "or", "(", "isinstance", "(", "size", ",", "collections", ".", "Iterable", ")", "and", "len", "(", "size", ")", "==", "2", ")", ")", "\n", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "size", ",", "size", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.TestResized.get_params": [[138, 144], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "get_params", "(", "img", ",", "output_size", ")", ":", "\n", "\n", "        ", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "\n", "return", "(", "output_size", "[", "0", "]", "*", "1.0", "/", "width", ",", "output_size", "[", "1", "]", "*", "1.0", "/", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.TestResized.__call__": [[145, 160], ["Mytransforms.TestResized.get_params", "Mytransforms.resize"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.get_params", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.resize"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img     (numpy.ndarray): Image to be resized.\n            kpt     (list):          keypoints to be resized.\n            center: (list):          center points to be resized.\n\n        Returns:\n            numpy.ndarray: Randomly resize image.\n            list:          Randomly resize keypoints.\n            list:          Randomly resize center points.\n        \"\"\"", "\n", "ratio", "=", "self", ".", "get_params", "(", "img", ",", "self", ".", "size", ")", "\n", "\n", "return", "resize", "(", "img", ",", "kpt", ",", "center", ",", "ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomRotate.__init__": [[216, 219], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "max_degree", ")", ":", "\n", "        ", "assert", "isinstance", "(", "max_degree", ",", "numbers", ".", "Number", ")", "\n", "self", ".", "max_degree", "=", "max_degree", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomRotate.get_params": [[220, 231], ["random.uniform"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "max_degree", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``rotate`` for a random rotate.\n           rotate:40\n\n        Returns:\n            number: degree to be passed to ``rotate`` for random rotate.\n        \"\"\"", "\n", "degree", "=", "random", ".", "uniform", "(", "-", "max_degree", ",", "max_degree", ")", "\n", "\n", "return", "degree", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomRotate.__call__": [[232, 247], ["Mytransforms.RandomRotate.get_params", "Mytransforms.rotate"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.get_params", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.rotate"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img    (numpy.ndarray): Image to be rotated.\n            kpt    (list):          Keypoints to be rotated.\n            center (list):          Center points to be rotated.\n\n        Returns:\n            numpy.ndarray: Rotated image.\n            list:          Rotated keypoints.\n            list:          Rotated center points.\n        \"\"\"", "\n", "degree", "=", "self", ".", "get_params", "(", "self", ".", "max_degree", ")", "\n", "\n", "return", "rotate", "(", "img", ",", "kpt", ",", "center", ",", "degree", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.__init__": [[299, 303], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "center_perturb_max", "=", "5", ")", ":", "\n", "        ", "assert", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", "\n", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "# (w, h) (368, 368)", "\n", "self", ".", "center_perturb_max", "=", "center_perturb_max", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.get_params": [[304, 325], ["random.uniform", "random.uniform", "int", "int", "int", "int", "round", "round"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "img", ",", "center", ",", "output_size", ",", "center_perturb_max", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``crop`` for a random crop.\n\n        Args:\n            img                (numpy.ndarray): Image to be cropped.\n            center             (list):          the center of main person.\n            output_size        (tuple):         Expected output size of the crop.\n            center_perturb_max (int):           the max perturb size.\n\n        Returns:\n            tuple: params (i, j, h, w) to be passed to ``crop`` for random crop.\n        \"\"\"", "\n", "ratio_x", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "ratio_y", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "x_offset", "=", "int", "(", "(", "ratio_x", "-", "0.5", ")", "*", "2", "*", "center_perturb_max", ")", "\n", "y_offset", "=", "int", "(", "(", "ratio_y", "-", "0.5", ")", "*", "2", "*", "center_perturb_max", ")", "\n", "center_x", "=", "center", "[", "0", "]", "+", "x_offset", "\n", "center_y", "=", "center", "[", "1", "]", "+", "y_offset", "\n", "\n", "return", "int", "(", "round", "(", "center_x", "-", "output_size", "[", "0", "]", "/", "2", ")", ")", ",", "int", "(", "round", "(", "center_y", "-", "output_size", "[", "1", "]", "/", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.__call__": [[326, 342], ["Mytransforms.RandomCrop.get_params", "Mytransforms.crop"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomCrop.get_params", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.crop"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (numpy.ndarray): Image to be cropped.\n            kpt (list): keypoints to be cropped.\n            center (list): center points to be cropped.\n\n        Returns:\n            numpy.ndarray: Cropped image.\n            list:          Cropped keypoints.\n            list:          Cropped center points.\n        \"\"\"", "\n", "\n", "offset_left", ",", "offset_up", "=", "self", ".", "get_params", "(", "img", ",", "center", ",", "self", ".", "size", ",", "self", ".", "center_perturb_max", ")", "\n", "\n", "return", "crop", "(", "img", ",", "kpt", ",", "center", ",", "offset_left", ",", "offset_up", ",", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomHorizontalFlip.__init__": [[371, 373], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "prob", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.RandomHorizontalFlip.__call__": [[374, 388], ["random.random", "Mytransforms.hflip"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.hflip"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img    (numpy.ndarray): Image to be flipped.\n            kpt    (list):          Keypoints to be flipped.\n            center (list):          Center points to be flipped.\n\n        Returns:\n            numpy.ndarray: Randomly flipped image.\n            list: Randomly flipped points.\n        \"\"\"", "\n", "if", "random", ".", "random", "(", ")", "<", "self", ".", "prob", ":", "\n", "            ", "return", "hflip", "(", "img", ",", "kpt", ",", "center", ")", "\n", "", "return", "img", ",", "kpt", ",", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.Compose.__init__": [[404, 406], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.Compose.__call__": [[407, 416], ["isinstance", "t", "t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "kpt", ",", "center", ",", "scale", "=", "None", ")", ":", "\n", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "if", "isinstance", "(", "t", ",", "RandomResized", ")", ":", "\n", "                ", "img", ",", "kpt", ",", "center", "=", "t", "(", "img", ",", "kpt", ",", "center", ",", "scale", ")", "\n", "", "else", ":", "\n", "                ", "img", ",", "kpt", ",", "center", "=", "t", "(", "img", ",", "kpt", ",", "center", ")", "\n", "\n", "", "", "return", "img", ",", "kpt", ",", "center", "\n", "", "", ""]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.normalize": [[10, 26], ["zip", "t.sub_().div_", "t.sub_"], "function", ["None"], ["def", "normalize", "(", "tensor", ",", "mean", ",", "std", ")", ":", "\n", "    ", "\"\"\"Normalize a ``torch.tensor``\n\n    Args:\n        tensor (torch.tensor): tensor to be normalized.\n        mean: (list): the mean of BGR\n        std: (list): the std of BGR\n    \n    Returns:\n        Tensor: Normalized tensor.\n    \"\"\"", "\n", "# (Mytransforms.to_tensor(img), [128.0, 128.0, 128.0], [256.0, 256.0, 256.0]) mean, std", "\n", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "tensor", ",", "mean", ",", "std", ")", ":", "\n", "        ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.to_tensor": [[27, 44], ["torch.from_numpy", "torch.from_numpy.float", "pic.transpose"], "function", ["None"], ["", "def", "to_tensor", "(", "pic", ")", ":", "\n", "    ", "\"\"\"Convert a ``numpy.ndarray`` to tensor.\n\n    h , w , c -> c, h, w\n\n    See ``ToTensor`` for more details.\n\n    Args:\n        pic (numpy.ndarray): Image to be converted to tensor.\n\n    Returns:\n        Tensor: Converted image.\n    \"\"\"", "\n", "\n", "img", "=", "torch", ".", "from_numpy", "(", "pic", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n", "return", "img", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.resize": [[45, 85], ["isinstance", "TypeError", "cv2.copyMakeBorder", "len", "range", "len", "range", "numpy.ascontiguousarray", "isinstance", "cv2.resize", "cv2.resize", "isinstance", "len"], "function", ["home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.resize", "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.resize"], ["", "def", "resize", "(", "img", ",", "kpt", ",", "center", ",", "ratio", ")", ":", "\n", "    ", "\"\"\"Resize the ``numpy.ndarray`` and points as ratio.\n\n    Args:\n        img    (numpy.ndarray):   Image to be resized.\n        kpt    (list):            Keypoints to be resized.\n        center (list):            Center points to be resized.\n        ratio  (tuple or number): the ratio to resize.\n\n    Returns:\n        numpy.ndarray: Resized image.\n        lists:         Resized keypoints.\n        lists:         Resized center points.\n    \"\"\"", "\n", "\n", "if", "not", "(", "isinstance", "(", "ratio", ",", "numbers", ".", "Number", ")", "or", "(", "isinstance", "(", "ratio", ",", "collections", ".", "Iterable", ")", "and", "len", "(", "ratio", ")", "==", "2", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'Got inappropriate ratio arg: {}'", ".", "format", "(", "ratio", ")", ")", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "if", "w", "<", "64", ":", "\n", "        ", "img", "=", "cv2", ".", "copyMakeBorder", "(", "img", ",", "0", ",", "0", ",", "0", ",", "64", "-", "w", ",", "cv2", ".", "BORDER_CONSTANT", ",", "value", "=", "(", "128", ",", "128", ",", "128", ")", ")", "\n", "w", "=", "64", "\n", "\n", "", "if", "isinstance", "(", "ratio", ",", "numbers", ".", "Number", ")", ":", "\n", "        ", "num", "=", "len", "(", "kpt", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "kpt", "[", "i", "]", "[", "0", "]", "*=", "ratio", "\n", "kpt", "[", "i", "]", "[", "1", "]", "*=", "ratio", "\n", "", "center", "[", "0", "]", "*=", "ratio", "\n", "center", "[", "1", "]", "*=", "ratio", "\n", "return", "cv2", ".", "resize", "(", "img", ",", "(", "0", ",", "0", ")", ",", "fx", "=", "ratio", ",", "fy", "=", "ratio", ")", ",", "kpt", ",", "center", "\n", "", "else", ":", "\n", "        ", "num", "=", "len", "(", "kpt", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "kpt", "[", "i", "]", "[", "0", "]", "*=", "ratio", "[", "0", "]", "\n", "kpt", "[", "i", "]", "[", "1", "]", "*=", "ratio", "[", "1", "]", "\n", "", "center", "[", "0", "]", "*=", "ratio", "[", "0", "]", "\n", "center", "[", "1", "]", "*=", "ratio", "[", "1", "]", "\n", "# return np.ascontiguousarray(cv2.resize(img, (0, 0), fx=ratio[0], fy=ratio[1])), kpt, center", "\n", "", "return", "np", ".", "ascontiguousarray", "(", "cv2", ".", "resize", "(", "img", ",", "(", "368", ",", "368", ")", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", ")", ",", "kpt", ",", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.rotate": [[161, 208], ["cv2.getRotationMatrix2D", "numpy.abs", "numpy.abs", "int", "int", "cv2.warpAffine", "len", "range", "numpy.array", "cv2.getRotationMatrix2D.dot", "numpy.array", "cv2.getRotationMatrix2D.dot", "numpy.ascontiguousarray"], "function", ["None"], ["", "", "def", "rotate", "(", "img", ",", "kpt", ",", "center", ",", "degree", ")", ":", "\n", "    ", "\"\"\"Rotate the ``numpy.ndarray`` and points as degree.\n\n    Args:\n        img    (numpy.ndarray): Image to be rotated.\n        kpt    (list):          Keypoints to be rotated.\n        center (list):          Center points to be rotated.\n        degree (number):        the degree to rotate.\n\n    Returns:\n        numpy.ndarray: Resized image.\n        list:          Resized keypoints.\n        list:          Resized center points.\n    \"\"\"", "\n", "\n", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "\n", "img_center", "=", "(", "width", "/", "2.0", ",", "height", "/", "2.0", ")", "\n", "rotateMat", "=", "cv2", ".", "getRotationMatrix2D", "(", "img_center", ",", "degree", ",", "1.0", ")", "\n", "cos_val", "=", "np", ".", "abs", "(", "rotateMat", "[", "0", ",", "0", "]", ")", "\n", "sin_val", "=", "np", ".", "abs", "(", "rotateMat", "[", "0", ",", "1", "]", ")", "\n", "new_width", "=", "int", "(", "height", "*", "sin_val", "+", "width", "*", "cos_val", ")", "\n", "new_height", "=", "int", "(", "height", "*", "cos_val", "+", "width", "*", "sin_val", ")", "\n", "rotateMat", "[", "0", ",", "2", "]", "+=", "(", "new_width", "/", "2.", ")", "-", "img_center", "[", "0", "]", "\n", "rotateMat", "[", "1", ",", "2", "]", "+=", "(", "new_height", "/", "2.", ")", "-", "img_center", "[", "1", "]", "\n", "\n", "img", "=", "cv2", ".", "warpAffine", "(", "img", ",", "rotateMat", ",", "(", "new_width", ",", "new_height", ")", ",", "borderValue", "=", "(", "128", ",", "128", ",", "128", ")", ")", "\n", "\n", "num", "=", "len", "(", "kpt", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "        ", "if", "kpt", "[", "i", "]", "[", "2", "]", "==", "0", ":", "\n", "            ", "continue", "\n", "", "x", "=", "kpt", "[", "i", "]", "[", "0", "]", "\n", "y", "=", "kpt", "[", "i", "]", "[", "1", "]", "\n", "p", "=", "np", ".", "array", "(", "[", "x", ",", "y", ",", "1", "]", ")", "\n", "p", "=", "rotateMat", ".", "dot", "(", "p", ")", "\n", "kpt", "[", "i", "]", "[", "0", "]", "=", "p", "[", "0", "]", "\n", "kpt", "[", "i", "]", "[", "1", "]", "=", "p", "[", "1", "]", "\n", "\n", "", "x", "=", "center", "[", "0", "]", "\n", "y", "=", "center", "[", "1", "]", "\n", "p", "=", "np", ".", "array", "(", "[", "x", ",", "y", ",", "1", "]", ")", "\n", "p", "=", "rotateMat", ".", "dot", "(", "p", ")", "\n", "center", "[", "0", "]", "=", "p", "[", "0", "]", "\n", "center", "[", "1", "]", "=", "p", "[", "1", "]", "\n", "\n", "return", "np", ".", "ascontiguousarray", "(", "img", ")", ",", "kpt", ",", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.crop": [[248, 290], ["len", "range", "numpy.empty", "np.empty.fill", "img[].copy", "numpy.ascontiguousarray"], "function", ["None"], ["", "", "def", "crop", "(", "img", ",", "kpt", ",", "center", ",", "offset_left", ",", "offset_up", ",", "w", ",", "h", ")", ":", "\n", "\n", "    ", "num", "=", "len", "(", "kpt", ")", "\n", "for", "x", "in", "range", "(", "num", ")", ":", "\n", "        ", "if", "kpt", "[", "x", "]", "[", "2", "]", "==", "0", ":", "\n", "            ", "continue", "\n", "", "kpt", "[", "x", "]", "[", "0", "]", "-=", "offset_left", "\n", "kpt", "[", "x", "]", "[", "1", "]", "-=", "offset_up", "\n", "", "center", "[", "0", "]", "-=", "offset_left", "\n", "center", "[", "1", "]", "-=", "offset_up", "\n", "\n", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "new_img", "=", "np", ".", "empty", "(", "(", "h", ",", "w", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "new_img", ".", "fill", "(", "128", ")", "\n", "\n", "st_x", "=", "0", "\n", "ed_x", "=", "w", "\n", "st_y", "=", "0", "\n", "ed_y", "=", "h", "\n", "or_st_x", "=", "offset_left", "\n", "or_ed_x", "=", "offset_left", "+", "w", "\n", "or_st_y", "=", "offset_up", "\n", "or_ed_y", "=", "offset_up", "+", "h", "\n", "\n", "# the person_center is in left", "\n", "if", "offset_left", "<", "0", ":", "\n", "        ", "st_x", "=", "-", "offset_left", "\n", "or_st_x", "=", "0", "\n", "", "if", "offset_left", "+", "w", ">", "width", ":", "\n", "        ", "ed_x", "=", "width", "-", "offset_left", "\n", "or_ed_x", "=", "width", "\n", "# the person_center is in up", "\n", "", "if", "offset_up", "<", "0", ":", "\n", "        ", "st_y", "=", "-", "offset_up", "\n", "or_st_y", "=", "0", "\n", "", "if", "offset_up", "+", "h", ">", "height", ":", "\n", "        ", "ed_y", "=", "height", "-", "offset_up", "\n", "or_ed_y", "=", "height", "\n", "\n", "", "new_img", "[", "st_y", ":", "ed_y", ",", "st_x", ":", "ed_x", ",", ":", "]", "=", "img", "[", "or_st_y", ":", "or_ed_y", ",", "or_st_x", ":", "or_ed_x", ",", ":", "]", ".", "copy", "(", ")", "\n", "\n", "return", "np", ".", "ascontiguousarray", "(", "new_img", ")", ",", "kpt", ",", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.Mytransforms.hflip": [[343, 363], ["len", "range", "numpy.ascontiguousarray"], "function", ["None"], ["", "", "def", "hflip", "(", "img", ",", "kpt", ",", "center", ")", ":", "\n", "\n", "    ", "height", ",", "width", ",", "_", "=", "img", ".", "shape", "\n", "\n", "img", "=", "img", "[", ":", ",", ":", ":", "-", "1", ",", ":", "]", "\n", "\n", "num", "=", "len", "(", "kpt", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "        ", "if", "kpt", "[", "i", "]", "[", "2", "]", "==", "1", ":", "\n", "            ", "kpt", "[", "i", "]", "[", "0", "]", "=", "width", "-", "1", "-", "kpt", "[", "i", "]", "[", "0", "]", "\n", "", "", "center", "[", "0", "]", "=", "width", "-", "1", "-", "center", "[", "0", "]", "\n", "\n", "swap_pair", "=", "[", "[", "0", ",", "5", "]", ",", "[", "1", ",", "4", "]", ",", "[", "2", ",", "3", "]", ",", "[", "6", ",", "11", "]", ",", "[", "7", ",", "10", "]", ",", "[", "8", ",", "9", "]", "]", "\n", "\n", "for", "x", "in", "swap_pair", ":", "\n", "        ", "temp_point", "=", "kpt", "[", "x", "[", "0", "]", "]", "\n", "kpt", "[", "x", "[", "0", "]", "]", "=", "kpt", "[", "x", "[", "1", "]", "]", "\n", "kpt", "[", "x", "[", "1", "]", "]", "=", "temp_point", "\n", "\n", "", "return", "np", ".", "ascontiguousarray", "(", "img", ")", ",", "kpt", ",", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM.__init__": [[7, 68], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "stages", ")", ":", "\n", "        ", "super", "(", "CPM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "stages", "=", "stages", "\n", "self", ".", "pool_center", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "9", ",", "stride", "=", "8", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv1_stage1", "=", "nn", ".", "Conv2d", "(", "3", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool1_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool2_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool3_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv5_stage1", "=", "nn", ".", "Conv2d", "(", "32", ",", "512", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "conv6_stage1", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv7_stage1", "=", "nn", ".", "Conv2d", "(", "512", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "conv1_stage2", "=", "nn", ".", "Conv2d", "(", "3", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool1_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool2_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool3_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage2", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage3", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage4", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage5", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage6", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage1": [[69, 80], ["cpm_model.CPM.pool1_stage1", "cpm_model.CPM.pool2_stage1", "cpm_model.CPM.pool3_stage1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv7_stage1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv4_stage1", "cpm_model.CPM.conv5_stage1", "cpm_model.CPM.conv6_stage1", "cpm_model.CPM.conv1_stage1", "cpm_model.CPM.conv2_stage1", "cpm_model.CPM.conv3_stage1"], "methods", ["None"], ["", "def", "_stage1", "(", "self", ",", "image", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "pool1_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv1_stage1", "(", "image", ")", ")", ")", "\n", "x", "=", "self", ".", "pool2_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv2_stage1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "pool3_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv3_stage1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_stage1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv5_stage1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv6_stage1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv7_stage1", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._middle": [[81, 88], ["cpm_model.CPM.pool1_stage2", "cpm_model.CPM.pool2_stage2", "cpm_model.CPM.pool3_stage2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv1_stage2", "cpm_model.CPM.conv2_stage2", "cpm_model.CPM.conv3_stage2"], "methods", ["None"], ["", "def", "_middle", "(", "self", ",", "image", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "pool1_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv1_stage2", "(", "image", ")", ")", ")", "\n", "x", "=", "self", ".", "pool2_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv2_stage2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "pool3_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv3_stage2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage2": [[89, 100], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage2", "cpm_model.CPM.conv4_stage2", "cpm_model.CPM.Mconv1_stage2", "cpm_model.CPM.Mconv2_stage2", "cpm_model.CPM.Mconv3_stage2", "cpm_model.CPM.Mconv4_stage2"], "methods", ["None"], ["", "def", "_stage2", "(", "self", ",", "pool3_stage2_map", ",", "conv7_stage1_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_stage2", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "conv7_stage1_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage3": [[101, 112], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage3", "cpm_model.CPM.conv1_stage3", "cpm_model.CPM.Mconv1_stage3", "cpm_model.CPM.Mconv2_stage3", "cpm_model.CPM.Mconv3_stage3", "cpm_model.CPM.Mconv4_stage3"], "methods", ["None"], ["", "def", "_stage3", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage2_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage3", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage2_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage3", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage4": [[113, 124], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage4", "cpm_model.CPM.conv1_stage4", "cpm_model.CPM.Mconv1_stage4", "cpm_model.CPM.Mconv2_stage4", "cpm_model.CPM.Mconv3_stage4", "cpm_model.CPM.Mconv4_stage4"], "methods", ["None"], ["", "def", "_stage4", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage3_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage4", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage3_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage4", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage4", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage5": [[125, 136], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage5", "cpm_model.CPM.conv1_stage5", "cpm_model.CPM.Mconv1_stage5", "cpm_model.CPM.Mconv2_stage5", "cpm_model.CPM.Mconv3_stage5", "cpm_model.CPM.Mconv4_stage5"], "methods", ["None"], ["", "def", "_stage5", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage4_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage5", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage4_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage5", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage5", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM._stage6": [[137, 148], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage6", "cpm_model.CPM.conv1_stage6", "cpm_model.CPM.Mconv1_stage6", "cpm_model.CPM.Mconv2_stage6", "cpm_model.CPM.Mconv3_stage6", "cpm_model.CPM.Mconv4_stage6"], "methods", ["None"], ["", "def", "_stage6", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage5_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage6", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage5_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage6", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage6", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.train_val.cpm_model.CPM.forward": [[151, 183], ["cpm_model.CPM.pool_center", "cpm_model.CPM._stage1", "cpm_model.CPM._middle", "range", "cpm_model.CPM._stage2", "output.append", "cpm_model.CPM._stage3", "output.append", "cpm_model.CPM._stage4", "output.append", "cpm_model.CPM._stage5", "output.append", "cpm_model.CPM._stage6", "output.append"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage1", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._middle", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage2", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage3", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage4", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage5", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage6"], ["", "def", "forward", "(", "self", ",", "image", ",", "center_map", ")", ":", "\n", "\n", "\n", "        ", "pool_center_map", "=", "self", ".", "pool_center", "(", "center_map", ")", "\n", "\n", "conv7_stage1_map", "=", "self", ".", "_stage1", "(", "image", ")", "\n", "\n", "pool3_stage2_map", "=", "self", ".", "_middle", "(", "image", ")", "\n", "output", "=", "[", "conv7_stage1_map", "]", "\n", "assert", "self", ".", "stages", ">=", "1", "\n", "for", "s", "in", "range", "(", "1", ",", "self", ".", "stages", ")", ":", "\n", "            ", "if", "s", "==", "1", ":", "\n", "                ", "Mconv5_stage2_map", "=", "self", ".", "_stage2", "(", "pool3_stage2_map", ",", "conv7_stage1_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage2_map", ")", "\n", "", "elif", "s", "==", "2", ":", "\n", "                ", "Mconv5_stage3_map", "=", "self", ".", "_stage3", "(", "pool3_stage2_map", ",", "Mconv5_stage2_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage3_map", ")", "\n", "", "elif", "s", "==", "3", ":", "\n", "                ", "Mconv5_stage4_map", "=", "self", ".", "_stage4", "(", "pool3_stage2_map", ",", "Mconv5_stage3_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage4_map", ")", "\n", "", "elif", "s", "==", "4", ":", "\n", "                ", "Mconv5_stage5_map", "=", "self", ".", "_stage5", "(", "pool3_stage2_map", ",", "Mconv5_stage4_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage5_map", ")", "\n", "", "elif", "s", "==", "5", ":", "\n", "                ", "Mconv5_stage6_map", "=", "self", ".", "_stage6", "(", "pool3_stage2_map", ",", "Mconv5_stage5_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage6_map", ")", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.GridGenerator": [[4, 36], ["torch.meshgrid", "x_t.view", "y_t.view", "torch.ones_like", "torch.stack", "sampling_grid.to.unsqueeze().repeat", "homography.to.to", "sampling_grid.to.to", "torch.bmm", "torch.div().view", "torch.div().view", "torch.cat().view", "torch.arange", "torch.arange", "sampling_grid.to.unsqueeze", "torch.div", "torch.div", "torch.cat"], "function", ["None"], ["def", "GridGenerator", "(", "width", ",", "height", ",", "homography", ")", ":", "\n", "# num_batch = tf.shape(homography)[0]", "\n", "    ", "num_batch", "=", "homography", ".", "shape", "[", "0", "]", "\n", "x_t", ",", "y_t", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "0", ",", "width", ")", ",", "torch", ".", "arange", "(", "0", ",", "height", ")", ")", "\n", "\n", "# flatten", "\n", "x_t_flat", "=", "x_t", ".", "view", "(", "-", "1", ")", "\n", "y_t_flat", "=", "y_t", ".", "view", "(", "-", "1", ")", "\n", "\n", "\n", "# reshape to [x_t, y_t , 1] - (homogeneous form)", "\n", "ones", "=", "torch", ".", "ones_like", "(", "x_t_flat", ")", "\n", "sampling_grid", "=", "torch", ".", "stack", "(", "[", "x_t_flat", ",", "y_t_flat", ",", "ones", "]", ")", "\n", "\n", "# repeat grid num_batch times", "\n", "sampling_grid", "=", "sampling_grid", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "num_batch", ",", "1", ",", "1", ")", "\n", "\n", "# cast to float32 (required for matmul)", "\n", "homography", "=", "homography", ".", "to", "(", "torch", ".", "float32", ")", "\n", "sampling_grid", "=", "sampling_grid", ".", "to", "(", "torch", ".", "float32", ")", "\n", "\n", "# # transform the sampling grid - batch multiply", "\n", "batch_grids", "=", "torch", ".", "bmm", "(", "homography", ",", "sampling_grid", ")", "\n", "# ones = torch.zeros([num_batch, 2, width*height])", "\n", "out1", "=", "torch", ".", "div", "(", "batch_grids", "[", ":", ",", "0", ",", ":", "]", ",", "batch_grids", "[", ":", ",", "2", ",", ":", "]", ")", ".", "view", "(", "num_batch", ",", "1", ",", "width", "*", "height", ")", "\n", "out2", "=", "torch", ".", "div", "(", "batch_grids", "[", ":", ",", "1", ",", ":", "]", ",", "batch_grids", "[", ":", ",", "2", ",", ":", "]", ")", ".", "view", "(", "num_batch", ",", "1", ",", "width", "*", "height", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "(", "out1", "/", "height", "-", "0.5", ")", "*", "2.", ",", "(", "out2", "/", "height", "-", "0.5", ")", "*", "2.", "]", ",", "1", ")", ".", "view", "(", "num_batch", ",", "2", ",", "height", ",", "width", ")", "\n", "\n", "# # reshape to (num_batch, H, W, 2)", "\n", "# out = tf.reshape(out, [num_batch, 2, height, width])", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Linear_sampler": [[37, 77], ["torch.floor().to", "torch.clamp", "torch.clamp", "geo_utils.Get_pixel_value_1D", "geo_utils.Get_pixel_value_1D", "wa.view.view", "wb.view.view", "torch.floor"], "function", ["home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Get_pixel_value_1D", "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Get_pixel_value_1D"], ["", "def", "Linear_sampler", "(", "array", ",", "x", ")", ":", "# [b, c, h], [b, h]", "\n", "# B = tf.shape(array)[0]", "\n", "# L = tf.shape(array)[1]", "\n", "    ", "B", ",", "C", ",", "L", "=", "array", ".", "shape", "\n", "\n", "# grab 4 nearest corner points for each (x_i, y_i)", "\n", "\n", "x0", "=", "torch", ".", "floor", "(", "x", ")", ".", "to", "(", "torch", ".", "int32", ")", "# [b, H]", "\n", "x1", "=", "x0", "+", "1", "# [b, H]", "\n", "\n", "# clip to range [0, H/W] to not violate img boundaries", "\n", "\n", "\n", "x0", "=", "torch", ".", "clamp", "(", "x0", ",", "min", "=", "0", ",", "max", "=", "L", "-", "1", ")", "\n", "x1", "=", "torch", ".", "clamp", "(", "x1", ",", "min", "=", "0", ",", "max", "=", "L", "-", "1", ")", "\n", "\n", "# get pixel value at corner coords", "\n", "Ia", "=", "Get_pixel_value_1D", "(", "array", ",", "x0", ")", "\n", "Ib", "=", "Get_pixel_value_1D", "(", "array", ",", "x1", ")", "\n", "\n", "\n", "\n", "# calculate deltas", "\n", "wa", "=", "1", "-", "(", "x", "-", "x0", ")", "\n", "wb", "=", "1", "-", "(", "x1", "-", "x", ")", "\n", "\n", "# add dimension for addition", "\n", "\n", "\n", "wa", "=", "wa", ".", "view", "(", "B", ",", "C", ",", "L", ")", "\n", "wb", "=", "wb", ".", "view", "(", "B", ",", "C", ",", "L", ")", "\n", "\n", "\n", "\n", "# compute output", "\n", "\n", "\n", "out", "=", "wa", "*", "Ia", "+", "wb", "*", "Ib", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Get_pixel_value_1D": [[78, 90], ["torch.zeros_like", "torch.arange().view().repeat().view", "array[].view", "torch.arange().view().repeat", "torch.arange().view", "x0.view", "torch.arange"], "function", ["None"], ["", "def", "Get_pixel_value_1D", "(", "array", ",", "x0", ")", ":", "\n", "    ", "B", ",", "C", ",", "L", "=", "array", ".", "shape", "\n", "\n", "I", "=", "torch", ".", "zeros_like", "(", "array", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "B_grid", "=", "torch", ".", "arange", "(", "B", ")", ".", "view", "(", "B", ",", "1", ")", ".", "repeat", "(", "1", ",", "L", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "I", "=", "array", "[", "B_grid", ",", ":", ",", "x0", ".", "view", "(", "-", "1", ")", "]", ".", "view", "(", "B", ",", "C", ",", "L", ")", "\n", "\n", "# array = ", "\n", "\n", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.EpipolarTransferHeatmap_siamese_src": [[91, 118], ["geo_utils.GridGenerator", "torch.grid_sample", "torch.max", "torch.arange", "u.repeat.unsqueeze", "u.repeat.repeat", "a[].unsqueeze().repeat", "b[].unsqueeze().repeat", "geo_utils.Linear_sampler", "a[].unsqueeze", "b[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.GridGenerator", "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Linear_sampler"], ["", "def", "EpipolarTransferHeatmap_siamese_src", "(", "prob", ",", "H1", ",", "a", ",", "b", ",", "ext_size", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "prob", ".", "shape", "\n", "H", "+=", "2", "*", "ext_size", "\n", "W", "+=", "2", "*", "ext_size", "\n", "\n", "grid", "=", "GridGenerator", "(", "H", ",", "W", ",", "H1", ")", "#ranging in [-1,1]", "\n", "warped", "=", "torch", ".", "grid_sample", "(", "prob", ",", "grid", ",", "mode", "=", "'bilinear'", ")", "\n", "# rowmax = tf.reduce_max(warped, axis=2)", "\n", "rowmax", "=", "torch", ".", "max", "(", "warped", ",", "dim", "=", "-", "1", ")", "# [b, c, h]", "\n", "\n", "\n", "\n", "u", "=", "torch", ".", "arange", "(", "H", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "u", "=", "u", ".", "unsqueeze", "(", "0", ")", "\n", "u", "=", "u", ".", "repeat", "(", "B", ",", "1", ")", "\n", "\n", "a", "=", "a", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "H", ")", "\n", "b", "=", "b", "[", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "H", ")", "\n", "\n", "u1", "=", "a", "*", "u", "+", "b", "# [b, h]", "\n", "rowmax", "=", "Linear_sampler", "(", "rowmax", ",", "u1", ")", "\n", "\n", "\n", "\n", "\n", "\n", "return", "rowmax", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.EpipolarTransferHeatmap_siamese_ref": [[119, 138], ["geo_utils.GridGenerator", "torch.grid_sample", "torch.max", "torch.arange", "u.repeat.unsqueeze", "u.repeat.repeat", "geo_utils.Linear_sampler"], "function", ["home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.GridGenerator", "home.repos.pwc.inspect_result.msbrpp_MSBR.utils.geo_utils.Linear_sampler"], ["", "def", "EpipolarTransferHeatmap_siamese_ref", "(", "prob", ",", "H1", ",", "ext_size", ")", ":", "\n", "    ", "B", ",", "C", ",", "H", ",", "W", "=", "prob", ".", "shape", "\n", "H", "+=", "2", "*", "ext_size", "\n", "W", "+=", "2", "*", "ext_size", "\n", "\n", "\n", "grid", "=", "GridGenerator", "(", "H", ",", "W", ",", "H1", ")", "#ranging in [-1,1]", "\n", "warped", "=", "torch", ".", "grid_sample", "(", "prob", ",", "grid", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "rowmax", "=", "torch", ".", "max", "(", "warped", ",", "dim", "=", "-", "1", ")", "# [b, c, h]", "\n", "\n", "\n", "u", "=", "torch", ".", "arange", "(", "H", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "u", "=", "u", ".", "unsqueeze", "(", "0", ")", "\n", "u", "=", "u", ".", "repeat", "(", "B", ",", "1", ")", "\n", "\n", "rowmax", "=", "Linear_sampler", "(", "rowmax", ",", "u", ")", "\n", "\n", "return", "rowmax", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.construct_model": [[11, 24], ["cpm_model.CPM", "OrderedDict", "state_dict.items", "torch.nn.DataParallel().cuda.load_state_dict", "torch.nn.DataParallel().cuda", "torch.load", "torch.nn.DataParallel"], "function", ["None"], ["def", "construct_model", "(", "pre_model_path", ")", ":", "\n", "\n", "    ", "model", "=", "cpm_model", ".", "CPM", "(", "k", "=", "14", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "pre_model_path", ")", "[", "'state_dict'", "]", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "[", "0", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.get_kpts": [[26, 39], ["maps.clone().cpu().data.numpy.clone().cpu().data.numpy", "numpy.unravel_index", "int", "int", "kpts.append", "m.argmax", "maps.clone().cpu().data.numpy.clone().cpu", "maps.clone().cpu().data.numpy.clone"], "function", ["None"], ["", "def", "get_kpts", "(", "maps", ",", "img_h", "=", "368.0", ",", "img_w", "=", "368.0", ")", ":", "\n", "\n", "# maps (1,15,46,46)", "\n", "    ", "maps", "=", "maps", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "map_6", "=", "maps", "[", "0", "]", "\n", "\n", "kpts", "=", "[", "]", "\n", "for", "m", "in", "map_6", "[", "1", ":", "]", ":", "\n", "        ", "h", ",", "w", "=", "np", ".", "unravel_index", "(", "m", ".", "argmax", "(", ")", ",", "m", ".", "shape", ")", "\n", "x", "=", "int", "(", "w", "*", "img_w", "/", "m", ".", "shape", "[", "1", "]", ")", "\n", "y", "=", "int", "(", "h", "*", "img_h", "/", "m", ".", "shape", "[", "0", "]", ")", "\n", "kpts", ".", "append", "(", "[", "x", ",", "y", "]", ")", "\n", "", "return", "kpts", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.draw_paint": [[41, 72], ["cv2.imread", "range", "cv2.imshow", "cv2.waitKey", "cv2.imwrite", "cv2.circle", "len", "cv2.addWeighted.copy", "numpy.mean", "numpy.mean", "math.degrees", "cv2.ellipse2Poly", "cv2.fillConvexPoly", "cv2.addWeighted", "math.atan2", "int", "int", "int", "int"], "function", ["None"], ["", "def", "draw_paint", "(", "img_path", ",", "kpts", ")", ":", "\n", "\n", "    ", "colors", "=", "[", "[", "255", ",", "0", ",", "0", "]", ",", "[", "255", ",", "85", ",", "0", "]", ",", "[", "255", ",", "170", ",", "0", "]", ",", "[", "255", ",", "255", ",", "0", "]", ",", "[", "170", ",", "255", ",", "0", "]", ",", "[", "85", ",", "255", ",", "0", "]", ",", "[", "0", ",", "255", ",", "0", "]", ",", "[", "0", ",", "255", ",", "85", "]", ",", "[", "0", ",", "255", ",", "170", "]", ",", "[", "0", ",", "255", ",", "255", "]", ",", "[", "0", ",", "170", ",", "255", "]", ",", "[", "0", ",", "85", ",", "255", "]", ",", "[", "0", ",", "0", ",", "255", "]", "]", "\n", "limbSeq", "=", "[", "[", "13", ",", "12", "]", ",", "[", "12", ",", "9", "]", ",", "[", "12", ",", "8", "]", ",", "[", "9", ",", "10", "]", ",", "[", "8", ",", "7", "]", ",", "[", "10", ",", "11", "]", ",", "[", "7", ",", "6", "]", ",", "[", "12", ",", "3", "]", ",", "[", "12", ",", "2", "]", ",", "[", "2", ",", "1", "]", ",", "[", "1", ",", "0", "]", ",", "[", "3", ",", "4", "]", ",", "\n", "[", "4", ",", "5", "]", "]", "\n", "\n", "im", "=", "cv2", ".", "imread", "(", "img_path", ")", "\n", "# draw points", "\n", "for", "k", "in", "kpts", ":", "\n", "        ", "x", "=", "k", "[", "0", "]", "\n", "y", "=", "k", "[", "1", "]", "\n", "cv2", ".", "circle", "(", "im", ",", "(", "x", ",", "y", ")", ",", "radius", "=", "1", ",", "thickness", "=", "-", "1", ",", "color", "=", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "# draw lines", "\n", "", "for", "i", "in", "range", "(", "len", "(", "limbSeq", ")", ")", ":", "\n", "        ", "cur_im", "=", "im", ".", "copy", "(", ")", "\n", "limb", "=", "limbSeq", "[", "i", "]", "\n", "[", "Y0", ",", "X0", "]", "=", "kpts", "[", "limb", "[", "0", "]", "]", "\n", "[", "Y1", ",", "X1", "]", "=", "kpts", "[", "limb", "[", "1", "]", "]", "\n", "mX", "=", "np", ".", "mean", "(", "[", "X0", ",", "X1", "]", ")", "\n", "mY", "=", "np", ".", "mean", "(", "[", "Y0", ",", "Y1", "]", ")", "\n", "length", "=", "(", "(", "X0", "-", "X1", ")", "**", "2", "+", "(", "Y0", "-", "Y1", ")", "**", "2", ")", "**", "0.5", "\n", "angle", "=", "math", ".", "degrees", "(", "math", ".", "atan2", "(", "X0", "-", "X1", ",", "Y0", "-", "Y1", ")", ")", "\n", "polygon", "=", "cv2", ".", "ellipse2Poly", "(", "(", "int", "(", "mY", ")", ",", "int", "(", "mX", ")", ")", ",", "(", "int", "(", "length", "/", "2", ")", ",", "4", ")", ",", "int", "(", "angle", ")", ",", "0", ",", "360", ",", "1", ")", "\n", "cv2", ".", "fillConvexPoly", "(", "cur_im", ",", "polygon", ",", "colors", "[", "i", "]", ")", "\n", "im", "=", "cv2", ".", "addWeighted", "(", "im", ",", "0.4", ",", "cur_im", ",", "0.6", ",", "0", ")", "\n", "\n", "", "cv2", ".", "imshow", "(", "'test_example'", ",", "im", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "cv2", ".", "imwrite", "(", "'test_example.png'", ",", "im", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.guassian_kernel": [[73, 77], ["numpy.exp"], "function", ["None"], ["", "def", "guassian_kernel", "(", "size_w", ",", "size_h", ",", "center_x", ",", "center_y", ",", "sigma", ")", ":", "\n", "    ", "gridy", ",", "gridx", "=", "np", ".", "mgrid", "[", "0", ":", "size_h", ",", "0", ":", "size_w", "]", "\n", "D2", "=", "(", "gridx", "-", "center_x", ")", "**", "2", "+", "(", "gridy", "-", "center_y", ")", "**", "2", "\n", "return", "np", ".", "exp", "(", "-", "D2", "/", "2.0", "/", "sigma", "/", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.test_example": [[79, 112], ["numpy.array", "torch.from_numpy", "zip", "numpy.zeros", "cpm_test.guassian_kernel", "torch.from_numpy", "torch.unsqueeze", "torch.unsqueeze", "model.eval", "torch.autograd.Variable", "torch.autograd.Variable", "model", "cpm_test.get_kpts", "cpm_test.draw_paint", "cv2.imread", "torch.unsqueeze.transpose", "t.sub_().div_", "torch.unsqueeze.transpose", "t.sub_"], "function", ["home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.guassian_kernel", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.get_kpts", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_test.draw_paint"], ["", "def", "test_example", "(", "model", ",", "img_path", ",", "center", ")", ":", "\n", "\n", "\n", "    ", "img", "=", "np", ".", "array", "(", "cv2", ".", "imread", "(", "img_path", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# h, w, c -> c, h, w", "\n", "img", "=", "torch", ".", "from_numpy", "(", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "# normalize", "\n", "mean", "=", "[", "128.0", ",", "128.0", ",", "128.0", "]", "\n", "std", "=", "[", "256.0", ",", "256.0", ",", "256.0", "]", "\n", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "img", ",", "mean", ",", "std", ")", ":", "\n", "        ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "\n", "# center-map:368*368*1", "\n", "", "centermap", "=", "np", ".", "zeros", "(", "(", "368", ",", "368", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_map", "=", "guassian_kernel", "(", "size_h", "=", "368", ",", "size_w", "=", "368", ",", "center_x", "=", "center", "[", "0", "]", ",", "center_y", "=", "center", "[", "1", "]", ",", "sigma", "=", "3", ")", "\n", "center_map", "[", "center_map", ">", "1", "]", "=", "1", "\n", "center_map", "[", "center_map", "<", "0.0099", "]", "=", "0", "\n", "centermap", "[", ":", ",", ":", ",", "0", "]", "=", "center_map", "\n", "centermap", "=", "torch", ".", "from_numpy", "(", "centermap", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n", "img", "=", "torch", ".", "unsqueeze", "(", "img", ",", "0", ")", "\n", "centermap", "=", "torch", ".", "unsqueeze", "(", "centermap", ",", "0", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "input_var", "=", "torch", ".", "autograd", ".", "Variable", "(", "img", ")", "\n", "center_var", "=", "torch", ".", "autograd", ".", "Variable", "(", "centermap", ")", "\n", "\n", "# get heatmap", "\n", "heat1", ",", "heat2", ",", "heat3", ",", "heat4", ",", "heat5", ",", "heat6", "=", "model", "(", "input_var", ",", "center_var", ")", "\n", "\n", "kpts", "=", "get_kpts", "(", "heat6", ",", "img_h", "=", "368.0", ",", "img_w", "=", "368.0", ")", "\n", "\n", "draw_paint", "(", "img_path", ",", "kpts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM.__init__": [[7, 67], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "stages", ")", ":", "\n", "        ", "super", "(", "CPM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "stages", "=", "stages", "\n", "self", ".", "pool_center", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "9", ",", "stride", "=", "8", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv1_stage1", "=", "nn", ".", "Conv2d", "(", "3", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool1_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool2_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool3_stage1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_stage1", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "self", ".", "conv5_stage1", "=", "nn", ".", "Conv2d", "(", "32", ",", "512", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "conv6_stage1", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "conv7_stage1", "=", "nn", ".", "Conv2d", "(", "512", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "conv1_stage2", "=", "nn", ".", "Conv2d", "(", "3", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool1_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool2_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "padding", "=", "4", ")", "\n", "self", ".", "pool3_stage2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage2", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage2", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage3", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage3", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage4", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage4", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage5", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage5", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "conv1_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "32", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", "\n", "self", ".", "Mconv1_stage6", "=", "nn", ".", "Conv2d", "(", "32", "+", "self", ".", "k", "+", "2", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv2_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv3_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "11", ",", "padding", "=", "5", ")", "\n", "self", ".", "Mconv4_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "Mconv5_stage6", "=", "nn", ".", "Conv2d", "(", "128", ",", "self", ".", "k", "+", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage1": [[68, 79], ["cpm_model.CPM.pool1_stage1", "cpm_model.CPM.pool2_stage1", "cpm_model.CPM.pool3_stage1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv7_stage1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv4_stage1", "cpm_model.CPM.conv5_stage1", "cpm_model.CPM.conv6_stage1", "cpm_model.CPM.conv1_stage1", "cpm_model.CPM.conv2_stage1", "cpm_model.CPM.conv3_stage1"], "methods", ["None"], ["\n", "", "def", "_stage1", "(", "self", ",", "image", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "pool1_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv1_stage1", "(", "image", ")", ")", ")", "\n", "x", "=", "self", ".", "pool2_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv2_stage1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "pool3_stage1", "(", "F", ".", "relu", "(", "self", ".", "conv3_stage1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_stage1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv5_stage1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv6_stage1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv7_stage1", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._middle": [[80, 87], ["cpm_model.CPM.pool1_stage2", "cpm_model.CPM.pool2_stage2", "cpm_model.CPM.pool3_stage2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.conv1_stage2", "cpm_model.CPM.conv2_stage2", "cpm_model.CPM.conv3_stage2"], "methods", ["None"], ["\n", "", "def", "_middle", "(", "self", ",", "image", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "pool1_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv1_stage2", "(", "image", ")", ")", ")", "\n", "x", "=", "self", ".", "pool2_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv2_stage2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "pool3_stage2", "(", "F", ".", "relu", "(", "self", ".", "conv3_stage2", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage2": [[88, 99], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage2", "cpm_model.CPM.conv4_stage2", "cpm_model.CPM.Mconv1_stage2", "cpm_model.CPM.Mconv2_stage2", "cpm_model.CPM.Mconv3_stage2", "cpm_model.CPM.Mconv4_stage2"], "methods", ["None"], ["\n", "", "def", "_stage2", "(", "self", ",", "pool3_stage2_map", ",", "conv7_stage1_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv4_stage2", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "conv7_stage1_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage2", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage3": [[100, 111], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage3", "cpm_model.CPM.conv1_stage3", "cpm_model.CPM.Mconv1_stage3", "cpm_model.CPM.Mconv2_stage3", "cpm_model.CPM.Mconv3_stage3", "cpm_model.CPM.Mconv4_stage3"], "methods", ["None"], ["\n", "", "def", "_stage3", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage2_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage3", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage2_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage3", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage3", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage4": [[112, 123], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage4", "cpm_model.CPM.conv1_stage4", "cpm_model.CPM.Mconv1_stage4", "cpm_model.CPM.Mconv2_stage4", "cpm_model.CPM.Mconv3_stage4", "cpm_model.CPM.Mconv4_stage4"], "methods", ["None"], ["\n", "", "def", "_stage4", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage3_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage4", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage3_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage4", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage4", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage4", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage5": [[124, 135], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage5", "cpm_model.CPM.conv1_stage5", "cpm_model.CPM.Mconv1_stage5", "cpm_model.CPM.Mconv2_stage5", "cpm_model.CPM.Mconv3_stage5", "cpm_model.CPM.Mconv4_stage5"], "methods", ["None"], ["\n", "", "def", "_stage5", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage4_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage5", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage4_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage5", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage5", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage5", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage6": [[136, 147], ["torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cpm_model.CPM.Mconv5_stage6", "cpm_model.CPM.conv1_stage6", "cpm_model.CPM.Mconv1_stage6", "cpm_model.CPM.Mconv2_stage6", "cpm_model.CPM.Mconv3_stage6", "cpm_model.CPM.Mconv4_stage6"], "methods", ["None"], ["\n", "", "def", "_stage6", "(", "self", ",", "pool3_stage2_map", ",", "Mconv5_stage5_map", ",", "pool_center_map", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1_stage6", "(", "pool3_stage2_map", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "Mconv5_stage5_map", ",", "pool_center_map", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv1_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv2_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv3_stage6", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "Mconv4_stage6", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "Mconv5_stage6", "(", "x", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM.forward": [[150, 171], ["cpm_model.CPM.pool_center", "cpm_model.CPM._stage1", "cpm_model.CPM._middle", "cpm_model.CPM._stage2", "cpm_model.CPM._stage3", "cpm_model.CPM._stage4", "cpm_model.CPM._stage5", "cpm_model.CPM._stage6"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage1", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._middle", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage2", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage3", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage4", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage5", "home.repos.pwc.inspect_result.msbrpp_MSBR.test.cpm_model.CPM._stage6"], ["\n", "", "def", "forward", "(", "self", ",", "image", ",", "center_map", ")", ":", "\n", "\n", "\n", "        ", "pool_center_map", "=", "self", ".", "pool_center", "(", "center_map", ")", "\n", "\n", "conv7_stage1_map", "=", "self", ".", "_stage1", "(", "image", ")", "\n", "\n", "pool3_stage2_map", "=", "self", ".", "_middle", "(", "image", ")", "\n", "output", "=", "[", "conv7_stage1_map", "]", "\n", "assert", "self", ".", "stages", ">=", "1", "\n", "for", "s", "in", "range", "(", "1", ",", "self", ".", "stages", ")", ":", "\n", "            ", "if", "s", "==", "1", ":", "\n", "                ", "Mconv5_stage2_map", "=", "self", ".", "_stage2", "(", "pool3_stage2_map", ",", "conv7_stage1_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage2_map", ")", "\n", "", "elif", "s", "==", "2", ":", "\n", "                ", "Mconv5_stage3_map", "=", "self", ".", "_stage3", "(", "pool3_stage2_map", ",", "Mconv5_stage2_map", ",", "\n", "pool_center_map", ")", "\n", "output", ".", "append", "(", "Mconv5_stage3_map", ")", "\n", "", "elif", "s", "==", "3", ":", "\n", "                ", "Mconv5_stage4_map", "=", "self", ".", "_stage4", "(", "pool3_stage2_map", ",", "Mconv5_stage3_map", ",", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.flownet2c.FlowNetC.__init__": [[15, 71], ["torch.Module.__init__", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.conv", "correlation_package.correlation.Correlation", "torch.LeakyReLU", "torch.LeakyReLU", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.conv", "submodules.deconv", "submodules.deconv", "submodules.deconv", "submodules.deconv", "submodules.predict_flow", "submodules.predict_flow", "submodules.predict_flow", "submodules.predict_flow", "submodules.predict_flow", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "flownet2c.FlowNetC.modules", "torch.Upsample", "torch.Upsample", "isinstance", "isinstance", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.uniform_", "torch.nn.init.uniform_", "torch.nn.init.uniform_", "torch.nn.init.uniform_"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.deconv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.deconv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.deconv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.deconv", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow", "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow"], ["    ", "def", "__init__", "(", "self", ",", "batchNorm", "=", "True", ",", "div_flow", "=", "20", ")", ":", "\n", "        ", "super", "(", "FlowNetC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "batchNorm", "=", "batchNorm", "\n", "self", ".", "div_flow", "=", "div_flow", "\n", "\n", "self", ".", "conv1", "=", "conv", "(", "self", ".", "batchNorm", ",", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "self", ".", "batchNorm", ",", "64", ",", "128", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3", "=", "conv", "(", "self", ".", "batchNorm", ",", "128", ",", "256", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv_redir", "=", "conv", "(", "self", ".", "batchNorm", ",", "256", ",", "32", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "# if args.fp16:", "\n", "#     self.corr = nn.Sequential(", "\n", "#         tofp32(),", "\n", "#         Correlation(pad_size=20, kernel_size=1, max_displacement=20, stride1=1, stride2=2, corr_multiply=1),", "\n", "#         tofp16())", "\n", "# else:", "\n", "self", ".", "corr", "=", "Correlation", "(", "pad_size", "=", "20", ",", "kernel_size", "=", "1", ",", "max_displacement", "=", "20", ",", "stride1", "=", "1", ",", "stride2", "=", "2", ",", "corr_multiply", "=", "1", ")", "\n", "\n", "self", ".", "corr_activation", "=", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", "self", ".", "conv3_1", "=", "conv", "(", "self", ".", "batchNorm", ",", "473", ",", "256", ")", "\n", "self", ".", "conv4", "=", "conv", "(", "self", ".", "batchNorm", ",", "256", ",", "512", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv4_1", "=", "conv", "(", "self", ".", "batchNorm", ",", "512", ",", "512", ")", "\n", "self", ".", "conv5", "=", "conv", "(", "self", ".", "batchNorm", ",", "512", ",", "512", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv5_1", "=", "conv", "(", "self", ".", "batchNorm", ",", "512", ",", "512", ")", "\n", "self", ".", "conv6", "=", "conv", "(", "self", ".", "batchNorm", ",", "512", ",", "1024", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv6_1", "=", "conv", "(", "self", ".", "batchNorm", ",", "1024", ",", "1024", ")", "\n", "\n", "self", ".", "deconv5", "=", "deconv", "(", "1024", ",", "512", ")", "\n", "self", ".", "deconv4", "=", "deconv", "(", "1026", ",", "256", ")", "\n", "self", ".", "deconv3", "=", "deconv", "(", "770", ",", "128", ")", "\n", "self", ".", "deconv2", "=", "deconv", "(", "386", ",", "64", ")", "\n", "\n", "self", ".", "predict_flow6", "=", "predict_flow", "(", "1024", ")", "\n", "self", ".", "predict_flow5", "=", "predict_flow", "(", "1026", ")", "\n", "self", ".", "predict_flow4", "=", "predict_flow", "(", "770", ")", "\n", "self", ".", "predict_flow3", "=", "predict_flow", "(", "386", ")", "\n", "self", ".", "predict_flow2", "=", "predict_flow", "(", "194", ")", "\n", "\n", "self", ".", "upsampled_flow6_to_5", "=", "nn", ".", "ConvTranspose2d", "(", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "upsampled_flow5_to_4", "=", "nn", ".", "ConvTranspose2d", "(", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "upsampled_flow4_to_3", "=", "nn", ".", "ConvTranspose2d", "(", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "upsampled_flow3_to_2", "=", "nn", ".", "ConvTranspose2d", "(", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "uniform_", "(", "m", ".", "bias", ")", "\n", "", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "uniform_", "(", "m", ".", "bias", ")", "\n", "", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "# init_deconv_bilinear(m.weight)", "\n", "", "", "self", ".", "upsample1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.flownet2c.FlowNetC.forward": [[72, 134], ["flownet2c.FlowNetC.conv1", "flownet2c.FlowNetC.conv2", "flownet2c.FlowNetC.conv3", "flownet2c.FlowNetC.conv1", "flownet2c.FlowNetC.conv2", "flownet2c.FlowNetC.conv3", "flownet2c.FlowNetC.corr", "flownet2c.FlowNetC.corr_activation", "flownet2c.FlowNetC.conv_redir", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flownet2c.FlowNetC.conv3_1", "flownet2c.FlowNetC.conv4_1", "flownet2c.FlowNetC.conv5_1", "flownet2c.FlowNetC.conv6_1", "flownet2c.FlowNetC.predict_flow6", "flownet2c.FlowNetC.upsampled_flow6_to_5", "flownet2c.FlowNetC.deconv5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flownet2c.FlowNetC.predict_flow5", "flownet2c.FlowNetC.upsampled_flow5_to_4", "flownet2c.FlowNetC.deconv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flownet2c.FlowNetC.predict_flow4", "flownet2c.FlowNetC.upsampled_flow4_to_3", "flownet2c.FlowNetC.deconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flownet2c.FlowNetC.predict_flow3", "flownet2c.FlowNetC.upsampled_flow3_to_2", "flownet2c.FlowNetC.deconv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "flownet2c.FlowNetC.predict_flow2", "flownet2c.FlowNetC.conv4", "flownet2c.FlowNetC.conv5", "flownet2c.FlowNetC.conv6"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "x", "[", ":", ",", "0", ":", "3", ",", ":", ",", ":", "]", "\n", "x2", "=", "x", "[", ":", ",", "3", ":", ":", ",", ":", ",", ":", "]", "\n", "\n", "out_conv1a", "=", "self", ".", "conv1", "(", "x1", ")", "\n", "out_conv2a", "=", "self", ".", "conv2", "(", "out_conv1a", ")", "\n", "out_conv3a", "=", "self", ".", "conv3", "(", "out_conv2a", ")", "\n", "\n", "# FlownetC bottom input stream", "\n", "out_conv1b", "=", "self", ".", "conv1", "(", "x2", ")", "\n", "\n", "out_conv2b", "=", "self", ".", "conv2", "(", "out_conv1b", ")", "\n", "out_conv3b", "=", "self", ".", "conv3", "(", "out_conv2b", ")", "\n", "\n", "# Merge streams", "\n", "out_corr", "=", "self", ".", "corr", "(", "out_conv3a", ",", "out_conv3b", ")", "# False", "\n", "out_corr", "=", "self", ".", "corr_activation", "(", "out_corr", ")", "\n", "\n", "# Redirect top input stream and concatenate", "\n", "out_conv_redir", "=", "self", ".", "conv_redir", "(", "out_conv3a", ")", "\n", "\n", "in_conv3_1", "=", "torch", ".", "cat", "(", "(", "out_conv_redir", ",", "out_corr", ")", ",", "1", ")", "\n", "\n", "# Merged conv layers", "\n", "out_conv3_1", "=", "self", ".", "conv3_1", "(", "in_conv3_1", ")", "\n", "\n", "out_conv4", "=", "self", ".", "conv4_1", "(", "self", ".", "conv4", "(", "out_conv3_1", ")", ")", "\n", "\n", "out_conv5", "=", "self", ".", "conv5_1", "(", "self", ".", "conv5", "(", "out_conv4", ")", ")", "\n", "out_conv6", "=", "self", ".", "conv6_1", "(", "self", ".", "conv6", "(", "out_conv5", ")", ")", "\n", "\n", "flow6", "=", "self", ".", "predict_flow6", "(", "out_conv6", ")", "\n", "flow6_up", "=", "self", ".", "upsampled_flow6_to_5", "(", "flow6", ")", "\n", "out_deconv5", "=", "self", ".", "deconv5", "(", "out_conv6", ")", "\n", "\n", "concat5", "=", "torch", ".", "cat", "(", "(", "out_conv5", ",", "out_deconv5", ",", "flow6_up", ")", ",", "1", ")", "\n", "\n", "flow5", "=", "self", ".", "predict_flow5", "(", "concat5", ")", "\n", "flow5_up", "=", "self", ".", "upsampled_flow5_to_4", "(", "flow5", ")", "\n", "out_deconv4", "=", "self", ".", "deconv4", "(", "concat5", ")", "\n", "concat4", "=", "torch", ".", "cat", "(", "(", "out_conv4", ",", "out_deconv4", ",", "flow5_up", ")", ",", "1", ")", "\n", "\n", "flow4", "=", "self", ".", "predict_flow4", "(", "concat4", ")", "\n", "flow4_up", "=", "self", ".", "upsampled_flow4_to_3", "(", "flow4", ")", "\n", "out_deconv3", "=", "self", ".", "deconv3", "(", "concat4", ")", "\n", "concat3", "=", "torch", ".", "cat", "(", "(", "out_conv3_1", ",", "out_deconv3", ",", "flow4_up", ")", ",", "1", ")", "\n", "\n", "flow3", "=", "self", ".", "predict_flow3", "(", "concat3", ")", "\n", "flow3_up", "=", "self", ".", "upsampled_flow3_to_2", "(", "flow3", ")", "\n", "out_deconv2", "=", "self", ".", "deconv2", "(", "concat3", ")", "\n", "concat2", "=", "torch", ".", "cat", "(", "(", "out_conv2a", ",", "out_deconv2", ",", "flow3_up", ")", ",", "1", ")", "\n", "\n", "flow2", "=", "self", ".", "predict_flow2", "(", "concat2", ")", "\n", "\n", "# if self.training:", "\n", "#     return flow2,flow3,flow4,flow5,flow6", "\n", "# else:", "\n", "#     return flow2,", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "flow2", ",", "flow3", ",", "flow4", ",", "flow5", "\n", "", "else", ":", "\n", "            ", "return", "flow2", ",", "", "", "", "", ""]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.tofp16.__init__": [[41, 43], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "tofp16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.tofp16.forward": [[44, 46], ["input.half"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "half", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.tofp32.__init__": [[49, 51], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "tofp32", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.tofp32.forward": [[52, 54], ["input.float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.conv": [[7, 18], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.Conv2d", "torch.LeakyReLU"], "function", ["None"], ["def", "conv", "(", "batchNorm", ",", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "    ", "if", "batchNorm", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.i_conv": [[20, 29], ["torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d"], "function", ["None"], ["", "", "def", "i_conv", "(", "batchNorm", ",", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "    ", "if", "batchNorm", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "bias", "=", "bias", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.predict_flow": [[31, 33], ["torch.Conv2d"], "function", ["None"], ["", "", "def", "predict_flow", "(", "in_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.deconv": [[34, 38], ["torch.Sequential", "torch.ConvTranspose2d", "torch.LeakyReLU"], "function", ["None"], ["", "def", "deconv", "(", "in_planes", ",", "out_planes", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.init_deconv_bilinear": [[56, 70], ["weight.size", "numpy.ceil", "numpy.zeros", "range", "weight.data.fill_", "range", "range", "range", "torch.from_numpy", "torch.from_numpy", "abs", "abs"], "function", ["None"], ["", "", "def", "init_deconv_bilinear", "(", "weight", ")", ":", "\n", "    ", "f_shape", "=", "weight", ".", "size", "(", ")", "\n", "heigh", ",", "width", "=", "f_shape", "[", "-", "2", "]", ",", "f_shape", "[", "-", "1", "]", "\n", "f", "=", "np", ".", "ceil", "(", "width", "/", "2.0", ")", "\n", "c", "=", "(", "2", "*", "f", "-", "1", "-", "f", "%", "2", ")", "/", "(", "2.0", "*", "f", ")", "\n", "bilinear", "=", "np", ".", "zeros", "(", "[", "heigh", ",", "width", "]", ")", "\n", "for", "x", "in", "range", "(", "width", ")", ":", "\n", "        ", "for", "y", "in", "range", "(", "heigh", ")", ":", "\n", "            ", "value", "=", "(", "1", "-", "abs", "(", "x", "/", "f", "-", "c", ")", ")", "*", "(", "1", "-", "abs", "(", "y", "/", "f", "-", "c", ")", ")", "\n", "bilinear", "[", "x", ",", "y", "]", "=", "value", "\n", "", "", "weight", ".", "data", ".", "fill_", "(", "0.", ")", "\n", "for", "i", "in", "range", "(", "f_shape", "[", "0", "]", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "f_shape", "[", "1", "]", ")", ":", "\n", "            ", "weight", ".", "data", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "torch", ".", "from_numpy", "(", "bilinear", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.model.submodules.save_grad": [[72, 76], ["None"], "function", ["None"], ["", "", "", "def", "save_grad", "(", "grads", ",", "name", ")", ":", "\n", "    ", "def", "hook", "(", "grad", ")", ":", "\n", "        ", "grads", "[", "name", "]", "=", "grad", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.CorrelationFunction.__init__": [[8, 16], ["torch.autograd.Function.__init__"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pad_size", "=", "3", ",", "kernel_size", "=", "3", ",", "max_displacement", "=", "20", ",", "stride1", "=", "1", ",", "stride2", "=", "2", ",", "corr_multiply", "=", "1", ")", ":", "\n", "        ", "super", "(", "CorrelationFunction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pad_size", "=", "pad_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "max_displacement", "=", "max_displacement", "\n", "self", ".", "stride1", "=", "stride1", "\n", "self", ".", "stride2", "=", "stride2", "\n", "self", ".", "corr_multiply", "=", "corr_multiply", "\n", "# self.out_channel = ((max_displacement/stride2)*2 + 1) * ((max_displacement/stride2)*2 + 1)", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.CorrelationFunction.forward": [[18, 30], ["correlation.CorrelationFunction.save_for_backward", "torch.cuda.device_of", "input1.new", "input2.new", "input1.new", "correlation_cuda.forward"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.forward"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "        ", "self", ".", "save_for_backward", "(", "input1", ",", "input2", ")", "\n", "\n", "with", "torch", ".", "cuda", ".", "device_of", "(", "input1", ")", ":", "\n", "            ", "rbot1", "=", "input1", ".", "new", "(", ")", "\n", "rbot2", "=", "input2", ".", "new", "(", ")", "\n", "output", "=", "input1", ".", "new", "(", ")", "\n", "\n", "correlation_cuda", ".", "forward", "(", "input1", ",", "input2", ",", "rbot1", ",", "rbot2", ",", "output", ",", "\n", "self", ".", "pad_size", ",", "self", ".", "kernel_size", ",", "self", ".", "max_displacement", ",", "self", ".", "stride1", ",", "self", ".", "stride2", ",", "self", ".", "corr_multiply", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.CorrelationFunction.backward": [[31, 45], ["torch.cuda.device_of", "input1.new", "input2.new", "input1.new", "input2.new", "correlation_cuda.backward"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.CorrelationFunction.backward"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "input1", ",", "input2", "=", "self", ".", "saved_tensors", "\n", "\n", "with", "torch", ".", "cuda", ".", "device_of", "(", "input1", ")", ":", "\n", "            ", "rbot1", "=", "input1", ".", "new", "(", ")", "\n", "rbot2", "=", "input2", ".", "new", "(", ")", "\n", "\n", "grad_input1", "=", "input1", ".", "new", "(", ")", "\n", "grad_input2", "=", "input2", ".", "new", "(", ")", "\n", "\n", "correlation_cuda", ".", "backward", "(", "input1", ",", "input2", ",", "rbot1", ",", "rbot2", ",", "grad_output", ",", "grad_input1", ",", "grad_input2", ",", "\n", "self", ".", "pad_size", ",", "self", ".", "kernel_size", ",", "self", ".", "max_displacement", ",", "self", ".", "stride1", ",", "self", ".", "stride2", ",", "self", ".", "corr_multiply", ")", "\n", "\n", "", "return", "grad_input1", ",", "grad_input2", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__": [[48, 56], ["torch.nn.modules.module.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pad_size", "=", "0", ",", "kernel_size", "=", "0", ",", "max_displacement", "=", "0", ",", "stride1", "=", "1", ",", "stride2", "=", "2", ",", "corr_multiply", "=", "1", ")", ":", "\n", "        ", "super", "(", "Correlation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pad_size", "=", "pad_size", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "max_displacement", "=", "max_displacement", "\n", "self", ".", "stride1", "=", "stride1", "\n", "self", ".", "stride2", "=", "stride2", "\n", "self", ".", "corr_multiply", "=", "corr_multiply", "\n", "\n"]], "home.repos.pwc.inspect_result.msbrpp_MSBR.correlation_package.correlation.Correlation.forward": [[57, 62], ["correlation.CorrelationFunction"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "\n", "        ", "result", "=", "CorrelationFunction", "(", "self", ".", "pad_size", ",", "self", ".", "kernel_size", ",", "self", ".", "max_displacement", ",", "self", ".", "stride1", ",", "self", ".", "stride2", ",", "self", ".", "corr_multiply", ")", "(", "input1", ",", "input2", ")", "\n", "\n", "return", "result", "\n", "", "", ""]]}