{"home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode_tags.return_loaded_model": [[25, 30], ["Model", "Model.load_state_dict", "Model.eval", "torch.load", "torch.device"], "function", ["None"], ["def", "return_loaded_model", "(", "Model", ",", "checkpoint", ")", ":", "\n", "    ", "model", "=", "Model", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "checkpoint", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode_tags.extract_audio_embedding": [[32, 44], ["torch.no_grad", "scaler.transform", "torch.unsqueeze().float", "model", "utils.compute_spectrogram", "print", "torch.unsqueeze", "torch.unsqueeze", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.compute_spectrogram"], ["", "def", "extract_audio_embedding", "(", "model", ",", "filename", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", "=", "compute_spectrogram", "(", "filename", ")", "[", ":", "96", ",", ":", "96", "]", "\n", "x", "=", "scaler", ".", "transform", "(", "x", ")", "\n", "x", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "unsqueeze", "(", "torch", ".", "tensor", "(", "x", ")", ",", "0", ")", ",", "0", ")", ".", "float", "(", ")", "\n", "embedding", ",", "embedding_d", "=", "model", "(", "x", ")", "\n", "return", "embedding", ",", "embedding_d", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode_tags.extract_audio_embedding_chunks": [[46, 59], ["torch.no_grad", "utils.compute_spectrogram", "numpy.array", "torch.unsqueeze", "model", "torch.tensor", "print", "scaler.transform", "librosa.util.frame", "numpy.asfortranarray"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.compute_spectrogram"], ["", "", "", "def", "extract_audio_embedding_chunks", "(", "model", ",", "filename", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", "=", "compute_spectrogram", "(", "filename", ")", "\n", "x_chunks", "=", "np", ".", "array", "(", "[", "scaler", ".", "transform", "(", "chunk", ".", "T", ")", "for", "chunk", "in", "\n", "librosa", ".", "util", ".", "frame", "(", "np", ".", "asfortranarray", "(", "x", ")", ",", "frame_length", "=", "96", ",", "hop_length", "=", "96", ",", "axis", "=", "-", "1", ")", ".", "T", "]", ")", "\n", "x_chunks", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "tensor", "(", "x_chunks", ")", ",", "1", ")", "\n", "embedding_chunks", ",", "embedding_d_chunks", "=", "model", "(", "x_chunks", ")", "\n", "return", "embedding_chunks", ",", "embedding_d_chunks", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode_tags.extract_tag_embedding": [[61, 72], ["torch.no_grad", "torch.tensor().view().float", "model", "print", "torch.tensor().view", "int", "torch.tensor", "numpy.zeros"], "function", ["None"], ["", "", "", "def", "extract_tag_embedding", "(", "model", ",", "tag", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "tag_vector", "=", "torch", ".", "tensor", "(", "np", ".", "zeros", "(", "1000", ")", ")", ".", "view", "(", "1", ",", "1000", ")", ".", "float", "(", ")", "\n", "tag_vector", "[", "0", ",", "int", "(", "tag2id", "[", "tag", "]", ")", "]", "=", "1", "\n", "embedding", ",", "_", "=", "model", "(", "tag_vector", ")", "\n", "return", "embedding", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "tag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.HDF5Dataset.__init__": [[9, 13], ["h5py.File", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "h5_path", ")", ":", "\n", "        ", "self", ".", "h5_path", "=", "h5_path", "\n", "self", ".", "h_file", "=", "h5py", ".", "File", "(", "h5_path", ",", "'r'", ")", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "h_file", "[", "'dataset'", "]", "[", "'id'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.HDF5Dataset.__getitem__": [[14, 19], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "data", "=", "self", ".", "h_file", "[", "'dataset'", "]", "[", "'data'", "]", "[", "index", "]", "\n", "label", "=", "self", ".", "h_file", "[", "'dataset'", "]", "[", "'label'", "]", "[", "index", "]", "\n", "sound_id", "=", "self", ".", "h_file", "[", "'dataset'", "]", "[", "'id'", "]", "[", "index", "]", "\n", "return", "data", ",", "label", ",", "sound_id", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.HDF5Dataset.__len__": [[20, 22], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.InMemoryDataset.__init__": [[25, 32], ["h5py.File", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "h5_path", ")", ":", "\n", "        ", "self", ".", "h5_path", "=", "h5_path", "\n", "with", "h5py", ".", "File", "(", "h5_path", ",", "'r'", ")", "as", "h_file", ":", "\n", "            ", "self", ".", "data", "=", "h_file", "[", "'dataset'", "]", "[", "'data'", "]", "[", ":", "]", "\n", "self", ".", "label", "=", "h_file", "[", "'dataset'", "]", "[", "'label'", "]", "[", ":", "]", "\n", "self", ".", "id", "=", "h_file", "[", "'dataset'", "]", "[", "'id'", "]", "[", ":", "]", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.InMemoryDataset.__getitem__": [[33, 35], ["None"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "index", "]", ",", "self", ".", "label", "[", "index", "]", ",", "self", ".", "id", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.data_loader.InMemoryDataset.__len__": [[36, 38], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.return_loaded_model": [[25, 30], ["Model", "Model.load_state_dict", "Model.eval", "torch.load", "torch.device"], "function", ["None"], ["def", "return_loaded_model", "(", "Model", ",", "checkpoint", ")", ":", "\n", "    ", "model", "=", "Model", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "checkpoint", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.extract_audio_embedding": [[32, 44], ["torch.no_grad", "scaler.transform", "torch.unsqueeze().float", "model", "utils.compute_spectrogram", "print", "torch.unsqueeze", "torch.unsqueeze", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.compute_spectrogram"], ["", "def", "extract_audio_embedding", "(", "model", ",", "filename", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", "=", "compute_spectrogram", "(", "filename", ")", "[", ":", "96", ",", ":", "96", "]", "\n", "x", "=", "scaler", ".", "transform", "(", "x", ")", "\n", "x", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "unsqueeze", "(", "torch", ".", "tensor", "(", "x", ")", ",", "0", ")", ",", "0", ")", ".", "float", "(", ")", "\n", "embedding", ",", "embedding_d", "=", "model", "(", "x", ")", "\n", "return", "embedding", ",", "embedding_d", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.extract_audio_embedding_chunks": [[46, 59], ["torch.no_grad", "utils.compute_spectrogram", "numpy.array", "torch.unsqueeze", "model", "torch.tensor", "print", "scaler.transform", "librosa.util.frame", "numpy.asfortranarray"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.compute_spectrogram"], ["", "", "", "def", "extract_audio_embedding_chunks", "(", "model", ",", "filename", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "x", "=", "compute_spectrogram", "(", "filename", ")", "\n", "x_chunks", "=", "np", ".", "array", "(", "[", "scaler", ".", "transform", "(", "chunk", ".", "T", ")", "for", "chunk", "in", "\n", "librosa", ".", "util", ".", "frame", "(", "np", ".", "asfortranarray", "(", "x", ")", ",", "frame_length", "=", "96", ",", "hop_length", "=", "96", ",", "axis", "=", "-", "1", ")", ".", "T", "]", ")", "\n", "x_chunks", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "tensor", "(", "x_chunks", ")", ",", "1", ")", "\n", "embedding_chunks", ",", "embedding_d_chunks", "=", "model", "(", "x_chunks", ")", "\n", "return", "embedding_chunks", ",", "embedding_d_chunks", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.extract_tag_embedding": [[61, 72], ["torch.no_grad", "torch.tensor().view().float", "model", "print", "torch.tensor().view", "int", "torch.tensor", "numpy.zeros"], "function", ["None"], ["", "", "", "def", "extract_tag_embedding", "(", "model", ",", "tag", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "tag_vector", "=", "torch", ".", "tensor", "(", "np", ".", "zeros", "(", "1000", ")", ")", ".", "view", "(", "1", ",", "1000", ")", ".", "float", "(", ")", "\n", "tag_vector", "[", "0", ",", "int", "(", "tag2id", "[", "tag", "]", ")", "]", "=", "1", "\n", "embedding", ",", "_", "=", "model", "(", "tag_vector", ")", "\n", "return", "embedding", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "            ", "return", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ",", "tag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.Flatten.forward": [[13, 15], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.UnFlatten.forward": [[18, 20], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ",", "size", "=", "128", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "size", ",", "3", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.ScaledDotProductAttention.__init__": [[25, 29], ["torch.nn.Module.__init__", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["def", "__init__", "(", "self", ",", "temperature", ",", "attn_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "attn_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.ScaledDotProductAttention.forward": [[30, 41], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "models_t1000_att.ScaledDotProductAttention.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "k.transpose", "attn.masked_fill.masked_fill.masked_fill", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ",", "k", ",", "v", ",", "mask", "=", "None", ")", ":", "\n", "\n", "        ", "attn", "=", "torch", ".", "matmul", "(", "q", "/", "self", ".", "temperature", ",", "k", ".", "transpose", "(", "2", ",", "3", ")", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "attn", "=", "attn", ".", "masked_fill", "(", "mask", "==", "0", ",", "-", "1e9", ")", "\n", "\n", "", "attn", "=", "self", ".", "dropout", "(", "F", ".", "softmax", "(", "attn", ",", "dim", "=", "-", "1", ")", ")", "\n", "output", "=", "torch", ".", "matmul", "(", "attn", ",", "v", ")", "\n", "\n", "return", "output", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.AudioEncoder.__init__": [[44, 75], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "models_t1000_att.Flatten", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size_w_rep", "=", "1152", ")", ":", "\n", "        ", "super", "(", "AudioEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "audio_encoder", "=", "Sequential", "(", "\n", "Conv2d", "(", "1", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "# 128x48x48", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "# 128x24x24", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "# 128x12x12", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "# 128x6x6", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "# 128x3x3", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "1152", ",", "eps", "=", "1e-6", ")", ",", "\n", ")", "\n", "\n", "self", ".", "fc_audio", "=", "Sequential", "(", "\n", "Linear", "(", "1152", ",", "size_w_rep", ",", "bias", "=", "False", ")", ",", "\n", "Dropout", "(", "0.25", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.AudioEncoder.forward": [[77, 81], ["models_t1000_att.AudioEncoder.audio_encoder", "models_t1000_att.AudioEncoder.fc_audio"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z", "=", "self", ".", "audio_encoder", "(", "x", ")", "\n", "z_d", "=", "self", ".", "fc_audio", "(", "z", ")", "\n", "return", "z", ",", "z_d", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.AudioDecoder.__init__": [[84, 108], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "models_t1000_att.UnFlatten", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AudioDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "audio_decoder", "=", "Sequential", "(", "\n", "UnFlatten", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "ConvTranspose2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "ConvTranspose2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "ConvTranspose2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "ConvTranspose2d", "(", "128", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "ConvTranspose2d", "(", "128", ",", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "padding_mode", "=", "'zeros'", ")", ",", "\n", "BatchNorm2d", "(", "1", ")", ",", "\n", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.AudioDecoder.forward": [[110, 112], ["models_t1000_att.AudioDecoder.audio_decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "return", "self", ".", "audio_decoder", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagMeanEncoder.__init__": [[115, 128], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "numpy.load", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vocab_size", ",", "word_embedding_dim", ",", "d_model", ",", "dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "TagMeanEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "d_model", "=", "d_model", "\n", "\n", "if", "d_model", "==", "128", ":", "\n", "            ", "self", ".", "embeddings", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "'embedding_matrix_128.npy'", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embeddings", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "'embedding_matrix.npy'", ")", ")", ")", "\n", "\n", "", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "word_embedding_dim", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagMeanEncoder.forward": [[129, 138], ["models_t1000_att.TagMeanEncoder.embeddings", "models_t1000_att.TagMeanEncoder.fc", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "models_t1000_att.TagMeanEncoder.dropout", "models_t1000_att.TagMeanEncoder.layer_norm", "models_t1000_att.TagMeanEncoder.sum", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tags", ",", "z_audio", ",", "mask", "=", "None", ")", ":", "\n", "        ", "tag_embeddings", "=", "self", ".", "embeddings", "(", "tags", ")", "\n", "q", "=", "self", ".", "fc", "(", "tag_embeddings", ")", "\n", "# get mean average over non-0 embeddings", "\n", "q", "=", "torch", ".", "mul", "(", "q", ".", "sum", "(", "1", ")", ",", "torch", ".", "repeat_interleave", "(", "1", "/", "(", "(", "mask", "!=", "0", ")", ".", "sum", "(", "-", "1", ")", ".", "float", "(", ")", ")", ",", "repeats", "=", "self", ".", "d_model", ",", "dim", "=", "-", "1", ")", ")", "\n", "# q = torch.mean(q, dim=1)", "\n", "q", "=", "self", ".", "dropout", "(", "q", ")", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "return", "q", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagSelfAttentionEncoder.__init__": [[143, 166], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "models_t1000_att.ScaledDotProductAttention", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "numpy.load", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vocab_size", ",", "word_embedding_dim", ",", "n_head", ",", "d_model", ",", "d_k", ",", "d_v", ",", "dropout", "=", "0.1", ",", "max_num_tags", "=", "10", ")", ":", "\n", "        ", "super", "(", "TagSelfAttentionEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "d_model", "==", "128", ":", "\n", "            ", "self", ".", "embeddings", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "'embedding_matrix_128.npy'", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embeddings", "=", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "Tensor", "(", "np", ".", "load", "(", "'embedding_matrix.npy'", ")", ")", ")", "\n", "\n", "", "self", ".", "max_num_tags", "=", "max_num_tags", "\n", "\n", "self", ".", "n_head", "=", "n_head", "\n", "self", ".", "d_k", "=", "d_k", "\n", "self", ".", "d_v", "=", "d_v", "\n", "\n", "self", ".", "w_qs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_ks", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_k", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_vs", "=", "nn", ".", "Linear", "(", "d_model", ",", "n_head", "*", "d_v", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "n_head", "*", "d_v", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "attention", "=", "ScaledDotProductAttention", "(", "temperature", "=", "d_k", "**", "0.5", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "layer_norm", "=", "nn", ".", "LayerNorm", "(", "d_model", ",", "eps", "=", "1e-6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagSelfAttentionEncoder.forward": [[167, 206], ["models_t1000_att.TagSelfAttentionEncoder.embeddings", "models_t1000_att.TagSelfAttentionEncoder.w_qs().view", "models_t1000_att.TagSelfAttentionEncoder.w_ks().view", "models_t1000_att.TagSelfAttentionEncoder.w_vs().view", "models_t1000_att.TagSelfAttentionEncoder.attention", "q.view.view.transpose().contiguous().view", "models_t1000_att.TagSelfAttentionEncoder.dropout", "q.view.view.sum", "models_t1000_att.TagSelfAttentionEncoder.layer_norm", "q.view.view.view", "q.view.view.size", "q.view.view.size", "models_t1000_att.TagSelfAttentionEncoder.size", "models_t1000_att.TagSelfAttentionEncoder.size", "q.view.view.transpose", "models_t1000_att.TagSelfAttentionEncoder.transpose", "models_t1000_att.TagSelfAttentionEncoder.transpose", "mask.unsqueeze.unsqueeze.unsqueeze", "models_t1000_att.TagSelfAttentionEncoder.fc", "models_t1000_att.TagSelfAttentionEncoder.w_qs", "models_t1000_att.TagSelfAttentionEncoder.w_ks", "models_t1000_att.TagSelfAttentionEncoder.w_vs", "q.view.view.transpose().contiguous", "q.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tags", ",", "q", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "# in self attention q comes from the same source", "\n", "        ", "tag_embeddings", "=", "self", ".", "embeddings", "(", "tags", ")", "\n", "k", "=", "tag_embeddings", "\n", "v", "=", "tag_embeddings", "\n", "q", "=", "tag_embeddings", "\n", "\n", "d_k", ",", "d_v", ",", "n_head", "=", "self", ".", "d_k", ",", "self", ".", "d_v", ",", "self", ".", "n_head", "\n", "sz_b", ",", "len_q", ",", "len_k", ",", "len_v", "=", "q", ".", "size", "(", "0", ")", ",", "q", ".", "size", "(", "1", ")", ",", "k", ".", "size", "(", "1", ")", ",", "v", ".", "size", "(", "1", ")", "\n", "\n", "# No residual for now", "\n", "# residual = q", "\n", "\n", "# Pass through the pre-attention projection: b x lq x (n*dv)", "\n", "# Separate different heads: b x lq x n x dv", "\n", "q", "=", "self", ".", "w_qs", "(", "q", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "n_head", ",", "d_k", ")", "\n", "k", "=", "self", ".", "w_ks", "(", "k", ")", ".", "view", "(", "sz_b", ",", "len_k", ",", "n_head", ",", "d_k", ")", "\n", "v", "=", "self", ".", "w_vs", "(", "v", ")", ".", "view", "(", "sz_b", ",", "len_v", ",", "n_head", ",", "d_v", ")", "\n", "\n", "# Transpose for attention dot product: b x n x lq x dv", "\n", "q", ",", "k", ",", "v", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ",", "k", ".", "transpose", "(", "1", ",", "2", ")", ",", "v", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "mask", "=", "mask", ".", "unsqueeze", "(", "1", ")", "# For head axis broadcasting.", "\n", "\n", "", "q", ",", "attn", "=", "self", ".", "attention", "(", "q", ",", "k", ",", "v", ",", "mask", "=", "mask", ")", "\n", "\n", "# Transpose to move the head dimension back: b x lq x n x dv", "\n", "# Combine the last two dimensions to concatenate all the heads together: b x lq x (n*dv)", "\n", "q", "=", "q", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "sz_b", ",", "len_q", ",", "-", "1", ")", "\n", "q", "=", "self", ".", "dropout", "(", "self", ".", "fc", "(", "q", ")", ")", "\n", "# q += residual", "\n", "\n", "# we sum all the values that were multiplied with attention weights", "\n", "q", "=", "q", ".", "sum", "(", "1", ")", "\n", "q", "=", "self", ".", "layer_norm", "(", "q", ")", "\n", "q", "=", "q", ".", "view", "(", "-", "1", ",", "q", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n", "return", "q", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagEncoder.__init__": [[210, 231], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TagEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "tag_encoder", "=", "Sequential", "(", "\n", "Linear", "(", "1000", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Linear", "(", "512", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Linear", "(", "512", ",", "1152", ")", ",", "\n", "BatchNorm1d", "(", "1152", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", ")", "\n", "\n", "self", ".", "fc_tag", "=", "Sequential", "(", "\n", "Linear", "(", "1152", ",", "1152", ",", "bias", "=", "False", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagEncoder.forward": [[233, 237], ["models_t1000_att.TagEncoder.tag_encoder", "models_t1000_att.TagEncoder.fc_tag"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tags", ")", ":", "\n", "        ", "z", "=", "self", ".", "tag_encoder", "(", "tags", ")", "\n", "z_d", "=", "self", ".", "fc_tag", "(", "z", ")", "\n", "return", "z", ",", "z_d", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagDecoder.__init__": [[240, 254], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size_w_rep", "=", "1152", ")", ":", "\n", "        ", "super", "(", "TagDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "tag_decoder", "=", "Sequential", "(", "\n", "Linear", "(", "size_w_rep", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Dropout", "(", ".25", ")", ",", "\n", "Linear", "(", "512", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ",", "\n", "ReLU", "(", ")", ",", "\n", "Linear", "(", "512", ",", "1000", ")", ",", "\n", "BatchNorm1d", "(", "1000", ")", ",", "\n", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.models_t1000_att.TagDecoder.forward": [[256, 258], ["models_t1000_att.TagDecoder.tag_decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "return", "self", ".", "tag_decoder", "(", "z", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.compute_roc_aucs": [[93, 104], ["sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_auc_score", "sklearn.metrics.roc_auc_score"], "function", ["None"], ["def", "compute_roc_aucs", "(", "y_test", ",", "y_prob", ")", ":", "\n", "    ", "macro_roc_auc_ovo", "=", "roc_auc_score", "(", "y_test", ",", "y_prob", ",", "multi_class", "=", "\"ovo\"", ",", "\n", "average", "=", "\"macro\"", ")", "\n", "weighted_roc_auc_ovo", "=", "roc_auc_score", "(", "y_test", ",", "y_prob", ",", "multi_class", "=", "\"ovo\"", ",", "\n", "average", "=", "\"weighted\"", ")", "\n", "macro_roc_auc_ovr", "=", "roc_auc_score", "(", "y_test", ",", "y_prob", ",", "multi_class", "=", "\"ovr\"", ",", "\n", "average", "=", "\"macro\"", ")", "\n", "weighted_roc_auc_ovr", "=", "roc_auc_score", "(", "y_test", ",", "y_prob", ",", "multi_class", "=", "\"ovr\"", ",", "\n", "average", "=", "\"weighted\"", ")", "\n", "\n", "return", "macro_roc_auc_ovo", ",", "weighted_roc_auc_ovo", ",", "macro_roc_auc_ovr", ",", "weighted_roc_auc_ovr", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_folds": [[107, 121], ["pandas.read_csv().values.tolist", "collections.defaultdict", "range", "[].append", "[].append", "pandas.read_csv", "numpy.load", "pathlib.Path", "file_name.split"], "function", ["None"], ["", "def", "create_folds", "(", "embedding_folder", ")", ":", "\n", "# slice_file_name\tfsID\tstart\tend\t    salience\tfold\tclassID\t    class", "\n", "    ", "data", "=", "pd", ".", "read_csv", "(", "US8K_MEDATADA_FILE", ",", "error_bad_lines", "=", "False", ")", ".", "values", ".", "tolist", "(", ")", "\n", "folds", "=", "[", "defaultdict", "(", "list", ")", "for", "_", "in", "range", "(", "10", ")", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "try", ":", "\n", "            ", "fold_idx", "=", "d", "[", "5", "]", "-", "1", "\n", "class_idx", "=", "d", "[", "6", "]", "\n", "file_name", "=", "d", "[", "0", "]", "\n", "folds", "[", "fold_idx", "]", "[", "'X'", "]", ".", "append", "(", "np", ".", "load", "(", "Path", "(", "embedding_folder", ",", "f'{file_name.split(\".\")[0]}.npy'", ")", ")", ")", "\n", "folds", "[", "fold_idx", "]", "[", "'y'", "]", ".", "append", "(", "class_idx", ")", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "return", "folds", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.return_other_fold_indexes": [[122, 124], ["range"], "function", ["None"], ["", "def", "return_other_fold_indexes", "(", "test_fold_idx", ")", ":", "\n", "    ", "return", "[", "i", "for", "i", "in", "range", "(", "10", ")", "if", "i", "!=", "test_fold_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.eval_US8K": [[125, 157], ["eval.create_folds", "enumerate", "print", "eval.return_other_fold_indexes", "numpy.array().squeeze", "numpy.array", "numpy.array().squeeze", "numpy.array", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler.fit", "sklearn.preprocessing.StandardScaler.transform", "sklearn.neural_network.MLPClassifier", "sklearn.neural_network.MLPClassifier.fit", "sklearn.preprocessing.StandardScaler.transform", "scores.append", "sklearn.neural_network.MLPClassifier.predict_proba", "roc_auc_scores.append", "numpy.mean", "list", "len", "X.mean.mean", "len", "X_test.mean.mean", "sklearn.neural_network.MLPClassifier.score", "eval.compute_roc_aucs", "numpy.mean", "numpy.array", "itertools.chain", "numpy.array", "zip", "list", "numpy.mean", "itertools.chain", "zip"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_folds", "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.return_other_fold_indexes", "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.compute_roc_aucs"], ["", "def", "eval_US8K", "(", "embedding_folder", ")", ":", "\n", "    ", "folds", "=", "create_folds", "(", "embedding_folder", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "roc_auc_scores", "=", "[", "]", "\n", "\n", "for", "fold_idx", ",", "test_fold", "in", "enumerate", "(", "folds", ")", ":", "\n", "        ", "other_fold_indexes", "=", "return_other_fold_indexes", "(", "fold_idx", ")", "\n", "X", "=", "np", ".", "array", "(", "list", "(", "chain", "(", "*", "[", "folds", "[", "idx", "]", "[", "'X'", "]", "for", "idx", "in", "other_fold_indexes", "]", ")", ")", ")", ".", "squeeze", "(", ")", "\n", "y", "=", "np", ".", "array", "(", "list", "(", "chain", "(", "*", "[", "folds", "[", "idx", "]", "[", "'y'", "]", "for", "idx", "in", "other_fold_indexes", "]", ")", ")", ")", "\n", "X_test", "=", "np", ".", "array", "(", "test_fold", "[", "'X'", "]", ")", ".", "squeeze", "(", ")", "\n", "y_test", "=", "np", ".", "array", "(", "test_fold", "[", "'y'", "]", ")", "\n", "\n", "if", "len", "(", "X_test", ".", "shape", ")", ">", "2", ":", "\n", "            ", "X", "=", "X", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "scaler", "=", "StandardScaler", "(", ")", "\n", "scaler", ".", "fit", "(", "X", ")", "\n", "X", "=", "scaler", ".", "transform", "(", "X", ")", "\n", "\n", "clf", "=", "MLPClassifier", "(", "hidden_layer_sizes", "=", "(", "256", ",", ")", ")", "\n", "clf", ".", "fit", "(", "X", ",", "y", ")", "\n", "\n", "if", "len", "(", "X_test", ".", "shape", ")", ">", "2", ":", "\n", "            ", "X_test", "=", "X_test", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "X_test", "=", "scaler", ".", "transform", "(", "X_test", ")", "\n", "scores", ".", "append", "(", "clf", ".", "score", "(", "X_test", ",", "y_test", ")", ")", "\n", "y_prob", "=", "clf", ".", "predict_proba", "(", "X_test", ")", "\n", "roc_auc_scores", ".", "append", "(", "compute_roc_aucs", "(", "y_test", ",", "y_prob", ")", ")", "\n", "\n", "", "print", "(", "f'\\nScores: {roc_auc_scores}, mean: {[np.mean(s) for s in zip(*roc_auc_scores)]}\\n'", ")", "\n", "\n", "return", "np", ".", "mean", "(", "scores", ")", ",", "[", "np", ".", "mean", "(", "s", ")", "for", "s", "in", "zip", "(", "*", "roc_auc_scores", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_dataset_gtzan": [[160, 189], ["pandas.read_csv().values.tolist", "pandas.read_csv().values.tolist", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "pathlib.Path", "np.array.append", "np.array.append", "pathlib.Path", "np.array.append", "np.array.append", "pathlib.Path", "numpy.load", "pathlib.Path", "numpy.load", "pandas.read_csv", "pandas.read_csv", "pathlib.Path.stem.split", "pathlib.Path.stem.split"], "function", ["None"], ["", "def", "create_dataset_gtzan", "(", "embedding_folder", ")", ":", "\n", "    ", "train_files", "=", "pd", ".", "read_csv", "(", "GTZAN_TRAIN_FILE", ",", "error_bad_lines", "=", "False", ")", ".", "values", ".", "tolist", "(", ")", "\n", "test_files", "=", "pd", ".", "read_csv", "(", "GTZAN_TEST_FILE", ",", "error_bad_lines", "=", "False", ")", ".", "values", ".", "tolist", "(", ")", "\n", "\n", "X_train", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "X_test", "=", "[", "]", "\n", "y_test", "=", "[", "]", "\n", "\n", "for", "f_name", "in", "train_files", ":", "\n", "        ", "f_name", "=", "Path", "(", "f_name", "[", "0", "]", ")", ".", "stem", "\n", "f", "=", "Path", "(", "embedding_folder", ",", "f'{f_name}.npy'", ")", "\n", "label_idx", "=", "GTZAN_CLASS_MAPPING", "[", "f", ".", "stem", ".", "split", "(", "'.'", ")", "[", "0", "]", "]", "\n", "X_train", ".", "append", "(", "np", ".", "load", "(", "f", ")", ")", "\n", "y_train", ".", "append", "(", "label_idx", ")", "\n", "\n", "", "for", "f_name", "in", "test_files", ":", "\n", "        ", "f_name", "=", "Path", "(", "f_name", "[", "0", "]", ")", ".", "stem", "\n", "f", "=", "Path", "(", "embedding_folder", ",", "f'{f_name}.npy'", ")", "\n", "label_idx", "=", "GTZAN_CLASS_MAPPING", "[", "f", ".", "stem", ".", "split", "(", "'.'", ")", "[", "0", "]", "]", "\n", "X_test", ".", "append", "(", "np", ".", "load", "(", "f", ")", ")", "\n", "y_test", ".", "append", "(", "label_idx", ")", "\n", "\n", "", "X_train", "=", "np", ".", "array", "(", "X_train", ")", "\n", "y_train", "=", "np", ".", "array", "(", "y_train", ")", "\n", "X_test", "=", "np", ".", "array", "(", "X_test", ")", "\n", "y_test", "=", "np", ".", "array", "(", "y_test", ")", "\n", "\n", "return", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.eval_gtzan_fault_filtered": [[190, 214], ["eval.create_dataset_gtzan", "print", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler.fit", "sklearn.preprocessing.StandardScaler.transform", "print", "sklearn.neural_network.MLPClassifier", "sklearn.neural_network.MLPClassifier.fit", "print", "sklearn.preprocessing.StandardScaler.transform", "sklearn.neural_network.MLPClassifier.score", "sklearn.neural_network.MLPClassifier.predict_proba", "eval.compute_roc_aucs", "print", "len", "X_train.mean.mean", "len", "X_test.mean.mean"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_dataset_gtzan", "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.compute_roc_aucs"], ["", "def", "eval_gtzan_fault_filtered", "(", "embedding_folder", ")", ":", "\n", "    ", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "=", "create_dataset_gtzan", "(", "embedding_folder", ")", "\n", "\n", "print", "(", "\"aggregate and scale...\"", ")", "\n", "if", "len", "(", "X_train", ".", "shape", ")", ">", "2", ":", "\n", "        ", "X_train", "=", "X_train", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "scaler", "=", "StandardScaler", "(", ")", "\n", "scaler", ".", "fit", "(", "X_train", ")", "\n", "X_train", "=", "scaler", ".", "transform", "(", "X_train", ")", "\n", "\n", "print", "(", "\"train...\"", ")", "\n", "clf", "=", "MLPClassifier", "(", "hidden_layer_sizes", "=", "(", "256", ",", ")", ")", "\n", "clf", ".", "fit", "(", "X_train", ",", "y_train", ")", "\n", "\n", "print", "(", "\"eval...\"", ")", "\n", "if", "len", "(", "X_test", ".", "shape", ")", ">", "2", ":", "\n", "        ", "X_test", "=", "X_test", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "X_test", "=", "scaler", ".", "transform", "(", "X_test", ")", "\n", "score", "=", "clf", ".", "score", "(", "X_test", ",", "y_test", ")", "\n", "y_prob", "=", "clf", ".", "predict_proba", "(", "X_test", ")", "\n", "roc_auc_score", "=", "compute_roc_aucs", "(", "y_test", ",", "y_prob", ")", "\n", "\n", "print", "(", "f'\\MLP score: {roc_auc_score}\\n'", ")", "\n", "return", "score", ",", "roc_auc_score", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_dataset_nsynth": [[217, 251], ["print", "pathlib.Path", "tqdm.tqdm", "numpy.array", "numpy.array", "print", "pathlib.Path", "tqdm.tqdm", "numpy.array", "numpy.array", "pathlib.Path.iterdir", "pathlib.Path.iterdir", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "numpy.load", "numpy.load", "f.stem.split", "f.stem.split"], "function", ["None"], ["", "def", "create_dataset_nsynth", "(", "embedding_folder_train", ",", "embedding_folder_test", ")", ":", "\n", "    ", "print", "(", "\"loading train data...\"", ")", "\n", "p", "=", "Path", "(", "embedding_folder_train", ")", "\n", "X_train", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "for", "f", "in", "tqdm", "(", "p", ".", "iterdir", "(", ")", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "'_d'", "not", "in", "f", ".", "stem", ":", "\n", "                ", "label_idx", "=", "NSYNTH_CLASS_MAPPING", "[", "f", ".", "stem", ".", "split", "(", "'_'", ")", "[", "0", "]", "]", "\n", "X_train", ".", "append", "(", "np", ".", "load", "(", "f", ")", ")", "\n", "y_train", ".", "append", "(", "label_idx", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "", "X_train", "=", "np", ".", "array", "(", "X_train", ")", "\n", "y_train", "=", "np", ".", "array", "(", "y_train", ")", "\n", "\n", "print", "(", "\"loading test data...\"", ")", "\n", "p", "=", "Path", "(", "embedding_folder_test", ")", "\n", "X_test", "=", "[", "]", "\n", "y_test", "=", "[", "]", "\n", "for", "f", "in", "tqdm", "(", "p", ".", "iterdir", "(", ")", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "'_d'", "not", "in", "f", ".", "stem", ":", "\n", "                ", "label_idx", "=", "NSYNTH_CLASS_MAPPING", "[", "f", ".", "stem", ".", "split", "(", "'_'", ")", "[", "0", "]", "]", "\n", "X_test", ".", "append", "(", "np", ".", "load", "(", "f", ")", ")", "\n", "y_test", ".", "append", "(", "label_idx", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n", "", "", "X_test", "=", "np", ".", "array", "(", "X_test", ")", "\n", "y_test", "=", "np", ".", "array", "(", "y_test", ")", "\n", "\n", "return", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.eval_nsynth": [[252, 276], ["eval.create_dataset_nsynth", "print", "sklearn.preprocessing.StandardScaler", "sklearn.preprocessing.StandardScaler.fit", "sklearn.preprocessing.StandardScaler.transform", "print", "sklearn.neural_network.MLPClassifier", "sklearn.neural_network.MLPClassifier.fit", "print", "sklearn.preprocessing.StandardScaler.transform", "sklearn.neural_network.MLPClassifier.score", "sklearn.neural_network.MLPClassifier.predict_proba", "eval.compute_roc_aucs", "print", "len", "X_train.mean.mean", "len", "X_test.mean.mean"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.create_dataset_nsynth", "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.eval.compute_roc_aucs"], ["", "def", "eval_nsynth", "(", "embedding_folder_train", ",", "embedding_folder_test", ")", ":", "\n", "    ", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "=", "create_dataset_nsynth", "(", "embedding_folder_train", ",", "embedding_folder_test", ")", "\n", "\n", "print", "(", "\"aggregate and scale...\"", ")", "\n", "if", "len", "(", "X_train", ".", "shape", ")", ">", "2", ":", "\n", "        ", "X_train", "=", "X_train", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "scaler", "=", "StandardScaler", "(", ")", "\n", "scaler", ".", "fit", "(", "X_train", ")", "\n", "X_train", "=", "scaler", ".", "transform", "(", "X_train", ")", "\n", "\n", "print", "(", "\"train...\"", ")", "\n", "clf", "=", "MLPClassifier", "(", "hidden_layer_sizes", "=", "(", "256", ",", ")", ")", "\n", "clf", ".", "fit", "(", "X_train", ",", "y_train", ")", "\n", "\n", "print", "(", "\"eval...\"", ")", "\n", "if", "len", "(", "X_test", ".", "shape", ")", ">", "2", ":", "\n", "        ", "X_test", "=", "X_test", ".", "mean", "(", "axis", "=", "1", ")", "\n", "", "X_test", "=", "scaler", ".", "transform", "(", "X_test", ")", "\n", "score", "=", "clf", ".", "score", "(", "X_test", ",", "y_test", ")", "\n", "y_prob", "=", "clf", ".", "predict_proba", "(", "X_test", ")", "\n", "roc_auc_score", "=", "compute_roc_aucs", "(", "y_test", ",", "y_prob", ")", "\n", "\n", "print", "(", "f'\\MLP score: {roc_auc_score}\\n'", ")", "\n", "return", "score", ",", "roc_auc_score", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.train_ae_att.main": [[7, 13], ["json.load", "print", "print", "dual_ae_att_trainer.DualAEAttTrainer", "dual_ae_att_trainer.DualAEAttTrainer.train", "open", "json.dumps"], "function", ["None"], ["def", "main", "(", "config_file", ")", ":", "\n", "    ", "params", "=", "json", ".", "load", "(", "open", "(", "config_file", ",", "'rb'", ")", ")", "\n", "print", "(", "\"Training Dual AutoEncoder with params:\"", ")", "\n", "print", "(", "json", ".", "dumps", "(", "params", ",", "separators", "=", "(", "\"\\n\"", ",", "\": \"", ")", ",", "indent", "=", "4", ")", ")", "\n", "trainer", "=", "DualAEAttTrainer", "(", "params", ")", "\n", "trainer", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.correloss.corre_loss": [[12, 53], ["torch.zeros", "range", "x.size", "torch.nn.functional.pad", "functional.pad.size", "functional.pad.size", "_x[].permute", "range", "x.size", "y.size", "y[].permute", "torch.nn.functional.conv1d().sum", "functional.conv1d().sum.sum().div().neg().exp().sum", "y.size", "x.size", "divmod", "tuple", "torch.nn.functional.conv1d", "functional.conv1d().sum.sum().div().neg().exp", "functional.conv1d().sum.sum().div().neg", "functional.conv1d().sum.sum().div", "functional.conv1d().sum.sum"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.pad"], ["def", "corre_loss", "(", "x", ":", "Tensor", ",", "\n", "y", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "    ", "\"\"\"Correlation loss.\n\n    :param x: First modality (e.g. audio). Shape must be\n              batch x time1 x features. \n    :type x: torch.Tensor\n    :param y: Second modality (e.g. text). Shape must be\n              batch x time2 x features.\n    :type y: torch.Tensor\n    :returns: Correlation loss. Return shape is\n              batch x batch.\n    :rtype: torch.Tensor\n    \"\"\"", "\n", "b_size", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "loss", "=", "zeros", "(", "b_size", ",", "b_size", ")", "\n", "\n", "if", "x", ".", "size", "(", ")", "[", "1", "]", "<", "y", ".", "size", "(", ")", "[", "1", "]", ":", "\n", "        ", "t_dif", "=", "y", ".", "size", "(", ")", "[", "1", "]", "-", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "\n", "pad", "=", "[", "t_dif", "//", "2", ",", "t_dif", "//", "2", "]", "\n", "if", "divmod", "(", "t_dif", ",", "2", ")", "[", "-", "1", "]", "!=", "0", ":", "\n", "            ", "pad", "[", "0", "]", "+=", "1", "\n", "\n", "", "_x", "=", "functional", ".", "pad", "(", "x", ",", "(", "0", ",", "0", ",", ")", "+", "tuple", "(", "pad", ")", ",", "'constant'", ",", "0", ")", "\n", "\n", "", "else", ":", "\n", "        ", "_x", "=", "x", "\n", "\n", "", "_x_time", "=", "_x", ".", "size", "(", ")", "[", "1", "]", "\n", "_x_feats", "=", "_x", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "for", "b_row", "in", "range", "(", "b_size", ")", ":", "\n", "        ", "x_", "=", "_x", "[", "b_row", ":", "b_row", "+", "1", "]", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "for", "b_col", "in", "range", "(", "b_size", ")", ":", "\n", "            ", "y_", "=", "y", "[", "b_col", ":", "b_col", "+", "1", "]", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "tmp", "=", "functional", ".", "conv1d", "(", "x_", ",", "y_", ")", ".", "sum", "(", "-", "1", ")", "\n", "loss", "[", "b_row", ",", "b_col", "]", "=", "tmp", ".", "sum", "(", "1", ")", ".", "div", "(", "_x_time", "*", "_x_feats", ")", ".", "neg", "(", ")", ".", "exp", "(", ")", ".", "sum", "(", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.__init__": [[26, 33], ["print"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "valmax", ",", "maxbar", ",", "title", ")", ":", "\n", "        ", "if", "valmax", "==", "0", ":", "valmax", "=", "1", "\n", "if", "maxbar", ">", "200", ":", "maxbar", "=", "200", "\n", "self", ".", "valmax", "=", "valmax", "\n", "self", ".", "maxbar", "=", "maxbar", "\n", "self", ".", "title", "=", "title", "\n", "print", "(", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.ProgressBar.update": [[34, 58], ["round", "int", "sys.stdout.write", "sys.stdout.flush", "float", "float", "float"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "avg_loss", "=", "0", ")", ":", "\n", "# format", "\n", "        ", "if", "val", ">", "self", ".", "valmax", ":", "val", "=", "self", ".", "valmax", "\n", "\n", "# process", "\n", "perc", "=", "round", "(", "(", "float", "(", "val", ")", "/", "float", "(", "self", ".", "valmax", ")", ")", "*", "100", ")", "\n", "scale", "=", "100.0", "/", "float", "(", "self", ".", "maxbar", ")", "\n", "bar", "=", "int", "(", "perc", "/", "scale", ")", "\n", "\n", "# render", "\n", "if", "avg_loss", ":", "\n", "# out = '\\r %20s [%s%s] %3d / %3d  cost: %.2f  r_loss: %.0f  l_loss: %.4f  clf_loss: %.4f' % (", "\n", "            ", "out", "=", "'\\r %20s [%s%s] %3d / %3d  loss: %.5f'", "%", "(", "\n", "self", ".", "title", ",", "\n", "'='", "*", "bar", ",", "' '", "*", "(", "self", ".", "maxbar", "-", "bar", ")", ",", "\n", "val", ",", "\n", "self", ".", "valmax", ",", "\n", "avg_loss", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "'\\r %20s [%s%s] %3d / %3d '", "%", "(", "self", ".", "title", ",", "'='", "*", "bar", ",", "' '", "*", "(", "self", ".", "maxbar", "-", "bar", ")", ",", "val", ",", "self", ".", "valmax", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "write", "(", "out", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.logme": [[12, 20], ["functools.wraps", "print", "print", "print", "f", "f.__name__.upper"], "function", ["None"], ["def", "logme", "(", "f", ")", ":", "\n", "    ", "@", "functools", ".", "wraps", "(", "f", ")", "\n", "def", "wrapped", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "print", "(", "'\\n-----------------\\n'", ")", "\n", "print", "(", "'   MODEL: {}'", ".", "format", "(", "f", ".", "__name__", ".", "upper", "(", ")", ")", ")", "\n", "print", "(", "'\\n-----------------\\n'", ")", "\n", "return", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "wrapped", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.pad": [[60, 66], ["numpy.zeros", "numpy.random.rand().astype", "numpy.random.rand"], "function", ["None"], ["", "", "def", "pad", "(", "l", ",", "sr", ")", ":", "\n", "# 0-Pad 10 sec at fs hz and add little noise", "\n", "    ", "z", "=", "np", ".", "zeros", "(", "10", "*", "sr", ",", "dtype", "=", "'float32'", ")", "\n", "z", "[", ":", "l", ".", "size", "]", "=", "l", "\n", "z", "=", "z", "+", "5", "*", "1e-4", "*", "np", ".", "random", ".", "rand", "(", "z", ".", "size", ")", ".", "astype", "(", "'float32'", ")", "\n", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.compute_spectrogram": [[68, 82], ["librosa.feature.melspectrogram", "numpy.log", "librosa.load", "utils.pad", "soundfile.read", "librosa.core.resample", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.pad"], ["", "def", "compute_spectrogram", "(", "filename", ",", "sr", "=", "22000", ",", "n_mels", "=", "96", ")", ":", "\n", "# zero pad and compute log mel spec", "\n", "    ", "try", ":", "\n", "        ", "audio", ",", "sr", "=", "librosa", ".", "load", "(", "filename", ",", "sr", "=", "sr", ",", "res_type", "=", "'kaiser_fast'", ")", "\n", "", "except", ":", "\n", "        ", "audio", ",", "o_sr", "=", "sf", ".", "read", "(", "filename", ")", "\n", "audio", "=", "librosa", ".", "core", ".", "resample", "(", "audio", ",", "o_sr", ",", "sr", ")", "\n", "", "try", ":", "\n", "        ", "x", "=", "pad", "(", "audio", ",", "sr", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "x", "=", "audio", "\n", "", "audio_rep", "=", "librosa", ".", "feature", ".", "melspectrogram", "(", "y", "=", "x", ",", "sr", "=", "sr", ",", "hop_length", "=", "512", ",", "n_fft", "=", "1024", ",", "n_mels", "=", "n_mels", ",", "power", "=", "1.", ")", "\n", "audio_rep", "=", "np", ".", "log", "(", "audio_rep", "+", "np", ".", "finfo", "(", "np", ".", "float32", ")", ".", "eps", ")", "\n", "return", "audio_rep", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.return_spectrogram_max_nrg_frame": [[84, 88], ["librosa.util.frame", "numpy.argmax", "numpy.asfortranarray", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "return_spectrogram_max_nrg_frame", "(", "spectrogram", ")", ":", "\n", "    ", "frames", "=", "librosa", ".", "util", ".", "frame", "(", "np", ".", "asfortranarray", "(", "spectrogram", ")", ",", "frame_length", "=", "96", ",", "hop_length", "=", "12", ")", "\n", "idx_max_nrg", "=", "np", ".", "argmax", "(", "np", ".", "sum", "(", "np", ".", "sum", "(", "frames", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", ")", "\n", "return", "frames", "[", ":", ",", ":", ",", "idx_max_nrg", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.return_spectrogram_3_max_nrg_frames": [[90, 94], ["librosa.util.frame", "numpy.asfortranarray", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "return_spectrogram_3_max_nrg_frames", "(", "spectrogram", ")", ":", "\n", "    ", "frames", "=", "librosa", ".", "util", ".", "frame", "(", "np", ".", "asfortranarray", "(", "spectrogram", ")", ",", "frame_length", "=", "96", ",", "hop_length", "=", "12", ")", "\n", "idxes_max_nrg", "=", "(", "-", "np", ".", "sum", "(", "np", ".", "sum", "(", "frames", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", ")", ".", "argsort", "(", ")", "[", ":", "3", "]", "\n", "return", "frames", "[", ":", ",", ":", ",", "idxes_max_nrg", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.spectrogram_to_audio": [[96, 100], ["numpy.exp", "librosa.feature.inverse.mel_to_audio", "librosa.output.write_wav"], "function", ["None"], ["", "def", "spectrogram_to_audio", "(", "filename", ",", "y", ",", "sr", "=", "22000", ")", ":", "\n", "    ", "y", "=", "np", ".", "exp", "(", "y", ")", "\n", "x", "=", "librosa", ".", "feature", ".", "inverse", ".", "mel_to_audio", "(", "y", ",", "sr", "=", "sr", ",", "n_fft", "=", "1024", ",", "hop_length", "=", "512", ",", "power", "=", "1.", ")", "\n", "librosa", ".", "output", ".", "write_wav", "(", "filename", ",", "x", ",", "sr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.kullback_leibler": [[102, 113], ["y.add().log", "y_hat.add().log", "y.add", "y_hat.add"], "function", ["None"], ["", "def", "kullback_leibler", "(", "y_hat", ",", "y", ")", ":", "\n", "    ", "\"\"\"Generalized Kullback Leibler divergence.\n    :param y_hat: The predicted distribution.\n    :type y_hat: torch.Tensor\n    :param y: The true distribution.\n    :type y: torch.Tensor\n    :return: The generalized Kullback Leibler divergence\\\n             between predicted and true distributions.\n    :rtype: torch.Tensor\n    \"\"\"", "\n", "return", "(", "y", "*", "(", "y", ".", "add", "(", "1e-5", ")", ".", "log", "(", ")", "-", "y_hat", ".", "add", "(", "1e-5", ")", ".", "log", "(", ")", ")", "+", "(", "y_hat", "-", "y", ")", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.embeddings_to_cosine_similarity_matrix": [[115, 123], ["torch.matmul", "torch.norm", "z.t", "torch.norm.unsqueeze", "torch.norm.unsqueeze"], "function", ["None"], ["", "def", "embeddings_to_cosine_similarity_matrix", "(", "z", ")", ":", "\n", "    ", "\"\"\"Converts a a tensor of n embeddings to an (n, n) tensor of similarities.\n    \"\"\"", "\n", "cosine_similarity", "=", "torch", ".", "matmul", "(", "z", ",", "z", ".", "t", "(", ")", ")", "\n", "embedding_norms", "=", "torch", ".", "norm", "(", "z", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "embedding_norms_mat", "=", "embedding_norms", ".", "unsqueeze", "(", "0", ")", "*", "embedding_norms", ".", "unsqueeze", "(", "1", ")", "\n", "cosine_similarity", "=", "cosine_similarity", "/", "(", "embedding_norms_mat", ")", "\n", "return", "cosine_similarity", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.contrastive_loss": [[125, 144], ["torch.cat", "utils.embeddings_to_cosine_similarity_matrix", "int", "torch.exp", "torch.exp.sum", "torch.cat", "torch.log().neg().mean", "s[].diag", "s[].diag", "torch.log().neg", "torch.eye().cuda", "torch.eye", "torch.log", "torch.eye", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.embeddings_to_cosine_similarity_matrix"], ["", "def", "contrastive_loss", "(", "z_audio", ",", "z_tag", ",", "t", "=", "1", ")", ":", "\n", "    ", "\"\"\"Computes contrastive loss following the paper:\n        A Simple Framework for Contrastive Learning of Visual Representations\n        https://arxiv.org/pdf/2002.05709v1.pdf\n        TODO: make it robust to NaN (with low values of t it happens). \n        e.g Cast to double float for exp calculation.\n    \"\"\"", "\n", "z", "=", "torch", ".", "cat", "(", "(", "z_audio", ",", "z_tag", ")", ",", "dim", "=", "0", ")", "\n", "s", "=", "embeddings_to_cosine_similarity_matrix", "(", "z", ")", "\n", "N", "=", "int", "(", "s", ".", "shape", "[", "0", "]", "/", "2", ")", "\n", "s", "=", "torch", ".", "exp", "(", "s", "/", "t", ")", "\n", "try", ":", "\n", "        ", "s", "=", "s", "*", "(", "1", "-", "torch", ".", "eye", "(", "len", "(", "s", ")", ",", "len", "(", "s", ")", ")", ".", "cuda", "(", ")", ")", "\n", "# s[range(len(s)), range(len(s))] = torch.zeros((len(s),)).cuda()", "\n", "", "except", "AssertionError", ":", "\n", "        ", "s", "=", "s", "*", "(", "1", "-", "torch", ".", "eye", "(", "len", "(", "s", ")", ",", "len", "(", "s", ")", ")", ")", "\n", "", "denom", "=", "s", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "num", "=", "torch", ".", "cat", "(", "(", "s", "[", ":", "N", ",", "N", ":", "]", ".", "diag", "(", ")", ",", "s", "[", "N", ":", ",", ":", "N", "]", ".", "diag", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "return", "torch", ".", "log", "(", "(", "num", "/", "denom", ")", "+", "1e-5", ")", ".", "neg", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.utils.contrastive_corr_loss": [[146, 157], ["correloss.corre_loss", "int", "correloss.corre_loss.sum", "torch.cat", "torch.log().neg().mean", "s[].diag", "s[].diag", "torch.log().neg", "torch.eye().cuda", "torch.eye", "torch.log", "torch.eye", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.correloss.corre_loss"], ["", "def", "contrastive_corr_loss", "(", "z_audio", ",", "z_tag", ",", "t", "=", "1", ")", ":", "\n", "    ", "s", "=", "corre_loss", "(", "z_audio", ",", "z_tag", ")", "\n", "N", "=", "int", "(", "s", ".", "shape", "[", "0", "]", "/", "2", ")", "\n", "try", ":", "\n", "        ", "s", "=", "s", "*", "(", "1", "-", "torch", ".", "eye", "(", "len", "(", "s", ")", ",", "len", "(", "s", ")", ")", ".", "cuda", "(", ")", ")", "\n", "# s[range(len(s)), range(len(s))] = torch.zeros((len(s),)).cuda()", "\n", "", "except", "AssertionError", ":", "\n", "        ", "s", "=", "s", "*", "(", "1", "-", "torch", ".", "eye", "(", "len", "(", "s", ")", ",", "len", "(", "s", ")", ")", ")", "\n", "", "denom", "=", "s", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "num", "=", "torch", ".", "cat", "(", "(", "s", "[", ":", "N", ",", "N", ":", "]", ".", "diag", "(", ")", ",", "s", "[", "N", ":", ",", ":", "N", "]", ".", "diag", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "return", "torch", ".", "log", "(", "(", "num", "/", "denom", ")", "+", "1e-5", ")", ".", "neg", "(", ")", ".", "mean", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.preproc_tags.singular_form": [[32, 38], ["p.singular_noun"], "function", ["None"], ["def", "singular_form", "(", "term", ")", ":", "\n", "    ", "out", "=", "p", ".", "singular_noun", "(", "term", ")", "\n", "if", "out", ":", "\n", "        ", "return", "out", "\n", "", "else", ":", "\n", "        ", "return", "term", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.preproc_tags.preprocess": [[40, 56], ["list", "tags.split.split", "preproc_tags.singular_form", "set", "item.lower", "result.append", "item.isalpha", "len"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.preproc_tags.singular_form"], ["", "", "def", "preprocess", "(", "tags", ")", ":", "\n", "    ", "result", "=", "[", "]", "\n", "try", ":", "\n", "        ", "tags", "=", "tags", ".", "split", "(", "' '", ")", "\n", "tags", "=", "[", "item", ".", "lower", "(", ")", "for", "item", "in", "tags", "if", "item", ".", "isalpha", "(", ")", "]", "\n", "", "except", "AttributeError", ":", "# NaN", "\n", "        ", "return", "[", "]", "\n", "", "for", "tag", "in", "tags", ":", "\n", "        ", "if", "tag", "not", "in", "STOPWORDS", "and", "len", "(", "tag", ")", ">", "1", ":", "\n", "            ", "result", ".", "append", "(", "tag", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "# print(tag)", "\n", "", "", "result", "=", "[", "singular_form", "(", "tag", ")", "for", "tag", "in", "result", "]", "\n", "\n", "return", "list", "(", "set", "(", "result", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.plot_embeddings.extract_audio_tag_embeddings": [[29, 88], ["encode.return_loaded_model", "encode.return_loaded_model", "enumerate", "numpy.concatenate", "sklearn.manifold.TSNE", "sklearn.manifold.TSNE.fit_transform", "matplotlib.figure", "plt.figure.add_subplot", "enumerate", "enumerate", "zip", "matplotlib.title", "matplotlib.legend", "matplotlib.show", "sound_id.tolist", "tsne.fit_transform.view().clamp", "tags.float().clamp.float().clamp", "encode.return_loaded_model.", "encode.return_loaded_model.", "audio_embeddings.append", "tag_embeddings.append", "numpy.array().reshape", "numpy.array().reshape", "fig.add_subplot.scatter", "fig.add_subplot.scatter", "fig.add_subplot.plot", "matplotlib.lines.Line2D", "matplotlib.lines.Line2D", "enumerate", "z_audio.tolist", "z_tags.tolist", "len", "len", "list", "tsne.fit_transform.view", "tags.float().clamp.float", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.return_loaded_model", "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.return_loaded_model"], ["def", "extract_audio_tag_embeddings", "(", ")", ":", "\n", "    ", "sound_id2idx", "=", "{", "id", ":", "idx", "for", "idx", ",", "id", "in", "\n", "enumerate", "(", "list", "(", "dataset_val", ".", "h_file", "[", "'dataset'", "]", "[", "'id'", "]", "[", ":", ",", "0", "]", ")", ")", "}", "\n", "\n", "audio_encoder", "=", "return_loaded_model", "(", "AudioEncoder", ",", "'../saved_models/dual_ae_c/audio_encoder_epoch_200.pt'", ")", "\n", "tag_encoder", "=", "return_loaded_model", "(", "TagEncoder", ",", "'../saved_models/dual_ae_c/tag_encoder_epoch_200.pt'", ")", "\n", "\n", "audio_embeddings", "=", "[", "]", "\n", "tag_embeddings", "=", "[", "]", "\n", "sound_ids", "=", "[", "]", "\n", "\n", "for", "idx", ",", "(", "data", ",", "tags", ",", "sound_id", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "        ", "sound_ids", "+=", "sound_id", ".", "tolist", "(", ")", "\n", "x", "=", "data", ".", "view", "(", "-", "1", ",", "1", ",", "96", ",", "96", ")", ".", "clamp", "(", "0", ")", "\n", "tags", "=", "tags", ".", "float", "(", ")", ".", "clamp", "(", "0", ")", "\n", "\n", "# encode", "\n", "z_audio", ",", "z_d_audio", "=", "audio_encoder", "(", "x", ")", "\n", "z_tags", ",", "z_d_tags", "=", "tag_encoder", "(", "tags", ")", "\n", "\n", "audio_embeddings", ".", "append", "(", "z_audio", ".", "tolist", "(", ")", ")", "\n", "tag_embeddings", ".", "append", "(", "z_tags", ".", "tolist", "(", ")", ")", "\n", "\n", "if", "idx", "==", "N", ":", "\n", "            ", "break", "\n", "\n", "", "", "size_embedding", "=", "z_tags", ".", "shape", "[", "1", "]", "\n", "audio_embeddings", "=", "np", ".", "array", "(", "audio_embeddings", ")", ".", "reshape", "(", "len", "(", "audio_embeddings", ")", ",", "size_embedding", ")", "[", ":", "N", ",", ":", "]", "\n", "tag_embeddings", "=", "np", ".", "array", "(", "tag_embeddings", ")", ".", "reshape", "(", "len", "(", "tag_embeddings", ")", ",", "size_embedding", ")", "[", ":", "N", ",", ":", "]", "\n", "\n", "data", "=", "np", ".", "concatenate", "(", "(", "audio_embeddings", ",", "tag_embeddings", ")", ",", "0", ")", "\n", "tsne", "=", "sklearn", ".", "manifold", ".", "TSNE", "(", "n_components", "=", "2", ")", "\n", "data", "=", "tsne", ".", "fit_transform", "(", "data", ")", "\n", "audio_embeddings_tsne", "=", "data", "[", ":", "N", ",", ":", "]", "\n", "tag_embeddings_tsne", "=", "data", "[", "N", ":", ",", ":", "]", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "\n", "for", "idx", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "audio_embeddings_tsne", ")", ":", "\n", "        ", "ax", ".", "scatter", "(", "x", ",", "y", ",", "alpha", "=", "0.8", ",", "c", "=", "'red'", ",", "edgecolors", "=", "'none'", ",", "s", "=", "8", ")", "\n", "# ax.annotate(sound_ids[idx][0], (x, y))", "\n", "\n", "", "for", "idx", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "tag_embeddings_tsne", ")", ":", "\n", "        ", "ax", ".", "scatter", "(", "x", ",", "y", ",", "alpha", "=", "0.8", ",", "c", "=", "'blue'", ",", "edgecolors", "=", "'none'", ",", "s", "=", "8", ")", "\n", "# ax.annotate(sound_ids[idx][0], (x, y))", "\n", "\n", "", "for", "(", "x0", ",", "y0", ")", ",", "(", "x1", ",", "y1", ")", "in", "zip", "(", "audio_embeddings_tsne", ",", "tag_embeddings_tsne", ")", ":", "\n", "        ", "ax", ".", "plot", "(", "(", "x0", ",", "x1", ")", ",", "(", "y0", ",", "y1", ")", ",", "linewidth", "=", "0.2", ",", "color", "=", "'black'", ",", "alpha", "=", "0.6", ")", "\n", "\n", "", "plt", ".", "title", "(", "'Visualisation of the aligned learnt representations (TSNE)'", ")", "\n", "legend_elements", "=", "[", "\n", "Line2D", "(", "[", "0", "]", ",", "[", "0", "]", ",", "marker", "=", "'o'", ",", "color", "=", "'w'", ",", "label", "=", "'audio'", ",", "\n", "markerfacecolor", "=", "'red'", ",", "markersize", "=", "5", ")", ",", "\n", "Line2D", "(", "[", "0", "]", ",", "[", "0", "]", ",", "marker", "=", "'o'", ",", "color", "=", "'w'", ",", "label", "=", "'tags'", ",", "\n", "markerfacecolor", "=", "'blue'", ",", "markersize", "=", "5", ")", ",", "\n", "]", "\n", "plt", ".", "legend", "(", "handles", "=", "legend_elements", ",", "loc", "=", "2", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.plot_tag_embeddings.plot_tag_embeddings": [[17, 39], ["encode.return_loaded_model", "json.load", "json.load.items", "numpy.array().reshape", "sklearn.manifold.TSNE", "sklearn.manifold.TSNE.fit_transform", "matplotlib.pyplot.subplots", "enumerate", "matplotlib.pyplot.show", "open", "int", "torch.tensor().view().float", "encode.return_loaded_model.", "tag_embeddings.append", "ax.scatter", "ax.annotate", "embedding.tolist", "numpy.array", "torch.tensor().view", "str", "torch.tensor", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.None.encode.return_loaded_model"], ["def", "plot_tag_embeddings", "(", ")", ":", "\n", "    ", "tag_encoder", "=", "return_loaded_model", "(", "TagEncoder", ",", "'../saved_models/dual_ae_c/tag_encoder_epoch_200.pt'", ")", "\n", "id2tag", "=", "json", ".", "load", "(", "open", "(", "'../json/id2token_top_1000.json'", ",", "'rb'", ")", ")", "\n", "tag_embeddings", "=", "[", "]", "\n", "\n", "for", "tag_idx", ",", "_", "in", "id2tag", ".", "items", "(", ")", ":", "\n", "        ", "tag_idx", "=", "int", "(", "tag_idx", ")", "\n", "tag_vector", "=", "torch", ".", "tensor", "(", "np", ".", "zeros", "(", "1000", ")", ")", ".", "view", "(", "1", ",", "1000", ")", ".", "float", "(", ")", "\n", "tag_vector", "[", "0", ",", "tag_idx", "]", "=", "1", "\n", "embedding", ",", "_", "=", "tag_encoder", "(", "tag_vector", ")", "\n", "tag_embeddings", ".", "append", "(", "embedding", ".", "tolist", "(", ")", ")", "\n", "\n", "", "data", "=", "np", ".", "array", "(", "tag_embeddings", ")", ".", "reshape", "(", "1000", ",", "1152", ")", "\n", "tsne", "=", "sklearn", ".", "manifold", ".", "TSNE", "(", "n_components", "=", "2", ")", "\n", "tag_embeddings_tsne", "=", "tsne", ".", "fit_transform", "(", "data", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "for", "idx", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "tag_embeddings_tsne", ")", ":", "\n", "        ", "ax", ".", "scatter", "(", "x", ",", "y", ",", "alpha", "=", "0.8", ",", "c", "=", "'red'", ",", "edgecolors", "=", "'none'", ",", "s", "=", "5", ",", "marker", "=", "\"+\"", ")", "\n", "ax", ".", "annotate", "(", "id2tag", "[", "str", "(", "idx", ")", "]", ",", "(", "x", ",", "y", ")", ")", "\n", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xavierfav_ae-w2v-attention.scripts.extract_mfcc.compute_mfcc": [[19, 36], ["librosa.feature.mfcc", "librosa.feature.delta", "librosa.feature.delta", "numpy.concatenate", "librosa.load", "soundfile.read", "librosa.core.resample", "numpy.mean", "numpy.var", "numpy.mean", "numpy.var", "numpy.mean", "numpy.var"], "function", ["None"], ["def", "compute_mfcc", "(", "filename", ",", "sr", "=", "22000", ")", ":", "\n", "# zero pad and compute log mel spec", "\n", "    ", "try", ":", "\n", "        ", "audio", ",", "sr", "=", "librosa", ".", "load", "(", "filename", ",", "sr", "=", "sr", ",", "res_type", "=", "'kaiser_fast'", ")", "\n", "", "except", ":", "\n", "        ", "audio", ",", "o_sr", "=", "sf", ".", "read", "(", "filename", ")", "\n", "audio", "=", "librosa", ".", "core", ".", "resample", "(", "audio", ",", "o_sr", ",", "sr", ")", "\n", "\n", "", "mfcc", "=", "librosa", ".", "feature", ".", "mfcc", "(", "y", "=", "audio", ",", "sr", "=", "sr", ")", "\n", "mfcc_delta", "=", "librosa", ".", "feature", ".", "delta", "(", "mfcc", ",", "width", "=", "5", ",", "mode", "=", "'nearest'", ")", "\n", "mfcc_delta2", "=", "librosa", ".", "feature", ".", "delta", "(", "mfcc", ",", "order", "=", "2", ",", "width", "=", "5", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "feature", "=", "np", ".", "concatenate", "(", "(", "np", ".", "mean", "(", "mfcc", ",", "axis", "=", "1", ")", ",", "np", ".", "var", "(", "mfcc", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "mean", "(", "mfcc_delta", ",", "axis", "=", "1", ")", ",", "np", ".", "var", "(", "mfcc_delta", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "mean", "(", "mfcc_delta2", ",", "axis", "=", "1", ")", ",", "np", ".", "var", "(", "mfcc_delta2", ",", "axis", "=", "1", ")", ")", ")", "\n", "\n", "return", "feature", "\n", "\n"]]}