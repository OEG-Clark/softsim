{"home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.demo.save_img": [[25, 27], ["cv2.imwrite", "cv2.cvtColor"], "function", ["None"], ["def", "save_img", "(", "filepath", ",", "img", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "filepath", ",", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.demo.load_checkpoint": [[29, 40], ["torch.load", "torch.load", "model.load_state_dict", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "def", "load_checkpoint", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "try", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"state_dict\"", "]", ")", "\n", "", "except", ":", "\n", "        ", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.data_RGB.get_training_data": [[5, 8], ["os.path.exists", "dataset_RGB.DataLoaderTrain"], "function", ["None"], ["def", "get_training_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTrain", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.data_RGB.get_validation_data": [[10, 13], ["os.path.exists", "dataset_RGB.DataLoaderVal"], "function", ["None"], ["", "def", "get_validation_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderVal", "(", "rgb_dir", ",", "img_options", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.data_RGB.get_test_data": [[15, 18], ["os.path.exists", "dataset_RGB.DataLoaderTest"], "function", ["None"], ["", "def", "get_test_data", "(", "rgb_dir", ",", "img_options", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "exists", "(", "rgb_dir", ")", "\n", "return", "DataLoaderTest", "(", "rgb_dir", ",", "img_options", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTrain.__init__": [[14, 27], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderTrain", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTrain.__len__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTrain.__getitem__": [[31, 89], ["PIL.Image.open().convert", "PIL.Image.open().convert", "torchvision.to_tensor", "torchvision.to_tensor", "random.randint", "random.randint", "random.randint", "torchvision.pad", "torchvision.pad", "torch.rot90.flip", "torch.rot90.flip", "os.path.splitext", "PIL.Image.open", "PIL.Image.open", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "os.path.split", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip", "torch.rot90", "torch.rot90", "torch.rot90.flip", "torch.rot90.flip"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "w", ",", "h", "=", "tar_img", ".", "size", "\n", "padw", "=", "ps", "-", "w", "if", "w", "<", "ps", "else", "0", "\n", "padh", "=", "ps", "-", "h", "if", "h", "<", "ps", "else", "0", "\n", "\n", "# Reflect Pad in case image is smaller than patch_size", "\n", "if", "padw", "!=", "0", "or", "padh", "!=", "0", ":", "\n", "            ", "inp_img", "=", "TF", ".", "pad", "(", "inp_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "tar_img", "=", "TF", ".", "pad", "(", "tar_img", ",", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "padding_mode", "=", "'reflect'", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "hh", ",", "ww", "=", "tar_img", ".", "shape", "[", "1", "]", ",", "tar_img", ".", "shape", "[", "2", "]", "\n", "\n", "rr", "=", "random", ".", "randint", "(", "0", ",", "hh", "-", "ps", ")", "\n", "cc", "=", "random", ".", "randint", "(", "0", ",", "ww", "-", "ps", ")", "\n", "aug", "=", "random", ".", "randint", "(", "0", ",", "8", ")", "\n", "\n", "# Crop patch", "\n", "inp_img", "=", "inp_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "tar_img", "=", "tar_img", "[", ":", ",", "rr", ":", "rr", "+", "ps", ",", "cc", ":", "cc", "+", "ps", "]", "\n", "\n", "# Data Augmentations", "\n", "if", "aug", "==", "1", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "1", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "1", ")", "\n", "", "elif", "aug", "==", "2", ":", "\n", "            ", "inp_img", "=", "inp_img", ".", "flip", "(", "2", ")", "\n", "tar_img", "=", "tar_img", ".", "flip", "(", "2", ")", "\n", "", "elif", "aug", "==", "3", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "4", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "2", ")", "\n", "", "elif", "aug", "==", "5", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ",", "dims", "=", "(", "1", ",", "2", ")", ",", "k", "=", "3", ")", "\n", "", "elif", "aug", "==", "6", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "1", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "", "elif", "aug", "==", "7", ":", "\n", "            ", "inp_img", "=", "torch", ".", "rot90", "(", "inp_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "tar_img", "=", "torch", ".", "rot90", "(", "tar_img", ".", "flip", "(", "2", ")", ",", "dims", "=", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderVal.__init__": [[92, 105], ["torch.utils.data.Dataset.__init__", "sorted", "sorted", "len", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dataset_RGB.is_image_file", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "rgb_dir", ",", "img_options", "=", "None", ",", "rgb_dir2", "=", "None", ")", ":", "\n", "        ", "super", "(", "DataLoaderVal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ")", ")", ")", "\n", "tar_files", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ")", ")", ")", "\n", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'input'", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "self", ".", "tar_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "rgb_dir", ",", "'target'", ",", "x", ")", "for", "x", "in", "tar_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "img_options", "=", "img_options", "\n", "self", ".", "sizex", "=", "len", "(", "self", ".", "tar_filenames", ")", "# get the size of target", "\n", "\n", "self", ".", "ps", "=", "self", ".", "img_options", "[", "'patch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderVal.__len__": [[106, 108], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sizex", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderVal.__getitem__": [[109, 130], ["PIL.Image.open().convert", "PIL.Image.open().convert", "torchvision.to_tensor", "torchvision.to_tensor", "torchvision.center_crop", "torchvision.center_crop", "os.path.splitext", "PIL.Image.open", "PIL.Image.open", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "index_", "=", "index", "%", "self", ".", "sizex", "\n", "ps", "=", "self", ".", "ps", "\n", "\n", "inp_path", "=", "self", ".", "inp_filenames", "[", "index_", "]", "\n", "tar_path", "=", "self", ".", "tar_filenames", "[", "index_", "]", "\n", "\n", "inp_img", "=", "Image", ".", "open", "(", "inp_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "tar_img", "=", "Image", ".", "open", "(", "tar_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "# Validate on center crop", "\n", "if", "self", ".", "ps", "is", "not", "None", ":", "\n", "            ", "inp_img", "=", "TF", ".", "center_crop", "(", "inp_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "tar_img", "=", "TF", ".", "center_crop", "(", "tar_img", ",", "(", "ps", ",", "ps", ")", ")", "\n", "\n", "", "inp_img", "=", "TF", ".", "to_tensor", "(", "inp_img", ")", "\n", "tar_img", "=", "TF", ".", "to_tensor", "(", "tar_img", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "tar_path", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "tar_img", ",", "inp_img", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTest.__init__": [[133, 141], ["torch.utils.data.Dataset.__init__", "sorted", "len", "os.listdir", "os.path.join", "dataset_RGB.is_image_file"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file"], ["    ", "def", "__init__", "(", "self", ",", "inp_dir", ",", "img_options", ")", ":", "\n", "        ", "super", "(", "DataLoaderTest", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "inp_files", "=", "sorted", "(", "os", ".", "listdir", "(", "inp_dir", ")", ")", "\n", "self", ".", "inp_filenames", "=", "[", "os", ".", "path", ".", "join", "(", "inp_dir", ",", "x", ")", "for", "x", "in", "inp_files", "if", "is_image_file", "(", "x", ")", "]", "\n", "\n", "self", ".", "inp_size", "=", "len", "(", "self", ".", "inp_filenames", ")", "\n", "self", ".", "img_options", "=", "img_options", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTest.__len__": [[142, 144], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "inp_size", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.DataLoaderTest.__getitem__": [[145, 152], ["PIL.Image.open().convert", "torchvision.to_tensor", "os.path.splitext", "PIL.Image.open", "os.path.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path_inp", "=", "self", ".", "inp_filenames", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "path_inp", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "inp", "=", "Image", ".", "open", "(", "path_inp", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "inp", "=", "TF", ".", "to_tensor", "(", "inp", ")", "\n", "return", "inp", ",", "filename", "\n", "", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.dataset_RGB.is_image_file": [[9, 11], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "[", "'jpeg'", ",", "'JPEG'", ",", "'jpg'", ",", "'png'", ",", "'JPG'", ",", "'PNG'", ",", "'gif'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.UNetConvBlock.__init__": [[20, 26], ["torch.Module.__init__", "SRMNet.SK_RDB", "SRMNet.PS_down"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "out_size", ",", "downsample", ")", ":", "\n", "        ", "super", "(", "UNetConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "block", "=", "SK_RDB", "(", "in_channels", "=", "in_size", ",", "growth_rate", "=", "out_size", ",", "num_layers", "=", "3", ")", "\n", "if", "downsample", ":", "\n", "            ", "self", ".", "downsample", "=", "PS_down", "(", "out_size", ",", "out_size", ",", "downscale", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.UNetConvBlock.forward": [[27, 34], ["SRMNet.UNetConvBlock.block", "SRMNet.UNetConvBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "out_down", "=", "self", ".", "downsample", "(", "out", ")", "\n", "return", "out_down", ",", "out", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.UNetUpBlock.__init__": [[36, 41], ["torch.Module.__init__", "SRMNet.PS_up", "SRMNet.UNetConvBlock"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "out_size", ")", ":", "\n", "        ", "super", "(", "UNetUpBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.up = nn.ConvTranspose2d(in_size, out_size, kernel_size=2, stride=2, bias=True)", "\n", "self", ".", "up", "=", "PS_up", "(", "in_size", ",", "out_size", ",", "upscale", "=", "2", ")", "\n", "self", ".", "conv_block", "=", "UNetConvBlock", "(", "in_size", ",", "out_size", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.UNetUpBlock.forward": [[42, 47], ["SRMNet.UNetUpBlock.up", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "SRMNet.UNetUpBlock.conv_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "bridge", ")", ":", "\n", "        ", "up", "=", "self", ".", "up", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "up", ",", "bridge", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "conv_block", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.PS_down.__init__": [[50, 54], ["torch.Module.__init__", "torch.PixelUnshuffle", "torch.PixelUnshuffle", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "out_size", ",", "downscale", ")", ":", "\n", "        ", "super", "(", "PS_down", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "UnPS", "=", "nn", ".", "PixelUnshuffle", "(", "downscale", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "(", "downscale", "**", "2", ")", "*", "in_size", ",", "out_size", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.PS_down.forward": [[55, 59], ["SRMNet.PS_down.UnPS", "SRMNet.PS_down.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "UnPS", "(", "x", ")", "# h/2, w/2, 4*c", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.PS_up.__init__": [[61, 66], ["torch.Module.__init__", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "out_size", ",", "upscale", ")", ":", "\n", "        ", "super", "(", "PS_up", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "PS", "=", "nn", ".", "PixelShuffle", "(", "upscale", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_size", "//", "(", "upscale", "**", "2", ")", ",", "out_size", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.PS_up.forward": [[67, 71], ["SRMNet.PS_up.PS", "SRMNet.PS_up.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "PS", "(", "x", ")", "# h/2, w/2, 4*c", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SKFF.__init__": [[74, 88], ["torch.Module.__init__", "max", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "range", "torch.Softmax", "torch.Softmax", "int", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "SRMNet.SKFF.fcs.append", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "height", "=", "3", ",", "reduction", "=", "8", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "SKFF", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "height", "=", "height", "\n", "d", "=", "max", "(", "int", "(", "in_channels", "/", "reduction", ")", ",", "4", ")", "\n", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_channels", ",", "d", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "bias", ")", ",", "nn", ".", "PReLU", "(", ")", ")", "\n", "\n", "self", ".", "fcs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "height", ")", ":", "\n", "            ", "self", ".", "fcs", ".", "append", "(", "nn", ".", "Conv2d", "(", "d", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SKFF.forward": [[89, 107], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "inp_feats.view.view.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "SRMNet.SKFF.avg_pool", "SRMNet.SKFF.conv_du", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "SRMNet.SKFF.view", "SRMNet.SKFF.softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp_feats", ")", ":", "\n", "        ", "batch_size", ",", "n_feats", ",", "H", ",", "W", "=", "inp_feats", "[", "1", "]", ".", "shape", "\n", "\n", "inp_feats", "=", "torch", ".", "cat", "(", "inp_feats", ",", "dim", "=", "1", ")", "\n", "inp_feats", "=", "inp_feats", ".", "view", "(", "batch_size", ",", "self", ".", "height", ",", "n_feats", ",", "inp_feats", ".", "shape", "[", "2", "]", ",", "inp_feats", ".", "shape", "[", "3", "]", ")", "\n", "\n", "feats_U", "=", "torch", ".", "sum", "(", "inp_feats", ",", "dim", "=", "1", ")", "\n", "feats_S", "=", "self", ".", "avg_pool", "(", "feats_U", ")", "\n", "feats_Z", "=", "self", ".", "conv_du", "(", "feats_S", ")", "\n", "\n", "attention_vectors", "=", "[", "fc", "(", "feats_Z", ")", "for", "fc", "in", "self", ".", "fcs", "]", "\n", "attention_vectors", "=", "torch", ".", "cat", "(", "attention_vectors", ",", "dim", "=", "1", ")", "\n", "attention_vectors", "=", "attention_vectors", ".", "view", "(", "batch_size", ",", "self", ".", "height", ",", "n_feats", ",", "1", ",", "1", ")", "\n", "\n", "attention_vectors", "=", "self", ".", "softmax", "(", "attention_vectors", ")", "\n", "feats_V", "=", "torch", ".", "sum", "(", "inp_feats", "*", "attention_vectors", ",", "dim", "=", "1", ")", "\n", "\n", "return", "feats_V", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.DenseLayer.__init__": [[110, 115], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "SRMNet.SKFF"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "I", ")", ":", "\n", "        ", "super", "(", "DenseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "3", "//", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "sk", "=", "SKFF", "(", "out_channels", ",", "height", "=", "2", ",", "reduction", "=", "8", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.DenseLayer.forward": [[116, 121], ["SRMNet.DenseLayer.relu", "SRMNet.DenseLayer.sk", "SRMNet.DenseLayer.conv"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.conv"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "relu", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "# output = torch.cat([x, x1], 1) # -> RDB", "\n", "output", "=", "self", ".", "sk", "(", "(", "x", ",", "x1", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SK_RDB.__init__": [[124, 131], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "SRMNet.DenseLayer", "range"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "growth_rate", ",", "num_layers", ")", ":", "\n", "        ", "super", "(", "SK_RDB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "identity", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "growth_rate", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "\n", "*", "[", "DenseLayer", "(", "in_channels", ",", "in_channels", ",", "I", "=", "i", ")", "for", "i", "in", "range", "(", "num_layers", ")", "]", "\n", ")", "\n", "self", ".", "lff", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "growth_rate", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SK_RDB.forward": [[132, 137], ["SRMNet.SK_RDB.identity", "SRMNet.SK_RDB.layers", "SRMNet.SK_RDB.lff"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "identity", "(", "x", ")", "\n", "x", "=", "self", ".", "layers", "(", "x", ")", "\n", "x", "=", "self", ".", "lff", "(", "x", ")", "\n", "return", "res", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SRMNet.__init__": [[140, 169], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "SRMNet.bili_resize", "torch.Conv2d", "torch.Conv2d", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "SRMNet.bili_resize", "reversed", "SRMNet.SKFF", "SRMNet.conv3x3", "SRMNet.SRMNet.down_path.append", "range", "SRMNet.SRMNet.up_path.append", "SRMNet.SRMNet.skip_conv.append", "SRMNet.SRMNet.conv_up.append", "SRMNet.UNetConvBlock", "SRMNet.UNetUpBlock", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "SRMNet.bili_resize"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.bili_resize", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.bili_resize", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.conv3x3", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.bili_resize"], ["    ", "def", "__init__", "(", "self", ",", "in_chn", "=", "3", ",", "wf", "=", "96", ",", "depth", "=", "4", ")", ":", "\n", "        ", "super", "(", "SRMNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "down_path", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "bili_down", "=", "bili_resize", "(", "0.5", ")", "\n", "self", ".", "conv_01", "=", "nn", ".", "Conv2d", "(", "in_chn", ",", "wf", ",", "3", ",", "1", ",", "1", ")", "\n", "\n", "# encoder of UNet", "\n", "prev_channels", "=", "0", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "# 0,1,2,3", "\n", "            ", "downsample", "=", "True", "if", "(", "i", "+", "1", ")", "<", "depth", "else", "False", "\n", "self", ".", "down_path", ".", "append", "(", "UNetConvBlock", "(", "prev_channels", "+", "wf", ",", "(", "2", "**", "i", ")", "*", "wf", ",", "downsample", ")", ")", "\n", "prev_channels", "=", "(", "2", "**", "i", ")", "*", "wf", "\n", "\n", "# decoder of UNet", "\n", "", "self", ".", "up_path", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "skip_conv", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "conv_up", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "bottom_conv", "=", "nn", ".", "Conv2d", "(", "prev_channels", ",", "wf", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "bottom_up", "=", "bili_resize", "(", "2", "**", "(", "depth", "-", "1", ")", ")", "\n", "\n", "for", "i", "in", "reversed", "(", "range", "(", "depth", "-", "1", ")", ")", ":", "\n", "            ", "self", ".", "up_path", ".", "append", "(", "UNetUpBlock", "(", "prev_channels", ",", "(", "2", "**", "i", ")", "*", "wf", ")", ")", "\n", "self", ".", "skip_conv", ".", "append", "(", "nn", ".", "Conv2d", "(", "(", "2", "**", "i", ")", "*", "wf", ",", "(", "2", "**", "i", ")", "*", "wf", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_up", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "[", "nn", ".", "Conv2d", "(", "(", "2", "**", "i", ")", "*", "wf", ",", "wf", ",", "3", ",", "1", ",", "1", ")", ",", "bili_resize", "(", "2", "**", "i", ")", "]", ")", ")", "\n", "prev_channels", "=", "(", "2", "**", "i", ")", "*", "wf", "\n", "\n", "", "self", ".", "final_ff", "=", "SKFF", "(", "in_channels", "=", "wf", ",", "height", "=", "depth", ")", "\n", "self", ".", "last", "=", "conv3x3", "(", "prev_channels", ",", "in_chn", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.SRMNet.forward": [[170, 207], ["SRMNet.SRMNet.conv_01", "enumerate", "enumerate", "SRMNet.SRMNet.final_ff", "SRMNet.SRMNet.bottom_up", "up", "ms_result.append", "SRMNet.SRMNet.last", "down", "encs.append", "SRMNet.SRMNet.bottom_conv", "SRMNet.SRMNet.bili_down", "SRMNet.SRMNet.conv_01", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "down", "encs.append", "SRMNet.SRMNet.bili_down", "SRMNet.SRMNet.conv_01", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "down"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "img", "=", "x", "\n", "scale_img", "=", "img", "\n", "\n", "##### shallow conv #####", "\n", "x1", "=", "self", ".", "conv_01", "(", "img", ")", "\n", "encs", "=", "[", "]", "\n", "######## UNet ########", "\n", "# Down-path (Encoder)", "\n", "for", "i", ",", "down", "in", "enumerate", "(", "self", ".", "down_path", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "x1", ",", "x1_up", "=", "down", "(", "x1", ")", "\n", "encs", ".", "append", "(", "x1_up", ")", "\n", "", "elif", "(", "i", "+", "1", ")", "<", "self", ".", "depth", ":", "\n", "                ", "scale_img", "=", "self", ".", "bili_down", "(", "scale_img", ")", "\n", "left_bar", "=", "self", ".", "conv_01", "(", "scale_img", ")", "\n", "x1", "=", "torch", ".", "cat", "(", "[", "x1", ",", "left_bar", "]", ",", "dim", "=", "1", ")", "\n", "x1", ",", "x1_up", "=", "down", "(", "x1", ")", "\n", "encs", ".", "append", "(", "x1_up", ")", "\n", "", "else", ":", "\n", "                ", "scale_img", "=", "self", ".", "bili_down", "(", "scale_img", ")", "\n", "left_bar", "=", "self", ".", "conv_01", "(", "scale_img", ")", "\n", "x1", "=", "torch", ".", "cat", "(", "[", "x1", ",", "left_bar", "]", ",", "dim", "=", "1", ")", "\n", "x1", "=", "down", "(", "x1", ")", "\n", "\n", "# Up-path (Decoder)", "\n", "", "", "ms_result", "=", "[", "self", ".", "bottom_up", "(", "self", ".", "bottom_conv", "(", "x1", ")", ")", "]", "\n", "for", "i", ",", "up", "in", "enumerate", "(", "self", ".", "up_path", ")", ":", "\n", "            ", "x1", "=", "up", "(", "x1", ",", "self", ".", "skip_conv", "[", "i", "]", "(", "encs", "[", "-", "i", "-", "1", "]", ")", ")", "\n", "ms_result", ".", "append", "(", "self", ".", "conv_up", "[", "i", "]", "(", "x1", ")", ")", "\n", "# Multi-scale selective feature fusion", "\n", "", "msff_result", "=", "self", ".", "final_ff", "(", "ms_result", ")", "\n", "\n", "##### Reconstruct #####", "\n", "out_1", "=", "self", ".", "last", "(", "msff_result", ")", "+", "img", "\n", "\n", "return", "out_1", "\n", "", "", "if", "__name__", "==", "\"__main__\"", ":", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.conv3x3": [[6, 9], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_chn", ",", "out_chn", ",", "bias", "=", "True", ")", ":", "\n", "    ", "layer", "=", "nn", ".", "Conv2d", "(", "in_chn", ",", "out_chn", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.conv": [[10, 14], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ",", "stride", "=", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.SRMNet.bili_resize": [[15, 17], ["torch.Upsample"], "function", ["None"], ["", "def", "bili_resize", "(", "factor", ")", ":", "\n", "    ", "return", "nn", ".", "Upsample", "(", "scale_factor", "=", "factor", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.PSNRLoss.__init__": [[44, 52], ["torch.nn.Module.__init__", "torch.tensor().reshape", "numpy.log", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["def", "__init__", "(", "self", ",", "loss_weight", "=", "1.0", ",", "reduction", "=", "'mean'", ",", "toY", "=", "False", ")", ":", "\n", "        ", "super", "(", "PSNRLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "reduction", "==", "'mean'", "\n", "self", ".", "loss_weight", "=", "loss_weight", "\n", "self", ".", "scale", "=", "10", "/", "np", ".", "log", "(", "10", ")", "\n", "self", ".", "toY", "=", "toY", "\n", "self", ".", "coef", "=", "torch", ".", "tensor", "(", "[", "65.481", ",", "128.553", ",", "24.966", "]", ")", ".", "reshape", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "first", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.PSNRLoss.forward": [[53, 68], ["len", "len", "pred.size", "losses.PSNRLoss.coef.to", "pred.size", "torch.log().mean", "torch.log"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "assert", "len", "(", "pred", ".", "size", "(", ")", ")", "==", "4", "\n", "if", "self", ".", "toY", ":", "\n", "            ", "if", "self", ".", "first", ":", "\n", "                ", "self", ".", "coef", "=", "self", ".", "coef", ".", "to", "(", "pred", ".", "device", ")", "\n", "self", ".", "first", "=", "False", "\n", "\n", "", "pred", "=", "(", "pred", "*", "self", ".", "coef", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "+", "16.", "\n", "target", "=", "(", "target", "*", "self", ".", "coef", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "dim", "=", "1", ")", "+", "16.", "\n", "\n", "pred", ",", "target", "=", "pred", "/", "255.", ",", "target", "/", "255.", "\n", "pass", "\n", "", "assert", "len", "(", "pred", ".", "size", "(", ")", ")", "==", "4", "\n", "loss", "=", "-", "(", "self", ".", "loss_weight", "*", "self", ".", "scale", "*", "torch", ".", "log", "(", "(", "(", "pred", "-", "target", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "1e-8", ")", ".", "mean", "(", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.__init__": [[71, 83], ["torch.nn.Module.__init__", "losses.get_gaussian_kernel2d", "losses.SSIMLoss.compute_zero_padding"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.get_gaussian_kernel2d", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.compute_zero_padding"], ["    ", "def", "__init__", "(", "self", ",", "window_size", ":", "int", "=", "11", ",", "reduction", ":", "str", "=", "'mean'", ",", "max_val", ":", "float", "=", "1.0", ")", "->", "None", ":", "\n", "        ", "super", "(", "SSIMLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "window_size", ":", "int", "=", "window_size", "\n", "self", ".", "max_val", ":", "float", "=", "max_val", "\n", "self", ".", "reduction", ":", "str", "=", "reduction", "\n", "\n", "self", ".", "window", ":", "torch", ".", "Tensor", "=", "get_gaussian_kernel2d", "(", "\n", "(", "window_size", ",", "window_size", ")", ",", "(", "1.5", ",", "1.5", ")", ")", "\n", "self", ".", "padding", ":", "int", "=", "self", ".", "compute_zero_padding", "(", "window_size", ")", "\n", "\n", "self", ".", "C1", ":", "float", "=", "(", "0.01", "*", "self", ".", "max_val", ")", "**", "2", "\n", "self", ".", "C2", ":", "float", "=", "(", "0.03", "*", "self", ".", "max_val", ")", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.compute_zero_padding": [[84, 88], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_zero_padding", "(", "kernel_size", ":", "int", ")", "->", "int", ":", "\n", "        ", "\"\"\"Computes zero padding.\"\"\"", "\n", "return", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D": [[89, 95], ["torch.nn.functional.conv2d"], "methods", ["None"], ["", "def", "filter2D", "(", "\n", "self", ",", "\n", "input", ":", "torch", ".", "Tensor", ",", "\n", "kernel", ":", "torch", ".", "Tensor", ",", "\n", "channel", ":", "int", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "F", ".", "conv2d", "(", "input", ",", "kernel", ",", "padding", "=", "self", ".", "padding", ",", "groups", "=", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.forward": [[96, 127], ["losses.SSIMLoss.window.to().to", "tmp_kernel.repeat", "losses.SSIMLoss.filter2D", "losses.SSIMLoss.filter2D", "mu1.pow", "mu2.pow", "losses.SSIMLoss.filter2D", "losses.SSIMLoss.filter2D", "losses.SSIMLoss.filter2D", "torch.clamp", "torch.mean", "losses.SSIMLoss.window.to", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.SSIMLoss.filter2D"], ["", "def", "forward", "(", "self", ",", "img1", ":", "torch", ".", "Tensor", ",", "img2", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "# prepare kernel", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "img1", ".", "shape", "\n", "tmp_kernel", ":", "torch", ".", "Tensor", "=", "self", ".", "window", ".", "to", "(", "img1", ".", "device", ")", ".", "to", "(", "img1", ".", "dtype", ")", "\n", "kernel", ":", "torch", ".", "Tensor", "=", "tmp_kernel", ".", "repeat", "(", "c", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "# compute local mean per channel", "\n", "mu1", ":", "torch", ".", "Tensor", "=", "self", ".", "filter2D", "(", "img1", ",", "kernel", ",", "c", ")", "\n", "mu2", ":", "torch", ".", "Tensor", "=", "self", ".", "filter2D", "(", "img2", ",", "kernel", ",", "c", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "# compute local sigma per channel", "\n", "sigma1_sq", "=", "self", ".", "filter2D", "(", "img1", "*", "img1", ",", "kernel", ",", "c", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "self", ".", "filter2D", "(", "img2", "*", "img2", ",", "kernel", ",", "c", ")", "-", "mu2_sq", "\n", "sigma12", "=", "self", ".", "filter2D", "(", "img1", "*", "img2", ",", "kernel", ",", "c", ")", "-", "mu1_mu2", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "self", ".", "C1", ")", "*", "(", "2", "*", "sigma12", "+", "self", ".", "C2", ")", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "self", ".", "C1", ")", "*", "(", "sigma1_sq", "+", "sigma2_sq", "+", "self", ".", "C2", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "clamp", "(", "1.", "-", "ssim_map", ",", "min", "=", "0", ",", "max", "=", "1", ")", "/", "2.", "\n", "\n", "if", "self", ".", "reduction", "==", "'mean'", ":", "\n", "            ", "loss", "=", "torch", ".", "mean", "(", "loss", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'sum'", ":", "\n", "            ", "loss", "=", "torch", ".", "sum", "(", "loss", ")", "\n", "", "elif", "self", ".", "reduction", "==", "'none'", ":", "\n", "            ", "pass", "\n", "", "return", "loss", "\n", "# ------------------------------------------------------------------------------", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.CharbonnierLoss.__init__": [[132, 135], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", "CharbonnierLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.CharbonnierLoss.forward": [[136, 141], ["torch.mean", "torch.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "diff", "=", "x", "-", "y", "\n", "# loss = torch.sum(torch.sqrt(diff * diff + self.eps))", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "(", "diff", "*", "diff", ")", "+", "(", "self", ".", "eps", "*", "self", ".", "eps", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.__init__": [[143, 150], ["torch.nn.Module.__init__", "torch.Tensor", "torch.matmul().unsqueeze().repeat", "torch.cuda.is_available", "losses.CharbonnierLoss", "losses.EdgeLoss.kernel.cuda", "torch.matmul().unsqueeze", "torch.matmul", "torch.Tensor.t"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "EdgeLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "k", "=", "torch", ".", "Tensor", "(", "[", "[", ".05", ",", ".25", ",", ".4", ",", ".25", ",", ".05", "]", "]", ")", "\n", "self", ".", "kernel", "=", "torch", ".", "matmul", "(", "k", ".", "t", "(", ")", ",", "k", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "kernel", "=", "self", ".", "kernel", ".", "cuda", "(", ")", "\n", "", "self", ".", "loss", "=", "CharbonnierLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.conv_gauss": [[151, 155], ["torch.nn.functional.pad", "torch.nn.functional.conv2d"], "methods", ["None"], ["", "def", "conv_gauss", "(", "self", ",", "img", ")", ":", "\n", "        ", "n_channels", ",", "_", ",", "kw", ",", "kh", "=", "self", ".", "kernel", ".", "shape", "\n", "img", "=", "F", ".", "pad", "(", "img", ",", "(", "kw", "//", "2", ",", "kh", "//", "2", ",", "kw", "//", "2", ",", "kh", "//", "2", ")", ",", "mode", "=", "'replicate'", ")", "\n", "return", "F", ".", "conv2d", "(", "img", ",", "self", ".", "kernel", ",", "groups", "=", "n_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.laplacian_kernel": [[156, 164], ["losses.EdgeLoss.conv_gauss", "torch.zeros_like", "losses.EdgeLoss.conv_gauss"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.conv_gauss", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.conv_gauss"], ["", "def", "laplacian_kernel", "(", "self", ",", "current", ")", ":", "\n", "        ", "filtered", "=", "self", ".", "conv_gauss", "(", "current", ")", "# filter", "\n", "down", "=", "filtered", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "# downsample", "\n", "new_filter", "=", "torch", ".", "zeros_like", "(", "filtered", ")", "\n", "new_filter", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", "=", "down", "*", "4", "# upsample", "\n", "filtered", "=", "self", ".", "conv_gauss", "(", "new_filter", ")", "# filter", "\n", "diff", "=", "current", "-", "filtered", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.forward": [[165, 168], ["losses.EdgeLoss.loss", "losses.EdgeLoss.laplacian_kernel", "losses.EdgeLoss.laplacian_kernel"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.laplacian_kernel", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.EdgeLoss.laplacian_kernel"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", "(", "self", ".", "laplacian_kernel", "(", "x", ")", ",", "self", ".", "laplacian_kernel", "(", "y", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.gaussian": [[9, 15], ["torch.stack", "torch.stack.sum", "float", "torch.exp", "torch.tensor", "range", "losses.gaussian.gauss_fcn"], "function", ["None"], ["def", "gaussian", "(", "window_size", ",", "sigma", ")", ":", "\n", "    ", "def", "gauss_fcn", "(", "x", ")", ":", "\n", "        ", "return", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", "\n", "", "gauss", "=", "torch", ".", "stack", "(", "\n", "[", "torch", ".", "exp", "(", "torch", ".", "tensor", "(", "gauss_fcn", "(", "x", ")", ")", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.get_gaussian_kernel": [[16, 22], ["losses.gaussian", "TypeError", "isinstance"], "function", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.gaussian"], ["", "def", "get_gaussian_kernel", "(", "ksize", ":", "int", ",", "sigma", ":", "float", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "not", "isinstance", "(", "ksize", ",", "int", ")", "or", "ksize", "%", "2", "==", "0", "or", "ksize", "<=", "0", ":", "\n", "        ", "raise", "TypeError", "(", "\"ksize must be an odd positive integer. Got {}\"", "\n", ".", "format", "(", "ksize", ")", ")", "\n", "", "window_1d", ":", "torch", ".", "Tensor", "=", "gaussian", "(", "ksize", ",", "sigma", ")", "\n", "return", "window_1d", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.None.losses.get_gaussian_kernel2d": [[23, 38], ["losses.get_gaussian_kernel", "losses.get_gaussian_kernel", "torch.matmul", "TypeError", "TypeError", "kernel_x.unsqueeze", "kernel_y.unsqueeze().t", "isinstance", "len", "isinstance", "len", "kernel_y.unsqueeze"], "function", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.GaussianBlur.get_gaussian_kernel", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.GaussianBlur.get_gaussian_kernel"], ["", "def", "get_gaussian_kernel2d", "(", "ksize", ":", "Tuple", "[", "int", ",", "int", "]", ",", "\n", "sigma", ":", "Tuple", "[", "float", ",", "float", "]", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "not", "isinstance", "(", "ksize", ",", "tuple", ")", "or", "len", "(", "ksize", ")", "!=", "2", ":", "\n", "        ", "raise", "TypeError", "(", "\"ksize must be a tuple of length two. Got {}\"", "\n", ".", "format", "(", "ksize", ")", ")", "\n", "", "if", "not", "isinstance", "(", "sigma", ",", "tuple", ")", "or", "len", "(", "sigma", ")", "!=", "2", ":", "\n", "        ", "raise", "TypeError", "(", "\"sigma must be a tuple of length two. Got {}\"", "\n", ".", "format", "(", "sigma", ")", ")", "\n", "", "ksize_x", ",", "ksize_y", "=", "ksize", "\n", "sigma_x", ",", "sigma_y", "=", "sigma", "\n", "kernel_x", ":", "torch", ".", "Tensor", "=", "get_gaussian_kernel", "(", "ksize_x", ",", "sigma_x", ")", "\n", "kernel_y", ":", "torch", ".", "Tensor", "=", "get_gaussian_kernel", "(", "ksize_y", ",", "sigma_y", ")", "\n", "kernel_2d", ":", "torch", ".", "Tensor", "=", "torch", ".", "matmul", "(", "\n", "kernel_x", ".", "unsqueeze", "(", "-", "1", ")", ",", "kernel_y", ".", "unsqueeze", "(", "-", "1", ")", ".", "t", "(", ")", ")", "\n", "return", "kernel_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.GaussianBlur.get_gaussian_kernel": [[4, 41], ["torch.arange", "torch.arange.repeat().view", "x_coord.repeat().view.t", "torch.stack().float", "gaussian_kernel.repeat.view", "gaussian_kernel.repeat.repeat", "nn.Conv2d", "torch.exp", "torch.sum", "torch.arange.repeat", "torch.stack", "torch.sum"], "function", ["None"], ["def", "get_gaussian_kernel", "(", "kernel_size", "=", "21", ",", "sigma", "=", "5", ",", "channels", "=", "3", ")", ":", "\n", "#if not kernel_size: kernel_size = int(2*np.ceil(2*sigma)+1)", "\n", "#print(\"Kernel is: \",kernel_size)", "\n", "#print(\"Sigma is: \",sigma)", "\n", "    ", "padding", "=", "kernel_size", "//", "2", "\n", "# Create a x, y coordinate grid of shape (kernel_size, kernel_size, 2)", "\n", "x_coord", "=", "torch", ".", "arange", "(", "kernel_size", ")", "\n", "x_grid", "=", "x_coord", ".", "repeat", "(", "kernel_size", ")", ".", "view", "(", "kernel_size", ",", "kernel_size", ")", "\n", "y_grid", "=", "x_grid", ".", "t", "(", ")", "\n", "xy_grid", "=", "torch", ".", "stack", "(", "[", "x_grid", ",", "y_grid", "]", ",", "dim", "=", "-", "1", ")", ".", "float", "(", ")", "\n", "\n", "mean", "=", "(", "kernel_size", "-", "1", ")", "/", "2.", "\n", "variance", "=", "sigma", "**", "2.", "\n", "\n", "# Calculate the 2-dimensional gaussian kernel which is", "\n", "# the product of two gaussian distributions for two different", "\n", "# variables (in this case called x and y)", "\n", "gaussian_kernel", "=", "(", "1.", "/", "(", "2.", "*", "math", ".", "pi", "*", "variance", ")", ")", "*", "torch", ".", "exp", "(", "\n", "-", "torch", ".", "sum", "(", "(", "xy_grid", "-", "mean", ")", "**", "2.", ",", "dim", "=", "-", "1", ")", "/", "(", "2", "*", "variance", ")", "\n", ")", "\n", "\n", "# Make sure sum of values in gaussian kernel equals 1.", "\n", "gaussian_kernel", "=", "gaussian_kernel", "/", "torch", ".", "sum", "(", "gaussian_kernel", ")", "\n", "\n", "# Reshape to 2d depthwise convolutional weight", "\n", "gaussian_kernel", "=", "gaussian_kernel", ".", "view", "(", "1", ",", "1", ",", "kernel_size", ",", "kernel_size", ")", "\n", "gaussian_kernel", "=", "gaussian_kernel", ".", "repeat", "(", "channels", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "gaussian_filter", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "channels", ",", "out_channels", "=", "channels", ",", "\n", "kernel_size", "=", "kernel_size", ",", "groups", "=", "channels", ",", "bias", "=", "False", ")", "\n", "\n", "gaussian_filter", ".", "weight", ".", "data", "=", "gaussian_kernel", "\n", "gaussian_filter", ".", "weight", ".", "requires_grad", "=", "False", "\n", "\n", "return", "gaussian_filter", ",", "padding", "\n", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dataset_utils.MixUp_AUG.__init__": [[5, 7], ["torch.distributions.beta.Beta", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "dist", "=", "torch", ".", "distributions", ".", "beta", ".", "Beta", "(", "torch", ".", "tensor", "(", "[", "0.6", "]", ")", ",", "torch", ".", "tensor", "(", "[", "0.6", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dataset_utils.MixUp_AUG.aug": [[8, 20], ["rgb_gt.size", "torch.randperm", "dataset_utils.MixUp_AUG.dist.rsample().view().cuda", "dataset_utils.MixUp_AUG.dist.rsample().view", "dataset_utils.MixUp_AUG.dist.rsample"], "methods", ["None"], ["", "def", "aug", "(", "self", ",", "rgb_gt", ",", "rgb_noisy", ")", ":", "\n", "        ", "bs", "=", "rgb_gt", ".", "size", "(", "0", ")", "\n", "indices", "=", "torch", ".", "randperm", "(", "bs", ")", "\n", "rgb_gt2", "=", "rgb_gt", "[", "indices", "]", "\n", "rgb_noisy2", "=", "rgb_noisy", "[", "indices", "]", "\n", "\n", "lam", "=", "self", ".", "dist", ".", "rsample", "(", "(", "bs", ",", "1", ")", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "rgb_gt", "=", "lam", "*", "rgb_gt", "+", "(", "1", "-", "lam", ")", "*", "rgb_gt2", "\n", "rgb_noisy", "=", "lam", "*", "rgb_noisy", "+", "(", "1", "-", "lam", ")", "*", "rgb_noisy2", "\n", "\n", "return", "rgb_gt", ",", "rgb_noisy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.freeze": [[6, 9], ["model.parameters"], "function", ["None"], ["def", "freeze", "(", "model", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.unfreeze": [[11, 14], ["model.parameters"], "function", ["None"], ["", "", "def", "unfreeze", "(", "model", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.is_frozen": [[16, 19], ["all", "model.parameters"], "function", ["None"], ["", "", "def", "is_frozen", "(", "model", ")", ":", "\n", "    ", "x", "=", "[", "p", ".", "requires_grad", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", "\n", "return", "not", "all", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.save_checkpoint": [[21, 25], ["os.path.join", "torch.save"], "function", ["None"], ["", "def", "save_checkpoint", "(", "model_dir", ",", "state", ",", "session", ")", ":", "\n", "    ", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "model_out_path", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "\"model_epoch_{}_{}.pth\"", ".", "format", "(", "epoch", ",", "session", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "model_out_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.load_checkpoint": [[27, 38], ["torch.load", "model.load_state_dict", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "def", "load_checkpoint", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "try", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "checkpoint", "[", "\"state_dict\"", "]", ")", "\n", "", "except", ":", "\n", "        ", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.load_checkpoint_multigpu": [[40, 48], ["torch.load", "collections.OrderedDict", "state_dict.items", "model.load_state_dict"], "function", ["None"], ["", "", "def", "load_checkpoint_multigpu", "(", "model", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "state_dict", "=", "checkpoint", "[", "\"state_dict\"", "]", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove `module.`", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.load_start_epoch": [[50, 54], ["torch.load"], "function", ["None"], ["", "def", "load_start_epoch", "(", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "epoch", "=", "checkpoint", "[", "\"epoch\"", "]", "\n", "return", "epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.load_optim": [[56, 59], ["torch.load", "optimizer.load_state_dict"], "function", ["None"], ["", "def", "load_optim", "(", "optimizer", ",", "weights", ")", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "weights", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "# for p in optimizer.param_groups: lr = p['lr']", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.model_utils.network_parameters": [[63, 66], ["sum", "param.numel", "nets.parameters"], "function", ["None"], ["", "def", "network_parameters", "(", "nets", ")", ":", "\n", "    ", "num_params", "=", "sum", "(", "param", ".", "numel", "(", ")", "for", "param", "in", "nets", ".", "parameters", "(", ")", ")", "\n", "return", "num_params", "\n", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.calculate_psnr": [[7, 23], ["img1.astype.astype", "img2.astype.astype", "numpy.mean", "ValueError", "float", "math.log10", "math.sqrt"], "function", ["None"], ["def", "calculate_psnr", "(", "img1", ",", "img2", ",", "border", "=", "0", ")", ":", "\n", "# img1 and img2 have range [0, 255]", "\n", "#img1 = img1.squeeze()", "\n", "#img2 = img2.squeeze()", "\n", "    ", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "h", ",", "w", "=", "img1", ".", "shape", "[", ":", "2", "]", "\n", "img1", "=", "img1", "[", "border", ":", "h", "-", "border", ",", "border", ":", "w", "-", "border", "]", "\n", "img2", "=", "img2", "[", "border", ":", "h", "-", "border", ",", "border", ":", "w", "-", "border", "]", "\n", "\n", "img1", "=", "img1", ".", "astype", "(", "np", ".", "float64", ")", "\n", "img2", "=", "img2", ".", "astype", "(", "np", ".", "float64", ")", "\n", "mse", "=", "np", ".", "mean", "(", "(", "img1", "-", "img2", ")", "**", "2", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "float", "(", "'inf'", ")", "\n", "", "return", "20", "*", "math", ".", "log10", "(", "255.0", "/", "math", ".", "sqrt", "(", "mse", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.calculate_ssim": [[28, 53], ["ValueError", "pytorch_msssim.ssim", "ValueError", "range", "numpy.array().mean", "ssims.append", "pytorch_msssim.ssim", "pytorch_msssim.ssim", "numpy.array", "numpy.squeeze", "numpy.squeeze"], "function", ["None"], ["", "def", "calculate_ssim", "(", "img1", ",", "img2", ",", "border", "=", "0", ")", ":", "\n", "    ", "'''calculate SSIM\n    the same outputs as MATLAB's\n    img1, img2: [0, 255]\n    '''", "\n", "#img1 = img1.squeeze()", "\n", "#img2 = img2.squeeze()", "\n", "if", "not", "img1", ".", "shape", "==", "img2", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "'Input images must have the same dimensions.'", ")", "\n", "", "h", ",", "w", "=", "img1", ".", "shape", "[", ":", "2", "]", "\n", "img1", "=", "img1", "[", "border", ":", "h", "-", "border", ",", "border", ":", "w", "-", "border", "]", "\n", "img2", "=", "img2", "[", "border", ":", "h", "-", "border", ",", "border", ":", "w", "-", "border", "]", "\n", "\n", "if", "img1", ".", "ndim", "==", "2", ":", "\n", "        ", "return", "ssim", "(", "img1", ",", "img2", ")", "\n", "", "elif", "img1", ".", "ndim", "==", "3", ":", "\n", "        ", "if", "img1", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "            ", "ssims", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "ssims", ".", "append", "(", "ssim", "(", "img1", "[", ":", ",", ":", ",", "i", "]", ",", "img2", "[", ":", ",", ":", ",", "i", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "ssims", ")", ".", "mean", "(", ")", "\n", "", "elif", "img1", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "            ", "return", "ssim", "(", "np", ".", "squeeze", "(", "img1", ")", ",", "np", ".", "squeeze", "(", "img2", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Wrong input image dimensions.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.load_img": [[54, 56], ["cv2.cvtColor", "cv2.imread"], "function", ["None"], ["", "", "def", "load_img", "(", "filepath", ")", ":", "\n", "    ", "return", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "filepath", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.torchPSNR": [[57, 62], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log10", "torch.log10"], "function", ["None"], ["", "def", "torchPSNR", "(", "tar_img", ",", "prd_img", ")", ":", "\n", "    ", "imdff", "=", "torch", ".", "clamp", "(", "prd_img", ",", "0", ",", "1", ")", "-", "torch", ".", "clamp", "(", "tar_img", ",", "0", ",", "1", ")", "\n", "rmse", "=", "(", "imdff", "**", "2", ")", ".", "mean", "(", ")", ".", "sqrt", "(", ")", "\n", "ps", "=", "20", "*", "torch", ".", "log10", "(", "1", "/", "rmse", ")", "\n", "return", "ps", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.torchSSIM": [[63, 65], ["pytorch_msssim.ssim"], "function", ["None"], ["", "def", "torchSSIM", "(", "tar_img", ",", "prd_img", ")", ":", "\n", "    ", "return", "ssim", "(", "tar_img", ",", "prd_img", ",", "data_range", "=", "1.0", ",", "size_average", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.save_img": [[66, 68], ["cv2.imwrite", "cv2.cvtColor"], "function", ["None"], ["", "def", "save_img", "(", "filepath", ",", "img", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "filepath", ",", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.numpyPSNR": [[69, 74], ["numpy.sqrt", "numpy.float32", "numpy.float32", "numpy.mean", "numpy.log10"], "function", ["None"], ["", "def", "numpyPSNR", "(", "tar_img", ",", "prd_img", ")", ":", "\n", "    ", "imdff", "=", "np", ".", "float32", "(", "prd_img", ")", "-", "np", ".", "float32", "(", "tar_img", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "imdff", "**", "2", ")", ")", "\n", "ps", "=", "20", "*", "np", ".", "log10", "(", "255", "/", "rmse", ")", "\n", "return", "ps", "\n", "", "import", "torch", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.rgb2hsl_torch": [[80, 102], ["torch.max", "torch.max", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.empty_like", "torch.bitwise_and", "torch.bitwise_and", "torch.bitwise_and", "torch.bitwise_and", "torch.bitwise_and", "torch.bitwise_and", "torch.cat", "torch.cat", "torch.min", "torch.min"], "function", ["None"], ["def", "rgb2hsl_torch", "(", "rgb", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "cmax", ",", "cmax_idx", "=", "torch", ".", "max", "(", "rgb", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "cmin", "=", "torch", ".", "min", "(", "rgb", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "delta", "=", "cmax", "-", "cmin", "\n", "hsl_h", "=", "torch", ".", "empty_like", "(", "rgb", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "cmax_idx", "[", "delta", "==", "0", "]", "=", "3", "\n", "hsl_h", "[", "cmax_idx", "==", "0", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "1", ":", "2", "]", "-", "rgb", "[", ":", ",", "2", ":", "3", "]", ")", "/", "delta", ")", "%", "6", ")", "[", "cmax_idx", "==", "0", "]", "\n", "hsl_h", "[", "cmax_idx", "==", "1", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "2", ":", "3", "]", "-", "rgb", "[", ":", ",", "0", ":", "1", "]", ")", "/", "delta", ")", "+", "2", ")", "[", "cmax_idx", "==", "1", "]", "\n", "hsl_h", "[", "cmax_idx", "==", "2", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "0", ":", "1", "]", "-", "rgb", "[", ":", ",", "1", ":", "2", "]", ")", "/", "delta", ")", "+", "4", ")", "[", "cmax_idx", "==", "2", "]", "\n", "hsl_h", "[", "cmax_idx", "==", "3", "]", "=", "0.", "\n", "hsl_h", "/=", "6.", "\n", "\n", "hsl_l", "=", "(", "cmax", "+", "cmin", ")", "/", "2.", "\n", "hsl_s", "=", "torch", ".", "empty_like", "(", "hsl_h", ")", "\n", "hsl_s", "[", "hsl_l", "==", "0", "]", "=", "0", "\n", "hsl_s", "[", "hsl_l", "==", "1", "]", "=", "0", "\n", "hsl_l_ma", "=", "torch", ".", "bitwise_and", "(", "hsl_l", ">", "0", ",", "hsl_l", "<", "1", ")", "\n", "hsl_l_s0_5", "=", "torch", ".", "bitwise_and", "(", "hsl_l_ma", ",", "hsl_l", "<=", "0.5", ")", "\n", "hsl_l_l0_5", "=", "torch", ".", "bitwise_and", "(", "hsl_l_ma", ",", "hsl_l", ">", "0.5", ")", "\n", "hsl_s", "[", "hsl_l_s0_5", "]", "=", "(", "(", "cmax", "-", "cmin", ")", "/", "(", "hsl_l", "*", "2.", ")", ")", "[", "hsl_l_s0_5", "]", "\n", "hsl_s", "[", "hsl_l_l0_5", "]", "=", "(", "(", "cmax", "-", "cmin", ")", "/", "(", "-", "hsl_l", "*", "2.", "+", "2.", ")", ")", "[", "hsl_l_l0_5", "]", "\n", "return", "torch", ".", "cat", "(", "[", "hsl_h", ",", "hsl_s", ",", "hsl_l", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.rgb2hsv_torch": [[104, 118], ["torch.max", "torch.max", "torch.empty_like", "torch.empty_like", "torch.where", "torch.where", "torch.cat", "torch.cat", "torch.min", "torch.min", "torch.tensor().type_as", "torch.tensor().type_as", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "rgb2hsv_torch", "(", "rgb", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "cmax", ",", "cmax_idx", "=", "torch", ".", "max", "(", "rgb", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "cmin", "=", "torch", ".", "min", "(", "rgb", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "delta", "=", "cmax", "-", "cmin", "\n", "hsv_h", "=", "torch", ".", "empty_like", "(", "rgb", "[", ":", ",", "0", ":", "1", ",", ":", ",", ":", "]", ")", "\n", "cmax_idx", "[", "delta", "==", "0", "]", "=", "3", "\n", "hsv_h", "[", "cmax_idx", "==", "0", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "1", ":", "2", "]", "-", "rgb", "[", ":", ",", "2", ":", "3", "]", ")", "/", "delta", ")", "%", "6", ")", "[", "cmax_idx", "==", "0", "]", "\n", "hsv_h", "[", "cmax_idx", "==", "1", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "2", ":", "3", "]", "-", "rgb", "[", ":", ",", "0", ":", "1", "]", ")", "/", "delta", ")", "+", "2", ")", "[", "cmax_idx", "==", "1", "]", "\n", "hsv_h", "[", "cmax_idx", "==", "2", "]", "=", "(", "(", "(", "rgb", "[", ":", ",", "0", ":", "1", "]", "-", "rgb", "[", ":", ",", "1", ":", "2", "]", ")", "/", "delta", ")", "+", "4", ")", "[", "cmax_idx", "==", "2", "]", "\n", "hsv_h", "[", "cmax_idx", "==", "3", "]", "=", "0.", "\n", "hsv_h", "/=", "6.", "\n", "hsv_s", "=", "torch", ".", "where", "(", "cmax", "==", "0", ",", "torch", ".", "tensor", "(", "0.", ")", ".", "type_as", "(", "rgb", ")", ",", "delta", "/", "cmax", ")", "\n", "hsv_v", "=", "cmax", "\n", "return", "torch", ".", "cat", "(", "[", "hsv_h", ",", "hsv_s", ",", "hsv_v", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.hsv2rgb_torch": [[120, 137], ["torch.zeros_like", "torch.zeros_like", "torch.empty_like", "torch.empty_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "hsv2rgb_torch", "(", "hsv", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "hsv_h", ",", "hsv_s", ",", "hsv_l", "=", "hsv", "[", ":", ",", "0", ":", "1", "]", ",", "hsv", "[", ":", ",", "1", ":", "2", "]", ",", "hsv", "[", ":", ",", "2", ":", "3", "]", "\n", "_c", "=", "hsv_l", "*", "hsv_s", "\n", "_x", "=", "_c", "*", "(", "-", "torch", ".", "abs", "(", "hsv_h", "*", "6.", "%", "2.", "-", "1", ")", "+", "1.", ")", "\n", "_m", "=", "hsv_l", "-", "_c", "\n", "_o", "=", "torch", ".", "zeros_like", "(", "_c", ")", "\n", "idx", "=", "(", "hsv_h", "*", "6.", ")", ".", "type", "(", "torch", ".", "uint8", ")", "\n", "idx", "=", "(", "idx", "%", "6", ")", ".", "expand", "(", "-", "1", ",", "3", ",", "-", "1", ",", "-", "1", ")", "\n", "rgb", "=", "torch", ".", "empty_like", "(", "hsv", ")", "\n", "rgb", "[", "idx", "==", "0", "]", "=", "torch", ".", "cat", "(", "[", "_c", ",", "_x", ",", "_o", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "0", "]", "\n", "rgb", "[", "idx", "==", "1", "]", "=", "torch", ".", "cat", "(", "[", "_x", ",", "_c", ",", "_o", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "1", "]", "\n", "rgb", "[", "idx", "==", "2", "]", "=", "torch", ".", "cat", "(", "[", "_o", ",", "_c", ",", "_x", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "2", "]", "\n", "rgb", "[", "idx", "==", "3", "]", "=", "torch", ".", "cat", "(", "[", "_o", ",", "_x", ",", "_c", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "3", "]", "\n", "rgb", "[", "idx", "==", "4", "]", "=", "torch", ".", "cat", "(", "[", "_x", ",", "_o", ",", "_c", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "4", "]", "\n", "rgb", "[", "idx", "==", "5", "]", "=", "torch", ".", "cat", "(", "[", "_c", ",", "_o", ",", "_x", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "5", "]", "\n", "rgb", "+=", "_m", "\n", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.image_utils.hsl2rgb_torch": [[139, 156], ["torch.empty_like", "torch.empty_like", "torch.zeros_like", "torch.zeros_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "hsl2rgb_torch", "(", "hsl", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "hsl_h", ",", "hsl_s", ",", "hsl_l", "=", "hsl", "[", ":", ",", "0", ":", "1", "]", ",", "hsl", "[", ":", ",", "1", ":", "2", "]", ",", "hsl", "[", ":", ",", "2", ":", "3", "]", "\n", "_c", "=", "(", "-", "torch", ".", "abs", "(", "hsl_l", "*", "2.", "-", "1.", ")", "+", "1", ")", "*", "hsl_s", "\n", "_x", "=", "_c", "*", "(", "-", "torch", ".", "abs", "(", "hsl_h", "*", "6.", "%", "2.", "-", "1", ")", "+", "1.", ")", "\n", "_m", "=", "hsl_l", "-", "_c", "/", "2.", "\n", "idx", "=", "(", "hsl_h", "*", "6.", ")", ".", "type", "(", "torch", ".", "uint8", ")", "\n", "idx", "=", "(", "idx", "%", "6", ")", ".", "expand", "(", "-", "1", ",", "3", ",", "-", "1", ",", "-", "1", ")", "\n", "rgb", "=", "torch", ".", "empty_like", "(", "hsl", ")", "\n", "_o", "=", "torch", ".", "zeros_like", "(", "_c", ")", "\n", "rgb", "[", "idx", "==", "0", "]", "=", "torch", ".", "cat", "(", "[", "_c", ",", "_x", ",", "_o", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "0", "]", "\n", "rgb", "[", "idx", "==", "1", "]", "=", "torch", ".", "cat", "(", "[", "_x", ",", "_c", ",", "_o", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "1", "]", "\n", "rgb", "[", "idx", "==", "2", "]", "=", "torch", ".", "cat", "(", "[", "_o", ",", "_c", ",", "_x", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "2", "]", "\n", "rgb", "[", "idx", "==", "3", "]", "=", "torch", ".", "cat", "(", "[", "_o", ",", "_x", ",", "_c", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "3", "]", "\n", "rgb", "[", "idx", "==", "4", "]", "=", "torch", ".", "cat", "(", "[", "_x", ",", "_o", ",", "_c", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "4", "]", "\n", "rgb", "[", "idx", "==", "5", "]", "=", "torch", ".", "cat", "(", "[", "_c", ",", "_o", ",", "_x", "]", ",", "dim", "=", "1", ")", "[", "idx", "==", "5", "]", "\n", "rgb", "+=", "_m", "\n", "return", "rgb", "", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dir_utils.mkdirs": [[6, 12], ["isinstance", "dir_utils.mkdir", "isinstance", "dir_utils.mkdir"], "function", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dir_utils.mkdir", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dir_utils.mkdir"], ["def", "mkdirs", "(", "paths", ")", ":", "\n", "    ", "if", "isinstance", "(", "paths", ",", "list", ")", "and", "not", "isinstance", "(", "paths", ",", "str", ")", ":", "\n", "        ", "for", "path", "in", "paths", ":", "\n", "            ", "mkdir", "(", "path", ")", "\n", "", "", "else", ":", "\n", "        ", "mkdir", "(", "paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dir_utils.mkdir": [[14, 17], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.utils.dir_utils.get_last_path": [[19, 22], ["natsort.natsorted", "glob.glob", "os.path.join"], "function", ["None"], ["", "", "def", "get_last_path", "(", "path", ",", "session", ")", ":", "\n", "    ", "x", "=", "natsorted", "(", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", "'*%s'", "%", "session", ")", ")", ")", "[", "-", "1", "]", "\n", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__": [[16, 24], ["torch.optim.lr_scheduler._LRScheduler.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.__init__"], ["def", "__init__", "(", "self", ",", "optimizer", ",", "multiplier", ",", "total_epoch", ",", "after_scheduler", "=", "None", ")", ":", "\n", "        ", "self", ".", "multiplier", "=", "multiplier", "\n", "if", "self", ".", "multiplier", "<", "1.", ":", "\n", "            ", "raise", "ValueError", "(", "'multiplier should be greater thant or equal to 1.'", ")", "\n", "", "self", ".", "total_epoch", "=", "total_epoch", "\n", "self", ".", "after_scheduler", "=", "after_scheduler", "\n", "self", ".", "finished", "=", "False", "\n", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "__init__", "(", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.get_lr": [[25, 38], ["scheduler.GradualWarmupScheduler.after_scheduler.get_lr", "float"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.get_lr"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "last_epoch", ">", "self", ".", "total_epoch", ":", "\n", "            ", "if", "self", ".", "after_scheduler", ":", "\n", "                ", "if", "not", "self", ".", "finished", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "base_lrs", "=", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "self", ".", "finished", "=", "True", "\n", "", "return", "self", ".", "after_scheduler", ".", "get_lr", "(", ")", "\n", "", "return", "[", "base_lr", "*", "self", ".", "multiplier", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n", "", "if", "self", ".", "multiplier", "==", "1.0", ":", "\n", "            ", "return", "[", "base_lr", "*", "(", "float", "(", "self", ".", "last_epoch", ")", "/", "self", ".", "total_epoch", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "", "else", ":", "\n", "            ", "return", "[", "base_lr", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "total_epoch", "+", "1.", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau": [[39, 52], ["zip", "scheduler.GradualWarmupScheduler.after_scheduler.step", "scheduler.GradualWarmupScheduler.after_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step"], ["", "", "def", "step_ReduceLROnPlateau", "(", "self", ",", "metrics", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "", "self", ".", "last_epoch", "=", "epoch", "if", "epoch", "!=", "0", "else", "1", "# ReduceLROnPlateau is called at the end of epoch, whereas others are called at beginning", "\n", "if", "self", ".", "last_epoch", "<=", "self", ".", "total_epoch", ":", "\n", "            ", "warmup_lr", "=", "[", "base_lr", "*", "(", "(", "self", ".", "multiplier", "-", "1.", ")", "*", "self", ".", "last_epoch", "/", "self", ".", "total_epoch", "+", "1.", ")", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "for", "param_group", ",", "lr", "in", "zip", "(", "self", ".", "optimizer", ".", "param_groups", ",", "warmup_lr", ")", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "", "else", ":", "\n", "            ", "if", "epoch", "is", "None", ":", "\n", "                ", "self", ".", "after_scheduler", ".", "step", "(", "metrics", ",", "None", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "after_scheduler", ".", "step", "(", "metrics", ",", "epoch", "-", "self", ".", "total_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step": [[53, 64], ["type", "scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau", "super().step", "scheduler.GradualWarmupScheduler.after_scheduler.step", "scheduler.GradualWarmupScheduler.after_scheduler.step"], "methods", ["home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step_ReduceLROnPlateau", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step", "home.repos.pwc.inspect_result.FanChiMao_SRMNet.warmup_scheduler.scheduler.GradualWarmupScheduler.step"], ["", "", "", "def", "step", "(", "self", ",", "epoch", "=", "None", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "if", "type", "(", "self", ".", "after_scheduler", ")", "!=", "ReduceLROnPlateau", ":", "\n", "            ", "if", "self", ".", "finished", "and", "self", ".", "after_scheduler", ":", "\n", "                ", "if", "epoch", "is", "None", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "step", "(", "None", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "after_scheduler", ".", "step", "(", "epoch", "-", "self", ".", "total_epoch", ")", "\n", "", "", "else", ":", "\n", "                ", "return", "super", "(", "GradualWarmupScheduler", ",", "self", ")", ".", "step", "(", "epoch", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "step_ReduceLROnPlateau", "(", "metrics", ",", "epoch", ")", "\n", "", "", "", ""]]}