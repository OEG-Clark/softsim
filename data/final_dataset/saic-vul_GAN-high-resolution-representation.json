{"home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_subdirs": [[9, 16], ["os.listdir", "subdirs.append", "os.path.isdir", "os.path.join"], "function", ["None"], ["def", "list_subdirs", "(", "base_dir", ")", ":", "\n", "    ", "subdirs", "=", "[", "]", "\n", "for", "f", "in", "listdir", "(", "base_dir", ")", ":", "\n", "        ", "if", "not", "isdir", "(", "join", "(", "base_dir", ",", "f", ")", ")", ":", "\n", "            ", "continue", "\n", "", "subdirs", ".", "append", "(", "f", ")", "\n", "", "return", "subdirs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_files_with_ext": [[18, 39], ["utils.list_files_with_ext_rec", "len", "sorted", "os.path.isdir", "os.path.islink", "base_dir.split", "os.walk", "root.split", "os.path.sep.join", "os.path.join", "images.append", "os.path.isfile", "os.path.splitext", "os.path.join", "fname.lower"], "function", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_files_with_ext_rec"], ["", "def", "list_files_with_ext", "(", "base_dir", ",", "valid_exts", ",", "recursive", "=", "False", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "\n", "if", "recursive", ":", "\n", "        ", "list_files_with_ext_rec", "(", "base_dir", ",", "images", ",", "valid_exts", ")", "\n", "", "else", ":", "\n", "        ", "assert", "isdir", "(", "base_dir", ")", "or", "islink", "(", "base_dir", ")", ",", "f'{base_dir} is not a valid directory'", "\n", "base_path_len", "=", "len", "(", "base_dir", ".", "split", "(", "os_path_sep", ")", ")", "\n", "for", "root", ",", "dnames", ",", "fnames", "in", "sorted", "(", "walk", "(", "base_dir", ")", ")", ":", "\n", "            ", "root_parts", "=", "root", ".", "split", "(", "os_path_sep", ")", "\n", "root_m", "=", "os_path_sep", ".", "join", "(", "root_parts", "[", "base_path_len", ":", "]", ")", "\n", "for", "fname", "in", "fnames", ":", "\n", "                ", "if", "not", "isfile", "(", "join", "(", "root", ",", "fname", ")", ")", ":", "\n", "                    ", "continue", "\n", "", "filext", "=", "splitext", "(", "fname", ".", "lower", "(", ")", ")", "[", "1", "]", "\n", "if", "filext", "not", "in", "valid_exts", ":", "\n", "                    ", "continue", "\n", "", "path", "=", "join", "(", "root_m", ",", "fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "\n", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_files_with_ext_rec": [[41, 56], ["os.path.isdir", "len", "sorted", "base_dir.split", "os.walk", "root.split", "os.path.sep.join", "os.path.join", "images.append", "os.path.isfile", "os.path.splitext", "os.path.join", "fname.lower"], "function", ["None"], ["", "def", "list_files_with_ext_rec", "(", "base_dir", ",", "images", ",", "valid_exts", ")", ":", "\n", "    ", "assert", "isdir", "(", "base_dir", ")", ",", "f'{base_dir} is not a valid directory'", "\n", "base_path_len", "=", "len", "(", "base_dir", ".", "split", "(", "os_path_sep", ")", ")", "\n", "for", "root", ",", "dnames", ",", "fnames", "in", "sorted", "(", "walk", "(", "base_dir", ",", "followlinks", "=", "True", ")", ")", ":", "\n", "        ", "root_parts", "=", "root", ".", "split", "(", "os_path_sep", ")", "\n", "root_m", "=", "os_path_sep", ".", "join", "(", "root_parts", "[", "base_path_len", ":", "]", ")", "\n", "\n", "for", "fname", "in", "fnames", ":", "\n", "            ", "if", "not", "isfile", "(", "join", "(", "root", ",", "fname", ")", ")", ":", "\n", "                ", "continue", "\n", "", "filext", "=", "splitext", "(", "fname", ".", "lower", "(", ")", ")", "[", "1", "]", "\n", "if", "filext", "not", "in", "valid_exts", ":", "\n", "                ", "continue", "\n", "", "path", "=", "join", "(", "root_m", ",", "fname", ")", "\n", "images", ".", "append", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_images": [[58, 68], ["os.listdir", "images_list.append", "os.path.isfile", "os.path.splitext", "os.path.join", "f.lower"], "function", ["None"], ["", "", "", "def", "list_images", "(", "base_dir", ",", "valid_exts", "=", "[", "'.jpg'", ",", "'.jpeg'", ",", "'.png'", ",", "'.bmp'", ",", "'.ppm'", "]", ")", ":", "\n", "    ", "images_list", "=", "[", "]", "\n", "for", "f", "in", "listdir", "(", "base_dir", ")", ":", "\n", "        ", "if", "not", "isfile", "(", "join", "(", "base_dir", ",", "f", ")", ")", ":", "\n", "            ", "continue", "\n", "", "filext", "=", "splitext", "(", "f", ".", "lower", "(", ")", ")", "[", "1", "]", "\n", "if", "filext", "not", "in", "valid_exts", ":", "\n", "            ", "continue", "\n", "", "images_list", ".", "append", "(", "f", ")", "\n", "", "return", "images_list", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_seg_color_map": [[70, 79], ["numpy.array", "numpy.array", "numpy.array", "color_map.append", "color_map.append", "color_map.append"], "function", ["None"], ["", "def", "get_seg_color_map", "(", ")", ":", "\n", "    ", "color_bg", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_fg", "=", "np", ".", "array", "(", "[", "13", ",", "198", ",", "20", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_neg", "=", "np", ".", "array", "(", "[", "54", ",", "30", ",", "211", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_map", "=", "[", "]", "\n", "color_map", ".", "append", "(", "[", "0", ",", "color_bg", "]", ")", "\n", "color_map", ".", "append", "(", "[", "1", ",", "color_fg", "]", ")", "\n", "color_map", ".", "append", "(", "[", "2", ",", "color_neg", "]", ")", "\n", "return", "color_map", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_draw_mask": [[81, 104], ["numpy.array", "utils.get_seg_color_map"], "function", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_seg_color_map"], ["", "def", "get_draw_mask", "(", "img", ",", "mask", ",", "alpha", "=", "0.5", ",", "color_map", "=", "None", ",", "skip_background", "=", "True", ")", ":", "\n", "    ", "if", "color_map", "is", "None", ":", "\n", "        ", "color_map", "=", "get_seg_color_map", "(", ")", "\n", "\n", "", "im_cpy", "=", "np", ".", "array", "(", "img", ")", "\n", "\n", "im_cpy_b", "=", "im_cpy", "[", ":", ",", ":", ",", "0", "]", "\n", "im_cpy_g", "=", "im_cpy", "[", ":", ",", ":", ",", "1", "]", "\n", "im_cpy_r", "=", "im_cpy", "[", ":", ",", ":", ",", "2", "]", "\n", "\n", "for", "idx", ",", "color", "in", "color_map", ":", "\n", "        ", "if", "idx", "==", "0", "and", "skip_background", ":", "\n", "            ", "continue", "\n", "", "mask_cur", "=", "mask", "==", "idx", "\n", "im_cpy_b", "[", "mask_cur", "]", "=", "alpha", "*", "color", "[", "0", "]", "+", "(", "1", "-", "alpha", ")", "*", "im_cpy_b", "[", "mask_cur", "]", "\n", "im_cpy_g", "[", "mask_cur", "]", "=", "alpha", "*", "color", "[", "1", "]", "+", "(", "1", "-", "alpha", ")", "*", "im_cpy_g", "[", "mask_cur", "]", "\n", "im_cpy_r", "[", "mask_cur", "]", "=", "alpha", "*", "color", "[", "2", "]", "+", "(", "1", "-", "alpha", ")", "*", "im_cpy_r", "[", "mask_cur", "]", "\n", "\n", "", "im_cpy", "[", ":", ",", ":", ",", "0", "]", "=", "im_cpy_b", "\n", "im_cpy", "[", ":", ",", ":", ",", "1", "]", "=", "im_cpy_g", "\n", "im_cpy", "[", ":", ",", ":", ",", "2", "]", "=", "im_cpy_r", "\n", "\n", "return", "im_cpy", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.morph_mask": [[106, 111], ["numpy.ones", "cv2.morphologyEx", "cv2.morphologyEx"], "function", ["None"], ["", "def", "morph_mask", "(", "mask", ")", ":", "\n", "    ", "kernel", "=", "np", ".", "ones", "(", "(", "5", ",", "5", ")", ",", "np", ".", "uint8", ")", "\n", "mask", "=", "cv2", ".", "morphologyEx", "(", "mask", ",", "cv2", ".", "MORPH_CLOSE", ",", "kernel", ")", "\n", "mask", "=", "cv2", ".", "morphologyEx", "(", "mask", ",", "cv2", ".", "MORPH_OPEN", ",", "kernel", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.load_config_file": [[113, 117], ["open", "yaml.load"], "function", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load"], ["", "def", "load_config_file", "(", "config_path", ")", ":", "\n", "    ", "with", "open", "(", "config_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "cfg", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.bbox_xywh_to_xyxy": [[119, 148], ["isinstance", "isinstance", "IndexError", "numpy.maximum", "numpy.maximum", "numpy.hstack", "TypeError", "len", "IndexError", "len", "type", "numpy.maximum"], "function", ["None"], ["", "def", "bbox_xywh_to_xyxy", "(", "xywh", ")", ":", "\n", "    ", "\"\"\"Convert bounding boxes from format (xmin, ymin, w, h) to (xmin, ymin, xmax, ymax)\n    Parameters\n    ----------\n    xywh : list, tuple or numpy.ndarray\n        The bbox in format (x, y, w, h).\n        If numpy.ndarray is provided, we expect multiple bounding boxes with\n        shape `(N, 4)`.\n    Returns\n    -------\n    tuple or numpy.ndarray\n        The converted bboxes in format (xmin, ymin, xmax, ymax).\n        If input is numpy.ndarray, return is numpy.ndarray correspondingly.\n    \"\"\"", "\n", "if", "isinstance", "(", "xywh", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "if", "not", "len", "(", "xywh", ")", "==", "4", ":", "\n", "            ", "raise", "IndexError", "(", "\n", "\"Bounding boxes must have 4 elements, given {}\"", ".", "format", "(", "len", "(", "xywh", ")", ")", ")", "\n", "", "w", ",", "h", "=", "np", ".", "maximum", "(", "xywh", "[", "2", "]", "-", "1", ",", "0", ")", ",", "np", ".", "maximum", "(", "xywh", "[", "3", "]", "-", "1", ",", "0", ")", "\n", "return", "xywh", "[", "0", "]", ",", "xywh", "[", "1", "]", ",", "xywh", "[", "0", "]", "+", "w", ",", "xywh", "[", "1", "]", "+", "h", "\n", "", "elif", "isinstance", "(", "xywh", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "if", "not", "xywh", ".", "size", "%", "4", "==", "0", ":", "\n", "            ", "raise", "IndexError", "(", "\n", "\"Bounding boxes must have n * 4 elements, given {}\"", ".", "format", "(", "xywh", ".", "shape", ")", ")", "\n", "", "xyxy", "=", "np", ".", "hstack", "(", "(", "xywh", "[", ":", ",", ":", "2", "]", ",", "xywh", "[", ":", ",", ":", "2", "]", "+", "np", ".", "maximum", "(", "0", ",", "xywh", "[", ":", ",", "2", ":", "4", "]", "-", "1", ")", ")", ")", "\n", "return", "xyxy", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'Expect input xywh a list, tuple or numpy.ndarray, given {}'", ".", "format", "(", "type", "(", "xywh", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.bbox_xyxy_to_xywh": [[150, 179], ["isinstance", "isinstance", "IndexError", "numpy.hstack", "TypeError", "len", "IndexError", "len", "type"], "function", ["None"], ["", "", "def", "bbox_xyxy_to_xywh", "(", "xyxy", ")", ":", "\n", "    ", "\"\"\"Convert bounding boxes from format (xmin, ymin, xmax, ymax) to (x, y, w, h).\n    Parameters\n    ----------\n    xyxy : list, tuple or numpy.ndarray\n        The bbox in format (xmin, ymin, xmax, ymax).\n        If numpy.ndarray is provided, we expect multiple bounding boxes with\n        shape `(N, 4)`.\n    Returns\n    -------\n    tuple or numpy.ndarray\n        The converted bboxes in format (x, y, w, h).\n        If input is numpy.ndarray, return is numpy.ndarray correspondingly.\n    \"\"\"", "\n", "if", "isinstance", "(", "xyxy", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "        ", "if", "not", "len", "(", "xyxy", ")", "==", "4", ":", "\n", "            ", "raise", "IndexError", "(", "\n", "\"Bounding boxes must have 4 elements, given {}\"", ".", "format", "(", "len", "(", "xyxy", ")", ")", ")", "\n", "", "x1", ",", "y1", "=", "xyxy", "[", "0", "]", ",", "xyxy", "[", "1", "]", "\n", "w", ",", "h", "=", "xyxy", "[", "2", "]", "-", "x1", "+", "1", ",", "xyxy", "[", "3", "]", "-", "y1", "+", "1", "\n", "return", "x1", ",", "y1", ",", "w", ",", "h", "\n", "", "elif", "isinstance", "(", "xyxy", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "if", "not", "xyxy", ".", "size", "%", "4", "==", "0", ":", "\n", "            ", "raise", "IndexError", "(", "\n", "\"Bounding boxes must have n * 4 elements, given {}\"", ".", "format", "(", "xyxy", ".", "shape", ")", ")", "\n", "", "return", "np", ".", "hstack", "(", "(", "xyxy", "[", ":", ",", ":", "2", "]", ",", "xyxy", "[", ":", ",", "2", ":", "4", "]", "-", "xyxy", "[", ":", ",", ":", "2", "]", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "\n", "'Expect input xywh a list, tuple or numpy.ndarray, given {}'", ".", "format", "(", "type", "(", "xyxy", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.calculate_xyxy_area": [[181, 184], ["abs", "abs"], "function", ["None"], ["", "", "def", "calculate_xyxy_area", "(", "xyxy", ")", ":", "\n", "    ", "x0", ",", "y0", ",", "x1", ",", "y1", "=", "xyxy", "\n", "return", "abs", "(", "x0", "-", "x1", ")", "*", "abs", "(", "y0", "-", "y1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.draw_rects": [[186, 189], ["utils.draw_rect"], "function", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.draw_rect"], ["", "def", "draw_rects", "(", "img", ",", "xyxys", ",", "color", "=", "(", "11", ",", "250", ",", "12", ")", ",", "thickness", "=", "2", ")", ":", "\n", "    ", "for", "xyxy", "in", "xyxys", ":", "\n", "        ", "draw_rect", "(", "img", ",", "xyxy", ",", "color", "=", "color", ",", "thickness", "=", "thickness", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.draw_rect": [[191, 202], ["min", "min", "min", "min", "cv2.rectangle", "max", "max", "max", "max"], "function", ["None"], ["", "", "def", "draw_rect", "(", "img", ",", "xyxy", ",", "color", "=", "(", "11", ",", "250", ",", "12", ")", ",", "thickness", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "\n", "    ", "xyxy", "[", "0", "]", "=", "min", "(", "img", ".", "shape", "[", "1", "]", ",", "max", "(", "0", ",", "xyxy", "[", "0", "]", ")", ")", "\n", "xyxy", "[", "1", "]", "=", "min", "(", "img", ".", "shape", "[", "0", "]", ",", "max", "(", "0", ",", "xyxy", "[", "1", "]", ")", ")", "\n", "xyxy", "[", "2", "]", "=", "min", "(", "img", ".", "shape", "[", "1", "]", ",", "max", "(", "0", ",", "xyxy", "[", "2", "]", ")", ")", "\n", "xyxy", "[", "3", "]", "=", "min", "(", "img", ".", "shape", "[", "0", "]", ",", "max", "(", "0", ",", "xyxy", "[", "3", "]", ")", ")", "\n", "\n", "pt1", "=", "(", "xyxy", "[", "0", "]", ",", "xyxy", "[", "1", "]", ")", "\n", "pt2", "=", "(", "xyxy", "[", "2", "]", ",", "xyxy", "[", "3", "]", ")", "\n", "\n", "cv2", ".", "rectangle", "(", "img", ",", "pt1", ",", "pt2", ",", "color", ",", "thickness", "=", "thickness", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.crop_image": [[204, 233], ["int", "int", "int", "int", "max", "max", "max", "max", "max", "max", "max", "max", "len", "len", "numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "def", "crop_image", "(", "img", ",", "bbox", ")", ":", "\n", "    ", "x_st", "=", "bbox", "[", "0", "]", "\n", "y_st", "=", "bbox", "[", "1", "]", "\n", "\n", "x_en", "=", "bbox", "[", "0", "]", "+", "bbox", "[", "2", "]", "-", "1", "\n", "y_en", "=", "bbox", "[", "1", "]", "+", "bbox", "[", "3", "]", "-", "1", "\n", "\n", "x_st_pad", "=", "int", "(", "max", "(", "0", ",", "-", "x_st", ")", ")", "\n", "y_st_pad", "=", "int", "(", "max", "(", "0", ",", "-", "y_st", ")", ")", "\n", "x_en_pad", "=", "int", "(", "max", "(", "0", ",", "x_en", "-", "img", ".", "shape", "[", "1", "]", "+", "1", ")", ")", "\n", "y_en_pad", "=", "int", "(", "max", "(", "0", ",", "y_en", "-", "img", ".", "shape", "[", "0", "]", "+", "1", ")", ")", "\n", "\n", "x_en", "=", "x_en", "+", "max", "(", "0", ",", "-", "x_st", ")", "\n", "y_en", "=", "y_en", "+", "max", "(", "0", ",", "-", "y_st", ")", "\n", "x_st", "=", "max", "(", "0", ",", "x_st", ")", "\n", "y_st", "=", "max", "(", "0", ",", "y_st", ")", "\n", "\n", "if", "y_st_pad", "!=", "0", "or", "y_en_pad", "!=", "0", "or", "x_st_pad", "!=", "0", "or", "x_en_pad", "!=", "0", ":", "\n", "        ", "assert", "len", "(", "img", ".", "shape", ")", "in", "(", "2", ",", "3", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "            ", "img_pad", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", "+", "y_st_pad", "+", "y_en_pad", ",", "img", ".", "shape", "[", "1", "]", "+", "x_st_pad", "+", "x_en_pad", ",", "img", ".", "shape", "[", "2", "]", ")", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "img_pad", "[", "y_st_pad", ":", "y_st_pad", "+", "img", ".", "shape", "[", "0", "]", ",", "x_st_pad", ":", "x_st_pad", "+", "img", ".", "shape", "[", "1", "]", ",", ":", "]", "=", "img", "\n", "", "else", ":", "\n", "            ", "img_pad", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", "+", "y_st_pad", "+", "y_en_pad", ",", "img", ".", "shape", "[", "1", "]", "+", "x_st_pad", "+", "x_en_pad", ")", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "img_pad", "[", "y_st_pad", ":", "y_st_pad", "+", "img", ".", "shape", "[", "0", "]", ",", "x_st_pad", ":", "x_st_pad", "+", "img", ".", "shape", "[", "1", "]", "]", "=", "img", "\n", "", "", "else", ":", "\n", "        ", "img_pad", "=", "img", "\n", "", "img_cropped", "=", "img_pad", "[", "y_st", ":", "y_en", "+", "1", ",", "x_st", ":", "x_en", "+", "1", "]", "\n", "return", "img_cropped", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.prepare_crop": [[235, 265], ["int", "int", "int", "int", "utils.crop_image", "cv2.resize", "float", "float"], "function", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.crop_image"], ["", "def", "prepare_crop", "(", "im", ",", "prepare_sz", ",", "fit_whole", "=", "False", ",", "use_nn_interpolation", "=", "False", ")", ":", "\n", "    ", "if", "im", ".", "shape", "[", "0", "]", "!=", "prepare_sz", "[", "1", "]", "or", "im", ".", "shape", "[", "1", "]", "!=", "prepare_sz", "[", "0", "]", ":", "\n", "        ", "prepare_r", "=", "float", "(", "prepare_sz", "[", "0", "]", ")", "/", "prepare_sz", "[", "1", "]", "\n", "orig_r", "=", "float", "(", "im", ".", "shape", "[", "1", "]", ")", "/", "im", ".", "shape", "[", "0", "]", "\n", "\n", "if", "fit_whole", ":", "\n", "            ", "do_fit_width", "=", "orig_r", ">", "prepare_r", "\n", "", "else", ":", "\n", "            ", "do_fit_width", "=", "orig_r", "<", "prepare_r", "\n", "\n", "", "if", "do_fit_width", ":", "\n", "# fit width", "\n", "            ", "crop_w", "=", "im", ".", "shape", "[", "1", "]", "\n", "crop_h", "=", "crop_w", "/", "prepare_r", "\n", "", "else", ":", "\n", "# fit height", "\n", "            ", "crop_h", "=", "im", ".", "shape", "[", "0", "]", "\n", "crop_w", "=", "crop_h", "*", "prepare_r", "\n", "\n", "", "crop_x", "=", "int", "(", "(", "im", ".", "shape", "[", "1", "]", "-", "crop_w", ")", "/", "2.", ")", "\n", "crop_y", "=", "int", "(", "(", "im", ".", "shape", "[", "0", "]", "-", "crop_h", ")", "/", "2.", ")", "\n", "crop_w", "=", "int", "(", "crop_w", ")", "\n", "crop_h", "=", "int", "(", "crop_h", ")", "\n", "\n", "crop_rect", "=", "[", "crop_x", ",", "crop_y", ",", "crop_w", ",", "crop_h", "]", "\n", "im", "=", "crop_image", "(", "im", ",", "crop_rect", ")", "\n", "\n", "interp", "=", "cv2", ".", "INTER_NEAREST", "if", "use_nn_interpolation", "else", "cv2", ".", "INTER_LINEAR", "\n", "im", "=", "cv2", ".", "resize", "(", "im", ",", "prepare_sz", ",", "interpolation", "=", "interp", ")", "\n", "", "return", "im", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_2.DecoderResBlock.__init__": [[7, 28], ["torch.Module.__init__", "net_block.append", "net_block.append", "net_block.append", "net_block.append", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "net_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "net_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_size", ",", "use_bn", ",", "in_c", "=", "None", ")", ":", "\n", "        ", "super", "(", "DecoderResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_c", "=", "conv_size", "if", "in_c", "is", "None", "else", "in_c", "\n", "\n", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "            ", "net_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "", "net_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "conv_size", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "            ", "net_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "", "net_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "self", ".", "base_layers", "=", "nn", ".", "Sequential", "(", "*", "net_block", ")", "\n", "\n", "if", "conv_size", "!=", "in_c", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "1", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_2.DecoderResBlock.forward": [[29, 33], ["networks_seg_2.DecoderResBlock.base_layers", "networks_seg_2.DecoderResBlock.shortcut", "numpy.sqrt"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "base_layers", "(", "x", ")", "\n", "sc", "=", "x", "if", "self", ".", "shortcut", "is", "None", "else", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "(", "sc", "+", "y", ")", "/", "np", ".", "sqrt", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_2.Decoder.__init__": [[37, 89], ["torch.Module.__init__", "len", "torch.ModuleDict", "torch.ModuleDict", "range", "torch.ModuleDict", "torch.ModuleDict", "range", "min", "cvt_block.append", "cvt_block.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "range", "min", "torch.Conv2d", "torch.Conv2d", "cvt_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "cvt_block.append", "net_block.append", "net_block.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "isinstance", "torch.Dropout", "torch.Dropout", "torch.Upsample", "torch.Upsample", "net_block.append", "net_block.append", "net_block.append", "torch.Conv2d", "torch.Conv2d", "networks_seg_2.DecoderResBlock", "torch.Conv2d", "torch.Conv2d", "net_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fmap_base", ",", "max_res_log2", ",", "num_classes", ",", "fmap_max", "=", "512", ",", "decoder_fmap_max", "=", "512", ",", "use_bn", "=", "True", ",", "dropout", "=", "0.5", ",", "use_res_block", "=", "False", ",", "\n", "features_list", "=", "None", ",", "skip_n_last_features", "=", "0", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels_list", "=", "[", "min", "(", "fmap_max", ",", "int", "(", "fmap_base", "//", "(", "2.0", "**", "(", "i", "-", "1", ")", ")", ")", ")", "for", "i", "in", "range", "(", "2", ",", "max_res_log2", "+", "1", ")", "]", "\n", "if", "features_list", "is", "None", ":", "\n", "            ", "features_list", "=", "[", "min", "(", "decoder_fmap_max", ",", "f", ")", "for", "f", "in", "in_channels_list", "]", "\n", "\n", "", "self", ".", "_features", "=", "features_list", "+", "[", "num_classes", "]", "\n", "self", ".", "_in_channels", "=", "in_channels_list", "\n", "self", ".", "_num_feats", "=", "len", "(", "self", ".", "_in_channels", ")", "\n", "self", ".", "_num_skip_last", "=", "skip_n_last_features", "\n", "\n", "cvt_blocks", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_num_feats", "-", "self", ".", "_num_skip_last", ")", ":", "\n", "            ", "conv_size", "=", "self", ".", "_features", "[", "i", "]", "\n", "in_c", "=", "self", ".", "_in_channels", "[", "i", "]", "\n", "cvt_block", "=", "[", "]", "\n", "cvt_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "                ", "cvt_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "\n", "", "cvt_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "if", "dropout", "is", "not", "None", ":", "\n", "                ", "dropout_i", "=", "dropout", "[", "i", "]", "if", "isinstance", "(", "dropout", ",", "list", ")", "else", "dropout", "\n", "cvt_block", ".", "append", "(", "nn", ".", "Dropout", "(", "dropout_i", ")", ")", "\n", "\n", "", "cvt_blocks", "[", "f'cvt_block_{i}'", "]", "=", "nn", ".", "Sequential", "(", "*", "cvt_block", ")", "\n", "", "self", ".", "cvt_blocks", "=", "cvt_blocks", "\n", "\n", "main_blocks", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_num_feats", ")", ":", "\n", "            ", "conv_size", "=", "self", ".", "_features", "[", "i", "+", "1", "]", "\n", "in_c", "=", "self", ".", "_features", "[", "i", "]", "\n", "is_double_features", "=", "i", ">", "0", "and", "i", "<", "self", ".", "_num_feats", "-", "self", ".", "_num_skip_last", "\n", "in_c", "=", "2", "*", "in_c", "if", "is_double_features", "else", "in_c", "\n", "if", "i", "<", "self", ".", "_num_feats", "-", "1", ":", "\n", "                ", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "if", "use_res_block", ":", "\n", "                    ", "net_block", ".", "append", "(", "DecoderResBlock", "(", "conv_size", ",", "use_bn", ",", "in_c", ")", ")", "\n", "", "else", ":", "\n", "                    ", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "                        ", "net_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "", "net_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "\n", "", "main_blocks", "[", "f'main_block_{i}'", "]", "=", "nn", ".", "Sequential", "(", "*", "net_block", ")", "\n", "", "self", ".", "main_blocks", "=", "main_blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_2.Decoder.forward": [[91, 114], ["range", "net_block", "cvt_block", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "        ", "prev", "=", "None", "\n", "pred", "=", "None", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "_num_feats", ")", ":", "\n", "            ", "accept_feature", "=", "i", "<", "self", ".", "_num_feats", "-", "self", ".", "_num_skip_last", "\n", "cvt_block", "=", "self", ".", "cvt_blocks", "[", "f'cvt_block_{i}'", "]", "if", "accept_feature", "else", "None", "\n", "input_i", "=", "inputs", "[", "i", "]", "if", "accept_feature", "else", "None", "\n", "if", "input_i", "is", "None", ":", "\n", "                ", "assert", "prev", "is", "not", "None", "\n", "input_i", "=", "prev", "\n", "", "else", ":", "\n", "                ", "if", "cvt_block", "is", "not", "None", ":", "\n", "                    ", "input_i", "=", "cvt_block", "(", "input_i", ")", "\n", "", "if", "prev", "is", "not", "None", ":", "\n", "                    ", "input_i", "=", "torch", ".", "cat", "(", "[", "prev", ",", "input_i", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "", "net_block", "=", "self", ".", "main_blocks", "[", "f'main_block_{i}'", "]", "\n", "pred", "=", "net_block", "(", "input_i", ")", "\n", "prev", "=", "pred", "\n", "\n", "", "return", "pred", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_pt.DecoderResBlock.__init__": [[7, 28], ["torch.Module.__init__", "net_block.append", "net_block.append", "net_block.append", "net_block.append", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "net_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "net_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_size", ",", "use_bn", ",", "in_c", "=", "None", ")", ":", "\n", "        ", "super", "(", "DecoderResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_c", "=", "conv_size", "if", "in_c", "is", "None", "else", "in_c", "\n", "\n", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "            ", "net_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "", "net_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "conv_size", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "            ", "net_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "", "net_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "self", ".", "base_layers", "=", "nn", ".", "Sequential", "(", "*", "net_block", ")", "\n", "\n", "if", "conv_size", "!=", "in_c", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "1", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_pt.DecoderResBlock.forward": [[29, 33], ["networks_seg_pt.DecoderResBlock.base_layers", "networks_seg_pt.DecoderResBlock.shortcut", "numpy.sqrt"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "base_layers", "(", "x", ")", "\n", "sc", "=", "x", "if", "self", ".", "shortcut", "is", "None", "else", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "(", "sc", "+", "y", ")", "/", "np", ".", "sqrt", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_pt.Decoder.__init__": [[37, 79], ["torch.Module.__init__", "len", "torch.ModuleDict", "torch.ModuleDict", "range", "torch.ModuleDict", "torch.ModuleDict", "range", "cvt_block.append", "cvt_block.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "cvt_block.append", "torch.LeakyReLU", "torch.LeakyReLU", "cvt_block.append", "net_block.append", "net_block.append", "net_block.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Upsample", "torch.Upsample", "networks_seg_pt.DecoderResBlock", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_features", "=", "cfg", "[", "'features'", "]", "\n", "self", ".", "_in_channels", "=", "cfg", "[", "'in_channels'", "]", "\n", "self", ".", "_start_res", "=", "cfg", "[", "'start_res'", "]", "\n", "self", ".", "_num_feats", "=", "len", "(", "self", ".", "_in_channels", ")", "\n", "\n", "use_bn", "=", "cfg", "[", "'use_bn'", "]", "\n", "use_dropout", "=", "cfg", "[", "'use_dropout'", "]", "\n", "\n", "cvt_blocks", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_start_res", ",", "self", ".", "_num_feats", ")", ":", "\n", "            ", "conv_size", "=", "self", ".", "_features", "[", "i", "]", "\n", "in_c", "=", "self", ".", "_in_channels", "[", "i", "]", "\n", "cvt_block", "=", "[", "]", "\n", "cvt_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "if", "use_bn", ":", "\n", "                ", "cvt_block", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_size", ")", ")", "\n", "\n", "", "cvt_block", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "if", "use_dropout", ":", "\n", "                ", "cvt_block", ".", "append", "(", "nn", ".", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "", "cvt_blocks", "[", "f'cvt_block_{i}'", "]", "=", "nn", ".", "Sequential", "(", "*", "cvt_block", ")", "\n", "", "self", ".", "cvt_blocks", "=", "cvt_blocks", "\n", "\n", "main_blocks", "=", "nn", ".", "ModuleDict", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "_start_res", ",", "self", ".", "_num_feats", ")", ":", "\n", "            ", "conv_size", "=", "self", ".", "_features", "[", "i", "+", "1", "]", "\n", "in_c", "=", "self", ".", "_features", "[", "i", "]", "\n", "in_c", "=", "2", "*", "in_c", "if", "i", ">", "self", ".", "_start_res", "else", "in_c", "\n", "if", "i", "<", "self", ".", "_num_feats", "-", "1", ":", "\n", "                ", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ")", "\n", "net_block", ".", "append", "(", "DecoderResBlock", "(", "conv_size", ",", "use_bn", ",", "in_c", ")", ")", "\n", "", "else", ":", "\n", "                ", "net_block", "=", "[", "]", "\n", "net_block", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_c", ",", "conv_size", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "True", ")", ")", "\n", "\n", "", "main_blocks", "[", "f'main_block_{i}'", "]", "=", "nn", ".", "Sequential", "(", "*", "net_block", ")", "\n", "", "self", ".", "main_blocks", "=", "main_blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_seg_pt.Decoder.forward": [[81, 99], ["range", "net_block", "cvt_block", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "        ", "prev", "=", "None", "\n", "pred", "=", "None", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "_start_res", ",", "self", ".", "_num_feats", ")", ":", "\n", "            ", "cvt_block", "=", "self", ".", "cvt_blocks", "[", "f'cvt_block_{i}'", "]", "\n", "input_i", "=", "inputs", "[", "i", "]", "\n", "if", "cvt_block", "is", "not", "None", ":", "\n", "                ", "input_i", "=", "cvt_block", "(", "input_i", ")", "\n", "\n", "", "if", "i", ">", "self", ".", "_start_res", ":", "\n", "                ", "input_i", "=", "torch", ".", "cat", "(", "[", "prev", ",", "input_i", "]", ",", "dim", "=", "1", ")", "\n", "", "net_block", "=", "self", ".", "main_blocks", "[", "f'main_block_{i}'", "]", "\n", "pred", "=", "net_block", "(", "input_i", ")", "\n", "prev", "=", "pred", "\n", "\n", "", "return", "pred", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Conv2dModulatedMod.__init__": [[13, 59], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Linear", "torch.Linear", "torch.Linear", "networks_stylegan2.Conv2dModulatedMod.reset_parameters", "isinstance", "isinstance", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "lib.nn.layers.ops.BlurKernel", "lib.nn.layers.ops.BlurKernel", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Conv2dModulated.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "latent_size", ",", "kernel_size", ",", "padding", "=", "0", ",", "\n", "demodulate", "=", "True", ",", "fused_modconv", "=", "True", ",", "return_features_before_conv", "=", "False", ",", "\n", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "return_features_before_conv", "=", "return_features_before_conv", "\n", "\n", "if", "not", "isinstance", "(", "kernel_size", ",", "tuple", ")", ":", "\n", "            ", "kernel_size", "=", "(", "kernel_size", ",", "kernel_size", ")", "\n", "", "if", "not", "isinstance", "(", "padding", ",", "tuple", ")", ":", "\n", "            ", "padding", "=", "(", "padding", ",", "padding", ")", "\n", "\n", "", "self", ".", "padding", "=", "padding", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n", "self", ".", "demodulate", "=", "demodulate", "\n", "self", ".", "fused_modconv", "=", "fused_modconv", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ",", "in_channels", ",", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", ")", "\n", "\n", "self", ".", "affine", "=", "nn", ".", "Linear", "(", "latent_size", ",", "in_channels", ",", "bias", "=", "True", ")", "\n", "self", ".", "affine", ".", "_wscale_params", "=", "{", "'gain'", ":", "1.0", "}", "\n", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "factor", "=", "2", "\n", "assert", "kernel_size", "[", "0", "]", "==", "kernel_size", "[", "1", "]", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "-", "(", "kernel_size", "[", "0", "]", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "+", "1", "\n", "\n", "self", ".", "blur", "=", "BlurKernel", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ",", "upsample_factor", "=", "factor", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "assert", "kernel_size", "[", "0", "]", "==", "kernel_size", "[", "1", "]", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "[", "0", "]", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "blur", "=", "BlurKernel", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", "\n", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Conv2dModulatedMod.reset_parameters": [[60, 62], ["torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "math.sqrt"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "self", ".", "weight", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Conv2dModulatedMod.forward": [[63, 118], ["weight_m.view.transpose().reshape.unsqueeze", "networks_stylegan2.Conv2dModulatedMod.affine", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "networks_stylegan2.Conv2dModulatedMod.blur", "weight_m.view.view.view", "torch.conv2d.reshape", "torch.conv2d.reshape", "torch.conv2d.reshape", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "networks_stylegan2.Conv2dModulatedMod.blur", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "weight_m.view.view.view", "weight_m.view.view.transpose().reshape", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "weight_m.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "\n", "        ", "s", "=", "self", ".", "affine", "(", "w", ")", "+", "1", "\n", "\n", "bs", "=", "w", ".", "shape", "[", "0", "]", "\n", "weight", "=", "self", ".", "weight", "\n", "weight_m", "=", "weight", ".", "unsqueeze", "(", "0", ")", "# [1OIkk]", "\n", "weight_m", "=", "s", "[", ":", ",", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "weight_m", "# [BOIkk]", "\n", "\n", "d", "=", "None", "\n", "if", "self", ".", "demodulate", ":", "\n", "            ", "d", "=", "torch", ".", "rsqrt", "(", "torch", ".", "sum", "(", "weight_m", "**", "2", ",", "dim", "=", "(", "2", ",", "3", ",", "4", ")", ")", "+", "1e-8", ")", "# [BO]", "\n", "weight_m", "=", "d", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "weight_m", "\n", "\n", "", "features", "=", "None", "\n", "if", "not", "self", ".", "fused_modconv", ":", "\n", "            ", "x", "=", "s", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "x", "# x is [BIhw]", "\n", "features", "=", "x", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "self", ".", "blur", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "fused_modconv", ":", "\n", "            ", "weight", "=", "weight_m", ".", "view", "(", "(", "-", "1", ",", "self", ".", "in_channels", ",", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", ")", "# [(B*O)Ikk]", "\n", "x", "=", "x", ".", "reshape", "(", "(", "1", ",", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "torch", ".", "conv2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "bias", "=", "None", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "", "elif", "self", ".", "upsample", ":", "\n", "            ", "if", "self", ".", "fused_modconv", ":", "\n", "                ", "weight_m", "=", "weight_m", ".", "view", "(", "bs", ",", "self", ".", "out_channels", ",", "self", ".", "in_channels", ",", "\n", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", "\n", "weight", "=", "weight_m", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "out_channels", ",", "\n", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", "# [(B*I)Okk]", "\n", "\n", "", "x", "=", "torch", ".", "conv_transpose2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "conv2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "bias", "=", "None", ",", "padding", "=", "self", ".", "padding", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "\n", "", "if", "self", ".", "fused_modconv", ":", "\n", "            ", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "self", ".", "out_channels", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "\n", "", "elif", "self", ".", "demodulate", ":", "\n", "            ", "x", "=", "d", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "x", "# x is (batch_size, channels, height, width)", "\n", "\n", "", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "self", ".", "blur", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "return_features_before_conv", ":", "\n", "            ", "return", "x", ",", "features", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.ScaledLeakyReLU.__init__": [[121, 124], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "negative_slope", "=", "negative_slope", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.ScaledLeakyReLU.forward": [[125, 128], ["torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "numpy.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "F", ".", "leaky_relu", "(", "input", ",", "negative_slope", "=", "self", ".", "negative_slope", ")", "\n", "return", "out", "*", "np", ".", "sqrt", "(", "2.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.StyleGeneratorBlock.__init__": [[131, 146], ["torch.Module.__init__", "lib.nn.layers.ops.Conv2dModulated", "lib.nn.layers.ops.AddNoise", "lib.nn.layers.cuda.fused_bias_act.FusedLeakyReLU", "lib.nn.layers.ops.Conv2dModulated", "lib.nn.layers.ops.AddNoise", "lib.nn.layers.cuda.fused_bias_act.FusedLeakyReLU"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_size", ",", "latent_size", ",", "in_channels", "=", "None", ",", "use_first_conv", "=", "False", ",", "upsample", "=", "False", ")", ":", "\n", "        ", "super", "(", "StyleGeneratorBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "conv_size", "if", "in_channels", "is", "None", "else", "in_channels", "\n", "\n", "self", ".", "use_first_conv", "=", "use_first_conv", "\n", "\n", "if", "self", ".", "use_first_conv", ":", "\n", "            ", "self", ".", "conv1", "=", "Conv2dModulated", "(", "in_channels", ",", "conv_size", ",", "latent_size", ",", "3", ",", "1", ",", "upsample", "=", "upsample", ")", "\n", "self", ".", "addnoise1", "=", "AddNoise", "(", "conv_size", ",", "per_channel", "=", "False", ")", "\n", "self", ".", "bias_act1", "=", "FusedLeakyReLU", "(", "conv_size", ",", "0.2", ")", "\n", "\n", "", "self", ".", "conv2", "=", "Conv2dModulated", "(", "conv_size", ",", "conv_size", ",", "latent_size", ",", "3", ",", "1", ")", "\n", "self", ".", "addnoise2", "=", "AddNoise", "(", "conv_size", ",", "per_channel", "=", "False", ")", "\n", "self", ".", "bias_act2", "=", "FusedLeakyReLU", "(", "conv_size", ",", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.StyleGeneratorBlock.forward": [[147, 162], ["networks_stylegan2.StyleGeneratorBlock.conv2", "networks_stylegan2.StyleGeneratorBlock.addnoise2", "networks_stylegan2.StyleGeneratorBlock.bias_act2", "networks_stylegan2.StyleGeneratorBlock.conv1", "networks_stylegan2.StyleGeneratorBlock.addnoise1", "networks_stylegan2.StyleGeneratorBlock.bias_act1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w1", ",", "w2", "=", "None", ",", "noise1", "=", "None", ",", "noise2", "=", "None", ")", ":", "\n", "\n", "        ", "y", "=", "x", "\n", "\n", "if", "self", ".", "use_first_conv", ":", "\n", "            ", "y", "=", "self", ".", "conv1", "(", "y", ",", "w1", ")", "\n", "y", "=", "self", ".", "addnoise1", "(", "y", ",", "noise1", ")", "\n", "y", "=", "self", ".", "bias_act1", "(", "y", ")", "\n", "\n", "", "w2", "=", "w1", "if", "w2", "is", "None", "or", "not", "self", ".", "use_first_conv", "else", "w2", "\n", "noise2", "=", "noise1", "if", "not", "self", ".", "use_first_conv", "else", "noise2", "\n", "y", "=", "self", ".", "conv2", "(", "y", ",", "w2", ")", "\n", "y", "=", "self", ".", "addnoise2", "(", "y", ",", "noise2", ")", "\n", "y", "=", "self", ".", "bias_act2", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.ToRGB.__init__": [[165, 172], ["torch.Module.__init__", "lib.nn.layers.ops.Conv2dModulated", "lib.nn.layers.ops.Bias"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_size", ",", "latent_size", ",", "in_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "ToRGB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "conv_size", "if", "in_channels", "is", "None", "else", "in_channels", "\n", "\n", "self", ".", "conv1", "=", "Conv2dModulated", "(", "in_channels", ",", "conv_size", ",", "latent_size", ",", "1", ",", "0", ",", "demodulate", "=", "False", ")", "\n", "self", ".", "bias1", "=", "Bias", "(", "conv_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.ToRGB.forward": [[173, 179], ["networks_stylegan2.ToRGB.conv1", "networks_stylegan2.ToRGB.bias1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "\n", "        ", "y", "=", "self", ".", "conv1", "(", "x", ",", "w", ")", "\n", "y", "=", "self", ".", "bias1", "(", "y", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.__init__": [[183, 223], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "networks_stylegan2.Generator.build_upscale2x", "networks_stylegan2.Generator.build_mapping", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "blocks.append", "to_rgbs.append", "networks_stylegan2.Generator.build_conditional_embedding", "networks_stylegan2.Generator.num_features", "networks_stylegan2.Generator.build_block", "networks_stylegan2.Generator.build_to_rgb"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_upscale2x", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_mapping", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_conditional_embedding", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.num_features", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_block", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_to_rgb"], ["    ", "def", "__init__", "(", "self", ",", "max_res_log2", ",", "latent_size", "=", "512", ",", "fmap_base", "=", "8192", ",", "fmap_max", "=", "512", ",", "\n", "base_scale_h", "=", "4", ",", "base_scale_w", "=", "4", ",", "channels", "=", "3", ",", "use_activation", "=", "False", ",", "\n", "use_pn", "=", "True", ",", "label_size", "=", "0", ",", "mix_style", "=", "True", ",", "mix_prob", "=", "0.9", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fmap_base", "=", "fmap_base", "\n", "self", ".", "fmap_decay", "=", "1.0", "\n", "self", ".", "fmap_max", "=", "fmap_max", "\n", "\n", "self", ".", "base_scale_h", "=", "base_scale_h", "\n", "self", ".", "base_scale_w", "=", "base_scale_w", "\n", "\n", "self", ".", "nc", "=", "channels", "\n", "self", ".", "label_size", "=", "label_size", "\n", "self", ".", "latent_size", "=", "latent_size", "\n", "self", ".", "max_res_log2", "=", "max_res_log2", "\n", "self", ".", "alpha", "=", "1.0", "\n", "self", ".", "use_activation", "=", "use_activation", "\n", "self", ".", "use_pn", "=", "use_pn", "\n", "self", ".", "mix_style", "=", "mix_style", "\n", "self", ".", "mix_prob", "=", "mix_prob", "\n", "\n", "self", ".", "constant_tensor", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "self", ".", "num_features", "(", "1", ")", ",", "self", ".", "base_scale_h", ",", "self", ".", "base_scale_w", ")", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "constant_tensor", ",", "1", ")", "\n", "\n", "blocks", "=", "[", "]", "\n", "to_rgbs", "=", "[", "]", "\n", "for", "res_log2", "in", "range", "(", "2", ",", "self", ".", "max_res_log2", "+", "1", ")", ":", "\n", "            ", "blocks", ".", "append", "(", "self", ".", "build_block", "(", "res_log2", ")", ")", "\n", "to_rgbs", ".", "append", "(", "self", ".", "build_to_rgb", "(", "res_log2", ")", ")", "\n", "\n", "", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "blocks", ")", "\n", "self", ".", "to_rgbs", "=", "nn", ".", "ModuleList", "(", "to_rgbs", ")", "\n", "\n", "self", ".", "upscale2x", "=", "self", ".", "build_upscale2x", "(", ")", "\n", "self", ".", "mapping", "=", "self", ".", "build_mapping", "(", ")", "\n", "\n", "self", ".", "conditional_embedding", "=", "None", "\n", "if", "self", ".", "label_size", ">", "0", ":", "\n", "            ", "self", ".", "conditional_embedding", "=", "self", ".", "build_conditional_embedding", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_mapping": [[224, 237], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append", "layers.append", "lib.nn.layers.ops.PixelNorm", "torch.Linear", "torch.Linear", "torch.Linear", "networks_stylegan2.ScaledLeakyReLU"], "methods", ["None"], ["", "", "def", "build_mapping", "(", "self", ")", ":", "\n", "\n", "        ", "layers", "=", "[", "]", "\n", "in_units", "=", "self", ".", "latent_size", "\n", "if", "self", ".", "use_pn", ":", "\n", "            ", "layers", ".", "append", "(", "PixelNorm", "(", ")", ")", "\n", "", "for", "i", "in", "range", "(", "8", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "in_units", ",", "self", ".", "latent_size", ")", ")", "\n", "in_units", "=", "self", ".", "latent_size", "\n", "layers", ".", "append", "(", "ScaledLeakyReLU", "(", "0.2", ")", ")", "\n", "\n", "", "mapping", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_upscale2x": [[238, 241], ["lib.nn.layers.ops.UpsampleKernel"], "methods", ["None"], ["", "def", "build_upscale2x", "(", "self", ")", ":", "\n", "        ", "upscale2x", "=", "UpsampleKernel", "(", "kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", "\n", "return", "upscale2x", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.num_features": [[242, 245], ["int", "min"], "methods", ["None"], ["", "def", "num_features", "(", "self", ",", "res_log2", ")", ":", "\n", "        ", "fmaps", "=", "int", "(", "self", ".", "fmap_base", "/", "(", "2.0", "**", "(", "(", "res_log2", "-", "1", ")", "*", "self", ".", "fmap_decay", ")", ")", ")", "\n", "return", "min", "(", "fmaps", ",", "self", ".", "fmap_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_to_rgb": [[246, 249], ["networks_stylegan2.Generator.num_features", "networks_stylegan2.ToRGB"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.num_features"], ["", "def", "build_to_rgb", "(", "self", ",", "res_log2", ")", ":", "\n", "        ", "conv_size", "=", "self", ".", "num_features", "(", "res_log2", ")", "\n", "return", "ToRGB", "(", "self", ".", "nc", ",", "self", ".", "latent_size", ",", "in_channels", "=", "conv_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_block": [[250, 263], ["networks_stylegan2.Generator.num_features", "networks_stylegan2.Generator.num_features", "networks_stylegan2.StyleGeneratorBlock", "networks_stylegan2.StyleGeneratorBlock"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.num_features", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.num_features"], ["", "def", "build_block", "(", "self", ",", "res_log2", ")", ":", "\n", "        ", "conv_size", "=", "self", ".", "num_features", "(", "res_log2", ")", "\n", "in_channels", "=", "self", ".", "num_features", "(", "res_log2", "-", "1", ")", "\n", "\n", "if", "res_log2", "==", "2", ":", "\n", "            ", "net_block", "=", "StyleGeneratorBlock", "(", "conv_size", ",", "self", ".", "latent_size", ",", "\n", "use_first_conv", "=", "False", ",", "in_channels", "=", "in_channels", ",", "\n", "upsample", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "net_block", "=", "StyleGeneratorBlock", "(", "conv_size", ",", "self", ".", "latent_size", ",", "\n", "use_first_conv", "=", "True", ",", "in_channels", "=", "in_channels", ",", "\n", "upsample", "=", "True", ")", "\n", "", "return", "net_block", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.build_conditional_embedding": [[264, 267], ["torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["None"], ["", "def", "build_conditional_embedding", "(", "self", ")", ":", "\n", "        ", "embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "label_size", ",", "self", ".", "latent_size", ")", "\n", "return", "embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_style_mixing": [[268, 280], ["torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "torch.flip", "numpy.random.uniform", "numpy.random.randint"], "methods", ["None"], ["", "def", "run_style_mixing", "(", "self", ",", "w", ")", ":", "\n", "        ", "if", "self", ".", "mix_style", "and", "self", ".", "training", ":", "\n", "            ", "w_rev", "=", "torch", ".", "flip", "(", "w", ",", "dims", "=", "(", "0", ",", ")", ")", "\n", "cur_prob", "=", "np", ".", "random", ".", "uniform", "(", "0.", ",", "1.", ")", "\n", "if", "cur_prob", "<", "self", ".", "mix_prob", ":", "\n", "                ", "t", "=", "np", ".", "random", ".", "randint", "(", "1", ",", "2", "*", "self", ".", "max_res_log2", "-", "2", ")", "\n", "w", "=", "[", "w", "]", "*", "(", "2", "*", "self", ".", "max_res_log2", "-", "2", "-", "t", ")", "+", "[", "w_rev", "]", "*", "t", "\n", "", "else", ":", "\n", "                ", "w", "=", "[", "w", "]", "*", "(", "2", "*", "self", ".", "max_res_log2", "-", "2", ")", "\n", "", "", "else", ":", "\n", "            ", "w", "=", "[", "w", "]", "*", "(", "2", "*", "self", ".", "max_res_log2", "-", "2", ")", "\n", "", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_trunc": [[281, 293], ["enumerate", "len", "len", "w_trunc.append", "len"], "methods", ["None"], ["", "def", "run_trunc", "(", "self", ",", "w", ",", "latent_avg", ",", "trunc_psi", "=", "0.7", ",", "trunc_cutoff", "=", "8", ")", ":", "\n", "        ", "if", "latent_avg", "is", "not", "None", "and", "not", "self", ".", "training", ":", "\n", "            ", "w_trunc", "=", "[", "]", "\n", "trunc_cutoff", "=", "len", "(", "w", ")", "if", "trunc_cutoff", "is", "None", "else", "trunc_cutoff", "\n", "tpsi", "=", "[", "trunc_psi", "]", "*", "trunc_cutoff", "\n", "truncation_psi", "=", "[", "1", "]", "*", "len", "(", "w", ")", "\n", "truncation_psi", "=", "tpsi", "+", "truncation_psi", "[", "len", "(", "tpsi", ")", ":", "]", "\n", "\n", "for", "i", ",", "w_i", "in", "enumerate", "(", "w", ")", ":", "\n", "                ", "w_trunc", ".", "append", "(", "w_i", "*", "truncation_psi", "[", "i", "]", "+", "(", "1", "-", "truncation_psi", "[", "i", "]", ")", "*", "latent_avg", ")", "\n", "", "w", "=", "w_trunc", "\n", "", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_conditional": [[294, 300], ["label.view().detach.view().detach.view().detach", "networks_stylegan2.Generator.conditional_embedding", "label.view().detach.view().detach.view"], "methods", ["None"], ["", "def", "run_conditional", "(", "self", ",", "w", ",", "label", ")", ":", "\n", "        ", "if", "self", ".", "label_size", ">", "0", ":", "\n", "            ", "label", "=", "label", ".", "view", "(", "(", "-", "1", ",", ")", ")", ".", "detach", "(", ")", "\n", "w_class", "=", "self", ".", "conditional_embedding", "(", "label", ")", "\n", "w", "=", "w", "+", "w_class", "\n", "", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.forward": [[301, 336], ["w[].size", "ct.expand.expand.expand", "features.append", "range", "networks_stylegan2.Generator.mapping", "networks_stylegan2.Generator.run_conditional", "networks_stylegan2.Generator.run_style_mixing", "networks_stylegan2.Generator.run_trunc", "features.append", "networks_stylegan2.Generator.upscale2x"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_conditional", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_style_mixing", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.nn.networks_stylegan2.Generator.run_trunc"], ["", "def", "forward", "(", "self", ",", "noise", ",", "label", "=", "None", ",", "latent_avg", "=", "None", ",", "latents_only", "=", "False", ",", "\n", "input_is_latent", "=", "False", ",", "addnoise", "=", "None", ",", "trunc_psi", "=", "0.5", ",", "trunc_cutoff", "=", "None", ")", ":", "\n", "\n", "        ", "if", "input_is_latent", ":", "\n", "            ", "w", "=", "noise", "\n", "", "else", ":", "\n", "            ", "w", "=", "self", ".", "mapping", "(", "noise", ")", "\n", "w", "=", "self", ".", "run_conditional", "(", "w", ",", "label", ")", "\n", "w", "=", "self", ".", "run_style_mixing", "(", "w", ")", "\n", "w", "=", "self", ".", "run_trunc", "(", "w", ",", "latent_avg", ",", "trunc_psi", ",", "trunc_cutoff", ")", "\n", "\n", "", "if", "latents_only", ":", "\n", "            ", "return", "w", "\n", "\n", "", "n", "=", "w", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "ct", "=", "self", ".", "constant_tensor", "\n", "ct", "=", "ct", ".", "expand", "(", "n", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "noise1", "=", "addnoise", "[", "0", "]", "if", "addnoise", "is", "not", "None", "else", "None", "\n", "features", "=", "[", "]", "\n", "x", "=", "self", ".", "blocks", "[", "0", "]", "(", "ct", ",", "w", "[", "0", "]", ",", "noise1", "=", "noise1", ")", "\n", "y", "=", "self", ".", "to_rgbs", "[", "0", "]", "(", "x", ",", "w", "[", "1", "]", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "\n", "\n", "for", "res", "in", "range", "(", "3", ",", "self", ".", "max_res_log2", "+", "1", ")", ":", "\n", "            ", "noise1", "=", "addnoise", "[", "2", "*", "res", "-", "5", "]", "if", "addnoise", "is", "not", "None", "else", "None", "\n", "noise2", "=", "addnoise", "[", "2", "*", "res", "-", "4", "]", "if", "addnoise", "is", "not", "None", "else", "None", "\n", "\n", "x", "=", "self", ".", "blocks", "[", "res", "-", "2", "]", "(", "x", ",", "w", "[", "2", "*", "res", "-", "5", "]", ",", "w", "[", "2", "*", "res", "-", "4", "]", ",", "noise1", ",", "noise2", ")", "\n", "y0", "=", "self", ".", "to_rgbs", "[", "res", "-", "2", "]", "(", "x", ",", "w", "[", "2", "*", "res", "-", "3", "]", ")", "\n", "features", ".", "append", "(", "x", ")", "\n", "y", "=", "self", ".", "upscale2x", "(", "y", ")", "+", "y0", "if", "y", "is", "not", "None", "else", "y0", "\n", "\n", "", "return", "y", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.PixelNorm.__init__": [[9, 12], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "epsilon", "=", "1e-8", ")", ":", "\n", "        ", "super", "(", "PixelNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.PixelNorm.forward": [[13, 19], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "x", ",", "2", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "y", "=", "y", "+", "self", ".", "eps", "\n", "y", "=", "x", "*", "torch", ".", "rsqrt", "(", "y", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Flatten.__init__": [[22, 24], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Flatten.forward": [[25, 27], ["input.view", "input.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Bias.__init__": [[30, 35], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.init.constant_", "torch.init.constant_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "units", ")", ":", "\n", "        ", "super", "(", "Bias", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_units", "=", "units", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "units", ",", "1", ",", "1", ")", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Bias.forward": [[36, 39], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "+", "self", ".", "bias", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.AddNoise.__init__": [[42, 49], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.init.constant_", "torch.init.constant_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "fixed", "=", "False", ",", "per_channel", "=", "True", ")", ":", "\n", "        ", "super", "(", "AddNoise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fixed", "=", "fixed", "\n", "self", ".", "fixed_noise", "=", "None", "\n", "scale_channels", "=", "channels", "if", "per_channel", "else", "1", "\n", "self", ".", "scale_factors", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "scale_channels", ",", "1", ",", "1", ")", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "scale_factors", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.AddNoise.forward": [[50, 69], ["x.size", "torch.randn.repeat", "torch.randn.repeat", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "noise", "=", "None", ")", ":", "\n", "\n", "        ", "bs", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "\n", "if", "noise", "is", "None", ":", "\n", "            ", "if", "self", ".", "fixed", ":", "\n", "                ", "if", "self", ".", "fixed_noise", "is", "not", "None", ":", "\n", "                    ", "noise", "=", "self", ".", "fixed_noise", "\n", "", "else", ":", "\n", "                    ", "noise", "=", "torch", ".", "randn", "(", "1", ",", "1", ",", "h", ",", "w", ",", "device", "=", "x", ".", "device", ")", "\n", "self", ".", "fixed_noise", "=", "noise", "\n", "", "noise", "=", "noise", ".", "repeat", "(", "bs", ",", "1", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "noise", "=", "torch", ".", "randn", "(", "bs", ",", "1", ",", "h", ",", "w", ",", "device", "=", "x", ".", "device", ")", "\n", "\n", "", "", "noise_scaled", "=", "self", ".", "scale_factors", "*", "noise", "\n", "\n", "y", "=", "x", "+", "noise_scaled", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.MinibatchStdLayerStylegan2.__init__": [[72, 77], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "group_size", ",", "num_new_features", "=", "1", ",", "eps", "=", "1e-8", ")", ":", "\n", "        ", "super", "(", "MinibatchStdLayerStylegan2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "group_size", "=", "group_size", "\n", "self", ".", "num_new_features", "=", "num_new_features", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.MinibatchStdLayerStylegan2.forward": [[78, 93], ["x.size", "min", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "y.repeat.repeat.repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "bs", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "x", "[", "None", ",", ":", ",", ":", ",", ":", ",", ":", "]", "# [1NCHW]   input shape", "\n", "group_size", "=", "min", "(", "bs", ",", "self", ".", "group_size", ")", "\n", "n_feat", "=", "self", ".", "num_new_features", "\n", "new_shape", "=", "(", "group_size", ",", "-", "1", ",", "n_feat", ",", "c", "//", "n_feat", ",", "h", ",", "w", ")", "\n", "y", "=", "torch", ".", "reshape", "(", "y", ",", "shape", "=", "new_shape", ")", "# [GMncHW]  split minibatch into M groups of size G.", "\n", "y", "=", "y", "-", "torch", ".", "mean", "(", "y", ",", "0", ",", "keepdim", "=", "True", ")", "# [GMncHW]  subtract mean over group.", "\n", "y", "=", "torch", ".", "mean", "(", "y", "**", "2", ",", "0", ")", "# [MncHW]   calc variance over group.", "\n", "y", "=", "torch", ".", "sqrt", "(", "y", "+", "self", ".", "eps", ")", "# [MncHW]   calc stddev over group.", "\n", "y", "=", "torch", ".", "mean", "(", "y", ",", "dim", "=", "(", "2", ",", "3", ",", "4", ")", ",", "keepdim", "=", "True", ")", "# [Mn111]   take average over fmaps and pixels.", "\n", "y", "=", "torch", ".", "mean", "(", "y", ",", "dim", "=", "(", "2", ",", ")", ")", "# [Mn11]    take average over fmaps and pixels.", "\n", "y", "=", "y", ".", "repeat", "(", "(", "group_size", ",", "1", ",", "h", ",", "w", ")", ")", "# [N1HW]    replicate over group.", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "x", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Conv2dModulated.__init__": [[96, 141], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Linear", "torch.Linear", "ops.Conv2dModulated.reset_parameters", "isinstance", "isinstance", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ops.BlurKernel", "ops.BlurKernel", "len", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Conv2dModulated.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "latent_size", ",", "kernel_size", ",", "padding", "=", "0", ",", "\n", "demodulate", "=", "True", ",", "fused_modconv", "=", "True", ",", "\n", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "if", "not", "isinstance", "(", "kernel_size", ",", "tuple", ")", ":", "\n", "            ", "kernel_size", "=", "(", "kernel_size", ",", "kernel_size", ")", "\n", "", "if", "not", "isinstance", "(", "padding", ",", "tuple", ")", ":", "\n", "            ", "padding", "=", "(", "padding", ",", "padding", ")", "\n", "\n", "", "self", ".", "padding", "=", "padding", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "\n", "self", ".", "demodulate", "=", "demodulate", "\n", "self", ".", "fused_modconv", "=", "fused_modconv", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "out_channels", ",", "in_channels", ",", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", ")", "\n", "\n", "self", ".", "affine", "=", "nn", ".", "Linear", "(", "latent_size", ",", "in_channels", ",", "bias", "=", "True", ")", "\n", "self", ".", "affine", ".", "_wscale_params", "=", "{", "'gain'", ":", "1.0", "}", "\n", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "factor", "=", "2", "\n", "assert", "kernel_size", "[", "0", "]", "==", "kernel_size", "[", "1", "]", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "-", "(", "kernel_size", "[", "0", "]", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "+", "1", "\n", "\n", "self", ".", "blur", "=", "BlurKernel", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ",", "upsample_factor", "=", "factor", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "assert", "kernel_size", "[", "0", "]", "==", "kernel_size", "[", "1", "]", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "[", "0", "]", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "blur", "=", "BlurKernel", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", "\n", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Conv2dModulated.reset_parameters": [[142, 144], ["torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "math.sqrt"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "self", ".", "weight", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.Conv2dModulated.forward": [[145, 194], ["weight_m.view.transpose().reshape.unsqueeze", "ops.Conv2dModulated.affine", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "ops.Conv2dModulated.blur", "weight_m.view.view.view", "torch.conv2d.reshape", "torch.conv2d.reshape", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "ops.Conv2dModulated.blur", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv_transpose2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "weight_m.view.view.view", "weight_m.view.view.transpose().reshape", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "torch.conv2d.size", "weight_m.view.view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "w", ")", ":", "\n", "\n", "        ", "s", "=", "self", ".", "affine", "(", "w", ")", "+", "1", "\n", "\n", "bs", "=", "w", ".", "shape", "[", "0", "]", "\n", "weight", "=", "self", ".", "weight", "\n", "weight_m", "=", "weight", ".", "unsqueeze", "(", "0", ")", "# [1OIkk]", "\n", "weight_m", "=", "s", "[", ":", ",", "np", ".", "newaxis", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "weight_m", "# [BOIkk]", "\n", "\n", "d", "=", "None", "\n", "if", "self", ".", "demodulate", ":", "\n", "            ", "d", "=", "torch", ".", "rsqrt", "(", "torch", ".", "sum", "(", "weight_m", "**", "2", ",", "dim", "=", "(", "2", ",", "3", ",", "4", ")", ")", "+", "1e-8", ")", "# [BO]", "\n", "weight_m", "=", "d", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "weight_m", "\n", "\n", "", "if", "not", "self", ".", "fused_modconv", ":", "\n", "            ", "x", "=", "s", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "x", "# x is [BIhw]", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "self", ".", "blur", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "fused_modconv", ":", "\n", "            ", "weight", "=", "weight_m", ".", "view", "(", "(", "-", "1", ",", "self", ".", "in_channels", ",", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", ")", "# [(B*O)Ikk]", "\n", "x", "=", "x", ".", "reshape", "(", "(", "1", ",", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "1", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "\n", "", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "torch", ".", "conv2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "bias", "=", "None", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "", "elif", "self", ".", "upsample", ":", "\n", "            ", "if", "self", ".", "fused_modconv", ":", "\n", "                ", "weight_m", "=", "weight_m", ".", "view", "(", "bs", ",", "self", ".", "out_channels", ",", "self", ".", "in_channels", ",", "\n", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", "\n", "weight", "=", "weight_m", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "out_channels", ",", "\n", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", "# [(B*I)Okk]", "\n", "\n", "", "x", "=", "torch", ".", "conv_transpose2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "conv2d", "(", "input", "=", "x", ",", "weight", "=", "weight", ",", "bias", "=", "None", ",", "padding", "=", "self", ".", "padding", ",", "\n", "groups", "=", "bs", "if", "self", ".", "fused_modconv", "else", "1", ")", "\n", "\n", "", "if", "self", ".", "fused_modconv", ":", "\n", "            ", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", "self", ".", "out_channels", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "", "elif", "self", ".", "demodulate", ":", "\n", "            ", "x", "=", "d", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "*", "x", "# x is (batch_size, channels, height, width)", "\n", "\n", "", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "self", ".", "blur", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.UpsampleKernel.__init__": [[208, 221], ["torch.Module.__init__", "ops.UpsampleKernel.register_buffer", "ops.make_kernel"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "factor", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "factor", "=", "factor", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "*", "(", "factor", "**", "2", ")", "\n", "self", ".", "register_buffer", "(", "'kernel'", ",", "kernel", ")", "\n", "\n", "p", "=", "kernel", ".", "shape", "[", "0", "]", "-", "factor", "\n", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "pad", "=", "(", "pad0", ",", "pad1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.UpsampleKernel.forward": [[222, 226], ["lib.nn.layers.cuda.upfirdn2d.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "up", "=", "self", ".", "factor", ",", "down", "=", "1", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.BlurKernel.__init__": [[229, 240], ["torch.Module.__init__", "ops.make_kernel", "ops.BlurKernel.register_buffer"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "pad", ",", "upsample_factor", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "\n", "\n", "if", "upsample_factor", ">", "1", ":", "\n", "            ", "kernel", "=", "kernel", "*", "(", "upsample_factor", "**", "2", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "'kernel'", ",", "kernel", ")", "\n", "\n", "self", ".", "pad", "=", "pad", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.BlurKernel.forward": [[241, 245], ["lib.nn.layers.cuda.upfirdn2d.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.ops.make_kernel": [[196, 205], ["torch.tensor", "torch.tensor", "torch.tensor.sum"], "function", ["None"], ["", "", "def", "make_kernel", "(", "k", ")", ":", "\n", "    ", "k", "=", "torch", ".", "tensor", "(", "k", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "if", "k", ".", "ndim", "==", "1", ":", "\n", "        ", "k", "=", "k", "[", "None", ",", ":", "]", "*", "k", "[", ":", ",", "None", "]", "\n", "\n", "", "k", "/=", "k", ".", "sum", "(", ")", "\n", "\n", "return", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.make_one_hot": [[10, 15], ["one_hot.scatter_.view", "torch.zeros", "torch.zeros.scatter_", "one_hot.scatter_.size", "one_hot.scatter_.view"], "function", ["None"], ["def", "make_one_hot", "(", "ids", ",", "num_classes", ")", ":", "\n", "    ", "ids", "=", "ids", ".", "view", "(", "(", "-", "1", ",", ")", ")", "\n", "one_hot", "=", "torch", ".", "zeros", "(", "ids", ".", "size", "(", "0", ")", ",", "num_classes", ",", "device", "=", "ids", ".", "device", ")", "\n", "ids", "=", "one_hot", ".", "scatter_", "(", "1", ",", "ids", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_wscale": [[17, 99], ["numpy.sqrt", "net.apply", "hasattr", "types.MethodType", "hasattr", "hasattr", "types.MethodType", "getattr", "setattr", "type", "getattr", "setattr", "patch_repr"], "function", ["None"], ["", "def", "apply_wscale", "(", "net", ",", "gain", "=", "np", ".", "sqrt", "(", "2", ")", ",", "weight_name", "=", "'weight'", ",", "fan_in", "=", "None", ")", ":", "\n", "    ", "def", "apply_wscale_", "(", "block", ")", ":", "\n", "        ", "wscale_ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", ",", "\n", "'Conv2dModulated'", ":", "0", ",", "'Conv2dModulatedMod'", ":", "0", ",", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "local_fan_in", "=", "fan_in", "\n", "local_gain", "=", "gain", "\n", "if", "hasattr", "(", "block", ",", "'_wscale_params'", ")", ":", "\n", "                ", "_wscale_params", "=", "block", ".", "_wscale_params", "\n", "local_gain", "=", "_wscale_params", ".", "get", "(", "'gain'", ",", "local_gain", ")", "\n", "local_fan_in", "=", "_wscale_params", ".", "get", "(", "'fan_in'", ",", "local_fan_in", ")", "\n", "\n", "", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "repr_str", "=", "f'{original_repr()} + ({weight_name}: use wscale, gain={local_gain:.2f})'", "\n", "if", "local_fan_in", "is", "not", "None", ":", "\n", "                    ", "repr_str", "+=", "f', fan_in=({local_fan_in})'", "\n", "", "return", "repr_str", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "def", "get_preprocess_method", "(", "block", ",", "dim", ")", ":", "\n", "\n", "            ", "preprocess_orig", "=", "None", "\n", "if", "hasattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", ":", "\n", "                ", "preprocess_orig", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "\n", "\n", "", "local_fan_in", "=", "fan_in", "\n", "local_gain", "=", "gain", "\n", "if", "hasattr", "(", "block", ",", "'_wscale_params'", ")", ":", "\n", "                ", "_wscale_params", "=", "block", ".", "_wscale_params", "\n", "local_gain", "=", "_wscale_params", ".", "get", "(", "'gain'", ",", "local_gain", ")", "\n", "local_fan_in", "=", "_wscale_params", ".", "get", "(", "'fan_in'", ",", "local_fan_in", ")", "\n", "\n", "", "block", ".", "_fan_in", "=", "local_fan_in", "\n", "\n", "def", "preprocess", "(", "self", ",", "w", ")", ":", "\n", "                ", "if", "self", ".", "_fan_in", "is", "None", ":", "\n", "                    ", "self", ".", "_fan_in", "=", "np", ".", "prod", "(", "w", ".", "shape", "[", ":", "dim", "]", "+", "w", ".", "shape", "[", "dim", "+", "1", ":", "]", ")", "\n", "", "std", "=", "local_gain", "/", "np", ".", "sqrt", "(", "self", ".", "_fan_in", ")", "\n", "w_new", "=", "w", "*", "std", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                    ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "preprocess", ",", "block", ")", "\n", "\n", "", "def", "forward_pre_hook", "(", "module", ",", "input", ")", ":", "\n", "            ", "weight", "=", "getattr", "(", "module", ",", "weight_name", "+", "'_orig'", ")", "\n", "weight_new", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "(", "weight", ")", "\n", "setattr", "(", "module", ",", "weight_name", ",", "weight_new", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "wscale_ops_dim", ":", "\n", "            ", "if", "getattr", "(", "block", ",", "'__wscale'", ",", "False", ")", ":", "\n", "                ", "return", "block", "\n", "\n", "", "if", "not", "hasattr", "(", "block", ",", "weight_name", "+", "'_orig'", ")", ":", "\n", "                ", "if", "not", "hasattr", "(", "block", ",", "weight_name", ")", ":", "\n", "                    ", "return", "block", "\n", "", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "del", "block", ".", "_parameters", "[", "weight_name", "]", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "block", ",", "weight_name", ",", "weight", ".", "data", ")", "\n", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "wscale_ops_dim", "[", "block_type", "]", ")", "\n", "block", ".", "register_forward_pre_hook", "(", "forward_pre_hook", ")", "\n", "", "else", ":", "\n", "                ", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "wscale_ops_dim", "[", "block_type", "]", ")", "\n", "\n", "", "setattr", "(", "block", ",", "f'preprocess_{weight_name}'", ",", "preprocess", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ")", "\n", "block", ".", "__wscale", "=", "True", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_wscale_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_wscale2": [[101, 166], ["net.apply", "types.MethodType", "hasattr", "types.MethodType", "getattr", "setattr", "type", "getattr", "getattr", "setattr", "patch_repr"], "function", ["None"], ["", "def", "apply_wscale2", "(", "net", ",", "weight_name", "=", "'weight'", ")", ":", "\n", "    ", "def", "apply_wscale_", "(", "block", ")", ":", "\n", "        ", "wscale_ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", ",", "\n", "'Conv2dModulated'", ":", "0", ",", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ",", "weight_scale", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "return", "f'{original_repr()} + ({weight_name}: use wscale, scale={weight_scale:.4f})'", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "def", "get_preprocess_method", "(", "block", ",", "weight_scale", ")", ":", "\n", "\n", "            ", "preprocess_orig", "=", "None", "\n", "if", "hasattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", ":", "\n", "                ", "preprocess_orig", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "\n", "\n", "", "def", "preprocess", "(", "self", ",", "w", ")", ":", "\n", "                ", "w_new", "=", "w", "*", "weight_scale", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                    ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "preprocess", ",", "block", ")", "\n", "\n", "", "def", "forward_pre_hook", "(", "module", ",", "input", ")", ":", "\n", "            ", "weight", "=", "getattr", "(", "module", ",", "weight_name", "+", "'_orig'", ")", "\n", "weight_new", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "(", "weight", ")", "\n", "setattr", "(", "module", ",", "weight_name", ",", "weight_new", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "wscale_ops_dim", ":", "\n", "            ", "if", "getattr", "(", "block", ",", "'__wscale'", ",", "False", ")", ":", "\n", "                ", "return", "block", "\n", "\n", "", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "weight_std", "=", "weight", ".", "data", ".", "std", "(", ")", "\n", "nn", ".", "init", ".", "normal_", "(", "weight", ".", "data", ",", "0", ",", "std", "=", "1.0", ")", "\n", "\n", "", "if", "not", "hasattr", "(", "block", ",", "weight_name", "+", "'_orig'", ")", ":", "\n", "                ", "if", "not", "hasattr", "(", "block", ",", "weight_name", ")", ":", "\n", "                    ", "return", "block", "\n", "\n", "", "del", "block", ".", "_parameters", "[", "weight_name", "]", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "block", ",", "weight_name", ",", "weight", ".", "data", ")", "\n", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "weight_std", ")", "\n", "block", ".", "register_forward_pre_hook", "(", "forward_pre_hook", ")", "\n", "", "else", ":", "\n", "                ", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "weight_std", ")", "\n", "\n", "", "setattr", "(", "block", ",", "f'preprocess_{weight_name}'", ",", "preprocess", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ",", "weight_std", ")", "\n", "block", ".", "__wscale", "=", "True", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_wscale_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_weight_averaging": [[168, 244], ["net.apply", "types.MethodType", "hasattr", "types.MethodType", "getattr", "setattr", "type", "getattr", "setattr", "patch_repr"], "function", ["None"], ["", "def", "apply_weight_averaging", "(", "net", ",", "weight_name", "=", "'weight'", ")", ":", "\n", "    ", "def", "apply_wscale_", "(", "block", ")", ":", "\n", "        ", "ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", "\n", "}", "\n", "kernel_dims", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "1", ",", "'Conv2d'", ":", "2", ",", "'Conv3d'", ":", "3", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "2", ",", "'ConvTranspose3d'", ":", "3", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "return", "f'{original_repr()} + ({weight_name}: use weight averaging)'", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "def", "get_preprocess_method", "(", "block", ",", "dim", ",", "kernel_dims", ")", ":", "\n", "\n", "            ", "preprocess_orig", "=", "None", "\n", "if", "hasattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", ":", "\n", "                ", "preprocess_orig", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "\n", "\n", "", "if", "kernel_dims", "==", "2", ":", "\n", "                ", "def", "preprocess", "(", "self", ",", "w", ")", ":", "\n", "# pad last two dimensions with zeros on both sides (width and height), pad=1", "\n", "                    ", "w", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "w", ",", "[", "1", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "w_new", "=", "0.25", "*", "(", "w", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", "+", "w", "[", ":", ",", ":", ",", ":", "-", "1", ",", "1", ":", "]", "+", "w", "[", ":", ",", ":", ",", "1", ":", ",", ":", "-", "1", "]", "+", "w", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", ")", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                        ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "", "", "elif", "kernel_dims", "==", "1", ":", "\n", "                ", "def", "preprocess", "(", "self", ",", "w", ")", ":", "\n", "# pad last two dimensions with zeros on both sides (width and height), pad=1", "\n", "                    ", "w", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "w", ",", "[", "1", ",", "1", "]", ")", "\n", "w_new", "=", "0.5", "*", "(", "w", "[", ":", ",", ":", ",", "1", ":", "]", "+", "w", "[", ":", ",", ":", ",", ":", "-", "1", "]", ")", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                        ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "preprocess", ",", "block", ")", "\n", "\n", "", "def", "forward_pre_hook", "(", "module", ",", "input", ")", ":", "\n", "            ", "weight", "=", "getattr", "(", "module", ",", "weight_name", "+", "'_orig'", ")", "\n", "weight_new", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "(", "weight", ")", "\n", "setattr", "(", "module", ",", "weight_name", ",", "weight_new", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "ops_dim", ":", "\n", "            ", "if", "getattr", "(", "block", ",", "'__weight_averaging'", ",", "False", ")", ":", "\n", "                ", "return", "block", "\n", "\n", "", "if", "not", "hasattr", "(", "block", ",", "weight_name", "+", "'_orig'", ")", ":", "\n", "                ", "if", "not", "hasattr", "(", "block", ",", "weight_name", ")", ":", "\n", "                    ", "return", "block", "\n", "", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "del", "block", ".", "_parameters", "[", "weight_name", "]", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "block", ",", "weight_name", ",", "weight", ".", "data", ")", "\n", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "ops_dim", "[", "block_type", "]", ",", "kernel_dims", "[", "block_type", "]", ")", "\n", "block", ".", "register_forward_pre_hook", "(", "forward_pre_hook", ")", "\n", "", "else", ":", "\n", "                ", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "ops_dim", "[", "block_type", "]", ",", "kernel_dims", "[", "block_type", "]", ")", "\n", "\n", "", "setattr", "(", "block", ",", "f'preprocess_{weight_name}'", ",", "preprocess", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ")", "\n", "block", ".", "__weight_averaging", "=", "True", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_wscale_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_lr_mult": [[246, 312], ["net.apply", "types.MethodType", "hasattr", "hasattr", "getattr", "setattr", "type", "getattr", "setattr", "setattr", "patch_repr"], "function", ["None"], ["", "def", "apply_lr_mult", "(", "net", ",", "lr_mult", "=", "1.0", ",", "weight_name", "=", "'weight'", ")", ":", "\n", "    ", "def", "apply_lr_mult_", "(", "block", ")", ":", "\n", "\n", "        ", "wscale_ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", ",", "\n", "'Conv2dModulated'", ":", "0", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ",", "lr_mult_real", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "return", "f'{original_repr()} + ({weight_name}: lr_mult={lr_mult_real:.3f})'", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "def", "get_preprocess_method", "(", "block", ")", ":", "\n", "\n", "            ", "preprocess_orig", "=", "None", "\n", "if", "hasattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", ":", "\n", "                ", "preprocess_orig", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "\n", "\n", "", "local_lr_mult", "=", "lr_mult", "\n", "if", "hasattr", "(", "block", ",", "'lr_mult'", ")", ":", "\n", "                ", "local_lr_mult", "=", "getattr", "(", "block", ",", "'lr_mult'", ")", "\n", "\n", "", "def", "preprocess", "(", "self", ",", "w", ")", ":", "\n", "                ", "w_new", "=", "w", "*", "local_lr_mult", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                    ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "preprocess", ",", "block", ")", ",", "local_lr_mult", "\n", "\n", "", "def", "forward_pre_hook", "(", "module", ",", "input", ")", ":", "\n", "            ", "weight", "=", "getattr", "(", "module", ",", "weight_name", "+", "'_orig'", ")", "\n", "weight_new", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "(", "weight", ")", "\n", "setattr", "(", "module", ",", "weight_name", ",", "weight_new", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "wscale_ops_dim", ":", "\n", "            ", "if", "getattr", "(", "block", ",", "f'__use_lr_mult{weight_name}'", ",", "False", ")", ":", "\n", "                ", "return", "block", "\n", "\n", "", "if", "not", "hasattr", "(", "block", ",", "weight_name", "+", "'_orig'", ")", ":", "\n", "                ", "if", "not", "hasattr", "(", "block", ",", "weight_name", ")", ":", "\n", "                    ", "return", "block", "\n", "", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "del", "block", ".", "_parameters", "[", "weight_name", "]", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "block", ",", "weight_name", ",", "weight", ".", "data", ")", "\n", "preprocess", ",", "lr_mult_real", "=", "get_preprocess_method", "(", "block", ")", "\n", "block", ".", "register_forward_pre_hook", "(", "forward_pre_hook", ")", "\n", "", "else", ":", "\n", "                ", "preprocess", ",", "lr_mult_real", "=", "get_preprocess_method", "(", "block", ")", "\n", "\n", "", "setattr", "(", "block", ",", "f'preprocess_{weight_name}'", ",", "preprocess", ")", "\n", "setattr", "(", "block", ",", "f'lr_mult_{weight_name}'", ",", "lr_mult_real", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ",", "lr_mult_real", ")", "\n", "setattr", "(", "block", ",", "f'__use_lr_mult{weight_name}'", ",", "True", ")", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_lr_mult_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_spectral_norm": [[314, 339], ["net.apply", "types.MethodType", "type", "torch.nn.utils.spectral_norm", "patch_repr"], "function", ["None"], ["", "def", "apply_spectral_norm", "(", "net", ",", "weight_name", "=", "'weight'", ")", ":", "\n", "    ", "def", "apply_sn_", "(", "block", ")", ":", "\n", "        ", "wscale_ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "return", "f'{original_repr()} + ({weight_name}: use spectral norm)'", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "wscale_ops_dim", ":", "\n", "            ", "block", "=", "spectral_norm", "(", "block", ",", "name", "=", "weight_name", ",", "dim", "=", "wscale_ops_dim", "[", "block_type", "]", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ")", "\n", "block", ".", "__spectral_norm", "=", "True", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_sn_", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_spectral_norm_diff": [[341, 430], ["net.apply", "types.MethodType", "hasattr", "types.MethodType", "getattr", "setattr", "type", "getattr", "weight_mat.permute.size", "weight_mat.permute.reshape", "weight_mat.permute.size", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "block.register_parameter", "block.register_parameter", "get_preprocess_method"], "function", ["None"], ["", "def", "apply_spectral_norm_diff", "(", "net", ",", "weight_name", "=", "'weight'", ")", ":", "\n", "    ", "def", "apply_sn_", "(", "block", ")", ":", "\n", "        ", "wscale_ops_dim", "=", "{", "\n", "'Linear'", ":", "0", ",", "'Conv1d'", ":", "0", ",", "'Conv2d'", ":", "0", ",", "'Conv3d'", ":", "0", ",", "\n", "'ConvTranspose1d'", ":", "1", ",", "'ConvTranspose2d'", ":", "1", ",", "'ConvTranspose3d'", ":", "1", "\n", "}", "\n", "\n", "def", "patch_repr", "(", "block", ")", ":", "\n", "            ", "original_repr", "=", "block", ".", "extra_repr", "\n", "\n", "def", "new_repr", "(", "self", ")", ":", "\n", "                ", "return", "f'{original_repr()} + ({weight_name}: use diff spectral norm)'", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "new_repr", ",", "block", ")", "\n", "\n", "", "def", "get_preprocess_method", "(", "block", ",", "dim", ")", ":", "\n", "\n", "            ", "preprocess_orig", "=", "None", "\n", "if", "hasattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", ":", "\n", "                ", "preprocess_orig", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "\n", "\n", "", "def", "preprocess", "(", "self", ",", "weight", ")", ":", "\n", "\n", "                ", "u", "=", "getattr", "(", "block", ",", "weight_name", "+", "'_u'", ")", "\n", "v", "=", "getattr", "(", "block", ",", "weight_name", "+", "'_v'", ")", "\n", "\n", "weight_mat", "=", "weight", "\n", "if", "dim", "!=", "0", ":", "\n", "                    ", "weight_mat", "=", "weight_mat", ".", "permute", "(", "dim", ",", "*", "[", "d", "for", "d", "in", "range", "(", "weight_mat", ".", "dim", "(", ")", ")", "if", "d", "!=", "dim", "]", ")", "\n", "", "height", "=", "weight_mat", ".", "size", "(", "0", ")", "\n", "weight_mat", "=", "weight_mat", ".", "reshape", "(", "height", ",", "-", "1", ")", "\n", "\n", "v", "=", "normalize", "(", "torch", ".", "mv", "(", "weight_mat", ".", "t", "(", ")", ",", "u", ")", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", "\n", "u", "=", "normalize", "(", "torch", ".", "mv", "(", "weight_mat", ",", "v", ")", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", "\n", "\n", "sigma", "=", "torch", ".", "dot", "(", "u", ",", "torch", ".", "mv", "(", "weight_mat", ",", "v", ")", ")", "\n", "w_new", "=", "weight", "/", "sigma", "\n", "\n", "if", "preprocess_orig", "is", "not", "None", ":", "\n", "                    ", "w_new", "=", "preprocess_orig", "(", "w_new", ")", "\n", "", "return", "w_new", "\n", "\n", "", "return", "types", ".", "MethodType", "(", "preprocess", ",", "block", ")", "\n", "\n", "", "def", "forward_pre_hook", "(", "module", ",", "input", ")", ":", "\n", "            ", "weight", "=", "getattr", "(", "module", ",", "weight_name", "+", "'_orig'", ")", "\n", "weight_new", "=", "getattr", "(", "block", ",", "f'preprocess_{weight_name}'", ")", "(", "weight", ")", "\n", "setattr", "(", "module", ",", "weight_name", ",", "weight_new", ")", "\n", "\n", "", "block_type", "=", "type", "(", "block", ")", ".", "__name__", "\n", "if", "block_type", "in", "wscale_ops_dim", ":", "\n", "            ", "if", "getattr", "(", "block", ",", "'__spectral_norm'", ",", "False", ")", ":", "\n", "                ", "return", "block", "\n", "\n", "", "if", "not", "hasattr", "(", "block", ",", "weight_name", "+", "'_orig'", ")", ":", "\n", "                ", "if", "not", "hasattr", "(", "block", ",", "weight_name", ")", ":", "\n", "                    ", "return", "block", "\n", "", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "del", "block", ".", "_parameters", "[", "weight_name", "]", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_orig'", ",", "nn", ".", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "block", ",", "weight_name", ",", "weight", ".", "data", ")", "\n", "block", ".", "register_forward_pre_hook", "(", "forward_pre_hook", ")", "\n", "weight", "=", "weight", ".", "data", "\n", "", "else", ":", "\n", "                ", "weight", "=", "getattr", "(", "block", ",", "weight_name", ")", "\n", "\n", "", "weight_mat", "=", "weight", "\n", "dim", "=", "wscale_ops_dim", "[", "block_type", "]", "\n", "if", "dim", "!=", "0", ":", "\n", "                ", "weight_mat", "=", "weight_mat", ".", "permute", "(", "dim", ",", "*", "[", "d", "for", "d", "in", "range", "(", "weight_mat", ".", "dim", "(", ")", ")", "if", "d", "!=", "dim", "]", ")", "\n", "", "height", "=", "weight_mat", ".", "size", "(", "0", ")", "\n", "weight_mat", "=", "weight_mat", ".", "reshape", "(", "height", ",", "-", "1", ")", "\n", "\n", "h", ",", "w", "=", "weight_mat", ".", "size", "(", ")", "\n", "u", "=", "normalize", "(", "weight", ".", "new_empty", "(", "h", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", "\n", "v", "=", "normalize", "(", "weight", ".", "new_empty", "(", "w", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "dim", "=", "0", ",", "eps", "=", "1e-12", ")", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_u'", ",", "nn", ".", "Parameter", "(", "u", ")", ")", "\n", "block", ".", "register_parameter", "(", "weight_name", "+", "'_v'", ",", "nn", ".", "Parameter", "(", "v", ")", ")", "\n", "\n", "preprocess", "=", "get_preprocess_method", "(", "block", ",", "wscale_ops_dim", "[", "block_type", "]", ")", "\n", "\n", "setattr", "(", "block", ",", "f'preprocess_{weight_name}'", ",", "preprocess", ")", "\n", "\n", "block", ".", "extra_repr", "=", "patch_repr", "(", "block", ")", "\n", "block", ".", "__spectral_norm", "=", "True", "\n", "\n", "", "return", "block", "\n", "\n", "", "return", "net", ".", "apply", "(", "apply_sn_", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "local_init", "=", "True", ",", "gamma", "=", "None", ")", ":", "\n", "        ", "self", ".", "local_init", "=", "local_init", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer.__call__": [[12, 31], ["getattr", "isinstance", "object.__setattr__", "weight_init.Initializer._init_gamma", "weight_init.Initializer._init_beta", "getattr", "weight_init.Initializer._init_weight", "getattr", "weight_init.Initializer._init_bias"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_gamma", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_beta", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Normal._init_weight", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_bias"], ["", "def", "__call__", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "getattr", "(", "m", ",", "'__initialized'", ",", "False", ")", ":", "\n", "            ", "return", "\n", "\n", "", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "BatchNorm3d", ",", "\n", "nn", ".", "InstanceNorm1d", ",", "nn", ".", "InstanceNorm2d", ",", "nn", ".", "InstanceNorm3d", ",", "\n", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "            ", "if", "m", ".", "weight", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_gamma", "(", "m", ".", "weight", ".", "data", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_beta", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "getattr", "(", "m", ",", "'weight'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_weight", "(", "m", ".", "weight", ".", "data", ")", "\n", "", "if", "getattr", "(", "m", ",", "'bias'", ",", "None", ")", "is", "not", "None", ":", "\n", "                ", "self", ".", "_init_bias", "(", "m", ".", "bias", ".", "data", ")", "\n", "\n", "", "", "if", "self", ".", "local_init", ":", "\n", "            ", "object", ".", "__setattr__", "(", "m", ",", "'__initialized'", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_weight": [[32, 34], ["torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_"], "methods", ["None"], ["", "", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "uniform_", "(", "data", ",", "-", "0.07", ",", "0.07", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_bias": [[35, 37], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_bias", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_gamma": [[38, 43], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_"], "methods", ["None"], ["", "def", "_init_gamma", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "gamma", "is", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "1.0", ")", "\n", "", "else", ":", "\n", "            ", "nn", ".", "init", ".", "normal_", "(", "data", ",", "1.0", ",", "self", ".", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Initializer._init_beta": [[44, 46], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "", "def", "_init_beta", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Xavier.__init__": [[49, 54], ["weight_init.Initializer.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnd_type", "=", "'uniform'", ",", "magnitude", "=", "3.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "rnd_type", "=", "rnd_type", "\n", "self", ".", "magnitude", "=", "magnitude", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Xavier._init_weight": [[55, 64], ["numpy.sqrt", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "numpy.sqrt", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "rnd_type", "==", "'uniform'", ":", "\n", "            ", "gain", "=", "np", ".", "sqrt", "(", "self", ".", "magnitude", "/", "3.0", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "data", ",", "gain", "=", "gain", ")", "\n", "", "elif", "self", ".", "rnd_type", "==", "'normal'", ":", "\n", "            ", "gain", "=", "np", ".", "sqrt", "(", "self", ".", "magnitude", ")", "\n", "nn", ".", "init", ".", "xavier_normal_", "(", "data", ",", "gain", "=", "gain", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Constant.__init__": [[67, 70], ["weight_init.Initializer.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "value", "=", "0.0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "value", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Constant._init_weight": [[71, 73], ["torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "data", ",", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.XavierGluon.__init__": [[76, 85], ["weight_init.Initializer.__init__", "float"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rnd_type", "=", "'uniform'", ",", "factor_type", "=", "'avg'", ",", "magnitude", "=", "3", ",", "\n", "nonlinearity", "=", "'leaky_relu'", ",", "a", "=", "0.2", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "rnd_type", "=", "rnd_type", "\n", "self", ".", "factor_type", "=", "factor_type", "\n", "self", ".", "magnitude", "=", "float", "(", "magnitude", ")", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "self", ".", "a", "=", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.XavierGluon._init_weight": [[86, 107], ["torch.init._calculate_fan_in_and_fan_out", "torch.init._calculate_fan_in_and_fan_out", "torch.init._calculate_fan_in_and_fan_out", "torch.init.calculate_gain", "torch.init.calculate_gain", "torch.init.calculate_gain", "numpy.sqrt", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "ValueError", "ValueError"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ",", "arr", ")", ":", "\n", "\n", "        ", "fan_in", ",", "fan_out", "=", "nn", ".", "init", ".", "_calculate_fan_in_and_fan_out", "(", "arr", ")", "\n", "gain", "=", "nn", ".", "init", ".", "calculate_gain", "(", "self", ".", "nonlinearity", ",", "self", ".", "a", ")", "\n", "\n", "if", "self", ".", "factor_type", "==", "'avg'", ":", "\n", "            ", "factor", "=", "(", "fan_in", "+", "fan_out", ")", "/", "2.0", "\n", "", "elif", "self", ".", "factor_type", "==", "'in'", ":", "\n", "            ", "factor", "=", "fan_in", "\n", "", "elif", "self", ".", "factor_type", "==", "'out'", ":", "\n", "            ", "factor", "=", "fan_out", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Incorrect factor type'", ")", "\n", "", "scale", "=", "gain", "*", "np", ".", "sqrt", "(", "self", ".", "magnitude", "/", "factor", ")", "\n", "\n", "if", "self", ".", "rnd_type", "==", "'uniform'", ":", "\n", "            ", "nn", ".", "init", ".", "uniform_", "(", "arr", ",", "-", "scale", ",", "scale", ")", "\n", "", "elif", "self", ".", "rnd_type", "==", "'gaussian'", ":", "\n", "            ", "nn", ".", "init", ".", "normal_", "(", "arr", ",", "0", ",", "scale", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown random type'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Normal.__init__": [[110, 114], ["weight_init.Initializer.__init__"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "0.01", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.weight_init.Normal._init_weight": [[115, 117], ["torch.init.normal_", "torch.init.normal_", "torch.init.normal_"], "methods", ["None"], ["", "def", "_init_weight", "(", "self", ",", "data", ")", ":", "\n", "        ", "nn", ".", "init", ".", "normal_", "(", "data", ",", "0", ",", "std", "=", "self", ".", "sigma", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLUFunctionBackward.forward": [[20, 40], ["ctx.save_for_backward", "grad_output.new_empty", "fused.fused_bias_act", "fused.fused_bias_act.sum().detach", "list", "range", "fused.fused_bias_act.sum"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "grad_output", ",", "out", ",", "negative_slope", ",", "scale", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "out", ")", "\n", "ctx", ".", "negative_slope", "=", "negative_slope", "\n", "ctx", ".", "scale", "=", "scale", "\n", "\n", "empty", "=", "grad_output", ".", "new_empty", "(", "0", ")", "\n", "\n", "grad_input", "=", "fused", ".", "fused_bias_act", "(", "\n", "grad_output", ",", "empty", ",", "out", ",", "3", ",", "1", ",", "negative_slope", ",", "scale", "\n", ")", "\n", "\n", "dim", "=", "[", "0", "]", "\n", "\n", "if", "grad_input", ".", "ndim", ">", "2", ":", "\n", "            ", "dim", "+=", "list", "(", "range", "(", "2", ",", "grad_input", ".", "ndim", ")", ")", "\n", "\n", "", "grad_bias", "=", "grad_input", ".", "sum", "(", "dim", ")", ".", "detach", "(", ")", "\n", "\n", "return", "grad_input", ",", "grad_bias", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLUFunctionBackward.backward": [[41, 49], ["fused.fused_bias_act"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradgrad_input", ",", "gradgrad_bias", ")", ":", "\n", "        ", "out", ",", "=", "ctx", ".", "saved_tensors", "\n", "gradgrad_out", "=", "fused", ".", "fused_bias_act", "(", "\n", "gradgrad_input", ",", "gradgrad_bias", ",", "out", ",", "3", ",", "1", ",", "ctx", ".", "negative_slope", ",", "ctx", ".", "scale", "\n", ")", "\n", "\n", "return", "gradgrad_out", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLUFunction.forward": [[52, 61], ["input.new_empty", "fused.fused_bias_act", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "bias", ",", "negative_slope", ",", "scale", ")", ":", "\n", "        ", "empty", "=", "input", ".", "new_empty", "(", "0", ")", "\n", "out", "=", "fused", ".", "fused_bias_act", "(", "input", ",", "bias", ",", "empty", ",", "3", ",", "0", ",", "negative_slope", ",", "scale", ")", "\n", "ctx", ".", "save_for_backward", "(", "out", ")", "\n", "ctx", ".", "negative_slope", "=", "negative_slope", "\n", "ctx", ".", "scale", "=", "scale", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLUFunction.backward": [[62, 71], ["FusedLeakyReLUFunctionBackward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "out", ",", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", ",", "grad_bias", "=", "FusedLeakyReLUFunctionBackward", ".", "apply", "(", "\n", "grad_output", ",", "out", ",", "ctx", ".", "negative_slope", ",", "ctx", ".", "scale", "\n", ")", "\n", "\n", "return", "grad_input", ",", "grad_bias", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLU.__init__": [[74, 80], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "channel", ")", ")", "\n", "self", ".", "negative_slope", "=", "negative_slope", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.FusedLeakyReLU.forward": [[81, 83], ["fused_bias_act.fused_leaky_relu"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.fused_leaky_relu"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "fused_leaky_relu", "(", "input", ",", "self", ".", "bias", ",", "self", ".", "negative_slope", ",", "self", ".", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.fused_bias_act.fused_leaky_relu": [[85, 87], ["FusedLeakyReLUFunction.apply"], "function", ["None"], ["", "", "def", "fused_leaky_relu", "(", "input", ",", "bias", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "    ", "return", "FusedLeakyReLUFunction", ".", "apply", "(", "input", ",", "bias", ",", "negative_slope", ",", "scale", ")", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.UpFirDn2dBackward.forward": [[19, 60], ["grad_output.reshape.reshape.reshape", "upfirdn2d_op.upfirdn2d", "grad_input.view.view.view", "ctx.save_for_backward"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "\n", "ctx", ",", "grad_output", ",", "kernel", ",", "grad_kernel", ",", "up", ",", "down", ",", "pad", ",", "g_pad", ",", "in_size", ",", "out_size", "\n", ")", ":", "\n", "\n", "        ", "up_x", ",", "up_y", "=", "up", "\n", "down_x", ",", "down_y", "=", "down", "\n", "g_pad_x0", ",", "g_pad_x1", ",", "g_pad_y0", ",", "g_pad_y1", "=", "g_pad", "\n", "\n", "grad_output", "=", "grad_output", ".", "reshape", "(", "-", "1", ",", "out_size", "[", "0", "]", ",", "out_size", "[", "1", "]", ",", "1", ")", "\n", "\n", "grad_input", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "grad_output", ",", "\n", "grad_kernel", ",", "\n", "down_x", ",", "\n", "down_y", ",", "\n", "up_x", ",", "\n", "up_y", ",", "\n", "g_pad_x0", ",", "\n", "g_pad_x1", ",", "\n", "g_pad_y0", ",", "\n", "g_pad_y1", ",", "\n", ")", "\n", "grad_input", "=", "grad_input", ".", "view", "(", "in_size", "[", "0", "]", ",", "in_size", "[", "1", "]", ",", "in_size", "[", "2", "]", ",", "in_size", "[", "3", "]", ")", "\n", "\n", "ctx", ".", "save_for_backward", "(", "kernel", ")", "\n", "\n", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "=", "pad", "\n", "\n", "ctx", ".", "up_x", "=", "up_x", "\n", "ctx", ".", "up_y", "=", "up_y", "\n", "ctx", ".", "down_x", "=", "down_x", "\n", "ctx", ".", "down_y", "=", "down_y", "\n", "ctx", ".", "pad_x0", "=", "pad_x0", "\n", "ctx", ".", "pad_x1", "=", "pad_x1", "\n", "ctx", ".", "pad_y0", "=", "pad_y0", "\n", "ctx", ".", "pad_y1", "=", "pad_y1", "\n", "ctx", ".", "in_size", "=", "in_size", "\n", "ctx", ".", "out_size", "=", "out_size", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.UpFirDn2dBackward.backward": [[61, 85], ["gradgrad_input.reshape.reshape.reshape", "upfirdn2d_op.upfirdn2d", "gradgrad_out.view.view.view"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradgrad_input", ")", ":", "\n", "        ", "kernel", ",", "=", "ctx", ".", "saved_tensors", "\n", "\n", "gradgrad_input", "=", "gradgrad_input", ".", "reshape", "(", "-", "1", ",", "ctx", ".", "in_size", "[", "2", "]", ",", "ctx", ".", "in_size", "[", "3", "]", ",", "1", ")", "\n", "\n", "gradgrad_out", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "gradgrad_input", ",", "\n", "kernel", ",", "\n", "ctx", ".", "up_x", ",", "\n", "ctx", ".", "up_y", ",", "\n", "ctx", ".", "down_x", ",", "\n", "ctx", ".", "down_y", ",", "\n", "ctx", ".", "pad_x0", ",", "\n", "ctx", ".", "pad_x1", ",", "\n", "ctx", ".", "pad_y0", ",", "\n", "ctx", ".", "pad_y1", ",", "\n", ")", "\n", "# gradgrad_out = gradgrad_out.view(ctx.in_size[0], ctx.out_size[0], ctx.out_size[1], ctx.in_size[3])", "\n", "gradgrad_out", "=", "gradgrad_out", ".", "view", "(", "\n", "ctx", ".", "in_size", "[", "0", "]", ",", "ctx", ".", "in_size", "[", "1", "]", ",", "ctx", ".", "out_size", "[", "0", "]", ",", "ctx", ".", "out_size", "[", "1", "]", "\n", ")", "\n", "\n", "return", "gradgrad_out", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.UpFirDn2d.forward": [[88, 124], ["input.reshape.reshape.reshape", "ctx.save_for_backward", "upfirdn2d_op.upfirdn2d", "out.view.view.view", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "kernel", ",", "up", ",", "down", ",", "pad", ")", ":", "\n", "        ", "up_x", ",", "up_y", "=", "up", "\n", "down_x", ",", "down_y", "=", "down", "\n", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "=", "pad", "\n", "\n", "kernel_h", ",", "kernel_w", "=", "kernel", ".", "shape", "\n", "batch", ",", "channel", ",", "in_h", ",", "in_w", "=", "input", ".", "shape", "\n", "ctx", ".", "in_size", "=", "input", ".", "shape", "\n", "\n", "input", "=", "input", ".", "reshape", "(", "-", "1", ",", "in_h", ",", "in_w", ",", "1", ")", "\n", "\n", "ctx", ".", "save_for_backward", "(", "kernel", ",", "torch", ".", "flip", "(", "kernel", ",", "[", "0", ",", "1", "]", ")", ")", "\n", "\n", "out_h", "=", "(", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", ")", "//", "down_y", "+", "1", "\n", "out_w", "=", "(", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", ")", "//", "down_x", "+", "1", "\n", "ctx", ".", "out_size", "=", "(", "out_h", ",", "out_w", ")", "\n", "\n", "ctx", ".", "up", "=", "(", "up_x", ",", "up_y", ")", "\n", "ctx", ".", "down", "=", "(", "down_x", ",", "down_y", ")", "\n", "ctx", ".", "pad", "=", "(", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", ")", "\n", "\n", "g_pad_x0", "=", "kernel_w", "-", "pad_x0", "-", "1", "\n", "g_pad_y0", "=", "kernel_h", "-", "pad_y0", "-", "1", "\n", "g_pad_x1", "=", "in_w", "*", "up_x", "-", "out_w", "*", "down_x", "+", "pad_x0", "-", "up_x", "+", "1", "\n", "g_pad_y1", "=", "in_h", "*", "up_y", "-", "out_h", "*", "down_y", "+", "pad_y0", "-", "up_y", "+", "1", "\n", "\n", "ctx", ".", "g_pad", "=", "(", "g_pad_x0", ",", "g_pad_x1", ",", "g_pad_y0", ",", "g_pad_y1", ")", "\n", "\n", "out", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "input", ",", "kernel", ",", "up_x", ",", "up_y", ",", "down_x", ",", "down_y", ",", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "\n", ")", "\n", "# out = out.view(major, out_h, out_w, minor)", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "channel", ",", "out_h", ",", "out_w", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.UpFirDn2d.backward": [[125, 142], ["UpFirDn2dBackward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "kernel", ",", "grad_kernel", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", "=", "UpFirDn2dBackward", ".", "apply", "(", "\n", "grad_output", ",", "\n", "kernel", ",", "\n", "grad_kernel", ",", "\n", "ctx", ".", "up", ",", "\n", "ctx", ".", "down", ",", "\n", "ctx", ".", "pad", ",", "\n", "ctx", ".", "g_pad", ",", "\n", "ctx", ".", "in_size", ",", "\n", "ctx", ".", "out_size", ",", "\n", ")", "\n", "\n", "return", "grad_input", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d": [[144, 150], ["UpFirDn2d.apply"], "function", ["None"], ["", "", "def", "upfirdn2d", "(", "input", ",", "kernel", ",", "up", "=", "1", ",", "down", "=", "1", ",", "pad", "=", "(", "0", ",", "0", ")", ")", ":", "\n", "    ", "out", "=", "UpFirDn2d", ".", "apply", "(", "\n", "input", ",", "kernel", ",", "(", "up", ",", "up", ")", ",", "(", "down", ",", "down", ")", ",", "(", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ",", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ")", "\n", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.upfirdn2d_native": [[152, 187], ["input.view", "F.pad", "out.permute.view", "F.pad", "out.permute.permute", "out.permute.reshape", "torch.flip().view", "F.conv2d", "out.permute.reshape", "out.permute.permute", "max", "max", "max", "max", "torch.flip", "max", "max", "max", "max"], "function", ["None"], ["", "def", "upfirdn2d_native", "(", "\n", "input", ",", "kernel", ",", "up_x", ",", "up_y", ",", "down_x", ",", "down_y", ",", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "\n", ")", ":", "\n", "    ", "_", ",", "in_h", ",", "in_w", ",", "minor", "=", "input", ".", "shape", "\n", "kernel_h", ",", "kernel_w", "=", "kernel", ".", "shape", "\n", "\n", "out", "=", "input", ".", "view", "(", "-", "1", ",", "in_h", ",", "1", ",", "in_w", ",", "1", ",", "minor", ")", "\n", "out", "=", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "up_x", "-", "1", ",", "0", ",", "0", ",", "0", ",", "up_y", "-", "1", "]", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "in_h", "*", "up_y", ",", "in_w", "*", "up_x", ",", "minor", ")", "\n", "\n", "out", "=", "F", ".", "pad", "(", "\n", "out", ",", "[", "0", ",", "0", ",", "max", "(", "pad_x0", ",", "0", ")", ",", "max", "(", "pad_x1", ",", "0", ")", ",", "max", "(", "pad_y0", ",", "0", ")", ",", "max", "(", "pad_y1", ",", "0", ")", "]", "\n", ")", "\n", "out", "=", "out", "[", "\n", ":", ",", "\n", "max", "(", "-", "pad_y0", ",", "0", ")", ":", "out", ".", "shape", "[", "1", "]", "-", "max", "(", "-", "pad_y1", ",", "0", ")", ",", "\n", "max", "(", "-", "pad_x0", ",", "0", ")", ":", "out", ".", "shape", "[", "2", "]", "-", "max", "(", "-", "pad_x1", ",", "0", ")", ",", "\n", ":", ",", "\n", "]", "\n", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "[", "-", "1", ",", "1", ",", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", ",", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "]", "\n", ")", "\n", "w", "=", "torch", ".", "flip", "(", "kernel", ",", "[", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "1", ",", "kernel_h", ",", "kernel_w", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "out", ",", "w", ")", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "-", "1", ",", "\n", "minor", ",", "\n", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", "+", "1", ",", "\n", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", "+", "1", ",", "\n", ")", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "\n", "return", "out", "[", ":", ",", ":", ":", "down_y", ",", ":", ":", "down_x", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.Accuracy.__init__": [[6, 8], ["metrics.Accuracy.reset"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.Accuracy.update": [[9, 13], ["metrics.batch_pix_accuracy"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_pix_accuracy"], ["", "def", "update", "(", "self", ",", "labels", ",", "preds", ")", ":", "\n", "        ", "correct", ",", "labeled", "=", "batch_pix_accuracy", "(", "preds", ",", "labels", ")", "\n", "self", ".", "total_correct", "+=", "correct", "\n", "self", ".", "total_label", "+=", "labeled", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.Accuracy.get": [[14, 17], ["numpy.spacing"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "accuracy", "=", "1.0", "*", "self", ".", "total_correct", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_label", ")", "\n", "return", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.Accuracy.reset": [[18, 21], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "total_correct", "=", "0", "\n", "self", ".", "total_label", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.__init__": [[26, 29], ["metrics.SegmentationMetric.reset"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.reset"], ["def", "__init__", "(", "self", ",", "nclass", ")", ":", "\n", "        ", "self", ".", "nclass", "=", "nclass", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update": [[30, 45], ["metrics.batch_pix_accuracy_iou", "metrics.batch_intersection_union", "inter.cpu().numpy", "union.cpu().numpy", "inter.cpu", "union.cpu"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_pix_accuracy_iou", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_intersection_union"], ["", "def", "update", "(", "self", ",", "labels", ",", "preds", ")", ":", "\n", "        ", "\"\"\"Updates the internal evaluation result.\n        Parameters\n        ----------\n        labels : 'NDArray' or list of `NDArray`\n            The labels of the data.\n        preds : 'NDArray' or list of `NDArray`\n            Predicted values.\n        \"\"\"", "\n", "correct", ",", "labeled", "=", "batch_pix_accuracy_iou", "(", "preds", ",", "labels", ")", "\n", "inter", ",", "union", "=", "batch_intersection_union", "(", "preds", ",", "labels", ",", "self", ".", "nclass", ")", "\n", "self", ".", "total_correct", "+=", "correct", "\n", "self", ".", "total_label", "+=", "labeled", "\n", "self", ".", "total_inter", "+=", "inter", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "self", ".", "total_union", "+=", "union", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.get": [[46, 57], ["IoU.mean", "numpy.spacing", "numpy.spacing"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "\"\"\"Gets the current evaluation result.\n        Returns\n        -------\n        metrics : tuple of float\n            pixAcc and mIoU\n        \"\"\"", "\n", "pixAcc", "=", "1.0", "*", "self", ".", "total_correct", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_label", ")", "\n", "IoU", "=", "1.0", "*", "self", ".", "total_inter", "/", "(", "np", ".", "spacing", "(", "1", ")", "+", "self", ".", "total_union", ")", "\n", "mIoU", "=", "IoU", ".", "mean", "(", ")", "\n", "return", "pixAcc", ",", "mIoU", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.reset": [[58, 64], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Resets the internal evaluation result to initial state.\"\"\"", "\n", "self", ".", "total_inter", "=", "0", "\n", "self", ".", "total_union", "=", "0", "\n", "self", ".", "total_correct", "=", "0", "\n", "self", ".", "total_label", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_pix_accuracy": [[66, 79], ["torch.sum().item", "torch.sum().item", "predicted.to", "target.to", "torch.sum", "torch.sum"], "function", ["None"], ["", "", "def", "batch_pix_accuracy", "(", "predicted", ",", "target", ")", ":", "\n", "    ", "\"\"\"PixAcc\"\"\"", "\n", "# inputs are NDarray, output 4D, target 3D", "\n", "# the category -1 is ignored class, typically for background / boundary", "\n", "\n", "predict", "=", "predicted", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "target", "=", "target", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "\n", "pixel_labeled", "=", "torch", ".", "sum", "(", "target", ">", "0", ")", ".", "item", "(", ")", "\n", "pixel_correct", "=", "torch", ".", "sum", "(", "(", "predict", "==", "target", ")", "*", "(", "target", ">", "0", ")", ")", ".", "item", "(", ")", "\n", "\n", "assert", "pixel_correct", "<=", "pixel_labeled", ",", "\"Correct area should be smaller than Labeled\"", "\n", "return", "pixel_correct", ",", "pixel_labeled", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_pix_accuracy_iou": [[81, 94], ["torch.sum().item", "torch.sum().item", "torch.argmax().to", "target.to", "torch.sum", "torch.sum", "torch.argmax"], "function", ["None"], ["", "def", "batch_pix_accuracy_iou", "(", "output", ",", "target", ")", ":", "\n", "    ", "\"\"\"PixAcc\"\"\"", "\n", "# inputs are NDarray, output 4D, target 3D", "\n", "# the category -1 is ignored class, typically for background / boundary", "\n", "\n", "predict", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "target", "=", "target", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "\n", "pixel_labeled", "=", "torch", ".", "sum", "(", "target", ">", "0", ")", ".", "item", "(", ")", "\n", "pixel_correct", "=", "torch", ".", "sum", "(", "(", "predict", "==", "target", ")", "*", "(", "target", ">", "0", ")", ")", ".", "item", "(", ")", "\n", "\n", "assert", "pixel_correct", "<=", "pixel_labeled", ",", "\"Correct area should be smaller than Labeled\"", "\n", "return", "pixel_correct", ",", "pixel_labeled", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.batch_intersection_union": [[96, 117], ["torch.histc", "torch.histc", "torch.histc", "torch.argmax().to", "target.to", "torch.argmax"], "function", ["None"], ["", "def", "batch_intersection_union", "(", "output", ",", "target", ",", "nclass", ")", ":", "\n", "    ", "\"\"\"mIoU\"\"\"", "\n", "# inputs are NDarray, output 4D, target 3D", "\n", "# the category -1 is ignored class, typically for background / boundary", "\n", "mini", "=", "1", "\n", "maxi", "=", "nclass", "\n", "nbins", "=", "nclass", "\n", "\n", "predict", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "target", "=", "target", ".", "to", "(", "torch", ".", "int64", ")", "+", "1", "\n", "\n", "predict", "=", "predict", "*", "(", "target", ">", "0", ")", ".", "to", "(", "predict", ".", "dtype", ")", "\n", "intersection", "=", "predict", "*", "(", "predict", "==", "target", ")", ".", "to", "(", "predict", ".", "dtype", ")", "\n", "\n", "area_inter", "=", "torch", ".", "histc", "(", "intersection", ",", "bins", "=", "nbins", ",", "min", "=", "mini", ",", "max", "=", "maxi", ")", "\n", "area_pred", "=", "torch", ".", "histc", "(", "predict", ",", "bins", "=", "nbins", ",", "min", "=", "mini", ",", "max", "=", "maxi", ")", "\n", "area_lab", "=", "torch", ".", "histc", "(", "target", ",", "bins", "=", "nbins", ",", "min", "=", "mini", ",", "max", "=", "maxi", ")", "\n", "\n", "area_union", "=", "area_pred", "+", "area_lab", "-", "area_inter", "\n", "\n", "return", "area_inter", ",", "area_union", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.__init__": [[13, 30], ["print", "time.time", "dataset.CollectionDataset._load_data", "print", "time.time"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset._load_data"], ["    ", "def", "__init__", "(", "self", ",", "db_dir", ",", "cfg", ",", "is_validation", "=", "False", ",", "output_idx", "=", "False", ",", "max_samples", "=", "None", ",", "\n", "allow_missed_mask", "=", "False", ",", "load_to_memory", "=", "True", ",", "min_epoch_size", "=", "5", ")", ":", "\n", "        ", "self", ".", "_cfg", "=", "cfg", "\n", "self", ".", "_is_train", "=", "not", "is_validation", "\n", "self", ".", "_output_idx", "=", "output_idx", "\n", "self", ".", "_max_samples", "=", "max_samples", "\n", "self", ".", "_allow_missed_mask", "=", "allow_missed_mask", "\n", "self", ".", "_preprocess_mask", "=", "cfg", "[", "'preprocess_mask'", "]", "\n", "self", ".", "_not_ignore_classes", "=", "cfg", "[", "'not_ignore_classes'", "]", "\n", "self", ".", "_load_to_memory", "=", "load_to_memory", "\n", "self", ".", "_db_dir", "=", "db_dir", "\n", "self", ".", "_min_epoch_size", "=", "min_epoch_size", "\n", "\n", "print", "(", "'loading data..'", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "_load_data", "(", ")", "\n", "print", "(", "'loading finished in {:.3} sec'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset._load_data": [[31, 51], ["lib.utils.utils.list_files_with_ext", "min", "random.sample", "len", "samples.append", "dataset.CollectionDataset.load_sample"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_files_with_ext", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.load_sample"], ["", "def", "_load_data", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "self", ".", "_db_dir", "\n", "\n", "samples", "=", "[", "]", "\n", "\n", "feat_names", "=", "list_files_with_ext", "(", "db_dir", ",", "valid_exts", "=", "[", "'.pickle'", "]", ")", "\n", "feat_names", "=", "[", "f", "for", "f", "in", "feat_names", "if", "'feat'", "in", "f", "]", "\n", "\n", "if", "self", ".", "_max_samples", "is", "not", "None", ":", "\n", "            ", "self", ".", "_max_samples", "=", "min", "(", "len", "(", "feat_names", ")", ",", "self", ".", "_max_samples", ")", "\n", "feat_names", "=", "random", ".", "sample", "(", "feat_names", ",", "self", ".", "_max_samples", ")", "\n", "\n", "", "if", "self", ".", "_load_to_memory", ":", "\n", "            ", "for", "feat_name", "in", "feat_names", ":", "\n", "                ", "samples", ".", "append", "(", "self", ".", "load_sample", "(", "feat_name", ")", ")", "\n", "", "self", ".", "_samples", "=", "samples", "\n", "", "else", ":", "\n", "            ", "self", ".", "_samples", "=", "None", "\n", "", "self", ".", "_feat_names", "=", "feat_names", "\n", "self", ".", "_db_dir", "=", "db_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.load_sample": [[52, 72], ["cv2.imread", "cv2.imread", "os.path.splitext", "imbase.replace", "imbase.replace", "os.path.join", "os.path.join", "numpy.zeros", "open", "pickle.load", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load"], ["", "def", "load_sample", "(", "self", ",", "feature_name", ")", ":", "\n", "\n", "        ", "db_dir", "=", "self", ".", "_db_dir", "\n", "\n", "imbase", "=", "splitext", "(", "feature_name", ")", "[", "0", "]", "\n", "imname", "=", "imbase", ".", "replace", "(", "'feat'", ",", "'img'", ")", "+", "'.jpg'", "\n", "mask_name", "=", "imbase", ".", "replace", "(", "'feat'", ",", "'mask'", ")", "+", "'.png'", "\n", "\n", "img_data", "=", "cv2", ".", "imread", "(", "join", "(", "db_dir", ",", "imname", ")", ")", "\n", "img_data", "=", "img_data", "[", ":", ",", ":", ",", "[", "2", ",", "1", ",", "0", "]", "]", "# bgr to rgb", "\n", "\n", "mask_data", "=", "cv2", ".", "imread", "(", "join", "(", "db_dir", ",", "mask_name", ")", ",", "0", ")", "\n", "if", "mask_data", "is", "None", "and", "self", ".", "_allow_missed_mask", ":", "\n", "            ", "mask_data", "=", "np", ".", "zeros", "(", "(", "img_data", ".", "shape", "[", "0", "]", ",", "img_data", ".", "shape", "[", "1", "]", ")", ")", "\n", "", "assert", "(", "mask_data", "is", "not", "None", ")", "\n", "\n", "with", "open", "(", "join", "(", "db_dir", ",", "feature_name", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "features", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "\n", "", "return", "(", "mask_data", ",", "img_data", ",", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.get_item": [[73, 126], ["numpy.transpose.astype", "numpy.transpose", "numpy.transpose", "dataset.CollectionDataset.load_sample", "mask.astype.astype.astype", "numpy.isin", "numpy.array", "numpy.logical_and", "mask.astype.astype.astype", "numpy.array", "numpy.logical_and", "mask.astype.astype.astype", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.load_sample"], ["", "def", "get_item", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "if", "self", ".", "_load_to_memory", ":", "\n", "            ", "mask", ",", "img", ",", "features", "=", "self", ".", "_samples", "[", "idx", "]", "\n", "", "else", ":", "\n", "            ", "mask", ",", "img", ",", "features", "=", "self", ".", "load_sample", "(", "self", ".", "_feat_names", "[", "idx", "]", ")", "\n", "\n", "", "if", "self", ".", "_preprocess_mask", ":", "\n", "            ", "if", "not", "self", ".", "_is_train", ":", "\n", "\n", "                ", "mask_cpy", "=", "np", ".", "array", "(", "mask", ",", "copy", "=", "True", ")", "\n", "mask_false", "=", "np", ".", "logical_and", "(", "mask_cpy", ">=", "64", ",", "mask_cpy", "<=", "192", ")", "\n", "mask_ignore", "=", "mask_cpy", "<", "64", "\n", "mask_true", "=", "mask_cpy", ">", "192", "\n", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "mask", "[", "mask_true", "]", "=", "1", "\n", "mask", "[", "mask_false", "]", "=", "0", "\n", "mask", "[", "mask_ignore", "]", "=", "-", "1", "\n", "\n", "", "else", ":", "\n", "                ", "mask_cpy", "=", "np", ".", "array", "(", "mask", ",", "copy", "=", "True", ")", "\n", "mask_false", "=", "np", ".", "logical_and", "(", "mask_cpy", ">=", "64", ",", "mask_cpy", "<=", "192", ")", "\n", "mask_ignore", "=", "mask_cpy", "<", "64", "\n", "mask_true", "=", "mask_cpy", ">", "192", "\n", "\n", "mask", "=", "mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "mask", "[", "mask_true", "]", "=", "1", "\n", "mask", "[", "mask_false", "]", "=", "0", "\n", "mask", "[", "mask_ignore", "]", "=", "-", "1", "\n", "", "", "else", ":", "\n", "            ", "mask", "=", "mask", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "", "if", "self", ".", "_not_ignore_classes", "is", "not", "None", ":", "\n", "            ", "test_elements", "=", "self", ".", "_not_ignore_classes", "\n", "mask_not_ignore", "=", "np", ".", "isin", "(", "mask", ",", "test_elements", ")", "\n", "mask", "[", "np", ".", "logical_not", "(", "mask_not_ignore", ")", "]", "=", "-", "1", "\n", "\n", "", "mask", "=", "mask", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "channel_swap", "=", "(", "2", ",", "0", ",", "1", ")", "\n", "mask", "=", "np", ".", "transpose", "(", "mask", ",", "axes", "=", "channel_swap", ")", "\n", "img", "=", "np", ".", "transpose", "(", "img", ",", "axes", "=", "channel_swap", ")", "\n", "\n", "data", "=", "{", "}", "\n", "data", "[", "'img'", "]", "=", "img", "\n", "data", "[", "'mask'", "]", "=", "mask", "\n", "data", "[", "'features'", "]", "=", "features", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.__getitem__": [[127, 133], ["dataset.CollectionDataset.get_item", "len", "numpy.random.randint", "len"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.get_item"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "if", "len", "(", "self", ".", "_feat_names", ")", "<", "self", ".", "_min_epoch_size", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "_feat_names", ")", ")", "\n", "\n", "", "return", "self", ".", "get_item", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.get_imname": [[134, 139], ["os.path.splitext", "feat_namebase.replace"], "methods", ["None"], ["", "def", "get_imname", "(", "self", ",", "idx", ")", ":", "\n", "        ", "feat_name", "=", "self", ".", "_feat_names", "[", "idx", "]", "\n", "feat_namebase", "=", "splitext", "(", "feat_name", ")", "[", "0", "]", "\n", "imname", "=", "feat_namebase", ".", "replace", "(", "'feat'", ",", "'img'", ")", "+", "'.jpg'", "\n", "return", "imname", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.data.dataset.CollectionDataset.__len__": [[140, 142], ["max", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "max", "(", "self", ".", "_min_epoch_size", ",", "len", "(", "self", ".", "_feat_names", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.__init__": [[21, 36], ["len", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "seg_solver.SegSolver.get_config", "seg_solver.SegSolver.init_net", "seg_solver.SegSolver.load", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.get_config", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_net", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load"], ["    ", "def", "__init__", "(", "self", ",", "max_res_log2", ",", "path_to_data", ",", "checkpoints_dir", ",", "gpu_ids", ")", ":", "\n", "\n", "        ", "self", ".", "path_to_data", "=", "path_to_data", "\n", "self", ".", "checkpoints_dir", "=", "checkpoints_dir", "\n", "\n", "ngpus", "=", "len", "(", "gpu_ids", ")", "\n", "device", "=", "torch", ".", "device", "(", "gpu_ids", "[", "0", "]", "if", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "ngpus", ">", "0", ")", "else", "'cpu'", ")", "\n", "\n", "self", ".", "is_trained", "=", "False", "\n", "self", ".", "params_file", "=", "None", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "max_res_log2", "=", "max_res_log2", "\n", "self", ".", "cfg", "=", "self", ".", "get_config", "(", "max_res_log2", "=", "max_res_log2", ")", "\n", "self", ".", "net", "=", "self", ".", "init_net", "(", "self", ".", "max_res_log2", ")", "\n", "self", ".", "is_trained", "=", "self", ".", "load", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_net": [[37, 54], ["lib.nn.networks_seg_2.Decoder", "lib.nn.layers.modifiers.apply_wscale", "net.to.to.apply", "seg_solver.SegSolver.print_params", "net.to.to.train", "net.to.to.to", "lib.nn.layers.weight_init.Normal"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_wscale", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.print_params"], ["", "def", "init_net", "(", "self", ",", "max_res_log2", ")", ":", "\n", "\n", "# net = Decoder(self.cfg)", "\n", "# net = Decoder(self.cfg)", "\n", "# net.apply(XavierGluon(rnd_type='gaussian', factor_type='in', magnitude=2.34))", "\n", "\n", "        ", "net", "=", "Decoder", "(", "max_res_log2", "=", "9", ",", "fmap_base", "=", "2", "*", "128", "*", "64", ",", "num_classes", "=", "2", ",", "\n", "decoder_fmap_max", "=", "128", ",", "use_bn", "=", "False", ",", "dropout", "=", "0.1", ",", "skip_n_last_features", "=", "2", ")", "\n", "apply_wscale", "(", "net", ",", "gain", "=", "1.", ")", "\n", "net", ".", "apply", "(", "Normal", "(", "1.0", ")", ")", "\n", "\n", "self", ".", "print_params", "(", "net", ",", "'decoder'", ")", "\n", "\n", "net", ".", "train", "(", ")", "\n", "net", "=", "net", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_trainer": [[55, 69], ["seg_solver.SegSolver.get_optimizer_params", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "net.parameters", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "logging.info", "net.parameters"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.get_optimizer_params"], ["", "def", "init_trainer", "(", "self", ",", "net", ")", ":", "\n", "\n", "        ", "optimizer", ",", "optimizer_params", "=", "self", ".", "get_optimizer_params", "(", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "-", "1", ")", "\n", "\n", "if", "optimizer", "==", "'adam'", ":", "\n", "            ", "trainer", "=", "torch", ".", "optim", ".", "Adam", "(", "net", ".", "parameters", "(", ")", ",", "**", "optimizer_params", ")", "\n", "", "elif", "optimizer", "==", "'sgd'", ":", "\n", "            ", "trainer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "**", "optimizer_params", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "f'unknown optimizer: {optimizer}'", ")", "\n", "raise", "ValueError", "\n", "\n", "", "return", "trainer", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.print_params": [[70, 79], ["logging.info", "net.parameters", "logging.info", "logging.info", "param.numel", "logging.info"], "methods", ["None"], ["", "def", "print_params", "(", "self", ",", "net", ",", "name", "=", "''", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'-----------------------------------------------'", ")", "\n", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "            ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "if", "verbose", ":", "\n", "            ", "logging", ".", "info", "(", "net", ")", "\n", "", "logging", ".", "info", "(", "'[Network %s] Total number of parameters : %.3f M'", "%", "(", "name", ",", "num_params", "/", "1e6", ")", ")", "\n", "logging", ".", "info", "(", "'-----------------------------------------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.get_config": [[80, 138], ["print"], "methods", ["None"], ["", "def", "get_config", "(", "self", ",", "max_res_log2", "=", "9", ")", ":", "\n", "        ", "cfg", "=", "{", "}", "\n", "\n", "cfg", "[", "'seed'", "]", "=", "1", "\n", "cfg", "[", "'kvstore'", "]", "=", "'nccl'", "\n", "cfg", "[", "'cache_max_size'", "]", "=", "4", "# in GB", "\n", "cfg", "[", "'plot_graph'", "]", "=", "True", "\n", "\n", "cfg", "[", "'num_classes'", "]", "=", "2", "\n", "cfg", "[", "'not_ignore_classes'", "]", "=", "None", "\n", "cfg", "[", "'cls_type'", "]", "=", "'hair'", "\n", "\n", "cfg", "[", "'train_epochs'", "]", "=", "24", "\n", "\n", "# cfg['base_lr'] = 0.01", "\n", "# cfg['factor_d'] = 0.1", "\n", "# cfg['wd'] = 1e-3", "\n", "# cfg['optimizer'] = 'sgd'", "\n", "# cfg['momentum'] = 0.9", "\n", "# cfg['epochs_steps'] = [cfg['train_epochs'] * 0.6, cfg['train_epochs'] * 0.8]", "\n", "# cfg['scheduler'] = 'steps'", "\n", "\n", "cfg", "[", "'base_lr'", "]", "=", "1e-3", "\n", "print", "(", "cfg", "[", "'base_lr'", "]", ")", "\n", "cfg", "[", "'factor_d'", "]", "=", "0.1", "\n", "cfg", "[", "'wd'", "]", "=", "None", "\n", "cfg", "[", "'optimizer'", "]", "=", "'adam'", "\n", "cfg", "[", "'momentum'", "]", "=", "None", "\n", "\n", "cfg", "[", "'preprocess_mask'", "]", "=", "True", "\n", "\n", "cfg", "[", "'train_display_iters'", "]", "=", "4", "\n", "cfg", "[", "'train_batch_size'", "]", "=", "1", "\n", "cfg", "[", "'val_batch_size'", "]", "=", "1", "\n", "\n", "cfg", "[", "'val_loader_workers'", "]", "=", "0", "\n", "cfg", "[", "'train_loader_workers'", "]", "=", "0", "\n", "\n", "cfg", "[", "'train_show_images'", "]", "=", "1", "\n", "cfg", "[", "'val_show_images'", "]", "=", "1", "\n", "\n", "cfg", "[", "'val_report_intermediate'", "]", "=", "False", "\n", "cfg", "[", "'val_report_interval'", "]", "=", "0.34", "\n", "\n", "cfg", "[", "'use_bn'", "]", "=", "True", "\n", "cfg", "[", "'use_sync_bn'", "]", "=", "False", "\n", "cfg", "[", "'use_dropout'", "]", "=", "True", "\n", "cfg", "[", "'start_res'", "]", "=", "0", "\n", "\n", "cfg", "[", "'features'", "]", "=", "[", "32", ",", "32", ",", "32", ",", "32", ",", "32", ",", "32", ",", "32", ",", "32", ",", "16", "]", "\n", "cfg", "[", "'in_channels'", "]", "=", "[", "512", ",", "512", ",", "512", ",", "512", ",", "512", ",", "256", ",", "128", ",", "64", ",", "32", "]", "\n", "\n", "cfg", "[", "'features'", "]", "=", "cfg", "[", "'features'", "]", "[", ":", "max_res_log2", "-", "1", "]", "+", "[", "cfg", "[", "'num_classes'", "]", "]", "\n", "cfg", "[", "'in_channels'", "]", "=", "cfg", "[", "'in_channels'", "]", "[", ":", "max_res_log2", "-", "1", "]", "\n", "\n", "cfg", "[", "'dtype'", "]", "=", "'fp32'", "\n", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_data": [[139, 159], ["lib.data.dataset.CollectionDataset", "len", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "int", "print", "print", "print", "print", "len"], "methods", ["None"], ["", "def", "init_data", "(", "self", ")", ":", "\n", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "train_dataset", "=", "CollectionDataset", "(", "self", ".", "path_to_data", ",", "cfg", ",", "max_samples", "=", "None", ",", "load_to_memory", "=", "False", ")", "\n", "train_n_samples", "=", "len", "(", "train_dataset", ")", "\n", "if", "train_n_samples", "<=", "0", ":", "\n", "            ", "print", "(", "'number of training samples should be > 0'", ")", "\n", "raise", "ValueError", "\n", "\n", "", "train_data", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "cfg", "[", "'train_batch_size'", "]", ",", "drop_last", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "cfg", "[", "'train_loader_workers'", "]", ")", "\n", "\n", "iters_per_epoch", "=", "int", "(", "len", "(", "train_dataset", ")", "/", "cfg", "[", "'train_batch_size'", "]", ")", "\n", "\n", "\n", "print", "(", "'total train samples: {}'", ".", "format", "(", "train_n_samples", ")", ")", "\n", "print", "(", "'batch size: {}'", ".", "format", "(", "cfg", "[", "'train_batch_size'", "]", ")", ")", "\n", "print", "(", "'epoch size: {}'", ".", "format", "(", "iters_per_epoch", ")", ")", "\n", "\n", "return", "train_dataset", ",", "train_data", ",", "iters_per_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_eval_data": [[160, 176], ["lib.data.dataset.CollectionDataset", "len", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "print", "print"], "methods", ["None"], ["", "def", "init_eval_data", "(", "self", ",", "input_dir", ")", ":", "\n", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "eval_dataset", "=", "CollectionDataset", "(", "input_dir", ",", "cfg", ",", "max_samples", "=", "None", ",", "load_to_memory", "=", "False", ",", "output_idx", "=", "True", ")", "\n", "eval_n_samples", "=", "len", "(", "eval_dataset", ")", "\n", "if", "eval_n_samples", "<=", "0", ":", "\n", "            ", "print", "(", "'number of training samples should be > 0'", ")", "\n", "raise", "ValueError", "\n", "\n", "", "eval_data", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "eval_dataset", ",", "batch_size", "=", "cfg", "[", "'val_batch_size'", "]", ",", "drop_last", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "cfg", "[", "'val_loader_workers'", "]", ")", "\n", "\n", "print", "(", "'total eval samples: {}'", ".", "format", "(", "eval_n_samples", ")", ")", "\n", "print", "(", "'batch size: {}'", ".", "format", "(", "cfg", "[", "'val_batch_size'", "]", ")", ")", "\n", "\n", "return", "eval_dataset", ",", "eval_data", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_metric": [[177, 180], ["lib.metrics.metrics.Accuracy"], "methods", ["None"], ["", "def", "init_metric", "(", "self", ")", ":", "\n", "        ", "train_metric", "=", "Accuracy", "(", ")", "\n", "return", "train_metric", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.get_optimizer_params": [[181, 201], ["optimizer_params.append", "optimizer_params.append", "optimizer_params.append"], "methods", ["None"], ["", "def", "get_optimizer_params", "(", "self", ")", ":", "\n", "\n", "        ", "cfg", "=", "self", ".", "cfg", "\n", "\n", "base_lr", "=", "cfg", "[", "'base_lr'", "]", "\n", "optimizer", "=", "cfg", "[", "'optimizer'", "]", "\n", "wd", "=", "cfg", "[", "'wd'", "]", "\n", "momentum", "=", "cfg", "[", "'momentum'", "]", "\n", "\n", "optimizer_params", "=", "[", "]", "\n", "if", "base_lr", "is", "not", "None", ":", "\n", "            ", "optimizer_params", ".", "append", "(", "(", "'lr'", ",", "base_lr", ")", ")", "\n", "", "if", "momentum", "is", "not", "None", ":", "\n", "            ", "optimizer_params", ".", "append", "(", "(", "'momentum'", ",", "momentum", ")", ")", "\n", "", "if", "wd", "is", "not", "None", ":", "\n", "            ", "optimizer_params", ".", "append", "(", "(", "'wd'", ",", "wd", ")", ")", "\n", "\n", "", "optimizer_params", "=", "{", "name", ":", "value", "for", "name", ",", "value", "in", "optimizer_params", "}", "\n", "\n", "return", "optimizer", ",", "optimizer_params", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.evaluate": [[202, 207], ["seg_solver.SegSolver.init_eval_data", "lib.metrics.metrics.SegmentationMetric", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "seg_solver.SegSolver.evaluate_for_data"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_eval_data", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.evaluate_for_data"], ["", "def", "evaluate", "(", "self", ",", "input_dir", ",", "output_dir", "=", "None", ")", ":", "\n", "        ", "eval_dataset", ",", "eval_dataloader", "=", "self", ".", "init_eval_data", "(", "input_dir", ")", "\n", "eval_metric", "=", "SegmentationMetric", "(", "self", ".", "cfg", "[", "'num_classes'", "]", ")", "\n", "loss_f", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "-", "1", ")", "\n", "return", "self", ".", "evaluate_for_data", "(", "eval_dataloader", ",", "loss_f", ",", "eval_metric", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.evaluate_for_data": [[208, 246], ["eval_metric.get", "result.append", "result.append", "result.append", "batch[].to().to", "seg_solver.SegSolver.net", "loss_f", "loss_f.item", "eval_metric.update", "f.to", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "batch[].to"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.get", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update"], ["", "def", "evaluate_for_data", "(", "self", ",", "val_dataloader", ",", "loss_f", ",", "eval_metric", ")", ":", "\n", "        ", "total_loss", "=", "0", "\n", "total_cnt", "=", "0", "\n", "for", "batch", "in", "val_dataloader", ":", "\n", "            ", "mask", "=", "batch", "[", "'mask'", "]", ".", "to", "(", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "batch", "[", "'features'", "]", "\n", "features", "=", "[", "f", ".", "to", "(", "self", ".", "device", ")", "for", "f", "in", "features", "]", "\n", "\n", "outputs", "=", "self", ".", "net", "(", "features", ")", "\n", "\n", "ce_loss", "=", "loss_f", "(", "outputs", ",", "mask", ")", "\n", "\n", "loss_v", "=", "ce_loss", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss_v", "\n", "total_cnt", "+=", "1", "\n", "\n", "h", "=", "2", "**", "self", ".", "max_res_log2", "\n", "w", "=", "2", "**", "self", ".", "max_res_log2", "\n", "\n", "if", "outputs", ".", "shape", "[", "2", "]", "!=", "h", "or", "outputs", ".", "shape", "[", "3", "]", "!=", "w", ":", "\n", "                ", "outputs", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "outputs", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "", "eval_metric", ".", "update", "(", "mask", ",", "outputs", ")", "\n", "\n", "", "if", "total_cnt", ">", "0", ":", "\n", "            ", "total_loss", "=", "total_loss", "/", "total_cnt", "\n", "", "else", ":", "\n", "            ", "total_loss", "=", "0.0", "\n", "\n", "", "pixAcc", ",", "mIoU", "=", "eval_metric", ".", "get", "(", ")", "\n", "\n", "result", "=", "[", "]", "\n", "result", ".", "append", "(", "(", "'pixAcc'", ",", "pixAcc", ")", ")", "\n", "result", ".", "append", "(", "(", "'mIoU'", ",", "mIoU", ")", ")", "\n", "result", ".", "append", "(", "(", "'total-loss'", ",", "total_loss", ")", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.predict": [[247, 273], ["torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.softmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "torch.argmax().detach().cpu().numpy", "numpy.transpose", "features_n.append", "f.unsqueeze.unsqueeze.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "seg_solver.SegSolver.net", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "isinstance", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "len", "f.unsqueeze.unsqueeze.unsqueeze", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.softmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.argmax().detach().cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.argmax().detach", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "features", ")", ":", "\n", "\n", "        ", "features_n", "=", "[", "]", "\n", "for", "f", "in", "features", ":", "\n", "            ", "if", "not", "isinstance", "(", "f", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "f", "=", "torch", ".", "from_numpy", "(", "f", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "", "if", "len", "(", "f", ".", "shape", ")", "==", "3", ":", "\n", "                ", "f", "=", "f", ".", "unsqueeze", "(", "0", ")", "\n", "", "features_n", ".", "append", "(", "f", ")", "\n", "\n", "", "features", "=", "[", "f", ".", "to", "(", "self", ".", "device", ")", "for", "f", "in", "features_n", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred_mask", "=", "self", ".", "net", "(", "features", ")", "\n", "\n", "", "h", "=", "2", "**", "self", ".", "max_res_log2", "\n", "w", "=", "2", "**", "self", ".", "max_res_log2", "\n", "\n", "if", "pred_mask", ".", "shape", "[", "2", "]", "!=", "h", "or", "pred_mask", ".", "shape", "[", "3", "]", "!=", "w", ":", "\n", "            ", "pred_mask", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "pred_mask", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "", "probs", "=", "torch", ".", "softmax", "(", "pred_mask", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "pred_masks", "=", "torch", ".", "argmax", "(", "pred_mask", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_masks", "=", "np", ".", "transpose", "(", "pred_masks", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "return", "pred_masks", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save": [[274, 283], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "seg_solver.SegSolver.net.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save"], ["", "def", "save", "(", "self", ",", "suffix", "=", "None", ")", ":", "\n", "        ", "if", "suffix", "is", "None", ":", "\n", "            ", "param_name", "=", "'checkpoint_latest.tar'", "\n", "", "else", ":", "\n", "            ", "param_name", "=", "f'checkpoint_{suffix}.tar'", "\n", "", "self", ".", "params_file", "=", "param_name", "\n", "\n", "checkpoint_states", "=", "{", "'net'", ":", "self", ".", "net", ".", "state_dict", "(", ")", "}", "\n", "torch", ".", "save", "(", "checkpoint_states", ",", "join", "(", "self", ".", "checkpoints_dir", ",", "param_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load": [[284, 302], ["lib.utils.utils.list_files_with_ext", "len", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "seg_solver.SegSolver.net.load_state_dict", "len", "sorted", "os.path.join", "int", "[].split", "os.path.splitext"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.list_files_with_ext", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load"], ["", "def", "load", "(", "self", ")", ":", "\n", "\n", "        ", "params_files", "=", "list_files_with_ext", "(", "self", ".", "checkpoints_dir", ",", "valid_exts", "=", "[", "'.tar'", "]", ")", "\n", "if", "len", "(", "params_files", ")", ">", "0", ":", "\n", "            ", "params_n", "=", "[", "p", "for", "p", "in", "params_files", "if", "'train_number'", "in", "p", "]", "\n", "if", "len", "(", "params_n", ")", ">", "0", ":", "\n", "                ", "params_n", "=", "[", "(", "p", ",", "int", "(", "splitext", "(", "p", ")", "[", "0", "]", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", ")", "for", "p", "in", "params_n", "]", "\n", "params_n", "=", "sorted", "(", "params_n", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "params_file", "=", "params_n", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "params_file", "=", "params_files", "[", "0", "]", "\n", "", "print", "(", "f'loading checkpoint: {params_file}'", ")", "\n", "self", ".", "params_file", "=", "params_file", "\n", "checkpoint", "=", "torch", ".", "load", "(", "join", "(", "self", ".", "checkpoints_dir", ",", "params_file", ")", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "checkpoint", "[", "'net'", "]", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.fit": [[303, 387], ["seg_solver.SegSolver.init_net", "seg_solver.SegSolver.init_data", "seg_solver.SegSolver.init_trainer", "seg_solver.SegSolver.init_metric", "range", "seg_solver.SegSolver.save", "time.time", "train_metric.reset", "time.time", "logging.info", "batch[].to().to", "seg_solver.SegSolver.net", "mask.view.view.view", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate.view", "seg_solver.SegSolver.loss", "train_metric.update", "trainer.zero_grad", "seg_solver.SegSolver.backward", "trainer.step", "time.time", "epoch_end_callback", "f.to", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "train_metric.get", "seg_solver.SegSolver.item", "train_metric.reset", "logging.info", "time.time", "batch[].to", "mask.view.view.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "time.time"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_net", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_data", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_trainer", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.init_metric", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.reset", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.cuda.upfirdn2d.UpFirDn2d.backward", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.get", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.reset"], ["", "", "def", "fit", "(", "self", ",", "epoch_end_callback", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "net", "=", "self", ".", "init_net", "(", "self", ".", "max_res_log2", ")", "\n", "self", ".", "train_dataset", ",", "self", ".", "train_dataloader", ",", "self", ".", "iters_per_epoch", "=", "self", ".", "init_data", "(", ")", "\n", "self", ".", "trainer", ",", "self", ".", "loss", "=", "self", ".", "init_trainer", "(", "self", ".", "net", ")", "\n", "self", ".", "train_metric", "=", "self", ".", "init_metric", "(", ")", "\n", "\n", "trainer", "=", "self", ".", "trainer", "\n", "train_dataloader", "=", "self", ".", "train_dataloader", "\n", "iters_per_epoch", "=", "self", ".", "iters_per_epoch", "\n", "batch_size", "=", "self", ".", "cfg", "[", "'train_batch_size'", "]", "\n", "\n", "display", "=", "self", ".", "cfg", "[", "'train_display_iters'", "]", "\n", "train_metric", "=", "self", ".", "train_metric", "\n", "epochs_to_train", "=", "self", ".", "cfg", "[", "'train_epochs'", "]", "\n", "\n", "scores", "=", "[", "]", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs_to_train", ")", ":", "\n", "# new epoch", "\n", "            ", "tic", "=", "time", ".", "time", "(", ")", "\n", "\n", "train_metric", ".", "reset", "(", ")", "\n", "\n", "nbatch", "=", "0", "\n", "speed_tic", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "batch", "in", "train_dataloader", ":", "\n", "\n", "                ", "mask", "=", "batch", "[", "'mask'", "]", ".", "to", "(", "torch", ".", "long", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "features", "=", "batch", "[", "'features'", "]", "\n", "features", "=", "[", "f", ".", "to", "(", "self", ".", "device", ")", "for", "f", "in", "features", "]", "\n", "\n", "outputs", "=", "self", ".", "net", "(", "features", ")", "\n", "\n", "h", "=", "2", "**", "self", ".", "max_res_log2", "\n", "w", "=", "2", "**", "self", ".", "max_res_log2", "\n", "if", "outputs", ".", "shape", "[", "2", "]", "!=", "h", "or", "outputs", ".", "shape", "[", "3", "]", "!=", "w", ":", "\n", "                    ", "outputs", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "outputs", ",", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "\n", "", "mask", "=", "mask", ".", "view", "(", "(", "mask", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "outputs", "=", "outputs", ".", "view", "(", "(", "outputs", ".", "size", "(", "0", ")", ",", "outputs", ".", "size", "(", "1", ")", ",", "-", "1", ")", ")", "\n", "ce_loss", "=", "self", ".", "loss", "(", "outputs", ",", "mask", ")", "\n", "\n", "train_metric", ".", "update", "(", "mask", ",", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", ")", "\n", "\n", "trainer", ".", "zero_grad", "(", ")", "\n", "ce_loss", ".", "backward", "(", ")", "\n", "trainer", ".", "step", "(", ")", "\n", "\n", "nbatch", "+=", "1", "\n", "global_step", "=", "(", "epoch", "*", "iters_per_epoch", "+", "nbatch", ")", "*", "batch_size", "\n", "\n", "# speedometer", "\n", "if", "display", "is", "not", "None", "and", "nbatch", "%", "display", "==", "0", ":", "\n", "\n", "                    ", "speed", "=", "1.0", "*", "display", "*", "batch_size", "/", "(", "time", ".", "time", "(", ")", "-", "speed_tic", ")", "\n", "\n", "accuracy", "=", "train_metric", ".", "get", "(", ")", "\n", "total_loss", "=", "ce_loss", ".", "item", "(", ")", "\n", "train_metric", ".", "reset", "(", ")", "\n", "\n", "msg", "=", "f'Epoch[{epoch}] Batch[{nbatch}] Speed: {speed:.2f} samples/sec Loss: {total_loss:4f} Accuracy: {accuracy:.1f}'", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "speed_tic", "=", "time", ".", "time", "(", ")", "\n", "\n", "# global_step = ((epoch + 1) * iters_per_epoch) * batch_size", "\n", "\n", "# # one epoch of training is finished", "\n", "# for name, val in name_values:", "\n", "#     logging.info('Epoch[%d] Train-%s=%f', epoch + 1, name, val)", "\n", "", "", "time_cost", "=", "(", "time", ".", "time", "(", ")", "-", "tic", ")", "\n", "logging", ".", "info", "(", "'Epoch[%d] Time cost=%.3f'", ",", "epoch", "+", "1", ",", "time_cost", ")", "\n", "\n", "if", "epoch_end_callback", "is", "not", "None", ":", "\n", "                ", "epoch_end_callback", "(", ")", "\n", "\n", "# save checkpoint", "\n", "", "", "self", ".", "is_trained", "=", "True", "\n", "self", ".", "save", "(", ")", "\n", "# self.save(suffix=f'train_number_{len(self.train_dataset)}')", "\n", "\n", "return", "scores", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator.__init__": [[10, 31], ["super().__init__", "len", "torch.device", "image_generator.ImageGenerator._get_config", "image_generator.ImageGenerator.init_generator", "torch.load", "image_generator.ImageGenerator.netG.load_state_dict", "image_generator.ImageGenerator.netG.eval", "image_generator.ImageGenerator.netG.to", "checkpoint[].to", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator._get_config", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator.init_generator", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.load"], ["    ", "def", "__init__", "(", "self", ",", "gpu_ids", ",", "gan_dir", ",", "gan", "=", "'ffhq'", ",", "batch_size", "=", "16", ",", "return_latents", "=", "False", ",", "use_latent_avg", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "max_res_log2_dict", "=", "{", "'ffhq'", ":", "10", ",", "'church'", ":", "9", ",", "'cat'", ":", "9", ",", "'car'", ":", "9", ",", "'horse'", ":", "9", ",", "'cityscapes'", ":", "9", "}", "\n", "self", ".", "max_res_log2", "=", "max_res_log2_dict", "[", "gan", "]", "\n", "\n", "self", ".", "return_latents", "=", "return_latents", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "ngpus", "=", "len", "(", "gpu_ids", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "gpu_ids", "[", "0", "]", "if", "(", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "ngpus", ">", "0", ")", "else", "'cpu'", ")", "\n", "self", ".", "cfg", "=", "self", ".", "_get_config", "(", "max_res_log2", "=", "self", ".", "max_res_log2", ")", "\n", "self", ".", "latent_size", "=", "self", ".", "cfg", "[", "'latent_size'", "]", "\n", "\n", "self", ".", "netG", "=", "self", ".", "init_generator", "(", "self", ".", "cfg", ",", "initialize", "=", "False", ")", "\n", "stylegan_name", "=", "f'{gan}.tar'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "f'{gan_dir}/{stylegan_name}'", ")", "\n", "self", ".", "netG", ".", "load_state_dict", "(", "checkpoint", "[", "'netGA'", "]", ")", "\n", "self", ".", "netG", ".", "eval", "(", ")", "\n", "self", ".", "netG", "=", "self", ".", "netG", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "latent_avg", "=", "checkpoint", "[", "'latent_avg'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator.init_generator": [[32, 52], ["lib.nn.networks_stylegan2.Generator", "lib.nn.layers.modifiers.apply_wscale", "lib.nn.layers.modifiers.apply_lr_mult", "lib.nn.layers.modifiers.apply_lr_mult", "lib.nn.networks_stylegan2.Generator.apply", "lib.nn.networks_stylegan2.Generator.mapping.apply", "lib.nn.layers.weight_init.Normal", "lib.nn.layers.weight_init.Normal"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_wscale", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_lr_mult", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.layers.modifiers.apply_lr_mult"], ["", "def", "init_generator", "(", "self", ",", "cfg", ",", "initialize", "=", "False", ")", ":", "\n", "\n", "        ", "netG", "=", "Generator", "(", "cfg", "[", "'max_res_log2'", "]", ",", "latent_size", "=", "cfg", "[", "'latent_size'", "]", ",", "fmap_base", "=", "cfg", "[", "'fmap_base'", "]", ",", "\n", "fmap_max", "=", "cfg", "[", "'fmap_max'", "]", ",", "\n", "base_scale_h", "=", "cfg", "[", "'base_scale_y'", "]", ",", "base_scale_w", "=", "cfg", "[", "'base_scale_x'", "]", ",", "\n", "channels", "=", "cfg", "[", "'channels'", "]", ",", "use_activation", "=", "False", ",", "use_pn", "=", "True", ")", "\n", "\n", "mapping_lr_mult", "=", "0.01", "\n", "if", "mapping_lr_mult", "!=", "1.0", ":", "\n", "            ", "apply_lr_mult", "(", "netG", ".", "mapping", ",", "lr_mult", "=", "mapping_lr_mult", ",", "weight_name", "=", "'weight'", ")", "\n", "apply_lr_mult", "(", "netG", ".", "mapping", ",", "lr_mult", "=", "mapping_lr_mult", ",", "weight_name", "=", "'bias'", ")", "\n", "", "apply_wscale", "(", "netG", ",", "gain", "=", "1.", ")", "\n", "\n", "if", "initialize", ":", "\n", "            ", "if", "mapping_lr_mult", "!=", "1.0", ":", "\n", "                ", "scale", "=", "1", "/", "mapping_lr_mult", "\n", "netG", ".", "mapping", ".", "apply", "(", "Normal", "(", "scale", ")", ")", "\n", "", "netG", ".", "apply", "(", "Normal", "(", "1.0", ")", ")", "\n", "\n", "", "return", "netG", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator._get_config": [[53, 75], ["None"], "methods", ["None"], ["", "def", "_get_config", "(", "self", ",", "max_res_log2", "=", "9", ")", ":", "\n", "        ", "cfg", "=", "{", "}", "\n", "\n", "# network parameters", "\n", "cfg", "[", "'use_wscale'", "]", "=", "True", "\n", "\n", "cfg", "[", "'fmap_base'", "]", "=", "2", "*", "8192", "\n", "cfg", "[", "'fmap_decay'", "]", "=", "1.0", "\n", "cfg", "[", "'fmap_max'", "]", "=", "512", "\n", "cfg", "[", "'max_res_log2'", "]", "=", "max_res_log2", "\n", "cfg", "[", "'fix_noise'", "]", "=", "False", "\n", "\n", "cfg", "[", "'base_scale_x'", "]", "=", "4", "\n", "cfg", "[", "'base_scale_y'", "]", "=", "4", "\n", "\n", "# input format", "\n", "cfg", "[", "'latent_size'", "]", "=", "512", "\n", "\n", "cfg", "[", "'channels'", "]", "=", "3", "\n", "cfg", "[", "'imrange'", "]", "=", "(", "-", "1", ",", "1", ")", "\n", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator._transform_gan_back": [[76, 85], ["numpy.transpose", "numpy.clip", "img.astype.astype.astype"], "methods", ["None"], ["", "def", "_transform_gan_back", "(", "self", ",", "img", ",", "cfg", ")", ":", "\n", "        ", "imrange", "=", "cfg", "[", "'imrange'", "]", "\n", "channel_swap", "=", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "img", "=", "np", ".", "transpose", "(", "img", ",", "axes", "=", "channel_swap", ")", "\n", "img", "=", "(", "img", "-", "imrange", "[", "0", "]", ")", "/", "(", "imrange", "[", "1", "]", "-", "imrange", "[", "0", "]", ")", "\n", "img", "=", "np", ".", "clip", "(", "img", ",", "0.0", ",", "1.0", ")", "\n", "img", "=", "255.", "*", "img", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator.get_images": [[86, 111], ["range", "min", "torch.randn().to", "data.detach().cpu().numpy.detach().cpu().numpy.detach().cpu().numpy", "torch.randn().to.cpu().numpy", "image_generator.ImageGenerator._transform_gan_back", "range", "torch.no_grad", "image_generator.ImageGenerator.netG", "f.detach().cpu().numpy", "torch.randn", "data.detach().cpu().numpy.detach().cpu().numpy.detach().cpu", "torch.randn().to.cpu", "f.detach().cpu", "data.detach().cpu().numpy.detach().cpu().numpy.detach", "f.detach"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator._transform_gan_back"], ["", "def", "get_images", "(", "self", ",", "n", ")", ":", "\n", "\n", "        ", "n_batches", "=", "n", "//", "self", ".", "batch_size", "\n", "n_batches", "+=", "1", "if", "n", "%", "self", ".", "batch_size", ">", "0", "else", "0", "\n", "\n", "n_generated", "=", "0", "\n", "for", "n_batch", "in", "range", "(", "n_batches", ")", ":", "\n", "            ", "batch_size_s", "=", "min", "(", "self", ".", "batch_size", ",", "n", "-", "n_generated", ")", "\n", "latent_z", "=", "torch", ".", "randn", "(", "size", "=", "(", "batch_size_s", ",", "self", ".", "latent_size", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "data", ",", "features", "=", "self", ".", "netG", "(", "latent_z", ",", "latent_avg", "=", "self", ".", "latent_avg", ")", "\n", "", "data", "=", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "latent_z_np", "=", "latent_z", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "features", "=", "[", "f", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "f", "in", "features", "]", "\n", "\n", "imgs", "=", "self", ".", "_transform_gan_back", "(", "data", ",", "self", ".", "cfg", ")", "\n", "n_generated", "+=", "imgs", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "imgs", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "img", "=", "imgs", "[", "i", "]", "\n", "feats", "=", "[", "feat", "[", "i", "]", "for", "feat", "in", "features", "]", "\n", "latent", "=", "latent_z_np", "[", "i", "]", "\n", "if", "self", ".", "return_latents", ":", "\n", "                    ", "yield", "img", ",", "feats", ",", "latent", "\n", "", "else", ":", "\n", "                    ", "yield", "img", ",", "feats", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__": [[17, 84], ["tkinter.Frame.__init__", "seg_annotator.SegmentationAnnotator.master.title", "seg_annotator.SegmentationAnnotator.initialize_from_root", "tkinter.Frame", "tkinter.Frame.pack", "tkinter.Button", "tkinter.Button", "tkinter.Button", "tkinter.Button", "tkinter.Button", "seg_annotator.SegmentationAnnotator.ok_btn.pack", "seg_annotator.SegmentationAnnotator.skip_btn.pack", "seg_annotator.SegmentationAnnotator.retrain_btn.pack", "seg_annotator.SegmentationAnnotator.generate_btn.pack", "seg_annotator.SegmentationAnnotator.pseudo_btn.pack", "tkinter.Label", "seg_annotator.SegmentationAnnotator.la.pack", "tkinter.Canvas", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.bind", "seg_annotator.SegmentationAnnotator.can.pack", "parent.bind", "parent.bind", "lib.core.image_generator.ImageGenerator", "lib.core.seg_solver.SegSolver", "seg_annotator.SegmentationAnnotator.create_image_iterator", "seg_annotator.SegmentationAnnotator.next_image", "os.path.join", "os.path.join", "seg_annotator.SegmentationAnnotator.generate_btn.config", "seg_annotator.SegmentationAnnotator.pseudo_btn.config", "seg_annotator.SegmentationAnnotator.generate_btn.config", "seg_annotator.SegmentationAnnotator.pseudo_btn.config"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.__init__", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.initialize_from_root", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.create_image_iterator", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.next_image"], ["    ", "def", "__init__", "(", "self", ",", "parent", ",", "root_dir", ",", "gan_gpu_ids", ",", "solver_gpu_ids", ",", "gan_dir", ",", "gan", "=", "'ffhq'", ")", ":", "\n", "        ", "tk", ".", "Frame", ".", "__init__", "(", "self", ",", "parent", ")", "\n", "self", ".", "master", ".", "title", "(", "'Image Viewer'", ")", "\n", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "initialize_from_root", "(", ")", "\n", "\n", "fram", "=", "tk", ".", "Frame", "(", "self", ")", "\n", "fram", ".", "pack", "(", "side", "=", "tk", ".", "BOTTOM", ",", "fill", "=", "tk", ".", "BOTH", ")", "\n", "self", ".", "ok_btn", "=", "tk", ".", "Button", "(", "fram", ",", "text", "=", "'OK'", ",", "command", "=", "self", ".", "on_ok_clicked", ")", "\n", "self", ".", "skip_btn", "=", "tk", ".", "Button", "(", "fram", ",", "text", "=", "'Skip'", ",", "command", "=", "self", ".", "on_skip_clicked", ")", "\n", "self", ".", "retrain_btn", "=", "tk", ".", "Button", "(", "fram", ",", "text", "=", "'Retrain'", ",", "command", "=", "self", ".", "on_train_clicked", ")", "\n", "self", ".", "generate_btn", "=", "tk", ".", "Button", "(", "fram", ",", "text", "=", "'Generate'", ",", "command", "=", "self", ".", "on_generate_clicked", ")", "\n", "self", ".", "pseudo_btn", "=", "tk", ".", "Button", "(", "fram", ",", "text", "=", "'Pseudo-Labeling'", ",", "command", "=", "self", ".", "on_psuedo_labeling_clicked", ")", "\n", "\n", "self", ".", "ok_btn", ".", "pack", "(", "side", "=", "tk", ".", "RIGHT", ")", "\n", "self", ".", "skip_btn", ".", "pack", "(", "side", "=", "tk", ".", "RIGHT", ")", "\n", "self", ".", "retrain_btn", ".", "pack", "(", "side", "=", "tk", ".", "RIGHT", ")", "\n", "self", ".", "generate_btn", ".", "pack", "(", "side", "=", "tk", ".", "RIGHT", ")", "\n", "self", ".", "pseudo_btn", ".", "pack", "(", "side", "=", "tk", ".", "RIGHT", ")", "\n", "\n", "self", ".", "fram", "=", "fram", "\n", "\n", "self", ".", "la", "=", "tk", ".", "Label", "(", "self", ")", "\n", "self", ".", "la", ".", "pack", "(", ")", "\n", "\n", "self", ".", "can", "=", "tk", ".", "Canvas", "(", "self", ",", "cursor", "=", "'none'", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<Motion>'", ",", "self", ".", "on_mouse_move", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<ButtonPress-1>'", ",", "self", ".", "on_mouse_down", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<ButtonRelease-1>'", ",", "self", ".", "on_mouse_up", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<ButtonRelease-1>'", ",", "self", ".", "on_mouse_up", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<Button-4>'", ",", "self", ".", "on_mouse_wheel", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<Button-5>'", ",", "self", ".", "on_mouse_wheel", ")", "\n", "self", ".", "can", ".", "bind", "(", "'<Leave>'", ",", "self", ".", "on_mouse_leave", ")", "\n", "self", ".", "can", ".", "pack", "(", ")", "\n", "\n", "parent", ".", "bind", "(", "'<KeyPress>'", ",", "self", ".", "on_key_down", ")", "\n", "parent", ".", "bind", "(", "'<KeyRelease>'", ",", "self", ".", "on_key_up", ")", "\n", "\n", "self", ".", "mouse_down", "=", "False", "\n", "self", ".", "prev_positiov", "=", "None", "\n", "self", ".", "width", "=", "20.", "\n", "self", ".", "ctrl", "=", "False", "\n", "self", ".", "alt", "=", "False", "\n", "self", ".", "shift", "=", "False", "\n", "self", ".", "buffer_img", "=", "None", "\n", "self", ".", "draw", "=", "None", "\n", "self", ".", "has_changes", "=", "False", "\n", "self", ".", "history", "=", "[", "]", "\n", "self", ".", "cursor", "=", "None", "\n", "self", ".", "prev_cursor_pos", "=", "None", ",", "None", "\n", "self", ".", "mouse_down_history_id", "=", "None", "\n", "self", ".", "mouse_up_history_id", "=", "None", "\n", "\n", "self", ".", "netG", "=", "ImageGenerator", "(", "gpu_ids", "=", "gan_gpu_ids", ",", "gan_dir", "=", "gan_dir", ",", "gan", "=", "gan", ")", "\n", "self", ".", "solver", "=", "SegSolver", "(", "self", ".", "netG", ".", "max_res_log2", ",", "join", "(", "self", ".", "root_dir", ",", "'data'", ")", ",", "\n", "join", "(", "self", ".", "root_dir", ",", "'checkpoints'", ")", ",", "gpu_ids", "=", "solver_gpu_ids", ")", "\n", "self", ".", "image_iterator", "=", "self", ".", "create_image_iterator", "(", ")", "\n", "\n", "if", "self", ".", "solver", ".", "is_trained", ":", "\n", "            ", "self", ".", "generate_btn", ".", "config", "(", "state", "=", "'normal'", ")", "\n", "self", ".", "pseudo_btn", ".", "config", "(", "state", "=", "'normal'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "generate_btn", ".", "config", "(", "state", "=", "'disabled'", ")", "\n", "self", ".", "pseudo_btn", ".", "config", "(", "state", "=", "'disabled'", ")", "\n", "\n", "", "self", ".", "next_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.remove_last_elements_from_history": [[85, 104], ["min", "len", "seg_annotator.SegmentationAnnotator.can.delete", "seg_annotator.SegmentationAnnotator.can.delete", "seg_annotator.SegmentationAnnotator.can.delete"], "methods", ["None"], ["", "def", "remove_last_elements_from_history", "(", "self", ",", "num_elements", "=", "1", ")", ":", "\n", "\n", "        ", "num_elements", "=", "min", "(", "len", "(", "self", ".", "history", ")", ",", "num_elements", ")", "\n", "\n", "if", "num_elements", "<", "1", ":", "\n", "            ", "return", "\n", "\n", "", "last_elements", "=", "self", ".", "history", "[", "-", "num_elements", ":", "]", "\n", "for", "item", "in", "last_elements", "[", ":", ":", "-", "1", "]", ":", "\n", "            ", "item1", ",", "item2", ",", "item3", "=", "item", "\n", "\n", "if", "item1", "is", "not", "None", ":", "\n", "                ", "self", ".", "can", ".", "delete", "(", "item1", "[", "0", "]", ")", "\n", "", "if", "item2", "is", "not", "None", ":", "\n", "                ", "self", ".", "can", ".", "delete", "(", "item2", "[", "0", "]", ")", "\n", "", "if", "item3", "is", "not", "None", ":", "\n", "                ", "self", ".", "can", ".", "delete", "(", "item3", "[", "0", "]", ")", "\n", "\n", "", "", "self", ".", "history", "=", "self", ".", "history", "[", ":", "-", "num_elements", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.prepare_drawed_mask": [[105, 120], ["PIL.ImageDraw.Draw", "seg_annotator.SegmentationAnnotator.draw.line", "seg_annotator.SegmentationAnnotator.draw.ellipse", "seg_annotator.SegmentationAnnotator.draw.ellipse"], "methods", ["None"], ["", "def", "prepare_drawed_mask", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "draw", "=", "ImageDraw", ".", "Draw", "(", "self", ".", "buffer_img", ")", "\n", "for", "item1", ",", "item2", ",", "item3", "in", "self", ".", "history", ":", "\n", "            ", "if", "item1", "is", "not", "None", ":", "\n", "                ", "x0", ",", "y0", ",", "x1", ",", "y1", ",", "width", ",", "color1", "=", "item1", "[", "1", "]", "\n", "self", ".", "draw", ".", "line", "(", "[", "x0", ",", "y0", ",", "x1", ",", "y1", "]", ",", "color1", ",", "width", "=", "width", ")", "\n", "\n", "", "if", "item2", "is", "not", "None", ":", "\n", "                ", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "color2", "=", "item2", "[", "1", "]", "\n", "self", ".", "draw", ".", "ellipse", "(", "[", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", "]", ",", "fill", "=", "color2", ",", "outline", "=", "None", ")", "\n", "\n", "", "if", "item3", "is", "not", "None", ":", "\n", "                ", "xe0", ",", "ye0", ",", "xe1", ",", "ye1", ",", "color3", "=", "item3", "[", "1", "]", "\n", "self", ".", "draw", ".", "ellipse", "(", "[", "xe0", ",", "ye0", ",", "xe1", ",", "ye1", "]", ",", "fill", "=", "color3", ",", "outline", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_key_down": [[121, 137], ["seg_annotator.SegmentationAnnotator.update_cursor", "seg_annotator.SegmentationAnnotator.remove_last_elements_from_history"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.remove_last_elements_from_history"], ["", "", "", "def", "on_key_down", "(", "self", ",", "event", ")", ":", "\n", "        ", "k", "=", "event", ".", "keycode", "\n", "\n", "self", ".", "ctrl", "=", "self", ".", "ctrl", "or", "k", "==", "37", "\n", "self", ".", "alt", "=", "self", ".", "alt", "or", "k", "==", "50", "\n", "self", ".", "shift", "=", "self", ".", "shift", "or", "k", "==", "64", "\n", "z_pressed_now", "=", "k", "==", "52", "\n", "\n", "if", "self", ".", "ctrl", ":", "\n", "            ", "self", ".", "update_cursor", "(", ")", "\n", "\n", "", "if", "z_pressed_now", "and", "self", ".", "ctrl", ":", "\n", "            ", "if", "self", ".", "mouse_up_history_id", "is", "not", "None", "and", "self", ".", "mouse_down_history_id", "is", "not", "None", ":", "\n", "                ", "last_action_len", "=", "self", ".", "mouse_up_history_id", "-", "self", ".", "mouse_down_history_id", "\n", "if", "last_action_len", ">", "0", ":", "\n", "                    ", "self", ".", "remove_last_elements_from_history", "(", "num_elements", "=", "last_action_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_key_up": [[138, 156], ["seg_annotator.SegmentationAnnotator.update_cursor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor"], ["", "", "", "", "def", "on_key_up", "(", "self", ",", "event", ")", ":", "\n", "        ", "k", "=", "event", ".", "keycode", "\n", "\n", "ctrl", "=", "k", "==", "37", "\n", "alt", "=", "k", "==", "50", "\n", "shift", "=", "k", "==", "64", "\n", "\n", "prev_ctrl", "=", "self", ".", "ctrl", "\n", "\n", "if", "ctrl", ":", "\n", "            ", "self", ".", "ctrl", "=", "False", "\n", "", "if", "alt", ":", "\n", "            ", "self", ".", "alt", "=", "False", "\n", "", "if", "shift", ":", "\n", "            ", "self", ".", "shift", "=", "False", "\n", "\n", "", "if", "prev_ctrl", "!=", "self", ".", "ctrl", ":", "\n", "            ", "self", ".", "update_cursor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_mouse_leave": [[157, 159], ["seg_annotator.SegmentationAnnotator.update_cursor"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor"], ["", "", "def", "on_mouse_leave", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "update_cursor", "(", "event", ",", "disable", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_mouse_wheel": [[160, 169], ["max", "seg_annotator.SegmentationAnnotator.update_cursor", "min"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor"], ["", "def", "on_mouse_wheel", "(", "self", ",", "event", ")", ":", "\n", "        ", "if", "event", ".", "num", "==", "4", ":", "\n", "            ", "coeff", "=", "1.2", "\n", "", "else", ":", "\n", "            ", "coeff", "=", "1", "/", "1.2", "\n", "\n", "", "self", ".", "width", "=", "self", ".", "width", "*", "coeff", "\n", "self", ".", "width", "=", "max", "(", "1.", ",", "min", "(", "200.", ",", "self", ".", "width", ")", ")", "\n", "self", ".", "update_cursor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor": [[170, 186], ["seg_annotator.SegmentationAnnotator.can.delete", "seg_annotator.SegmentationAnnotator.can.create_oval", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "update_cursor", "(", "self", ",", "event", "=", "None", ",", "disable", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "cursor", "is", "not", "None", ":", "\n", "            ", "self", ".", "can", ".", "delete", "(", "self", ".", "cursor", ")", "\n", "\n", "", "if", "not", "disable", ":", "\n", "            ", "color_display", "=", "'#f0f0f0'", "if", "not", "self", ".", "ctrl", "else", "'#8f8f8f'", "\n", "if", "event", "is", "not", "None", ":", "\n", "                ", "x", ",", "y", "=", "event", ".", "x", ",", "event", ".", "y", "\n", "", "else", ":", "\n", "                ", "x", ",", "y", "=", "self", ".", "prev_cursor_pos", "\n", "", "if", "x", "is", "None", "or", "y", "is", "None", ":", "\n", "                ", "return", "\n", "", "xs0", ",", "ys0", "=", "x", "-", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y", "-", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "xs1", ",", "ys1", "=", "x", "+", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y", "+", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "self", ".", "cursor", "=", "self", ".", "can", ".", "create_oval", "(", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "outline", "=", "color_display", ",", "width", "=", "3", ")", "\n", "self", ".", "prev_cursor_pos", "=", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.draw_event": [[187, 227], ["seg_annotator.SegmentationAnnotator.can.create_line", "seg_annotator.SegmentationAnnotator.can.create_oval", "seg_annotator.SegmentationAnnotator.can.create_oval", "seg_annotator.SegmentationAnnotator.history.append", "seg_annotator.SegmentationAnnotator.can.create_oval", "seg_annotator.SegmentationAnnotator.history.append", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "draw_event", "(", "self", ",", "pos", ")", ":", "\n", "        ", "color_display", "=", "'#ffffff'", "if", "not", "self", ".", "ctrl", "else", "'#808080'", "\n", "color", "=", "'#ffffff'", "if", "not", "self", ".", "ctrl", "else", "'#808080'", "\n", "\n", "if", "self", ".", "prev_positiov", "is", "not", "None", ":", "\n", "            ", "x0", ",", "y0", "=", "self", ".", "prev_positiov", "\n", "x1", ",", "y1", "=", "pos", "\n", "\n", "id", "=", "self", ".", "can", ".", "create_line", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ",", "width", "=", "int", "(", "self", ".", "width", ")", ",", "fill", "=", "color_display", ")", "\n", "item1", "=", "[", "id", ",", "(", "x0", ",", "y0", ",", "x1", ",", "y1", ",", "int", "(", "self", ".", "width", ")", ",", "color", ")", "]", "\n", "\n", "xs0", ",", "ys0", "=", "x0", "-", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y0", "-", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "xs1", ",", "ys1", "=", "x0", "+", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y0", "+", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "id", "=", "self", ".", "can", ".", "create_oval", "(", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "fill", "=", "color_display", ",", "width", "=", "0", ")", "\n", "item2", "=", "[", "id", ",", "(", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "color", ")", "]", "\n", "\n", "xe0", ",", "ye0", "=", "x1", "-", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y1", "-", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "xe1", ",", "ye1", "=", "x1", "+", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y1", "+", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "id", "=", "self", ".", "can", ".", "create_oval", "(", "xe0", ",", "ye0", ",", "xe1", ",", "ye1", ",", "fill", "=", "color_display", ",", "width", "=", "0", ")", "\n", "item3", "=", "[", "id", ",", "(", "xe0", ",", "ye0", ",", "xe1", ",", "ye1", ",", "color", ")", "]", "\n", "\n", "self", ".", "history", ".", "append", "(", "[", "item1", ",", "item2", ",", "item3", "]", ")", "\n", "self", ".", "has_changes", "=", "True", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "x0", ",", "y0", "=", "pos", "\n", "item1", "=", "None", "\n", "\n", "xs0", ",", "ys0", "=", "x0", "-", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y0", "-", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "xs1", ",", "ys1", "=", "x0", "+", "int", "(", "self", ".", "width", "/", "2", ")", ",", "y0", "+", "int", "(", "self", ".", "width", "/", "2", ")", "\n", "id", "=", "self", ".", "can", ".", "create_oval", "(", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "fill", "=", "color_display", ",", "width", "=", "0", ")", "\n", "item2", "=", "[", "id", ",", "(", "xs0", ",", "ys0", ",", "xs1", ",", "ys1", ",", "color", ")", "]", "\n", "\n", "item3", "=", "None", "\n", "\n", "self", ".", "history", ".", "append", "(", "[", "item1", ",", "item2", ",", "item3", "]", ")", "\n", "self", ".", "has_changes", "=", "True", "\n", "\n", "", "self", ".", "prev_positiov", "=", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_mouse_move": [[228, 234], ["seg_annotator.SegmentationAnnotator.update_cursor", "seg_annotator.SegmentationAnnotator.draw_event"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.update_cursor", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.draw_event"], ["", "def", "on_mouse_move", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "update_cursor", "(", "event", ")", "\n", "\n", "if", "self", ".", "mouse_down", ":", "\n", "            ", "pos", "=", "(", "event", ".", "x", ",", "event", ".", "y", ")", "\n", "self", ".", "draw_event", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_mouse_down": [[235, 240], ["len", "seg_annotator.SegmentationAnnotator.draw_event"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.draw_event"], ["", "", "def", "on_mouse_down", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "mouse_down", "=", "True", "\n", "self", ".", "mouse_down_history_id", "=", "len", "(", "self", ".", "history", ")", "\n", "pos", "=", "(", "event", ".", "x", ",", "event", ".", "y", ")", "\n", "self", ".", "draw_event", "(", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_mouse_up": [[241, 245], ["len"], "methods", ["None"], ["", "def", "on_mouse_up", "(", "self", ",", "event", ")", ":", "\n", "        ", "self", ".", "mouse_down", "=", "False", "\n", "self", ".", "mouse_up_history_id", "=", "len", "(", "self", ".", "history", ")", "\n", "self", ".", "prev_positiov", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_train_clicked": [[246, 265], ["seg_annotator.SegmentationAnnotator.toggle_disable_main", "time.sleep", "seg_annotator.SegmentationAnnotator.solver.fit", "seg_annotator.SegmentationAnnotator.on_train_finished", "seg_annotator.SegmentationAnnotator.save_current_results", "seg_annotator.SegmentationAnnotator.solver.predict", "mask[].astype", "lib.utils.utils.get_draw_mask", "PIL.ImageTk.PhotoImage", "seg_annotator.SegmentationAnnotator.can.config", "seg_annotator.SegmentationAnnotator.can.create_image", "seg_annotator.SegmentationAnnotator.can.update", "PIL.Image.fromarray", "seg_annotator.SegmentationAnnotator.img_frame.width", "seg_annotator.SegmentationAnnotator.img_frame.height"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.fit", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_train_finished", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.save_current_results", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.predict", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_draw_mask", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update"], ["", "def", "on_train_clicked", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "has_changes", ":", "\n", "            ", "self", ".", "save_current_results", "(", ")", "\n", "", "self", ".", "toggle_disable_main", "(", ")", "\n", "time", ".", "sleep", "(", "1", ")", "\n", "\n", "\n", "def", "epoch_end_callback", "(", ")", ":", "\n", "            ", "mask", ",", "_", "=", "self", ".", "solver", ".", "predict", "(", "self", ".", "features", ")", "\n", "mask", "=", "mask", "[", "0", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "# mask[:, :, 0] = morph_mask(mask[:, :, 0])", "\n", "img", "=", "get_draw_mask", "(", "self", ".", "img_orig", ",", "mask", "[", ":", ",", ":", ",", "0", "]", ",", "alpha", "=", "0.5", ",", "color_map", "=", "None", ",", "skip_background", "=", "True", ")", "\n", "self", ".", "img_frame", "=", "ImageTk", ".", "PhotoImage", "(", "Image", ".", "fromarray", "(", "img", ")", ")", "\n", "self", ".", "can", ".", "config", "(", "bg", "=", "'#000000'", ",", "width", "=", "self", ".", "img_frame", ".", "width", "(", ")", ",", "height", "=", "self", ".", "img_frame", ".", "height", "(", ")", ")", "\n", "self", ".", "can", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "img_frame", ",", "anchor", "=", "tk", ".", "NW", ")", "\n", "self", ".", "can", ".", "update", "(", ")", "\n", "\n", "", "self", ".", "solver", ".", "fit", "(", "epoch_end_callback", ")", "\n", "self", ".", "on_train_finished", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_train_finished": [[279, 283], ["print", "seg_annotator.SegmentationAnnotator.toggle_disable_main", "seg_annotator.SegmentationAnnotator.next_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.next_image"], ["", "def", "on_train_finished", "(", "self", ")", ":", "\n", "        ", "print", "(", "'train finished.'", ")", "\n", "self", ".", "toggle_disable_main", "(", "True", ")", "\n", "self", ".", "next_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main": [[284, 295], ["seg_annotator.SegmentationAnnotator.ok_btn.config", "seg_annotator.SegmentationAnnotator.skip_btn.config", "seg_annotator.SegmentationAnnotator.retrain_btn.config", "seg_annotator.SegmentationAnnotator.generate_btn.config", "seg_annotator.SegmentationAnnotator.pseudo_btn.config", "seg_annotator.SegmentationAnnotator.generate_btn.config", "seg_annotator.SegmentationAnnotator.pseudo_btn.config"], "methods", ["None"], ["", "def", "toggle_disable_main", "(", "self", ",", "enabled", "=", "False", ")", ":", "\n", "        ", "state", "=", "'normal'", "if", "enabled", "else", "'disabled'", "\n", "self", ".", "ok_btn", ".", "config", "(", "state", "=", "state", ")", "\n", "self", ".", "skip_btn", ".", "config", "(", "state", "=", "state", ")", "\n", "self", ".", "retrain_btn", ".", "config", "(", "state", "=", "state", ")", "\n", "if", "self", ".", "solver", ".", "is_trained", ":", "\n", "            ", "self", ".", "generate_btn", ".", "config", "(", "state", "=", "state", ")", "\n", "self", ".", "pseudo_btn", ".", "config", "(", "state", "=", "state", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "generate_btn", ".", "config", "(", "state", "=", "'disabled'", ")", "\n", "self", ".", "pseudo_btn", ".", "config", "(", "state", "=", "'disabled'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_skip_clicked": [[301, 303], ["seg_annotator.SegmentationAnnotator.next_image"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.next_image"], ["", "", "def", "on_skip_clicked", "(", "self", ")", ":", "\n", "        ", "self", ".", "next_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_ok_clicked": [[304, 308], ["seg_annotator.SegmentationAnnotator.next_image", "seg_annotator.SegmentationAnnotator.save_current_results"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.next_image", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.save_current_results"], ["", "def", "on_ok_clicked", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "has_changes", ":", "\n", "            ", "self", ".", "save_current_results", "(", ")", "\n", "", "self", ".", "next_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_generate_clicked": [[309, 329], ["seg_annotator.SegmentationAnnotator.toggle_disable_main", "time.sleep", "os.path.join", "seg_annotator.SegmentationAnnotator.toggle_disable_main", "tqdm.tqdm.tqdm", "range", "next", "lib.utils.utils.get_draw_mask", "cv2.imwrite", "pb.update", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_draw_mask", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update"], ["", "def", "on_generate_clicked", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "toggle_disable_main", "(", "enabled", "=", "False", ")", "\n", "time", ".", "sleep", "(", "1", ")", "\n", "\n", "n_imgs", "=", "10000", "\n", "dst_dir", "=", "join", "(", "self", ".", "root_dir", ",", "'generated'", ")", "\n", "with", "tqdm", "(", "total", "=", "n_imgs", ")", "as", "pb", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_imgs", ")", ":", "\n", "                ", "img", ",", "mask", ",", "features", ",", "_", "=", "next", "(", "self", ".", "image_iterator", ")", "\n", "imname", "=", "f'img_{i:06d}.jpg'", "\n", "visname", "=", "f'vis_{i:06d}.jpg'", "\n", "maskname", "=", "f'mask_{i:06d}.png'", "\n", "img_vis", "=", "get_draw_mask", "(", "img", ",", "mask", "[", ":", ",", ":", ",", "0", "]", ",", "alpha", "=", "0.5", ",", "color_map", "=", "None", ",", "skip_background", "=", "True", ")", "\n", "# cv2.imwrite(join(dst_dir, imname), img[:,:,::-1])", "\n", "cv2", ".", "imwrite", "(", "join", "(", "dst_dir", ",", "visname", ")", ",", "img_vis", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "# cv2.imwrite(join(dst_dir, maskname), mask[:,:,0])", "\n", "pb", ".", "update", "(", ")", "\n", "\n", "", "", "self", ".", "toggle_disable_main", "(", "enabled", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.on_psuedo_labeling_clicked": [[330, 356], ["seg_annotator.SegmentationAnnotator.toggle_disable_main", "time.sleep", "os.path.join", "seg_annotator.SegmentationAnnotator.toggle_disable_main", "tqdm.tqdm.tqdm", "range", "next", "numpy.zeros", "cv2.imwrite", "cv2.imwrite", "pb.update", "os.path.join", "os.path.join", "open", "pickle.dump", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.toggle_disable_main", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.metrics.metrics.SegmentationMetric.update"], ["", "def", "on_psuedo_labeling_clicked", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "toggle_disable_main", "(", "enabled", "=", "False", ")", "\n", "time", ".", "sleep", "(", "1", ")", "\n", "\n", "n_imgs", "=", "10", "\n", "dst_dir", "=", "join", "(", "self", ".", "root_dir", ",", "'data'", ")", "\n", "with", "tqdm", "(", "total", "=", "n_imgs", ")", "as", "pb", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_imgs", ")", ":", "\n", "                ", "img", ",", "mask", ",", "features", ",", "probs", "=", "next", "(", "self", ".", "image_iterator", ")", "\n", "imname", "=", "f'img_{i:06d}.jpg'", "\n", "maskname", "=", "f'mask_{i:06d}.png'", "\n", "feature_name", "=", "f'feat_{i:06d}.pickle'", "\n", "\n", "mask", "=", "np", ".", "zeros", "(", "(", "probs", ".", "shape", "[", "1", "]", ",", "probs", ".", "shape", "[", "2", "]", ",", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "mask", "[", "probs", "[", "1", "]", ">", "0.85", "]", "=", "255", "\n", "mask", "[", "probs", "[", "1", "]", "<", "0.01", "]", "=", "128", "\n", "\n", "cv2", ".", "imwrite", "(", "join", "(", "dst_dir", ",", "imname", ")", ",", "img", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "cv2", ".", "imwrite", "(", "join", "(", "dst_dir", ",", "maskname", ")", ",", "mask", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "with", "open", "(", "join", "(", "dst_dir", ",", "feature_name", ")", ",", "'wb'", ")", "as", "fp", ":", "\n", "                    ", "pickle", ".", "dump", "(", "features", ",", "fp", ")", "\n", "\n", "", "pb", ".", "update", "(", ")", "\n", "\n", "", "", "self", ".", "toggle_disable_main", "(", "enabled", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.initialize_from_root": [[357, 363], ["os.path.isdir", "os.makedirs", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "initialize_from_root", "(", "self", ")", ":", "\n", "\n", "        ", "subdirs", "=", "[", "'data'", ",", "'checkpoints'", ",", "'generated'", "]", "\n", "for", "subdir", "in", "subdirs", ":", "\n", "            ", "if", "not", "isdir", "(", "join", "(", "self", ".", "root_dir", ",", "subdir", ")", ")", ":", "\n", "                ", "makedirs", "(", "join", "(", "self", ".", "root_dir", ",", "subdir", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.create_image_iterator": [[364, 376], ["seg_annotator.SegmentationAnnotator.netG.get_images", "seg_annotator.SegmentationAnnotator.solver.predict", "mask[].astype", "probs[].astype"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.image_generator.ImageGenerator.get_images", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.predict"], ["", "", "", "def", "create_image_iterator", "(", "self", ",", "buffer_size", "=", "2", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "iter", "=", "self", ".", "netG", ".", "get_images", "(", "buffer_size", ")", "\n", "for", "img", ",", "features", "in", "iter", ":", "\n", "                ", "if", "self", ".", "solver", ".", "is_trained", ":", "\n", "                    ", "mask", ",", "probs", "=", "self", ".", "solver", ".", "predict", "(", "features", ")", "\n", "mask", "=", "mask", "[", "0", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "probs", "=", "probs", "[", "0", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "None", "\n", "probs", "=", "None", "\n", "", "yield", "img", ",", "mask", ",", "features", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.save_current_results": [[377, 392], ["seg_annotator.SegmentationAnnotator.prepare_drawed_mask", "random.randint", "os.path.join", "seg_annotator.SegmentationAnnotator.buffer_img.save", "PIL.Image.fromarray().save", "os.path.join", "os.path.join", "open", "pickle.dump", "PIL.Image.fromarray", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.prepare_drawed_mask", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save", "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_solver.SegSolver.save"], ["", "", "", "def", "save_current_results", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "buffer_img", "is", "not", "None", ":", "\n", "\n", "            ", "self", ".", "prepare_drawed_mask", "(", ")", "\n", "\n", "image_id", "=", "random", ".", "randint", "(", "0", ",", "1000000", ")", "\n", "dst_dir", "=", "join", "(", "self", ".", "root_dir", ",", "'data'", ")", "\n", "mask_name", "=", "f'mask_{image_id:06d}.png'", "\n", "img_name", "=", "f'img_{image_id:06d}.jpg'", "\n", "feature_name", "=", "f'feat_{image_id:06d}.pickle'", "\n", "\n", "self", ".", "buffer_img", ".", "save", "(", "join", "(", "dst_dir", ",", "mask_name", ")", ")", "\n", "Image", ".", "fromarray", "(", "self", ".", "img", ")", ".", "save", "(", "join", "(", "dst_dir", ",", "img_name", ")", ")", "\n", "with", "open", "(", "join", "(", "dst_dir", ",", "feature_name", ")", ",", "'wb'", ")", "as", "fp", ":", "\n", "                ", "pickle", ".", "dump", "(", "self", ".", "features", ",", "fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.core.seg_annotator.SegmentationAnnotator.next_image": [[393, 414], ["next", "PIL.ImageTk.PhotoImage", "seg_annotator.SegmentationAnnotator.can.config", "seg_annotator.SegmentationAnnotator.can.create_image", "PIL.Image.new", "lib.utils.utils.get_draw_mask", "img.astype.astype.astype", "PIL.Image.fromarray", "seg_annotator.SegmentationAnnotator.img_frame.width", "seg_annotator.SegmentationAnnotator.img_frame.height", "seg_annotator.SegmentationAnnotator.img_frame.width", "seg_annotator.SegmentationAnnotator.img_frame.height"], "methods", ["home.repos.pwc.inspect_result.saic-vul_GAN-high-resolution-representation.utils.utils.get_draw_mask"], ["", "", "", "def", "next_image", "(", "self", ")", ":", "\n", "\n", "        ", "img_orig", ",", "mask", ",", "features", ",", "_", "=", "next", "(", "self", ".", "image_iterator", ")", "\n", "\n", "img", "=", "img_orig", "\n", "if", "mask", "is", "not", "None", ":", "\n", "# mask[:,:,0] = morph_mask(mask[:,:,0])", "\n", "            ", "img", "=", "get_draw_mask", "(", "img_orig", ",", "mask", "[", ":", ",", ":", ",", "0", "]", ",", "alpha", "=", "0.5", ",", "color_map", "=", "None", ",", "skip_background", "=", "True", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "", "self", ".", "img_orig", "=", "img_orig", "\n", "self", ".", "img", "=", "img", "\n", "self", ".", "features", "=", "features", "\n", "\n", "self", ".", "img_frame", "=", "ImageTk", ".", "PhotoImage", "(", "Image", ".", "fromarray", "(", "img", ")", ")", "\n", "self", ".", "can", ".", "config", "(", "bg", "=", "'#000000'", ",", "width", "=", "self", ".", "img_frame", ".", "width", "(", ")", ",", "height", "=", "self", ".", "img_frame", ".", "height", "(", ")", ")", "\n", "self", ".", "can", ".", "create_image", "(", "0", ",", "0", ",", "image", "=", "self", ".", "img_frame", ",", "anchor", "=", "tk", ".", "NW", ")", "\n", "\n", "self", ".", "buffer_img", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "self", ".", "img_frame", ".", "width", "(", ")", ",", "self", ".", "img_frame", ".", "height", "(", ")", ")", ",", "(", "0", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "has_changes", "=", "False", "\n", "self", ".", "history", "=", "[", "]", "", "", "", ""]]}