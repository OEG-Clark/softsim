{"home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.config.Configuration.__new__": [[12, 19], ["hasattr", "hasattr", "helper.utils.EasyDict.__new__", "Configuration._instance.init"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.Evaluator.Evaluator.__new__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.config.Configuration.init"], ["def", "__new__", "(", "cls", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "not", "hasattr", "(", "Configuration", ",", "\"_instance\"", ")", ":", "\n", "            ", "with", "Configuration", ".", "_instance_lock", ":", "\n", "                ", "if", "not", "hasattr", "(", "Configuration", ",", "\"_instance\"", ")", ":", "\n", "                    ", "Configuration", ".", "_instance", "=", "EasyDict", ".", "__new__", "(", "cls", ")", "\n", "Configuration", ".", "_instance", ".", "init", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "", "", "return", "Configuration", ".", "_instance", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.config.Configuration.init": [[23, 234], ["helper.utils.EasyDict.__init__", "helper.utils.pathjoin", "helper.utils.pathjoin", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "helper.utils.pathjoin", "helper.utils.pathjoin", "dataset.file_table.get_dataset_path_by_name", "helper.utils.pathjoin", "helper.utils.pathjoin", "os.path.dirname", "argparse.ArgumentParser.parse_args", "config.Configuration.update", "helper.utils.pathjoin", "helper.utils.pathjoin", "helper.utils.pathjoin", "dataset.file_table.get_dataset_path_by_name", "config.Configuration.EVALUATOR_GTS.append", "helper.utils.pathjoin", "config.Configuration.TEST_IMG_SAVE_PATHS.append", "config.Configuration.DATASET_TEST_ROOT_DIRS.append", "config.Configuration.DATASET_TEST_LIST_PATHS.append", "config.Configuration.EVALUATOR_DIRS.append", "config.Configuration.EVALUATOR_GTS.append", "config.Configuration.DATASET_TEST_ROOT_DIRS.append", "config.Configuration.DATASET_TEST_LIST_PATHS.append", "config.Configuration.EVALUATOR_DATASETS.append", "len", "helper.utils.pathjoin", "len"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.dataset.file_table.get_dataset_path_by_name", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.dataset.file_table.get_dataset_path_by_name"], ["def", "init", "(", "self", ",", "use_arg_parser", "=", "True", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "# Run configuration", "\n", "self", ".", "DISABLE_TRAIN", "=", "False", "\n", "self", ".", "DISABLE_TEST", "=", "False", "\n", "self", ".", "DISABLE_EVAL", "=", "False", "\n", "\n", "\n", "# dataset configuration", "\n", "self", ".", "DATASET_TRAIN_ROOT_DIR", "=", "None", "\n", "self", ".", "DATASET_TRAIN_LIST_PATH", "=", "None", "\n", "self", ".", "DATASET_TEST_ROOT_DIR", "=", "None", "\n", "self", ".", "DATASET_TEST_LIST_PATH", "=", "None", "\n", "self", ".", "DATASET_NAME", "=", "None", "\n", "self", ".", "DATASET_TRAIN_DIR", "=", "None", "\n", "self", ".", "DATASET_TEST_DIR", "=", "None", "\n", "\n", "# Training configuration", "\n", "self", ".", "SEED", "=", "2345", "\n", "self", ".", "BATCH_SIZE", "=", "10", "\n", "self", ".", "CROP_SIZE", "=", "321", "\n", "self", ".", "G_LEARNING_RATE", "=", "2.5e-4", "\n", "self", ".", "D_LEARNING_RATE", "=", "1e-4", "\n", "self", ".", "MAX_ITER", "=", "25000", "\n", "self", ".", "MOMENTUM", "=", "0.9", "\n", "self", ".", "PRETRAINED_MODEL_PATH", "=", "None", "\n", "self", ".", "STEP_INTERVAL", "=", "1", "\n", "self", ".", "WEIGHT_DECAY", "=", "0.0005", "\n", "self", ".", "DISABLE_VISUAL", "=", "False", "\n", "self", ".", "DATA_IDX_PKL_PATH", "=", "None", "\n", "self", ".", "SEMI_START", "=", "5000", "\n", "self", ".", "MASK_T", "=", "0.2", "\n", "self", ".", "PARTIAL_DATA", "=", "0.125", "\n", "self", ".", "LAMBDA_SEMI_ADV", "=", "0.007", "\n", "self", ".", "LAMBDA_SEMI_SAL", "=", "1", "\n", "self", ".", "LAMBDA_PRED_SAL", "=", "1", "\n", "self", ".", "LAMBDA_PRED_ADV", "=", "0.01", "\n", "self", ".", "USE_GRAB", "=", "False", "\n", "# Graphics card use configuration", "\n", "self", ".", "USE_GPU", "=", "None", "\n", "\n", "# Model save settings", "\n", "self", ".", "MODEL_SAVE_ROOT_DIR", "=", "None", "\n", "self", ".", "MODEL_SAVE_DIR_NAME", "=", "None", "\n", "self", ".", "LOG_DIR", "=", "pathjoin", "(", "\n", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\n", "'logs'", ",", "\n", ")", "\n", "self", ".", "DATA_IDX_PKL_SAVE_PATH", "=", "pathjoin", "(", "\n", "self", ".", "LOG_DIR", ",", "\n", "'idx.pkl'", ",", "\n", ")", "\n", "\n", "# test setting", "\n", "self", ".", "TEST_MODEL_PTH_PATH", "=", "None", "\n", "\n", "# eval setting", "\n", "self", ".", "EVALUATOR_DIR", "=", "None", "\n", "self", ".", "EVAL_MEASURE_LIST", "=", "None", "\n", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", "=", "None", "\n", "self", ".", "EVALUATOR_DATASETS", "=", "None", "\n", "\n", "# proc_name setting", "\n", "self", ".", "PROC_NAME", "=", "None", "\n", "\n", "\n", "\n", "parser", "=", "ArgumentParser", "(", "description", "=", "\"Configuration of the System\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-disable_test'", ",", "'--DISABLE_TEST'", ",", "action", "=", "'store_true'", ",", "default", "=", "self", ".", "DISABLE_TEST", ")", "\n", "parser", ".", "add_argument", "(", "'-disable_train'", ",", "'--DISABLE_TRAIN'", ",", "action", "=", "'store_true'", ",", "default", "=", "self", ".", "DISABLE_TRAIN", ")", "\n", "parser", ".", "add_argument", "(", "'-disable_eval'", ",", "'--DISABLE_EVAL'", ",", "action", "=", "'store_true'", ",", "default", "=", "self", ".", "DISABLE_EVAL", ")", "\n", "parser", ".", "add_argument", "(", "'-disable_visual'", ",", "'--DISABLE_VISUAL'", ",", "action", "=", "'store_true'", ",", "default", "=", "self", ".", "DISABLE_VISUAL", ")", "\n", "parser", ".", "add_argument", "(", "'-seed'", ",", "'--SEED'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "SEED", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--DATASET_NAME'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "default", "=", "self", ".", "DATASET_NAME", ",", "choices", "=", "\"DUT-OMRON DUTS PASCAL-S SOD\"", ".", "split", "(", "\" \"", ")", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--BATCH_SIZE'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "BATCH_SIZE", ")", "\n", "parser", ".", "add_argument", "(", "'-crop'", ",", "'--CROP_SIZE'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "CROP_SIZE", ")", "\n", "parser", ".", "add_argument", "(", "'-g_lr'", ",", "'--G_LEARNING_RATE'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "G_LEARNING_RATE", ")", "\n", "parser", ".", "add_argument", "(", "'-d_lr'", ",", "'--D_LEARNING_RATE'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "D_LEARNING_RATE", ")", "\n", "parser", ".", "add_argument", "(", "'-max_iter'", ",", "'--MAX_ITER'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "MAX_ITER", ")", "\n", "parser", ".", "add_argument", "(", "'-step'", ",", "'--STEP_INTERVAL'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "STEP_INTERVAL", ")", "\n", "parser", ".", "add_argument", "(", "'-momentum'", ",", "'--MOMENTUM'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "MOMENTUM", ")", "\n", "parser", ".", "add_argument", "(", "'-weight_decay'", ",", "'--WEIGHT_DECAY'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "WEIGHT_DECAY", ")", "\n", "parser", ".", "add_argument", "(", "'-idx'", ",", "'--DATA_IDX_PKL_PATH'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "DATA_IDX_PKL_PATH", ")", "\n", "parser", ".", "add_argument", "(", "'-start'", ",", "'--SEMI_START'", ",", "type", "=", "int", ",", "default", "=", "self", ".", "SEMI_START", ")", "\n", "parser", ".", "add_argument", "(", "'-mask_T'", ",", "'--MASK_T'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "MASK_T", ")", "\n", "parser", ".", "add_argument", "(", "'-part'", ",", "'--PARTIAL_DATA'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "PARTIAL_DATA", ")", "\n", "parser", ".", "add_argument", "(", "'-grab'", ",", "'--USE_GRAB'", ",", "type", "=", "bool", ",", "default", "=", "self", ".", "USE_GRAB", ")", "\n", "parser", ".", "add_argument", "(", "'-l_semi_adv'", ",", "'--LAMBDA_SEMI_ADV'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "LAMBDA_SEMI_ADV", ")", "\n", "parser", ".", "add_argument", "(", "'-l_semi_sal'", ",", "'--LAMBDA_SEMI_SAL'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "LAMBDA_SEMI_SAL", ")", "\n", "parser", ".", "add_argument", "(", "'-l_pred_adv'", ",", "'--LAMBDA_PRED_ADV'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "LAMBDA_PRED_ADV", ")", "\n", "parser", ".", "add_argument", "(", "'-l_pred_sal'", ",", "'--LAMBDA_PRED_SAL'", ",", "type", "=", "float", ",", "default", "=", "self", ".", "LAMBDA_PRED_SAL", ")", "\n", "parser", ".", "add_argument", "(", "'-pretrain'", ",", "'--PRETRAINED_MODEL_PATH'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "PRETRAINED_MODEL_PATH", ")", "\n", "\n", "\n", "parser", ".", "add_argument", "(", "'-gpu'", ",", "'--USE_GPU'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "USE_GPU", ")", "\n", "parser", ".", "add_argument", "(", "'-proc'", ",", "'--PROC_NAME'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "PROC_NAME", ")", "\n", "parser", ".", "add_argument", "(", "'-test_model'", ",", "'--TEST_MODEL_PTH_PATH'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "TEST_MODEL_PTH_PATH", ")", "\n", "parser", ".", "add_argument", "(", "'-save'", ",", "'--MODEL_SAVE_DIR_NAME'", ",", "required", "=", "True", ",", "type", "=", "str", ",", "default", "=", "self", ".", "MODEL_SAVE_DIR_NAME", ")", "\n", "parser", ".", "add_argument", "(", "'-eval_dir'", ",", "'--EVALUATOR_DIR'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "EVALUATOR_DIR", ")", "\n", "parser", ".", "add_argument", "(", "'-eval_m_list'", ",", "'--EVAL_MEASURE_LIST'", ",", "nargs", "=", "'+'", ",", "type", "=", "str", ",", "choices", "=", "\"max-F mean-F MAE S precision recall\"", ".", "split", "(", "\" \"", ")", ",", "default", "=", "self", ".", "EVAL_MEASURE_LIST", ")", "\n", "parser", ".", "add_argument", "(", "'-eval_file'", ",", "'--EVALUATOR_SUMMARY_FILE_PATH'", ",", "type", "=", "str", ",", "default", "=", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", ")", "\n", "parser", ".", "add_argument", "(", "'-eval_d'", ",", "'--EVALUATOR_DATASETS'", ",", "nargs", "=", "'+'", ",", "type", "=", "str", ",", "choices", "=", "\"ALL DUT-OMRON DUTS PASCAL-S SOD\"", ".", "split", "(", "\" \"", ")", ",", "default", "=", "self", ".", "EVALUATOR_DATASETS", ")", "\n", "\n", "\n", "if", "use_arg_parser", ":", "\n", "            ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "self", ".", "update", "(", "args", ".", "__dict__", ")", "\n", "# handle MODEL_SAVE_PATH", "\n", "", "self", ".", "MODEL_SAVE_ROOT_DIR", "=", "pathjoin", "(", "\n", "self", ".", "LOG_DIR", ",", "\n", "self", ".", "MODEL_SAVE_DIR_NAME", ",", "\n", ")", "\n", "self", ".", "MODEL_SAVE_PATH", "=", "pathjoin", "(", "\n", "self", ".", "MODEL_SAVE_ROOT_DIR", ",", "\n", "'save_models'", ",", "\n", ")", "\n", "\n", "if", "self", ".", "BATCH_SIZE", "!=", "1", ":", "\n", "            ", "assert", "self", ".", "CROP_SIZE", "is", "not", "None", ",", "\"CROP_SIZE can't be null, if \"", "\"BATCH_SIZE != 1, please use -crop to specify the paramter\"", "\n", "# handle EVAL_MEASURE_LIST", "\n", "", "if", "self", ".", "EVAL_MEASURE_LIST", "is", "None", ":", "\n", "            ", "self", ".", "EVAL_MEASURE_LIST", "=", "[", "\"max-F\"", ",", "\"MAE\"", ",", "\"S\"", "]", "\n", "# handle DATASET_ROOT_DIR DATASET_LIST_PATH", "\n", "", "tmp_dict", "=", "get_dataset_path_by_name", "(", "self", ".", "DATASET_NAME", ")", "\n", "self", ".", "DATASET_TRAIN_ROOT_DIR", "=", "tmp_dict", "[", "'train_dir_path'", "]", "\n", "self", ".", "DATASET_TRAIN_LIST_PATH", "=", "tmp_dict", "[", "'train_lst_path'", "]", "\n", "self", ".", "DATASET_TEST_ROOT_DIR", "=", "tmp_dict", "[", "'test_dir_path'", "]", "\n", "self", ".", "DATASET_TEST_LIST_PATH", "=", "tmp_dict", "[", "'test_lst_path'", "]", "\n", "self", ".", "DATASET_TRAIN_DIR", "=", "tmp_dict", "[", "'train_dir_name'", "]", "\n", "self", ".", "DATASET_TEST_DIR", "=", "tmp_dict", "[", "'test_dir_name'", "]", "\n", "self", ".", "DATASET_TEST_GT_DIR", "=", "pathjoin", "(", "\n", "self", ".", "DATASET_TEST_ROOT_DIR", ",", "\n", "'GT'", "\n", ")", "\n", "if", "self", ".", "TEST_MODEL_PTH_PATH", "is", "None", ":", "\n", "            ", "self", ".", "TEST_MODEL_PTH_PATH", "=", "pathjoin", "(", "\n", "self", ".", "MODEL_SAVE_PATH", ",", "\n", "'G-final.pth'", "\n", ")", "\n", "", "self", ".", "TEST_IMG_SAVE_PATH", "=", "pathjoin", "(", "\n", "self", ".", "MODEL_SAVE_ROOT_DIR", ",", "\n", "'test'", ",", "\n", "self", ".", "DATASET_TEST_DIR", "if", "len", "(", "self", ".", "DATASET_TEST_DIR", ")", "!=", "0", "else", "self", ".", "DATASET_NAME", "\n", ")", "\n", "\n", "# handle EVALUATOR_DIR", "\n", "if", "self", ".", "EVALUATOR_DIR", "is", "None", ":", "\n", "            ", "self", ".", "EVALUATOR_DIR", "=", "self", ".", "TEST_IMG_SAVE_PATH", "\n", "", "if", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", "is", "None", ":", "\n", "            ", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", "=", "pathjoin", "(", "\n", "self", ".", "LOG_DIR", ",", "\n", "'ExperimentalNotes.md'", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", "=", "pathjoin", "(", "\n", "self", ".", "LOG_DIR", ",", "\n", "self", ".", "EVALUATOR_SUMMARY_FILE_PATH", "\n", ")", "\n", "", "if", "self", ".", "EVALUATOR_DATASETS", "is", "not", "None", ":", "\n", "            ", "if", "\"ALL\"", "in", "self", ".", "EVALUATOR_DATASETS", ":", "\n", "                ", "self", ".", "EVALUATOR_DATASETS", "=", "\"DUT-OMRON DUTS PASCAL-S SOD\"", ".", "split", "(", ")", "\n", "", "self", ".", "EVALUATOR_GTS", "=", "[", "]", "\n", "self", ".", "TEST_IMG_SAVE_PATHS", "=", "[", "]", "\n", "self", ".", "DATASET_TEST_ROOT_DIRS", "=", "[", "]", "\n", "self", ".", "DATASET_TEST_LIST_PATHS", "=", "[", "]", "\n", "for", "dataset_name", "in", "self", ".", "EVALUATOR_DATASETS", ":", "\n", "                ", "dataset_info", "=", "get_dataset_path_by_name", "(", "dataset_name", ")", "\n", "self", ".", "EVALUATOR_GTS", ".", "append", "(", "pathjoin", "(", "dataset_info", "[", "'test_dir_path'", "]", ",", "'GT'", ")", ")", "\n", "dataset_test_dir_name", "=", "dataset_info", "[", "'test_dir_name'", "]", "\n", "testpath", "=", "pathjoin", "(", "\n", "self", ".", "MODEL_SAVE_ROOT_DIR", ",", "\n", "'test'", ",", "\n", "dataset_test_dir_name", "if", "len", "(", "dataset_test_dir_name", ")", "!=", "0", "else", "dataset_name", "\n", ")", "\n", "self", ".", "TEST_IMG_SAVE_PATHS", ".", "append", "(", "testpath", ")", "\n", "self", ".", "DATASET_TEST_ROOT_DIRS", ".", "append", "(", "dataset_info", "[", "'test_dir_path'", "]", ")", "\n", "self", ".", "DATASET_TEST_LIST_PATHS", ".", "append", "(", "dataset_info", "[", "'test_lst_path'", "]", ")", "\n", "", "self", ".", "EVALUATOR_DIRS", "=", "self", ".", "TEST_IMG_SAVE_PATHS", "\n", "if", "self", ".", "EVALUATOR_DIR", "not", "in", "self", ".", "EVALUATOR_DIRS", ":", "\n", "                ", "self", ".", "EVALUATOR_DIRS", ".", "append", "(", "self", ".", "EVALUATOR_DIR", ")", "\n", "self", ".", "EVALUATOR_GTS", ".", "append", "(", "self", ".", "DATASET_TEST_GT_DIR", ")", "\n", "self", ".", "DATASET_TEST_ROOT_DIRS", ".", "append", "(", "self", ".", "DATASET_TEST_ROOT_DIR", ")", "\n", "self", ".", "DATASET_TEST_LIST_PATHS", ".", "append", "(", "self", ".", "DATASET_TEST_LIST_PATH", ")", "\n", "self", ".", "EVALUATOR_DATASETS", ".", "append", "(", "self", ".", "DATASET_NAME", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "EVALUATOR_DIRS", "=", "[", "self", ".", "TEST_IMG_SAVE_PATH", "]", "\n", "self", ".", "EVALUATOR_GTS", "=", "[", "self", ".", "DATASET_TEST_GT_DIR", "]", "\n", "self", ".", "TEST_IMG_SAVE_PATHS", "=", "[", "self", ".", "TEST_IMG_SAVE_PATH", "]", "\n", "self", ".", "DATASET_TEST_ROOT_DIRS", "=", "[", "self", ".", "DATASET_TEST_ROOT_DIR", "]", "\n", "self", ".", "DATASET_TEST_LIST_PATHS", "=", "[", "self", ".", "DATASET_TEST_LIST_PATH", "]", "\n", "self", ".", "EVALUATOR_DATASETS", "=", "[", "self", ".", "DATASET_NAME", "]", "\n", "\n", "", "import", "sys", "\n", "# Command parameter acquisition", "\n", "self", ".", "CMD_STR", "=", "\"python \"", "+", "\" \"", ".", "join", "(", "sys", ".", "argv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.config.Configuration.update_eval_list": [[235, 244], ["enumerate"], "methods", ["None"], ["", "def", "update_eval_list", "(", "self", ")", ":", "\n", "        ", "for", "i", ",", "dataset_name", "in", "enumerate", "(", "self", ".", "EVALUATOR_DATASETS", ")", ":", "\n", "            ", "self", ".", "DATASET_NAME", "=", "dataset_name", "\n", "self", ".", "EVALUATOR_DIR", "=", "self", ".", "EVALUATOR_DIRS", "[", "i", "]", "\n", "self", ".", "DATASET_TEST_GT_DIR", "=", "self", ".", "EVALUATOR_GTS", "[", "i", "]", "\n", "self", ".", "TEST_IMG_SAVE_PATH", "=", "self", ".", "TEST_IMG_SAVE_PATHS", "[", "i", "]", "\n", "self", ".", "DATASET_TEST_ROOT_DIR", "=", "self", ".", "DATASET_TEST_ROOT_DIRS", "[", "i", "]", "\n", "self", ".", "DATASET_TEST_LIST_PATH", "=", "self", ".", "DATASET_TEST_LIST_PATHS", "[", "i", "]", "\n", "yield", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.run.train": [[36, 177], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "data_provider.sod_dataset.SaliencyDataSet", "len", "data_provider.sod_dataset.SaliencyDataSet", "losses.BCELossWithLogits_Mask().to", "helper.model_saver.ModelSaver", "losses.BCELossWithLogits_Mask().to", "helper.optim.Optimizer", "helper.optim.Optimizer", "helper.trainer.Trainer", "helper.trainer.Trainer.train", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "int", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "data_provider.sod_dataloader.SOD_Dataloader", "data_provider.sod_dataloader.SOD_Dataloader", "data_provider.sod_dataloader.SOD_Dataloader", "helper.trainer.TrainDataWrapper", "helper.trainer.TrainDataWrapper", "helper.trainer.TrainDataWrapper", "data_provider.sod_dataloader.SOD_Dataloader", "data_provider.sod_dataloader.SOD_Dataloader", "helper.trainer.TrainDataWrapper", "helper.trainer.TrainDataWrapper", "torch.optim.SGD", "torch.optim.Adam", "torch.cuda.device_count", "torch.cuda.device_count", "helper.utils.load_pkl_file", "print", "list", "random.shuffle", "helper.utils.dump_pkl_file", "losses.BCELossWithLogits_Mask", "losses.BCELossWithLogits_Mask", "sub_module.modules", "len", "range", "isinstance", "get_params"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.load_pkl_file", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.dump_pkl_file"], ["def", "train", "(", "config", ":", "Configuration", ")", "->", "None", ":", "\n", "\n", "    ", "if", "config", ".", "DISABLE_TRAIN", ":", "\n", "        ", "return", "\n", "", "if", "config", ".", "USE_GPU", "is", "not", "None", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "random", ".", "seed", "(", "config", ".", "SEED", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "SEED", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "SEED", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "config", ".", "SEED", ")", "\n", "", "batch_size", "=", "config", ".", "BATCH_SIZE", "\n", "crop_size", "=", "config", ".", "CROP_SIZE", "\n", "sal_dataset", "=", "SaliencyDataSet", "(", "config", ".", "DATASET_TRAIN_ROOT_DIR", ",", "config", ".", "DATASET_TRAIN_LIST_PATH", ",", "ignore_value", "=", "255.0", ",", "crop_size", "=", "(", "crop_size", ",", "crop_size", ")", ",", "is_random_flip", "=", "True", ",", "is_scale", "=", "False", ")", "\n", "dataset_size", "=", "len", "(", "sal_dataset", ")", "\n", "gt_dataset", "=", "SaliencyDataSet", "(", "config", ".", "DATASET_TRAIN_ROOT_DIR", ",", "config", ".", "DATASET_TRAIN_LIST_PATH", ",", "ignore_value", "=", "sal_dataset", ".", "ignore_value", ",", "crop_size", "=", "(", "crop_size", ",", "crop_size", ")", ",", "is_random_flip", "=", "True", ",", "is_scale", "=", "False", ")", "\n", "\n", "if", "batch_size", ">", "1", "and", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "0", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "enable", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "", "if", "config", ".", "PARTIAL_DATA", ":", "\n", "        ", "partial_size", "=", "int", "(", "config", ".", "PARTIAL_DATA", "*", "dataset_size", ")", "\n", "", "else", ":", "\n", "        ", "partial_size", "=", "dataset_size", "\n", "", "if", "partial_size", "<", "dataset_size", ":", "\n", "        ", "if", "config", ".", "DATA_IDX_PKL_PATH", ":", "\n", "            ", "idx", "=", "load_pkl_file", "(", "config", ".", "DATA_IDX_PKL_PATH", ")", "\n", "print", "(", "f'load index file {config.DATA_IDX_PKL_PATH} success!'", ")", "\n", "", "else", ":", "\n", "            ", "idx", "=", "list", "(", "range", "(", "0", ",", "dataset_size", ")", ")", "\n", "random", ".", "shuffle", "(", "idx", ")", "\n", "dump_pkl_file", "(", "idx", ",", "config", ".", "DATA_IDX_PKL_SAVE_PATH", ")", "\n", "", "train_sampler", "=", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "idx", "[", ":", "partial_size", "]", ")", "\n", "train_gt_sampler", "=", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "idx", "[", ":", "partial_size", "]", ")", "\n", "semi_sampler", "=", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "idx", "[", "partial_size", ":", "]", ")", "\n", "\n", "train_full_loader", "=", "SOD_Dataloader", "(", "sal_dataset", ",", "batch_size", "=", "config", ".", "BATCH_SIZE", ",", "sampler", "=", "train_sampler", ",", "num_workers", "=", "config", ".", "BATCH_SIZE", "//", "2", ",", "pin_memory", "=", "True", ")", "\n", "gt_loader", "=", "SOD_Dataloader", "(", "gt_dataset", ",", "batch_size", "=", "config", ".", "BATCH_SIZE", ",", "sampler", "=", "train_gt_sampler", ",", "num_workers", "=", "config", ".", "BATCH_SIZE", "//", "2", ",", "pin_memory", "=", "True", ")", "\n", "semi_loader", "=", "SOD_Dataloader", "(", "sal_dataset", ",", "batch_size", "=", "config", ".", "BATCH_SIZE", ",", "sampler", "=", "semi_sampler", ",", "num_workers", "=", "config", ".", "BATCH_SIZE", "//", "2", ",", "pin_memory", "=", "True", ")", "\n", "\n", "train_full_wraper", "=", "TrainDataWrapper", "(", "\n", "train_full_loader", ",", "\n", "lambda_adv", "=", "config", ".", "LAMBDA_PRED_ADV", ",", "\n", "lambda_sal", "=", "config", ".", "LAMBDA_PRED_SAL", ",", "\n", ")", "\n", "gt_full_wraper", "=", "TrainDataWrapper", "(", "\n", "gt_loader", ",", "\n", "lambda_adv", "=", "None", ",", "\n", "lambda_sal", "=", "None", ",", "\n", ")", "\n", "semi_wrapper", "=", "TrainDataWrapper", "(", "\n", "semi_loader", ",", "\n", "lambda_adv", "=", "config", ".", "LAMBDA_SEMI_ADV", ",", "\n", "lambda_sal", "=", "config", ".", "LAMBDA_SEMI_SAL", ",", "\n", "mask_T", "=", "config", ".", "MASK_T", ",", "\n", "start_time", "=", "config", ".", "SEMI_START", "\n", ")", "\n", "", "else", ":", "\n", "        ", "train_full_loader", "=", "SOD_Dataloader", "(", "sal_dataset", ",", "batch_size", "=", "config", ".", "BATCH_SIZE", ",", "num_workers", "=", "config", ".", "BATCH_SIZE", "//", "2", ",", "pin_memory", "=", "True", ")", "\n", "gt_loader", "=", "SOD_Dataloader", "(", "gt_dataset", ",", "batch_size", "=", "config", ".", "BATCH_SIZE", ",", "num_workers", "=", "config", ".", "BATCH_SIZE", "//", "2", ",", "pin_memory", "=", "True", ")", "\n", "\n", "train_full_wraper", "=", "TrainDataWrapper", "(", "\n", "train_full_loader", ",", "\n", "lambda_adv", "=", "config", ".", "LAMBDA_PRED_ADV", ",", "\n", "lambda_sal", "=", "config", ".", "LAMBDA_PRED_SAL", ",", "\n", ")", "\n", "gt_full_wraper", "=", "TrainDataWrapper", "(", "\n", "gt_loader", ",", "\n", "lambda_adv", "=", "None", ",", "\n", "lambda_sal", "=", "None", ",", "\n", ")", "\n", "semi_wrapper", "=", "None", "\n", "\n", "", "sal_loss_function", "=", "BCELossWithLogits_Mask", "(", "ignore_value", "=", "sal_dataset", ".", "ignore_value", ")", ".", "to", "(", "device", ")", "\n", "model_saver", "=", "ModelSaver", "(", "dataset_size", "//", "config", ".", "BATCH_SIZE", ",", "save_dir_path", "=", "config", ".", "MODEL_SAVE_PATH", ")", "\n", "adv_loss_func", "=", "BCELossWithLogits_Mask", "(", "ignore_value", "=", "sal_dataset", ".", "ignore_value", ")", ".", "to", "(", "device", ")", "\n", "\n", "def", "G_optim_create_func", "(", "model", ":", "Generator", ",", "lr", ":", "float", ")", ":", "\n", "        ", "def", "get_params", "(", "sub_module", ":", "Module", ")", ":", "\n", "            ", "for", "module", "in", "sub_module", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                    ", "for", "p", "in", "module", ".", "parameters", "(", ")", ":", "\n", "                        ", "yield", "p", "\n", "", "", "", "", "params", "=", "[", "\n", "{", "'params'", ":", "get_params", "(", "model", ".", "base_model", ")", ",", "'lr'", ":", "lr", "}", ",", "\n", "{", "'params'", ":", "get_params", "(", "model", ".", "aspp", ")", ",", "'lr'", ":", "10", "*", "lr", "}", ",", "\n", "]", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "params", ",", "\n", "lr", "=", "lr", ",", "\n", "momentum", "=", "config", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "config", ".", "WEIGHT_DECAY", "\n", ")", "\n", "return", "optimizer", "\n", "", "def", "G_adjust_lr", "(", "optimizer", ",", "lr", ",", "itr", ",", "max_itr", ")", ":", "\n", "        ", "now_lr", "=", "lr", "*", "(", "1", "-", "itr", "/", "(", "max_itr", "+", "1", ")", ")", "**", "0.9", "\n", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "now_lr", "\n", "if", "len", "(", "optimizer", ".", "param_groups", ")", ">", "1", ":", "\n", "            ", "optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "10", "*", "now_lr", "\n", "", "", "G_optim_obj", "=", "Optimizer", "(", "G_optim_create_func", ",", "config", ".", "MAX_ITER", ",", "\n", "step_time_interval", "=", "config", ".", "STEP_INTERVAL", ",", "\n", "lr_schuduer", "=", "G_adjust_lr", ")", "\n", "def", "D_optim_create_func", "(", "model", ":", "FCDiscriminator", ",", "lr", ":", "float", ")", ":", "\n", "        ", "return", "optim", ".", "Adam", "(", "(", "p", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", ",", "lr", "=", "lr", ",", "betas", "=", "(", "0.9", ",", "0.99", ")", ")", "\n", "\n", "", "D_adjust_lr", "=", "G_adjust_lr", "\n", "D_optim_obj", "=", "Optimizer", "(", "D_optim_create_func", ",", "config", ".", "MAX_ITER", ",", "\n", "step_time_interval", "=", "config", ".", "STEP_INTERVAL", ",", "\n", "lr_schuduer", "=", "D_adjust_lr", ")", "\n", "\n", "trainer", "=", "Trainer", "(", "\n", "train_full_wraper", ",", "\n", "semi_wrapper", ",", "\n", "gt_full_wraper", ",", "\n", "adv_loss_func", ",", "\n", "sal_loss_function", ",", "\n", "config", ".", "MAX_ITER", ",", "\n", "ignore_value", "=", "sal_dataset", ".", "ignore_value", ",", "\n", "generator_optim_create_func", "=", "G_optim_obj", ",", "\n", "discriminator_optim_create_func", "=", "D_optim_obj", ",", "\n", "generate_lr", "=", "config", ".", "G_LEARNING_RATE", ",", "\n", "discriminator_lr", "=", "config", ".", "D_LEARNING_RATE", ",", "\n", "device", "=", "device", ",", "\n", "model_saver", "=", "model_saver", ",", "\n", "pretrained_model_path", "=", "config", ".", "PRETRAINED_MODEL_PATH", ",", "\n", "is_use_grab", "=", "config", ".", "USE_GRAB", ",", "\n", ")", "\n", "trainer", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.run.test": [[179, 195], ["data_provider.sod_dataset.SaliencyDataSet", "torch.utils.data.DataLoader", "helper.tester.Tester", "helper.tester.Tester.test", "torch.device", "torch.device", "torch.device", "torch.device", "data_provider.sod_dataset.SaliencyDataSet.real_label().cpu().numpy().transpose", "data_provider.sod_dataset.SaliencyDataSet.real_label().cpu().numpy", "data_provider.sod_dataset.SaliencyDataSet.real_label().cpu", "data_provider.sod_dataset.SaliencyDataSet.real_label", "torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.tester.Tester.test", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.real_label"], ["", "def", "test", "(", "config", ":", "Configuration", ")", "->", "None", ":", "\n", "    ", "if", "config", ".", "DISABLE_TEST", ":", "\n", "        ", "return", "\n", "", "dataset", "=", "SaliencyDataSet", "(", "config", ".", "DATASET_TEST_ROOT_DIR", ",", "config", ".", "DATASET_TEST_LIST_PATH", ",", "\n", "is_scale", "=", "False", ",", "is_random_flip", "=", "False", ",", "crop_size", "=", "(", "None", ",", "None", ")", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "if", "config", ".", "USE_GPU", "is", "not", "None", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "\n", "", "tester", "=", "Tester", "(", "\n", "dataloader", ",", "config", ".", "TEST_IMG_SAVE_PATH", ",", "config", ".", "TEST_MODEL_PTH_PATH", ",", "device", "=", "device", ",", "label_trans_func", "=", "lambda", "x", ":", "dataset", ".", "real_label", "(", "torch", ".", "sigmoid", "(", "x", ")", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", ")", "\n", "tester", ".", "test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.run.evaluate": [[198, 264], ["helper.evaluator_tool.get_measure", "collections.OrderedDict", "collections.OrderedDict.update", "collections.OrderedDict.items", "helper.utils.pandas2markdown", "os.path.dirname", "helper.utils.mkdirs", "helper.utils.pathjoin", "collections.OrderedDict", "collections.OrderedDict.update", "pandas.DataFrame", "torch.device", "torch.device", "torch.device", "torch.device", "pandas.DataFrame", "os.path.exists", "pd.DataFrame.to_excel", "pandas.concat().to_excel", "portalocker.Lock", "f.write", "isinstance", "os.path.splitext", "time.strftime", "str", "os.path.basename", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "pandas.concat", "pandas.read_excel"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.__init__.get_measure", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.pandas2markdown", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.mkdirs"], ["", "def", "evaluate", "(", "config", ":", "Configuration", ")", "->", "None", ":", "\n", "    ", "if", "config", ".", "DISABLE_EVAL", ":", "\n", "        ", "return", "\n", "", "if", "config", ".", "USE_GPU", "is", "not", "None", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "", "sal_measure", "=", "get_measure", "(", "config", ".", "EVAL_MEASURE_LIST", ",", "config", ".", "EVALUATOR_DIR", ",", "config", ".", "DATASET_TEST_GT_DIR", ",", "device", ")", "\n", "measure", "=", "OrderedDict", "(", ")", "\n", "measure", "[", "'setting'", "]", "=", "config", ".", "MODEL_SAVE_DIR_NAME", "\n", "measure", "[", "'dataset'", "]", "=", "config", ".", "DATASET_NAME", "\n", "measure", ".", "update", "(", "sal_measure", ")", "\n", "for", "key", ",", "item", "in", "measure", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "item", ",", "Sequence", ")", ":", "\n", "            ", "measure", "[", "key", "]", "=", "[", "item", "]", "\n", "", "else", ":", "\n", "            ", "measure", "[", "key", "]", "=", "[", "str", "(", "item", ")", "]", "\n", "", "", "table_content", "=", "pandas2markdown", "(", "pd", ".", "DataFrame", "(", "measure", ")", ")", "\n", "record_file_dir", "=", "os", ".", "path", ".", "dirname", "(", "config", ".", "EVALUATOR_SUMMARY_FILE_PATH", ")", "\n", "mkdirs", "(", "record_file_dir", ")", "\n", "\n", "# Write xlsx report", "\n", "xlsx_filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "config", ".", "EVALUATOR_SUMMARY_FILE_PATH", ")", ")", "[", "0", "]", "+", "'.xlsx'", "\n", "xlsx_filepath", "=", "pathjoin", "(", "\n", "record_file_dir", ",", "\n", "xlsx_filename", "\n", ")", "\n", "data_dict", "=", "OrderedDict", "(", "**", "{", "\n", "'setting'", ":", "str", "(", "config", ".", "MODEL_SAVE_DIR_NAME", ")", ",", "\n", "'dataset'", ":", "str", "(", "config", ".", "DATASET_NAME", ")", ",", "\n", "'g_lr'", ":", "str", "(", "config", ".", "G_LEARNING_RATE", ")", ",", "\n", "'d_lr'", ":", "str", "(", "config", ".", "D_LEARNING_RATE", ")", ",", "\n", "'step_size'", ":", "str", "(", "config", ".", "STEP_INTERVAL", ")", ",", "\n", "'batch_size'", ":", "str", "(", "config", ".", "BATCH_SIZE", ")", ",", "\n", "'crop_size'", ":", "str", "(", "config", ".", "CROP_SIZE", ")", ",", "\n", "'partial_data'", ":", "str", "(", "config", ".", "PARTIAL_DATA", ")", ",", "\n", "'max_iter'", ":", "str", "(", "config", ".", "MAX_ITER", ")", ",", "\n", "'lambda_pred_sal'", ":", "str", "(", "config", ".", "LAMBDA_PRED_SAL", ")", ",", "\n", "'lambda_pred_adv'", ":", "str", "(", "config", ".", "LAMBDA_PRED_ADV", ")", ",", "\n", "'lambda_semi_sal'", ":", "str", "(", "config", ".", "LAMBDA_SEMI_SAL", ")", ",", "\n", "'lambda_semi_adv'", ":", "str", "(", "config", ".", "LAMBDA_SEMI_ADV", ")", ",", "\n", "}", ")", "\n", "data_dict", ".", "update", "(", "sal_measure", ")", "\n", "record_dataframe", "=", "pd", ".", "DataFrame", "(", "data_dict", ",", "index", "=", "[", "0", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "xlsx_filepath", ")", ":", "\n", "        ", "record_dataframe", ".", "to_excel", "(", "xlsx_filepath", ",", "index", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "pd", ".", "concat", "(", "[", "pd", ".", "read_excel", "(", "xlsx_filepath", ")", ",", "record_dataframe", "]", ",", "sort", "=", "False", ")", ".", "to_excel", "(", "xlsx_filepath", ",", "index", "=", "False", ")", "\n", "\n", "", "title", "=", "config", ".", "MODEL_SAVE_DIR_NAME", "\n", "file_content", "=", "(", "f\"\\n\"", "\n", "f\"# Experiment {title}  \\n\"", "\n", "f\"Time:{time.strftime('%Y-%m-%d %X')}  \\n\"", "\n", "f\"Dataset:{config.DATASET_NAME}  \\n\"", "\n", "f\"Test folder:{config.EVALUATOR_DIR}  \\n\"", "\n", "f\"Test index:{' '.join(config.EVAL_MEASURE_LIST)}  \\n\"", "\n", "f\"Command parameters:\\n\"", "\n", "f\"```bash\\n\"", "\n", "f\"{config.CMD_STR}\\n\"", "\n", "f\"```\\n\"", "\n", "f\"\\n\"", "\n", "f\"## Experimental results\\n\"", "\n", "f\"{table_content}\\n\"", ")", "\n", "with", "portalocker", ".", "Lock", "(", "config", ".", "EVALUATOR_SUMMARY_FILE_PATH", ",", "'a+'", ",", "encoding", "=", "'utf-8'", ",", "timeout", "=", "600", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "file_content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.run.main": [[266, 280], ["config.Configuration", "run.train", "config.Configuration.update_eval_list", "setproctitle", "print", "run.test", "run.evaluate", "print"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.config.Configuration.update_eval_list", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.tester.Tester.test", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.None.run.evaluate"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "config", "=", "Configuration", "(", ")", "\n", "if", "config", ".", "USE_GPU", "is", "not", "None", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_DEVICE_ORDER\"", "]", "=", "\"PCI_BUS_ID\"", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "config", ".", "USE_GPU", "\n", "", "if", "config", ".", "PROC_NAME", "is", "not", "None", ":", "\n", "        ", "from", "setproctitle", "import", "setproctitle", "\n", "setproctitle", "(", "config", ".", "PROC_NAME", ")", "\n", "", "train", "(", "config", ")", "\n", "for", "dataset_name", "in", "config", ".", "update_eval_list", "(", ")", ":", "\n", "        ", "print", "(", "f'handling {dataset_name}...'", ")", "\n", "test", "(", "config", ")", "\n", "evaluate", "(", "config", ")", "\n", "print", "(", "f'evaluation on {dataset_name} has done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.__init__": [[6, 16], ["object.__init__", "torch.utils.data.DataLoader", "iter"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "sampler", "=", "None", ",", "\n", "batch_sampler", "=", "None", ",", "num_workers", "=", "0", ",", "collate_fn", "=", "None", ",", "\n", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "timeout", "=", "0", ",", "\n", "worker_init_fn", "=", "None", ",", "multiprocessing_context", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", ",", "shuffle", ",", "sampler", ",", "\n", "batch_sampler", ",", "num_workers", ",", "collate_fn", ",", "\n", "pin_memory", ",", "drop_last", ",", "timeout", ",", "\n", "worker_init_fn", ",", "multiprocessing_context", ")", "\n", "self", ".", "iter", "=", "iter", "(", "self", ".", "dataloader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.__iter__": [[17, 19], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.next": [[20, 22], ["sod_dataloader.SOD_Dataloader.__next__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.__next__"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__next__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.__next__": [[23, 29], ["sod_dataloader.SOD_Dataloader.next"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.next"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "next", "(", "self", ".", "iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "iter", "=", "iter", "(", "self", ".", "dataloader", ")", "\n", "return", "next", "(", "self", ".", "iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.img_utils.random_scale_image": [[7, 11], ["cv2.resize", "random.randint"], "function", ["None"], ["def", "random_scale_image", "(", "image", ":", "np", ".", "ndarray", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", ":", "\n", "    ", "f_scale", "=", "0.5", "+", "random", ".", "randint", "(", "0", ",", "10", ")", "/", "10.0", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "None", ",", "fx", "=", "f_scale", ",", "fy", "=", "f_scale", ",", "interpolation", "=", "interpolation", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.img_utils.random_scale_pair_image": [[12, 17], ["cv2.resize", "cv2.resize", "random.randint"], "function", ["None"], ["", "def", "random_scale_pair_image", "(", "image", ":", "np", ".", "ndarray", ",", "label", ":", "np", ".", "ndarray", ")", ":", "\n", "    ", "f_scale", "=", "0.5", "+", "random", ".", "randint", "(", "0", ",", "10", ")", "/", "10.0", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "None", ",", "fx", "=", "f_scale", ",", "fy", "=", "f_scale", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "None", ",", "fx", "=", "f_scale", ",", "fy", "=", "f_scale", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.img_utils.square_crop": [[18, 47], ["min", "cv2.resize", "cv2.resize", "random.randint", "random.randint"], "function", ["None"], ["", "def", "square_crop", "(", "img", ":", "np", ".", "ndarray", ",", "label", ":", "np", ".", "ndarray", ",", "need_size", ":", "int", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "\"\"\"\n    random crop a square img from source and label image\n    :param img: source image [H,W,C]\n    :param label: label image [H,W,C]\n    :param need_size: needed size to scale\n    :return:\n    \"\"\"", "\n", "assert", "img", ".", "shape", "[", ":", "2", "]", "==", "label", ".", "shape", "[", ":", "2", "]", "\n", "height", ",", "width", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "\n", "if", "height", ">=", "width", ":", "\n", "        ", "crop_start", "=", "random", ".", "randint", "(", "0", ",", "height", "-", "width", ")", "\n", "crop_end", "=", "crop_start", "+", "width", "\n", "img", "=", "img", "[", "crop_start", ":", "crop_end", ",", "...", "]", "\n", "label", "=", "label", "[", "crop_start", ":", "crop_end", ",", "...", "]", "\n", "", "else", ":", "\n", "        ", "crop_start", "=", "random", ".", "randint", "(", "0", ",", "width", "-", "height", ")", "\n", "crop_end", "=", "crop_start", "+", "height", "\n", "img", "=", "img", "[", ":", ",", "crop_start", ":", "crop_end", ",", "...", "]", "\n", "label", "=", "label", "[", ":", ",", "crop_start", ":", "crop_end", ",", "...", "]", "\n", "", "min_size", "=", "min", "(", "height", ",", "width", ")", "\n", "if", "min_size", ">=", "need_size", ":", "\n", "        ", "interpolation", "=", "cv2", ".", "INTER_AREA", "\n", "", "else", ":", "\n", "        ", "interpolation", "=", "cv2", ".", "INTER_LINEAR", "\n", "", "img", "=", "cv2", ".", "resize", "(", "img", ",", "dsize", "=", "(", "need_size", ",", "need_size", ")", ",", "interpolation", "=", "interpolation", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "dsize", "=", "(", "need_size", ",", "need_size", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.__init__": [[16, 39], ["numpy.array", "sod_dataset.SaliencyDataSet.files.sort", "i_id.strip", "img_id.split", "os.path.join", "os.path.join", "sod_dataset.SaliencyDataSet.files.append", "open", "i_id.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root_dir", ":", "str", ",", "list_path", ":", "str", ",", "ignore_value", ":", "float", "=", "255.0", ",", "crop_size", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "None", ",", "None", ")", ",", "\n", "img_mean", ":", "np", ".", "ndarray", "=", "np", ".", "array", "(", "(", "104.00699", ",", "116.66877", ",", "122.67892", ")", ")", ",", "is_random_flip", ":", "bool", "=", "False", ",", "is_scale", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "        ", "img_ids", "=", "[", "i_id", ".", "strip", "(", ")", "for", "i_id", "in", "open", "(", "list_path", ")", "if", "i_id", ".", "strip", "(", ")", "!=", "''", "]", "\n", "self", ".", "files", "=", "[", "]", "\n", "self", ".", "img_mean", "=", "img_mean", "\n", "for", "img_id", "in", "img_ids", ":", "\n", "            ", "img_name", ",", "gt_name", "=", "img_id", ".", "split", "(", ")", "\n", "img_file", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "img_name", ")", "\n", "label_file", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "gt_name", ")", "\n", "self", ".", "files", ".", "append", "(", "{", "\n", "\"img\"", ":", "img_file", ",", "\n", "\"label\"", ":", "label_file", ",", "\n", "}", ")", "\n", "", "self", ".", "files", ".", "sort", "(", "key", "=", "lambda", "x", ":", "x", "[", "'img'", "]", ")", "\n", "self", ".", "is_random_flip", ":", "bool", "=", "is_random_flip", "\n", "self", ".", "is_scale", ":", "bool", "=", "is_scale", "\n", "self", ".", "ignore_value", ":", "float", "=", "ignore_value", "\n", "if", "crop_size", "is", "not", "None", "and", "crop_size", "!=", "(", "0", ",", "0", ")", ":", "\n", "            ", "self", ".", "crop_height", ",", "self", ".", "crop_width", "=", "crop_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "crop_height", ",", "self", ".", "crop_width", "=", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.__iadd__": [[41, 45], ["sod_dataset.SaliencyDataSet.files.extend"], "methods", ["None"], ["", "", "def", "__iadd__", "(", "self", ",", "other", ")", ":", "\n", "# not verify other options", "\n", "        ", "self", ".", "files", ".", "extend", "(", "other", ".", "files", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.__add__": [[46, 50], ["copy.deepcopy", "copy.deepcopy.files.extend"], "methods", ["None"], ["", "def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "ret", "=", "deepcopy", "(", "self", ")", "\n", "ret", ".", "files", ".", "extend", "(", "other", ".", "files", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.__getitem__": [[55, 86], ["isinstance", "os.path.basename", "cv2.imread", "cv2.imread", "image.transpose.transpose.astype", "image.transpose.transpose.transpose", "label.astype.astype.astype", "copy.deepcopy", "isinstance", "data_provider.img_utils.random_scale_pair_image", "data_provider.img_utils.square_crop", "image.transpose.transpose.copy", "label.astype.astype.copy", "copy.deepcopy", "random.randint"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.img_utils.random_scale_pair_image", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.img_utils.square_crop"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", "or", "slice", ")", ":", "\n", "        ", "if", "isinstance", "(", "index", ",", "slice", ")", ":", "\n", "            ", "ret", "=", "deepcopy", "(", "self", ")", "\n", "ret", ".", "files", "=", "ret", ".", "files", "[", "index", "]", "\n", "return", "ret", "\n", "", "elif", "isinstance", "(", "index", ",", "list", ")", ":", "\n", "            ", "ret", "=", "deepcopy", "(", "self", ")", "\n", "ret", ".", "files", "=", "[", "ret", ".", "files", "[", "i", "]", "for", "i", "in", "index", "]", "\n", "return", "ret", "\n", "", "datafiles", "=", "self", ".", "files", "[", "index", "]", "\n", "filename", "=", "os", ".", "path", ".", "basename", "(", "datafiles", "[", "\"img\"", "]", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "datafiles", "[", "\"img\"", "]", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "label", "=", "cv2", ".", "imread", "(", "datafiles", "[", "\"label\"", "]", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "if", "self", ".", "is_scale", ":", "\n", "            ", "image", ",", "label", "=", "random_scale_pair_image", "(", "image", ",", "label", ")", "\n", "", "if", "self", ".", "crop_height", "is", "not", "None", ":", "\n", "            ", "image", ",", "label", "=", "square_crop", "(", "image", ",", "label", ",", "self", ".", "crop_height", ")", "\n", "", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "self", ".", "img_mean", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "label", ".", "astype", "(", "np", ".", "float32", ")", "\n", "label", "/=", "255", "\n", "\n", "if", "self", ".", "is_random_flip", ":", "\n", "            ", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "1", ":", "\n", "                ", "image", "=", "image", "[", "...", ",", ":", ":", "-", "1", "]", "\n", "label", "=", "label", "[", "...", ",", ":", ":", "-", "1", "]", "\n", "", "", "return", "{", "\n", "'image'", ":", "image", ".", "copy", "(", ")", ",", "\n", "'label'", ":", "label", ".", "copy", "(", ")", ",", "\n", "'filename'", ":", "filename", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.real_image": [[89, 99], ["torch.from_numpy().to().view().float", "image.byte.byte.byte", "torch.from_numpy().to().view", "torch.from_numpy().to", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "real_image", "(", "self", ",", "image", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        recover the real image from tensor\n        :param image:\n        :return: the real image value with shape [N,C,H,W]\n        \"\"\"", "\n", "# print(image.shape)", "\n", "image", "+=", "torch", ".", "from_numpy", "(", "self", ".", "img_mean", ")", ".", "to", "(", "image", ".", "dtype", ")", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", ".", "float", "(", ")", "\n", "image", "=", "image", ".", "byte", "(", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataset.SaliencyDataSet.real_label": [[100, 117], ["label.expand.expand.byte", "len", "label.expand.expand.unsqueeze", "label.expand.expand.size", "list", "label.expand.expand.expand"], "methods", ["None"], ["", "def", "real_label", "(", "self", ",", "label", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"\n        return the real image value with shape [C,H,W]\n        :param label: the label shape must be [N,H,W] or [N,C,H,W]\n        :return:\n        \"\"\"", "\n", "ignore_index", "=", "(", "label", "==", "self", ".", "ignore_value", ")", "\n", "label", "*=", "255.0", "\n", "label", "[", "ignore_index", "]", "==", "0.0", "\n", "if", "len", "(", "label", ".", "shape", ")", "==", "3", ":", "\n", "            ", "label", "=", "label", ".", "unsqueeze", "(", "dim", "=", "1", ")", "\n", "", "if", "label", ".", "size", "(", "1", ")", "==", "1", ":", "\n", "            ", "shape", "=", "list", "(", "label", ".", "shape", ")", "\n", "shape", "[", "1", "]", "=", "3", "\n", "label", "=", "label", ".", "expand", "(", "shape", ")", "\n", "", "label", "=", "label", ".", "byte", "(", ")", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.TrainDataWrapper.__init__": [[22, 31], ["helper.utils.EasyDict.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataloader", ":", "SOD_Dataloader", ",", "lambda_adv", ":", "float", "or", "None", "=", "None", ",", "lambda_sal", ":", "float", "or", "None", "=", "1.0", ",", "mask_T", ":", "float", "or", "None", "=", "None", ",", "start_time", ":", "int", "or", "None", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "dataloader", ":", "SOD_Dataloader", "=", "dataloader", "\n", "self", ".", "lambda_sal", ":", "float", "or", "None", "=", "lambda_sal", "\n", "self", ".", "lambda_adv", ":", "float", "or", "None", "=", "lambda_adv", "\n", "self", ".", "start_time", ":", "float", "or", "None", "=", "start_time", "\n", "self", ".", "mask_T", ":", "float", "or", "None", "=", "mask_T", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.__init__": [[37, 85], ["torch.device", "torch.device", "torch.device", "torch.device", "object.__init__", "networks.GAN_Unet.GAN", "trainer.Trainer.model.train", "trainer.Trainer.model.to", "generator_optim_create_func", "discriminator_optim_create_func", "trainer.Trainer.model.generator.apply", "trainer.Trainer.model.discriminator.apply", "trainer.Trainer.model.generator.load_weight"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.apply", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.apply", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.Generator.Generator.load_weight"], ["def", "__init__", "(", "self", ",", "\n", "train_fullsupervised_data", ":", "TrainDataWrapper", ",", "\n", "train_semi_data", ":", "TrainDataWrapper", ",", "\n", "train_gt_data", ":", "TrainDataWrapper", ",", "\n", "adv_loss_function", ":", "LOSS_FUNC", ",", "\n", "sal_loss_function", ":", "LOSS_FUNC", ",", "\n", "max_iter_time", ":", "int", ",", "\n", "ignore_value", ":", "float", ",", "\n", "generator_optim_create_func", ":", "Optimizer", ",", "\n", "discriminator_optim_create_func", ":", "Optimizer", ",", "\n", "generate_lr", ":", "float", ",", "\n", "discriminator_lr", ":", "float", ",", "\n", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ",", "\n", "pretrained_model_path", ":", "str", "=", "None", ",", "\n", "visual_helper", ":", "VisualHelper", "=", "None", ",", "\n", "model_saver", ":", "ModelSaver", "=", "None", ",", "\n", "g_weight_init_func", ":", "WEIGHT_INIT_FUNC", "=", "None", ",", "\n", "d_weight_init_func", ":", "WEIGHT_INIT_FUNC", "=", "None", ",", "\n", "is_use_grab", ":", "bool", "=", "False", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Trainer", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "model", ":", "GAN", "=", "GAN", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "if", "g_weight_init_func", "is", "not", "None", ":", "\n", "            ", "self", ".", "model", ".", "generator", ".", "apply", "(", "g_weight_init_func", ")", "\n", "", "if", "d_weight_init_func", "is", "not", "None", ":", "\n", "            ", "self", ".", "model", ".", "discriminator", ".", "apply", "(", "d_weight_init_func", ")", "\n", "", "if", "pretrained_model_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "model", ".", "generator", ".", "load_weight", "(", "pretrained_model_path", ")", "\n", "", "self", ".", "model", ".", "to", "(", "device", ")", "\n", "self", ".", "max_iter_time", "=", "max_iter_time", "\n", "generator_optim_create_func", "(", "self", ".", "model", ".", "generator", ",", "generate_lr", ")", "\n", "self", ".", "G_optim", "=", "generator_optim_create_func", "\n", "discriminator_optim_create_func", "(", "self", ".", "model", ".", "discriminator", ",", "discriminator_lr", ")", "\n", "self", ".", "D_optim", "=", "discriminator_optim_create_func", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "visual_helper", "=", "visual_helper", "\n", "self", ".", "model_saver", "=", "model_saver", "\n", "self", ".", "train_fullsupervised_data", "=", "train_fullsupervised_data", "\n", "self", ".", "train_semi_data", "=", "train_semi_data", "\n", "self", ".", "train_gt_data", "=", "train_gt_data", "\n", "self", ".", "adv_loss_function", "=", "adv_loss_function", "\n", "self", ".", "sal_loss_function", "=", "sal_loss_function", "\n", "self", ".", "fake_label", "=", "0.0", "\n", "self", ".", "real_label", "=", "1.0", "\n", "self", ".", "ignore_value", "=", "ignore_value", "\n", "self", ".", "is_use_grab", ":", "bool", "=", "is_use_grab", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.get_data": [[86, 88], ["next"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.data_provider.sod_dataloader.SOD_Dataloader.next"], ["", "def", "get_data", "(", "self", ",", "datawrapper", ":", "TrainDataWrapper", ")", ":", "\n", "        ", "return", "next", "(", "datawrapper", ".", "dataloader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.train": [[89, 229], ["tqdm.trange", "list", "list", "dict", "trainer.Trainer.model.discriminator.freeze_bp", "trainer.Trainer.G_optim.step", "trainer.Trainer.model_saver", "trainer.Trainer.model_saver", "trainer.Trainer.visual_helper.close", "trainer.Trainer.get_data", "trainer.Trainer.get_data", "len", "trainer.Trainer.model.discriminator.freeze_bp", "trainer.Trainer.model.forward_D", "trainer.Trainer.adv_loss_function", "trainer.Trainer.backward", "trainer.Trainer.item", "trainer.Trainer.get_data", "item[].to", "item[].to.unsqueeze_", "trainer.Trainer.model.forward_D", "trainer.Trainer.adv_loss_function", "trainer.Trainer.backward", "trainer.Trainer.item", "trainer.Trainer.D_optim.step", "list.append", "trainer.Trainer.visual_helper.add_timer", "trainer.Trainer.visual_helper.is_catch_snapshot", "trainer.Trainer.model_saver", "trainer.Trainer.model_saver", "item[].to", "item[].to", "item[].to.unsqueeze_", "trainer.Trainer.model.forward_G", "trainer.Trainer.sal_loss_function", "trainer.Trainer.item", "trainer.Trainer.backward", "trainer.Trainer.model.forward_G", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "trainer.Trainer.model.forward_D", "list.append", "trainer.Trainer.adv_loss_function", "trainer.Trainer.item", "trainer.Trainer.backward", "item[].to", "trainer.Trainer.model.forward_G", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "trainer.Trainer.model.forward_D", "torch.sigmoid.gt_().float", "torch.sigmoid.gt_().float", "torch.sigmoid_", "torch.sigmoid_", "torch.sigmoid_", "torch.sigmoid_", "trainer.Trainer.sal_loss_function", "trainer.Trainer.item", "trainer.Trainer.backward", "trainer.Trainer.model.forward_G", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "trainer.Trainer.model.forward_D", "list.append", "trainer.Trainer.adv_loss_function", "trainer.Trainer.item", "trainer.Trainer.backward", "len", "trainer.Trainer.model.discriminator.freeze_encoder_bp", "trainer.Trainer.model.forward_D", "trainer.Trainer.adv_loss_function", "trainer.Trainer.backward", "trainer.Trainer.model.discriminator.freeze_encoder_bp", "dict", "dict", "dict.items", "trainer.Trainer.visual_helper", "list.clear", "item[].to", "item[].to", "item[].to.unsqueeze_", "torch.sigmoid.detach", "torch.sigmoid.detach", "trainer.Trainer.detach", "item[].to", "torch.sigmoid.detach", "torch.sigmoid.detach", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "trainer.Trainer.items", "torch.sigmoid.gt_", "torch.sigmoid.gt_", "d_out_label.size", "dict.get", "dict.get"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_bp", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.step", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.close", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.get_data", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.get_data", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_bp", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.trainer.Trainer.get_data", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.step", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.add_timer", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.is_catch_snapshot", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_G", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_G", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_G", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_G", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_encoder_bp", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_encoder_bp", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "visual_helper", "is", "not", "None", ":", "\n", "            ", "loss_list", "=", "list", "(", ")", "\n", "", "train_full", "=", "self", ".", "train_fullsupervised_data", "\n", "train_semi", "=", "self", ".", "train_semi_data", "\n", "fake_with_gt_image", "=", "None", "\n", "if", "train_semi", ".", "lambda_sal", ":", "\n", "            ", "assert", "train_semi", ".", "mask_T", "is", "not", "None", ",", "\"the mask_T of train_semi_data should not be None\"", "\n", "", "for", "iter_time", "in", "trange", "(", "1", ",", "self", ".", "max_iter_time", "+", "1", ")", ":", "\n", "            ", "fake_image_list", "=", "list", "(", ")", "\n", "loss_dict", "=", "dict", "(", ")", "\n", "# Train labeled data", "\n", "self", ".", "model", ".", "discriminator", ".", "freeze_bp", "(", "True", ")", "\n", "train_full_images", "=", "None", "\n", "train_full_labels", "=", "None", "\n", "if", "train_full", "is", "not", "None", ":", "\n", "                ", "item", "=", "self", ".", "get_data", "(", "train_full", ")", "\n", "if", "train_full", ".", "lambda_sal", ":", "\n", "                    ", "train_full_images", "=", "item", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "train_full_labels", "=", "item", "[", "'label'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "train_full_labels", ".", "unsqueeze_", "(", "dim", "=", "1", ")", "\n", "sal_pred_on_train_full_images", "=", "self", ".", "model", ".", "forward_G", "(", "train_full_images", ")", "\n", "train_full_sal_loss", "=", "self", ".", "sal_loss_function", "(", "sal_pred_on_train_full_images", ",", "train_full_labels", ")", "\n", "loss_dict", "[", "'train_full_sal_loss'", "]", "=", "train_full_sal_loss", ".", "item", "(", ")", "\n", "train_full_sal_loss", "=", "train_full", ".", "lambda_sal", "*", "train_full_sal_loss", "\n", "train_full_sal_loss", ".", "backward", "(", ")", "\n", "\n", "", "if", "train_full", ".", "lambda_adv", ":", "\n", "                    ", "if", "train_full_images", "is", "None", "or", "train_full_labels", "is", "None", ":", "\n", "                        ", "train_full_images", "=", "item", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "train_full_labels", "=", "item", "[", "'label'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "train_full_labels", ".", "unsqueeze_", "(", "dim", "=", "1", ")", "\n", "", "sal_pred_on_train_full_images", "=", "self", ".", "model", ".", "forward_G", "(", "train_full_images", ")", "\n", "sal_pred_on_train_full_images_sigmoid", "=", "torch", ".", "sigmoid", "(", "sal_pred_on_train_full_images", ")", "\n", "d_out", ",", "fo_d_out", "=", "self", ".", "model", ".", "forward_D", "(", "sal_pred_on_train_full_images_sigmoid", ")", "\n", "fake_image_list", ".", "append", "(", "sal_pred_on_train_full_images_sigmoid", ".", "detach", "(", ")", ")", "\n", "fake_with_gt_image", "=", "fake_image_list", "[", "-", "1", "]", "\n", "train_full_adv_loss", "=", "self", ".", "adv_loss_function", "(", "d_out", ",", "self", ".", "real_label", ")", "\n", "# train_full_adv_loss += self.adv_loss_function(fo_d_out, self.real_label)", "\n", "del", "fo_d_out", "\n", "loss_dict", "[", "'train_full_adv_loss'", "]", "=", "train_full_adv_loss", ".", "item", "(", ")", "\n", "train_full_adv_loss", "=", "train_full", ".", "lambda_adv", "*", "train_full_adv_loss", "\n", "train_full_adv_loss", ".", "backward", "(", ")", "\n", "\n", "# Training semi-supervised data", "\n", "", "", "train_semi_images", "=", "None", "\n", "if", "train_semi", "is", "not", "None", ":", "\n", "                ", "item", "=", "self", ".", "get_data", "(", "train_semi", ")", "\n", "if", "train_semi", ".", "lambda_sal", "and", "(", "train_semi", ".", "start_time", "is", "None", "or", "iter_time", ">", "train_semi", ".", "start_time", ")", ":", "\n", "                    ", "train_semi_images", "=", "item", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "sal_pred_on_train_semi_images", "=", "self", ".", "model", ".", "forward_G", "(", "train_semi_images", ")", "\n", "sal_pred_on_train_semi_images_sigmoid", "=", "torch", ".", "sigmoid", "(", "sal_pred_on_train_semi_images", ".", "detach", "(", ")", ")", "\n", "d_out", ",", "fo_d_out", "=", "self", ".", "model", ".", "forward_D", "(", "sal_pred_on_train_semi_images_sigmoid", ")", "\n", "sal_fake_label_on_train_semi_images", "=", "sal_pred_on_train_semi_images_sigmoid", ".", "gt_", "(", "0.5", ")", ".", "float", "(", ")", "\n", "weight", "=", "torch", ".", "sigmoid_", "(", "fo_d_out", ")", "\n", "if", "train_semi", ".", "lambda_adv", ":", "\n", "                        ", "ignore_index", "=", "weight", "<", "train_semi", ".", "mask_T", "\n", "sal_fake_label_on_train_semi_images", "[", "ignore_index", "]", "=", "self", ".", "ignore_value", "\n", "del", "ignore_index", "\n", "", "train_semi_sal_loss", "=", "self", ".", "sal_loss_function", "(", "sal_pred_on_train_semi_images", ",", "sal_fake_label_on_train_semi_images", ")", "\n", "loss_dict", "[", "'train_semi_sal_loss'", "]", "=", "train_semi_sal_loss", ".", "item", "(", ")", "\n", "train_semi_sal_loss", "=", "train_semi", ".", "lambda_sal", "*", "train_semi_sal_loss", "\n", "train_semi_sal_loss", ".", "backward", "(", ")", "\n", "del", "sal_fake_label_on_train_semi_images", "\n", "del", "sal_pred_on_train_semi_images_sigmoid", "\n", "del", "sal_pred_on_train_semi_images", "\n", "del", "d_out", "\n", "del", "fo_d_out", "\n", "del", "weight", "\n", "", "if", "train_semi", ".", "lambda_adv", ":", "\n", "                    ", "if", "train_semi_images", "is", "None", ":", "\n", "                        ", "train_semi_images", "=", "item", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "", "sal_pred_on_train_semi_images", "=", "self", ".", "model", ".", "forward_G", "(", "train_semi_images", ")", "\n", "sal_fake_label_on_train_semi_images", "=", "torch", ".", "sigmoid", "(", "sal_pred_on_train_semi_images", ")", "\n", "d_out", ",", "fo_d_out", "=", "self", ".", "model", ".", "forward_D", "(", "sal_fake_label_on_train_semi_images", ")", "\n", "fake_image_list", ".", "append", "(", "sal_fake_label_on_train_semi_images", ".", "detach", "(", ")", ")", "\n", "train_semi_adv_loss", "=", "self", ".", "adv_loss_function", "(", "d_out", ",", "self", ".", "real_label", ")", "\n", "# train_semi_adv_loss += self.adv_loss_function(fo_d_out, self.real_label)", "\n", "del", "fo_d_out", "\n", "loss_dict", "[", "'train_semi_adv_loss'", "]", "=", "train_semi_adv_loss", ".", "item", "(", ")", "\n", "train_semi_adv_loss", "=", "train_semi", ".", "lambda_adv", "*", "train_semi_adv_loss", "\n", "train_semi_adv_loss", ".", "backward", "(", ")", "\n", "\n", "# train D", "\n", "", "", "fake_image", "=", "None", "\n", "if", "len", "(", "fake_image_list", ")", "==", "0", ":", "\n", "                ", "pass", "\n", "", "elif", "len", "(", "fake_image_list", ")", "==", "1", ":", "\n", "                ", "fake_image", "=", "fake_image_list", "[", "0", "]", "\n", "", "elif", "len", "(", "fake_image_list", ")", "==", "2", ":", "\n", "                ", "fake_image", "=", "torch", ".", "cat", "(", "fake_image_list", ",", "dim", "=", "0", ")", "\n", "\n", "", "if", "fake_image", "is", "not", "None", "and", "self", ".", "train_gt_data", "is", "not", "None", ":", "\n", "                ", "self", ".", "model", ".", "discriminator", ".", "freeze_bp", "(", "False", ")", "\n", "if", "fake_with_gt_image", "is", "not", "None", ":", "\n", "                    ", "self", ".", "model", ".", "discriminator", ".", "freeze_encoder_bp", "(", "True", ")", "\n", "d_out_fake", ",", "fo_d_out_fake", "=", "self", ".", "model", ".", "forward_D", "(", "fake_image_list", "[", "0", "]", ")", "\n", "d_out_label", "=", "1", "-", "torch", ".", "abs", "(", "fake_with_gt_image", "-", "train_full_labels", ")", "\n", "d_out_loss_on_fake", "=", "self", ".", "adv_loss_function", "(", "fo_d_out_fake", "[", ":", "d_out_label", ".", "size", "(", "0", ")", "]", ",", "d_out_label", ")", "\n", "d_out_loss_on_fake", ".", "backward", "(", ")", "\n", "self", ".", "model", ".", "discriminator", ".", "freeze_encoder_bp", "(", "False", ")", "\n", "", "d_out_fake", ",", "fo_d_out_fake", "=", "self", ".", "model", ".", "forward_D", "(", "fake_image", ")", "\n", "d_out_loss_on_fake", "=", "self", ".", "adv_loss_function", "(", "d_out_fake", ",", "self", ".", "fake_label", ")", "\n", "d_out_loss_on_fake", ".", "backward", "(", ")", "\n", "loss_dict", "[", "'d_out_loss_on_fake'", "]", "=", "d_out_loss_on_fake", ".", "item", "(", ")", "\n", "item", "=", "self", ".", "get_data", "(", "self", ".", "train_gt_data", ")", "\n", "real_label", "=", "item", "[", "'label'", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "real_label", ".", "unsqueeze_", "(", "dim", "=", "1", ")", "\n", "d_out_true", ",", "fo_d_out_true", "=", "self", ".", "model", ".", "forward_D", "(", "real_label", ")", "\n", "d_out_loss_on_true", "=", "self", ".", "adv_loss_function", "(", "d_out_true", ",", "self", ".", "real_label", ")", "\n", "# d_out_loss_on_true += self.adv_loss_function(fo_d_out_true, self.real_label)", "\n", "d_out_loss_on_true", ".", "backward", "(", ")", "\n", "loss_dict", "[", "'d_out_loss_on_true'", "]", "=", "d_out_loss_on_true", ".", "item", "(", ")", "\n", "self", ".", "D_optim", ".", "step", "(", ")", "\n", "", "self", ".", "G_optim", ".", "step", "(", ")", "\n", "if", "self", ".", "visual_helper", "is", "not", "None", ":", "\n", "                ", "loss_list", ".", "append", "(", "loss_dict", ")", "\n", "self", ".", "visual_helper", ".", "add_timer", "(", ")", "\n", "if", "self", ".", "visual_helper", ".", "is_catch_snapshot", "(", ")", ":", "\n", "                    ", "info_dict", "=", "dict", "(", ")", "\n", "counter_dict", "=", "dict", "(", ")", "\n", "for", "item", "in", "loss_list", ":", "\n", "                        ", "for", "key", ",", "value", "in", "item", ".", "items", "(", ")", ":", "\n", "                            ", "info_dict", "[", "key", "]", "=", "info_dict", ".", "get", "(", "key", ",", "0.0", ")", "+", "info_dict", "[", "key", "]", "\n", "counter_dict", "[", "key", "]", "=", "info_dict", ".", "get", "(", "key", ",", "0.0", ")", "+", "1.0", "\n", "", "", "for", "key", ",", "value", "in", "info_dict", ".", "items", "(", ")", ":", "\n", "                        ", "info_dict", "[", "key", "]", "/=", "counter_dict", "[", "key", "]", "\n", "", "self", ".", "visual_helper", "(", "0", ",", "info_dict", ",", "None", ")", "\n", "loss_list", ".", "clear", "(", ")", "\n", "", "", "if", "self", ".", "model_saver", "is", "not", "None", ":", "\n", "                ", "self", ".", "model_saver", "(", "self", ".", "model", ".", "generator", ",", "save_base_name", "=", "'G'", ")", "\n", "self", ".", "model_saver", "(", "self", ".", "model", ".", "discriminator", ",", "save_base_name", "=", "'D'", ")", "\n", "\n", "", "", "if", "self", ".", "model_saver", "is", "not", "None", ":", "\n", "            ", "self", ".", "model_saver", "(", "self", ".", "model", ".", "generator", ",", "isFinal", "=", "True", ",", "save_base_name", "=", "'G'", ")", "\n", "self", ".", "model_saver", "(", "self", ".", "model", ".", "discriminator", ",", "isFinal", "=", "True", ",", "save_base_name", "=", "'D'", ")", "\n", "", "if", "self", ".", "visual_helper", "is", "not", "None", ":", "\n", "            ", "self", ".", "visual_helper", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.__init__": [[9, 14], ["object.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "catch_time_interval", ":", "int", ")", ":", "\n", "        ", "super", "(", "VisualHelper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_catch_time_interval", "=", "catch_time_interval", "\n", "self", ".", "_timer", "=", "0", "\n", "self", ".", "_catch_timer", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.add_timer": [[15, 17], ["None"], "methods", ["None"], ["", "def", "add_timer", "(", "self", ")", ":", "\n", "        ", "self", ".", "_timer", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.is_catch_snapshot": [[18, 23], ["None"], "methods", ["None"], ["", "def", "is_catch_snapshot", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_timer", "%", "self", ".", "_catch_time_interval", "==", "0", ":", "\n", "            ", "self", ".", "_catch_timer", "+=", "1", "\n", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.call": [[24, 27], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "call", "(", "self", ",", "epoch", ":", "int", ",", "avg_loss", ":", "float", ",", "show_image", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.close": [[28, 31], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "close", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.__call__": [[32, 34], ["visual_helper.VisualHelper.call"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.visual_helper.VisualHelper.call"], ["", "def", "__call__", "(", "self", ",", "epoch", ":", "int", ",", "avg_loss", ":", "float", ",", "preds", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "self", ".", "call", "(", "epoch", ",", "avg_loss", ",", "preds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.tester.Tester.__init__": [[18, 38], ["torch.device", "object.__init__", "helper.utils.mkdirs", "torch.load", "networks.Generator.Generator", "tester.Tester._model.load_state_dict", "tester.Tester._model.to", "tester.Tester._model.eval"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.mkdirs", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.eval"], ["def", "__init__", "(", "self", ",", "\n", "dataloader", ":", "DataLoader", ",", "\n", "img_save_path", ":", "str", ",", "\n", "model_pth_path", ":", "str", ",", "\n", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ",", "\n", "label_trans_func", ":", "LABEL_TRANS_FUNC", "=", "lambda", "x", ":", "x", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", ")", "->", "None", ":", "\n", "        ", "super", "(", "Tester", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "_dataloader", "=", "dataloader", "\n", "self", ".", "_img_save_path", "=", "img_save_path", "\n", "mkdirs", "(", "img_save_path", ")", "\n", "self", ".", "_device", "=", "device", "\n", "self", ".", "_label_transform_func", "=", "label_trans_func", "\n", "model_dict", "=", "torch", ".", "load", "(", "model_pth_path", ",", "map_location", "=", "'cpu'", ")", "\n", "self", ".", "_model", "=", "Net", "(", ")", "\n", "self", ".", "_model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "del", "model_dict", "\n", "self", ".", "_model", "=", "self", ".", "_model", ".", "to", "(", "device", ")", "\n", "self", ".", "_model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.tester.Tester.test": [[40, 54], ["len", "tqdm.tqdm.tqdm", "torch.no_grad", "item[].to", "tester.Tester._model().cpu", "tester.Tester._label_transform_func", "range", "helper.utils.pathjoin", "cv2.imwrite", "tqdm.tqdm.tqdm.update", "tqdm.tqdm.tqdm.set_description", "tester.Tester._model", "os.path.splitext"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "test", "(", "self", ")", "->", "None", ":", "\n", "        ", "dataset_len", "=", "len", "(", "self", ".", "_dataloader", ".", "dataset", ")", "\n", "pbar", "=", "tqdm", "(", "total", "=", "dataset_len", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "item", "in", "self", ".", "_dataloader", ":", "\n", "                ", "imgs", "=", "item", "[", "'image'", "]", ".", "to", "(", "self", ".", "_device", ")", "\n", "preds", "=", "self", ".", "_model", "(", "imgs", ")", ".", "cpu", "(", ")", "\n", "preds", "=", "self", ".", "_label_transform_func", "(", "preds", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "filename", "=", "os", ".", "path", ".", "splitext", "(", "item", "[", "'filename'", "]", "[", "i", "]", ")", "[", "0", "]", "+", "'.png'", "\n", "filepath", "=", "pathjoin", "(", "self", ".", "_img_save_path", ",", "filename", ")", "\n", "cv2", ".", "imwrite", "(", "filepath", ",", "preds", "[", "i", "]", ")", "\n", "pbar", ".", "update", "(", "1", ")", "\n", "pbar", ".", "set_description", "(", "\"Processing %s\"", "%", "filename", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.__init__": [[9, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "optimizer_create_func", ":", "Callable", ",", "\n", "total_iter_time", ":", "int", ",", "\n", "lr_schuduer", ":", "LR_SCHUDUER_FUNC", "=", "None", ",", "step_time_interval", "=", "1", ")", ":", "\n", "        ", "self", ".", "__step_time_interval", "=", "step_time_interval", "\n", "self", ".", "__timer", "=", "0", "\n", "self", ".", "__step_timer", "=", "0", "\n", "self", ".", "__optimizer_create_func", "=", "optimizer_create_func", "\n", "self", ".", "__lr_schuduer", "=", "lr_schuduer", "\n", "self", ".", "__total_iter_time", "=", "total_iter_time", "//", "self", ".", "__step_time_interval", "\n", "self", ".", "__lr", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.__call__": [[20, 24], ["optim.Optimizer.__optimizer_create_func", "optim.Optimizer.__optimizer.zero_grad"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "model", ":", "Module", ",", "lr", ":", "float", ")", ":", "\n", "        ", "self", ".", "__optimizer", "=", "self", ".", "__optimizer_create_func", "(", "model", ",", "lr", ")", "\n", "self", ".", "__optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "__lr", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.step_time_interval": [[25, 28], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "step_time_interval", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__step_time_interval", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.step": [[29, 38], ["optim.Optimizer.__optimizer.step", "optim.Optimizer.__optimizer.zero_grad", "optim.Optimizer.__lr_schuduer"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.optim.Optimizer.step"], ["", "def", "step", "(", "self", ")", ":", "\n", "        ", "self", ".", "__timer", "+=", "1", "\n", "if", "self", ".", "__timer", "%", "self", ".", "__step_time_interval", "==", "0", ":", "\n", "            ", "self", ".", "__step_timer", "+=", "1", "\n", "self", ".", "__optimizer", ".", "step", "(", ")", "\n", "self", ".", "__optimizer", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "__lr_schuduer", "is", "not", "None", ":", "\n", "                ", "self", ".", "__lr_schuduer", "(", "self", ".", "__optimizer", ",", "self", ".", "__lr", ",", "self", ".", "__step_timer", ",", "self", ".", "__total_iter_time", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.model_saver.ModelSaver.__init__": [[10, 22], ["helper.utils.mkdirs", "helper.utils.pathjoin", "time.strftime", "time.localtime"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.mkdirs"], ["    ", "def", "__init__", "(", "self", ",", "save_interval", ",", "save_dir_path", "=", "None", ",", "save_base_name", ":", "str", "=", "'model'", ")", ":", "\n", "        ", "self", ".", "__timer", "=", "0", "\n", "self", ".", "__save_interval", "=", "save_interval", "\n", "self", ".", "__save_dir_path", "=", "save_dir_path", "\n", "if", "self", ".", "__save_dir_path", "is", "None", ":", "\n", "            ", "self", ".", "__save_dir_path", "=", "pathjoin", "(", "\n", "'../'", ",", "\n", "time", ".", "strftime", "(", "\"%F %H-%M-%S\"", ",", "time", ".", "localtime", "(", ")", ")", "\n", ")", "\n", "", "mkdirs", "(", "self", ".", "__save_dir_path", ")", "\n", "self", ".", "__base_model_name", "=", "save_base_name", "\n", "self", ".", "__interval_timer", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.model_saver.ModelSaver.__call__": [[24, 37], ["helper.utils.pathjoin", "torch.save", "str", "model.state_dict"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "model", ":", "Module", ",", "isFinal", ":", "bool", "=", "False", ",", "save_base_name", "=", "None", ",", "is_add", "=", "True", ")", ":", "\n", "        ", "if", "is_add", ":", "\n", "            ", "self", ".", "__timer", "+=", "1", "\n", "", "if", "self", ".", "__timer", "%", "self", ".", "__save_interval", "==", "0", "or", "isFinal", ":", "\n", "            ", "self", ".", "__interval_timer", "+=", "1", "\n", "model_ext_name", "=", "'final'", "if", "isFinal", "else", "str", "(", "self", ".", "__interval_timer", ")", "\n", "if", "save_base_name", "is", "None", ":", "\n", "                ", "save_base_name", "=", "self", ".", "__base_model_name", "\n", "", "model_save_path", "=", "pathjoin", "(", "\n", "self", ".", "__save_dir_path", ",", "\n", "save_base_name", "+", "'-'", "+", "model_ext_name", "+", "'.pth'", "\n", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "model_save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.EasyDict.__init__": [[34, 35], ["dict.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "return", "self", "[", "name", "]", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.EasyDict.__getattr__": [[35, 36], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "name", ")", ":", "return", "self", "[", "name", "]", "\n", "def", "__setattr__", "(", "self", ",", "name", ",", "value", ")", ":", "self", "[", "name", "]", "=", "value", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.EasyDict.__setattr__": [[36, 37], ["None"], "methods", ["None"], ["def", "__setattr__", "(", "self", ",", "name", ",", "value", ")", ":", "self", "[", "name", "]", "=", "value", "\n", "def", "__delattr__", "(", "self", ",", "name", ")", ":", "del", "self", "[", "name", "]", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.EasyDict.__delattr__": [[37, 38], ["None"], "methods", ["None"], ["def", "__delattr__", "(", "self", ",", "name", ")", ":", "del", "self", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.dump_pkl_file": [[9, 14], ["os.path.dirname", "utils.mkdirs", "open", "pickle.dump"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.mkdirs"], ["def", "dump_pkl_file", "(", "obj", ",", "path", ")", ":", "\n", "    ", "dir_path", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "mkdirs", "(", "dir_path", ")", "\n", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "return", "pickle", ".", "dump", "(", "obj", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.load_pkl_file": [[15, 18], ["open", "pickle.load"], "function", ["None"], ["", "", "def", "load_pkl_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "return", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.mkdirs": [[19, 27], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "", "def", "mkdirs", "(", "dir_path", ":", "str", ")", ":", "\n", "    ", "\"\"\"\n    make the dictionary according to the dir_path\n    :param dir_path: the path of dir to be created\n    :return:\n    \"\"\"", "\n", "if", "not", "file_exist", "(", "dir_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.helper.utils.pandas2markdown": [[40, 52], ["pandas2markdown.writer.from_dataframe", "pandas2markdown.writer.dumps", "hasattr", "pytablewriter.MarkdownTableWriter"], "function", ["None"], ["", "def", "pandas2markdown", "(", "dataframe", ":", "pd", ".", "DataFrame", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    translate the Dataframe in pandas into Markdown table\n    :type dataframe: object\n    \"\"\"", "\n", "if", "not", "hasattr", "(", "pandas2markdown", ",", "'writer'", ")", ":", "\n", "        ", "pandas2markdown", ".", "writer", ":", "MarkdownTableWriter", "=", "MarkdownTableWriter", "(", ")", "\n", "", "pandas2markdown", ".", "writer", ".", "from_dataframe", "(", "\n", "dataframe", ",", "\n", "add_index_column", "=", "False", ",", "\n", ")", "\n", "return", "pandas2markdown", ".", "writer", ".", "dumps", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.EvalDataloader.EvalDataset.__init__": [[9, 41], ["list", "list", "os.listdir", "zip", "os.path.join", "os.path.join", "os.path.exists", "len", "cv2.imread", "cv2.imread", "EvalDataloader.EvalDataset.image_path.append", "EvalDataloader.EvalDataset.label_path.append", "os.path.exists", "EvalDataloader.EvalDataset.image_path.remove", "EvalDataloader.EvalDataset.label_path.remove", "os.path.splitext", "os.path.join", "os.path.exists", "EvalDataloader.EvalDataset.image_path.append", "EvalDataloader.EvalDataset.label_path.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_root", ",", "label_root", ")", ":", "\n", "        ", "self", ".", "image_path", "=", "list", "(", ")", "\n", "self", ".", "label_path", "=", "list", "(", ")", "\n", "exts", "=", "[", "'.jpg'", ",", "'.png'", ",", "'.bmp'", "]", "\n", "for", "image_name", "in", "os", ".", "listdir", "(", "label_root", ")", ":", "\n", "            ", "image_path", "=", "os", ".", "path", ".", "join", "(", "img_root", ",", "image_name", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "label_root", ",", "image_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", ":", "\n", "                ", "self", ".", "image_path", ".", "append", "(", "image_path", ")", "\n", "self", ".", "label_path", ".", "append", "(", "label_path", ")", "\n", "", "else", ":", "\n", "                ", "basename", "=", "os", ".", "path", ".", "splitext", "(", "image_name", ")", "[", "0", "]", "\n", "for", "ext", "in", "exts", ":", "\n", "                    ", "image_path", "=", "os", ".", "path", ".", "join", "(", "img_root", ",", "basename", "+", "ext", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", ":", "\n", "                        ", "break", "\n", "", "", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", ":", "\n", "                    ", "self", ".", "image_path", ".", "append", "(", "image_path", ")", "\n", "self", ".", "label_path", ".", "append", "(", "label_path", ")", "\n", "", "", "", "assert", "len", "(", "self", ".", "label_path", ")", "!=", "0", ",", "\"label's dir shouldn't be empty!\"", "\n", "del_num", "=", "0", "\n", "\n", "for", "image_path", ",", "label_path", "in", "zip", "(", "self", ".", "image_path", ",", "self", ".", "label_path", ")", ":", "\n", "            ", "pred", "=", "cv2", ".", "imread", "(", "image_path", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "gt", "=", "cv2", ".", "imread", "(", "label_path", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "\n", "if", "pred", ".", "shape", "!=", "gt", ".", "shape", ":", "\n", "                ", "self", ".", "image_path", ".", "remove", "(", "image_path", ")", "\n", "self", ".", "label_path", ".", "remove", "(", "label_path", ")", "\n", "del_num", "+=", "1", "\n", "\n", "", "", "assert", "(", "del_num", "<", "10", ")", ",", "\"to many pic is not paired\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.EvalDataloader.EvalDataset.__getitem__": [[42, 53], ["cv2.imread", "cv2.imread", "pred.astype.astype.astype", "gt.astype.astype.astype"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "pred", "=", "cv2", ".", "imread", "(", "self", ".", "image_path", "[", "item", "]", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "gt", "=", "cv2", ".", "imread", "(", "self", ".", "label_path", "[", "item", "]", ",", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "# if pred.shape != gt.shape:", "\n", "#     print(self.image_path[item],self.label_path[item],'is not paired')", "\n", "#     pred = cv2.resize(pred, gt.shape, interpolation=cv2.INTER_LINEAR)", "\n", "pred", "=", "pred", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt", "=", "gt", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pred", "/=", "255.0", "\n", "gt", "/=", "255.0", "\n", "return", "pred", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.EvalDataloader.EvalDataset.__len__": [[54, 56], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.EvalDataloader.EvalDataloader.__init__": [[60, 63], ["EvalDataloader.EvalDataset", "torch.utils.data.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_root", ",", "label_root", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "dataset", "=", "EvalDataset", "(", "img_root", ",", "label_root", ")", "\n", "super", "(", "EvalDataloader", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.Evaluator.Evaluator.__new__": [[14, 18], ["object.__new__", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.Evaluator.Evaluator.__new__"], ["def", "__new__", "(", "cls", ",", "*", "args", ",", "**", "kwargs", ")", "->", "object", ":", "\n", "        ", "if", "cls", ".", "indexes", "is", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"indexes property shoule be defined!\"", ")", "\n", "", "return", "super", "(", ")", ".", "__new__", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.Evaluator.Evaluator.__init__": [[19, 24], ["torch.device", "object.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["", "def", "__init__", "(", "self", ",", "dataloader", ":", "DataLoader", ",", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ":", "\n", "        ", "super", "(", "Evaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_dataloader", "=", "dataloader", "\n", "self", ".", "_device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.Evaluator.Evaluator.eval": [[25, 28], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "eval", "(", "self", ")", "->", "Dict", "[", "str", ",", "float", "or", "int", "]", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.FmeasueEval.FmeasueEval.__init__": [[15, 18], ["torch.device", "Evaluator.Evaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "dataloader", ":", "DataLoader", ",", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ":", "\n", "        ", "super", "(", "FmeasueEval", ",", "self", ")", ".", "__init__", "(", "dataloader", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.FmeasueEval.FmeasueEval.eval": [[19, 57], ["torch.no_grad", "preds.to.to.to", "labels.to.to.to", "preds.to.to.size", "range", "score.max().item", "score.mean().item", "FmeasueEval.FmeasueEval._eval_pr", "precs.cpu().view().numpy", "recalls.cpu().view().numpy", "score.max", "score.mean", "precs.cpu().view", "recalls.cpu().view", "precs.cpu", "recalls.cpu"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.FmeasueEval.FmeasueEval._eval_pr"], ["", "def", "eval", "(", "self", ")", "->", "Dict", "[", "str", ",", "float", "]", ":", "\n", "        ", "\"\"\"\n        calculate the F-measure score\n        :return: the max F-measure score and the mean F-measure score\n        \"\"\"", "\n", "beta2", "=", "0.3", "\n", "avg_f", ",", "img_num", "=", "0.0", ",", "0.0", "\n", "precs", "=", "0.0", "\n", "recalls", "=", "0.0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "preds", ",", "labels", "in", "self", ".", "_dataloader", ":", "\n", "                ", "preds", "=", "preds", ".", "to", "(", "self", ".", "_device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "_device", ")", "\n", "b", "=", "preds", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "                    ", "pred", "=", "preds", "[", "i", "]", "\n", "gt", "=", "labels", "[", "i", "]", "\n", "prec", ",", "recall", "=", "self", ".", "_eval_pr", "(", "pred", ",", "gt", ",", "256", ")", "\n", "recall", "[", "recall", "!=", "recall", "]", "=", "0.0", "\n", "prec", "[", "prec", "!=", "prec", "]", "=", "0.0", "\n", "precs", "+=", "prec", "\n", "recalls", "+=", "recall", "\n", "img_num", "+=", "1", "\n", "", "", "", "if", "img_num", "!=", "0.0", ":", "\n", "            ", "f_score", "=", "(", "1", "+", "beta2", ")", "*", "precs", "*", "recalls", "/", "(", "beta2", "*", "precs", "+", "recalls", ")", "\n", "score", "=", "f_score", "/", "img_num", "\n", "return", "{", "\n", "\"max-F\"", ":", "score", ".", "max", "(", ")", ".", "item", "(", ")", ",", "\n", "\"mean-F\"", ":", "score", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "\n", "\"precision\"", ":", "precs", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ".", "numpy", "(", ")", "/", "img_num", ",", "\n", "\"recall\"", ":", "recalls", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ")", ".", "numpy", "(", ")", "/", "img_num", ",", "\n", "}", "\n", "", "else", ":", "\n", "            ", "return", "{", "\n", "\"max-F\"", ":", "0.0", ",", "\n", "\"mean-F\"", ":", "0.0", ",", "\n", "\"precision\"", ":", "None", ",", "\n", "\"recall\"", ":", "None", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.FmeasueEval.FmeasueEval._eval_pr": [[60, 70], ["torch.linspace().to", "range", "torch.zeros().to", "torch.zeros().to", "torch.linspace", "torch.zeros", "torch.zeros", "y_temp.byte().sum().float", "gt.byte().sum().float", "y_temp.byte().sum", "gt.byte().sum", "y_temp.byte", "gt.byte"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "", "def", "_eval_pr", "(", "self", ",", "y_pred", ",", "y", ",", "num", ")", ":", "\n", "        ", "prec", ",", "recall", "=", "torch", ".", "zeros", "(", "num", ")", ".", "to", "(", "self", ".", "_device", ")", ",", "torch", ".", "zeros", "(", "num", ")", ".", "to", "(", "self", ".", "_device", ")", "\n", "thlist", "=", "torch", ".", "linspace", "(", "0", ",", "1.0", ",", "num", ")", ".", "to", "(", "self", ".", "_device", ")", "\n", "gt", "=", "(", "y", ">", "thlist", "[", "num", "//", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "            ", "y_temp", "=", "(", "y_pred", ">", "thlist", "[", "i", "]", ")", "\n", "tp", "=", "(", "y_temp", "&", "gt", ")", ".", "byte", "(", ")", ".", "sum", "(", ")", ".", "float", "(", ")", "\n", "prec", "[", "i", "]", "=", "(", "tp", "+", "1e-5", ")", "/", "(", "y_temp", ".", "byte", "(", ")", ".", "sum", "(", ")", ".", "float", "(", ")", "+", "1e-5", ")", "\n", "recall", "[", "i", "]", "=", "(", "tp", "+", "1e-5", ")", "/", "(", "gt", ".", "byte", "(", ")", ".", "sum", "(", ")", ".", "float", "(", ")", "+", "1e-5", ")", "\n", "", "return", "prec", ",", "recall", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval.__init__": [[16, 19], ["torch.device", "Evaluator.Evaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "dataloader", ":", "DataLoader", ",", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ":", "\n", "        ", "super", "(", "SMeasureEval", ",", "self", ")", ".", "__init__", "(", "dataloader", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval.eval": [[20, 49], ["torch.no_grad", "preds.to.to.to", "labels.to.to.to", "preds.to.to.size", "range", "gt.mean", "torch.FloatTensor.item", "pred.mean", "pred.mean", "torch.FloatTensor.item", "torch.FloatTensor", "SMeasureEval.SMeasureEval._S_object", "SMeasureEval.SMeasureEval._S_region"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._S_object", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._S_region"], ["", "def", "eval", "(", "self", ")", "->", "Dict", "[", "str", ",", "float", "]", ":", "\n", "        ", "alpha", ",", "avg_q", ",", "img_num", "=", "0.5", ",", "0.0", ",", "0.0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "preds", ",", "labels", "in", "self", ".", "_dataloader", ":", "\n", "                ", "preds", "=", "preds", ".", "to", "(", "self", ".", "_device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "_device", ")", "\n", "b", "=", "preds", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "                    ", "pred", "=", "preds", "[", "i", "]", "\n", "gt", "=", "labels", "[", "i", "]", "\n", "y", "=", "gt", ".", "mean", "(", ")", "\n", "if", "y", "==", "0", ":", "\n", "                        ", "x", "=", "pred", ".", "mean", "(", ")", "\n", "Q", "=", "1.0", "-", "x", "\n", "", "elif", "y", "==", "1", ":", "\n", "                        ", "x", "=", "pred", ".", "mean", "(", ")", "\n", "Q", "=", "x", "\n", "", "else", ":", "\n", "                        ", "gt", "[", "gt", ">=", "0.5", "]", "=", "1", "\n", "gt", "[", "gt", "<", "0.5", "]", "=", "0", "\n", "Q", "=", "alpha", "*", "self", ".", "_S_object", "(", "pred", ",", "gt", ")", "+", "(", "1", "-", "alpha", ")", "*", "self", ".", "_S_region", "(", "pred", ",", "gt", ")", "\n", "if", "Q", ".", "item", "(", ")", "<", "0", ":", "\n", "                            ", "Q", "=", "torch", ".", "FloatTensor", "(", "[", "0.0", "]", ")", "\n", "", "", "img_num", "+=", "1.0", "\n", "avg_q", "+=", "Q", ".", "item", "(", ")", "\n", "", "", "avg_q", "/=", "img_num", "\n", "", "if", "img_num", "==", "0", ":", "\n", "            ", "return", "{", "\"S\"", ":", "0.0", "}", "\n", "", "return", "{", "\"S\"", ":", "avg_q", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._S_object": [[50, 58], ["torch.where", "torch.where", "SMeasureEval.SMeasureEval._object", "SMeasureEval.SMeasureEval._object", "gt.mean", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._object", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._object"], ["", "def", "_S_object", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "fg", "=", "torch", ".", "where", "(", "gt", "==", "0.0", ",", "torch", ".", "zeros_like", "(", "pred", ")", ",", "pred", ")", "\n", "bg", "=", "torch", ".", "where", "(", "gt", "==", "1.0", ",", "torch", ".", "zeros_like", "(", "pred", ")", ",", "1", "-", "pred", ")", "\n", "o_fg", "=", "self", ".", "_object", "(", "fg", ",", "gt", ")", "\n", "o_bg", "=", "self", ".", "_object", "(", "bg", ",", "1", "-", "gt", ")", "\n", "u", "=", "gt", ".", "mean", "(", ")", "\n", "Q", "=", "u", "*", "o_fg", "+", "(", "1", "-", "u", ")", "*", "o_bg", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._object": [[59, 66], ["temp.mean", "temp.std"], "methods", ["None"], ["", "def", "_object", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "temp", "=", "pred", "[", "gt", "==", "1", "]", "\n", "x", "=", "temp", ".", "mean", "(", ")", "\n", "sigma_x", "=", "temp", ".", "std", "(", ")", "\n", "score", "=", "2.0", "*", "x", "/", "(", "x", "*", "x", "+", "1.0", "+", "sigma_x", "+", "1e-20", ")", "\n", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._S_region": [[67, 78], ["SMeasureEval.SMeasureEval._centroid", "SMeasureEval.SMeasureEval._divideGT", "SMeasureEval.SMeasureEval._dividePrediction", "SMeasureEval.SMeasureEval._ssim", "SMeasureEval.SMeasureEval._ssim", "SMeasureEval.SMeasureEval._ssim", "SMeasureEval.SMeasureEval._ssim"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._centroid", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._divideGT", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._dividePrediction", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._ssim", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._ssim", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._ssim", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._ssim"], ["", "def", "_S_region", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "X", ",", "Y", "=", "self", ".", "_centroid", "(", "gt", ")", "\n", "gt1", ",", "gt2", ",", "gt3", ",", "gt4", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "=", "self", ".", "_divideGT", "(", "gt", ",", "X", ",", "Y", ")", "\n", "p1", ",", "p2", ",", "p3", ",", "p4", "=", "self", ".", "_dividePrediction", "(", "pred", ",", "X", ",", "Y", ")", "\n", "Q1", "=", "self", ".", "_ssim", "(", "p1", ",", "gt1", ")", "\n", "Q2", "=", "self", ".", "_ssim", "(", "p2", ",", "gt2", ")", "\n", "Q3", "=", "self", ".", "_ssim", "(", "p3", ",", "gt3", ")", "\n", "Q4", "=", "self", ".", "_ssim", "(", "p4", ",", "gt4", ")", "\n", "Q", "=", "w1", "*", "Q1", "+", "w2", "*", "Q2", "+", "w3", "*", "Q3", "+", "w4", "*", "Q4", "\n", "\n", "return", "Q", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._centroid": [[79, 92], ["gt.view.view.view", "gt.view.view.size", "gt.view.view.sum", "gt.view.view.sum", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.round", "torch.round", "torch.round.long", "torch.round.long", "torch.eye().to", "round", "torch.eye().to", "round", "torch.from_numpy().to", "torch.from_numpy().to", "torch.eye", "torch.eye", "torch.from_numpy", "torch.from_numpy", "numpy.arange", "numpy.arange", "gt.view.view.sum", "gt.view.view.sum"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "_centroid", "(", "self", ",", "gt", ")", ":", "\n", "        ", "rows", ",", "cols", "=", "gt", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "gt", "=", "gt", ".", "view", "(", "rows", ",", "cols", ")", "\n", "if", "gt", ".", "sum", "(", ")", "==", "0", ":", "\n", "            ", "X", "=", "torch", ".", "eye", "(", "1", ")", ".", "to", "(", "self", ".", "_device", ")", "*", "round", "(", "cols", "/", "2", ")", "\n", "Y", "=", "torch", ".", "eye", "(", "1", ")", ".", "to", "(", "self", ".", "_device", ")", "*", "round", "(", "rows", "/", "2", ")", "\n", "", "else", ":", "\n", "            ", "total", "=", "gt", ".", "sum", "(", ")", "\n", "i", "=", "torch", ".", "from_numpy", "(", "np", ".", "arange", "(", "0", ",", "cols", ")", ")", ".", "to", "(", "self", ".", "_device", ")", ".", "float", "(", ")", "\n", "j", "=", "torch", ".", "from_numpy", "(", "np", ".", "arange", "(", "0", ",", "rows", ")", ")", ".", "to", "(", "self", ".", "_device", ")", ".", "float", "(", ")", "\n", "X", "=", "torch", ".", "round", "(", "(", "gt", ".", "sum", "(", "dim", "=", "0", ")", "*", "i", ")", ".", "sum", "(", ")", "/", "total", ")", "\n", "Y", "=", "torch", ".", "round", "(", "(", "gt", ".", "sum", "(", "dim", "=", "1", ")", "*", "j", ")", ".", "sum", "(", ")", "/", "total", ")", "\n", "", "return", "X", ".", "long", "(", ")", ",", "Y", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._dividePrediction": [[93, 101], ["pred.view.view.view", "pred.view.view.size"], "methods", ["None"], ["", "def", "_dividePrediction", "(", "self", ",", "pred", ",", "X", ",", "Y", ")", ":", "\n", "        ", "h", ",", "w", "=", "pred", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "pred", "=", "pred", ".", "view", "(", "h", ",", "w", ")", "\n", "LT", "=", "pred", "[", ":", "Y", ",", ":", "X", "]", "\n", "RT", "=", "pred", "[", ":", "Y", ",", "X", ":", "w", "]", "\n", "LB", "=", "pred", "[", "Y", ":", "h", ",", ":", "X", "]", "\n", "RB", "=", "pred", "[", "Y", ":", "h", ",", "X", ":", "w", "]", "\n", "return", "LT", ",", "RT", ",", "LB", ",", "RB", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._divideGT": [[102, 117], ["gt.view.view.view", "X.float.float.float", "Y.float.float.float", "gt.view.view.size"], "methods", ["None"], ["", "def", "_divideGT", "(", "self", ",", "gt", ",", "X", ",", "Y", ")", ":", "\n", "        ", "h", ",", "w", "=", "gt", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "area", "=", "h", "*", "w", "\n", "gt", "=", "gt", ".", "view", "(", "h", ",", "w", ")", "\n", "LT", "=", "gt", "[", ":", "Y", ",", ":", "X", "]", "\n", "RT", "=", "gt", "[", ":", "Y", ",", "X", ":", "w", "]", "\n", "LB", "=", "gt", "[", "Y", ":", "h", ",", ":", "X", "]", "\n", "RB", "=", "gt", "[", "Y", ":", "h", ",", "X", ":", "w", "]", "\n", "X", "=", "X", ".", "float", "(", ")", "\n", "Y", "=", "Y", ".", "float", "(", ")", "\n", "w1", "=", "X", "*", "Y", "/", "area", "\n", "w2", "=", "(", "w", "-", "X", ")", "*", "Y", "/", "area", "\n", "w3", "=", "X", "*", "(", "h", "-", "Y", ")", "/", "area", "\n", "w4", "=", "1", "-", "w1", "-", "w2", "-", "w3", "\n", "return", "LT", ",", "RT", ",", "LB", ",", "RB", ",", "w1", ",", "w2", ",", "w3", ",", "w4", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.SMeasureEval.SMeasureEval._ssim": [[118, 138], ["gt.float.float.float", "pred.mean", "gt.float.float.mean", "pred.size"], "methods", ["None"], ["", "def", "_ssim", "(", "self", ",", "pred", ",", "gt", ")", ":", "\n", "        ", "gt", "=", "gt", ".", "float", "(", ")", "\n", "h", ",", "w", "=", "pred", ".", "size", "(", ")", "[", "-", "2", ":", "]", "\n", "N", "=", "h", "*", "w", "\n", "x", "=", "pred", ".", "mean", "(", ")", "\n", "y", "=", "gt", ".", "mean", "(", ")", "\n", "sigma_x2", "=", "(", "(", "pred", "-", "x", ")", "*", "(", "pred", "-", "x", ")", ")", ".", "sum", "(", ")", "/", "(", "N", "-", "1", "+", "1e-20", ")", "\n", "sigma_y2", "=", "(", "(", "gt", "-", "y", ")", "*", "(", "gt", "-", "y", ")", ")", ".", "sum", "(", ")", "/", "(", "N", "-", "1", "+", "1e-20", ")", "\n", "sigma_xy", "=", "(", "(", "pred", "-", "x", ")", "*", "(", "gt", "-", "y", ")", ")", ".", "sum", "(", ")", "/", "(", "N", "-", "1", "+", "1e-20", ")", "\n", "\n", "aplha", "=", "4", "*", "x", "*", "y", "*", "sigma_xy", "\n", "beta", "=", "(", "x", "*", "x", "+", "y", "*", "y", ")", "*", "(", "sigma_x2", "+", "sigma_y2", ")", "\n", "\n", "if", "aplha", "!=", "0", ":", "\n", "            ", "Q", "=", "aplha", "/", "(", "beta", "+", "1e-20", ")", "\n", "", "elif", "aplha", "==", "0", "and", "beta", "==", "0", ":", "\n", "            ", "Q", "=", "1.0", "\n", "", "else", ":", "\n", "            ", "Q", "=", "0", "\n", "", "return", "Q", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.__init__.get_measure": [[17, 45], ["torch.device", "dict", "EvalDataloader.EvalDataloader", "tqdm.tqdm", "tqdm.tqdm.set_description", "tqdm.tqdm.set_description", "tqdm.tqdm.update", "len", "ret_dict.update", "list", "supported_measure_dict.keys"], "function", ["None"], []], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.MAEEval.MAEEval.__init__": [[15, 18], ["torch.device", "Evaluator.Evaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "dataloader", ":", "DataLoader", ",", "device", ":", "torch", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", ":", "\n", "        ", "super", "(", "MAEEval", ",", "self", ")", ".", "__init__", "(", "dataloader", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.evaluator_tool.MAEEval.MAEEval.eval": [[20, 47], ["torch.no_grad", "avg_mae.item", "preds.to.to.to", "labels.to.to.to", "preds.to.to.size", "range", "float", "torch.abs().mean", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "eval", "(", "self", ")", "->", "Dict", "[", "str", ",", "float", "]", ":", "\n", "        ", "avg_mae", ",", "img_num", "=", "0.0", ",", "0.0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "preds", ",", "labels", "in", "self", ".", "_dataloader", ":", "\n", "                ", "preds", "=", "preds", ".", "to", "(", "self", ".", "_device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "self", ".", "_device", ")", "\n", "b", "=", "preds", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "                    ", "pred", "=", "preds", "[", "i", "]", "\n", "gt", "=", "labels", "[", "i", "]", "\n", "mea", "=", "torch", ".", "abs", "(", "pred", "-", "gt", ")", ".", "mean", "(", ")", "\n", "\"\"\"\n                    help:\n                    ```\n                    c = torch.from_numpy(np.array([np.inf]))\n                    a = c-c\n                    print(a == a)\n                    ```\n                    Out: tensor([0], dtype=torch.uint8)\n                    \"\"\"", "\n", "if", "mea", "==", "mea", ":", "# for Nan", "\n", "                        ", "avg_mae", "+=", "mea", "\n", "img_num", "+=", "1.0", "\n", "", "", "", "", "if", "img_num", "==", "0.0", ":", "\n", "            ", "return", "{", "\"MAE\"", ":", "float", "(", "\"inf\"", ")", "}", "\n", "", "avg_mae", "/=", "img_num", "\n", "return", "{", "\"MAE\"", ":", "avg_mae", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.dataset.file_table.get_dataset_path_by_name": [[7, 29], ["os.path.dirname", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "dict", "NameError"], "function", ["None"], ["def", "get_dataset_path_by_name", "(", "dataset_name", ":", "str", ")", "->", "Dict", "[", "str", ",", "str", "]", ":", "\n", "    ", "root_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "if", "dataset_name", "not", "in", "\"DUT-OMRON DUTS PASCAL-S SOD\"", ".", "split", "(", "\" \"", ")", ":", "\n", "        ", "raise", "NameError", "(", "f\"the dataset {dataset_name} are not be supported\"", ")", "\n", "", "train_dir_name", "=", "''", "\n", "test_dir_name", "=", "''", "\n", "train_lst_name", "=", "'train.lst'", "\n", "test_lst_name", "=", "'test.lst'", "\n", "if", "dataset_name", "==", "\"DUTS\"", ":", "\n", "        ", "train_dir_name", "=", "'DUTS-TR'", "\n", "test_dir_name", "=", "'DUTS-TE'", "\n", "", "train_dir_path", "=", "pathjoin", "(", "root_dir", ",", "dataset_name", ",", "train_dir_name", ")", "\n", "test_dir_path", "=", "pathjoin", "(", "root_dir", ",", "dataset_name", ",", "test_dir_name", ")", "\n", "train_lst_path", "=", "pathjoin", "(", "train_dir_path", ",", "train_lst_name", ")", "\n", "test_lst_path", "=", "pathjoin", "(", "test_dir_path", ",", "test_lst_name", ")", "\n", "return", "dict", "(", "\n", "train_dir_path", "=", "train_dir_path", ",", "\n", "train_lst_path", "=", "train_lst_path", ",", "\n", "test_dir_path", "=", "test_dir_path", ",", "\n", "test_lst_path", "=", "test_lst_path", ",", "\n", "train_dir_name", "=", "train_dir_name", ",", "\n", "test_dir_name", "=", "test_dir_name", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.Classifier_Module.__init__": [[14, 25], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "zip", "UNet_D.Classifier_Module.conv2d_list.append", "m.weight.data.normal_", "Conv2d"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "num_classes", ",", "dilation_series", ",", "padding_series", ")", ":", "\n", "        ", "super", "(", "Classifier_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv2d_list", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "dilation", ",", "padding", "in", "zip", "(", "dilation_series", ",", "padding_series", ")", ":", "\n", "            ", "self", ".", "conv2d_list", ".", "append", "(", "\n", "Conv2d", "(", "in_channel", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "\n", "bias", "=", "True", ")", "\n", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "conv2d_list", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.Classifier_Module.forward": [[26, 31], ["range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv2d_list", "[", "0", "]", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "conv2d_list", ")", "-", "1", ")", ":", "\n", "            ", "out", "+=", "self", ".", "conv2d_list", "[", "i", "+", "1", "]", "(", "x", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.__init__": [[35, 74], ["torch.Module.__init__", "Conv2d", "Conv2d", "Conv2d", "Conv2d", "UNet_D.Classifier_Module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "UNet_D.FCDiscriminator.trans_modules.append", "UNet_D.FCDiscriminator.trans_modules.append", "UNet_D.FCDiscriminator.trans_modules.append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "UNet_D.FCDiscriminator.concat_trans_modules.append", "UNet_D.FCDiscriminator.concat_trans_modules.append", "UNet_D.FCDiscriminator.concat_trans_modules.append", "Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ndf", "=", "64", ")", ":", "\n", "        ", "super", "(", "FCDiscriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "Conv2d", "(", "1", ",", "ndf", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "Conv2d", "(", "ndf", ",", "ndf", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv3", "=", "Conv2d", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv4", "=", "Conv2d", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "ASPP", "=", "Classifier_Module", "(", "ndf", "*", "8", ",", "64", ",", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "[", "6", ",", "12", ",", "18", ",", "24", "]", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "64", ",", "1", ")", "\n", "self", ".", "leaky_relu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "trans_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "ndf", "*", "4", ",", "64", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "self", ".", "trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "ndf", "*", "2", ",", "64", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "self", ".", "trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "ndf", ",", "32", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "\n", "self", ".", "concat_trans_modules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "concat_trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "self", ".", "concat_trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "self", ".", "concat_trans_modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "Conv2d", "(", "64", "+", "32", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.1", ",", "inplace", "=", "True", ")", "\n", ")", ")", "\n", "self", ".", "score", "=", "Conv2d", "(", "64", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_encoder_bp": [[76, 80], ["module.parameters", "p.requires_grad_"], "methods", ["None"], ["", "def", "freeze_encoder_bp", "(", "self", ",", "is_freeze", ":", "bool", ")", ":", "\n", "        ", "for", "module", "in", "(", "self", ".", "conv1", ",", "self", ".", "conv2", ",", "self", ".", "conv3", ",", "self", ".", "conv4", ",", "self", ".", "ASPP", ",", "self", ".", "linear", ")", ":", "\n", "            ", "for", "p", "in", "module", ".", "parameters", "(", ")", ":", "\n", "                ", "p", ".", "requires_grad_", "(", "not", "is_freeze", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.freeze_bp": [[82, 85], ["UNet_D.FCDiscriminator.parameters", "p.requires_grad_"], "methods", ["None"], ["", "", "", "def", "freeze_bp", "(", "self", ",", "is_freeze", ":", "bool", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad_", "(", "not", "is_freeze", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.UNet_D.FCDiscriminator.forward": [[86, 121], ["UNet_D.FCDiscriminator.conv1", "UNet_D.FCDiscriminator.leaky_relu", "out_list.append", "UNet_D.FCDiscriminator.conv2", "UNet_D.FCDiscriminator.leaky_relu", "out_list.append", "UNet_D.FCDiscriminator.conv3", "UNet_D.FCDiscriminator.leaky_relu", "out_list.append", "UNet_D.FCDiscriminator.conv4", "UNet_D.FCDiscriminator.leaky_relu", "UNet_D.FCDiscriminator.ASPP", "UNet_D.FCDiscriminator.leaky_relu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "gsp_out.squeeze.squeeze.squeeze", "UNet_D.FCDiscriminator.linear", "zip", "UNet_D.FCDiscriminator.score", "torch.interpolate", "torch.interpolate", "torch.interpolate", "reversed", "trans_module", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "concat_trans_module"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "is_only_encoder", "=", "False", ")", ":", "\n", "        ", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "out_list", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "out_list", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "conv2_out", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "out_list", ".", "append", "(", "conv2_out", ")", "\n", "x", "=", "self", ".", "conv3", "(", "conv2_out", ")", "\n", "conv3_out", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "out_list", ".", "append", "(", "conv3_out", ")", "\n", "\n", "x", "=", "self", ".", "conv4", "(", "conv3_out", ")", "\n", "conv4_out", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "x", "=", "self", ".", "ASPP", "(", "conv4_out", ")", "\n", "aspp_out", "=", "self", ".", "leaky_relu", "(", "x", ")", "\n", "gsp_out", "=", "torch", ".", "sum", "(", "aspp_out", ",", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "gsp_out", "=", "gsp_out", ".", "squeeze", "(", ")", "\n", "out", "=", "self", ".", "linear", "(", "gsp_out", ")", "\n", "if", "is_only_encoder", ":", "\n", "            ", "del", "out_list", "\n", "return", "out", "\n", "", "x1", "=", "aspp_out", "\n", "\n", "for", "sub_out", ",", "concat_trans_module", ",", "trans_module", "in", "zip", "(", "reversed", "(", "out_list", ")", ",", "self", ".", "concat_trans_modules", ",", "self", ".", "trans_modules", ")", ":", "\n", "            ", "x2", "=", "trans_module", "(", "sub_out", ")", "\n", "x1", "=", "F", ".", "interpolate", "(", "x1", ",", "size", "=", "x2", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x1", ",", "x2", "]", ",", "dim", "=", "1", ")", "\n", "x1", "=", "concat_trans_module", "(", "x", ")", "\n", "\n", "", "full_out", "=", "self", ".", "score", "(", "x1", ")", "\n", "full_out", "=", "F", ".", "interpolate", "(", "full_out", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "return", "out", ",", "full_out", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.__init__": [[8, 17], ["torch.device", "torch.device", "torch.device", "torch.device", "networks.Generator.Generator", "networks.UNet_D.FCDiscriminator", "GAN_Unet.GAN.generator.to", "GAN_Unet.GAN.discriminator.to", "GAN_Unet.GAN.train", "GAN_Unet.GAN._load_generator_weight"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN._load_generator_weight"], ["    ", "def", "__init__", "(", "self", ",", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ",", "G_pth_path", "=", "None", ")", ":", "\n", "        ", "self", ".", "generator", ":", "Generator", "=", "Generator", "(", ")", "\n", "self", ".", "discriminator", "=", "FCDiscriminator", "(", ")", "\n", "if", "G_pth_path", "is", "not", "None", ":", "\n", "            ", "self", ".", "_load_generator_weight", "(", "G_pth_path", ")", "\n", "", "self", ".", "device", "=", "device", "\n", "self", ".", "generator", ".", "to", "(", "device", ")", "\n", "self", ".", "discriminator", ".", "to", "(", "device", ")", "\n", "self", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train": [[18, 22], ["GAN_Unet.GAN.generator.train", "GAN_Unet.GAN.discriminator.train"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.train"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "generator", ".", "train", "(", ")", "\n", "self", ".", "discriminator", ".", "train", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.eval": [[23, 27], ["GAN_Unet.GAN.generator.eval", "GAN_Unet.GAN.discriminator.eval"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.eval", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.eval"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "generator", ".", "eval", "(", ")", "\n", "self", ".", "discriminator", ".", "eval", "(", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to": [[28, 32], ["GAN_Unet.GAN.discriminator.to", "GAN_Unet.GAN.generator.to"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], ["", "def", "to", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "to", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "generator", ".", "to", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN._load_generator_weight": [[33, 35], ["GAN_Unet.GAN.generator.load_weight"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.Generator.Generator.load_weight"], ["", "def", "_load_generator_weight", "(", "self", ",", "pth_path", ")", ":", "\n", "        ", "return", "self", ".", "generator", ".", "load_weight", "(", "pth_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_G": [[36, 38], ["GAN_Unet.GAN.generator"], "methods", ["None"], ["", "def", "forward_G", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "generator", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.forward_D": [[39, 41], ["GAN_Unet.GAN.discriminator"], "methods", ["None"], ["", "def", "forward_D", "(", "self", ",", "x", ",", "is_only_encoder", "=", "False", ")", ":", "\n", "        ", "return", "self", ".", "discriminator", "(", "x", ",", "is_only_encoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.apply": [[43, 46], ["GAN_Unet.GAN.discriminator.apply", "GAN_Unet.GAN.generator.apply"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.apply", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.apply"], ["", "def", "apply", "(", "self", ",", "callback", ")", ":", "\n", "        ", "self", ".", "discriminator", ".", "apply", "(", "callback", ")", "\n", "self", ".", "generator", ".", "apply", "(", "callback", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.Generator.Generator.__init__": [[13, 24], ["torch.Module.__init__", "base_model.ResNet.resnet101", "base_model.Classifier.Classifier_Module", "Generator.Generator.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.resnet101"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "Resnet", "(", ")", "\n", "self", ".", "aspp", "=", "Classifier", "(", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "[", "6", ",", "12", ",", "18", ",", "24", "]", ",", "1", ")", "\n", "# Default initialization method", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "", "def", "load_weight", "(", "self", ",", "pth_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.Generator.Generator.load_weight": [[24, 35], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "Generator.Generator.base_model.state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "Generator.Generator.update", "Generator.Generator.base_model.load_state_dict", "print", "open", "torch.load.items", "torch.load.items", "torch.load.items"], "methods", ["None"], ["", "", "", "def", "load_weight", "(", "self", ",", "pth_path", ")", ":", "\n", "        ", "cpu_device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "model_dict", "=", "self", ".", "base_model", ".", "state_dict", "(", ")", "\n", "old_dict", "=", "torch", ".", "load", "(", "open", "(", "pth_path", ",", "'rb'", ")", ",", "map_location", "=", "cpu_device", ")", "\n", "old_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "old_dict", ".", "items", "(", ")", "if", "(", "k", "in", "model_dict", ")", "}", "\n", "model_dict", ".", "update", "(", "old_dict", ")", "\n", "self", ".", "base_model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "del", "old_dict", "\n", "del", "model_dict", "\n", "print", "(", "f'load {pth_path} success!'", ")", "\n", "return", "True", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.Generator.Generator.forward": [[35, 39], ["Generator.Generator.base_model", "Generator.Generator.aspp", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "base_model_out", "=", "self", ".", "base_model", "(", "x", ")", "\n", "out", "=", "self", ".", "aspp", "(", "base_model_out", ")", "\n", "return", "F", ".", "interpolate", "(", "out", ",", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.BasicBlock.__init__": [[19, 28], ["torch.nn.Module.__init__", "ResNet.conv3x3", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "ResNet.conv3x3", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.conv3x3", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "_affine_par", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "_affine_par", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.BasicBlock.forward": [[29, 46], ["ResNet.BasicBlock.conv1", "ResNet.BasicBlock.bn1", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.conv2", "ResNet.BasicBlock.bn2", "ResNet.BasicBlock.relu", "ResNet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.Bottleneck.__init__": [[51, 71], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "ResNet.Bottleneck.bn1.parameters", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "ResNet.Bottleneck.bn2.parameters", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "ResNet.Bottleneck.bn3.parameters", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "_affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn1", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "\n", "", "padding", "=", "dilation", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "# change", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "_affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn2", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ",", "affine", "=", "_affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn3", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.Bottleneck.forward": [[72, 93], ["ResNet.Bottleneck.conv1", "ResNet.Bottleneck.bn1", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv2", "ResNet.Bottleneck.bn2", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.conv3", "ResNet.Bottleneck.bn3", "ResNet.Bottleneck.relu", "ResNet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet.__init__": [[100, 122], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "ResNet.ResNet.bn1.parameters", "torch.nn.ReLU", "torch.nn.MaxPool2d", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_layer"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "_affine_par", ")", "\n", "for", "i", "in", "self", ".", "bn1", ".", "parameters", "(", ")", ":", "\n", "            ", "i", ".", "requires_grad", "=", "False", "\n", "", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ")", "# change", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_layer": [[123, 139], ["layers.append", "range", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential._modules[].parameters", "block", "layers.append", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", "or", "dilation", "==", "2", "or", "dilation", "==", "4", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "affine", "=", "_affine_par", ")", ")", "\n", "for", "i", "in", "downsample", ".", "_modules", "[", "'1'", "]", ".", "parameters", "(", ")", ":", "\n", "                ", "i", ".", "requires_grad", "=", "False", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "dilation", "=", "dilation", ",", "downsample", "=", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet._make_pred_layer": [[140, 142], ["block"], "methods", ["None"], ["", "def", "_make_pred_layer", "(", "self", ",", "block", ",", "dilation_series", ",", "padding_series", ",", "num_classes", ")", ":", "\n", "        ", "return", "block", "(", "dilation_series", ",", "padding_series", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.ResNet.forward": [[143, 153], ["ResNet.ResNet.conv1", "ResNet.ResNet.bn1", "ResNet.ResNet.relu", "ResNet.ResNet.maxpool", "ResNet.ResNet.layer1", "ResNet.ResNet.layer2", "ResNet.ResNet.layer3", "ResNet.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.conv3x3": [[7, 11], ["torch.nn.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.resnet50": [[155, 158], ["ResNet.ResNet"], "function", ["None"], ["", "", "def", "resnet50", "(", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ResNet.resnet101": [[160, 163], ["ResNet.ResNet"], "function", ["None"], ["", "def", "resnet101", "(", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.Classifier.Classifier_Module.__init__": [[6, 16], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "zip", "Classifier.Classifier_Module.conv2d_list.append", "m.weight.data.normal_", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dilation_series", ",", "padding_series", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "Classifier_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv2d_list", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "dilation", ",", "padding", "in", "zip", "(", "dilation_series", ",", "padding_series", ")", ":", "\n", "            ", "self", ".", "conv2d_list", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "2048", ",", "num_classes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ")", "\n", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "conv2d_list", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.Classifier.Classifier_Module.forward": [[17, 22], ["range", "len"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv2d_list", "[", "0", "]", "(", "x", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "conv2d_list", ")", "-", "1", ")", ":", "\n", "            ", "out", "+=", "self", ".", "conv2d_list", "[", "i", "+", "1", "]", "(", "x", ")", "\n", "", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ASPP.ASPP.__init__": [[10, 39], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "rate", "=", "1", ",", "bn_mom", "=", "0.1", ")", ":", "\n", "\t\t", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "1", ",", "1", ",", "padding", "=", "0", ",", "dilation", "=", "rate", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "branch2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "3", ",", "1", ",", "padding", "=", "6", "*", "rate", ",", "dilation", "=", "6", "*", "rate", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "branch3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "3", ",", "1", ",", "padding", "=", "12", "*", "rate", ",", "dilation", "=", "12", "*", "rate", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "branch4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "3", ",", "1", ",", "padding", "=", "18", "*", "rate", ",", "dilation", "=", "18", "*", "rate", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "branch5_conv", "=", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "branch5_bn", "=", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "branch5_relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv_cat", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_out", "*", "5", ",", "dim_out", ",", "1", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.base_model.ASPP.ASPP.forward": [[41, 57], ["x.size", "ASPP.ASPP.branch1", "ASPP.ASPP.branch2", "ASPP.ASPP.branch3", "ASPP.ASPP.branch4", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "ASPP.ASPP.branch5_conv", "ASPP.ASPP.branch5_relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ASPP.ASPP.conv_cat", "ASPP.ASPP.branch5_bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "[", "b", ",", "c", ",", "row", ",", "col", "]", "=", "x", ".", "size", "(", ")", "\n", "conv1x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "conv3x3_1", "=", "self", ".", "branch2", "(", "x", ")", "\n", "conv3x3_2", "=", "self", ".", "branch3", "(", "x", ")", "\n", "conv3x3_3", "=", "self", ".", "branch4", "(", "x", ")", "\n", "global_feature", "=", "torch", ".", "mean", "(", "x", ",", "2", ",", "True", ")", "\n", "global_feature", "=", "torch", ".", "mean", "(", "global_feature", ",", "3", ",", "True", ")", "\n", "global_feature", "=", "self", ".", "branch5_conv", "(", "global_feature", ")", "\n", "if", "b", "!=", "1", ":", "\n", "\t\t\t", "global_feature", "=", "self", ".", "branch5_bn", "(", "global_feature", ")", "\n", "", "global_feature", "=", "self", ".", "branch5_relu", "(", "global_feature", ")", "\n", "global_feature", "=", "F", ".", "interpolate", "(", "global_feature", ",", "(", "row", ",", "col", ")", ",", "None", ",", "'bilinear'", ",", "True", ")", "\n", "feature_cat", "=", "torch", ".", "cat", "(", "[", "conv1x1", ",", "conv3x3_1", ",", "conv3x3_2", ",", "conv3x3_3", ",", "global_feature", "]", ",", "dim", "=", "1", ")", "\n", "result", "=", "self", ".", "conv_cat", "(", "feature_cat", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__": [[24, 28], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.__init__"], []], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.BCELossWithLogits_Mask.forward": [[29, 50], ["isinstance", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.FloatTensor().view().expand_as().to", "torch.FloatTensor().view().expand_as().to", "torch.FloatTensor().view().expand_as().to", "torch.FloatTensor().view().expand_as().to", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.FloatTensor().view().expand_as().to.unsqueeze_", "torch.FloatTensor().view().expand_as().to.unsqueeze_", "filter_index.to.to.to", "filter_index.to.to.to", "torch.FloatTensor().view().expand_as().to.dim", "torch.FloatTensor().view().expand_as().to.dim", "pred.dim", "ignore_index.byte", "torch.FloatTensor().view().expand_as", "torch.FloatTensor().view().expand_as", "torch.FloatTensor().view().expand_as", "torch.FloatTensor().view().expand_as", "ignore_index.byte", "torch.FloatTensor().view", "torch.FloatTensor().view", "torch.FloatTensor().view", "torch.FloatTensor().view", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "range", "pred.dim"], "methods", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], []], "home.repos.pwc.inspect_result.hb-stone_FC-SOD.losses.__init__.SwiftCrossEntropyLoss": [[10, 20], ["isinstance", "isinstance", "list", "torch.LongTensor().expand().to", "torch.LongTensor().expand().to", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.LongTensor().expand().to.long", "torch.LongTensor().expand", "torch.LongTensor().expand", "torch.LongTensor", "torch.LongTensor", "int"], "function", ["home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to", "home.repos.pwc.inspect_result.hb-stone_FC-SOD.networks.GAN_Unet.GAN.to"], []]}