{"home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generate.farthest_point_sample": [[18, 36], ["torch.seed", "torch.from_numpy().float().to", "torch.zeros().to", "torch.randint().to", "tqdm.tqdm", "torch.zeros().to.detach().cpu().numpy().astype", "torch.ones().to", "range", "torch.sum", "torch.from_numpy().float", "torch.zeros", "torch.randint", "torch.max", "torch.zeros().to.detach().cpu().numpy", "torch.ones", "torch.from_numpy", "torch.zeros().to.detach().cpu", "torch.zeros().to.detach"], "function", ["None"], ["def", "farthest_point_sample", "(", "xyz", ",", "pointnumber", ")", ":", "\n", "    ", "device", "=", "'cuda'", "\n", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "torch", ".", "seed", "(", ")", "\n", "xyz", "=", "torch", ".", "from_numpy", "(", "xyz", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "centroids", "=", "torch", ".", "zeros", "(", "pointnumber", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "\n", "distance", "=", "torch", ".", "ones", "(", "N", ")", ".", "to", "(", "device", ")", "*", "1e32", "\n", "farthest", "=", "torch", ".", "randint", "(", "0", ",", "N", ",", "(", "1", ",", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "farthest", "[", "0", "]", "=", "N", "/", "2", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "pointnumber", ")", ")", ":", "\n", "        ", "centroids", "[", "i", "]", "=", "farthest", "\n", "centroid", "=", "xyz", "[", "farthest", ",", ":", "]", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n", "distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "torch", ".", "max", "(", "distance", ",", "-", "1", ")", "[", "1", "]", "\n", "", "return", "centroids", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generation.Generator3D6.__init__": [[33, 37], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model1", ",", "model2", ",", "device", ")", ":", "\n", "        ", "self", ".", "model1", "=", "model1", "\n", "self", ".", "model2", "=", "model2", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generation.Generator3D6.upsample": [[38, 43], ["generation.Generator3D6.generateiopoint"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generation.Generator3D6.generateiopoint"], ["", "def", "upsample", "(", "self", ",", "data", ")", ":", "\n", "\n", "        ", "pc", "=", "self", ".", "generateiopoint", "(", "data", ")", "\n", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generation.Generator3D6.generateiopoint": [[44, 112], ["numpy.squeeze", "sklearn.neighbors.KDTree", "print", "print", "os.system", "numpy.loadtxt", "print", "numpy.array_split", "tqdm.tqdm.tqdm", "numpy.array_split", "print", "tqdm.tqdm.tqdm", "numpy.array", "print", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.mean", "numpy.mean", "str", "range", "sklearn.neighbors.KDTree.query", "generation.Generator3D6.detach().cpu().numpy", "range", "sklearn.neighbors.KDTree.query", "range", "numpy.tile", "numpy.array.extend", "numpy.where", "len", "numpy.tile", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "generation.Generator3D6.model1.encode_inputs", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "generation.Generator3D6.model1.decode", "numpy.append", "len", "numpy.tile", "generation.rotation_matrix_from_vectors", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "generation.Generator3D6.model2.encode_inputs", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "generation.Generator3D6.model2.decode", "numpy.expand_dims", "numpy.expand_dims", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "generation.Generator3D6.detach().cpu", "numpy.expand_dims", "numpy.matmul", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "generation.Generator3D6.detach().cpu().numpy", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "generation.Generator3D6.detach", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "generation.Generator3D6.detach().cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "generation.Generator3D6.detach", "numpy.expand_dims", "numpy.expand_dims"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.rotation_matrix_from_vectors", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["", "def", "generateiopoint", "(", "self", ",", "data", ")", ":", "\n", "\n", "        ", "data", "=", "np", ".", "squeeze", "(", "data", ",", "0", ")", "\n", "tree1", "=", "KDTree", "(", "data", ")", "\n", "\n", "print", "(", "\"generate seedpoint\"", ")", "\n", "wq", "=", "\"./dense\"", "\n", "wq", "=", "wq", "+", "\" 0.004 \"", "+", "str", "(", "data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "print", "(", "wq", ")", "\n", "os", ".", "system", "(", "wq", ")", "\n", "data2", "=", "np", ".", "loadtxt", "(", "\"target.xyz\"", ")", "\n", "xyz2", "=", "data2", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "print", "(", "\"fn\"", ")", "\n", "pp", "=", "xyz2", ".", "shape", "[", "0", "]", "//", "400", "\n", "p_split", "=", "np", ".", "array_split", "(", "xyz2", ",", "pp", ",", "axis", "=", "0", ")", "\n", "normal", "=", "None", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "p_split", ")", ")", ")", ":", "\n", "\n", "            ", "dist", ",", "idx", "=", "tree1", ".", "query", "(", "p_split", "[", "i", "]", ",", "100", ")", "\n", "cloud", "=", "data", "[", "idx", "]", "\n", "cloud", "=", "cloud", "-", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "p_split", "[", "i", "]", ",", "1", ")", ",", "(", "1", ",", "100", ",", "1", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "c", "=", "self", ".", "model1", ".", "encode_inputs", "(", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "cloud", ",", "0", ")", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "n", "=", "self", ".", "model1", ".", "decode", "(", "c", ")", "\n", "", "n", "=", "n", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "normal", "is", "None", ":", "\n", "                ", "normal", "=", "n", "\n", "", "else", ":", "\n", "                ", "normal", "=", "np", ".", "append", "(", "normal", ",", "n", ",", "axis", "=", "0", ")", "\n", "\n", "\n", "", "", "n_split", "=", "np", ".", "array_split", "(", "normal", ",", "pp", ",", "axis", "=", "0", ")", "\n", "xyzout", "=", "[", "]", "\n", "\n", "print", "(", "\"fd\"", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "p_split", ")", ")", ")", ":", "\n", "\n", "            ", "dist", ",", "idx", "=", "tree1", ".", "query", "(", "p_split", "[", "i", "]", ",", "100", ")", "\n", "cloud", "=", "data", "[", "idx", "]", "\n", "cloud", "=", "cloud", "-", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "p_split", "[", "i", "]", ",", "1", ")", ",", "(", "1", ",", "100", ",", "1", ")", ")", "\n", "\n", "for", "j", "in", "range", "(", "cloud", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "M1", "=", "rotation_matrix_from_vectors", "(", "n_split", "[", "i", "]", "[", "j", "]", ",", "[", "1", ",", "0", ",", "0", "]", ")", "\n", "cloud", "[", "j", "]", "=", "(", "np", ".", "matmul", "(", "M1", ",", "cloud", "[", "j", "]", ".", "T", ")", ")", ".", "T", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "c", "=", "self", ".", "model2", ".", "encode_inputs", "(", "torch", ".", "from_numpy", "(", "np", ".", "expand_dims", "(", "cloud", ",", "0", ")", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "n", "=", "self", ".", "model2", ".", "decode", "(", "c", ")", "\n", "\n", "", "length", "=", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "n", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "1", ")", ",", "(", "1", ",", "3", ")", ")", "\n", "xyzout", ".", "extend", "(", "(", "p_split", "[", "i", "]", "+", "n_split", "[", "i", "]", "*", "length", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "", "xyzout", "=", "np", ".", "array", "(", "xyzout", ")", "\n", "\n", "print", "(", "\"remove outliers\"", ")", "\n", "tree3", "=", "KDTree", "(", "xyzout", ")", "\n", "dist", ",", "idx", "=", "tree3", ".", "query", "(", "xyzout", ",", "30", ")", "\n", "avg", "=", "np", ".", "mean", "(", "dist", ",", "axis", "=", "1", ")", "\n", "avgtotal", "=", "np", ".", "mean", "(", "dist", ")", "\n", "idx", "=", "np", ".", "where", "(", "avg", "<", "avgtotal", "*", "1.5", ")", "[", "0", "]", "\n", "xyzout", "=", "xyzout", "[", "idx", ",", ":", "]", "\n", "\n", "\n", "return", "xyzout", "", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.None.generation.rotation_matrix_from_vectors": [[14, 29], ["numpy.cross", "any", "numpy.dot", "numpy.linalg.norm", "numpy.array", "numpy.eye", "numpy.eye", "np.array.dot", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["def", "rotation_matrix_from_vectors", "(", "vec1", ",", "vec2", ")", ":", "\n", "    ", "\"\"\" Find the rotation matrix that aligns vec1 to vec2\n    :param vec1: A 3d \"source\" vector\n    :param vec2: A 3d \"destination\" vector\n    :return mat: A transform matrix (3x3) which when applied to vec1, aligns it with vec2.\n    \"\"\"", "\n", "a", ",", "b", "=", "(", "vec1", "/", "np", ".", "linalg", ".", "norm", "(", "vec1", ")", ")", ".", "reshape", "(", "3", ")", ",", "(", "vec2", "/", "np", ".", "linalg", ".", "norm", "(", "vec2", ")", ")", ".", "reshape", "(", "3", ")", "\n", "v", "=", "np", ".", "cross", "(", "a", ",", "b", ")", "\n", "if", "any", "(", "v", ")", ":", "#if not all zeros then ", "\n", "        ", "c", "=", "np", ".", "dot", "(", "a", ",", "b", ")", "\n", "s", "=", "np", ".", "linalg", ".", "norm", "(", "v", ")", "\n", "kmat", "=", "np", ".", "array", "(", "[", "[", "0", ",", "-", "v", "[", "2", "]", ",", "v", "[", "1", "]", "]", ",", "[", "v", "[", "2", "]", ",", "0", ",", "-", "v", "[", "0", "]", "]", ",", "[", "-", "v", "[", "1", "]", ",", "v", "[", "0", "]", ",", "0", "]", "]", ")", "\n", "return", "np", ".", "eye", "(", "3", ")", "+", "kmat", "+", "kmat", ".", "dot", "(", "kmat", ")", "*", "(", "(", "1", "-", "c", ")", "/", "(", "s", "**", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "eye", "(", "3", ")", "#cross of all zeros only occurs on identical directions", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.config.load_config": [[8, 36], ["yaml.load.get", "config.update_recursive", "open", "yaml.load", "config.load_config", "dict", "open", "yaml.load"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.update_recursive", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.load_config", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["def", "load_config", "(", "path", ",", "default_path", "=", "None", ")", ":", "\n", "    ", "''' Loads config file.\n\n    Args:  \n        path (str): path to config file\n        default_path (bool): whether to use default path\n    '''", "\n", "# Load configuration from file itself", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "cfg_special", "=", "yaml", ".", "load", "(", "f", ")", "\n", "\n", "# Check if we should inherit from a config", "\n", "", "inherit_from", "=", "cfg_special", ".", "get", "(", "'inherit_from'", ")", "\n", "\n", "# If yes, load this config first as default", "\n", "# If no, use the default_path", "\n", "if", "inherit_from", "is", "not", "None", ":", "\n", "        ", "cfg", "=", "load_config", "(", "inherit_from", ",", "default_path", ")", "\n", "", "elif", "default_path", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "default_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "cfg", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "        ", "cfg", "=", "dict", "(", ")", "\n", "\n", "# Include main configuration", "\n", "", "update_recursive", "(", "cfg", ",", "cfg_special", ")", "\n", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.config.update_recursive": [[37, 52], ["dict2.items", "isinstance", "dict", "config.update_recursive"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.update_recursive"], ["", "def", "update_recursive", "(", "dict1", ",", "dict2", ")", ":", "\n", "    ", "''' Update two config dictionaries recursively.\n\n    Args:\n        dict1 (dict): first dictionary to be updated\n        dict2 (dict): second dictionary which entries should be used\n\n    '''", "\n", "for", "k", ",", "v", "in", "dict2", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "dict1", ":", "\n", "            ", "dict1", "[", "k", "]", "=", "dict", "(", ")", "\n", "", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "update_recursive", "(", "dict1", "[", "k", "]", ",", "v", ")", "\n", "", "else", ":", "\n", "            ", "dict1", "[", "k", "]", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.config.get_dataset": [[54, 68], ["fn.datacore.Shapes3dDataset", "fn.field.PointCloudField", "fn.field.fnField"], "function", ["None"], ["", "", "", "def", "get_dataset", "(", "mode", ",", "cfg", ")", ":", "\n", "    ", "splits", "=", "{", "\n", "'train'", ":", "cfg", "[", "'data'", "]", "[", "'train_split'", "]", ",", "\n", "'val'", ":", "cfg", "[", "'data'", "]", "[", "'val_split'", "]", ",", "\n", "'test'", ":", "cfg", "[", "'data'", "]", "[", "'test_split'", "]", ",", "\n", "}", "\n", "split", "=", "splits", "[", "mode", "]", "\n", "dataset_folder", "=", "cfg", "[", "'data'", "]", "[", "'path'", "]", "\n", "\n", "\n", "fields", "=", "[", "field", ".", "PointCloudField", "(", "cfg", "[", "'data'", "]", "[", "'pointcloud_file'", "]", ")", ",", "field", ".", "fnField", "(", ")", "]", "\n", "\n", "dataset", "=", "datacore", ".", "Shapes3dDataset", "(", "dataset_folder", ",", "fields", ",", "split", "=", "split", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.config.get_model": [[69, 82], ["fn.coder.pyramid_Decoder3", "fn.coder.DGCNN_cls", "fn.coder.OccupancyNetwork"], "function", ["None"], ["", "def", "get_model", "(", "cfg", ",", "device", ")", ":", "\n", "\n", "    ", "dim", "=", "cfg", "[", "'model'", "]", "[", "'dim'", "]", "\n", "c_dim", "=", "cfg", "[", "'model'", "]", "[", "'c_dim'", "]", "\n", "encoder_kwargs", "=", "cfg", "[", "'model'", "]", "[", "'encoder_kwargs'", "]", "\n", "\n", "decoder", "=", "coder", ".", "pyramid_Decoder3", "(", ")", "\n", "encoder", "=", "coder", ".", "DGCNN_cls", "(", "20", ",", "1024", ")", "\n", "#encoder=coder.ResnetPointnet()", "\n", "model", "=", "coder", ".", "OccupancyNetwork", "(", "decoder", ",", "encoder", ",", "device", "=", "device", ")", "\n", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.field.PointCloudField.__init__": [[21, 23], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "file_name", ")", ":", "\n", "        ", "self", ".", "file_name", "=", "file_name", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.field.PointCloudField.load": [[25, 43], ["os.path.join", "numpy.load", "pointcloud_dict[].astype"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["", "def", "load", "(", "self", ",", "model_path", ")", ":", "\n", "        ", "''' Loads the data point.\n\n        Args:\n            model_path (str): path to model\n            idx (int): ID of data point\n            category (int): index of category\n        '''", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "self", ".", "file_name", ")", "\n", "pointcloud_dict", "=", "np", ".", "load", "(", "file_path", ")", "\n", "\n", "points", "=", "pointcloud_dict", "[", "'points'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "data", "=", "{", "\n", "'cloud'", ":", "points", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.field.fnField.__init__": [[48, 50], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "file_name", "=", "'fn.npz'", "\n", "", "def", "load", "(", "self", ",", "model_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.field.fnField.load": [[50, 62], ["os.path.join", "numpy.load", "fn_dict[].astype", "fn_dict[].astype"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["", "def", "load", "(", "self", ",", "model_path", ")", ":", "\n", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "self", ".", "file_name", ")", "\n", "fn_dict", "=", "np", ".", "load", "(", "file_path", ")", "\n", "points", "=", "fn_dict", "[", "'points'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "normals", "=", "fn_dict", "[", "'normals'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "data", "=", "{", "\n", "'input'", ":", "points", ",", "\n", "'normal'", ":", "normals", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.cos_sim": [[24, 27], ["scores.mean", "torch.acos", "torch.cosine_similarity"], "methods", ["None"], ["def", "cos_sim", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "scores", "=", "torch", ".", "acos", "(", "torch", ".", "cosine_similarity", "(", "x1", ",", "x2", ",", "dim", "=", "2", ")", ")", "/", "numpy", ".", "pi", "\n", "return", "scores", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.__init__": [[29, 41], ["os.makedirs", "os.path.exists"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "model", ",", "optimizer", ",", "device", "=", "None", ",", "input_type", "=", "'img'", ",", "\n", "vis_dir", "=", "None", ",", "threshold", "=", "0.5", ",", "eval_sample", "=", "False", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "input_type", "=", "input_type", "\n", "self", ".", "vis_dir", "=", "vis_dir", "\n", "self", ".", "threshold", "=", "threshold", "\n", "self", ".", "eval_sample", "=", "eval_sample", "\n", "\n", "if", "vis_dir", "is", "not", "None", "and", "not", "os", ".", "path", ".", "exists", "(", "vis_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "vis_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.train_step": [[42, 54], ["trainer.Trainer.model.train", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.compute_loss", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "trainer.Trainer.item"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.compute_loss"], ["", "", "def", "train_step", "(", "self", ",", "data", ")", ":", "\n", "        ", "''' Performs a training step.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "self", ".", "compute_loss", "(", "data", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", ".", "item", "(", ")", "\n", "", "def", "evaluate", "(", "self", ",", "val_loader", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.evaluate": [[54, 68], ["tqdm.tqdm.tqdm", "trainer.Trainer.eval_step", "trainer.Trainer.float"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.eval_step"], ["", "def", "evaluate", "(", "self", ",", "val_loader", ")", ":", "\n", "        ", "''' Performs an evaluation.\n        Args:\n            val_loader (dataloader): pytorch dataloader\n        '''", "\n", "\n", "val", "=", "0.0", "\n", "num", "=", "0", "\n", "for", "data", "in", "tqdm", "(", "val_loader", ")", ":", "\n", "            ", "eval_step_dict", "=", "self", ".", "eval_step", "(", "data", ")", "\n", "val", "=", "val", "+", "eval_step_dict", ".", "float", "(", ")", "\n", "num", "=", "num", "+", "1", "\n", "\n", "", "return", "val", "/", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.eval_step": [[69, 89], ["trainer.Trainer.model.eval", "data.get().to().float", "data.get().to().float", "torch.no_grad", "trainer.Trainer.model.compute_loss", "data.get().to", "data.get().to", "data.get", "data.get"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.compute_loss"], ["", "def", "eval_step", "(", "self", ",", "data", ")", ":", "\n", "        ", "''' Performs an evaluation step.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "device", "=", "self", ".", "device", "\n", "# Compute elbo", "\n", "\n", "points", "=", "data", ".", "get", "(", "'input'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "output", "=", "data", ".", "get", "(", "'normal'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "kwargs", "=", "{", "}", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "mae", "=", "self", ".", "model", ".", "compute_loss", "(", "points", ",", "output", ")", "\n", "\n", "", "return", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.trainer.Trainer.compute_loss": [[90, 113], ["data.get().to().float", "data.get().to().float", "trainer.Trainer.model.encode_inputs", "trainer.Trainer.model.decode", "n.reshape.reshape.reshape", "output.reshape.reshape.reshape", "torch.nn.MSELoss", "torch.nn.MSELoss.", "torch.nn.MSELoss.float", "data.get().to", "data.get().to", "data.get", "data.get"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["", "def", "compute_loss", "(", "self", ",", "data", ")", ":", "\n", "        ", "''' Computes the loss.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "device", "=", "self", ".", "device", "\n", "\n", "points", "=", "data", ".", "get", "(", "'input'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "output", "=", "data", ".", "get", "(", "'normal'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "c", "=", "self", ".", "model", ".", "encode_inputs", "(", "points", ")", "\n", "n", "=", "self", ".", "model", ".", "decode", "(", "c", ")", "\n", "n", "=", "n", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "output", "=", "output", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "loss_fn", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "loss", "=", "loss_fn", "(", "n", ",", "output", ")", "\n", "\n", "return", "loss", ".", "float", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.ResnetBlockFC.__init__": [[15, 37], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "min", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "size_in", ",", "size_out", "=", "None", ",", "size_h", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "min", "(", "size_in", ",", "size_out", ")", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "self", ".", "fc_0", "=", "nn", ".", "Linear", "(", "size_in", ",", "size_h", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Linear", "(", "size_h", ",", "size_out", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm1d", "(", "size_out", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Linear", "(", "size_in", ",", "size_out", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.ResnetBlockFC.forward": [[39, 49], ["layers.ResnetBlockFC.actvn", "layers.ResnetBlockFC.fc_1", "layers.ResnetBlockFC.actvn", "layers.ResnetBlockFC.bn0", "layers.ResnetBlockFC.shortcut", "layers.ResnetBlockFC.fc_0"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "net", "=", "self", ".", "actvn", "(", "self", ".", "bn0", "(", "self", ".", "fc_0", "(", "x", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "net", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "self", ".", "actvn", "(", "x_s", "+", "dx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CResnetBlockConv1d.__init__": [[63, 97], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.init.zeros_", "torch.init.zeros_", "layers.CBatchNorm1d", "layers.CBatchNorm1d", "layers.CBatchNorm1d_legacy", "layers.CBatchNorm1d_legacy", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "size_in", ",", "size_h", "=", "None", ",", "size_out", "=", "None", ",", "\n", "norm_method", "=", "'batch_norm'", ",", "legacy", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "size_in", "\n", "", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "if", "not", "legacy", ":", "\n", "            ", "self", ".", "bn_0", "=", "CBatchNorm1d", "(", "\n", "c_dim", ",", "size_in", ",", "norm_method", "=", "norm_method", ")", "\n", "self", ".", "bn_1", "=", "CBatchNorm1d", "(", "\n", "c_dim", ",", "size_h", ",", "norm_method", "=", "norm_method", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn_0", "=", "CBatchNorm1d_legacy", "(", "\n", "c_dim", ",", "size_in", ",", "norm_method", "=", "norm_method", ")", "\n", "self", ".", "bn_1", "=", "CBatchNorm1d_legacy", "(", "\n", "c_dim", ",", "size_h", ",", "norm_method", "=", "norm_method", ")", "\n", "\n", "", "self", ".", "fc_0", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_h", ",", "1", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Conv1d", "(", "size_h", ",", "size_out", ",", "1", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_out", ",", "1", ",", "bias", "=", "False", ")", "\n", "# Initialization", "\n", "", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_1", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CResnetBlockConv1d.forward": [[98, 108], ["layers.CResnetBlockConv1d.fc_0", "layers.CResnetBlockConv1d.fc_1", "layers.CResnetBlockConv1d.actvn", "layers.CResnetBlockConv1d.actvn", "layers.CResnetBlockConv1d.shortcut", "layers.CResnetBlockConv1d.bn_0", "layers.CResnetBlockConv1d.bn_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "net", "=", "self", ".", "fc_0", "(", "self", ".", "actvn", "(", "self", ".", "bn_0", "(", "x", ",", "c", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "self", ".", "actvn", "(", "self", ".", "bn_1", "(", "net", ",", "c", ")", ")", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "x_s", "+", "dx", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.ResnetBlockConv1d.__init__": [[119, 145], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.init.zeros_", "torch.init.zeros_", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "size_in", ",", "size_h", "=", "None", ",", "size_out", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "size_in", "\n", "", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "self", ".", "bn_0", "=", "nn", ".", "BatchNorm1d", "(", "size_in", ")", "\n", "self", ".", "bn_1", "=", "nn", ".", "BatchNorm1d", "(", "size_h", ")", "\n", "\n", "self", ".", "fc_0", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_h", ",", "1", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Conv1d", "(", "size_h", ",", "size_out", ",", "1", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_out", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "# Initialization", "\n", "", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_1", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.ResnetBlockConv1d.forward": [[146, 156], ["layers.ResnetBlockConv1d.fc_0", "layers.ResnetBlockConv1d.fc_1", "layers.ResnetBlockConv1d.actvn", "layers.ResnetBlockConv1d.actvn", "layers.ResnetBlockConv1d.shortcut", "layers.ResnetBlockConv1d.bn_0", "layers.ResnetBlockConv1d.bn_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "net", "=", "self", ".", "fc_0", "(", "self", ".", "actvn", "(", "self", ".", "bn_0", "(", "x", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "self", ".", "actvn", "(", "self", ".", "bn_1", "(", "net", ")", ")", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "x_s", "+", "dx", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.AffineLayer.__init__": [[167, 175], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "layers.AffineLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "dim", "=", "3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "dim", "=", "dim", "\n", "# Submodules", "\n", "self", ".", "fc_A", "=", "nn", ".", "Linear", "(", "c_dim", ",", "dim", "*", "dim", ")", "\n", "self", ".", "fc_b", "=", "nn", ".", "Linear", "(", "c_dim", ",", "dim", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.AffineLayer.reset_parameters": [[176, 182], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "layers.AffineLayer.fc_A.bias.copy_", "layers.AffineLayer.fc_b.bias.copy_", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_A", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_b", ".", "weight", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "fc_A", ".", "bias", ".", "copy_", "(", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "self", ".", "fc_b", ".", "bias", ".", "copy_", "(", "torch", ".", "tensor", "(", "[", "0.", ",", "0.", ",", "2.", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.AffineLayer.forward": [[183, 191], ["x.size", "layers.AffineLayer.fc_A().view", "layers.AffineLayer.fc_b().view", "x.size", "p.size", "p.size", "layers.AffineLayer.fc_A", "layers.AffineLayer.fc_b"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "p", ")", ":", "\n", "        ", "assert", "(", "x", ".", "size", "(", "0", ")", "==", "p", ".", "size", "(", "0", ")", ")", "\n", "assert", "(", "p", ".", "size", "(", "2", ")", "==", "self", ".", "dim", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "A", "=", "self", ".", "fc_A", "(", "x", ")", ".", "view", "(", "batch_size", ",", "3", ",", "3", ")", "\n", "b", "=", "self", ".", "fc_b", "(", "x", ")", ".", "view", "(", "batch_size", ",", "1", ",", "3", ")", "\n", "out", "=", "p", "@", "A", "+", "b", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d.__init__": [[202, 219], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "layers.CBatchNorm1d.reset_parameters", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.InstanceNorm1d", "torch.InstanceNorm1d", "torch.GroupNorm1d", "torch.GroupNorm1d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "f_dim", ",", "norm_method", "=", "'batch_norm'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "f_dim", "=", "f_dim", "\n", "self", ".", "norm_method", "=", "norm_method", "\n", "# Submodules", "\n", "self", ".", "conv_gamma", "=", "nn", ".", "Conv1d", "(", "c_dim", ",", "f_dim", ",", "1", ")", "\n", "self", ".", "conv_beta", "=", "nn", ".", "Conv1d", "(", "c_dim", ",", "f_dim", ",", "1", ")", "\n", "if", "norm_method", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'instance_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "InstanceNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'group_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "GroupNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid normalization method!'", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d.reset_parameters": [[220, 225], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_", "torch.init.ones_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_gamma", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_beta", ".", "weight", ")", "\n", "nn", ".", "init", ".", "ones_", "(", "self", ".", "conv_gamma", ".", "bias", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_beta", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d.forward": [[226, 243], ["layers.CBatchNorm1d.conv_gamma", "layers.CBatchNorm1d.conv_beta", "layers.CBatchNorm1d.bn", "x.size", "c.unsqueeze.unsqueeze.size", "c.unsqueeze.unsqueeze.size", "len", "c.unsqueeze.unsqueeze.unsqueeze", "c.unsqueeze.unsqueeze.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "assert", "(", "x", ".", "size", "(", "0", ")", "==", "c", ".", "size", "(", "0", ")", ")", "\n", "assert", "(", "c", ".", "size", "(", "1", ")", "==", "self", ".", "c_dim", ")", "\n", "\n", "# c is assumed to be of size batch_size x c_dim x T", "\n", "if", "len", "(", "c", ".", "size", "(", ")", ")", "==", "2", ":", "\n", "            ", "c", "=", "c", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "# Affine mapping", "\n", "", "gamma", "=", "self", ".", "conv_gamma", "(", "c", ")", "\n", "beta", "=", "self", ".", "conv_beta", "(", "c", ")", "\n", "\n", "# Batchnorm", "\n", "net", "=", "self", ".", "bn", "(", "x", ")", "\n", "out", "=", "gamma", "*", "net", "+", "beta", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d_legacy.__init__": [[254, 271], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "layers.CBatchNorm1d_legacy.reset_parameters", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.InstanceNorm1d", "torch.InstanceNorm1d", "torch.GroupNorm1d", "torch.GroupNorm1d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "f_dim", ",", "norm_method", "=", "'batch_norm'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "f_dim", "=", "f_dim", "\n", "self", ".", "norm_method", "=", "norm_method", "\n", "# Submodules", "\n", "self", ".", "fc_gamma", "=", "nn", ".", "Linear", "(", "c_dim", ",", "f_dim", ")", "\n", "self", ".", "fc_beta", "=", "nn", ".", "Linear", "(", "c_dim", ",", "f_dim", ")", "\n", "if", "norm_method", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'instance_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "InstanceNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'group_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "GroupNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid normalization method!'", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d_legacy.reset_parameters": [[272, 277], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_", "torch.init.ones_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_gamma", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_beta", ".", "weight", ")", "\n", "nn", ".", "init", ".", "ones_", "(", "self", ".", "fc_gamma", ".", "bias", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_beta", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.layers.CBatchNorm1d_legacy.forward": [[278, 290], ["x.size", "layers.CBatchNorm1d_legacy.fc_gamma", "layers.CBatchNorm1d_legacy.fc_beta", "gamma.view.view.view", "beta.view.view.view", "layers.CBatchNorm1d_legacy.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "# Affine mapping", "\n", "gamma", "=", "self", ".", "fc_gamma", "(", "c", ")", "\n", "beta", "=", "self", ".", "fc_beta", "(", "c", ")", "\n", "gamma", "=", "gamma", ".", "view", "(", "batch_size", ",", "self", ".", "f_dim", ",", "1", ")", "\n", "beta", "=", "beta", ".", "view", "(", "batch_size", ",", "self", ".", "f_dim", ",", "1", ")", "\n", "# Batchnorm", "\n", "net", "=", "self", ".", "bn", "(", "x", ")", "\n", "out", "=", "gamma", "*", "net", "+", "beta", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.DGCNN_cls.__init__": [[18, 44], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", ",", "emb_dims", ")", ":", "\n", "        ", "super", "(", "DGCNN_cls", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "emb_dims", "=", "emb_dims", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "emb_dims", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "6", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", "*", "2", ",", "256", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn4", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "512", ",", "self", ".", "emb_dims", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn5", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "linear4", "=", "nn", ".", "Linear", "(", "self", ".", "emb_dims", "*", "2", ",", "512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.DGCNN_cls.forward": [[53, 83], ["torch.cat.reshape", "torch.cat.reshape", "torch.cat.reshape", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.permute", "torch.cat.permute", "torch.cat.permute", "coder.get_graph_feature", "coder.DGCNN_cls.conv1", "coder.get_graph_feature", "coder.DGCNN_cls.conv2", "coder.get_graph_feature", "coder.DGCNN_cls.conv3", "coder.get_graph_feature", "coder.DGCNN_cls.conv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "coder.DGCNN_cls.conv5", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "x", ".", "shape", "[", "0", "]", "*", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "x", "=", "get_graph_feature", "(", "x", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 3, num_points) -> (batch_size, 3*2, num_points, k)", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "# (batch_size, 3*2, num_points, k) -> (batch_size, 64, num_points, k)", "\n", "x1", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 64, num_points, k) -> (batch_size, 64, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x1", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 64, num_points) -> (batch_size, 64*2, num_points, k)", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "# (batch_size, 64*2, num_points, k) -> (batch_size, 64, num_points, k)", "\n", "x2", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 64, num_points, k) -> (batch_size, 64, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x2", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 64, num_points) -> (batch_size, 64*2, num_points, k)", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "# (batch_size, 64*2, num_points, k) -> (batch_size, 128, num_points, k)", "\n", "x3", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 128, num_points, k) -> (batch_size, 128, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x3", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 128, num_points) -> (batch_size, 128*2, num_points, k)", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "# (batch_size, 128*2, num_points, k) -> (batch_size, 256, num_points, k)", "\n", "x4", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 256, num_points, k) -> (batch_size, 256, num_points)", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "# (batch_size, 64+64+128+256, num_points)", "\n", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "# (batch_size, 64+64+128+256, num_points) -> (batch_size, emb_dims, num_points)", "\n", "x1", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# (batch_size, emb_dims, num_points) -> (batch_size, emb_dims)", "\n", "x2", "=", "F", ".", "adaptive_avg_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# (batch_size, emb_dims, num_points) -> (batch_size, emb_dims)", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "1", ")", "# (batch_size, emb_dims*2)", "\n", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.Decoder.__init__": [[137, 160], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "fn.layers.ResnetBlockFC", "fn.layers.ResnetBlockFC", "fn.layers.ResnetBlockFC", "fn.layers.ResnetBlockFC", "fn.layers.ResnetBlockFC", "torch.Linear", "torch.Linear", "torch.Linear", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "dim", "=", "3", ",", "c_dim", "=", "128", ",", "\n", "hidden_size", "=", "128", ",", "leaky", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "\n", "# Submodules", "\n", "self", ".", "fc_p", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_size", ")", "\n", "\n", "self", ".", "fc_c", "=", "nn", ".", "Linear", "(", "c_dim", ",", "hidden_size", ")", "\n", "\n", "self", ".", "block0", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block1", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block2", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block3", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block4", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "\n", "self", ".", "fc_out", "=", "nn", ".", "Linear", "(", "hidden_size", "*", "2", ",", "3", ")", "\n", "\n", "if", "not", "leaky", ":", "\n", "            ", "self", ".", "actvn", "=", "F", ".", "relu", "\n", "", "else", ":", "\n", "            ", "self", ".", "actvn", "=", "lambda", "x", ":", "F", ".", "leaky_relu", "(", "x", ",", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.Decoder.forward": [[161, 188], ["p.size", "coder.Decoder.fc_p", "coder.Decoder.fc_c", "net_c.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "coder.Decoder.block0", "coder.Decoder.block1", "coder.Decoder.block2", "coder.Decoder.block3", "coder.Decoder.block4", "coder.Decoder.fc_out", "coder.Decoder.actvn", "net_c.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "batch_size", ",", "T", ",", "D", "=", "p", ".", "size", "(", ")", "\n", "#print(p.shape, c.shape)", "\n", "\n", "net", "=", "self", ".", "fc_p", "(", "p", ")", "\n", "\n", "#print(net.shape)", "\n", "\n", "net_c", "=", "self", ".", "fc_c", "(", "c", ")", "\n", "#print(net_c.shape)", "\n", "net_c", "=", "net_c", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "net", ".", "shape", ")", "\n", "#print(net_c.shape)", "\n", "\n", "net", "=", "torch", ".", "cat", "(", "(", "net", ",", "net_c", ")", ",", "2", ")", "\n", "\n", "#print(net.shape)", "\n", "\n", "\n", "net", "=", "self", ".", "block0", "(", "net", ")", "\n", "net", "=", "self", ".", "block1", "(", "net", ")", "\n", "net", "=", "self", ".", "block2", "(", "net", ")", "\n", "net", "=", "self", ".", "block3", "(", "net", ")", "\n", "net", "=", "self", ".", "block4", "(", "net", ")", "\n", "#print(net.shape)", "\n", "out", "=", "self", ".", "fc_out", "(", "self", ".", "actvn", "(", "net", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.pyramid_Decoder3.__init__": [[193, 209], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Submodules", "\n", "\n", "self", ".", "fc_c", "=", "nn", ".", "Linear", "(", "2048", ",", "1024", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "\n", "self", ".", "block1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "\n", "self", ".", "block2", "=", "nn", ".", "Linear", "(", "512", ",", "128", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "\n", "self", ".", "fc_out", "=", "nn", ".", "Linear", "(", "128", ",", "3", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.pyramid_Decoder3.forward": [[210, 219], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.normalize", "torch.normalize", "torch.normalize", "coder.pyramid_Decoder3.bn0", "coder.pyramid_Decoder3.bn1", "coder.pyramid_Decoder3.bn2", "coder.pyramid_Decoder3.bn3", "coder.pyramid_Decoder3.fc_c", "coder.pyramid_Decoder3.block1", "coder.pyramid_Decoder3.block2", "coder.pyramid_Decoder3.fc_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "c", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "fc_c", "(", "c", ")", ")", ")", "# bnumber,2048+64 -> # bnumber,1024 ", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "block1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "block2", "(", "x", ")", ")", ")", "# bnumber,512 -> # bnumber,128 ", "\n", "\n", "x", "=", "F", ".", "normalize", "(", "self", ".", "bn3", "(", "self", ".", "fc_out", "(", "x", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.OccupancyNetwork.__init__": [[224, 231], ["torch.Module.__init__", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel.to", "torch.DataParallel.to"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["    ", "def", "__init__", "(", "self", ",", "decoder", ",", "encoder", ",", "device", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "decoder", "=", "nn", ".", "DataParallel", "(", "decoder", ")", "\n", "encoder", "=", "nn", ".", "DataParallel", "(", "encoder", ")", "\n", "self", ".", "decoder", "=", "decoder", ".", "to", "(", "device", ")", "\n", "self", ".", "encoder", "=", "encoder", ".", "to", "(", "device", ")", "\n", "self", ".", "_device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.OccupancyNetwork.forward": [[233, 238], ["coder.OccupancyNetwork.encode_inputs", "coder.OccupancyNetwork.decode"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "        ", "c", "=", "self", ".", "encode_inputs", "(", "inputs", ")", "\n", "n", "=", "self", ".", "decode", "(", "c", ")", "\n", "return", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.OccupancyNetwork.compute_loss": [[239, 246], ["coder.OccupancyNetwork.encode_inputs", "coder.OccupancyNetwork.decode", "output.reshape.reshape.reshape", "coder.cos_sim"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.cos_sim"], ["", "def", "compute_loss", "(", "self", ",", "inputs", ",", "output", ")", ":", "\n", "\n", "        ", "c", "=", "self", ".", "encode_inputs", "(", "inputs", ")", "\n", "n1", "=", "self", ".", "decode", "(", "c", ")", "\n", "output", "=", "output", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "loss", "=", "cos_sim", "(", "n1", ",", "output", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.OccupancyNetwork.encode_inputs": [[247, 250], ["coder.OccupancyNetwork.encoder"], "methods", ["None"], ["", "def", "encode_inputs", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "c", "=", "self", ".", "encoder", "(", "inputs", ")", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.OccupancyNetwork.decode": [[251, 254], ["coder.OccupancyNetwork.decoder"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "c", ")", ":", "\n", "        ", "n", "=", "self", ".", "decoder", "(", "c", ")", "\n", "return", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.knn": [[7, 14], ["torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum.transpose", "pairwise_distance.topk", "x.transpose"], "function", ["None"], ["def", "knn", "(", "x", ",", "k", ")", ":", "\n", "    ", "inner", "=", "-", "2", "*", "torch", ".", "matmul", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ",", "x", ")", "\n", "xx", "=", "torch", ".", "sum", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pairwise_distance", "=", "-", "xx", "-", "inner", "-", "xx", ".", "transpose", "(", "2", ",", "1", ")", "\n", "\n", "idx", "=", "pairwise_distance", ".", "topk", "(", "k", "=", "k", ",", "dim", "=", "-", "1", ")", "[", "1", "]", "# (batch_size, num_points, k)", "\n", "return", "idx", "\n", "", "def", "cos_sim", "(", "x1", ",", "x2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.cos_sim": [[14, 17], ["scores.mean", "torch.acos", "torch.acos", "torch.acos", "torch.cosine_similarity", "torch.cosine_similarity", "torch.cosine_similarity"], "function", ["None"], ["", "def", "cos_sim", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "scores", "=", "torch", ".", "acos", "(", "torch", ".", "cosine_similarity", "(", "x1", ",", "x2", ",", "dim", "=", "1", ")", ")", "/", "np", ".", "pi", "*", "180", "\n", "return", "scores", ".", "mean", "(", ")", "\n", "", "class", "DGCNN_cls", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.get_graph_feature": [[85, 117], ["x.view().repeat.size", "x.view().repeat.size", "x.view().repeat.view", "torch.device", "torch.device", "torch.device", "knn.view", "x.view().repeat.size", "x.view().repeat.transpose().contiguous", "torch.cat().permute().contiguous.view", "x.view().repeat.view().repeat", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.arange().view", "torch.arange().view", "torch.arange().view", "x.view().repeat.view", "coder.knn", "coder.knn", "x.view().repeat.transpose", "x.view().repeat.view", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.arange", "torch.arange", "torch.arange", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.knn", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.knn"], ["", "", "def", "get_graph_feature", "(", "x", ",", "k", "=", "20", ",", "idx", "=", "None", ",", "dim9", "=", "False", ")", ":", "\n", "    ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "num_points", "=", "x", ".", "size", "(", "2", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "-", "1", ",", "num_points", ")", "\n", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "if", "dim9", "==", "False", ":", "\n", "            ", "idx", "=", "knn", "(", "x", ",", "k", "=", "k", ")", "# (batch_size, num_points, k)", "\n", "", "else", ":", "\n", "            ", "idx", "=", "knn", "(", "x", "[", ":", ",", "6", ":", "]", ",", "k", "=", "k", ")", "\n", "", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "\n", "idx_base", "=", "torch", ".", "arange", "(", "0", ",", "batch_size", ",", "device", "=", "device", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "*", "num_points", "\n", "\n", "idx", "=", "idx", "+", "idx_base", "\n", "\n", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "\n", "_", ",", "num_dims", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (batch_size, num_points, num_dims)  -> (batch_size*num_points, num_dims) #   batch_size * num_points * k + range(0, batch_size*num_points)", "\n", "\n", "feature", "=", "x", ".", "view", "(", "batch_size", "*", "num_points", ",", "-", "1", ")", "[", "idx", ",", ":", "]", "\n", "\n", "feature", "=", "feature", ".", "view", "(", "batch_size", ",", "num_points", ",", "k", ",", "num_dims", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "num_points", ",", "1", ",", "num_dims", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ",", "1", ")", "\n", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "feature", "-", "x", ",", "x", ")", ",", "dim", "=", "3", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "feature", "# (batch_size, 2*num_dims, num_points, k)", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.coder.maxpool": [[120, 123], ["x.max"], "function", ["None"], ["", "def", "maxpool", "(", "x", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", ":", "\n", "    ", "out", ",", "_", "=", "x", ".", "max", "(", "dim", "=", "dim", ",", "keepdim", "=", "keepdim", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.rotation_matrix_from_vectors": [[5, 20], ["numpy.cross", "any", "numpy.dot", "numpy.linalg.norm", "numpy.array", "numpy.eye", "numpy.eye", "np.array.dot", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["def", "rotation_matrix_from_vectors", "(", "vec1", ",", "vec2", ")", ":", "\n", "    ", "\"\"\" Find the rotation matrix that aligns vec1 to vec2\n    :param vec1: A 3d \"source\" vector\n    :param vec2: A 3d \"destination\" vector\n    :return mat: A transform matrix (3x3) which when applied to vec1, aligns it with vec2.\n    \"\"\"", "\n", "a", ",", "b", "=", "(", "vec1", "/", "np", ".", "linalg", ".", "norm", "(", "vec1", ")", ")", ".", "reshape", "(", "3", ")", ",", "(", "vec2", "/", "np", ".", "linalg", ".", "norm", "(", "vec2", ")", ")", ".", "reshape", "(", "3", ")", "\n", "v", "=", "np", ".", "cross", "(", "a", ",", "b", ")", "\n", "if", "any", "(", "v", ")", ":", "#if not all zeros then ", "\n", "        ", "c", "=", "np", ".", "dot", "(", "a", ",", "b", ")", "\n", "s", "=", "np", ".", "linalg", ".", "norm", "(", "v", ")", "\n", "kmat", "=", "np", ".", "array", "(", "[", "[", "0", ",", "-", "v", "[", "2", "]", ",", "v", "[", "1", "]", "]", ",", "[", "v", "[", "2", "]", ",", "0", ",", "-", "v", "[", "0", "]", "]", ",", "[", "-", "v", "[", "1", "]", ",", "v", "[", "0", "]", ",", "0", "]", "]", ")", "\n", "return", "np", ".", "eye", "(", "3", ")", "+", "kmat", "+", "kmat", ".", "dot", "(", "kmat", ")", "*", "(", "(", "1", "-", "c", ")", "/", "(", "s", "**", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "eye", "(", "3", ")", "#cross of all zeros only occurs on identical directions", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.PointcloudNoise": [[21, 35], ["data.copy", "noise.astype.astype", "numpy.random.randn"], "function", ["None"], ["", "", "def", "PointcloudNoise", "(", "data", ",", "stddev", ")", ":", "\n", "    ", "if", "stddev", "==", "0", ":", "\n", "        ", "return", "data", "\n", "\n", "", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "points", "=", "data", "[", "None", "]", "\n", "\n", "noise", "=", "stddev", "*", "np", ".", "random", ".", "randn", "(", "*", "points", ".", "shape", ")", "\n", "\n", "noise", "=", "noise", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "data_out", "[", "None", "]", "=", "points", "+", "noise", "\n", "\n", "return", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.SubsamplePointcloud": [[37, 44], ["data.copy", "numpy.random.randint"], "function", ["None"], ["", "def", "SubsamplePointcloud", "(", "data", ",", "N", ")", ":", "\n", "    ", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "points", "=", "data", "[", "'cloud'", "]", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "points", ".", "shape", "[", "0", "]", ",", "size", "=", "N", ")", "\n", "data_out", "[", "'cloud'", "]", "=", "points", "[", "indices", ",", ":", "]", "\n", "\n", "return", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.Subsamplefn": [[47, 63], ["data.copy", "numpy.random.randint", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.tile", "numpy.expand_dims"], "function", ["None"], ["", "def", "Subsamplefn", "(", "data", ",", "N", ",", "M", ")", ":", "\n", "    ", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "data", "[", "'input'", "]", ".", "shape", "[", "0", "]", ",", "size", "=", "N", ")", "\n", "tinput", "=", "data_out", "[", "'input'", "]", "[", "indices", ",", ":", "]", "\n", "data_out", "[", "'normal'", "]", "=", "data_out", "[", "'normal'", "]", "[", "indices", ",", ":", "]", "\n", "\n", "tree", "=", "KDTree", "(", "data_out", "[", "'cloud'", "]", ")", "\n", "\n", "\n", "dist", ",", "idx", "=", "tree", ".", "query", "(", "tinput", ",", "M", ")", "\n", "data_out", "[", "'input'", "]", "=", "data_out", "[", "'cloud'", "]", "[", "idx", "]", "\n", "tinput", "=", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "tinput", ",", "1", ")", ",", "(", "1", ",", "M", ",", "1", ")", ")", "\n", "data_out", "[", "'input'", "]", "=", "data_out", "[", "'input'", "]", "-", "tinput", "\n", "\n", "return", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.GdataKNN": [[65, 70], ["transform.SubsamplePointcloud", "transform.Subsamplefn"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.SubsamplePointcloud", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.transform.Subsamplefn"], ["", "def", "GdataKNN", "(", "data", ")", ":", "\n", "    ", "data", "=", "SubsamplePointcloud", "(", "data", ",", "2048", ")", "\n", "data", "=", "Subsamplefn", "(", "data", ",", "16", ",", "100", ")", "\n", "\n", "return", "data", "\n", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.Shapes3dDataset.__init__": [[14, 65], ["os.path.join", "os.path.exists", "enumerate", "enumerate", "os.listdir", "os.path.join", "os.path.join", "open", "yaml.load", "os.path.isdir", "logger.warning", "open", "f.read().split", "os.path.isdir", "os.path.join", "f.read"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["def", "__init__", "(", "self", ",", "dataset_folder", ",", "fields", ",", "split", "=", "None", ",", "\n", "categories", "=", "None", ",", "no_except", "=", "True", ",", "transform", "=", "None", ")", ":", "\n", "        ", "''' Initialization of the the 3D shape dataset.\n\n        Args:\n            dataset_folder (str): dataset folder\n            fields (dict): dictionary of fields\n            split (str): which split is used\n            categories (list): list of categories to use\n            no_except (bool): no exception\n            transform (callable): transformation applied to data points\n        '''", "\n", "# Attributes", "\n", "self", ".", "dataset_folder", "=", "dataset_folder", "\n", "self", ".", "fields", "=", "fields", "\n", "self", ".", "no_except", "=", "no_except", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "# If categories is None, use all subfolders", "\n", "if", "categories", "is", "None", ":", "\n", "            ", "categories", "=", "os", ".", "listdir", "(", "dataset_folder", ")", "\n", "categories", "=", "[", "c", "for", "c", "in", "categories", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "c", ")", ")", "]", "\n", "\n", "# Read metadata file", "\n", "\n", "", "metadata_file", "=", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "'metadata.yaml'", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "metadata_file", ")", ":", "\n", "            ", "with", "open", "(", "metadata_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "metadata", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "metadata", "=", "{", "\n", "c", ":", "{", "'id'", ":", "c", ",", "'name'", ":", "'n/a'", "}", "for", "c", "in", "categories", "\n", "}", "\n", "\n", "# Set index", "\n", "", "for", "c_idx", ",", "c", "in", "enumerate", "(", "categories", ")", ":", "\n", "            ", "self", ".", "metadata", "[", "c", "]", "[", "'idx'", "]", "=", "c_idx", "\n", "# Get all models", "\n", "", "self", ".", "models", "=", "[", "]", "\n", "for", "c_idx", ",", "c", "in", "enumerate", "(", "categories", ")", ":", "\n", "            ", "subpath", "=", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "c", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "subpath", ")", ":", "\n", "                ", "logger", ".", "warning", "(", "'Category %s does not exist in dataset.'", "%", "c", ")", "\n", "\n", "", "split_file", "=", "os", ".", "path", ".", "join", "(", "subpath", ",", "split", "+", "'.lst'", ")", "\n", "with", "open", "(", "split_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "models_c", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "\n", "", "self", ".", "models", "+=", "[", "{", "'category'", ":", "c", ",", "'model'", ":", "m", "}", "for", "m", "in", "models_c", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.Shapes3dDataset.__len__": [[67, 71], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "''' Returns the length of the dataset.\n        '''", "\n", "return", "len", "(", "self", ".", "models", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.Shapes3dDataset.__getitem__": [[72, 86], ["os.path.join", "fn.transform.GdataKNN", "dict", "datacore.Shapes3dDataset.fields[].load", "datacore.Shapes3dDataset.fields[].load"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.GdataKNN", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "''' Returns an item of the dataset.\n\n        Args:\n            idx (int): ID of data point\n        '''", "\n", "category", "=", "self", ".", "models", "[", "idx", "]", "[", "'category'", "]", "\n", "model", "=", "self", ".", "models", "[", "idx", "]", "[", "'model'", "]", "\n", "c_idx", "=", "self", ".", "metadata", "[", "category", "]", "[", "'idx'", "]", "\n", "\n", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "category", ",", "model", ")", "\n", "data", "=", "tsf", ".", "GdataKNN", "(", "dict", "(", "self", ".", "fields", "[", "0", "]", ".", "load", "(", "model_path", ")", ",", "**", "self", ".", "fields", "[", "1", "]", ".", "load", "(", "model_path", ")", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.Shapes3dDataset.get_model_dict": [[87, 89], ["None"], "methods", ["None"], ["", "def", "get_model_dict", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "models", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.Shapes3dDataset.test_model_complete": [[90, 105], ["os.path.join", "os.listdir", "datacore.Shapes3dDataset.fields.items", "field.check_complete", "logger.warn"], "methods", ["None"], ["", "def", "test_model_complete", "(", "self", ",", "category", ",", "model", ")", ":", "\n", "        ", "''' Tests if model is complete.\n\n        Args:\n            model (str): modelname\n        '''", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "category", ",", "model", ")", "\n", "files", "=", "os", ".", "listdir", "(", "model_path", ")", "\n", "for", "field_name", ",", "field", "in", "self", ".", "fields", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "field", ".", "check_complete", "(", "files", ")", ":", "\n", "                ", "logger", ".", "warn", "(", "'Field \"%s\" is incomplete: %s'", "\n", "%", "(", "field_name", ",", "model_path", ")", ")", "\n", "return", "False", "\n", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.collate_remove_none": [[107, 118], ["list", "torch.utils.data.dataloader.default_collate", "filter"], "function", ["None"], ["", "", "def", "collate_remove_none", "(", "batch", ")", ":", "\n", "    ", "''' Collater that puts each data field into a tensor with outer dimension\n        batch size.\n\n    Args:\n        batch: batch\n    '''", "\n", "\n", "batch", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "is", "not", "None", ",", "batch", ")", ")", "\n", "\n", "return", "data", ".", "dataloader", ".", "default_collate", "(", "batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.datacore.worker_init_fn": [[120, 126], ["os.urandom", "int.from_bytes", "numpy.random.seed"], "function", ["None"], ["", "def", "worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "''' Worker init function to ensure true randomness.\n    '''", "\n", "random_data", "=", "os", ".", "urandom", "(", "4", ")", "\n", "base_seed", "=", "int", ".", "from_bytes", "(", "random_data", ",", "byteorder", "=", "\"big\"", ")", "\n", "np", ".", "random", ".", "seed", "(", "base_seed", "+", "worker_id", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.__init__": [[15, 20], ["os.path.exists", "os.makedirs"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "checkpoint_dir", "=", "'./chkpts'", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "module_dict", "=", "kwargs", "\n", "self", ".", "checkpoint_dir", "=", "checkpoint_dir", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "checkpoint_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.register_modules": [[21, 25], ["checkpoints.CheckpointIO.module_dict.update"], "methods", ["None"], ["", "", "def", "register_modules", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "''' Registers modules in current module dictionary.\n        '''", "\n", "self", ".", "module_dict", ".", "update", "(", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.save": [[26, 39], ["checkpoints.CheckpointIO.module_dict.items", "torch.save", "os.path.isabs", "os.path.join", "v.state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.save"], ["", "def", "save", "(", "self", ",", "filename", ",", "**", "kwargs", ")", ":", "\n", "        ", "''' Saves the current module dictionary.\n\n        Args:\n            filename (str): name of output file\n        '''", "\n", "if", "not", "os", ".", "path", ".", "isabs", "(", "filename", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "filename", ")", "\n", "\n", "", "outdict", "=", "kwargs", "\n", "for", "k", ",", "v", "in", "self", ".", "module_dict", ".", "items", "(", ")", ":", "\n", "            ", "outdict", "[", "k", "]", "=", "v", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "outdict", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.load": [[40, 50], ["checkpoints.is_url", "checkpoints.CheckpointIO.load_url", "checkpoints.CheckpointIO.load_file"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.is_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_file"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "'''Loads a module dictionary from local file or url.\n        \n        Args:\n            filename (str): name of saved module dictionary\n        '''", "\n", "if", "is_url", "(", "filename", ")", ":", "\n", "            ", "return", "self", ".", "load_url", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "load_file", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.load_file": [[51, 69], ["os.path.exists", "os.path.isabs", "os.path.join", "print", "print", "torch.load", "checkpoints.CheckpointIO.parse_state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.parse_state_dict"], ["", "", "def", "load_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "'''Loads a module dictionary from file.\n        \n        Args:\n            filename (str): name of saved module dictionary\n        '''", "\n", "\n", "if", "not", "os", ".", "path", ".", "isabs", "(", "filename", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "filename", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "filename", ")", ":", "\n", "            ", "print", "(", "filename", ")", "\n", "print", "(", "'=> Loading checkpoint from local file...'", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "filename", ")", "\n", "scalars", "=", "self", ".", "parse_state_dict", "(", "state_dict", ")", "\n", "return", "scalars", "\n", "", "else", ":", "\n", "            ", "raise", "FileExistsError", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.load_url": [[70, 81], ["print", "print", "torch.utils.model_zoo.load_url", "checkpoints.CheckpointIO.parse_state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.parse_state_dict"], ["", "", "def", "load_url", "(", "self", ",", "url", ")", ":", "\n", "        ", "'''Load a module dictionary from url.\n        \n        Args:\n            url (str): url to saved model\n        '''", "\n", "print", "(", "url", ")", "\n", "print", "(", "'=> Loading checkpoint from url...'", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "url", ",", "progress", "=", "True", ")", "\n", "scalars", "=", "self", ".", "parse_state_dict", "(", "state_dict", ")", "\n", "return", "scalars", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.CheckpointIO.parse_state_dict": [[82, 97], ["checkpoints.CheckpointIO.module_dict.items", "v.load_state_dict", "print", "state_dict.items"], "methods", ["None"], ["", "def", "parse_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "'''Parse state_dict of model and return scalars.\n        \n        Args:\n            state_dict (dict): State dict of model\n    '''", "\n", "\n", "for", "k", ",", "v", "in", "self", ".", "module_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "v", ".", "load_state_dict", "(", "state_dict", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Warning: Could not find %s in checkpoint!'", "%", "k", ")", "\n", "", "", "scalars", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "\n", "if", "k", "not", "in", "self", ".", "module_dict", "}", "\n", "return", "scalars", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fn.checkpoints.is_url": [[98, 101], ["urllib.parse.urlparse"], "function", ["None"], ["", "", "def", "is_url", "(", "url", ")", ":", "\n", "    ", "scheme", "=", "urllib", ".", "parse", ".", "urlparse", "(", "url", ")", ".", "scheme", "\n", "return", "scheme", "in", "(", "'http'", ",", "'https'", ")", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.load_config": [[8, 36], ["yaml.load.get", "config.update_recursive", "open", "yaml.load", "config.load_config", "dict", "open", "yaml.load"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.update_recursive", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.load_config", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["def", "load_config", "(", "path", ",", "default_path", "=", "None", ")", ":", "\n", "    ", "''' Loads config file.\n\n    Args:  \n        path (str): path to config file\n        default_path (bool): whether to use default path\n    '''", "\n", "# Load configuration from file itself", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "cfg_special", "=", "yaml", ".", "load", "(", "f", ")", "\n", "\n", "# Check if we should inherit from a config", "\n", "", "inherit_from", "=", "cfg_special", ".", "get", "(", "'inherit_from'", ")", "\n", "\n", "# If yes, load this config first as default", "\n", "# If no, use the default_path", "\n", "if", "inherit_from", "is", "not", "None", ":", "\n", "        ", "cfg", "=", "load_config", "(", "inherit_from", ",", "default_path", ")", "\n", "", "elif", "default_path", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "default_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "cfg", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "        ", "cfg", "=", "dict", "(", ")", "\n", "\n", "# Include main configuration", "\n", "", "update_recursive", "(", "cfg", ",", "cfg_special", ")", "\n", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.update_recursive": [[37, 52], ["dict2.items", "isinstance", "dict", "config.update_recursive"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.update_recursive"], ["", "def", "update_recursive", "(", "dict1", ",", "dict2", ")", ":", "\n", "    ", "''' Update two config dictionaries recursively.\n\n    Args:\n        dict1 (dict): first dictionary to be updated\n        dict2 (dict): second dictionary which entries should be used\n\n    '''", "\n", "for", "k", ",", "v", "in", "dict2", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "not", "in", "dict1", ":", "\n", "            ", "dict1", "[", "k", "]", "=", "dict", "(", ")", "\n", "", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "update_recursive", "(", "dict1", "[", "k", "]", ",", "v", ")", "\n", "", "else", ":", "\n", "            ", "dict1", "[", "k", "]", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.get_dataset": [[55, 70], ["fd.datacore.Shapes3dDataset", "fd.field.PointCloudField", "fd.field.fdField"], "function", ["None"], ["    ", "splits", "=", "{", "\n", "'train'", ":", "cfg", "[", "'data'", "]", "[", "'train_split'", "]", ",", "\n", "'val'", ":", "cfg", "[", "'data'", "]", "[", "'val_split'", "]", ",", "\n", "'test'", ":", "cfg", "[", "'data'", "]", "[", "'test_split'", "]", ",", "\n", "}", "\n", "split", "=", "splits", "[", "mode", "]", "\n", "dataset_folder", "=", "cfg", "[", "'data'", "]", "[", "'path'", "]", "\n", "\n", "\n", "fields", "=", "[", "field", ".", "PointCloudField", "(", "cfg", "[", "'data'", "]", "[", "'pointcloud_file'", "]", ")", ",", "field", ".", "fnField", "(", ")", "]", "\n", "\n", "dataset", "=", "datacore", ".", "Shapes3dDataset", "(", "dataset_folder", ",", "fields", ",", "split", "=", "split", ")", "\n", "return", "dataset", "\n", "\n", "", "def", "get_model", "(", "cfg", ",", "device", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.config.get_model": [[71, 84], ["fd.coder.pyramid_Decoder3", "fd.coder.DGCNN_cls", "fd.coder.OccupancyNetwork"], "function", ["None"], ["    ", "dim", "=", "cfg", "[", "'model'", "]", "[", "'dim'", "]", "\n", "c_dim", "=", "cfg", "[", "'model'", "]", "[", "'c_dim'", "]", "\n", "encoder_kwargs", "=", "cfg", "[", "'model'", "]", "[", "'encoder_kwargs'", "]", "\n", "\n", "decoder", "=", "coder", ".", "pyramid_Decoder3", "(", ")", "\n", "encoder", "=", "coder", ".", "DGCNN_cls", "(", "20", ",", "1024", ")", "\n", "#encoder=coder.ResnetPointnet()", "\n", "model", "=", "coder", ".", "OccupancyNetwork", "(", "decoder", ",", "encoder", ",", "device", "=", "device", ")", "\n", "\n", "\n", "return", "model", "\n", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.field.PointCloudField.__init__": [[21, 23], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "file_name", ")", ":", "\n", "        ", "self", ".", "file_name", "=", "file_name", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.field.PointCloudField.load": [[24, 43], ["os.path.join", "numpy.load", "pointcloud_dict[].astype"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["\n", "", "def", "load", "(", "self", ",", "model_path", ")", ":", "\n", "        ", "''' Loads the data point.\n\n        Args:\n            model_path (str): path to model\n            idx (int): ID of data point\n            category (int): index of category\n        '''", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "self", ".", "file_name", ")", "\n", "pointcloud_dict", "=", "np", ".", "load", "(", "file_path", ")", "\n", "\n", "points", "=", "pointcloud_dict", "[", "'points'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "data", "=", "{", "\n", "'cloud'", ":", "points", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.field.fdField.__init__": [[48, 50], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "file_name", "=", "'fn.npz'", "\n", "", "def", "load", "(", "self", ",", "model_path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.field.fdField.load": [[52, 68], ["os.path.join", "numpy.load", "pointcloud_dict[].astype", "pointcloud_dict[].astype", "pointcloud_dict[].astype"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "self", ".", "file_name", ")", "\n", "fn_dict", "=", "np", ".", "load", "(", "file_path", ")", "\n", "points", "=", "fn_dict", "[", "'points'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "normals", "=", "fn_dict", "[", "'normals'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "data", "=", "{", "\n", "'input'", ":", "points", ",", "\n", "'normal'", ":", "normals", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.cos_sim": [[24, 27], ["scores.mean", "torch.acos", "torch.cosine_similarity"], "methods", ["None"], ["def", "cos_sim", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "scores", "=", "torch", ".", "acos", "(", "torch", ".", "cosine_similarity", "(", "x1", ",", "x2", ",", "dim", "=", "2", ")", ")", "/", "numpy", ".", "pi", "\n", "return", "scores", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.__init__": [[29, 41], ["os.makedirs", "os.path.exists"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "model", ",", "optimizer", ",", "device", "=", "None", ",", "input_type", "=", "'img'", ",", "\n", "vis_dir", "=", "None", ",", "threshold", "=", "0.5", ",", "eval_sample", "=", "False", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "input_type", "=", "input_type", "\n", "self", ".", "vis_dir", "=", "vis_dir", "\n", "self", ".", "threshold", "=", "threshold", "\n", "self", ".", "eval_sample", "=", "eval_sample", "\n", "\n", "if", "vis_dir", "is", "not", "None", "and", "not", "os", ".", "path", ".", "exists", "(", "vis_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "vis_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.train_step": [[42, 55], ["trainer.Trainer.model.train", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.compute_loss", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "trainer.Trainer.item"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.compute_loss"], ["", "", "def", "train_step", "(", "self", ",", "data", ")", ":", "\n", "        ", "''' Performs a training step.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "self", ".", "compute_loss", "(", "data", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", ".", "item", "(", ")", "\n", "", "def", "evaluate", "(", "self", ",", "val_loader", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.evaluate": [[55, 69], ["tqdm.tqdm.tqdm", "trainer.Trainer.eval_step", "trainer.Trainer.float"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.eval_step"], ["        ", "''' Performs an evaluation.\n        Args:\n            val_loader (dataloader): pytorch dataloader\n        '''", "\n", "\n", "val", "=", "0.0", "\n", "num", "=", "0", "\n", "for", "data", "in", "tqdm", "(", "val_loader", ")", ":", "\n", "            ", "eval_step_dict", "=", "self", ".", "eval_step", "(", "data", ")", "\n", "val", "=", "val", "+", "eval_step_dict", ".", "float", "(", ")", "\n", "num", "=", "num", "+", "1", "\n", "\n", "", "return", "val", "/", "num", "\n", "\n", "", "def", "eval_step", "(", "self", ",", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.eval_step": [[70, 89], ["trainer.Trainer.model.eval", "data.get().to().float", "data.get().to().float", "torch.no_grad", "trainer.Trainer.model.compute_loss", "data.get().to", "data.get().to", "data.get", "data.get"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.compute_loss"], ["        ", "''' Performs an evaluation step.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "device", "=", "self", ".", "device", "\n", "# Compute elbo", "\n", "\n", "points", "=", "data", ".", "get", "(", "'input'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "output", "=", "data", ".", "get", "(", "'normal'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "kwargs", "=", "{", "}", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "mae", "=", "self", ".", "model", ".", "compute_loss", "(", "points", ",", "output", ")", "\n", "\n", "", "return", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.trainer.Trainer.compute_loss": [[90, 109], ["data.get().to().float", "data.get().to().float", "trainer.Trainer.model.encode_inputs", "trainer.Trainer.model.decode", "output.reshape.reshape.reshape", "torch.nn.MSELoss", "torch.nn.MSELoss.", "torch.nn.MSELoss.float", "data.get().to", "data.get().to", "data.get", "data.get"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["", "def", "compute_loss", "(", "self", ",", "data", ")", ":", "\n", "        ", "''' Computes the loss.\n\n        Args:\n            data (dict): data dictionary\n        '''", "\n", "device", "=", "self", ".", "device", "\n", "\n", "points", "=", "data", ".", "get", "(", "'input'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "output", "=", "data", ".", "get", "(", "'normal'", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "c", "=", "self", ".", "model", ".", "encode_inputs", "(", "points", ")", "\n", "n", "=", "self", ".", "model", ".", "decode", "(", "c", ")", "\n", "n", "=", "n", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "output", "=", "output", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "loss_fn", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.ResnetBlockFC.__init__": [[15, 37], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "min", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "size_in", ",", "size_out", "=", "None", ",", "size_h", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "min", "(", "size_in", ",", "size_out", ")", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "self", ".", "fc_0", "=", "nn", ".", "Linear", "(", "size_in", ",", "size_h", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Linear", "(", "size_h", ",", "size_out", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm1d", "(", "size_out", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Linear", "(", "size_in", ",", "size_out", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.ResnetBlockFC.forward": [[39, 49], ["layers.ResnetBlockFC.actvn", "layers.ResnetBlockFC.fc_1", "layers.ResnetBlockFC.actvn", "layers.ResnetBlockFC.bn0", "layers.ResnetBlockFC.shortcut", "layers.ResnetBlockFC.fc_0"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "net", "=", "self", ".", "actvn", "(", "self", ".", "bn0", "(", "self", ".", "fc_0", "(", "x", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "net", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "self", ".", "actvn", "(", "x_s", "+", "dx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CResnetBlockConv1d.__init__": [[63, 97], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.init.zeros_", "torch.init.zeros_", "layers.CBatchNorm1d", "layers.CBatchNorm1d", "layers.CBatchNorm1d_legacy", "layers.CBatchNorm1d_legacy", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "size_in", ",", "size_h", "=", "None", ",", "size_out", "=", "None", ",", "\n", "norm_method", "=", "'batch_norm'", ",", "legacy", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "size_in", "\n", "", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "if", "not", "legacy", ":", "\n", "            ", "self", ".", "bn_0", "=", "CBatchNorm1d", "(", "\n", "c_dim", ",", "size_in", ",", "norm_method", "=", "norm_method", ")", "\n", "self", ".", "bn_1", "=", "CBatchNorm1d", "(", "\n", "c_dim", ",", "size_h", ",", "norm_method", "=", "norm_method", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bn_0", "=", "CBatchNorm1d_legacy", "(", "\n", "c_dim", ",", "size_in", ",", "norm_method", "=", "norm_method", ")", "\n", "self", ".", "bn_1", "=", "CBatchNorm1d_legacy", "(", "\n", "c_dim", ",", "size_h", ",", "norm_method", "=", "norm_method", ")", "\n", "\n", "", "self", ".", "fc_0", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_h", ",", "1", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Conv1d", "(", "size_h", ",", "size_out", ",", "1", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_out", ",", "1", ",", "bias", "=", "False", ")", "\n", "# Initialization", "\n", "", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_1", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CResnetBlockConv1d.forward": [[98, 108], ["layers.CResnetBlockConv1d.fc_0", "layers.CResnetBlockConv1d.fc_1", "layers.CResnetBlockConv1d.actvn", "layers.CResnetBlockConv1d.actvn", "layers.CResnetBlockConv1d.shortcut", "layers.CResnetBlockConv1d.bn_0", "layers.CResnetBlockConv1d.bn_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "net", "=", "self", ".", "fc_0", "(", "self", ".", "actvn", "(", "self", ".", "bn_0", "(", "x", ",", "c", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "self", ".", "actvn", "(", "self", ".", "bn_1", "(", "net", ",", "c", ")", ")", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "x_s", "+", "dx", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.ResnetBlockConv1d.__init__": [[119, 145], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.init.zeros_", "torch.init.zeros_", "torch.Conv1d", "torch.Conv1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["def", "__init__", "(", "self", ",", "size_in", ",", "size_h", "=", "None", ",", "size_out", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# Attributes", "\n", "if", "size_h", "is", "None", ":", "\n", "            ", "size_h", "=", "size_in", "\n", "", "if", "size_out", "is", "None", ":", "\n", "            ", "size_out", "=", "size_in", "\n", "\n", "", "self", ".", "size_in", "=", "size_in", "\n", "self", ".", "size_h", "=", "size_h", "\n", "self", ".", "size_out", "=", "size_out", "\n", "# Submodules", "\n", "self", ".", "bn_0", "=", "nn", ".", "BatchNorm1d", "(", "size_in", ")", "\n", "self", ".", "bn_1", "=", "nn", ".", "BatchNorm1d", "(", "size_h", ")", "\n", "\n", "self", ".", "fc_0", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_h", ",", "1", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Conv1d", "(", "size_h", ",", "size_out", ",", "1", ")", "\n", "self", ".", "actvn", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "if", "size_in", "==", "size_out", ":", "\n", "            ", "self", ".", "shortcut", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Conv1d", "(", "size_in", ",", "size_out", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "# Initialization", "\n", "", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_1", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.ResnetBlockConv1d.forward": [[146, 156], ["layers.ResnetBlockConv1d.fc_0", "layers.ResnetBlockConv1d.fc_1", "layers.ResnetBlockConv1d.actvn", "layers.ResnetBlockConv1d.actvn", "layers.ResnetBlockConv1d.shortcut", "layers.ResnetBlockConv1d.bn_0", "layers.ResnetBlockConv1d.bn_1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "net", "=", "self", ".", "fc_0", "(", "self", ".", "actvn", "(", "self", ".", "bn_0", "(", "x", ")", ")", ")", "\n", "dx", "=", "self", ".", "fc_1", "(", "self", ".", "actvn", "(", "self", ".", "bn_1", "(", "net", ")", ")", ")", "\n", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "x_s", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x_s", "=", "x", "\n", "\n", "", "return", "x_s", "+", "dx", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.AffineLayer.__init__": [[167, 175], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "layers.AffineLayer.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "dim", "=", "3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "dim", "=", "dim", "\n", "# Submodules", "\n", "self", ".", "fc_A", "=", "nn", ".", "Linear", "(", "c_dim", ",", "dim", "*", "dim", ")", "\n", "self", ".", "fc_b", "=", "nn", ".", "Linear", "(", "c_dim", ",", "dim", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.AffineLayer.reset_parameters": [[176, 182], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "layers.AffineLayer.fc_A.bias.copy_", "layers.AffineLayer.fc_b.bias.copy_", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_A", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_b", ".", "weight", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "fc_A", ".", "bias", ".", "copy_", "(", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "self", ".", "fc_b", ".", "bias", ".", "copy_", "(", "torch", ".", "tensor", "(", "[", "0.", ",", "0.", ",", "2.", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.AffineLayer.forward": [[183, 191], ["x.size", "layers.AffineLayer.fc_A().view", "layers.AffineLayer.fc_b().view", "x.size", "p.size", "p.size", "layers.AffineLayer.fc_A", "layers.AffineLayer.fc_b"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "p", ")", ":", "\n", "        ", "assert", "(", "x", ".", "size", "(", "0", ")", "==", "p", ".", "size", "(", "0", ")", ")", "\n", "assert", "(", "p", ".", "size", "(", "2", ")", "==", "self", ".", "dim", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "A", "=", "self", ".", "fc_A", "(", "x", ")", ".", "view", "(", "batch_size", ",", "3", ",", "3", ")", "\n", "b", "=", "self", ".", "fc_b", "(", "x", ")", ".", "view", "(", "batch_size", ",", "1", ",", "3", ")", "\n", "out", "=", "p", "@", "A", "+", "b", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d.__init__": [[202, 219], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "layers.CBatchNorm1d.reset_parameters", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.InstanceNorm1d", "torch.InstanceNorm1d", "torch.GroupNorm1d", "torch.GroupNorm1d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "f_dim", ",", "norm_method", "=", "'batch_norm'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "f_dim", "=", "f_dim", "\n", "self", ".", "norm_method", "=", "norm_method", "\n", "# Submodules", "\n", "self", ".", "conv_gamma", "=", "nn", ".", "Conv1d", "(", "c_dim", ",", "f_dim", ",", "1", ")", "\n", "self", ".", "conv_beta", "=", "nn", ".", "Conv1d", "(", "c_dim", ",", "f_dim", ",", "1", ")", "\n", "if", "norm_method", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'instance_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "InstanceNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'group_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "GroupNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid normalization method!'", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d.reset_parameters": [[220, 225], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_", "torch.init.ones_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_gamma", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_beta", ".", "weight", ")", "\n", "nn", ".", "init", ".", "ones_", "(", "self", ".", "conv_gamma", ".", "bias", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "conv_beta", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d.forward": [[226, 243], ["layers.CBatchNorm1d.conv_gamma", "layers.CBatchNorm1d.conv_beta", "layers.CBatchNorm1d.bn", "x.size", "c.unsqueeze.unsqueeze.size", "c.unsqueeze.unsqueeze.size", "len", "c.unsqueeze.unsqueeze.unsqueeze", "c.unsqueeze.unsqueeze.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "assert", "(", "x", ".", "size", "(", "0", ")", "==", "c", ".", "size", "(", "0", ")", ")", "\n", "assert", "(", "c", ".", "size", "(", "1", ")", "==", "self", ".", "c_dim", ")", "\n", "\n", "# c is assumed to be of size batch_size x c_dim x T", "\n", "if", "len", "(", "c", ".", "size", "(", ")", ")", "==", "2", ":", "\n", "            ", "c", "=", "c", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "# Affine mapping", "\n", "", "gamma", "=", "self", ".", "conv_gamma", "(", "c", ")", "\n", "beta", "=", "self", ".", "conv_beta", "(", "c", ")", "\n", "\n", "# Batchnorm", "\n", "net", "=", "self", ".", "bn", "(", "x", ")", "\n", "out", "=", "gamma", "*", "net", "+", "beta", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.__init__": [[254, 271], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "layers.CBatchNorm1d_legacy.reset_parameters", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.InstanceNorm1d", "torch.InstanceNorm1d", "torch.GroupNorm1d", "torch.GroupNorm1d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters"], ["def", "__init__", "(", "self", ",", "c_dim", ",", "f_dim", ",", "norm_method", "=", "'batch_norm'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "self", ".", "f_dim", "=", "f_dim", "\n", "self", ".", "norm_method", "=", "norm_method", "\n", "# Submodules", "\n", "self", ".", "fc_gamma", "=", "nn", ".", "Linear", "(", "c_dim", ",", "f_dim", ")", "\n", "self", ".", "fc_beta", "=", "nn", ".", "Linear", "(", "c_dim", ",", "f_dim", ")", "\n", "if", "norm_method", "==", "'batch_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'instance_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "InstanceNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "elif", "norm_method", "==", "'group_norm'", ":", "\n", "            ", "self", ".", "bn", "=", "nn", ".", "GroupNorm1d", "(", "f_dim", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid normalization method!'", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.reset_parameters": [[272, 277], ["torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_", "torch.init.ones_", "torch.init.zeros_", "torch.init.zeros_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_gamma", ".", "weight", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_beta", ".", "weight", ")", "\n", "nn", ".", "init", ".", "ones_", "(", "self", ".", "fc_gamma", ".", "bias", ")", "\n", "nn", ".", "init", ".", "zeros_", "(", "self", ".", "fc_beta", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.layers.CBatchNorm1d_legacy.forward": [[278, 290], ["x.size", "layers.CBatchNorm1d_legacy.fc_gamma", "layers.CBatchNorm1d_legacy.fc_beta", "gamma.view.view.view", "beta.view.view.view", "layers.CBatchNorm1d_legacy.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "# Affine mapping", "\n", "gamma", "=", "self", ".", "fc_gamma", "(", "c", ")", "\n", "beta", "=", "self", ".", "fc_beta", "(", "c", ")", "\n", "gamma", "=", "gamma", ".", "view", "(", "batch_size", ",", "self", ".", "f_dim", ",", "1", ")", "\n", "beta", "=", "beta", ".", "view", "(", "batch_size", ",", "self", ".", "f_dim", ",", "1", ")", "\n", "# Batchnorm", "\n", "net", "=", "self", ".", "bn", "(", "x", ")", "\n", "out", "=", "gamma", "*", "net", "+", "beta", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.DGCNN_cls.__init__": [[16, 42], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["return", "scores", ".", "mean", "(", ")", "\n", "", "class", "DGCNN_cls", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "k", ",", "emb_dims", ")", ":", "\n", "        ", "super", "(", "DGCNN_cls", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "emb_dims", "=", "emb_dims", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "self", ".", "emb_dims", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "6", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", "*", "2", ",", "256", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn4", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "512", ",", "self", ".", "emb_dims", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn5", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.DGCNN_cls.forward": [[51, 82], ["torch.cat.reshape", "torch.cat.reshape", "torch.cat.reshape", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.permute", "torch.cat.permute", "torch.cat.permute", "coder.get_graph_feature", "coder.DGCNN_cls.conv1", "coder.get_graph_feature", "coder.DGCNN_cls.conv2", "coder.get_graph_feature", "coder.DGCNN_cls.conv3", "coder.get_graph_feature", "coder.DGCNN_cls.conv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "coder.DGCNN_cls.conv5", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature"], ["#  self.linear3 = nn.Linear(256, output_channels)", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "x", ".", "reshape", "(", "x", ".", "shape", "[", "0", "]", "*", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", "\n", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "x", "=", "get_graph_feature", "(", "x", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 3, num_points) -> (batch_size, 3*2, num_points, k)", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "# (batch_size, 3*2, num_points, k) -> (batch_size, 64, num_points, k)", "\n", "x1", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 64, num_points, k) -> (batch_size, 64, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x1", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 64, num_points) -> (batch_size, 64*2, num_points, k)", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "# (batch_size, 64*2, num_points, k) -> (batch_size, 64, num_points, k)", "\n", "x2", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 64, num_points, k) -> (batch_size, 64, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x2", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 64, num_points) -> (batch_size, 64*2, num_points, k)", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "# (batch_size, 64*2, num_points, k) -> (batch_size, 128, num_points, k)", "\n", "x3", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 128, num_points, k) -> (batch_size, 128, num_points)", "\n", "\n", "x", "=", "get_graph_feature", "(", "x3", ",", "k", "=", "self", ".", "k", ")", "# (batch_size, 128, num_points) -> (batch_size, 128*2, num_points, k)", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "# (batch_size, 128*2, num_points, k) -> (batch_size, 256, num_points, k)", "\n", "x4", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "# (batch_size, 256, num_points, k) -> (batch_size, 256, num_points)", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "# (batch_size, 64+64+128+256, num_points)", "\n", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "# (batch_size, 64+64+128+256, num_points) -> (batch_size, emb_dims, num_points)", "\n", "x1", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# (batch_size, emb_dims, num_points) -> (batch_size, emb_dims)", "\n", "x2", "=", "F", ".", "adaptive_avg_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "# (batch_size, emb_dims, num_points) -> (batch_size, emb_dims)", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "1", ")", "# (batch_size, emb_dims*2)", "\n", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.Decoder.__init__": [[136, 159], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "fd.layers.ResnetBlockFC", "fd.layers.ResnetBlockFC", "fd.layers.ResnetBlockFC", "fd.layers.ResnetBlockFC", "fd.layers.ResnetBlockFC", "torch.Linear", "torch.Linear", "torch.Linear", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["\n", "def", "__init__", "(", "self", ",", "dim", "=", "3", ",", "c_dim", "=", "128", ",", "\n", "hidden_size", "=", "128", ",", "leaky", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "c_dim", "=", "c_dim", "\n", "\n", "# Submodules", "\n", "self", ".", "fc_p", "=", "nn", ".", "Linear", "(", "dim", ",", "hidden_size", ")", "\n", "\n", "self", ".", "fc_c", "=", "nn", ".", "Linear", "(", "c_dim", ",", "hidden_size", ")", "\n", "\n", "self", ".", "block0", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block1", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block2", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block3", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "self", ".", "block4", "=", "ResnetBlockFC", "(", "hidden_size", "*", "2", ")", "\n", "\n", "self", ".", "fc_out", "=", "nn", ".", "Linear", "(", "hidden_size", "*", "2", ",", "3", ")", "\n", "\n", "if", "not", "leaky", ":", "\n", "            ", "self", ".", "actvn", "=", "F", ".", "relu", "\n", "", "else", ":", "\n", "            ", "self", ".", "actvn", "=", "lambda", "x", ":", "F", ".", "leaky_relu", "(", "x", ",", "0.2", ")", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.Decoder.forward": [[160, 184], ["p.size", "coder.Decoder.fc_p", "coder.Decoder.fc_c", "net_c.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "coder.Decoder.block0", "coder.Decoder.block1", "coder.Decoder.block2", "coder.Decoder.block3", "coder.Decoder.block4", "coder.Decoder.fc_out", "coder.Decoder.actvn", "net_c.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["\n", "", "", "def", "forward", "(", "self", ",", "p", ",", "c", ")", ":", "\n", "        ", "batch_size", ",", "T", ",", "D", "=", "p", ".", "size", "(", ")", "\n", "#print(p.shape, c.shape)", "\n", "\n", "net", "=", "self", ".", "fc_p", "(", "p", ")", "\n", "\n", "#print(net.shape)", "\n", "\n", "net_c", "=", "self", ".", "fc_c", "(", "c", ")", "\n", "#print(net_c.shape)", "\n", "net_c", "=", "net_c", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "net", ".", "shape", ")", "\n", "#print(net_c.shape)", "\n", "\n", "net", "=", "torch", ".", "cat", "(", "(", "net", ",", "net_c", ")", ",", "2", ")", "\n", "\n", "#print(net.shape)", "\n", "\n", "\n", "net", "=", "self", ".", "block0", "(", "net", ")", "\n", "net", "=", "self", ".", "block1", "(", "net", ")", "\n", "net", "=", "self", ".", "block2", "(", "net", ")", "\n", "net", "=", "self", ".", "block3", "(", "net", ")", "\n", "net", "=", "self", ".", "block4", "(", "net", ")", "\n", "#print(net.shape)", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.pyramid_Decoder3.__init__": [[189, 205], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["\n", "", "", "class", "pyramid_Decoder3", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Submodules", "\n", "\n", "self", ".", "fc_c", "=", "nn", ".", "Linear", "(", "2048", ",", "1024", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "\n", "self", ".", "block1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "\n", "self", ".", "block2", "=", "nn", ".", "Linear", "(", "512", ",", "128", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.pyramid_Decoder3.forward": [[206, 214], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "coder.pyramid_Decoder3.bn3().squeeze", "coder.pyramid_Decoder3.bn0", "coder.pyramid_Decoder3.bn1", "coder.pyramid_Decoder3.bn2", "coder.pyramid_Decoder3.fc_c", "coder.pyramid_Decoder3.block1", "coder.pyramid_Decoder3.block2", "coder.pyramid_Decoder3.bn3", "coder.pyramid_Decoder3.fc_out"], "methods", ["None"], ["\n", "self", ".", "fc_out", "=", "nn", ".", "Linear", "(", "128", ",", "3", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "3", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "c", ")", ":", "\n", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn0", "(", "self", ".", "fc_c", "(", "c", ")", ")", ")", "# bnumber,2048+64 -> # bnumber,1024 ", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "block1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "block2", "(", "x", ")", ")", ")", "# bnumber,512 -> # bnumber,128 ", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.__init__": [[219, 226], ["torch.Module.__init__", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel.to", "torch.DataParallel.to"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__"], ["\n", "\n", "\n", "", "", "class", "OccupancyNetwork", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "decoder", ",", "encoder", ",", "device", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "decoder", "=", "nn", ".", "DataParallel", "(", "decoder", ")", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.forward": [[228, 233], ["coder.OccupancyNetwork.encode_inputs", "coder.OccupancyNetwork.decode"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["self", ".", "decoder", "=", "decoder", ".", "to", "(", "device", ")", "\n", "self", ".", "encoder", "=", "encoder", ".", "to", "(", "device", ")", "\n", "self", ".", "_device", "=", "device", "\n", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.compute_loss": [[234, 243], ["coder.OccupancyNetwork.encode_inputs", "coder.OccupancyNetwork.decode", "output.reshape.reshape.reshape", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss.", "torch.nn.L1Loss.", "torch.nn.L1Loss."], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode"], ["\n", "        ", "c", "=", "self", ".", "encode_inputs", "(", "inputs", ")", "\n", "n", "=", "self", ".", "decode", "(", "c", ")", "\n", "return", "n", "\n", "\n", "", "def", "compute_loss", "(", "self", ",", "inputs", ",", "output", ")", ":", "\n", "\n", "        ", "c", "=", "self", ".", "encode_inputs", "(", "inputs", ")", "\n", "n1", "=", "self", ".", "decode", "(", "c", ")", "\n", "output", "=", "output", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.encode_inputs": [[244, 247], ["coder.OccupancyNetwork.encoder"], "methods", ["None"], ["loss", "=", "cos_sim", "(", "n1", ",", "output", ")", "\n", "return", "loss", "\n", "\n", "", "def", "encode_inputs", "(", "self", ",", "inputs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.OccupancyNetwork.decode": [[248, 251], ["coder.OccupancyNetwork.decoder"], "methods", ["None"], ["        ", "c", "=", "self", ".", "encoder", "(", "inputs", ")", "\n", "return", "c", "\n", "\n", "", "def", "decode", "(", "self", ",", "c", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.knn": [[7, 14], ["torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum.transpose", "pairwise_distance.topk", "x.transpose"], "function", ["None"], ["def", "knn", "(", "x", ",", "k", ")", ":", "\n", "    ", "inner", "=", "-", "2", "*", "torch", ".", "matmul", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ",", "x", ")", "\n", "xx", "=", "torch", ".", "sum", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pairwise_distance", "=", "-", "xx", "-", "inner", "-", "xx", ".", "transpose", "(", "2", ",", "1", ")", "\n", "\n", "idx", "=", "pairwise_distance", ".", "topk", "(", "k", "=", "k", ",", "dim", "=", "-", "1", ")", "[", "1", "]", "# (batch_size, num_points, k)", "\n", "return", "idx", "\n", "", "def", "cos_sim", "(", "x1", ",", "x2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.get_graph_feature": [[84, 116], ["x.view().repeat.size", "x.view().repeat.size", "x.view().repeat.view", "torch.device", "torch.device", "torch.device", "knn.view", "x.view().repeat.size", "x.view().repeat.transpose().contiguous", "torch.cat().permute().contiguous.view", "x.view().repeat.view().repeat", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.cat().permute().contiguous", "torch.arange().view", "torch.arange().view", "torch.arange().view", "x.view().repeat.view", "coder.knn", "coder.knn", "x.view().repeat.transpose", "x.view().repeat.view", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "torch.arange", "torch.arange", "torch.arange", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.knn", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.knn"], ["\n", "", "", "def", "get_graph_feature", "(", "x", ",", "k", "=", "20", ",", "idx", "=", "None", ",", "dim9", "=", "False", ")", ":", "\n", "    ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "num_points", "=", "x", ".", "size", "(", "2", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "-", "1", ",", "num_points", ")", "\n", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "if", "dim9", "==", "False", ":", "\n", "            ", "idx", "=", "knn", "(", "x", ",", "k", "=", "k", ")", "# (batch_size, num_points, k)", "\n", "", "else", ":", "\n", "            ", "idx", "=", "knn", "(", "x", "[", ":", ",", "6", ":", "]", ",", "k", "=", "k", ")", "\n", "", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "\n", "idx_base", "=", "torch", ".", "arange", "(", "0", ",", "batch_size", ",", "device", "=", "device", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "*", "num_points", "\n", "\n", "idx", "=", "idx", "+", "idx_base", "\n", "\n", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "\n", "_", ",", "num_dims", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (batch_size, num_points, num_dims)  -> (batch_size*num_points, num_dims) #   batch_size * num_points * k + range(0, batch_size*num_points)", "\n", "\n", "feature", "=", "x", ".", "view", "(", "batch_size", "*", "num_points", ",", "-", "1", ")", "[", "idx", ",", ":", "]", "\n", "\n", "feature", "=", "feature", ".", "view", "(", "batch_size", ",", "num_points", ",", "k", ",", "num_dims", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "num_points", ",", "1", ",", "num_dims", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ",", "1", ")", "\n", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "feature", "-", "x", ",", "x", ")", ",", "dim", "=", "3", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "feature", "# (batch_size, 2*num_dims, num_points, k)", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.coder.maxpool": [[119, 122], ["x.max"], "function", ["None"], ["\n", "", "def", "maxpool", "(", "x", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", ":", "\n", "    ", "out", ",", "_", "=", "x", ".", "max", "(", "dim", "=", "dim", ",", "keepdim", "=", "keepdim", ")", "\n", "return", "out", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.rotation_matrix_from_vectors": [[5, 20], ["numpy.cross", "any", "numpy.dot", "numpy.linalg.norm", "numpy.array", "numpy.eye", "numpy.eye", "np.array.dot", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["def", "rotation_matrix_from_vectors", "(", "vec1", ",", "vec2", ")", ":", "\n", "    ", "\"\"\" Find the rotation matrix that aligns vec1 to vec2\n    :param vec1: A 3d \"source\" vector\n    :param vec2: A 3d \"destination\" vector\n    :return mat: A transform matrix (3x3) which when applied to vec1, aligns it with vec2.\n    \"\"\"", "\n", "a", ",", "b", "=", "(", "vec1", "/", "np", ".", "linalg", ".", "norm", "(", "vec1", ")", ")", ".", "reshape", "(", "3", ")", ",", "(", "vec2", "/", "np", ".", "linalg", ".", "norm", "(", "vec2", ")", ")", ".", "reshape", "(", "3", ")", "\n", "v", "=", "np", ".", "cross", "(", "a", ",", "b", ")", "\n", "if", "any", "(", "v", ")", ":", "#if not all zeros then ", "\n", "        ", "c", "=", "np", ".", "dot", "(", "a", ",", "b", ")", "\n", "s", "=", "np", ".", "linalg", ".", "norm", "(", "v", ")", "\n", "kmat", "=", "np", ".", "array", "(", "[", "[", "0", ",", "-", "v", "[", "2", "]", ",", "v", "[", "1", "]", "]", ",", "[", "v", "[", "2", "]", ",", "0", ",", "-", "v", "[", "0", "]", "]", ",", "[", "-", "v", "[", "1", "]", ",", "v", "[", "0", "]", ",", "0", "]", "]", ")", "\n", "return", "np", ".", "eye", "(", "3", ")", "+", "kmat", "+", "kmat", ".", "dot", "(", "kmat", ")", "*", "(", "(", "1", "-", "c", ")", "/", "(", "s", "**", "2", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "eye", "(", "3", ")", "#cross of all zeros only occurs on identical directions", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.PointcloudNoise": [[21, 35], ["data.copy", "noise.astype.astype", "numpy.random.randn"], "function", ["None"], ["", "", "def", "PointcloudNoise", "(", "data", ",", "stddev", ")", ":", "\n", "    ", "if", "stddev", "==", "0", ":", "\n", "        ", "return", "data", "\n", "\n", "", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "points", "=", "data", "[", "None", "]", "\n", "\n", "noise", "=", "stddev", "*", "np", ".", "random", ".", "randn", "(", "*", "points", ".", "shape", ")", "\n", "\n", "noise", "=", "noise", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "data_out", "[", "None", "]", "=", "points", "+", "noise", "\n", "\n", "return", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.SubsamplePointcloud": [[37, 44], ["data.copy", "numpy.random.randint"], "function", ["None"], ["", "def", "SubsamplePointcloud", "(", "data", ",", "N", ")", ":", "\n", "    ", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "points", "=", "data", "[", "'cloud'", "]", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "points", ".", "shape", "[", "0", "]", ",", "size", "=", "N", ")", "\n", "data_out", "[", "'cloud'", "]", "=", "points", "[", "indices", ",", ":", "]", "\n", "\n", "return", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.Subsamplerfd": [[47, 70], ["data.copy", "numpy.random.randint", "sklearn.neighbors.KDTree", "sklearn.neighbors.KDTree.query", "numpy.tile", "range", "numpy.expand_dims", "transform.rotation_matrix_from_vectors", "numpy.matmul"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.rotation_matrix_from_vectors"], ["", "def", "Subsamplefn", "(", "data", ",", "N", ",", "M", ")", ":", "\n", "    ", "data_out", "=", "data", ".", "copy", "(", ")", "\n", "\n", "indices", "=", "np", ".", "random", ".", "randint", "(", "data", "[", "'input'", "]", ".", "shape", "[", "0", "]", ",", "size", "=", "N", ")", "\n", "tinput", "=", "data_out", "[", "'input'", "]", "[", "indices", ",", ":", "]", "\n", "data_out", "[", "'normal'", "]", "=", "data_out", "[", "'normal'", "]", "[", "indices", ",", ":", "]", "\n", "\n", "tree", "=", "KDTree", "(", "data_out", "[", "'cloud'", "]", ")", "\n", "\n", "\n", "dist", ",", "idx", "=", "tree", ".", "query", "(", "tinput", ",", "M", ")", "\n", "data_out", "[", "'input'", "]", "=", "data_out", "[", "'cloud'", "]", "[", "idx", "]", "\n", "tinput", "=", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "tinput", ",", "1", ")", ",", "(", "1", ",", "M", ",", "1", ")", ")", "\n", "data_out", "[", "'input'", "]", "=", "data_out", "[", "'input'", "]", "-", "tinput", "\n", "\n", "return", "data_out", "\n", "\n", "\n", "", "def", "GdataKNN", "(", "data", ")", ":", "\n", "    ", "data", "=", "SubsamplePointcloud", "(", "data", ",", "2048", ")", "\n", "data", "=", "Subsamplefn", "(", "data", ",", "16", ",", "100", ")", "\n", "\n", "return", "data", "\n", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.GdataKNN": [[72, 77], ["transform.SubsamplePointcloud", "transform.Subsamplerfd"], "function", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.SubsamplePointcloud", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.Subsamplerfd"], []], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.Shapes3dDataset.__init__": [[14, 65], ["os.path.join", "os.path.exists", "enumerate", "enumerate", "os.listdir", "os.path.join", "os.path.join", "open", "yaml.load", "os.path.isdir", "logger.warning", "open", "f.read().split", "os.path.isdir", "os.path.join", "f.read"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["def", "__init__", "(", "self", ",", "dataset_folder", ",", "fields", ",", "split", "=", "None", ",", "\n", "categories", "=", "None", ",", "no_except", "=", "True", ",", "transform", "=", "None", ")", ":", "\n", "        ", "''' Initialization of the the 3D shape dataset.\n\n        Args:\n            dataset_folder (str): dataset folder\n            fields (dict): dictionary of fields\n            split (str): which split is used\n            categories (list): list of categories to use\n            no_except (bool): no exception\n            transform (callable): transformation applied to data points\n        '''", "\n", "# Attributes", "\n", "self", ".", "dataset_folder", "=", "dataset_folder", "\n", "self", ".", "fields", "=", "fields", "\n", "self", ".", "no_except", "=", "no_except", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "# If categories is None, use all subfolders", "\n", "if", "categories", "is", "None", ":", "\n", "            ", "categories", "=", "os", ".", "listdir", "(", "dataset_folder", ")", "\n", "categories", "=", "[", "c", "for", "c", "in", "categories", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "c", ")", ")", "]", "\n", "\n", "# Read metadata file", "\n", "\n", "", "metadata_file", "=", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "'metadata.yaml'", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "metadata_file", ")", ":", "\n", "            ", "with", "open", "(", "metadata_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "metadata", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "metadata", "=", "{", "\n", "c", ":", "{", "'id'", ":", "c", ",", "'name'", ":", "'n/a'", "}", "for", "c", "in", "categories", "\n", "}", "\n", "\n", "# Set index", "\n", "", "for", "c_idx", ",", "c", "in", "enumerate", "(", "categories", ")", ":", "\n", "            ", "self", ".", "metadata", "[", "c", "]", "[", "'idx'", "]", "=", "c_idx", "\n", "# Get all models", "\n", "", "self", ".", "models", "=", "[", "]", "\n", "for", "c_idx", ",", "c", "in", "enumerate", "(", "categories", ")", ":", "\n", "            ", "subpath", "=", "os", ".", "path", ".", "join", "(", "dataset_folder", ",", "c", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "subpath", ")", ":", "\n", "                ", "logger", ".", "warning", "(", "'Category %s does not exist in dataset.'", "%", "c", ")", "\n", "\n", "", "split_file", "=", "os", ".", "path", ".", "join", "(", "subpath", ",", "split", "+", "'.lst'", ")", "\n", "with", "open", "(", "split_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "models_c", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "\n", "", "self", ".", "models", "+=", "[", "{", "'category'", ":", "c", ",", "'model'", ":", "m", "}", "for", "m", "in", "models_c", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.Shapes3dDataset.__len__": [[67, 71], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "''' Returns the length of the dataset.\n        '''", "\n", "return", "len", "(", "self", ".", "models", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.Shapes3dDataset.__getitem__": [[72, 86], ["os.path.join", "fd.transform.GdataKNN", "dict", "datacore.Shapes3dDataset.fields[].load", "datacore.Shapes3dDataset.fields[].load"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.transform.GdataKNN", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "''' Returns an item of the dataset.\n\n        Args:\n            idx (int): ID of data point\n        '''", "\n", "category", "=", "self", ".", "models", "[", "idx", "]", "[", "'category'", "]", "\n", "model", "=", "self", ".", "models", "[", "idx", "]", "[", "'model'", "]", "\n", "c_idx", "=", "self", ".", "metadata", "[", "category", "]", "[", "'idx'", "]", "\n", "\n", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "category", ",", "model", ")", "\n", "data", "=", "tsf", ".", "GdataKNN", "(", "dict", "(", "self", ".", "fields", "[", "0", "]", ".", "load", "(", "model_path", ")", ",", "**", "self", ".", "fields", "[", "1", "]", ".", "load", "(", "model_path", ")", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.Shapes3dDataset.get_model_dict": [[87, 89], ["None"], "methods", ["None"], ["", "def", "get_model_dict", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "models", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.Shapes3dDataset.test_model_complete": [[90, 105], ["os.path.join", "os.listdir", "datacore.Shapes3dDataset.fields.items", "field.check_complete", "logger.warn"], "methods", ["None"], ["", "def", "test_model_complete", "(", "self", ",", "category", ",", "model", ")", ":", "\n", "        ", "''' Tests if model is complete.\n\n        Args:\n            model (str): modelname\n        '''", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_folder", ",", "category", ",", "model", ")", "\n", "files", "=", "os", ".", "listdir", "(", "model_path", ")", "\n", "for", "field_name", ",", "field", "in", "self", ".", "fields", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "field", ".", "check_complete", "(", "files", ")", ":", "\n", "                ", "logger", ".", "warn", "(", "'Field \"%s\" is incomplete: %s'", "\n", "%", "(", "field_name", ",", "model_path", ")", ")", "\n", "return", "False", "\n", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.collate_remove_none": [[107, 118], ["list", "torch.utils.data.dataloader.default_collate", "filter"], "function", ["None"], ["", "", "def", "collate_remove_none", "(", "batch", ")", ":", "\n", "    ", "''' Collater that puts each data field into a tensor with outer dimension\n        batch size.\n\n    Args:\n        batch: batch\n    '''", "\n", "\n", "batch", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", "is", "not", "None", ",", "batch", ")", ")", "\n", "\n", "return", "data", ".", "dataloader", ".", "default_collate", "(", "batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.datacore.worker_init_fn": [[120, 126], ["os.urandom", "int.from_bytes", "numpy.random.seed"], "function", ["None"], ["", "def", "worker_init_fn", "(", "worker_id", ")", ":", "\n", "    ", "''' Worker init function to ensure true randomness.\n    '''", "\n", "random_data", "=", "os", ".", "urandom", "(", "4", ")", "\n", "base_seed", "=", "int", ".", "from_bytes", "(", "random_data", ",", "byteorder", "=", "\"big\"", ")", "\n", "np", ".", "random", ".", "seed", "(", "base_seed", "+", "worker_id", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.__init__": [[15, 20], ["os.path.exists", "os.makedirs"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "checkpoint_dir", "=", "'./chkpts'", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "module_dict", "=", "kwargs", "\n", "self", ".", "checkpoint_dir", "=", "checkpoint_dir", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "checkpoint_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "checkpoint_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.register_modules": [[21, 25], ["checkpoints.CheckpointIO.module_dict.update"], "methods", ["None"], ["", "", "def", "register_modules", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "''' Registers modules in current module dictionary.\n        '''", "\n", "self", ".", "module_dict", ".", "update", "(", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.save": [[26, 39], ["checkpoints.CheckpointIO.module_dict.items", "torch.save", "os.path.isabs", "os.path.join", "v.state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.save"], ["", "def", "save", "(", "self", ",", "filename", ",", "**", "kwargs", ")", ":", "\n", "        ", "''' Saves the current module dictionary.\n\n        Args:\n            filename (str): name of output file\n        '''", "\n", "if", "not", "os", ".", "path", ".", "isabs", "(", "filename", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "filename", ")", "\n", "\n", "", "outdict", "=", "kwargs", "\n", "for", "k", ",", "v", "in", "self", ".", "module_dict", ".", "items", "(", ")", ":", "\n", "            ", "outdict", "[", "k", "]", "=", "v", ".", "state_dict", "(", ")", "\n", "", "torch", ".", "save", "(", "outdict", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load": [[40, 50], ["checkpoints.is_url", "checkpoints.CheckpointIO.load_url", "checkpoints.CheckpointIO.load_file"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.is_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_file"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "'''Loads a module dictionary from local file or url.\n        \n        Args:\n            filename (str): name of saved module dictionary\n        '''", "\n", "if", "is_url", "(", "filename", ")", ":", "\n", "            ", "return", "self", ".", "load_url", "(", "filename", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "load_file", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_file": [[51, 69], ["os.path.exists", "os.path.isabs", "os.path.join", "print", "print", "torch.load", "checkpoints.CheckpointIO.parse_state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.parse_state_dict"], ["", "", "def", "load_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "'''Loads a module dictionary from file.\n        \n        Args:\n            filename (str): name of saved module dictionary\n        '''", "\n", "\n", "if", "not", "os", ".", "path", ".", "isabs", "(", "filename", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_dir", ",", "filename", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "filename", ")", ":", "\n", "            ", "print", "(", "filename", ")", "\n", "print", "(", "'=> Loading checkpoint from local file...'", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "filename", ")", "\n", "scalars", "=", "self", ".", "parse_state_dict", "(", "state_dict", ")", "\n", "return", "scalars", "\n", "", "else", ":", "\n", "            ", "raise", "FileExistsError", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_url": [[70, 81], ["print", "print", "torch.utils.model_zoo.load_url", "checkpoints.CheckpointIO.parse_state_dict"], "methods", ["home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.load_url", "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.parse_state_dict"], ["", "", "def", "load_url", "(", "self", ",", "url", ")", ":", "\n", "        ", "'''Load a module dictionary from url.\n        \n        Args:\n            url (str): url to saved model\n        '''", "\n", "print", "(", "url", ")", "\n", "print", "(", "'=> Loading checkpoint from url...'", ")", "\n", "state_dict", "=", "model_zoo", ".", "load_url", "(", "url", ",", "progress", "=", "True", ")", "\n", "scalars", "=", "self", ".", "parse_state_dict", "(", "state_dict", ")", "\n", "return", "scalars", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.CheckpointIO.parse_state_dict": [[82, 97], ["checkpoints.CheckpointIO.module_dict.items", "v.load_state_dict", "print", "state_dict.items"], "methods", ["None"], ["", "def", "parse_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "'''Parse state_dict of model and return scalars.\n        \n        Args:\n            state_dict (dict): State dict of model\n    '''", "\n", "\n", "for", "k", ",", "v", "in", "self", ".", "module_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "v", ".", "load_state_dict", "(", "state_dict", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Warning: Could not find %s in checkpoint!'", "%", "k", ")", "\n", "", "", "scalars", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "\n", "if", "k", "not", "in", "self", ".", "module_dict", "}", "\n", "return", "scalars", "\n", "\n"]], "home.repos.pwc.inspect_result.xnowbzhao_sapcu.fd.checkpoints.is_url": [[98, 101], ["urllib.parse.urlparse"], "function", ["None"], ["", "", "def", "is_url", "(", "url", ")", ":", "\n", "    ", "scheme", "=", "urllib", ".", "parse", ".", "urlparse", "(", "url", ")", ".", "scheme", "\n", "return", "scheme", "in", "(", "'http'", ",", "'https'", ")", "", "", ""]]}