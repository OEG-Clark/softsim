{"home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.LNLSTM.LN_LSTMCell.__init__": [[15, 32], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "num_units", ",", "f_bias", "=", "1.0", ",", "use_zoneout", "=", "False", ",", "\n", "zoneout_keep_h", "=", "0.9", ",", "zoneout_keep_c", "=", "0.5", ",", "is_training", "=", "False", ")", ":", "\n", "        ", "\"\"\"Initialize the Layer Norm LSTM cell.\n        Args:\n          num_units: int, The number of units in the LSTM cell.\n          forget_bias: float, The bias added to forget gates (default 1.0).\n          use_recurrent_dropout: float, Whether to use Recurrent Dropout (default False)\n          dropout_keep_prob: float, dropout keep probability (default 0.90)\n        \"\"\"", "\n", "self", ".", "num_units", "=", "num_units", "\n", "self", ".", "f_bias", "=", "f_bias", "\n", "\n", "self", ".", "use_zoneout", "=", "use_zoneout", "\n", "self", ".", "zoneout_keep_h", "=", "zoneout_keep_h", "\n", "self", ".", "zoneout_keep_c", "=", "zoneout_keep_c", "\n", "\n", "self", ".", "is_training", "=", "is_training", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.LNLSTM.LN_LSTMCell.__call__": [[33, 66], ["tensorflow.variable_scope", "aux.orthogonal_initializer", "aux.orthogonal_initializer", "tensorflow.constant_initializer", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.concat", "tensorflow.concat", "aux.layer_norm_all", "tensorflow.split", "x.get_shape().as_list", "tensorflow.matmul", "tensorflow.tanh", "tensorflow.sigmoid", "aux.zoneout", "tensorflow.sigmoid", "tensorflow.sigmoid", "tensorflow.tanh", "aux.layer_norm", "type", "x.get_shape"], "methods", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal_initializer", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal_initializer", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.layer_norm_all", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.zoneout", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.layer_norm"], ["", "def", "__call__", "(", "self", ",", "x", ",", "state", ",", "scope", "=", "None", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", "or", "type", "(", "self", ")", ".", "__name__", ")", ":", "\n", "            ", "h", ",", "c", "=", "state", "\n", "\n", "h_size", "=", "self", ".", "num_units", "\n", "x_size", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "w_init", "=", "aux", ".", "orthogonal_initializer", "(", "1.0", ")", "\n", "h_init", "=", "aux", ".", "orthogonal_initializer", "(", "1.0", ")", "\n", "b_init", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", "\n", "\n", "W_xh", "=", "tf", ".", "get_variable", "(", "'W_xh'", ",", "\n", "[", "x_size", ",", "4", "*", "h_size", "]", ",", "initializer", "=", "w_init", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "W_hh", "=", "tf", ".", "get_variable", "(", "'W_hh'", ",", "\n", "[", "h_size", ",", "4", "*", "h_size", "]", ",", "initializer", "=", "h_init", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "'bias'", ",", "[", "4", "*", "h_size", "]", ",", "initializer", "=", "b_init", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "concat", "=", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "x", ",", "h", "]", ")", "# concat for speed.", "\n", "W_full", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "W_xh", ",", "W_hh", "]", ")", "\n", "concat", "=", "tf", ".", "matmul", "(", "concat", ",", "W_full", ")", "+", "bias", "\n", "concat", "=", "aux", ".", "layer_norm_all", "(", "concat", ",", "4", ",", "h_size", ",", "'ln'", ")", "\n", "\n", "# i = input_gate, j = new_input, f = forget_gate, o = output_gate", "\n", "i", ",", "j", ",", "f", ",", "o", "=", "tf", ".", "split", "(", "axis", "=", "1", ",", "num_or_size_splits", "=", "4", ",", "value", "=", "concat", ")", "\n", "\n", "new_c", "=", "c", "*", "tf", ".", "sigmoid", "(", "f", "+", "self", ".", "f_bias", ")", "+", "tf", ".", "sigmoid", "(", "i", ")", "*", "tf", ".", "tanh", "(", "j", ")", "\n", "new_h", "=", "tf", ".", "tanh", "(", "aux", ".", "layer_norm", "(", "new_c", ",", "'ln_c'", ")", ")", "*", "tf", ".", "sigmoid", "(", "o", ")", "\n", "\n", "if", "self", ".", "use_zoneout", ":", "\n", "                ", "new_h", ",", "new_c", "=", "aux", ".", "zoneout", "(", "new_h", ",", "new_c", ",", "h", ",", "c", ",", "self", ".", "zoneout_keep_h", ",", "\n", "self", ".", "zoneout_keep_c", ",", "self", ".", "is_training", ")", "\n", "\n", "", "", "return", "new_h", ",", "(", "new_h", ",", "new_c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.LNLSTM.LN_LSTMCell.zero_state": [[67, 71], ["tensorflow.zeros", "tensorflow.zeros"], "methods", ["None"], ["", "def", "zero_state", "(", "self", ",", "batch_size", ",", "dtype", ")", ":", "\n", "        ", "h", "=", "tf", ".", "zeros", "(", "[", "batch_size", ",", "self", ".", "num_units", "]", ",", "dtype", "=", "dtype", ")", "\n", "c", "=", "tf", ".", "zeros", "(", "[", "batch_size", ",", "self", ".", "num_units", "]", ",", "dtype", "=", "dtype", ")", "\n", "return", "(", "h", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBInput.__init__": [[41, 47], ["reader.ptb_producer", "len"], "methods", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader.ptb_producer"], ["def", "__init__", "(", "self", ",", "config", ",", "data", ",", "name", "=", "None", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "=", "config", ".", "batch_size", "\n", "self", ".", "num_steps", "=", "num_steps", "=", "config", ".", "num_steps", "\n", "self", ".", "epoch_size", "=", "(", "(", "len", "(", "data", ")", "//", "batch_size", ")", "-", "1", ")", "//", "num_steps", "\n", "self", ".", "input_data", ",", "self", ".", "targets", "=", "reader", ".", "ptb_producer", "(", "\n", "data", ",", "batch_size", ",", "num_steps", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.__init__": [[52, 123], ["aux.orthogonal_initializer", "LNLSTM.LN_LSTMCell", "FSRNN.FSRNNCell", "FSRNN.FSRNNCell.zero_state", "print", "print", "tensorflow.reshape", "aux.orthogonal_initializer", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.contrib.legacy_seq2seq.sequence_loss_by_example", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.clip_by_global_norm", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.apply_gradients", "tensorflow.placeholder", "tensorflow.assign", "tensorflow.device", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "LNLSTM.LN_LSTMCell", "tensorflow.variable_scope", "range", "tensorflow.concat", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.gradients", "zip", "range", "FSRNN.FSRNNCell.", "outputs.append", "tensorflow.reshape", "tensorflow.ones", "tensorflow.contrib.framework.get_or_create_global_step", "tensorflow.get_variable_scope().reuse_variables", "tensorflow.get_variable_scope"], "methods", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal_initializer", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.zero_state", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal_initializer"], ["def", "__init__", "(", "self", ",", "is_training", ",", "config", ",", "input_", ")", ":", "\n", "        ", "self", ".", "_input", "=", "input_", "\n", "\n", "batch_size", "=", "input_", ".", "batch_size", "\n", "num_steps", "=", "input_", ".", "num_steps", "\n", "emb_size", "=", "config", ".", "embed_size", "\n", "F_size", "=", "config", ".", "cell_size", "\n", "S_size", "=", "config", ".", "hyper_size", "\n", "vocab_size", "=", "config", ".", "vocab_size", "\n", "\n", "emb_init", "=", "aux", ".", "orthogonal_initializer", "(", "1.0", ")", "\n", "with", "tf", ".", "device", "(", "\"/cpu:0\"", ")", ":", "\n", "            ", "embedding", "=", "tf", ".", "get_variable", "(", "\n", "\"embedding\"", ",", "[", "vocab_size", ",", "emb_size", "]", ",", "initializer", "=", "emb_init", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "inputs", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding", ",", "input_", ".", "input_data", ")", "\n", "\n", "", "F_cells", "=", "[", "LNLSTM", ".", "LN_LSTMCell", "(", "F_size", ",", "use_zoneout", "=", "True", ",", "is_training", "=", "is_training", ",", "\n", "zoneout_keep_h", "=", "config", ".", "zoneout_h", ",", "zoneout_keep_c", "=", "config", ".", "zoneout_c", ")", "\n", "for", "_", "in", "range", "(", "config", ".", "fast_layers", ")", "]", "\n", "\n", "\n", "S_cell", "=", "LNLSTM", ".", "LN_LSTMCell", "(", "S_size", ",", "use_zoneout", "=", "True", ",", "is_training", "=", "is_training", ",", "\n", "zoneout_keep_h", "=", "config", ".", "zoneout_h", ",", "zoneout_keep_c", "=", "config", ".", "zoneout_c", ")", "\n", "\n", "FS_cell", "=", "FSRNN", ".", "FSRNNCell", "(", "F_cells", ",", "S_cell", ",", "config", ".", "keep_prob", ",", "is_training", ")", "\n", "self", ".", "_initial_state", "=", "FS_cell", ".", "zero_state", "(", "batch_size", ",", "tf", ".", "float32", ")", "\n", "state", "=", "self", ".", "_initial_state", "\n", "\n", "outputs", "=", "[", "]", "\n", "print", "(", "'generating graph'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"RNN\"", ")", ":", "\n", "            ", "for", "time_step", "in", "range", "(", "num_steps", ")", ":", "\n", "                ", "if", "time_step", ">", "0", ":", "tf", ".", "get_variable_scope", "(", ")", ".", "reuse_variables", "(", ")", "\n", "out", ",", "state", "=", "FS_cell", "(", "inputs", "[", ":", ",", "time_step", ",", ":", "]", ",", "state", ")", "\n", "outputs", ".", "append", "(", "out", ")", "\n", "\n", "", "", "print", "(", "'graph generated'", ")", "\n", "output", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "outputs", ")", ",", "[", "-", "1", ",", "F_size", "]", ")", "\n", "\n", "# Output layer and cross entropy loss", "\n", "\n", "out_init", "=", "aux", ".", "orthogonal_initializer", "(", "1.0", ")", "\n", "softmax_w", "=", "tf", ".", "get_variable", "(", "\n", "\"softmax_w\"", ",", "[", "F_size", ",", "vocab_size", "]", ",", "initializer", "=", "out_init", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "softmax_b", "=", "tf", ".", "get_variable", "(", "\"softmax_b\"", ",", "[", "vocab_size", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "logits", "=", "tf", ".", "matmul", "(", "output", ",", "softmax_w", ")", "+", "softmax_b", "\n", "loss", "=", "tf", ".", "contrib", ".", "legacy_seq2seq", ".", "sequence_loss_by_example", "(", "\n", "[", "logits", "]", ",", "\n", "[", "tf", ".", "reshape", "(", "input_", ".", "targets", ",", "[", "-", "1", "]", ")", "]", ",", "\n", "[", "tf", ".", "ones", "(", "[", "batch_size", "*", "num_steps", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "]", ")", "\n", "self", ".", "_cost", "=", "cost", "=", "tf", ".", "reduce_sum", "(", "loss", ")", "/", "batch_size", "\n", "\n", "self", ".", "_final_state", "=", "state", "\n", "\n", "if", "not", "is_training", ":", "return", "\n", "\n", "# Create the parameter update ops if training", "\n", "\n", "self", ".", "_lr", "=", "tf", ".", "Variable", "(", "0.0", ",", "trainable", "=", "False", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "tvars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "grads", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "\n", "tf", ".", "gradients", "(", "cost", ",", "tvars", ",", "aggregation_method", "=", "tf", ".", "AggregationMethod", ".", "EXPERIMENTAL_ACCUMULATE_N", ")", ",", "\n", "config", ".", "max_grad_norm", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "_lr", ")", "\n", "self", ".", "_train_op", "=", "optimizer", ".", "apply_gradients", "(", "\n", "zip", "(", "grads", ",", "tvars", ")", ",", "\n", "global_step", "=", "tf", ".", "contrib", ".", "framework", ".", "get_or_create_global_step", "(", ")", ")", "\n", "\n", "self", ".", "_new_lr", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "shape", "=", "[", "]", ",", "name", "=", "\"new_learning_rate\"", ")", "\n", "self", ".", "_lr_update", "=", "tf", ".", "assign", "(", "self", ".", "_lr", ",", "self", ".", "_new_lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.assign_lr": [[124, 126], ["session.run"], "methods", ["None"], ["", "def", "assign_lr", "(", "self", ",", "session", ",", "lr_value", ")", ":", "\n", "        ", "session", ".", "run", "(", "self", ".", "_lr_update", ",", "feed_dict", "=", "{", "self", ".", "_new_lr", ":", "lr_value", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.input": [[127, 130], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "input", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_input", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.initial_state": [[131, 134], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "initial_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_initial_state", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.cost": [[135, 138], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "cost", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_cost", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.final_state": [[139, 142], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "final_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_final_state", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.lr": [[143, 146], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "lr", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.train_op": [[147, 150], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "train_op", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_train_op", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.run_epoch": [[152, 186], ["time.time", "session.run", "range", "session.run", "sys.stdout.flush", "print", "time.time"], "function", ["None"], ["", "", "def", "run_epoch", "(", "session", ",", "model", ",", "eval_op", "=", "None", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "\"\"\"Runs the model on the given data.\"\"\"", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "costs", "=", "0.0", "\n", "iters", "=", "0", "\n", "state", "=", "session", ".", "run", "(", "model", ".", "initial_state", ")", "\n", "\n", "fetches", "=", "{", "\n", "\"cost\"", ":", "model", ".", "cost", ",", "\n", "\"final_state\"", ":", "model", ".", "final_state", ",", "\n", "}", "\n", "if", "eval_op", "is", "not", "None", ":", "\n", "        ", "fetches", "[", "\"eval_op\"", "]", "=", "eval_op", "\n", "\n", "", "for", "step", "in", "range", "(", "model", ".", "input", ".", "epoch_size", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "feed_dict", "[", "model", ".", "initial_state", "]", "=", "state", "\n", "\n", "vals", "=", "session", ".", "run", "(", "fetches", ",", "feed_dict", ")", "\n", "\n", "cost", "=", "vals", "[", "\"cost\"", "]", "\n", "state", "=", "vals", "[", "\"final_state\"", "]", "\n", "\n", "costs", "+=", "cost", "\n", "iters", "+=", "model", ".", "input", ".", "num_steps", "\n", "\n", "if", "verbose", "and", "step", "%", "(", "model", ".", "input", ".", "epoch_size", "//", "10", ")", "==", "10", ":", "\n", "            ", "print", "(", "\"%.3f BPC: %.3f speed: %.0f characters per second\"", "%", "\n", "(", "step", "*", "1.0", "/", "model", ".", "input", ".", "epoch_size", ",", "costs", "/", "(", "iters", "*", "0.69314718056", ")", ",", "\n", "iters", "*", "model", ".", "input", ".", "batch_size", "/", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "return", "costs", "/", "(", "iters", "*", "0.69314718056", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.main": [[190, 264], ["configs.get_config", "configs.get_config", "configs.get_config", "print", "reader.ptb_raw_data", "ValueError", "tensorflow.Graph().as_default", "tensorflow.random_uniform_initializer", "tensorflow.train.Saver", "tensorflow.name_scope", "main.PTBInput", "tensorflow.name_scope", "main.PTBInput", "tensorflow.name_scope", "main.PTBInput", "tensorflow.trainable_variables", "tensorflow.Session", "session.run", "tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners", "range", "print", "tf.train.Saver.restore", "main.run_epoch", "print", "sys.stdout.flush", "tf.train.Coordinator.request_stop", "tf.train.Coordinator.join", "tensorflow.Graph", "tensorflow.variable_scope", "main.PTBModel", "tensorflow.variable_scope", "main.PTBModel", "tensorflow.variable_scope", "main.PTBModel", "tensorflow.global_variables_initializer", "main.PTBModel.assign_lr", "print", "main.run_epoch", "print", "main.run_epoch", "print", "sys.stdout.flush", "max", "print", "tf.train.Saver.save", "session.run"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.configs.get_config", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.configs.get_config", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.configs.get_config", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader.ptb_raw_data", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.run_epoch", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.PTBModel.assign_lr", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.run_epoch", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.main.run_epoch"], ["", "def", "main", "(", "_", ")", ":", "\n", "    ", "if", "not", "FLAGS", ".", "data_path", ":", "\n", "        ", "raise", "ValueError", "(", "\"Must set --data_path to PTB data directory\"", ")", "\n", "\n", "", "config", "=", "configs", ".", "get_config", "(", "FLAGS", ".", "model", ")", "\n", "eval_config", "=", "configs", ".", "get_config", "(", "FLAGS", ".", "model", ")", "\n", "valid_config", "=", "configs", ".", "get_config", "(", "FLAGS", ".", "model", ")", "\n", "print", "(", "config", ".", "batch_size", ")", "\n", "eval_config", ".", "batch_size", "=", "1", "\n", "valid_config", ".", "batch_size", "=", "20", "\n", "\n", "raw_data", "=", "reader", ".", "ptb_raw_data", "(", "FLAGS", ".", "data_path", "+", "config", ".", "dataset", "+", "'/'", ")", "\n", "train_data", ",", "valid_data", ",", "test_data", ",", "_", "=", "raw_data", "\n", "\n", "\n", "with", "tf", ".", "Graph", "(", ")", ".", "as_default", "(", ")", ":", "\n", "        ", "initializer", "=", "tf", ".", "random_uniform_initializer", "(", "-", "config", ".", "init_scale", ",", "\n", "config", ".", "init_scale", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"Train\"", ")", ":", "\n", "            ", "train_input", "=", "PTBInput", "(", "config", "=", "config", ",", "data", "=", "train_data", ",", "name", "=", "\"TrainInput\"", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"Model\"", ",", "reuse", "=", "None", ",", "initializer", "=", "initializer", ")", ":", "\n", "                ", "m", "=", "PTBModel", "(", "is_training", "=", "True", ",", "config", "=", "config", ",", "input_", "=", "train_input", ")", "\n", "\n", "", "", "with", "tf", ".", "name_scope", "(", "\"Valid\"", ")", ":", "\n", "            ", "valid_input", "=", "PTBInput", "(", "config", "=", "config", ",", "data", "=", "valid_data", ",", "name", "=", "\"ValidInput\"", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"Model\"", ",", "reuse", "=", "True", ",", "initializer", "=", "initializer", ")", ":", "\n", "                ", "mvalid", "=", "PTBModel", "(", "is_training", "=", "False", ",", "config", "=", "config", ",", "input_", "=", "valid_input", ")", "\n", "\n", "", "", "with", "tf", ".", "name_scope", "(", "\"Test\"", ")", ":", "\n", "            ", "test_input", "=", "PTBInput", "(", "config", "=", "eval_config", ",", "data", "=", "test_data", ",", "name", "=", "\"TestInput\"", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"Model\"", ",", "reuse", "=", "True", ",", "initializer", "=", "initializer", ")", ":", "\n", "                ", "mtest", "=", "PTBModel", "(", "is_training", "=", "False", ",", "config", "=", "eval_config", ",", "\n", "input_", "=", "test_input", ")", "\n", "\n", "", "", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "session", ":", "\n", "            ", "session", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "sess", "=", "session", ",", "coord", "=", "coord", ")", "\n", "#saver.restore(session, FLAGS.save_path + 'model.ckpt')", "\n", "previous_val", "=", "9999", "\n", "for", "i", "in", "range", "(", "config", ".", "max_max_epoch", ")", ":", "\n", "                ", "lr_decay", "=", "config", ".", "lr_decay", "**", "max", "(", "i", "+", "1", "-", "config", ".", "max_epoch", ",", "0.0", ")", "\n", "m", ".", "assign_lr", "(", "session", ",", "config", ".", "learning_rate", "*", "lr_decay", ")", "\n", "\n", "print", "(", "\"Epoch: %d Learning rate: %.3f\"", "%", "(", "i", "+", "1", ",", "session", ".", "run", "(", "m", ".", "lr", ")", ")", ")", "\n", "train_perplexity", "=", "run_epoch", "(", "session", ",", "m", ",", "eval_op", "=", "m", ".", "train_op", ",", "verbose", "=", "True", ")", "\n", "print", "(", "\"Epoch: %d Train BPC: %.4f\"", "%", "(", "i", "+", "1", ",", "train_perplexity", ")", ")", "\n", "valid_perplexity", "=", "run_epoch", "(", "session", ",", "mvalid", ")", "\n", "print", "(", "\"Epoch: %d Valid BPC: %.4f\"", "%", "(", "i", "+", "1", ",", "valid_perplexity", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "if", "i", "==", "180", ":", "config", ".", "learning_rate", "*=", "0.1", "\n", "\n", "if", "valid_perplexity", "<", "previous_val", ":", "\n", "                    ", "print", "(", "\"Storing weights\"", ")", "\n", "saver", ".", "save", "(", "session", ",", "FLAGS", ".", "save_path", "+", "'model.ckpt'", ")", "\n", "previous_val", "=", "valid_perplexity", "\n", "counter_val", "=", "0", "\n", "", "elif", "config", ".", "dataset", "==", "'enwik8'", ":", "\n", "                    ", "counter_val", "+=", "1", "\n", "if", "counter_val", "==", "2", ":", "\n", "                        ", "config", ".", "learning_rate", "*=", "0.1", "\n", "counter_val", "=", "0", "\n", "\n", "", "", "", "print", "(", "\"Loading best weights\"", ")", "\n", "saver", ".", "restore", "(", "session", ",", "FLAGS", ".", "save_path", "+", "'model.ckpt'", ")", "\n", "test_perplexity", "=", "run_epoch", "(", "session", ",", "mtest", ")", "\n", "print", "(", "\"Test Perplexity: %.4f\"", "%", "test_perplexity", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "coord", ".", "request_stop", "(", ")", "\n", "coord", ".", "join", "(", "threads", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal": [[7, 13], ["numpy.random.normal", "numpy.linalg.svd", "q.reshape", "numpy.prod"], "function", ["None"], ["def", "orthogonal", "(", "shape", ")", ":", "\n", "    ", "flat_shape", "=", "(", "shape", "[", "0", "]", ",", "np", ".", "prod", "(", "shape", "[", "1", ":", "]", ")", ")", "\n", "a", "=", "np", ".", "random", ".", "normal", "(", "0.0", ",", "1.0", ",", "flat_shape", ")", "\n", "u", ",", "_", ",", "v", "=", "np", ".", "linalg", ".", "svd", "(", "a", ",", "full_matrices", "=", "False", ")", "\n", "q", "=", "u", "if", "u", ".", "shape", "==", "flat_shape", "else", "v", "\n", "return", "q", ".", "reshape", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal_initializer": [[15, 19], ["tensorflow.constant", "aux.orthogonal"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.orthogonal"], ["", "def", "orthogonal_initializer", "(", "scale", "=", "1.0", ")", ":", "\n", "    ", "def", "_initializer", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "partition_info", "=", "None", ")", ":", "\n", "        ", "return", "tf", ".", "constant", "(", "orthogonal", "(", "shape", ")", "*", "scale", ",", "dtype", ")", "\n", "", "return", "_initializer", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.layer_norm_all": [[21, 43], ["tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.constant", "tensorflow.rsqrt", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.square", "tensorflow.constant_initializer", "tensorflow.constant_initializer"], "function", ["None"], ["", "def", "layer_norm_all", "(", "h", ",", "base", ",", "num_units", ",", "scope", ")", ":", "\n", "# Layer Norm (faster version)", "\n", "#", "\n", "# Performs layer norm on multiple base at once (ie, i, g, j, o for lstm)", "\n", "#", "\n", "# Reshapes h in to perform layer norm in parallel", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "        ", "h_reshape", "=", "tf", ".", "reshape", "(", "h", ",", "[", "-", "1", ",", "base", ",", "num_units", "]", ")", "\n", "mean", "=", "tf", ".", "reduce_mean", "(", "h_reshape", ",", "[", "2", "]", ",", "keep_dims", "=", "True", ")", "\n", "var", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "h_reshape", "-", "mean", ")", ",", "[", "2", "]", ",", "keep_dims", "=", "True", ")", "\n", "epsilon", "=", "tf", ".", "constant", "(", "1e-3", ")", "\n", "rstd", "=", "tf", ".", "rsqrt", "(", "var", "+", "epsilon", ")", "\n", "h_reshape", "=", "(", "h_reshape", "-", "mean", ")", "*", "rstd", "\n", "# reshape back to original", "\n", "h", "=", "tf", ".", "reshape", "(", "h_reshape", ",", "[", "-", "1", ",", "base", "*", "num_units", "]", ")", "\n", "\n", "alpha", "=", "tf", ".", "get_variable", "(", "'layer_norm_alpha'", ",", "[", "4", "*", "num_units", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "1.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "'layer_norm_bias'", ",", "[", "4", "*", "num_units", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "", "return", "(", "h", "*", "alpha", ")", "+", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.moments_for_layer_norm": [[45, 53], ["tensorflow.reduce_mean", "tensorflow.sqrt", "isinstance", "tensorflow.reduce_mean", "tensorflow.square"], "function", ["None"], ["", "def", "moments_for_layer_norm", "(", "x", ",", "axes", "=", "1", ",", "name", "=", "None", ")", ":", "\n", "# output for mean and variance should be [batch_size]", "\n", "# from https://github.com/LeavesBreathe/tensorflow_with_latest_papers", "\n", "    ", "epsilon", "=", "1e-3", "# found this works best.", "\n", "if", "not", "isinstance", "(", "axes", ",", "list", ")", ":", "axes", "=", "[", "axes", "]", "\n", "mean", "=", "tf", ".", "reduce_mean", "(", "x", ",", "axes", ",", "keep_dims", "=", "True", ")", "\n", "variance", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "x", "-", "mean", ")", ",", "axes", ",", "keep_dims", "=", "True", ")", "+", "epsilon", ")", "\n", "return", "mean", ",", "variance", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.layer_norm": [[55, 69], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "aux.moments_for_layer_norm", "x.get_shape().as_list", "tensorflow.constant_initializer", "tensorflow.constant_initializer", "x.get_shape"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.moments_for_layer_norm"], ["", "def", "layer_norm", "(", "x", ",", "scope", "=", "\"layer_norm\"", ",", "alpha_start", "=", "1.0", ",", "bias_start", "=", "0.0", ")", ":", "\n", "# derived from:", "\n", "# https://github.com/LeavesBreathe/tensorflow_with_latest_papers, but simplified.", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "        ", "num_units", "=", "x", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "1", "]", "\n", "\n", "alpha", "=", "tf", ".", "get_variable", "(", "'alpha'", ",", "[", "num_units", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "alpha_start", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "'bias'", ",", "[", "num_units", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "bias_start", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "mean", ",", "variance", "=", "moments_for_layer_norm", "(", "x", ")", "\n", "y", "=", "(", "alpha", "*", "(", "x", "-", "mean", ")", ")", "/", "(", "variance", ")", "+", "bias", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.aux.zoneout": [[70, 85], ["tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.nn.dropout", "tensorflow.nn.dropout"], "function", ["None"], ["", "def", "zoneout", "(", "new_h", ",", "new_c", ",", "h", ",", "c", ",", "h_keep", ",", "c_keep", ",", "is_training", ")", ":", "\n", "  ", "mask_c", "=", "tf", ".", "ones_like", "(", "c", ")", "\n", "mask_h", "=", "tf", ".", "ones_like", "(", "h", ")", "\n", "\n", "if", "is_training", ":", "\n", "    ", "mask_c", "=", "tf", ".", "nn", ".", "dropout", "(", "mask_c", ",", "c_keep", ")", "\n", "mask_h", "=", "tf", ".", "nn", ".", "dropout", "(", "mask_h", ",", "h_keep", ")", "\n", "\n", "", "mask_c", "*=", "c_keep", "\n", "mask_h", "*=", "h_keep", "\n", "\n", "h", "=", "new_h", "*", "mask_h", "+", "(", "-", "mask_h", "+", "1.", ")", "*", "h", "\n", "c", "=", "new_c", "*", "mask_c", "+", "(", "-", "mask_c", "+", "1.", ")", "*", "c", "\n", "\n", "return", "h", ",", "c", "\n", "", ""]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.__init__": [[4, 22], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "fast_cells", ",", "slow_cell", ",", "keep_prob", "=", "1.0", ",", "training", "=", "True", ")", ":", "\n", "        ", "\"\"\"Initialize the basic Fast-Slow RNN.\n            Args:\n              fast_cells: A list of RNN cells that will be used for the fast RNN.\n                The cells must be callable, implement zero_state() and all have the\n                same hidden size, like for example tf.contrib.rnn.BasicLSTMCell.\n              slow_cell: A single RNN cell for the slow RNN.\n              keep_prob: Keep probability for the non recurrent dropout. Any kind of\n                recurrent dropout should be implemented in the RNN cells.\n              training: If False, no dropout is applied.\n        \"\"\"", "\n", "\n", "self", ".", "fast_layers", "=", "len", "(", "fast_cells", ")", "\n", "assert", "self", ".", "fast_layers", ">=", "2", ",", "'At least two fast layers are needed'", "\n", "self", ".", "fast_cells", "=", "fast_cells", "\n", "self", ".", "slow_cell", "=", "slow_cell", "\n", "self", ".", "keep_prob", "=", "keep_prob", "\n", "if", "not", "training", ":", "self", ".", "keep_prob", "=", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.__call__": [[23, 48], ["tensorflow.variable_scope", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "tensorflow.nn.dropout", "range", "tensorflow.nn.dropout", "tensorflow.variable_scope", "tensorflow.variable_scope", "FSRNN.FSRNNCell.slow_cell", "tensorflow.variable_scope", "tensorflow.variable_scope", "str"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "inputs", ",", "state", ",", "scope", "=", "'FS-RNN'", ")", ":", "\n", "        ", "F_state", "=", "state", "[", "0", "]", "\n", "S_state", "=", "state", "[", "1", "]", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "inputs", "=", "tf", ".", "nn", ".", "dropout", "(", "inputs", ",", "self", ".", "keep_prob", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'Fast_0'", ")", ":", "\n", "                ", "F_output", ",", "F_state", "=", "self", ".", "fast_cells", "[", "0", "]", "(", "inputs", ",", "F_state", ")", "\n", "", "F_output_drop", "=", "tf", ".", "nn", ".", "dropout", "(", "F_output", ",", "self", ".", "keep_prob", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'Slow'", ")", ":", "\n", "                ", "S_output", ",", "S_state", "=", "self", ".", "slow_cell", "(", "F_output_drop", ",", "S_state", ")", "\n", "", "S_output_drop", "=", "tf", ".", "nn", ".", "dropout", "(", "S_output", ",", "self", ".", "keep_prob", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'Fast_1'", ")", ":", "\n", "                ", "F_output", ",", "F_state", "=", "self", ".", "fast_cells", "[", "1", "]", "(", "S_output_drop", ",", "F_state", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "2", ",", "self", ".", "fast_layers", ")", ":", "\n", "                ", "with", "tf", ".", "variable_scope", "(", "'Fast_'", "+", "str", "(", "i", ")", ")", ":", "\n", "# Input cannot be empty for many RNN cells", "\n", "                    ", "F_output", ",", "F_state", "=", "self", ".", "fast_cells", "[", "i", "]", "(", "F_output", "[", ":", ",", "0", ":", "1", "]", "*", "0.0", ",", "F_state", ")", "\n", "\n", "", "", "F_output_drop", "=", "tf", ".", "nn", ".", "dropout", "(", "F_output", ",", "self", ".", "keep_prob", ")", "\n", "return", "F_output_drop", ",", "(", "F_state", ",", "S_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.zero_state": [[50, 55], ["FSRNN.FSRNNCell.fast_cells[].zero_state", "FSRNN.FSRNNCell.slow_cell.zero_state"], "methods", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.zero_state", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.FSRNN.FSRNNCell.zero_state"], ["", "", "def", "zero_state", "(", "self", ",", "batch_size", ",", "dtype", ")", ":", "\n", "        ", "F_state", "=", "self", ".", "fast_cells", "[", "0", "]", ".", "zero_state", "(", "batch_size", ",", "dtype", ")", "\n", "S_state", "=", "self", ".", "slow_cell", ".", "zero_state", "(", "batch_size", ",", "dtype", ")", "\n", "\n", "return", "(", "F_state", ",", "S_state", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.configs.get_config": [[2, 9], ["configs.enwik_config", "configs.ptb_config", "ValueError"], "function", ["None"], ["def", "get_config", "(", "model", ")", ":", "\n", "    ", "if", "model", "==", "'enwik8'", ":", "\n", "        ", "return", "enwik_config", "(", ")", "\n", "", "if", "model", "==", "'ptb'", ":", "\n", "        ", "return", "ptb_config", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Invalid model: %s\"", ",", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._read_words": [[24, 27], ["tensorflow.gfile.GFile", "list", "f.read"], "function", ["None"], ["def", "_read_words", "(", "filename", ")", ":", "\n", "  ", "with", "tf", ".", "gfile", ".", "GFile", "(", "filename", ",", "\"rb\"", ")", "as", "f", ":", "\n", "    ", "return", "list", "(", "f", ".", "read", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._build_vocab": [[29, 39], ["reader._read_words", "collections.Counter", "sorted", "list", "dict", "collections.Counter.items", "zip", "zip", "range", "len"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._read_words"], ["", "", "def", "_build_vocab", "(", "filename", ")", ":", "\n", "  ", "data", "=", "_read_words", "(", "filename", ")", "\n", "\n", "counter", "=", "collections", ".", "Counter", "(", "data", ")", "\n", "count_pairs", "=", "sorted", "(", "counter", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "(", "-", "x", "[", "1", "]", ",", "x", "[", "0", "]", ")", ")", "\n", "\n", "words", ",", "_", "=", "list", "(", "zip", "(", "*", "count_pairs", ")", ")", "\n", "word_to_id", "=", "dict", "(", "zip", "(", "words", ",", "range", "(", "len", "(", "words", ")", ")", ")", ")", "\n", "\n", "return", "word_to_id", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._file_to_word_ids": [[41, 44], ["reader._read_words"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._read_words"], ["", "def", "_file_to_word_ids", "(", "filename", ",", "word_to_id", ")", ":", "\n", "  ", "data", "=", "_read_words", "(", "filename", ")", "\n", "return", "[", "word_to_id", "[", "word", "]", "for", "word", "in", "data", "if", "word", "in", "word_to_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader.ptb_raw_data": [[46, 77], ["os.path.join", "os.path.join", "os.path.join", "reader._build_vocab", "print", "reader._file_to_word_ids", "reader._file_to_word_ids", "reader._file_to_word_ids", "len", "print", "len"], "function", ["home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._build_vocab", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._file_to_word_ids", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._file_to_word_ids", "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader._file_to_word_ids"], ["", "def", "ptb_raw_data", "(", "data_path", "=", "None", ")", ":", "\n", "  ", "\"\"\"Load PTB raw data from data directory \"data_path\".\n\n  Reads PTB text files, converts strings to integer ids,\n  and performs mini-batching of the inputs.\n\n  The PTB dataset comes from Tomas Mikolov's webpage:\n\n  http://www.fit.vutbr.cz/~imikolov/rnnlm/simple-examples.tgz\n\n  Args:\n    data_path: string path to the directory where simple-examples.tgz has\n      been extracted.\n\n  Returns:\n    tuple (train_data, valid_data, test_data, vocabulary)\n    where each of the data objects can be passed to PTBIterator.\n  \"\"\"", "\n", "\n", "train_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'train'", ")", "\n", "valid_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'valid'", ")", "\n", "test_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'test'", ")", "\n", "\n", "word_to_id", "=", "_build_vocab", "(", "train_path", ")", "\n", "print", "(", "'vocabulary size:'", ",", "len", "(", "word_to_id", ")", ")", "\n", "train_data", "=", "_file_to_word_ids", "(", "train_path", ",", "word_to_id", ")", "\n", "valid_data", "=", "_file_to_word_ids", "(", "valid_path", ",", "word_to_id", ")", "\n", "test_data", "=", "_file_to_word_ids", "(", "test_path", ",", "word_to_id", ")", "\n", "vocabulary", "=", "len", "(", "word_to_id", ")", "\n", "print", "(", "'data loaded'", ")", "\n", "return", "train_data", ",", "valid_data", ",", "test_data", ",", "vocabulary", "\n", "\n"]], "home.repos.pwc.inspect_result.amujika_Fast-Slow-LSTM.None.reader.ptb_producer": [[79, 117], ["tensorflow.name_scope", "tensorflow.convert_to_tensor", "tensorflow.size", "tensorflow.reshape", "tensorflow.assert_positive", "tensorflow.train.range_input_producer().dequeue", "tensorflow.slice", "tensorflow.slice", "tensorflow.control_dependencies", "tensorflow.identity", "tensorflow.train.range_input_producer"], "function", ["None"], ["", "def", "ptb_producer", "(", "raw_data", ",", "batch_size", ",", "num_steps", ",", "name", "=", "None", ")", ":", "\n", "  ", "\"\"\"Iterate on the raw PTB data.\n\n  This chunks up raw_data into batches of examples and returns Tensors that\n  are drawn from these batches.\n\n  Args:\n    raw_data: one of the raw data outputs from ptb_raw_data.\n    batch_size: int, the batch size.\n    num_steps: int, the number of unrolls.\n    name: the name of this operation (optional).\n\n  Returns:\n    A pair of Tensors, each shaped [batch_size, num_steps]. The second element\n    of the tuple is the same data time-shifted to the right by one.\n\n  Raises:\n    tf.errors.InvalidArgumentError: if batch_size or num_steps are too high.\n  \"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "name", ",", "\"PTBProducer\"", ",", "[", "raw_data", ",", "batch_size", ",", "num_steps", "]", ")", ":", "\n", "    ", "raw_data", "=", "tf", ".", "convert_to_tensor", "(", "raw_data", ",", "name", "=", "\"raw_data\"", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "\n", "data_len", "=", "tf", ".", "size", "(", "raw_data", ")", "\n", "batch_len", "=", "data_len", "//", "batch_size", "\n", "data", "=", "tf", ".", "reshape", "(", "raw_data", "[", "0", ":", "batch_size", "*", "batch_len", "]", ",", "\n", "[", "batch_size", ",", "batch_len", "]", ")", "\n", "\n", "epoch_size", "=", "(", "batch_len", "-", "1", ")", "//", "num_steps", "\n", "assertion", "=", "tf", ".", "assert_positive", "(", "\n", "epoch_size", ",", "\n", "message", "=", "\"epoch_size == 0, decrease batch_size or num_steps\"", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "assertion", "]", ")", ":", "\n", "      ", "epoch_size", "=", "tf", ".", "identity", "(", "epoch_size", ",", "name", "=", "\"epoch_size\"", ")", "\n", "\n", "", "i", "=", "tf", ".", "train", ".", "range_input_producer", "(", "epoch_size", ",", "shuffle", "=", "False", ")", ".", "dequeue", "(", ")", "\n", "x", "=", "tf", ".", "slice", "(", "data", ",", "[", "0", ",", "i", "*", "num_steps", "]", ",", "[", "batch_size", ",", "num_steps", "]", ")", "\n", "y", "=", "tf", ".", "slice", "(", "data", ",", "[", "0", ",", "i", "*", "num_steps", "+", "1", "]", ",", "[", "batch_size", ",", "num_steps", "]", ")", "\n", "return", "x", ",", "y", "", "", "", ""]]}