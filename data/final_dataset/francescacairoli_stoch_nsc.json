{"home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.runtime_experiment.load_trained_net": [[117, 123], ["torch.load", "torch.load.eval", "torch.load.cuda"], "function", ["None"], ["def", "load_trained_net", "(", "net_file", ")", ":", "\n", "\t", "net", "=", "torch", ".", "load", "(", "net_file", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t", "net", ".", "cuda", "(", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.runtime_experiment.scaling": [[175, 179], ["None"], "function", ["None"], ["def", "scaling", "(", "dataset", ",", "X", ",", "Y", ")", ":", "\n", "\t", "Xsc", "=", "-", "1", "+", "2", "*", "(", "X", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "Ysc", "=", "-", "1", "+", "2", "*", "(", "Y", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "return", "Xsc", ",", "Ysc", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.__init__": [[23, 33], ["trained_model", "CP_Classification.ICP_Classification.get_nonconformity_scores", "len"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["def", "__init__", "(", "self", ",", "Xc", ",", "Yc", ",", "trained_model", ",", "mondrian_flag", ")", ":", "\n", "\t\t", "self", ".", "Xc", "=", "Xc", "\n", "self", ".", "Yc", "=", "Yc", "\n", "self", ".", "pos_label", "=", "1", "\n", "self", ".", "neg_label", "=", "0", "\n", "self", ".", "mondrian_flag", "=", "mondrian_flag", "\n", "self", ".", "trained_model", "=", "trained_model", "\n", "self", ".", "cal_pred_lkh", "=", "trained_model", "(", "Xc", ")", "\n", "self", ".", "calibr_scores", "=", "self", ".", "get_nonconformity_scores", "(", "Yc", ",", "self", ".", "cal_pred_lkh", ")", "# nonconformity scores on the calibration set", "\n", "self", ".", "q", "=", "len", "(", "Yc", ")", "# number of points in the calibration set", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.set_labels": [[35, 39], ["None"], "methods", ["None"], ["", "def", "set_labels", "(", "self", ",", "new_pos_label", ",", "new_neg_label", ")", ":", "\n", "# Set the labels used in Y", "\n", "\t\t", "self", ".", "pos_label", "=", "new_pos_label", "\n", "self", ".", "neg_label", "=", "new_neg_label", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.get_nonconformity_scores": [[41, 53], ["scipy.special.softmax", "len", "numpy.array", "numpy.abs", "numpy.sort", "range", "int"], "methods", ["None"], ["", "def", "get_nonconformity_scores", "(", "self", ",", "y", ",", "pred_lkh", ",", "sorting", "=", "True", ")", ":", "\n", "\n", "\t\t", "if", "(", "self", ".", "pos_label", "!=", "1", ")", "or", "(", "self", ".", "neg_label", "!=", "0", ")", ":", "\n", "\t\t\t", "y", "[", "(", "y", "==", "self", ".", "pos_label", ")", "]", "=", "1", "\n", "y", "[", "(", "y", "==", "self", ".", "neg_label", ")", "]", "=", "0", "\n", "\n", "", "pred_probs", "=", "scipy", ".", "special", ".", "softmax", "(", "pred_lkh", ",", "axis", "=", "1", ")", "\n", "n_points", "=", "len", "(", "y", ")", "\n", "ncm", "=", "np", ".", "array", "(", "[", "np", ".", "abs", "(", "1", "-", "pred_probs", "[", "i", ",", "int", "(", "y", "[", "i", "]", ")", "]", ")", "for", "i", "in", "range", "(", "n_points", ")", "]", ")", "\n", "if", "sorting", ":", "\n", "\t\t\t", "ncm", "=", "np", ".", "sort", "(", "ncm", ")", "[", ":", ":", "-", "1", "]", "# descending order", "\n", "", "return", "ncm", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.get_p_values": [[55, 103], ["CP_Classification.ICP_Classification.trained_model", "len", "CP_Classification.ICP_Classification.get_nonconformity_scores", "CP_Classification.ICP_Classification.get_nonconformity_scores", "numpy.zeros", "numpy.zeros", "range", "range", "range", "numpy.ones", "numpy.ones", "numpy.random.rand", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_p_values", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "'''\n\t\tcalibr_scores: non conformity measures computed on the calibration set and sorted in descending order\n\t\tx: new input points (shape: (n_points,x_dim)\n\t\t\n\t\treturn: positive p-values, negative p-values\n\t\t\n\t\t'''", "\n", "pred_lkh", "=", "self", ".", "trained_model", "(", "x", ")", "# prob of going to pos class on x", "\n", "if", "self", ".", "mondrian_flag", ":", "\n", "\t\t\t", "alphas_pos", "=", "self", ".", "calibr_scores", "[", "(", "self", ".", "Yc", "==", "self", ".", "pos_label", ")", "]", "\n", "alphas_neg", "=", "self", ".", "calibr_scores", "[", "(", "self", ".", "Yc", "==", "self", ".", "neg_label", ")", "]", "\n", "q_pos", "=", "alphas_pos", ".", "shape", "[", "0", "]", "\n", "q_neg", "=", "alphas_neg", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "\t\t\t", "alphas_pos", "=", "self", ".", "calibr_scores", "\n", "alphas_neg", "=", "self", ".", "calibr_scores", "\n", "q_pos", "=", "self", ".", "q", "\n", "q_neg", "=", "self", ".", "q", "\n", "", "n_points", "=", "len", "(", "pred_lkh", ")", "\n", "\n", "A_pos", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "pos_label", "*", "np", ".", "ones", "(", "n_points", ")", ",", "pred_lkh", ",", "sorting", "=", "False", ")", "# calibr scores for positive class", "\n", "A_neg", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "neg_label", "*", "np", ".", "ones", "(", "n_points", ")", ",", "pred_lkh", ",", "sorting", "=", "False", ")", "# negative scores for positive class", "\n", "\n", "p_pos", "=", "np", ".", "zeros", "(", "n_points", ")", "# p-value for class 1", "\n", "p_neg", "=", "np", ".", "zeros", "(", "n_points", ")", "# p-value for class 0", "\n", "for", "k", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "c_pos_a", "=", "0", "\n", "c_pos_b", "=", "0", "\n", "c_neg_a", "=", "0", "\n", "c_neg_b", "=", "0", "\n", "for", "count_pos", "in", "range", "(", "q_pos", ")", ":", "\n", "\t\t\t\t", "if", "alphas_pos", "[", "count_pos", "]", ">", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_a", "+=", "1", "\n", "", "elif", "alphas_pos", "[", "count_pos", "]", "==", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_b", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "", "for", "count_neg", "in", "range", "(", "q_neg", ")", ":", "\n", "\t\t\t\t", "if", "alphas_neg", "[", "count_neg", "]", ">", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_a", "+=", "1", "\n", "", "elif", "alphas_neg", "[", "count_neg", "]", "==", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_b", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "", "p_pos", "[", "k", "]", "=", "(", "c_pos_a", "+", "rand", "(", ")", "*", "(", "c_pos_b", "+", "1", ")", ")", "/", "(", "q_pos", "+", "1", ")", "\n", "p_neg", "[", "k", "]", "=", "(", "c_neg_a", "+", "rand", "(", ")", "*", "(", "c_neg_b", "+", "1", ")", ")", "/", "(", "q_neg", "+", "1", ")", "\n", "", "return", "p_pos", ",", "p_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.get_confidence_credibility": [[105, 120], ["len", "numpy.zeros", "range"], "methods", ["None"], ["", "def", "get_confidence_credibility", "(", "self", ",", "p_pos", ",", "p_neg", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "# OUTPUT: array containing confidence and credibility [shape: (n_points,2)]", "\n", "# \t\tfirst column: confidence (1-smallest p-value)", "\n", "# \t\tsecond column: credibility (largest p-value)", "\n", "\t\t", "n_points", "=", "len", "(", "p_pos", ")", "\n", "confidence_credibility", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "p_neg", "[", "i", "]", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_neg", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_pos", "[", "i", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_pos", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_neg", "[", "i", "]", "\n", "", "", "return", "confidence_credibility", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.compute_confidence_credibility": [[121, 125], ["CP_Classification.ICP_Classification.get_p_values", "CP_Classification.ICP_Classification.get_confidence_credibility"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_p_values", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_confidence_credibility"], ["", "def", "compute_confidence_credibility", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_pos", ",", "p_neg", "=", "self", ".", "get_p_values", "(", "x", ")", "\n", "\n", "return", "self", ".", "get_confidence_credibility", "(", "p_pos", ",", "p_neg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.get_prediction_region": [[127, 143], ["len", "numpy.zeros", "range"], "methods", ["None"], ["", "def", "get_prediction_region", "(", "self", ",", "epsilon", ",", "p_pos", ",", "p_neg", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\t\t", "n_points", "=", "len", "(", "p_pos", ")", "\n", "\n", "pred_region", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "epsilon", ":", "\n", "\t\t\t\t", "pred_region", "[", "i", ",", "1", "]", "=", "1", "\n", "", "if", "p_neg", "[", "i", "]", ">", "epsilon", ":", "\n", "\t\t\t\t", "pred_region", "[", "i", ",", "0", "]", "=", "1", "\n", "\n", "", "", "return", "pred_region", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.get_coverage": [[144, 156], ["len", "range", "int"], "methods", ["None"], ["", "def", "get_coverage", "(", "self", ",", "pred_region", ",", "labels", ")", ":", "\n", "\n", "\t\t", "n_points", "=", "len", "(", "labels", ")", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "pred_region", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "==", "1", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.compute_coverage": [[157, 163], ["CP_Classification.ICP_Classification.get_p_values", "CP_Classification.ICP_Classification.get_prediction_region", "CP_Classification.ICP_Classification.get_coverage"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_p_values", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_prediction_region", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_coverage"], ["", "def", "compute_coverage", "(", "self", ",", "eps", ",", "inputs", ",", "outputs", ")", ":", "\n", "\t\t", "p1", ",", "p0", "=", "self", ".", "get_p_values", "(", "x", "=", "inputs", ")", "\n", "\n", "self", ".", "pred_region", "=", "self", ".", "get_prediction_region", "(", "epsilon", "=", "eps", ",", "p_pos", "=", "p1", ",", "p_neg", "=", "p0", ")", "\n", "\n", "return", "self", ".", "get_coverage", "(", "self", ".", "pred_region", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.compute_cross_confidence_credibility": [[166, 224], ["CP_Classification.ICP_Classification.get_nonconformity_scores", "CP_Classification.ICP_Classification.get_nonconformity_scores", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "copy.deepcopy", "numpy.delete", "range", "range", "numpy.ones", "numpy.ones", "numpy.random.rand", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "compute_cross_confidence_credibility", "(", "self", ")", ":", "\n", "\t\t", "'''\n\t\talphas: non conformity measures sorted in descending order\n\t\tcal_pred_lkhs: prediction likelihood fro the twoclasses on points of the calibration set \n\n\t\treturn: 2-dim array containing values of confidence and credibility (which are not exactly the p-values)\n\t\t\t\tshape = (n_points,2) -- CROSS VALIDATION STRATEGY\n\t\t\t\tfirst column: confidence (1-smallest p-value)\n\t\t# \t\tsecond column: credibility (largest p-value)\n\t\t'''", "\n", "\n", "A_pos", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "pos_label", "*", "np", ".", "ones", "(", "self", ".", "q", ")", ",", "self", ".", "cal_pred_lkh", ",", "sorting", "=", "False", ")", "\n", "A_neg", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "neg_label", "*", "np", ".", "ones", "(", "self", ".", "q", ")", ",", "self", ".", "cal_pred_lkh", ",", "sorting", "=", "False", ")", "\n", "\n", "p_pos", "=", "np", ".", "zeros", "(", "self", ".", "q", ")", "# p_values for class 1", "\n", "p_neg", "=", "np", ".", "zeros", "(", "self", ".", "q", ")", "# p_values for class 0", "\n", "\n", "pos_counter", "=", "0", "\n", "neg_counter", "=", "0", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "\t\t\t", "alphas_mask", "=", "copy", ".", "deepcopy", "(", "self", ".", "calibr_scores", ")", "\n", "alphas_mask", "=", "np", ".", "delete", "(", "alphas_mask", ",", "k", ")", "\n", "c_pos_1", "=", "0", "\n", "c_pos_2", "=", "0", "\n", "c_neg_1", "=", "0", "\n", "c_neg_2", "=", "0", "\n", "for", "count_pos", "in", "range", "(", "self", ".", "q", "-", "1", ")", ":", "\n", "\t\t\t\t", "if", "alphas_mask", "[", "count_pos", "]", ">", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_1", "+=", "1", "\n", "", "elif", "alphas_mask", "[", "count_pos", "]", "==", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_2", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "\n", "", "", "for", "count_neg", "in", "range", "(", "self", ".", "q", "-", "1", ")", ":", "\n", "\t\t\t\t", "if", "alphas_mask", "[", "count_neg", "]", ">", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_1", "+=", "1", "\n", "", "elif", "alphas_mask", "[", "count_neg", "]", "==", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_2", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "\n", "", "", "p_pos", "[", "k", "]", "=", "(", "c_pos_1", "+", "rand", "(", ")", "*", "(", "c_pos_2", "+", "1", ")", ")", "/", "self", ".", "q", "\n", "p_neg", "[", "k", "]", "=", "(", "c_neg_1", "+", "rand", "(", ")", "*", "(", "c_neg_2", "+", "1", ")", ")", "/", "self", ".", "q", "\n", "\n", "", "confidence_credibility", "=", "np", ".", "zeros", "(", "(", "self", ".", "q", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "p_neg", "[", "i", "]", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_neg", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_pos", "[", "i", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_pos", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_neg", "[", "i", "]", "\n", "\n", "", "", "self", ".", "cal_conf_cred", "=", "confidence_credibility", "\n", "\n", "return", "confidence_credibility", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Classification.ICP_Classification.compute_efficiency": [[226, 235], ["range", "numpy.sum"], "methods", ["None"], ["", "def", "compute_efficiency", "(", "self", ")", ":", "\n", "\n", "\t\t", "n_singletons", "=", "0", "\n", "n_points", "=", "self", ".", "pred_region", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "np", ".", "sum", "(", "self", ".", "pred_region", "[", "i", "]", ")", "==", "1", ":", "\n", "\t\t\t\t", "n_singletons", "+=", "1", "\n", "\n", "", "", "return", "n_singletons", "/", "n_points", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.testing_experiment.load_trained_net": [[117, 123], ["torch.load", "torch.load.eval", "torch.load.cuda"], "function", ["None"], ["def", "load_trained_net", "(", "net_file", ")", ":", "\n", "\t", "net", "=", "torch", ".", "load", "(", "net_file", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t", "net", ".", "cuda", "(", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.testing_experiment.scaling": [[124, 128], ["None"], "function", ["None"], ["", "def", "scaling", "(", "dataset", ",", "X", ",", "Y", ")", ":", "\n", "\t", "Xsc", "=", "-", "1", "+", "2", "*", "(", "X", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "Ysc", "=", "-", "1", "+", "2", "*", "(", "Y", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "return", "Xsc", ",", "Ysc", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.__init__": [[23, 30], ["trained_model", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "Xc", ",", "Yc", ",", "trained_model", ")", ":", "\n", "\t\t", "self", ".", "Xc", "=", "Xc", "\n", "self", ".", "Yc", "=", "Yc", "\n", "self", ".", "output_dim", "=", "Yc", ".", "shape", "[", "1", "]", "\n", "self", ".", "trained_model", "=", "trained_model", "\n", "self", ".", "calibr_pred", "=", "trained_model", "(", "Xc", ")", "\n", "self", ".", "q", "=", "len", "(", "Yc", ")", "# number of points in the calibration set", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_nonconformity_scores": [[33, 43], ["len", "numpy.empty", "range", "numpy.linalg.norm", "numpy.sort"], "methods", ["None"], ["", "def", "get_nonconformity_scores", "(", "self", ",", "y", ",", "y_pred", ",", "sorting", "=", "True", ")", ":", "\n", "\n", "\t\t", "n", "=", "len", "(", "y", ")", "\n", "ncm", "=", "np", ".", "empty", "(", "n", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "ncm", "[", "i", "]", "=", "np", ".", "linalg", ".", "norm", "(", "y", "[", "i", "]", "-", "y_pred", "[", "i", "]", ")", "\n", "\n", "", "if", "sorting", ":", "\n", "\t\t\t", "ncm", "=", "np", ".", "sort", "(", "ncm", ")", "[", ":", ":", "-", "1", "]", "# descending order", "\n", "", "return", "ncm", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_alpha_threshold": [[45, 53], ["CP_Regression.ICP_Regression.get_nonconformity_scores", "numpy.quantile"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_alpha_threshold", "(", "self", ",", "eps", ")", ":", "\n", "\n", "\t\t", "self", ".", "calibr_scores", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "Yc", ",", "self", ".", "calibr_pred", ")", "# nonconformity scores on the calibration set", "\n", "\n", "q", "=", "1", "-", "eps", "\n", "threshold", "=", "np", ".", "quantile", "(", "self", ".", "calibr_scores", ",", "q", ")", "\n", "\n", "return", "threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_1d_alpha_thresholds": [[55, 63], ["numpy.array", "numpy.array", "CP_Regression.ICP_Regression.get_nonconformity_scores", "numpy.quantile", "range", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_1d_alpha_thresholds", "(", "self", ",", "eps", ")", ":", "\n", "\n", "\t\t", "self", ".", "n_calibr_scores", "=", "np", ".", "array", "(", "[", "self", ".", "get_nonconformity_scores", "(", "self", ".", "Yc", "[", ":", ",", "i", "]", ",", "self", ".", "calibr_pred", "[", ":", ",", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", "\n", "\n", "q", "=", "1", "-", "eps", "/", "self", ".", "output_dim", "\n", "n_thresholds", "=", "np", ".", "array", "(", "[", "np", ".", "quantile", "(", "self", ".", "n_calibr_scores", "[", "j", "]", ",", "q", ")", "for", "j", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", "\n", "\n", "return", "n_thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_coverage": [[66, 87], ["CP_Regression.ICP_Regression.trained_model", "CP_Regression.ICP_Regression.get_nonconformity_scores", "len", "CP_Regression.ICP_Regression.get_alpha_threshold", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_alpha_threshold"], ["", "def", "get_coverage", "(", "self", ",", "epsilon", ",", "x_test", ",", "y_test", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\n", "\n", "\t\t", "y_test_pred", "=", "self", ".", "trained_model", "(", "x_test", ")", "\n", "test_scores", "=", "self", ".", "get_nonconformity_scores", "(", "y_test", ",", "y_test_pred", ")", "\n", "n_points", "=", "len", "(", "y_test", ")", "\n", "\n", "self", ".", "tau", "=", "self", ".", "get_alpha_threshold", "(", "epsilon", ")", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "test_scores", "[", "i", "]", "<", "self", ".", "tau", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_box_coverage": [[89, 111], ["CP_Regression.ICP_Regression.trained_model", "len", "CP_Regression.ICP_Regression.get_1d_alpha_thresholds", "range", "numpy.array", "numpy.all", "CP_Regression.ICP_Regression.get_nonconformity_scores", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_1d_alpha_thresholds", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_box_coverage", "(", "self", ",", "epsilon", ",", "x_test", ",", "y_test", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\n", "\n", "\t\t", "y_test_pred", "=", "self", ".", "trained_model", "(", "x_test", ")", "\n", "n_test_scores", "=", "np", ".", "array", "(", "[", "self", ".", "get_nonconformity_scores", "(", "y_test", "[", ":", ",", "i", "]", ",", "y_test_pred", "[", ":", ",", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", ".", "T", "\n", "n_points", "=", "len", "(", "y_test", ")", "\n", "\n", "n_tau", "=", "self", ".", "get_1d_alpha_thresholds", "(", "epsilon", ")", "\n", "self", ".", "box_tau", "=", "n_tau", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "np", ".", "all", "(", "n_test_scores", "[", "i", "]", "<", "n_tau", ")", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CP_Regression.ICP_Regression.get_efficiency": [[113, 122], ["scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle.volume", "scipy.spatial.Rectangle.volume"], "methods", ["None"], ["", "def", "get_efficiency", "(", "self", ",", "box_flag", ")", ":", "\n", "\n", "\t\t", "if", "box_flag", ":", "\n", "\t\t\t", "pred_rectangle", "=", "scipy", ".", "spatial", ".", "Rectangle", "(", "self", ".", "box_tau", ",", "-", "1", "*", "self", ".", "box_tau", ")", "\n", "eff", "=", "pred_rectangle", ".", "volume", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "eff", "=", "2", "*", "self", ".", "tau", "# width of the 1d tube", "\n", "\n", "", "return", "eff", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CoupledVanDerPol.CoupledVanDerPol.__init__": [[9, 17], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "8", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.01", ")", ":", "\n", "\t\t", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "-", "2.5", ",", "2.5", "]", ",", "[", "-", "4.05", ",", "4.05", "]", ",", "[", "-", "2.5", ",", "2.5", "]", ",", "[", "-", "4.05", ",", "4.05", "]", "]", ")", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "4", "\n", "self", ".", "obs_dim", "=", "2", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CoupledVanDerPol.CoupledVanDerPol.diff_eq": [[19, 29], ["numpy.array"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "z", ",", "t", ")", ":", "\n", "# z = (x1,y1,x2,y2)", "\n", "\t\t", "mu", "=", "1", "\n", "dzdt", "=", "np", ".", "array", "(", "[", "\n", "z", "[", "1", "]", ",", "\n", "mu", "*", "(", "1", "-", "z", "[", "0", "]", "**", "2", ")", "*", "z", "[", "1", "]", "-", "2", "*", "z", "[", "0", "]", "+", "z", "[", "2", "]", ",", "\n", "z", "[", "3", "]", ",", "\n", "mu", "*", "(", "1", "-", "z", "[", "2", "]", "**", "2", ")", "*", "z", "[", "3", "]", "-", "2", "*", "z", "[", "2", "]", "+", "z", "[", "0", "]", "\n", "]", ")", "\n", "return", "dzdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CoupledVanDerPol.CoupledVanDerPol.gen_trajectories": [[32, 48], ["numpy.empty", "numpy.linspace", "scipy.integrate.odeint", "numpy.all", "numpy.all", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "z0", "=", "self", ".", "ranges", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "if", "np", ".", "all", "(", "zz", "[", "-", "1", "]", ">=", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "zz", "[", "-", "1", "]", "<=", "self", ".", "ranges", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "zz", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "trajs", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CoupledVanDerPol.CoupledVanDerPol.get_noisy_measurments": [[50, 63], ["numpy.zeros", "range", "range", "numpy.random.randn", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "# observe x1, x2", "\n", "\t\t", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "obs_dim", ")", ")", "# 2-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "[", "trajs", "[", "i", ",", "j", ",", "0", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", ",", "trajs", "[", "i", ",", "j", ",", "2", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "]", "\n", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.CoupledVanDerPol.CoupledVanDerPol.gen_labels": [[64, 78], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "7", ")", ":", "\n", "\n", "# UNSAFE SET: y1, y2 >= 2.75", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "z0", "=", "states", "[", "i", "]", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "1", "]", "<", "2.75", ")", ")", "*", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "3", "]", "<", "2.75", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.run_cp_classification.split_train_calibration": [[6, 20], ["np.random.permutation", "int"], "function", ["None"], ["def", "split_train_calibration", "(", "full_input", ",", "full_output", ",", "full_meas", ",", "split_rate", "=", "0.7", ")", ":", "\n", "\t", "n_full_points", "=", "full_input", ".", "shape", "[", "0", "]", "\n", "perm", "=", "np", ".", "random", ".", "permutation", "(", "n_full_points", ")", "\n", "split_index", "=", "int", "(", "n_full_points", "*", "split_rate", ")", "\n", "\n", "input_test", "=", "full_input", "[", "perm", "[", ":", "split_index", "]", "]", "\n", "output_test", "=", "full_output", "[", "perm", "[", ":", "split_index", "]", "]", "\n", "\n", "input_cal", "=", "full_input", "[", "perm", "[", "split_index", ":", "]", "]", "\n", "output_cal", "=", "full_output", "[", "perm", "[", "split_index", ":", "]", "]", "\n", "\n", "meas_test", "=", "full_meas", "[", "perm", "[", ":", "split_index", "]", "]", "\n", "\n", "return", "input_test", ",", "output_test", ",", "input_cal", ",", "output_cal", ",", "meas_test", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.pancr_utils.HJ_params": [[9, 46], ["None"], "function", ["None"], ["def", "HJ_params", "(", "BW", "=", "75", ")", ":", "\n", "\n", "\t", "p", "=", "{", "}", "\n", "p", "[", "\"BW\"", "]", "=", "BW", "\n", "p", "[", "\"ka_int\"", "]", "=", "0.025", "\n", "p", "[", "\"EGP_0\"", "]", "=", "0.0158", "*", "BW", "\n", "p", "[", "\"F_01\"", "]", "=", "0.0104", "*", "BW", "\n", "p", "[", "\"V_G\"", "]", "=", "0.1797", "*", "BW", "\n", "p", "[", "\"k12\"", "]", "=", "0.0793", "\n", "p", "[", "\"R_thr\"", "]", "=", "9", "\n", "p", "[", "\"R_cl\"", "]", "=", "0.003", "\n", "p", "[", "\"Ag\"", "]", "=", "0.8121", "\n", "p", "[", "\"tMaxg\"", "]", "=", "48.8385", "\n", "p", "[", "\"Ug_ceil\"", "]", "=", "0.0275", "*", "BW", "\n", "p", "[", "\"K\"", "]", "=", "0.7958", "\n", "p", "[", "\"kia1\"", "]", "=", "0.0113", "\n", "p", "[", "\"kia2\"", "]", "=", "0.0197", "\n", "p", "[", "\"k_e\"", "]", "=", "0.1735", "\n", "p", "[", "\"Vmax_LD\"", "]", "=", "2.9639", "\n", "p", "[", "\"km_LD\"", "]", "=", "47.5305", "\n", "p", "[", "\"ka_1\"", "]", "=", "0.007", "\n", "p", "[", "\"ka_2\"", "]", "=", "0.0331", "\n", "p", "[", "\"ka_3\"", "]", "=", "0.0308", "\n", "p", "[", "\"SIT\"", "]", "=", "0.0046", "\n", "p", "[", "\"SID\"", "]", "=", "0.0006", "\n", "p", "[", "\"SIE\"", "]", "=", "0.0384", "\n", "p", "[", "\"V_I\"", "]", "=", "0.1443", "*", "BW", "\n", "p", "[", "\"M_PGU_f\"", "]", "=", "1", "/", "35", "\n", "p", "[", "\"M_HGP_f\"", "]", "=", "1", "/", "155", "\n", "p", "[", "\"M_PIU_f\"", "]", "=", "2.4", "\n", "p", "[", "\"PGUA_rate\"", "]", "=", "1", "/", "30", "\n", "p", "[", "\"PGUA_a\"", "]", "=", "0.006", "\n", "p", "[", "\"PGUA_b\"", "]", "=", "1.2264", "\n", "p", "[", "\"PGUA_c\"", "]", "=", "-", "10.1952", "\n", "p", "[", "\"PVO2max_rate\"", "]", "=", "5", "/", "3", "\n", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.pancr_utils.steady_PGUA_from_PVO2max": [[47, 52], ["None"], "function", ["None"], ["", "def", "steady_PGUA_from_PVO2max", "(", "PVO2max", ",", "params", ")", ":", "\n", "\n", "\t", "PGUA_ss", "=", "params", "[", "\"PGUA_a\"", "]", "*", "PVO2max", "**", "2", "+", "params", "[", "\"PGUA_b\"", "]", "*", "PVO2max", "+", "params", "[", "\"PGUA_c\"", "]", "\n", "\n", "return", "PGUA_ss", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.pancr_utils.diff_eq": [[54, 207], ["pancr_utils.HJ_params", "numpy.zeros", "numpy.maximum", "pancr_utils.steady_PGUA_from_PVO2max", "len"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.HJ_params", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.steady_PGUA_from_PVO2max"], ["", "def", "diff_eq", "(", "y", ")", ":", "\n", "\t", "'''\n\t% y: state variables -- vector of length 14\n\t% params: parameters\n\t% dists: disturbances at t (vector of length 3)\n\t'''", "\n", "#y =  np.array([1.05124500e+02, 3.53833297e+01,8.78988903e+02, 8.78988903e+02,", "\n", "#7.42622616e+01, 6.56803525e+01, 2.79168049e-02, 3.64132238e-03,", "\n", "#2.33044632e-01, 0.00000000e+00, 0.00000000e+00, 7.80000000e+00,", "\n", "#0.00000000e+00, 8.00000000e+00])", "\n", "#y[:6] = y_red", "\n", "\n", "\n", "params", "=", "HJ_params", "(", ")", "\n", "\n", "basal_iir", "=", "16.0146096438259", "\n", "\n", "u", "=", "basal_iir", "\n", "\n", "dydt", "=", "np", ".", "zeros", "(", "len", "(", "y", ")", ")", "\n", "\n", "## extract disturbances", "\n", "# ingested CHO", "\n", "D", "=", "0", "\n", "# active muscular mass at current time", "\n", "MM", "=", "0", "\n", "# max oxygen at current time", "\n", "targetPVo2max", "=", "8", "\n", "\n", "## extract variables", "\n", "\n", "# glucose kinetics", "\n", "# masses of glucose in the accessible and non-accessible compartments respectively, in mmol.", "\n", "Q1", "=", "y", "[", "0", "]", "\n", "Q2", "=", "y", "[", "1", "]", "\n", "\n", "# Measured glucose concentration", "\n", "G", "=", "Q1", "/", "params", "[", "\"V_G\"", "]", "\n", "\n", "# corrected non-insulin mediated glucose uptake [Hovorka04]", "\n", "if", "G", ">=", "4.5", ":", "\n", "\t\t", "F_01c", "=", "params", "[", "\"F_01\"", "]", "\n", "", "else", ":", "\n", "\t\t", "F_01c", "=", "params", "[", "\"F_01\"", "]", "*", "G", "/", "4.5", "\n", "\n", "", "if", "G", ">=", "9", ":", "\n", "\t\t", "F_R", "=", "0.003", "*", "(", "G", "-", "9", ")", "*", "params", "[", "\"V_G\"", "]", "\n", "", "else", ":", "\n", "\t\t", "F_R", "=", "0", "\n", "\n", "\n", "# insulin kinetics", "\n", "# insulin mass through the slow absorption pathway,", "\n", "", "Q1a", "=", "y", "[", "2", "]", "\n", "Q2i", "=", "y", "[", "3", "]", "\n", "#faster channel for insulin absorption", "\n", "Q1b", "=", "y", "[", "4", "]", "\n", "#plasma insulin mass", "\n", "Q3", "=", "y", "[", "5", "]", "\n", "#plasma insulin concentration", "\n", "I", "=", "Q3", "/", "params", "[", "\"V_I\"", "]", "\n", "\n", "# insulin dynamics", "\n", "# x1 (min-1), x2 (min-1) and x3 (unitless) represent ", "\n", "# the effect of insulin on glucose distribution, ", "\n", "# glucose disposal and suppression of endogenous glucose ", "\n", "# production, respectively", "\n", "x1", "=", "y", "[", "6", "]", "\n", "x2", "=", "y", "[", "7", "]", "\n", "x3", "=", "y", "[", "8", "]", "\n", "\n", "k_b1", "=", "params", "[", "\"ka_1\"", "]", "*", "params", "[", "\"SIT\"", "]", "\n", "k_b2", "=", "params", "[", "\"ka_2\"", "]", "*", "params", "[", "\"SID\"", "]", "\n", "k_b3", "=", "params", "[", "\"ka_3\"", "]", "*", "params", "[", "\"SIE\"", "]", "\n", "\n", "# Subsystem of glucose absorption from gut", "\n", "# Glucose masses in the accessible and nonaccessible compartments", "\n", "G1", "=", "y", "[", "9", "]", "\n", "G2", "=", "y", "[", "10", "]", "\n", "\n", "tmax", "=", "np", ".", "maximum", "(", "params", "[", "\"tMaxg\"", "]", ",", "G2", "/", "params", "[", "\"Ug_ceil\"", "]", ")", "\n", "U_g", "=", "G2", "/", "tmax", "\n", "\n", "# interstitial glucose", "\n", "C", "=", "y", "[", "11", "]", "\n", "\n", "# exercise ", "\n", "PGUA", "=", "y", "[", "12", "]", "\n", "PVO2max", "=", "y", "[", "13", "]", "\n", "M_PGU", "=", "1", "+", "PGUA", "*", "MM", "*", "params", "[", "\"M_PGU_f\"", "]", "\n", "M_PIU", "=", "1", "+", "MM", "*", "params", "[", "\"M_PIU_f\"", "]", "\n", "M_HGP", "=", "1", "+", "PGUA", "*", "MM", "*", "params", "[", "\"M_HGP_f\"", "]", "\n", "#PGUA_ss = p.PGUA_a*PVO2max^2 + p.PGUA_b*PVO2max + p.PGUA_c;", "\n", "PGUA_ss", "=", "steady_PGUA_from_PVO2max", "(", "PVO2max", ",", "params", ")", "\n", "\n", "## compute change rates", "\n", "# use flow variables to avoid duplicated computation", "\n", "\n", "# Glucose kinetics", "\n", "Q1_to_Q2_flow", "=", "x1", "*", "Q1", "-", "params", "[", "\"k12\"", "]", "*", "Q2", "\n", "Q1dt", "=", "-", "F_01c", "-", "Q1_to_Q2_flow", "-", "F_R", "+", "U_g", "+", "params", "[", "\"EGP_0\"", "]", "*", "(", "1", "-", "x3", ")", "\n", "Q2dt", "=", "Q1_to_Q2_flow", "-", "x2", "*", "Q2", "\n", "dydt", "[", "0", "]", "=", "Q1dt", "\n", "dydt", "[", "1", "]", "=", "Q2dt", "\n", "\n", "## insulin kinetics", "\n", "Q1a_to_Q2i_flow", "=", "params", "[", "\"kia1\"", "]", "*", "Q1a", "\n", "Q2i_to_Q3_flow", "=", "params", "[", "\"kia1\"", "]", "*", "Q2i", "\n", "Q1b_to_Q3_flow", "=", "params", "[", "\"kia2\"", "]", "*", "Q1b", "\n", "###---", "\n", "insulin_ratio", "=", "params", "[", "\"K\"", "]", "*", "u", "\n", "\n", "Q1adt", "=", "insulin_ratio", "-", "Q1a_to_Q2i_flow", "-", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1a", "/", "(", "params", "[", "\"km_LD\"", "]", "+", "Q1a", ")", "\n", "Q2idt", "=", "Q1a_to_Q2i_flow", "-", "Q2i_to_Q3_flow", "\n", "####----", "\n", "Q1bdt", "=", "u", "-", "insulin_ratio", "-", "Q1b_to_Q3_flow", "-", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1b", "/", "(", "params", "[", "\"km_LD\"", "]", "+", "Q1b", ")", "\n", "Q3dt", "=", "Q2i_to_Q3_flow", "+", "Q1b_to_Q3_flow", "-", "params", "[", "\"k_e\"", "]", "*", "Q3", "\n", "\n", "dydt", "[", "2", "]", "=", "Q1adt", "\n", "dydt", "[", "3", "]", "=", "Q2idt", "\n", "dydt", "[", "4", "]", "=", "Q1bdt", "\n", "dydt", "[", "5", "]", "=", "Q3dt", "\n", "\n", "## insulin dynamics", "\n", "x1dt", "=", "-", "params", "[", "\"ka_1\"", "]", "*", "x1", "+", "M_PGU", "*", "M_PIU", "*", "k_b1", "*", "I", "\n", "x2dt", "=", "-", "params", "[", "\"ka_2\"", "]", "*", "x2", "+", "M_PGU", "*", "M_PIU", "*", "k_b2", "*", "I", "\n", "x3dt", "=", "-", "params", "[", "\"ka_3\"", "]", "*", "x3", "+", "M_HGP", "*", "k_b3", "*", "I", "\n", "dydt", "[", "6", "]", "=", "x1dt", "\n", "dydt", "[", "7", "]", "=", "x2dt", "\n", "dydt", "[", "8", "]", "=", "x3dt", "\n", "\n", "\n", "## Glucose absorption from gut", "\n", "G1_to_G2_flow", "=", "G1", "/", "tmax", "\n", "G1dt", "=", "-", "G1_to_G2_flow", "+", "params", "[", "\"Ag\"", "]", "*", "D", "\n", "G2dt", "=", "G1_to_G2_flow", "-", "G2", "/", "tmax", "\n", "dydt", "[", "9", "]", "=", "G1dt", "\n", "dydt", "[", "10", "]", "=", "G2dt", "\n", "\n", "\n", "## interstitial glucose", "\n", "Cdt", "=", "params", "[", "\"ka_int\"", "]", "*", "(", "G", "-", "C", ")", "\n", "dydt", "[", "11", "]", "=", "Cdt", "\n", "\n", "\n", "## exercise", "\n", "PGUAdt", "=", "-", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA", "+", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA_ss", "\n", "dydt", "[", "12", "]", "=", "PGUAdt", "\n", "\n", "PVO2maxdt", "=", "-", "params", "[", "\"PVO2max_rate\"", "]", "*", "PVO2max", "+", "params", "[", "\"PVO2max_rate\"", "]", "*", "targetPVo2max", "\n", "dydt", "[", "13", "]", "=", "PVO2maxdt", "\n", "\n", "return", "dydt", "#[:6]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.get_state_space": [[4, 38], ["numpy.zeros"], "function", ["None"], ["def", "get_state_space", "(", ")", ":", "\n", "\n", "\t", "state_space", "=", "np", ".", "zeros", "(", "(", "29", ",", "2", ")", ")", "\n", "state_space", "[", "0", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "1", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "2", "]", "=", "[", "-", "20", ",", "20", "]", "\n", "state_space", "[", "3", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "4", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "5", "]", "=", "[", "-", "300", ",", "300", "]", "\n", "state_space", "[", "6", "]", "=", "[", "-", "350", ",", "350", "]", "\n", "state_space", "[", "7", "]", "=", "[", "-", "100", ",", "100", "]", "\n", "state_space", "[", "8", "]", "=", "[", "-", "20", ",", "20", "]", "\n", "state_space", "[", "9", "]", "=", "[", "-", "20", ",", "20", "]", "\n", "state_space", "[", "10", "]", "=", "[", "-", "40", ",", "40", "]", "\n", "state_space", "[", "11", "]", "=", "[", "-", "30", ",", "30", "]", "\n", "state_space", "[", "12", "]", "=", "[", "-", "30", ",", "30", "]", "\n", "state_space", "[", "13", "]", "=", "[", "-", "600", ",", "600", "]", "\n", "state_space", "[", "14", "]", "=", "[", "-", "600", ",", "600", "]", "\n", "state_space", "[", "15", "]", "=", "[", "-", "200", ",", "200", "]", "\n", "state_space", "[", "16", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "17", "]", "=", "[", "-", "130", ",", "130", "]", "\n", "state_space", "[", "18", "]", "=", "[", "-", "50", ",", "50", "]", "\n", "state_space", "[", "19", "]", "=", "[", "-", "25", ",", "25", "]", "\n", "state_space", "[", "20", "]", "=", "[", "-", "20", ",", "20", "]", "\n", "state_space", "[", "21", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "22", "]", "=", "[", "-", "30", ",", "30", "]", "\n", "state_space", "[", "23", "]", "=", "[", "-", "10", ",", "10", "]", "\n", "state_space", "[", "24", "]", "=", "[", "-", "15", ",", "15", "]", "\n", "state_space", "[", "25", "]", "=", "[", "-", "30", ",", "30", "]", "\n", "state_space", "[", "26", "]", "=", "[", "-", "15", ",", "15", "]", "\n", "state_space", "[", "27", "]", "=", "[", "-", "35", ",", "35", "]", "\n", "state_space", "[", "28", "]", "=", "[", "0", ",", "100", "]", "\n", "\n", "return", "state_space", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.derivative": [[40, 303], ["numpy.zeros", "len", "len"], "function", ["None"], ["", "def", "derivative", "(", "x", ")", ":", "\n", "\t\t", "dx", "=", "np", ".", "zeros", "(", "len", "(", "x", ")", ")", "\n", "dx", "[", "0", "]", "=", "(", "0.998573780060", "*", "x", "[", "3", "]", "+", "0.053384274244", "*", "x", "[", "4", "]", ")", "\n", "\n", "dx", "[", "1", "]", "=", "(", "x", "[", "2", "]", "-", "0.003182219341", "*", "x", "[", "3", "]", "+", "0.059524655342", "*", "x", "[", "4", "]", ")", "\n", "\n", "dx", "[", "2", "]", "=", "(", "-", "11.570495605469", "*", "x", "[", "2", "]", "-", "2.544637680054", "*", "x", "[", "3", "]", "\n", "-", "0.063602626324", "*", "x", "[", "4", "]", "+", "0.106780529022", "*", "x", "[", "5", "]", "\n", "-", "0.094918668270", "*", "x", "[", "6", "]", "+", "0.007107574493", "*", "x", "[", "7", "]", "\n", "-", "3.700790207851", "*", "x", "[", "8", "]", "-", "16.213284674534", "*", "x", "[", "9", "]", "\n", "-", "2.984968535139", "*", "x", "[", "10", "]", "-", "0.493137919288", "*", "x", "[", "11", "]", "\n", "-", "1.186954196152", "*", "x", "[", "12", "]", "-", "0.031106608756", "*", "x", "[", "13", "]", "\n", "+", "0.024595252653", "*", "x", "[", "14", "]", "+", "0.008231369923", "*", "x", "[", "15", "]", "\n", "+", "0.231787619674", "*", "x", "[", "16", "]", "+", "0.745302732591", "*", "x", "[", "17", "]", "\n", "+", "7.895709940231", "*", "x", "[", "18", "]", "+", "2.026930360369", "*", "x", "[", "19", "]", "\n", "+", "0.271792657736", "*", "x", "[", "20", "]", "+", "0.315196108541", "*", "x", "[", "21", "]", "\n", "+", "0.015876847710", "*", "x", "[", "22", "]", "+", "0.009288507454", "*", "x", "[", "23", "]", "\n", "+", "0.087920280806", "*", "x", "[", "24", "]", "-", "0.103727794204", "*", "x", "[", "25", "]", "\n", "-", "4.447282126346", "*", "x", "[", "26", "]", "+", "0.016271459306", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "3", "]", "=", "(", "0.439356565475", "*", "x", "[", "2", "]", "-", "1.998182296753", "*", "x", "[", "3", "]", "\n", "+", "0.016651883721", "*", "x", "[", "5", "]", "+", "0.018462046981", "*", "x", "[", "6", "]", "\n", "-", "0.001187470742", "*", "x", "[", "7", "]", "-", "7.517319654181", "*", "x", "[", "8", "]", "\n", "+", "0.236494174025", "*", "x", "[", "9", "]", "-", "0.028725044803", "*", "x", "[", "10", "]", "\n", "-", "2.442989538035", "*", "x", "[", "11", "]", "+", "0.034510550810", "*", "x", "[", "12", "]", "\n", "-", "0.004683216652", "*", "x", "[", "13", "]", "-", "0.005154038690", "*", "x", "[", "14", "]", "\n", "-", "0.002104275246", "*", "x", "[", "15", "]", "-", "0.079935853309", "*", "x", "[", "16", "]", "\n", "+", "1.420125114638", "*", "x", "[", "17", "]", "-", "0.117856066698", "*", "x", "[", "18", "]", "\n", "-", "0.226142434271", "*", "x", "[", "19", "]", "-", "0.002585832387", "*", "x", "[", "20", "]", "\n", "-", "0.001365917341", "*", "x", "[", "21", "]", "+", "0.035962654791", "*", "x", "[", "22", "]", "\n", "+", "0.028993699893", "*", "x", "[", "23", "]", "-", "0.045896888864", "*", "x", "[", "24", "]", "\n", "+", "0.716358354284", "*", "x", "[", "25", "]", "+", "0.029085601036", "*", "x", "[", "26", "]", "\n", "-", "0.001242728387", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "4", "]", "=", "(", "-", "2.040895462036", "*", "x", "[", "2", "]", "-", "0.458999156952", "*", "x", "[", "3", "]", "\n", "-", "0.735027790070", "*", "x", "[", "4", "]", "+", "0.019255757332", "*", "x", "[", "5", "]", "\n", "-", "0.004595622420", "*", "x", "[", "6", "]", "+", "0.002120360732", "*", "x", "[", "7", "]", "\n", "-", "0.740775522612", "*", "x", "[", "8", "]", "-", "2.555714688932", "*", "x", "[", "9", "]", "\n", "-", "0.339301128908", "*", "x", "[", "10", "]", "-", "0.033104023297", "*", "x", "[", "11", "]", "\n", "-", "1.446467788369", "*", "x", "[", "12", "]", "-", "0.007442776396", "*", "x", "[", "13", "]", "\n", "-", "0.000012314482", "*", "x", "[", "14", "]", "+", "0.030657946816", "*", "x", "[", "15", "]", "\n", "+", "1.002118140789", "*", "x", "[", "16", "]", "+", "0.153644862643", "*", "x", "[", "17", "]", "\n", "+", "1.273828227991", "*", "x", "[", "18", "]", "+", "1.983204935524", "*", "x", "[", "19", "]", "\n", "+", "0.048757213739", "*", "x", "[", "20", "]", "+", "0.060295617991", "*", "x", "[", "21", "]", "\n", "+", "0.001605314985", "*", "x", "[", "22", "]", "+", "0.000554368427", "*", "x", "[", "23", "]", "\n", "+", "0.475422075598", "*", "x", "[", "24", "]", "-", "0.010880647601", "*", "x", "[", "25", "]", "\n", "-", "0.775712358056", "*", "x", "[", "26", "]", "-", "0.408545111762", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "5", "]", "=", "(", "-", "32.103607177734", "*", "x", "[", "0", "]", "-", "0.503355026245", "*", "x", "[", "2", "]", "\n", "+", "2.297859191895", "*", "x", "[", "3", "]", "-", "0.021215811372", "*", "x", "[", "5", "]", "\n", "-", "0.021167919040", "*", "x", "[", "6", "]", "+", "0.015811592340", "*", "x", "[", "7", "]", "\n", "+", "8.689411857722", "*", "x", "[", "8", "]", "-", "0.215429806172", "*", "x", "[", "9", "]", "\n", "+", "0.063500560122", "*", "x", "[", "10", "]", "+", "2.847523923644", "*", "x", "[", "11", "]", "\n", "-", "0.297021616015", "*", "x", "[", "12", "]", "+", "0.001323463163", "*", "x", "[", "13", "]", "\n", "+", "0.002124820781", "*", "x", "[", "14", "]", "+", "0.068860932948", "*", "x", "[", "15", "]", "\n", "+", "1.694077894544", "*", "x", "[", "16", "]", "-", "1.639571645676", "*", "x", "[", "17", "]", "\n", "+", "0.110652545728", "*", "x", "[", "18", "]", "+", "0.728735301618", "*", "x", "[", "19", "]", "\n", "+", "0.003107735169", "*", "x", "[", "20", "]", "+", "0.003335187976", "*", "x", "[", "21", "]", "\n", "-", "0.042347579477", "*", "x", "[", "22", "]", "-", "0.034247794709", "*", "x", "[", "23", "]", "\n", "+", "0.469091132962", "*", "x", "[", "24", "]", "-", "0.814424502262", "*", "x", "[", "25", "]", "\n", "-", "0.018082452136", "*", "x", "[", "26", "]", "+", "0.016747349252", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "6", "]", "=", "(", "0.102161169052", "*", "x", "[", "0", "]", "+", "32.057830810547", "*", "x", "[", "1", "]", "\n", "-", "2.347217559814", "*", "x", "[", "2", "]", "-", "0.503611564636", "*", "x", "[", "3", "]", "\n", "+", "0.834947586060", "*", "x", "[", "4", "]", "+", "0.021226570010", "*", "x", "[", "5", "]", "\n", "-", "0.037879735231", "*", "x", "[", "6", "]", "+", "0.000354003860", "*", "x", "[", "7", "]", "\n", "-", "0.560681623936", "*", "x", "[", "8", "]", "-", "3.574948145694", "*", "x", "[", "9", "]", "\n", "-", "0.788176766644", "*", "x", "[", "10", "]", "-", "0.107590635594", "*", "x", "[", "11", "]", "\n", "+", "0.908657075077", "*", "x", "[", "12", "]", "-", "0.008720966051", "*", "x", "[", "13", "]", "\n", "+", "0.005669792925", "*", "x", "[", "14", "]", "+", "0.044884407612", "*", "x", "[", "15", "]", "\n", "+", "0.788227489086", "*", "x", "[", "16", "]", "+", "0.111065913657", "*", "x", "[", "17", "]", "\n", "+", "1.709840089441", "*", "x", "[", "18", "]", "-", "0.946574755181", "*", "x", "[", "19", "]", "\n", "+", "0.054255711842", "*", "x", "[", "20", "]", "+", "0.060392345409", "*", "x", "[", "21", "]", "\n", "+", "0.003299051857", "*", "x", "[", "22", "]", "+", "0.001965592530", "*", "x", "[", "23", "]", "\n", "-", "0.035607238660", "*", "x", "[", "24", "]", "-", "0.021984114632", "*", "x", "[", "25", "]", "\n", "-", "0.893130060176", "*", "x", "[", "26", "]", "+", "0.503048977806", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "7", "]", "=", "(", "-", "1.910972595215", "*", "x", "[", "0", "]", "+", "1.713829040527", "*", "x", "[", "1", "]", "\n", "-", "0.004005432129", "*", "x", "[", "2", "]", "-", "0.057411193848", "*", "x", "[", "3", "]", "\n", "+", "0.013989634812", "*", "x", "[", "5", "]", "-", "0.000906753354", "*", "x", "[", "6", "]", "\n", "-", "0.290513515472", "*", "x", "[", "7", "]", "-", "1.440209153996", "*", "x", "[", "8", "]", "\n", "-", "1.089782421583", "*", "x", "[", "9", "]", "-", "0.599051729911", "*", "x", "[", "10", "]", "\n", "-", "0.930901394778", "*", "x", "[", "11", "]", "+", "5.044060722850", "*", "x", "[", "12", "]", "\n", "+", "0.079229241316", "*", "x", "[", "13", "]", "+", "0.074101747848", "*", "x", "[", "14", "]", "\n", "-", "1.301808243838", "*", "x", "[", "15", "]", "-", "31.393874531397", "*", "x", "[", "16", "]", "\n", "+", "0.233327947688", "*", "x", "[", "17", "]", "+", "0.478559456452", "*", "x", "[", "18", "]", "\n", "-", "9.198865975131", "*", "x", "[", "19", "]", "-", "0.002820980233", "*", "x", "[", "20", "]", "\n", "-", "0.034669033757", "*", "x", "[", "21", "]", "+", "0.022125233836", "*", "x", "[", "22", "]", "\n", "+", "0.019923408940", "*", "x", "[", "23", "]", "-", "8.159414332666", "*", "x", "[", "24", "]", "\n", "-", "0.129736796488", "*", "x", "[", "25", "]", "-", "0.298841506489", "*", "x", "[", "26", "]", "\n", "-", "0.300193732750", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "8", "]", "=", "(", "0.050176870833", "*", "x", "[", "0", "]", "-", "0.003161246171", "*", "x", "[", "1", "]", "\n", "-", "0.486165175190", "*", "x", "[", "2", "]", "+", "0.266534777047", "*", "x", "[", "3", "]", "\n", "+", "0.003826227932", "*", "x", "[", "4", "]", "+", "0.000001339204", "*", "x", "[", "5", "]", "\n", "+", "0.000001199431", "*", "x", "[", "6", "]", "-", "0.000022435600", "*", "x", "[", "7", "]", "\n", "-", "0.020657323970", "*", "x", "[", "8", "]", "+", "0.001301453941", "*", "x", "[", "9", "]", "\n", "+", "0.213359280279", "*", "x", "[", "10", "]", "+", "0.881596311923", "*", "x", "[", "11", "]", "\n", "+", "0.051809053856", "*", "x", "[", "12", "]", "-", "0.000000551337", "*", "x", "[", "13", "]", "\n", "-", "0.000000493794", "*", "x", "[", "14", "]", "+", "0.000009236516", "*", "x", "[", "15", "]", ")", "\n", "\n", "dx", "[", "9", "]", "=", "(", "-", "0.019757788570", "*", "x", "[", "0", "]", "+", "0.009012833714", "*", "x", "[", "1", "]", "\n", "+", "0.311015942657", "*", "x", "[", "2", "]", "+", "2.810181204790", "*", "x", "[", "3", "]", "\n", "-", "0.001602140073", "*", "x", "[", "4", "]", "-", "0.000000613279", "*", "x", "[", "5", "]", "\n", "-", "0.000000549271", "*", "x", "[", "6", "]", "+", "0.000010274224", "*", "x", "[", "7", "]", "\n", "+", "0.008134087133", "*", "x", "[", "8", "]", "-", "0.003710494952", "*", "x", "[", "9", "]", "\n", "+", "0.863507011470", "*", "x", "[", "10", "]", "-", "1.236460821044", "*", "x", "[", "11", "]", "\n", "+", "0.060184240645", "*", "x", "[", "12", "]", "+", "0.000000252481", "*", "x", "[", "13", "]", "\n", "+", "0.000000226129", "*", "x", "[", "14", "]", "-", "0.000004229797", "*", "x", "[", "15", "]", ")", "\n", "\n", "dx", "[", "10", "]", "=", "(", "-", "0.030385323449", "*", "x", "[", "0", "]", "+", "0.003110159427", "*", "x", "[", "1", "]", "\n", "+", "0.312812882924", "*", "x", "[", "2", "]", "+", "0.287354391281", "*", "x", "[", "3", "]", "\n", "-", "0.002331730630", "*", "x", "[", "4", "]", "-", "0.000000824205", "*", "x", "[", "5", "]", "\n", "-", "0.000000738183", "*", "x", "[", "6", "]", "+", "0.000013807861", "*", "x", "[", "7", "]", "\n", "-", "8.414922645141", "*", "x", "[", "8", "]", "-", "36.922139523656", "*", "x", "[", "9", "]", "\n", "-", "18.505141519315", "*", "x", "[", "10", "]", "-", "3.793715804769", "*", "x", "[", "11", "]", "\n", "-", "2.765572372983", "*", "x", "[", "12", "]", "+", "0.035944961732", "*", "x", "[", "13", "]", "\n", "-", "0.038910104720", "*", "x", "[", "14", "]", "+", "0.025846348888", "*", "x", "[", "15", "]", "\n", "+", "0.527826299191", "*", "x", "[", "16", "]", "+", "1.697201876759", "*", "x", "[", "17", "]", "\n", "+", "17.980094722474", "*", "x", "[", "18", "]", "+", "4.615721721183", "*", "x", "[", "19", "]", "\n", "+", "0.618925691035", "*", "x", "[", "20", "]", "+", "0.717763941510", "*", "x", "[", "21", "]", "\n", "+", "0.036154725527", "*", "x", "[", "22", "]", "+", "0.021151770407", "*", "x", "[", "23", "]", "\n", "+", "0.200211885807", "*", "x", "[", "24", "]", "-", "0.236208723376", "*", "x", "[", "25", "]", "\n", "-", "10.127341872304", "*", "x", "[", "26", "]", "+", "0.037053334254", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "11", "]", "=", "(", "0.002667394037", "*", "x", "[", "0", "]", "+", "0.004496152836", "*", "x", "[", "1", "]", "\n", "+", "0.045956750452", "*", "x", "[", "2", "]", "+", "1.764514260408", "*", "x", "[", "3", "]", "\n", "+", "0.000146052012", "*", "x", "[", "4", "]", "+", "0.000000019584", "*", "x", "[", "5", "]", "\n", "+", "0.000000017540", "*", "x", "[", "6", "]", "-", "0.000000328097", "*", "x", "[", "7", "]", "\n", "-", "17.119523267503", "*", "x", "[", "8", "]", "+", "0.536693033369", "*", "x", "[", "9", "]", "\n", "+", "0.353775293385", "*", "x", "[", "10", "]", "-", "8.335731095093", "*", "x", "[", "11", "]", "\n", "+", "0.078527228401", "*", "x", "[", "12", "]", "+", "0.005987264162", "*", "x", "[", "13", "]", "\n", "+", "0.006725273267", "*", "x", "[", "14", "]", "-", "0.005979187005", "*", "x", "[", "15", "]", "\n", "-", "0.182029763642", "*", "x", "[", "16", "]", "+", "3.233906041666", "*", "x", "[", "17", "]", "\n", "-", "0.268381596955", "*", "x", "[", "18", "]", "-", "0.514971094398", "*", "x", "[", "19", "]", "\n", "-", "0.005888452287", "*", "x", "[", "20", "]", "-", "0.003110464210", "*", "x", "[", "21", "]", "\n", "+", "0.081894084826", "*", "x", "[", "22", "]", "+", "0.066024394813", "*", "x", "[", "23", "]", "\n", "-", "0.104516302587", "*", "x", "[", "24", "]", "+", "1.631289796960", "*", "x", "[", "25", "]", "\n", "+", "0.066233671911", "*", "x", "[", "26", "]", "-", "0.002829938571", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "12", "]", "=", "(", "0.024056576806", "*", "x", "[", "0", "]", "-", "0.001361685819", "*", "x", "[", "1", "]", "\n", "-", "0.230715295944", "*", "x", "[", "2", "]", "+", "0.185551143531", "*", "x", "[", "3", "]", "\n", "+", "0.001832537128", "*", "x", "[", "4", "]", "+", "0.000000640359", "*", "x", "[", "5", "]", "\n", "+", "0.000000573525", "*", "x", "[", "6", "]", "-", "0.000010727892", "*", "x", "[", "7", "]", "\n", "-", "1.696796379292", "*", "x", "[", "8", "]", "-", "5.819307733117", "*", "x", "[", "9", "]", "\n", "-", "2.712299197847", "*", "x", "[", "10", "]", "-", "0.615817527040", "*", "x", "[", "11", "]", "\n", "-", "4.029675752634", "*", "x", "[", "12", "]", "+", "0.002306818331", "*", "x", "[", "13", "]", "\n", "-", "0.004623901048", "*", "x", "[", "14", "]", "+", "0.071938991843", "*", "x", "[", "15", "]", "\n", "+", "2.282021405408", "*", "x", "[", "16", "]", "+", "0.349879770769", "*", "x", "[", "17", "]", "\n", "+", "2.900759066988", "*", "x", "[", "18", "]", "+", "4.516150272075", "*", "x", "[", "19", "]", "\n", "+", "0.111029828612", "*", "x", "[", "20", "]", "+", "0.137305059460", "*", "x", "[", "21", "]", "\n", "+", "0.003655620040", "*", "x", "[", "22", "]", "+", "0.001262406662", "*", "x", "[", "23", "]", "\n", "+", "1.082630189953", "*", "x", "[", "24", "]", "-", "0.024777388732", "*", "x", "[", "25", "]", "\n", "-", "1.766450614425", "*", "x", "[", "26", "]", "-", "0.930338103031", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "13", "]", "=", "(", "-", "1.753103616578", "*", "x", "[", "0", "]", "+", "0.521869609890", "*", "x", "[", "1", "]", "\n", "+", "23.319318958026", "*", "x", "[", "2", "]", "+", "145.082271971311", "*", "x", "[", "3", "]", "\n", "-", "0.138741289403", "*", "x", "[", "4", "]", "-", "0.000051341929", "*", "x", "[", "5", "]", "\n", "-", "0.000045983385", "*", "x", "[", "6", "]", "+", "0.000860128319", "*", "x", "[", "7", "]", "\n", "-", "11.594360544437", "*", "x", "[", "8", "]", "-", "0.705424902410", "*", "x", "[", "9", "]", "\n", "-", "10.592707880324", "*", "x", "[", "10", "]", "-", "54.888617486514", "*", "x", "[", "11", "]", "\n", "-", "0.619258600252", "*", "x", "[", "12", "]", "-", "0.018180886764", "*", "x", "[", "13", "]", "\n", "-", "0.016310350542", "*", "x", "[", "14", "]", "+", "0.172267463350", "*", "x", "[", "15", "]", "\n", "+", "3.857750758541", "*", "x", "[", "16", "]", "-", "3.733629238750", "*", "x", "[", "17", "]", "\n", "+", "0.251977753557", "*", "x", "[", "18", "]", "+", "1.659474556422", "*", "x", "[", "19", "]", "\n", "+", "0.007076928248", "*", "x", "[", "20", "]", "+", "0.007594883320", "*", "x", "[", "21", "]", "\n", "-", "0.096433822422", "*", "x", "[", "22", "]", "-", "0.077989008913", "*", "x", "[", "23", "]", "\n", "+", "1.068213380174", "*", "x", "[", "24", "]", "-", "1.854605830991", "*", "x", "[", "25", "]", "\n", "-", "0.041177323469", "*", "x", "[", "26", "]", "+", "0.038137029879", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "14", "]", "=", "(", "1.708539622488", "*", "x", "[", "0", "]", "+", "0.111898315003", "*", "x", "[", "1", "]", "\n", "-", "13.174473231922", "*", "x", "[", "2", "]", "+", "91.462755556230", "*", "x", "[", "3", "]", "\n", "+", "0.127584976026", "*", "x", "[", "4", "]", "+", "0.000043171229", "*", "x", "[", "5", "]", "\n", "+", "0.000038665459", "*", "x", "[", "6", "]", "-", "0.000723245056", "*", "x", "[", "7", "]", "\n", "-", "1.878010842263", "*", "x", "[", "8", "]", "+", "23.870898681235", "*", "x", "[", "9", "]", "\n", "+", "1.639719754761", "*", "x", "[", "10", "]", "-", "40.888303474223", "*", "x", "[", "11", "]", "\n", "+", "2.851614162302", "*", "x", "[", "12", "]", "+", "0.001349430570", "*", "x", "[", "13", "]", "\n", "-", "0.024984412428", "*", "x", "[", "14", "]", "+", "0.102862439056", "*", "x", "[", "15", "]", "\n", "+", "1.794950045519", "*", "x", "[", "16", "]", "+", "0.252919074168", "*", "x", "[", "17", "]", "\n", "+", "3.893644396914", "*", "x", "[", "18", "]", "-", "2.155538119928", "*", "x", "[", "19", "]", "\n", "+", "0.123550997381", "*", "x", "[", "20", "]", "+", "0.137525326941", "*", "x", "[", "21", "]", "\n", "+", "0.007512594224", "*", "x", "[", "22", "]", "+", "0.004476043338", "*", "x", "[", "23", "]", "\n", "-", "0.081084731931", "*", "x", "[", "24", "]", "-", "0.050062181420", "*", "x", "[", "25", "]", "\n", "-", "2.033833968448", "*", "x", "[", "26", "]", "+", "1.145542115841", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "15", "]", "=", "(", "-", "0.069753861204", "*", "x", "[", "0", "]", "+", "0.041269247265", "*", "x", "[", "1", "]", "\n", "+", "1.243498527057", "*", "x", "[", "2", "]", "+", "13.467483657041", "*", "x", "[", "3", "]", "\n", "-", "0.005772466581", "*", "x", "[", "4", "]", "-", "0.000002269708", "*", "x", "[", "5", "]", "\n", "-", "0.000002032820", "*", "x", "[", "6", "]", "+", "0.000038024292", "*", "x", "[", "7", "]", "\n", "-", "5.161896992464", "*", "x", "[", "8", "]", "-", "0.784811430978", "*", "x", "[", "9", "]", "\n", "-", "1.913888711445", "*", "x", "[", "10", "]", "-", "8.087612492321", "*", "x", "[", "11", "]", "\n", "+", "11.488701354150", "*", "x", "[", "12", "]", "+", "0.194411237470", "*", "x", "[", "13", "]", "\n", "+", "0.167838434014", "*", "x", "[", "14", "]", "-", "3.255004272242", "*", "x", "[", "15", "]", "\n", "-", "71.490067651024", "*", "x", "[", "16", "]", "+", "0.531333931032", "*", "x", "[", "17", "]", "\n", "+", "1.089774627294", "*", "x", "[", "18", "]", "-", "20.947639012098", "*", "x", "[", "19", "]", "\n", "-", "0.006423930487", "*", "x", "[", "20", "]", "-", "0.078948253623", "*", "x", "[", "21", "]", "\n", "+", "0.050383537787", "*", "x", "[", "22", "]", "+", "0.045369546582", "*", "x", "[", "23", "]", "\n", "-", "18.580601832107", "*", "x", "[", "24", "]", "-", "0.295436370828", "*", "x", "[", "25", "]", "\n", "-", "0.680521274763", "*", "x", "[", "26", "]", "-", "0.683600561672", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "16", "]", "=", "(", "-", "0.013549327978", "*", "x", "[", "5", "]", "-", "0.012135188033", "*", "x", "[", "6", "]", "+", "0.226991094595", "*", "x", "[", "7", "]", ")", "\n", "\n", "dx", "[", "17", "]", "=", "(", "-", "11.385989897412", "*", "x", "[", "0", "]", ")", "\n", "\n", "dx", "[", "18", "]", "=", "(", "-", "4.554395958965", "*", "x", "[", "1", "]", ")", "\n", "\n", "dx", "[", "19", "]", "=", "(", "0.243569095885", "*", "x", "[", "3", "]", "-", "4.554395958965", "*", "x", "[", "4", "]", ")", "\n", "\n", "dx", "[", "20", "]", "=", "(", "-", "4.554395958965", "*", "x", "[", "2", "]", "-", "8.500000000000", "*", "x", "[", "20", "]", "-", "18.000000000000", "*", "x", "[", "21", "]", ")", "\n", "\n", "dx", "[", "21", "]", "=", "(", "1.000000000000", "*", "x", "[", "20", "]", ")", "\n", "\n", "dx", "[", "22", "]", "=", "(", "-", "11.385989897412", "*", "x", "[", "3", "]", "-", "8.500000000000", "*", "x", "[", "22", "]", "-", "18.000000000000", "*", "x", "[", "23", "]", ")", "\n", "\n", "dx", "[", "23", "]", "=", "(", "1.000000000000", "*", "x", "[", "22", "]", ")", "\n", "\n", "dx", "[", "24", "]", "=", "(", "0.683186075980", "*", "x", "[", "8", "]", "+", "0.514736886625", "*", "x", "[", "9", "]", "\n", "+", "0.282998565164", "*", "x", "[", "10", "]", "+", "0.440668616363", "*", "x", "[", "11", "]", "\n", "-", "2.382738811465", "*", "x", "[", "11", "]", "-", "0.037424700426", "*", "x", "[", "13", "]", "\n", "-", "0.035002491999", "*", "x", "[", "14", "]", "+", "0.614952694278", "*", "x", "[", "15", "]", "\n", "+", "14.829958398888", "*", "x", "[", "16", "]", "-", "0.110759742503", "*", "x", "[", "17", "]", "\n", "-", "0.226034186438", "*", "x", "[", "18", "]", "+", "4.345468653096", "*", "x", "[", "18", "]", "\n", "+", "0.001333027828", "*", "x", "[", "20", "]", "+", "0.016376955559", "*", "x", "[", "20", "]", "\n", "-", "0.010465240818", "*", "x", "[", "22", "]", "-", "0.009422482600", "*", "x", "[", "23", "]", "\n", "-", "6.145615181050", "*", "x", "[", "24", "]", "+", "0.061014181775", "*", "x", "[", "25", "]", "\n", "+", "0.141165339638", "*", "x", "[", "26", "]", "+", "0.141806743312", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "25", "]", "=", "(", "-", "36.039354729710", "*", "x", "[", "8", "]", "+", "0.767400874818", "*", "x", "[", "9", "]", "\n", "-", "0.190879388177", "*", "x", "[", "10", "]", "-", "11.678174370212", "*", "x", "[", "11", "]", "\n", "-", "0.041149877278", "*", "x", "[", "12", "]", "-", "0.026017271417", "*", "x", "[", "13", "]", "\n", "-", "0.026698725144", "*", "x", "[", "14", "]", "+", "0.036415219598", "*", "x", "[", "15", "]", "\n", "+", "0.738656358350", "*", "x", "[", "16", "]", "+", "6.810845841283", "*", "x", "[", "17", "]", "\n", "-", "0.384784957980", "*", "x", "[", "18", "]", "-", "0.708557300741", "*", "x", "[", "19", "]", "\n", "-", "0.005524328707", "*", "x", "[", "20", "]", "+", "0.002522572903", "*", "x", "[", "21", "]", "\n", "+", "0.171826920583", "*", "x", "[", "22", "]", "+", "0.138368426838", "*", "x", "[", "23", "]", "\n", "+", "0.071909684799", "*", "x", "[", "24", "]", "-", "6.567495145681", "*", "x", "[", "25", "]", "\n", "+", "0.039293511274", "*", "x", "[", "26", "]", "+", "0.006041152866", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "26", "]", "=", "(", "1.997224587333", "*", "x", "[", "8", "]", "+", "13.482210983798", "*", "x", "[", "9", "]", "\n", "+", "2.488520358003", "*", "x", "[", "10", "]", "+", "0.076750797248", "*", "x", "[", "11", "]", "\n", "+", "0.804972334222", "*", "x", "[", "12", "]", "+", "0.023466195202", "*", "x", "[", "13", "]", "\n", "-", "0.022740687251", "*", "x", "[", "14", "]", "+", "0.018646161041", "*", "x", "[", "15", "]", "\n", "+", "0.436604617107", "*", "x", "[", "16", "]", "-", "0.414374632569", "*", "x", "[", "17", "]", "\n", "-", "6.563020897889", "*", "x", "[", "18", "]", "-", "1.423460802051", "*", "x", "[", "19", "]", "\n", "-", "0.224998971426", "*", "x", "[", "20", "]", "-", "0.259852011779", "*", "x", "[", "21", "]", "\n", "-", "0.008437464875", "*", "x", "[", "22", "]", "-", "0.003945344110", "*", "x", "[", "23", "]", "\n", "+", "0.102235829031", "*", "x", "[", "24", "]", "+", "0.191829027845", "*", "x", "[", "25", "]", "\n", "-", "6.312428841540", "*", "x", "[", "26", "]", "-", "0.038075090345", "*", "x", "[", "27", "]", ")", "\n", "\n", "dx", "[", "27", "]", "=", "(", "1.761524247668", "*", "x", "[", "8", "]", "-", "3.415298165208", "*", "x", "[", "9", "]", "\n", "-", "1.836225244248", "*", "x", "[", "10", "]", "-", "0.015605131825", "*", "x", "[", "11", "]", "\n", "+", "10.486845595600", "*", "x", "[", "12", "]", "-", "0.031379180918", "*", "x", "[", "13", "]", "\n", "+", "0.001266746410", "*", "x", "[", "14", "]", "+", "0.525873993847", "*", "x", "[", "15", "]", "\n", "+", "9.808565668907", "*", "x", "[", "16", "]", "-", "0.367529750255", "*", "x", "[", "17", "]", "\n", "+", "1.370405524130", "*", "x", "[", "18", "]", "-", "12.076970057329", "*", "x", "[", "19", "]", "\n", "+", "0.004883176776", "*", "x", "[", "20", "]", "-", "0.015765473705", "*", "x", "[", "21", "]", "\n", "-", "0.000399777933", "*", "x", "[", "22", "]", "-", "0.000497333312", "*", "x", "[", "23", "]", "\n", "+", "0.199818976539", "*", "x", "[", "24", "]", "-", "0.002648145523", "*", "x", "[", "25", "]", "\n", "-", "0.101212258081", "*", "x", "[", "26", "]", "-", "5.199268943788", "*", "x", "[", "27", "]", ")", "\n", "if", "len", "(", "x", ")", ">", "28", ":", "\n", "\t\t\t\t", "dx", "[", "28", "]", "=", "x", "[", "7", "]", "\n", "\n", "", "return", "dx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.mhe_derivative": [[304, 568], ["vertcat"], "function", ["None"], ["", "def", "mhe_derivative", "(", "x", ")", ":", "\n", "\n", "\t", "dx", "=", "vertcat", "(", "(", "0.998573780060", "*", "x", "[", "3", "]", "+", "0.053384274244", "*", "x", "[", "4", "]", ")", ",", "\n", "\n", "(", "x", "[", "2", "]", "-", "0.003182219341", "*", "x", "[", "3", "]", "+", "0.059524655342", "*", "x", "[", "4", "]", ")", ",", "\n", "\n", "(", "-", "11.570495605469", "*", "x", "[", "2", "]", "-", "2.544637680054", "*", "x", "[", "3", "]", "\n", "-", "0.063602626324", "*", "x", "[", "4", "]", "+", "0.106780529022", "*", "x", "[", "5", "]", "\n", "-", "0.094918668270", "*", "x", "[", "6", "]", "+", "0.007107574493", "*", "x", "[", "7", "]", "\n", "-", "3.700790207851", "*", "x", "[", "8", "]", "-", "16.213284674534", "*", "x", "[", "9", "]", "\n", "-", "2.984968535139", "*", "x", "[", "10", "]", "-", "0.493137919288", "*", "x", "[", "11", "]", "\n", "-", "1.186954196152", "*", "x", "[", "12", "]", "-", "0.031106608756", "*", "x", "[", "13", "]", "\n", "+", "0.024595252653", "*", "x", "[", "14", "]", "+", "0.008231369923", "*", "x", "[", "15", "]", "\n", "+", "0.231787619674", "*", "x", "[", "16", "]", "+", "0.745302732591", "*", "x", "[", "17", "]", "\n", "+", "7.895709940231", "*", "x", "[", "18", "]", "+", "2.026930360369", "*", "x", "[", "19", "]", "\n", "+", "0.271792657736", "*", "x", "[", "20", "]", "+", "0.315196108541", "*", "x", "[", "21", "]", "\n", "+", "0.015876847710", "*", "x", "[", "22", "]", "+", "0.009288507454", "*", "x", "[", "23", "]", "\n", "+", "0.087920280806", "*", "x", "[", "24", "]", "-", "0.103727794204", "*", "x", "[", "25", "]", "\n", "-", "4.447282126346", "*", "x", "[", "26", "]", "+", "0.016271459306", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "0.439356565475", "*", "x", "[", "2", "]", "-", "1.998182296753", "*", "x", "[", "3", "]", "\n", "+", "0.016651883721", "*", "x", "[", "5", "]", "+", "0.018462046981", "*", "x", "[", "6", "]", "\n", "-", "0.001187470742", "*", "x", "[", "7", "]", "-", "7.517319654181", "*", "x", "[", "8", "]", "\n", "+", "0.236494174025", "*", "x", "[", "9", "]", "-", "0.028725044803", "*", "x", "[", "10", "]", "\n", "-", "2.442989538035", "*", "x", "[", "11", "]", "+", "0.034510550810", "*", "x", "[", "12", "]", "\n", "-", "0.004683216652", "*", "x", "[", "13", "]", "-", "0.005154038690", "*", "x", "[", "14", "]", "\n", "-", "0.002104275246", "*", "x", "[", "15", "]", "-", "0.079935853309", "*", "x", "[", "16", "]", "\n", "+", "1.420125114638", "*", "x", "[", "17", "]", "-", "0.117856066698", "*", "x", "[", "18", "]", "\n", "-", "0.226142434271", "*", "x", "[", "19", "]", "-", "0.002585832387", "*", "x", "[", "20", "]", "\n", "-", "0.001365917341", "*", "x", "[", "21", "]", "+", "0.035962654791", "*", "x", "[", "22", "]", "\n", "+", "0.028993699893", "*", "x", "[", "23", "]", "-", "0.045896888864", "*", "x", "[", "24", "]", "\n", "+", "0.716358354284", "*", "x", "[", "25", "]", "+", "0.029085601036", "*", "x", "[", "26", "]", "\n", "-", "0.001242728387", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "2.040895462036", "*", "x", "[", "2", "]", "-", "0.458999156952", "*", "x", "[", "3", "]", "\n", "-", "0.735027790070", "*", "x", "[", "4", "]", "+", "0.019255757332", "*", "x", "[", "5", "]", "\n", "-", "0.004595622420", "*", "x", "[", "6", "]", "+", "0.002120360732", "*", "x", "[", "7", "]", "\n", "-", "0.740775522612", "*", "x", "[", "8", "]", "-", "2.555714688932", "*", "x", "[", "9", "]", "\n", "-", "0.339301128908", "*", "x", "[", "10", "]", "-", "0.033104023297", "*", "x", "[", "11", "]", "\n", "-", "1.446467788369", "*", "x", "[", "12", "]", "-", "0.007442776396", "*", "x", "[", "13", "]", "\n", "-", "0.000012314482", "*", "x", "[", "14", "]", "+", "0.030657946816", "*", "x", "[", "15", "]", "\n", "+", "1.002118140789", "*", "x", "[", "16", "]", "+", "0.153644862643", "*", "x", "[", "17", "]", "\n", "+", "1.273828227991", "*", "x", "[", "18", "]", "+", "1.983204935524", "*", "x", "[", "19", "]", "\n", "+", "0.048757213739", "*", "x", "[", "20", "]", "+", "0.060295617991", "*", "x", "[", "21", "]", "\n", "+", "0.001605314985", "*", "x", "[", "22", "]", "+", "0.000554368427", "*", "x", "[", "23", "]", "\n", "+", "0.475422075598", "*", "x", "[", "24", "]", "-", "0.010880647601", "*", "x", "[", "25", "]", "\n", "-", "0.775712358056", "*", "x", "[", "26", "]", "-", "0.408545111762", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "32.103607177734", "*", "x", "[", "0", "]", "-", "0.503355026245", "*", "x", "[", "2", "]", "\n", "+", "2.297859191895", "*", "x", "[", "3", "]", "-", "0.021215811372", "*", "x", "[", "5", "]", "\n", "-", "0.021167919040", "*", "x", "[", "6", "]", "+", "0.015811592340", "*", "x", "[", "7", "]", "\n", "+", "8.689411857722", "*", "x", "[", "8", "]", "-", "0.215429806172", "*", "x", "[", "9", "]", "\n", "+", "0.063500560122", "*", "x", "[", "10", "]", "+", "2.847523923644", "*", "x", "[", "11", "]", "\n", "-", "0.297021616015", "*", "x", "[", "12", "]", "+", "0.001323463163", "*", "x", "[", "13", "]", "\n", "+", "0.002124820781", "*", "x", "[", "14", "]", "+", "0.068860932948", "*", "x", "[", "15", "]", "\n", "+", "1.694077894544", "*", "x", "[", "16", "]", "-", "1.639571645676", "*", "x", "[", "17", "]", "\n", "+", "0.110652545728", "*", "x", "[", "18", "]", "+", "0.728735301618", "*", "x", "[", "19", "]", "\n", "+", "0.003107735169", "*", "x", "[", "20", "]", "+", "0.003335187976", "*", "x", "[", "21", "]", "\n", "-", "0.042347579477", "*", "x", "[", "22", "]", "-", "0.034247794709", "*", "x", "[", "23", "]", "\n", "+", "0.469091132962", "*", "x", "[", "24", "]", "-", "0.814424502262", "*", "x", "[", "25", "]", "\n", "-", "0.018082452136", "*", "x", "[", "26", "]", "+", "0.016747349252", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "0.102161169052", "*", "x", "[", "0", "]", "+", "32.057830810547", "*", "x", "[", "1", "]", "\n", "-", "2.347217559814", "*", "x", "[", "2", "]", "-", "0.503611564636", "*", "x", "[", "3", "]", "\n", "+", "0.834947586060", "*", "x", "[", "4", "]", "+", "0.021226570010", "*", "x", "[", "5", "]", "\n", "-", "0.037879735231", "*", "x", "[", "6", "]", "+", "0.000354003860", "*", "x", "[", "7", "]", "\n", "-", "0.560681623936", "*", "x", "[", "8", "]", "-", "3.574948145694", "*", "x", "[", "9", "]", "\n", "-", "0.788176766644", "*", "x", "[", "10", "]", "-", "0.107590635594", "*", "x", "[", "11", "]", "\n", "+", "0.908657075077", "*", "x", "[", "12", "]", "-", "0.008720966051", "*", "x", "[", "13", "]", "\n", "+", "0.005669792925", "*", "x", "[", "14", "]", "+", "0.044884407612", "*", "x", "[", "15", "]", "\n", "+", "0.788227489086", "*", "x", "[", "16", "]", "+", "0.111065913657", "*", "x", "[", "17", "]", "\n", "+", "1.709840089441", "*", "x", "[", "18", "]", "-", "0.946574755181", "*", "x", "[", "19", "]", "\n", "+", "0.054255711842", "*", "x", "[", "20", "]", "+", "0.060392345409", "*", "x", "[", "21", "]", "\n", "+", "0.003299051857", "*", "x", "[", "22", "]", "+", "0.001965592530", "*", "x", "[", "23", "]", "\n", "-", "0.035607238660", "*", "x", "[", "24", "]", "-", "0.021984114632", "*", "x", "[", "25", "]", "\n", "-", "0.893130060176", "*", "x", "[", "26", "]", "+", "0.503048977806", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "1.910972595215", "*", "x", "[", "0", "]", "+", "1.713829040527", "*", "x", "[", "1", "]", "\n", "-", "0.004005432129", "*", "x", "[", "2", "]", "-", "0.057411193848", "*", "x", "[", "3", "]", "\n", "+", "0.013989634812", "*", "x", "[", "5", "]", "-", "0.000906753354", "*", "x", "[", "6", "]", "\n", "-", "0.290513515472", "*", "x", "[", "7", "]", "-", "1.440209153996", "*", "x", "[", "8", "]", "\n", "-", "1.089782421583", "*", "x", "[", "9", "]", "-", "0.599051729911", "*", "x", "[", "10", "]", "\n", "-", "0.930901394778", "*", "x", "[", "11", "]", "+", "5.044060722850", "*", "x", "[", "12", "]", "\n", "+", "0.079229241316", "*", "x", "[", "13", "]", "+", "0.074101747848", "*", "x", "[", "14", "]", "\n", "-", "1.301808243838", "*", "x", "[", "15", "]", "-", "31.393874531397", "*", "x", "[", "16", "]", "\n", "+", "0.233327947688", "*", "x", "[", "17", "]", "+", "0.478559456452", "*", "x", "[", "18", "]", "\n", "-", "9.198865975131", "*", "x", "[", "19", "]", "-", "0.002820980233", "*", "x", "[", "20", "]", "\n", "-", "0.034669033757", "*", "x", "[", "21", "]", "+", "0.022125233836", "*", "x", "[", "22", "]", "\n", "+", "0.019923408940", "*", "x", "[", "23", "]", "-", "8.159414332666", "*", "x", "[", "24", "]", "\n", "-", "0.129736796488", "*", "x", "[", "25", "]", "-", "0.298841506489", "*", "x", "[", "26", "]", "\n", "-", "0.300193732750", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "0.050176870833", "*", "x", "[", "0", "]", "-", "0.003161246171", "*", "x", "[", "1", "]", "\n", "-", "0.486165175190", "*", "x", "[", "2", "]", "+", "0.266534777047", "*", "x", "[", "3", "]", "\n", "+", "0.003826227932", "*", "x", "[", "4", "]", "+", "0.000001339204", "*", "x", "[", "5", "]", "\n", "+", "0.000001199431", "*", "x", "[", "6", "]", "-", "0.000022435600", "*", "x", "[", "7", "]", "\n", "-", "0.020657323970", "*", "x", "[", "8", "]", "+", "0.001301453941", "*", "x", "[", "9", "]", "\n", "+", "0.213359280279", "*", "x", "[", "10", "]", "+", "0.881596311923", "*", "x", "[", "11", "]", "\n", "+", "0.051809053856", "*", "x", "[", "12", "]", "-", "0.000000551337", "*", "x", "[", "13", "]", "\n", "-", "0.000000493794", "*", "x", "[", "14", "]", "+", "0.000009236516", "*", "x", "[", "15", "]", ")", ",", "\n", "\n", "(", "-", "0.019757788570", "*", "x", "[", "0", "]", "+", "0.009012833714", "*", "x", "[", "1", "]", "\n", "+", "0.311015942657", "*", "x", "[", "2", "]", "+", "2.810181204790", "*", "x", "[", "3", "]", "\n", "-", "0.001602140073", "*", "x", "[", "4", "]", "-", "0.000000613279", "*", "x", "[", "5", "]", "\n", "-", "0.000000549271", "*", "x", "[", "6", "]", "+", "0.000010274224", "*", "x", "[", "7", "]", "\n", "+", "0.008134087133", "*", "x", "[", "8", "]", "-", "0.003710494952", "*", "x", "[", "9", "]", "\n", "+", "0.863507011470", "*", "x", "[", "10", "]", "-", "1.236460821044", "*", "x", "[", "11", "]", "\n", "+", "0.060184240645", "*", "x", "[", "12", "]", "+", "0.000000252481", "*", "x", "[", "13", "]", "\n", "+", "0.000000226129", "*", "x", "[", "14", "]", "-", "0.000004229797", "*", "x", "[", "15", "]", ")", ",", "\n", "\n", "(", "-", "0.030385323449", "*", "x", "[", "0", "]", "+", "0.003110159427", "*", "x", "[", "1", "]", "\n", "+", "0.312812882924", "*", "x", "[", "2", "]", "+", "0.287354391281", "*", "x", "[", "3", "]", "\n", "-", "0.002331730630", "*", "x", "[", "4", "]", "-", "0.000000824205", "*", "x", "[", "5", "]", "\n", "-", "0.000000738183", "*", "x", "[", "6", "]", "+", "0.000013807861", "*", "x", "[", "7", "]", "\n", "-", "8.414922645141", "*", "x", "[", "8", "]", "-", "36.922139523656", "*", "x", "[", "9", "]", "\n", "-", "18.505141519315", "*", "x", "[", "10", "]", "-", "3.793715804769", "*", "x", "[", "11", "]", "\n", "-", "2.765572372983", "*", "x", "[", "12", "]", "+", "0.035944961732", "*", "x", "[", "13", "]", "\n", "-", "0.038910104720", "*", "x", "[", "14", "]", "+", "0.025846348888", "*", "x", "[", "15", "]", "\n", "+", "0.527826299191", "*", "x", "[", "16", "]", "+", "1.697201876759", "*", "x", "[", "17", "]", "\n", "+", "17.980094722474", "*", "x", "[", "18", "]", "+", "4.615721721183", "*", "x", "[", "19", "]", "\n", "+", "0.618925691035", "*", "x", "[", "20", "]", "+", "0.717763941510", "*", "x", "[", "21", "]", "\n", "+", "0.036154725527", "*", "x", "[", "22", "]", "+", "0.021151770407", "*", "x", "[", "23", "]", "\n", "+", "0.200211885807", "*", "x", "[", "24", "]", "-", "0.236208723376", "*", "x", "[", "25", "]", "\n", "-", "10.127341872304", "*", "x", "[", "26", "]", "+", "0.037053334254", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "0.002667394037", "*", "x", "[", "0", "]", "+", "0.004496152836", "*", "x", "[", "1", "]", "\n", "+", "0.045956750452", "*", "x", "[", "2", "]", "+", "1.764514260408", "*", "x", "[", "3", "]", "\n", "+", "0.000146052012", "*", "x", "[", "4", "]", "+", "0.000000019584", "*", "x", "[", "5", "]", "\n", "+", "0.000000017540", "*", "x", "[", "6", "]", "-", "0.000000328097", "*", "x", "[", "7", "]", "\n", "-", "17.119523267503", "*", "x", "[", "8", "]", "+", "0.536693033369", "*", "x", "[", "9", "]", "\n", "+", "0.353775293385", "*", "x", "[", "10", "]", "-", "8.335731095093", "*", "x", "[", "11", "]", "\n", "+", "0.078527228401", "*", "x", "[", "12", "]", "+", "0.005987264162", "*", "x", "[", "13", "]", "\n", "+", "0.006725273267", "*", "x", "[", "14", "]", "-", "0.005979187005", "*", "x", "[", "15", "]", "\n", "-", "0.182029763642", "*", "x", "[", "16", "]", "+", "3.233906041666", "*", "x", "[", "17", "]", "\n", "-", "0.268381596955", "*", "x", "[", "18", "]", "-", "0.514971094398", "*", "x", "[", "19", "]", "\n", "-", "0.005888452287", "*", "x", "[", "20", "]", "-", "0.003110464210", "*", "x", "[", "21", "]", "\n", "+", "0.081894084826", "*", "x", "[", "22", "]", "+", "0.066024394813", "*", "x", "[", "23", "]", "\n", "-", "0.104516302587", "*", "x", "[", "24", "]", "+", "1.631289796960", "*", "x", "[", "25", "]", "\n", "+", "0.066233671911", "*", "x", "[", "26", "]", "-", "0.002829938571", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "0.024056576806", "*", "x", "[", "0", "]", "-", "0.001361685819", "*", "x", "[", "1", "]", "\n", "-", "0.230715295944", "*", "x", "[", "2", "]", "+", "0.185551143531", "*", "x", "[", "3", "]", "\n", "+", "0.001832537128", "*", "x", "[", "4", "]", "+", "0.000000640359", "*", "x", "[", "5", "]", "\n", "+", "0.000000573525", "*", "x", "[", "6", "]", "-", "0.000010727892", "*", "x", "[", "7", "]", "\n", "-", "1.696796379292", "*", "x", "[", "8", "]", "-", "5.819307733117", "*", "x", "[", "9", "]", "\n", "-", "2.712299197847", "*", "x", "[", "10", "]", "-", "0.615817527040", "*", "x", "[", "11", "]", "\n", "-", "4.029675752634", "*", "x", "[", "12", "]", "+", "0.002306818331", "*", "x", "[", "13", "]", "\n", "-", "0.004623901048", "*", "x", "[", "14", "]", "+", "0.071938991843", "*", "x", "[", "15", "]", "\n", "+", "2.282021405408", "*", "x", "[", "16", "]", "+", "0.349879770769", "*", "x", "[", "17", "]", "\n", "+", "2.900759066988", "*", "x", "[", "18", "]", "+", "4.516150272075", "*", "x", "[", "19", "]", "\n", "+", "0.111029828612", "*", "x", "[", "20", "]", "+", "0.137305059460", "*", "x", "[", "21", "]", "\n", "+", "0.003655620040", "*", "x", "[", "22", "]", "+", "0.001262406662", "*", "x", "[", "23", "]", "\n", "+", "1.082630189953", "*", "x", "[", "24", "]", "-", "0.024777388732", "*", "x", "[", "25", "]", "\n", "-", "1.766450614425", "*", "x", "[", "26", "]", "-", "0.930338103031", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "1.753103616578", "*", "x", "[", "0", "]", "+", "0.521869609890", "*", "x", "[", "1", "]", "\n", "+", "23.319318958026", "*", "x", "[", "2", "]", "+", "145.082271971311", "*", "x", "[", "3", "]", "\n", "-", "0.138741289403", "*", "x", "[", "4", "]", "-", "0.000051341929", "*", "x", "[", "5", "]", "\n", "-", "0.000045983385", "*", "x", "[", "6", "]", "+", "0.000860128319", "*", "x", "[", "7", "]", "\n", "-", "11.594360544437", "*", "x", "[", "8", "]", "-", "0.705424902410", "*", "x", "[", "9", "]", "\n", "-", "10.592707880324", "*", "x", "[", "10", "]", "-", "54.888617486514", "*", "x", "[", "11", "]", "\n", "-", "0.619258600252", "*", "x", "[", "12", "]", "-", "0.018180886764", "*", "x", "[", "13", "]", "\n", "-", "0.016310350542", "*", "x", "[", "14", "]", "+", "0.172267463350", "*", "x", "[", "15", "]", "\n", "+", "3.857750758541", "*", "x", "[", "16", "]", "-", "3.733629238750", "*", "x", "[", "17", "]", "\n", "+", "0.251977753557", "*", "x", "[", "18", "]", "+", "1.659474556422", "*", "x", "[", "19", "]", "\n", "+", "0.007076928248", "*", "x", "[", "20", "]", "+", "0.007594883320", "*", "x", "[", "21", "]", "\n", "-", "0.096433822422", "*", "x", "[", "22", "]", "-", "0.077989008913", "*", "x", "[", "23", "]", "\n", "+", "1.068213380174", "*", "x", "[", "24", "]", "-", "1.854605830991", "*", "x", "[", "25", "]", "\n", "-", "0.041177323469", "*", "x", "[", "26", "]", "+", "0.038137029879", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "1.708539622488", "*", "x", "[", "0", "]", "+", "0.111898315003", "*", "x", "[", "1", "]", "\n", "-", "13.174473231922", "*", "x", "[", "2", "]", "+", "91.462755556230", "*", "x", "[", "3", "]", "\n", "+", "0.127584976026", "*", "x", "[", "4", "]", "+", "0.000043171229", "*", "x", "[", "5", "]", "\n", "+", "0.000038665459", "*", "x", "[", "6", "]", "-", "0.000723245056", "*", "x", "[", "7", "]", "\n", "-", "1.878010842263", "*", "x", "[", "8", "]", "+", "23.870898681235", "*", "x", "[", "9", "]", "\n", "+", "1.639719754761", "*", "x", "[", "10", "]", "-", "40.888303474223", "*", "x", "[", "11", "]", "\n", "+", "2.851614162302", "*", "x", "[", "12", "]", "+", "0.001349430570", "*", "x", "[", "13", "]", "\n", "-", "0.024984412428", "*", "x", "[", "14", "]", "+", "0.102862439056", "*", "x", "[", "15", "]", "\n", "+", "1.794950045519", "*", "x", "[", "16", "]", "+", "0.252919074168", "*", "x", "[", "17", "]", "\n", "+", "3.893644396914", "*", "x", "[", "18", "]", "-", "2.155538119928", "*", "x", "[", "19", "]", "\n", "+", "0.123550997381", "*", "x", "[", "20", "]", "+", "0.137525326941", "*", "x", "[", "21", "]", "\n", "+", "0.007512594224", "*", "x", "[", "22", "]", "+", "0.004476043338", "*", "x", "[", "23", "]", "\n", "-", "0.081084731931", "*", "x", "[", "24", "]", "-", "0.050062181420", "*", "x", "[", "25", "]", "\n", "-", "2.033833968448", "*", "x", "[", "26", "]", "+", "1.145542115841", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "0.069753861204", "*", "x", "[", "0", "]", "+", "0.041269247265", "*", "x", "[", "1", "]", "\n", "+", "1.243498527057", "*", "x", "[", "2", "]", "+", "13.467483657041", "*", "x", "[", "3", "]", "\n", "-", "0.005772466581", "*", "x", "[", "4", "]", "-", "0.000002269708", "*", "x", "[", "5", "]", "\n", "-", "0.000002032820", "*", "x", "[", "6", "]", "+", "0.000038024292", "*", "x", "[", "7", "]", "\n", "-", "5.161896992464", "*", "x", "[", "8", "]", "-", "0.784811430978", "*", "x", "[", "9", "]", "\n", "-", "1.913888711445", "*", "x", "[", "10", "]", "-", "8.087612492321", "*", "x", "[", "11", "]", "\n", "+", "11.488701354150", "*", "x", "[", "12", "]", "+", "0.194411237470", "*", "x", "[", "13", "]", "\n", "+", "0.167838434014", "*", "x", "[", "14", "]", "-", "3.255004272242", "*", "x", "[", "15", "]", "\n", "-", "71.490067651024", "*", "x", "[", "16", "]", "+", "0.531333931032", "*", "x", "[", "17", "]", "\n", "+", "1.089774627294", "*", "x", "[", "18", "]", "-", "20.947639012098", "*", "x", "[", "19", "]", "\n", "-", "0.006423930487", "*", "x", "[", "20", "]", "-", "0.078948253623", "*", "x", "[", "21", "]", "\n", "+", "0.050383537787", "*", "x", "[", "22", "]", "+", "0.045369546582", "*", "x", "[", "23", "]", "\n", "-", "18.580601832107", "*", "x", "[", "24", "]", "-", "0.295436370828", "*", "x", "[", "25", "]", "\n", "-", "0.680521274763", "*", "x", "[", "26", "]", "-", "0.683600561672", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "0.013549327978", "*", "x", "[", "5", "]", "-", "0.012135188033", "*", "x", "[", "6", "]", "+", "0.226991094595", "*", "x", "[", "7", "]", ")", ",", "\n", "\n", "(", "-", "11.385989897412", "*", "x", "[", "0", "]", ")", ",", "\n", "\n", "(", "-", "4.554395958965", "*", "x", "[", "1", "]", ")", ",", "\n", "\n", "(", "0.243569095885", "*", "x", "[", "3", "]", "-", "4.554395958965", "*", "x", "[", "4", "]", ")", ",", "\n", "\n", "(", "-", "4.554395958965", "*", "x", "[", "2", "]", "-", "8.500000000000", "*", "x", "[", "20", "]", "-", "18.000000000000", "*", "x", "[", "21", "]", ")", ",", "\n", "\n", "(", "1.000000000000", "*", "x", "[", "20", "]", ")", ",", "\n", "\n", "(", "-", "11.385989897412", "*", "x", "[", "3", "]", "-", "8.500000000000", "*", "x", "[", "22", "]", "-", "18.000000000000", "*", "x", "[", "23", "]", ")", ",", "\n", "\n", "(", "1.000000000000", "*", "x", "[", "22", "]", ")", ",", "\n", "\n", "(", "0.683186075980", "*", "x", "[", "8", "]", "+", "0.514736886625", "*", "x", "[", "9", "]", "\n", "+", "0.282998565164", "*", "x", "[", "10", "]", "+", "0.440668616363", "*", "x", "[", "11", "]", "\n", "-", "2.382738811465", "*", "x", "[", "11", "]", "-", "0.037424700426", "*", "x", "[", "13", "]", "\n", "-", "0.035002491999", "*", "x", "[", "14", "]", "+", "0.614952694278", "*", "x", "[", "15", "]", "\n", "+", "14.829958398888", "*", "x", "[", "16", "]", "-", "0.110759742503", "*", "x", "[", "17", "]", "\n", "-", "0.226034186438", "*", "x", "[", "18", "]", "+", "4.345468653096", "*", "x", "[", "18", "]", "\n", "+", "0.001333027828", "*", "x", "[", "20", "]", "+", "0.016376955559", "*", "x", "[", "20", "]", "\n", "-", "0.010465240818", "*", "x", "[", "22", "]", "-", "0.009422482600", "*", "x", "[", "23", "]", "\n", "-", "6.145615181050", "*", "x", "[", "24", "]", "+", "0.061014181775", "*", "x", "[", "25", "]", "\n", "+", "0.141165339638", "*", "x", "[", "26", "]", "+", "0.141806743312", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "-", "36.039354729710", "*", "x", "[", "8", "]", "+", "0.767400874818", "*", "x", "[", "9", "]", "\n", "-", "0.190879388177", "*", "x", "[", "10", "]", "-", "11.678174370212", "*", "x", "[", "11", "]", "\n", "-", "0.041149877278", "*", "x", "[", "12", "]", "-", "0.026017271417", "*", "x", "[", "13", "]", "\n", "-", "0.026698725144", "*", "x", "[", "14", "]", "+", "0.036415219598", "*", "x", "[", "15", "]", "\n", "+", "0.738656358350", "*", "x", "[", "16", "]", "+", "6.810845841283", "*", "x", "[", "17", "]", "\n", "-", "0.384784957980", "*", "x", "[", "18", "]", "-", "0.708557300741", "*", "x", "[", "19", "]", "\n", "-", "0.005524328707", "*", "x", "[", "20", "]", "+", "0.002522572903", "*", "x", "[", "21", "]", "\n", "+", "0.171826920583", "*", "x", "[", "22", "]", "+", "0.138368426838", "*", "x", "[", "23", "]", "\n", "+", "0.071909684799", "*", "x", "[", "24", "]", "-", "6.567495145681", "*", "x", "[", "25", "]", "\n", "+", "0.039293511274", "*", "x", "[", "26", "]", "+", "0.006041152866", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "1.997224587333", "*", "x", "[", "8", "]", "+", "13.482210983798", "*", "x", "[", "9", "]", "\n", "+", "2.488520358003", "*", "x", "[", "10", "]", "+", "0.076750797248", "*", "x", "[", "11", "]", "\n", "+", "0.804972334222", "*", "x", "[", "12", "]", "+", "0.023466195202", "*", "x", "[", "13", "]", "\n", "-", "0.022740687251", "*", "x", "[", "14", "]", "+", "0.018646161041", "*", "x", "[", "15", "]", "\n", "+", "0.436604617107", "*", "x", "[", "16", "]", "-", "0.414374632569", "*", "x", "[", "17", "]", "\n", "-", "6.563020897889", "*", "x", "[", "18", "]", "-", "1.423460802051", "*", "x", "[", "19", "]", "\n", "-", "0.224998971426", "*", "x", "[", "20", "]", "-", "0.259852011779", "*", "x", "[", "21", "]", "\n", "-", "0.008437464875", "*", "x", "[", "22", "]", "-", "0.003945344110", "*", "x", "[", "23", "]", "\n", "+", "0.102235829031", "*", "x", "[", "24", "]", "+", "0.191829027845", "*", "x", "[", "25", "]", "\n", "-", "6.312428841540", "*", "x", "[", "26", "]", "-", "0.038075090345", "*", "x", "[", "27", "]", ")", ",", "\n", "\n", "(", "1.761524247668", "*", "x", "[", "8", "]", "-", "3.415298165208", "*", "x", "[", "9", "]", "\n", "-", "1.836225244248", "*", "x", "[", "10", "]", "-", "0.015605131825", "*", "x", "[", "11", "]", "\n", "+", "10.486845595600", "*", "x", "[", "12", "]", "-", "0.031379180918", "*", "x", "[", "13", "]", "\n", "+", "0.001266746410", "*", "x", "[", "14", "]", "+", "0.525873993847", "*", "x", "[", "15", "]", "\n", "+", "9.808565668907", "*", "x", "[", "16", "]", "-", "0.367529750255", "*", "x", "[", "17", "]", "\n", "+", "1.370405524130", "*", "x", "[", "18", "]", "-", "12.076970057329", "*", "x", "[", "19", "]", "\n", "+", "0.004883176776", "*", "x", "[", "20", "]", "-", "0.015765473705", "*", "x", "[", "21", "]", "\n", "-", "0.000399777933", "*", "x", "[", "22", "]", "-", "0.000497333312", "*", "x", "[", "23", "]", "\n", "+", "0.199818976539", "*", "x", "[", "24", "]", "-", "0.002648145523", "*", "x", "[", "25", "]", "\n", "-", "0.101212258081", "*", "x", "[", "26", "]", "-", "5.199268943788", "*", "x", "[", "27", "]", ")", ",", "\n", "x", "[", "7", "]", "\n", "\n", ")", "\n", "\n", "return", "dx", "\n", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.LaubLoomis.LaubLoomis.__init__": [[11, 24], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "5", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.01", ")", ":", "\n", "\t\t", "self", ".", "W1", "=", "0.5", "\n", "self", ".", "W2", "=", "0.1", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "1.2", "-", "self", ".", "W1", ",", "1.2", "+", "self", ".", "W1", "]", ",", "[", "1.05", "-", "self", ".", "W1", ",", "1.05", "+", "self", ".", "W1", "]", ",", "\n", "[", "1.5", "-", "self", ".", "W1", ",", "1.5", "+", "self", ".", "W1", "]", ",", "[", "2.4", "-", "self", ".", "W1", ",", "2.4", "+", "self", ".", "W1", "]", ",", "[", "1", "-", "self", ".", "W1", ",", "1", "+", "self", ".", "W1", "]", ",", "\n", "[", "0.1", "-", "self", ".", "W2", ",", "0.1", "+", "self", ".", "W2", "]", ",", "[", "0.45", "-", "self", ".", "W1", ",", "0.45", "+", "self", ".", "W2", "]", "]", ")", "\n", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "7", "\n", "self", ".", "obs_dim", "=", "6", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.LaubLoomis.LaubLoomis.diff_eq": [[26, 38], ["numpy.array"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "\n", "\t\t", "dxdt", "=", "np", ".", "array", "(", "[", "\n", "1.4", "*", "x", "[", "2", "]", "-", "0.9", "*", "x", "[", "0", "]", ",", "\n", "2.5", "*", "x", "[", "4", "]", "-", "1.5", "*", "x", "[", "1", "]", ",", "\n", "0.6", "*", "x", "[", "6", "]", "-", "0.8", "*", "x", "[", "1", "]", "*", "x", "[", "2", "]", ",", "\n", "2", "-", "1.3", "*", "x", "[", "2", "]", "*", "x", "[", "3", "]", ",", "\n", "0.7", "*", "x", "[", "0", "]", "-", "x", "[", "3", "]", "*", "x", "[", "4", "]", ",", "\n", "0.3", "*", "x", "[", "0", "]", "-", "3.1", "*", "x", "[", "5", "]", ",", "\n", "1.8", "*", "x", "[", "5", "]", "-", "1.5", "*", "x", "[", "1", "]", "*", "x", "[", "6", "]", "\n", "]", ")", "\n", "return", "dxdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.LaubLoomis.LaubLoomis.gen_trajectories": [[41, 56], ["numpy.empty", "numpy.linspace", "scipy.integrate.odeint", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "z0", "=", "self", ".", "ranges", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "trajs", "[", "i", "]", "=", "zz", "\n", "i", "+=", "1", "\n", "\n", "", "return", "trajs", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.LaubLoomis.LaubLoomis.get_noisy_measurments": [[58, 72], ["numpy.zeros", "range", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "# observe x1, x2", "\n", "\t\t", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "obs_dim", ")", ")", "# 2-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", ",", "[", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6", "]", "]", "+", "np", ".", "random", ".", "randn", "(", "self", ".", "obs_dim", ")", "*", "sigm", "\n", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.LaubLoomis.LaubLoomis.gen_labels": [[73, 87], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "20", ")", ":", "\n", "\n", "# UNSAFE SET: x4 >= 5", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "z0", "=", "states", "[", "i", "]", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "3", "]", "<", "4.5", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.__init__": [[9, 18], ["numpy.array", "numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "1", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.005", ")", ":", "\n", "\t\t", "self", ".", "ranges2", "=", "np", ".", "array", "(", "[", "[", "-", "math", ".", "pi", "/", "2", ",", "math", ".", "pi", "/", "2", "]", ",", "[", "-", "1.5", ",", "1.5", "]", "]", ")", "\n", "self", ".", "ranges4", "=", "np", ".", "array", "(", "[", "[", "-", "math", ".", "pi", "/", "4", ",", "math", ".", "pi", "/", "4", "]", ",", "[", "-", "1.5", ",", "1.5", "]", "]", ")", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "2", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.diff_eq": [[19, 24], ["numpy.array", "numpy.sin", "numpy.cos", "InvertedPendulum.InvertedPendulum.control_law"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.control_law"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "# y = (theta, w)", "\n", "\t\t", "dydt", "=", "np", ".", "array", "(", "[", "y", "[", "1", "]", ",", "np", ".", "sin", "(", "y", "[", "0", "]", ")", "-", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "*", "self", ".", "control_law", "(", "y", ")", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.energy": [[26, 28], ["numpy.cos"], "methods", ["None"], ["", "def", "energy", "(", "self", ",", "y", ")", ":", "\n", "\t\t", "return", "0.5", "*", "y", "[", "1", "]", "+", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.control_law": [[30, 42], ["InvertedPendulum.InvertedPendulum.energy", "numpy.cos", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.cos", "numpy.cos", "numpy.sin"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.energy"], ["", "def", "control_law", "(", "self", ",", "y", ")", ":", "\n", "\t\t", "E", "=", "self", ".", "energy", "(", "y", ")", "\n", "if", "E", "<", "-", "1", ":", "\n", "\t\t\t", "u", "=", "(", "y", "[", "1", "]", "*", "np", ".", "cos", "(", "y", "[", "0", "]", ")", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "y", "[", "1", "]", ")", ")", "\n", "", "elif", "E", ">", "1", ":", "\n", "\t\t\t", "u", "=", "-", "(", "y", "[", "1", "]", "*", "np", ".", "cos", "(", "y", "[", "0", "]", ")", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "y", "[", "1", "]", ")", ")", "\n", "", "elif", "np", ".", "abs", "(", "y", "[", "1", "]", ")", "+", "np", ".", "abs", "(", "y", "[", "0", "]", ")", "<=", "1.85", ":", "\n", "\t\t\t", "u", "=", "(", "2", "*", "y", "[", "1", "]", "+", "y", "[", "0", "]", "+", "np", ".", "sin", "(", "y", "[", "0", "]", ")", ")", "/", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "u", "=", "0", "\n", "\n", "", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.gen_trajectories": [[43, 59], ["numpy.empty", "numpy.linspace", "numpy.transpose", "scipy.integrate.odeint", "numpy.all", "numpy.all", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "ranges2", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges2", "[", ":", ",", "1", "]", "-", "self", ".", "ranges2", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "if", "np", ".", "all", "(", "yy", "[", "-", "1", "]", ">=", "self", ".", "ranges4", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "yy", "[", "-", "1", "]", "<=", "self", ".", "ranges4", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "yy", ".", "T", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.get_noisy_measurments": [[61, 82], ["numpy.zeros", "range", "numpy.expand_dims", "range", "numpy.zeros", "range", "range", "InvertedPendulum.InvertedPendulum.energy", "numpy.random.randn", "numpy.random.randn"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.energy"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "noise_model", "=", "\"energy\"", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "if", "noise_model", "==", "\"energy\"", ":", "\n", "\t\t\t", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "self", ".", "energy", "(", "trajs", "[", "i", ",", "j", "]", ")", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "", "", "noisy_measurements", "=", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "", "elif", "noise_model", "==", "\"noise_only\"", ":", "\n", "\t\t\t", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "state_dim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", "]", "+", "np", ".", "random", ".", "randn", "(", "self", ".", "state_dim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.InvertedPendulum.InvertedPendulum.gen_labels": [[83, 95], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "5", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "y0", "=", "states", "[", "i", "]", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", ">=", "-", "math", ".", "pi", "/", "6", ")", ")", "*", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "<=", "math", ".", "pi", "/", "6", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.runtime_experiment_2.load_trained_net": [[117, 123], ["torch.load", "torch.load.eval", "torch.load.cuda"], "function", ["None"], ["def", "load_trained_net", "(", "net_file", ")", ":", "\n", "\t", "net", "=", "torch", ".", "load", "(", "net_file", ")", "\n", "net", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t", "net", ".", "cuda", "(", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.runtime_experiment_2.scaling": [[175, 179], ["None"], "function", ["None"], ["def", "scaling", "(", "dataset", ",", "X", ",", "Y", ")", ":", "\n", "\t", "Xsc", "=", "-", "1", "+", "2", "*", "(", "X", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "Ysc", "=", "-", "1", "+", "2", "*", "(", "Y", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "return", "Xsc", ",", "Ysc", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_nsc.Train_NSC.__init__": [[14, 23], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_NSC_resuts/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_nsc.Train_NSC.compute_accuracy": [[25, 33], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_nsc.Train_NSC.train": [[35, 114], ["str", "print", "os.makedirs", "train_nsc.Train_NSC.dataset.load_data", "torch.optim.Adam", "int", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "numpy.random.randint", "NSC.FF_NSC", "train_nsc.Train_NSC.nsc.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_nsc.Train_NSC.nsc.parameters", "print", "range", "losses.append", "accuracies.append", "numpy.arange", "numpy.arange", "train_nsc.Train_NSC.dataset.generate_mini_batches", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_nsc.Train_NSC.nsc", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "numpy.mean", "numpy.mean", "int", "FloatTensor", "LongTensor", "train_nsc.Train_NSC.compute_accuracy", "nn.CrossEntropyLoss.item", "print"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_NSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "nsc", "=", "FF_NSC", "(", "input_size", "=", "int", "(", "self", ".", "dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "nsc", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "# Softmax is internally computed.", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\t\t\t", "print", "(", "\"Epoch nb. \"", ",", "epoch", "+", "1", ",", "\"/\"", ",", "n_epochs", ")", "\n", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "# initialization of the gradients", "\n", "\n", "Xt", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "Tt", "=", "Variable", "(", "LongTensor", "(", "T", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "hypothesis", "=", "self", ".", "nsc", "(", "Xt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "hypothesis", ",", "Tt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tt", ",", "hypothesis", ")", ")", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "if", "i", "%", "200", "==", "0", ":", "\n", "\t\t\t\t\t", "print", "(", "\"Epoch= {},\\t batch = {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "i", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/losses.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/accuracies.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "nsc", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_nsc.Train_NSC.load_trained_net": [[116, 122], ["torch.load", "train_nsc.Train_NSC.nsc.eval", "train_nsc.Train_NSC.nsc.cuda"], "methods", ["None"], ["", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "nsc", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "nsc", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "nsc", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_nsc.Train_NSC.generate_test_results": [[124, 137], ["torch.autograd.Variable", "torch.autograd.Variable", "train_nsc.Train_NSC.nsc", "train_nsc.Train_NSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "FloatTensor", "LongTensor", "str"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "X_test_scaled", ")", ")", "\n", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_test", ")", ")", "\n", "test_preds", "=", "self", ".", "nsc", "(", "Xtest", ")", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "test_preds", ")", "\n", "print", "(", "\"Test accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_po_nsc.Train_PO_NSC.__init__": [[16, 27], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ",", "nb_filters", "=", "64", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_NSC_resuts/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_po_nsc.Train_PO_NSC.compute_accuracy": [[29, 37], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_po_nsc.Train_PO_NSC.train": [[39, 147], ["str", "print", "os.makedirs", "train_po_nsc.Train_PO_NSC.dataset.load_data", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "numpy.random.randint", "PO_NSC.FF_PO_NSC", "PO_NSC.Conv_PO_NSC", "train_po_nsc.Train_PO_NSC.po_nsc.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_po_nsc.Train_PO_NSC.po_nsc.parameters", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "range", "train_po_nsc.Train_PO_NSC.po_nsc", "nn.CrossEntropyLoss.", "losses.append", "val_losses.append", "accuracies.append", "val_accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "int", "int", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_po_nsc.Train_PO_NSC.po_nsc", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "numpy.mean", "nn.CrossEntropyLoss.item", "numpy.mean", "train_po_nsc.Train_PO_NSC.compute_accuracy", "int", "train_po_nsc.Train_PO_NSC.dataset.generate_flat_mini_batches", "train_po_nsc.Train_PO_NSC.dataset.generate_mini_batches", "numpy.transpose", "FloatTensor", "LongTensor", "train_po_nsc.Train_PO_NSC.compute_accuracy", "nn.CrossEntropyLoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_PO_NSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "po_nsc", "=", "FF_PO_NSC", "(", "input_size", "=", "int", "(", "self", ".", "dataset", ".", "y_dim", "*", "self", ".", "dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "po_nsc", "=", "Conv_PO_NSC", "(", "int", "(", "self", ".", "dataset", ".", "y_dim", ")", ",", "int", "(", "self", ".", "dataset", ".", "traj_len", ")", ",", "n_filters", "=", "self", ".", "nb_filters", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "po_nsc", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "po_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "# Softmax is internally computed.", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "po_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/po_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "#Xval_t = Variable(FloatTensor(self.dataset.X_val_scaled_flat))", "\n", "\t\t\t", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "#Xv = np.transpose(self.dataset.X_val_scaled, (0,2,1))", "\n", "\t\t\t", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "#Xval_t = Variable(FloatTensor(Xv))", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "#print(\"Epoch nb. \", epoch+1, \"/\", n_epochs)", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "Y", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# initialization of the gradients", "\n", "\n", "", "Yt", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "Tt", "=", "Variable", "(", "LongTensor", "(", "T", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "hypothesis", "=", "self", ".", "po_nsc", "(", "Yt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "hypothesis", ",", "Tt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tt", ",", "hypothesis", ")", ")", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_hypothesis", "=", "self", ".", "po_nsc", "(", "Yval_t", ")", "\n", "val_loss", "=", "loss_fnc", "(", "val_hypothesis", ",", "Tval_t", ")", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "val_losses", ".", "append", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_hypothesis", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "po_nsc", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_po_nsc.Train_PO_NSC.load_trained_net": [[149, 156], ["train_po_nsc.Train_PO_NSC.dataset.load_data", "torch.load", "train_po_nsc.Train_PO_NSC.po_nsc.eval", "train_po_nsc.Train_PO_NSC.po_nsc.cuda"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data"], ["", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/po_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "po_nsc", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "po_nsc", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "po_nsc", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_po_nsc.Train_PO_NSC.generate_test_results": [[158, 175], ["torch.autograd.Variable", "train_po_nsc.Train_PO_NSC.po_nsc", "train_po_nsc.Train_PO_NSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "str", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "Y_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Y", "=", "np", ".", "transpose", "(", "self", ".", "dataset", ".", "Y_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_test", ")", ")", "\n", "test_preds", "=", "self", ".", "po_nsc", "(", "Ytest", ")", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "test_preds", ")", "\n", "print", "(", "\"Test accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.__init__": [[8, 26], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "time_horizon", "=", "1", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.1", ")", ":", "\n", "\t\t", "self", ".", "a", "=", "0.5", "\n", "self", ".", "b", "=", "0.5", "\n", "self", ".", "g", "=", "9.8", "\n", "self", ".", "A", "=", "[", "2", ",", "4", ",", "3", "]", "\n", "self", ".", "q", "=", "[", "5", ",", "3", ",", "4", "]", "\n", "self", ".", "Lm", "=", "5", "\n", "self", ".", "LM", "=", "5", "\n", "self", ".", "dt", "=", "time_horizon", "/", "n_steps", "\n", "self", ".", "obs_dim", "=", "3", "\n", "self", ".", "state_dim", "=", "3", "\n", "self", ".", "eta", "=", "2", "\n", "self", ".", "eta_safety", "=", "0.5", "\n", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", ",", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", ",", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", "]", ")", "\n", "self", ".", "time_horizon", "=", "time_horizon", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.diff_eq": [[28, 39], ["numpy.zeros", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "\n", "\t\t", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "(", "self", ".", "q", "[", "0", "]", "*", "self", ".", "pump_control", "(", "y", "[", "0", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", ")", "/", "self", ".", "A", "[", "0", "]", "\n", "\n", "dydt", "[", "1", "]", "=", "(", "self", ".", "q", "[", "1", "]", "*", "self", ".", "pump_control", "(", "y", "[", "1", "]", ")", "+", "self", ".", "a", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", ")", "/", "self", ".", "A", "[", "1", "]", "\n", "\n", "dydt", "[", "2", "]", "=", "(", "self", ".", "q", "[", "2", "]", "*", "self", ".", "pump_control", "(", "y", "[", "2", "]", ")", "+", "self", ".", "a", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "2", "]", ")", ")", "/", "self", ".", "A", "[", "2", "]", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.sample_init_state": [[41, 44], ["numpy.random.rand"], "methods", ["None"], ["", "def", "sample_init_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "return", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "*", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "+", "self", ".", "ranges", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.pump_control": [[46, 54], ["None"], "methods", ["None"], ["", "def", "pump_control", "(", "self", ",", "yi", ")", ":", "\n", "\n", "\t\t", "if", "(", "yi", "<=", "self", ".", "Lm", ")", ":", "\n", "\t\t\t", "return", "1", "\n", "", "elif", "(", "yi", ">", "self", ".", "LM", ")", ":", "\n", "\t\t\t", "return", "0", "\n", "", "else", ":", "\n", "\t\t\t", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.gen_trajectories": [[56, 81], ["numpy.empty", "numpy.ones", "numpy.linspace", "numpy.transpose", "TripleWaterTank.TripleWaterTank.sample_init_state", "scipy.integrate.odeint", "range", "numpy.max", "numpy.min", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.sample_init_state"], ["", "", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "pumps", "=", "np", ".", "ones", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "time_horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "sample_init_state", "(", ")", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "\n", "if", "np", ".", "max", "(", "yy", ")", "<", "20", "and", "np", ".", "min", "(", "yy", ")", ">", "0.0000001", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "yy", ".", "T", "\n", "for", "j", "in", "range", "(", "self", ".", "state_dim", ")", ":", "\n", "\t\t\t\t\t", "for", "k", "in", "range", "(", "self", ".", "n_steps", ")", ":", "\n", "\t\t\t\t\t\t", "if", "trajs", "[", "i", ",", "j", ",", "k", "]", ">", "self", ".", "LM", ":", "\n", "\t\t\t\t\t\t\t", "pumps", "[", "i", ",", "j", ",", "k", "]", "=", "0", "\n", "\n", "", "", "", "i", "+=", "1", "\n", "\n", "\n", "\n", "", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.get_noisy_measurments": [[83, 101], ["numpy.zeros", "range", "numpy.transpose", "range", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "state_dim", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "nm", "=", "trajs", "[", "i", ",", "j", "]", "+", "np", ".", "random", ".", "randn", "(", "state_dim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "for", "k", "in", "range", "(", "state_dim", ")", ":", "\n", "\t\t\t\t\t", "if", "nm", "[", "k", "]", ">=", "0", ":", "\n", "\t\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "k", ",", "j", "]", "=", "nm", "[", "k", "]", "\n", "\n", "", "", "", "", "return", "np", ".", "transpose", "(", "noisy_measurements", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.TripleWaterTank.TripleWaterTank.gen_labels": [[103, 115], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "1", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "y0", "=", "states", "[", "i", "]", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", ">=", "self", ".", "Lm", "-", "self", ".", "eta_safety", ")", ")", "*", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "<=", "self", ".", "LM", "+", "self", ".", "eta_safety", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_se.Train_SeqSE.__init__": [[15, 24], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "seq_dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_se.Train_SeqSE.train": [[26, 119], ["str", "print", "os.makedirs", "train_seq_se.Train_SeqSE.seq_dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "numpy.random.randint", "SeqSE.FF_SeqSE", "SeqSE.Conv_SeqSE", "train_seq_se.Train_SeqSE.seq_se.cuda", "train_seq_se.Train_SeqSE.seq_se.parameters", "int", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "int", "int", "int", "int", "int", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "range", "train_seq_se.Train_SeqSE.seq_se", "val_losses.append", "losses.append", "numpy.arange", "numpy.arange", "Tensor", "Tensor", "Tensor", "Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_seq_se.Train_SeqSE.seq_se", "nn.MSELoss.", "nn.MSELoss.backward", "torch.optim.Adam.step", "tmp_loss.append", "print", "nn.MSELoss.", "numpy.mean", "train_seq_se.Train_SeqSE.seq_dataset.generate_flat_mini_batches", "train_seq_se.Train_SeqSE.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "Tensor", "Tensor", "nn.MSELoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches"], ["", "", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "n_hidden", "=", "100", ",", "lr", "=", "0.0001", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "seq_se", "=", "FF_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "seq_se", "=", "Conv_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", ")", ",", "128", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n", "", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "\n", "\n", "\n", "if", "self", ".", "training_flag", ":", "\n", "\n", "\t\t\t", "losses", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "Xval_t", "=", "Variable", "(", "Tensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "Tensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "Tensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "Tensor", "(", "Yv", ")", ")", "\n", "\n", "\n", "", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t\t", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "Y", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# initialization of the gradients", "\n", "\n", "", "Yt", "=", "Variable", "(", "Tensor", "(", "Y", ")", ")", "\n", "Xt", "=", "Variable", "(", "Tensor", "(", "X", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "Xt_pred", "=", "self", ".", "seq_se", "(", "Yt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "Xt_pred", ",", "Xt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f}\\t\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "Xval_t_pred", "=", "self", ".", "seq_se", "(", "Yval_t", ")", "\n", "val_losses", ".", "append", "(", "loss_fnc", "(", "Xval_t_pred", ",", "Xval_t", ")", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/A_losses{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "seq_se", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_se.Train_SeqSE.load_trained_net": [[121, 129], ["train_seq_se.Train_SeqSE.seq_dataset.load_data", "torch.load", "train_seq_se.Train_SeqSE.seq_se.eval", "train_seq_se.Train_SeqSE.seq_se.cuda"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data"], ["", "", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_se", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "seq_se", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_se.Train_SeqSE.generate_test_results": [[131, 149], ["range", "numpy.empty", "numpy.empty", "print", "numpy.reshape", "numpy.transpose", "train_seq_se.Train_SeqSE.seq_se", "train_seq_se.Train_SeqSE.seq_se", "train_seq_se.Train_SeqSE.detach().cpu().numpy", "torch.autograd.Variable", "torch.autograd.Variable", "Tensor", "Tensor", "train_seq_se.Train_SeqSE.detach().cpu", "train_seq_se.Train_SeqSE.detach"], "methods", ["None"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "gen_estimates", "=", "np", ".", "empty", "(", "shape", "=", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "traj_len", "*", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "gen_estimates", "=", "np", ".", "empty", "(", "shape", "=", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "x_dim", ",", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "\n", "", "for", "iii", "in", "range", "(", "self", ".", "seq_dataset", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "print", "(", "\"Test point nb \"", ",", "iii", "+", "1", ",", "\" / \"", ",", "self", ".", "seq_dataset", ".", "n_test_points", ")", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "pred", "=", "self", ".", "seq_se", "(", "Variable", "(", "Tensor", "(", "[", "self", ".", "seq_dataset", ".", "Y_test_scaled_flat", "[", "iii", "]", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "pred", "=", "self", ".", "seq_se", "(", "Variable", "(", "Tensor", "(", "[", "self", ".", "seq_dataset", ".", "Y_test_scaled", "[", "iii", "]", ".", "T", "]", ")", ")", ")", "\n", "", "self", ".", "gen_estimates", "[", "iii", "]", "=", "pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "gen_estimates_reshaped", "=", "np", ".", "reshape", "(", "self", ".", "gen_estimates", ",", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "traj_len", ",", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "gen_estimates_reshaped", "=", "np", ".", "transpose", "(", "self", ".", "gen_estimates", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_se.Train_SeqSE.plot_test_results": [[150, 162], ["numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].plot", "axs[].plot"], "methods", ["None"], ["", "", "def", "plot_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "tspan", "=", "np", ".", "arange", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "seq_dataset", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ":", "\n", "\t\t\t\t", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "self", ".", "seq_dataset", ".", "X_test_scaled", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"blue\"", ")", "\n", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "self", ".", "gen_estimates_reshaped", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"orange\"", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/B_seq_pred_comparison_{}.png\"", ".", "format", "(", "i", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.NSC.FF_NSC.__init__": [[7, 19], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "int"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", "=", "2", ",", "hidden_size", "=", "100", ",", "output_size", "=", "2", ")", ":", "\n", "\t\t", "super", "(", "FF_NSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "int", "(", "hidden_size", ")", ",", "output_size", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.NSC.FF_NSC.forward": [[20, 42], ["NSC.FF_NSC.fc1", "NSC.FF_NSC.fc2", "NSC.FF_NSC.fc3", "NSC.FF_NSC.fc4", "NSC.FF_NSC.fc5", "NSC.FF_NSC.out", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "nn", ".", "ReLU", "(", ")", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqNSC.FF_SeqNSC.__init__": [[7, 19], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", "=", "2", "*", "32", ",", "hidden_size", "=", "100", ",", "output_size", "=", "2", ")", ":", "\n", "\t\t", "super", "(", "FF_SeqNSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqNSC.FF_SeqNSC.forward": [[20, 42], ["SeqNSC.FF_SeqNSC.fc1", "SeqNSC.FF_SeqNSC.fc2", "SeqNSC.FF_SeqNSC.fc3", "SeqNSC.FF_SeqNSC.fc4", "SeqNSC.FF_SeqNSC.fc5", "SeqNSC.FF_SeqNSC.out", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "nn", ".", "ReLU", "(", ")", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqNSC.Conv_SeqNSC.__init__": [[46, 78], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "x_dim", "=", "2", ",", "traj_len", "=", "32", ",", "output_size", "=", "2", ",", "nb_filters", "=", "128", ")", ":", "\n", "\t\t", "super", "(", "Conv_SeqNSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "keep_prob", "=", "0.8", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "x_dim", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer2", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer3", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer4", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "traj_len", "*", "self", ".", "nb_filters", ",", "100", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc1", ".", "weight", ")", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "fc1", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "100", ",", "output_size", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc2", ".", "weight", ")", "# initialize parameters", "\n", "self", ".", "layer6", "=", "nn", ".", "Sequential", "(", "self", ".", "fc2", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqNSC.Conv_SeqNSC.forward": [[79, 89], ["SeqNSC.Conv_SeqNSC.layer1", "SeqNSC.Conv_SeqNSC.layer2", "SeqNSC.Conv_SeqNSC.layer3", "SeqNSC.Conv_SeqNSC.layer4", "SeqNSC.Conv_SeqNSC.view", "SeqNSC.Conv_SeqNSC.layer5", "SeqNSC.Conv_SeqNSC.layer6", "SeqNSC.Conv_SeqNSC.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "out", "=", "self", ".", "layer6", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.__init__": [[9, 19], ["heli_utils.get_state_space"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.get_state_space"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "5", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "1", ")", ":", "\n", "\t\t", "self", ".", "ranges", "=", "[", "]", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "29", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "state_space", "=", "get_state_space", "(", ")", "\n", "self", ".", "state_dim", "=", "self", ".", "state_space", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.diff_eq": [[20, 24], ["heli_utils.derivative"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.derivative"], ["", "def", "diff_eq", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "\n", "\t\t", "dxdt", "=", "derivative", "(", "x", ")", "\n", "return", "dxdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.issafe": [[25, 33], ["None"], "methods", ["None"], ["", "def", "issafe", "(", "self", ",", "x", ")", ":", "\n", "# safe  1 if state x is safe, 0 if state x is unsafe.", "\n", "\t\t", "if", "x", "[", "28", "]", ">", "0", ":", "\n", "\t\t\t", "safety", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "safety", "=", "0", "\n", "\n", "", "return", "safety", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.rand_state": [[35, 40], ["numpy.random.rand"], "methods", ["None"], ["", "def", "rand_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "x", "=", "self", ".", "state_space", "[", ":", ",", "0", "]", "+", "(", "self", ".", "state_space", "[", ":", ",", "1", "]", "-", "self", ".", "state_space", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.gen_trajectories": [[41, 57], ["numpy.empty", "numpy.linspace", "range", "numpy.transpose", "Helicopter.Helicopter.rand_state", "scipy.integrate.odeint", "Helicopter.Helicopter.issafe", "Helicopter.Helicopter.rand_state"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.rand_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.issafe", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.rand_state"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "x0", "=", "self", ".", "rand_state", "(", ")", "\n", "\n", "while", "not", "self", ".", "issafe", "(", "x0", ")", ":", "\n", "\t\t\t\t", "x0", "=", "self", ".", "rand_state", "(", ")", "\n", "\n", "", "xx", "=", "odeint", "(", "self", ".", "diff_eq", ",", "x0", ",", "tspan", ")", "\n", "trajs", "[", "i", "]", "=", "xx", ".", "T", "\n", "\n", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.gen_labels": [[59, 73], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "Helicopter.Helicopter.issafe"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.issafe"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "5", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "x0", "=", "states", "[", "i", "]", "\n", "xx", "=", "odeint", "(", "self", ".", "diff_eq", ",", "x0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "self", ".", "issafe", "(", "states", "[", "i", "]", ")", ")", "#1 = safe, 0 = unsafe", "\n", "\n", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Helicopter.Helicopter.get_noisy_measurments": [[74, 89], ["numpy.zeros", "range", "numpy.expand_dims", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "obs_idx", "=", "-", "1", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", ",", "obs_idx", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "", "return", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.__init__": [[6, 10], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "trainset_fn", ",", "testset_fn", ",", "validset_fn", ")", ":", "\n", "\t\t", "self", ".", "trainset_fn", "=", "trainset_fn", "\n", "self", ".", "testset_fn", "=", "testset_fn", "\n", "self", ".", "validset_fn", "=", "validset_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.load_data": [[11, 15], ["Dataset.Dataset.load_train_data", "Dataset.Dataset.load_test_data", "Dataset.Dataset.load_validation_data"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_train_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_test_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_validation_data"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "load_train_data", "(", ")", "\n", "self", ".", "load_test_data", "(", ")", "\n", "self", ".", "load_validation_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.load_train_data": [[16, 50], ["open", "pickle.load", "open.close", "print", "numpy.reshape", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.zeros", "range", "numpy.max", "numpy.min", "int"], "methods", ["None"], ["", "def", "load_train_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "trainset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "print", "(", "X", ".", "shape", ",", "Y", ".", "shape", ",", "labels", ".", "shape", ")", "\n", "\n", "self", ".", "y_dim", "=", "Y", ".", "shape", "[", "2", "]", "\n", "self", ".", "x_dim", "=", "X", ".", "shape", "[", "2", "]", "\n", "self", ".", "n_training_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "self", ".", "traj_len", "=", "X", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "Y_train", "=", "np", ".", "reshape", "(", "Y", ",", "(", "self", ".", "n_training_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "X_train", "=", "X", "[", ":", ",", "-", "1", "]", "\n", "\n", "xmax", "=", "np", ".", "max", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", "\n", "ymax", "=", "np", ".", "max", "(", "np", ".", "max", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "MAX", "=", "(", "xmax", ",", "ymax", ")", "\n", "xmin", "=", "np", ".", "min", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", "\n", "ymin", "=", "np", ".", "min", "(", "np", ".", "min", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "MIN", "=", "(", "xmin", ",", "ymin", ")", "\n", "\n", "self", ".", "X_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_train", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_train", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "\n", "self", ".", "T_train", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_training_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_training_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_train", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_train", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.load_test_data": [[52, 76], ["open", "pickle.load", "open.close", "numpy.zeros", "range", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_test_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "testset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_test_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_test", "=", "X", "[", ":", ",", "-", "1", "]", "\n", "self", ".", "Y_test", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_test_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "# flatten", "\n", "for", "iy", "in", "range", "(", "self", ".", "y_dim", ")", ":", "\n", "\t\t\t", "self", ".", "Y_test", "[", ":", ",", "iy", "*", "self", ".", "traj_len", ":", "(", "iy", "+", "1", ")", "*", "self", ".", "traj_len", "]", "=", "Y", "[", ":", ",", ":", ",", "iy", "]", "\n", "\n", "", "self", ".", "X_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_test", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_test", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "T_test", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_test_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_test", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_test", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.load_validation_data": [[78, 102], ["open", "pickle.load", "open.close", "numpy.zeros", "range", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_validation_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "validset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_val_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_val", "=", "X", "[", ":", ",", "-", "1", "]", "\n", "self", ".", "Y_val", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_val_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "# flatten", "\n", "for", "iy", "in", "range", "(", "self", ".", "y_dim", ")", ":", "\n", "\t\t\t", "self", ".", "Y_val", "[", ":", ",", "iy", "*", "self", ".", "traj_len", ":", "(", "iy", "+", "1", ")", "*", "self", ".", "traj_len", "]", "=", "Y", "[", ":", ",", ":", ",", "iy", "]", "\n", "\n", "", "self", ".", "X_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_val", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_val", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "T_val", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_val_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_val_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_val", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_val", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.Dataset.Dataset.generate_mini_batches": [[104, 112], ["numpy.random.randint"], "methods", ["None"], ["", "def", "generate_mini_batches", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "ix", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_training_points", ",", "n_samples", ")", "\n", "Xb", "=", "self", ".", "X_train_scaled", "[", "ix", "]", "\n", "Yb", "=", "self", ".", "Y_train_scaled", "[", "ix", "]", "\n", "Lb", "=", "self", ".", "L_train", "[", "ix", "]", "\n", "\n", "return", "Xb", ",", "Yb", ",", "Lb", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.PO_NSC.Conv_PO_NSC.__init__": [[7, 41], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["    ", "def", "__init__", "(", "self", ",", "y_dim", "=", "1", ",", "traj_len", "=", "32", ",", "n_filters", "=", "128", ",", "output_size", "=", "2", ")", ":", "\n", "        ", "super", "(", "Conv_PO_NSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "keep_prob", "=", "0.8", "\n", "self", ".", "nb_filters", "=", "n_filters", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "y_dim", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer2", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer3", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer4", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "traj_len", "*", "self", ".", "nb_filters", ",", "100", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc1", ".", "weight", ")", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "fc1", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "100", ",", "output_size", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc2", ".", "weight", ")", "\n", "self", ".", "layer6", "=", "nn", ".", "Sequential", "(", "self", ".", "fc2", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.PO_NSC.Conv_PO_NSC.forward": [[42, 51], ["PO_NSC.Conv_PO_NSC.layer1", "PO_NSC.Conv_PO_NSC.layer2", "PO_NSC.Conv_PO_NSC.layer3", "PO_NSC.Conv_PO_NSC.layer4", "PO_NSC.Conv_PO_NSC.view", "PO_NSC.Conv_PO_NSC.layer5", "PO_NSC.Conv_PO_NSC.layer6", "PO_NSC.Conv_PO_NSC.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "out", "=", "self", ".", "layer6", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.PO_NSC.FF_PO_NSC.__init__": [[55, 67], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", "=", "32", ",", "hidden_size", "=", "100", ",", "output_size", "=", "2", ")", ":", "\n", "\t\t", "super", "(", "FF_PO_NSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.PO_NSC.FF_PO_NSC.forward": [[68, 90], ["PO_NSC.FF_PO_NSC.fc1", "PO_NSC.FF_PO_NSC.fc2", "PO_NSC.FF_PO_NSC.fc3", "PO_NSC.FF_PO_NSC.fc4", "PO_NSC.FF_PO_NSC.fc5", "PO_NSC.FF_PO_NSC.out", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "nn", ".", "ReLU", "(", ")", "(", "output", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.__init__": [[6, 10], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "trainset_fn", ",", "testset_fn", ",", "validset_fn", ")", ":", "\n", "\t\t", "self", ".", "trainset_fn", "=", "trainset_fn", "\n", "self", ".", "testset_fn", "=", "testset_fn", "\n", "self", ".", "validset_fn", "=", "validset_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.add_calibration_path": [[11, 13], ["None"], "methods", ["None"], ["", "def", "add_calibration_path", "(", "self", ",", "calibrset_fn", ")", ":", "\n", "\t\t", "self", ".", "calibrset_fn", "=", "calibrset_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.load_data": [[14, 18], ["SeqDataset.SeqDataset.load_train_data", "SeqDataset.SeqDataset.load_test_data", "SeqDataset.SeqDataset.load_validation_data"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_train_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_test_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_validation_data"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "load_train_data", "(", ")", "\n", "self", ".", "load_test_data", "(", ")", "\n", "self", ".", "load_validation_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.load_train_data": [[19, 55], ["open", "pickle.load", "open.close", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "int"], "methods", ["None"], ["", "def", "load_train_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "trainset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "self", ".", "Y_train", "=", "data", "[", "\"y\"", "]", "\n", "self", ".", "X_train", "=", "data", "[", "\"x\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "y_dim", "=", "self", ".", "Y_train", ".", "shape", "[", "2", "]", "\n", "self", ".", "x_dim", "=", "self", ".", "X_train", ".", "shape", "[", "2", "]", "\n", "self", ".", "n_training_points", "=", "self", ".", "X_train", ".", "shape", "[", "0", "]", "\n", "self", ".", "traj_len", "=", "self", ".", "X_train", ".", "shape", "[", "1", "]", "\n", "\n", "xmax", "=", "np", ".", "max", "(", "np", ".", "max", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "ymax", "=", "np", ".", "max", "(", "np", ".", "max", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "\n", "self", ".", "MAX", "=", "(", "xmax", ",", "ymax", ")", "\n", "\n", "xmin", "=", "np", ".", "min", "(", "np", ".", "min", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "ymin", "=", "np", ".", "min", "(", "np", ".", "min", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "\n", "self", ".", "MIN", "=", "(", "xmin", ",", "ymin", ")", "\n", "\n", "self", ".", "X_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_train", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_train", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_train_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_train_scaled", ",", "(", "self", ".", "n_training_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_train_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_train_scaled", ",", "(", "self", ".", "n_training_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "\n", "self", ".", "T_train", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_training_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_training_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_train", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_train", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.load_test_data": [[57, 83], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_test_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "testset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_test_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_test", "=", "X", "\n", "\n", "self", ".", "Y_test", "=", "Y", "\n", "\n", "self", ".", "X_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_test", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_test", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_test_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_test_scaled", ",", "(", "self", ".", "n_test_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_test_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_test_scaled", ",", "(", "self", ".", "n_test_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_test", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_test_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_test", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_test", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.load_validation_data": [[85, 110], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_validation_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "validset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_val_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_val", "=", "X", "\n", "self", ".", "Y_val", "=", "Y", "\n", "\n", "self", ".", "X_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_val", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_val", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_val_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_val_scaled", ",", "(", "self", ".", "n_val_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_val_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_val_scaled", ",", "(", "self", ".", "n_val_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_val", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_val_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_val_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_val", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_val", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.load_calibration_data": [[112, 137], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_calibration_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "calibrset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_cal_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_cal", "=", "X", "\n", "self", ".", "Y_cal", "=", "Y", "\n", "\n", "self", ".", "X_cal_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_cal", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_cal_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_cal", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_cal_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_cal_scaled", ",", "(", "self", ".", "n_cal_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_cal_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_cal_scaled", ",", "(", "self", ".", "n_cal_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_cal", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_cal_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_cal_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_cal", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_cal", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.generate_mini_batches": [[138, 146], ["numpy.random.randint"], "methods", ["None"], ["", "def", "generate_mini_batches", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "ix", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_training_points", ",", "n_samples", ")", "\n", "Xb", "=", "self", ".", "X_train_scaled", "[", "ix", "]", "\n", "Yb", "=", "self", ".", "Y_train_scaled", "[", "ix", "]", "\n", "Lb", "=", "self", ".", "L_train", "[", "ix", "]", "\n", "\n", "return", "Xb", ",", "Yb", ",", "Lb", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqDataset.SeqDataset.generate_flat_mini_batches": [[147, 155], ["numpy.random.randint"], "methods", ["None"], ["", "def", "generate_flat_mini_batches", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "ix", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_training_points", ",", "n_samples", ")", "\n", "Xb", "=", "self", ".", "X_train_scaled_flat", "[", "ix", "]", "\n", "Yb", "=", "self", ".", "Y_train_scaled_flat", "[", "ix", "]", "\n", "Lb", "=", "self", ".", "L_train", "[", "ix", "]", "\n", "\n", "return", "Xb", ",", "Yb", ",", "Lb", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_nsc.Train_SeqNSC.__init__": [[16, 26], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "seq_dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ",", "nb_filters", "=", "64", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_resuts/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_nsc.Train_SeqNSC.compute_accuracy": [[28, 36], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_nsc.Train_SeqNSC.train": [[38, 147], ["str", "print", "os.makedirs", "train_seq_nsc.Train_SeqNSC.seq_dataset.load_data", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "numpy.random.randint", "SeqNSC.FF_SeqNSC", "SeqNSC.Conv_SeqNSC", "train_seq_nsc.Train_SeqNSC.seq_nsc.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_seq_nsc.Train_SeqNSC.seq_nsc.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "range", "train_seq_nsc.Train_SeqNSC.seq_nsc", "nn.CrossEntropyLoss.", "val_losses.append", "val_accuracies.append", "losses.append", "accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_seq_nsc.Train_SeqNSC.seq_nsc", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "nn.CrossEntropyLoss.item", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "numpy.mean", "numpy.mean", "int", "int", "int", "train_seq_nsc.Train_SeqNSC.seq_dataset.generate_flat_mini_batches", "train_seq_nsc.Train_SeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "FloatTensor", "LongTensor", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "nn.CrossEntropyLoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", "=", "FF_SeqNSC", "(", "input_size", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\n", "\t\t\t", "self", ".", "seq_nsc", "=", "Conv_SeqNSC", "(", "x_dim", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ",", "traj_len", "=", "int", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "nb_filters", "=", "self", ".", "nb_filters", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "seq_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "# Softmax is internally computed.", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# initialization of the gradients", "\n", "\n", "", "Xt", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "Tt", "=", "Variable", "(", "LongTensor", "(", "T", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "hypothesis", "=", "self", ".", "seq_nsc", "(", "Xt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "hypothesis", ",", "Tt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tt", ",", "hypothesis", ")", ")", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_hypothesis", "=", "self", ".", "seq_nsc", "(", "Xval_t", ")", "\n", "val_loss", "=", "loss_fnc", "(", "val_hypothesis", ",", "Tval_t", ")", "\n", "val_losses", ".", "append", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_hypothesis", ")", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "seq_nsc", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_nsc.Train_SeqNSC.load_trained_net": [[149, 155], ["torch.load", "train_seq_nsc.Train_SeqNSC.seq_nsc.eval", "train_seq_nsc.Train_SeqNSC.seq_nsc.cuda"], "methods", ["None"], ["", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_nsc", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "seq_nsc", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_seq_nsc.Train_SeqNSC.generate_test_results": [[157, 175], ["torch.autograd.Variable", "train_seq_nsc.Train_SeqNSC.seq_nsc", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "str", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "X", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_test", ")", ")", "\n", "test_preds", "=", "self", ".", "seq_nsc", "(", "Xtest", ")", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "test_preds", ")", "\n", "print", "(", "\"Test accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_se.Train_SE.__init__": [[15, 24], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SE_results/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_se.Train_SE.train": [[26, 94], ["str", "print", "os.makedirs", "train_se.Train_SE.dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "numpy.random.randint", "SE.FF_SE", "train_se.Train_SE.se.cuda", "train_se.Train_SE.se.parameters", "int", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "int", "int", "int", "print", "range", "losses.append", "numpy.arange", "train_se.Train_SE.dataset.generate_mini_batches", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_se.Train_SE.se", "nn.MSELoss.", "nn.MSELoss.backward", "torch.optim.Adam.step", "tmp_loss.append", "numpy.mean", "Tensor", "Tensor", "nn.MSELoss.item", "print"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches"], ["", "", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "n_hidden", "=", "100", ",", "lr", "=", "0.0001", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SE_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "se", "=", "FF_SE", "(", "int", "(", "self", ".", "dataset", ".", "y_dim", "*", "self", ".", "dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "se", ".", "cuda", "(", ")", "\n", "\n", "", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "\n", "\n", "\n", "if", "self", ".", "training_flag", ":", "\n", "\n", "\t\t\t", "losses", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch nb. \"", ",", "epoch", "+", "1", ",", "\"/\"", ",", "n_epochs", ")", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "# initialization of the gradients", "\n", "\n", "Yt", "=", "Variable", "(", "Tensor", "(", "Y", ")", ")", "\n", "Xt", "=", "Variable", "(", "Tensor", "(", "X", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "Xt_pred", "=", "self", ".", "se", "(", "Yt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "Xt_pred", ",", "Xt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "if", "i", "%", "200", "==", "0", ":", "\n", "\t\t\t\t\t\t", "print", "(", "\"Epoch= {},\\t batch = {},\\t loss = {:2.4f}\\t\"", ".", "format", "(", "epoch", "+", "1", ",", "i", ",", "tmp_loss", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/A_losses.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "se", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_se.Train_SE.load_trained_net": [[96, 102], ["torch.load", "train_se.Train_SE.se.eval", "train_se.Train_SE.se.cuda"], "methods", ["None"], ["", "", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "se", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "se", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "se", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_se.Train_SE.generate_test_results": [[104, 112], ["numpy.empty", "range", "print", "train_se.Train_SE.se", "torch.autograd.Variable", "train_se.Train_SE.detach().cpu().numpy", "Tensor", "train_se.Train_SE.detach().cpu", "train_se.Train_SE.detach"], "methods", ["None"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "self", ".", "gen_estimates", "=", "np", ".", "empty", "(", "shape", "=", "(", "self", ".", "dataset", ".", "n_test_points", ",", "self", ".", "dataset", ".", "x_dim", ")", ")", "\n", "for", "iii", "in", "range", "(", "self", ".", "dataset", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "print", "(", "\"Test point nb \"", ",", "iii", "+", "1", ",", "\" / \"", ",", "self", ".", "dataset", ".", "n_test_points", ")", "\n", "\n", "pred", "=", "self", ".", "se", "(", "Variable", "(", "Tensor", "(", "[", "self", ".", "dataset", ".", "Y_test_scaled", "[", "iii", "]", "]", ")", ")", ")", "\n", "self", ".", "gen_estimates", "[", "iii", "]", "=", "pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_se.Train_SE.plot_test_results": [[114, 125], ["numpy.arange", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].scatter", "axs[].scatter"], "methods", ["None"], ["", "", "def", "plot_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "tspan", "=", "np", ".", "arange", "(", "self", ".", "dataset", ".", "n_test_points", ")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "self", ".", "dataset", ".", "x_dim", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "dataset", ".", "x_dim", ")", ":", "\n", "\t\t\t", "axs", "[", "j", "]", ".", "scatter", "(", "tspan", ",", "self", ".", "dataset", ".", "X_test_scaled", "[", ":", ",", "j", "]", ",", "color", "=", "\"blue\"", ")", "\n", "axs", "[", "j", "]", ".", "scatter", "(", "tspan", ",", "self", ".", "gen_estimates", "[", ":", ",", "j", "]", ",", "color", "=", "\"orange\"", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/B_point_pred_comparison.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.__init__": [[10, 22], ["numpy.array", "ArtificialPancreas.ArtificialPancreas.HJ_params"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.HJ_params"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "32", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.01", ")", ":", "\n", "\t\t", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "13.5", "*", "4", ",", "13.5", "*", "8", "]", ",", "[", "13.5", "*", "4", ",", "13.5", "*", "8", "]", ",", "[", "0", ",", "2000", "]", ",", "[", "0", ",", "2000", "]", ",", "[", "0", ",", "2000", "]", ",", "[", "0", ",", "2000", "]", "]", ")", "\n", "self", ".", "BW", "=", "75", "\n", "self", ".", "params", "=", "self", ".", "HJ_params", "(", "self", ".", "BW", ")", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "state_dim", "=", "14", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "red_state_dim", "=", "6", "\n", "self", ".", "sample_time", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.HJ_params": [[24, 61], ["None"], "methods", ["None"], ["", "def", "HJ_params", "(", "self", ",", "BW", ")", ":", "\n", "\n", "\t\t", "p", "=", "{", "}", "\n", "p", "[", "\"BW\"", "]", "=", "BW", "\n", "p", "[", "\"ka_int\"", "]", "=", "0.025", "\n", "p", "[", "\"EGP_0\"", "]", "=", "0.0158", "*", "BW", "\n", "p", "[", "\"F_01\"", "]", "=", "0.0104", "*", "BW", "\n", "p", "[", "\"V_G\"", "]", "=", "0.1797", "*", "BW", "\n", "p", "[", "\"k12\"", "]", "=", "0.0793", "\n", "p", "[", "\"R_thr\"", "]", "=", "9", "\n", "p", "[", "\"R_cl\"", "]", "=", "0.003", "\n", "p", "[", "\"Ag\"", "]", "=", "0.8121", "\n", "p", "[", "\"tMaxg\"", "]", "=", "48.8385", "\n", "p", "[", "\"Ug_ceil\"", "]", "=", "0.0275", "*", "BW", "\n", "p", "[", "\"K\"", "]", "=", "0.7958", "\n", "p", "[", "\"kia1\"", "]", "=", "0.0113", "\n", "p", "[", "\"kia2\"", "]", "=", "0.0197", "\n", "p", "[", "\"k_e\"", "]", "=", "0.1735", "\n", "p", "[", "\"Vmax_LD\"", "]", "=", "2.9639", "\n", "p", "[", "\"km_LD\"", "]", "=", "47.5305", "\n", "p", "[", "\"ka_1\"", "]", "=", "0.007", "\n", "p", "[", "\"ka_2\"", "]", "=", "0.0331", "\n", "p", "[", "\"ka_3\"", "]", "=", "0.0308", "\n", "p", "[", "\"SIT\"", "]", "=", "0.0046", "\n", "p", "[", "\"SID\"", "]", "=", "0.0006", "\n", "p", "[", "\"SIE\"", "]", "=", "0.0384", "\n", "p", "[", "\"V_I\"", "]", "=", "0.1443", "*", "BW", "\n", "p", "[", "\"M_PGU_f\"", "]", "=", "1", "/", "35", "\n", "p", "[", "\"M_HGP_f\"", "]", "=", "1", "/", "155", "\n", "p", "[", "\"M_PIU_f\"", "]", "=", "2.4", "\n", "p", "[", "\"PGUA_rate\"", "]", "=", "1", "/", "30", "\n", "p", "[", "\"PGUA_a\"", "]", "=", "0.006", "\n", "p", "[", "\"PGUA_b\"", "]", "=", "1.2264", "\n", "p", "[", "\"PGUA_c\"", "]", "=", "-", "10.1952", "\n", "p", "[", "\"PVO2max_rate\"", "]", "=", "5", "/", "3", "\n", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.diff_eq_wu": [[65, 206], ["numpy.zeros", "numpy.maximum", "ArtificialPancreas.ArtificialPancreas.steady_PGUA_from_PVO2max", "len"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.steady_PGUA_from_PVO2max"], ["", "def", "diff_eq_wu", "(", "self", ",", "y", ",", "u", ",", "t", ")", ":", "\n", "\t\t", "'''\n\t\t% y: state variables -- vector of length 14\n\t\t% params: parameters\n\t\t% dists: disturbances at t (vector of length 3)\n\t\t'''", "\n", "dydt", "=", "np", ".", "zeros", "(", "len", "(", "y", ")", ")", "\n", "\n", "## extract disturbances", "\n", "# ingested CHO", "\n", "D", "=", "0", "\n", "# active muscular mass at current time", "\n", "MM", "=", "0", "\n", "# max oxygen at current time", "\n", "targetPVo2max", "=", "8", "\n", "\n", "## extract variables", "\n", "\n", "# glucose kinetics", "\n", "# masses of glucose in the accessible and non-accessible compartments respectively, in mmol.", "\n", "Q1", "=", "y", "[", "0", "]", "\n", "Q2", "=", "y", "[", "1", "]", "\n", "\n", "# Measured glucose concentration", "\n", "G", "=", "Q1", "/", "self", ".", "params", "[", "\"V_G\"", "]", "\n", "\n", "# corrected non-insulin mediated glucose uptake [Hovorka04]", "\n", "if", "G", ">=", "4.5", ":", "\n", "\t\t\t", "F_01c", "=", "self", ".", "params", "[", "\"F_01\"", "]", "\n", "", "else", ":", "\n", "\t\t\t", "F_01c", "=", "self", ".", "params", "[", "\"F_01\"", "]", "*", "G", "/", "4.5", "\n", "\n", "", "if", "G", ">=", "9", ":", "\n", "\t\t\t", "F_R", "=", "0.003", "*", "(", "G", "-", "9", ")", "*", "self", ".", "params", "[", "\"V_G\"", "]", "\n", "", "else", ":", "\n", "\t\t\t", "F_R", "=", "0", "\n", "\n", "\n", "# insulin kinetics", "\n", "# insulin mass through the slow absorption pathway,", "\n", "", "Q1a", "=", "y", "[", "2", "]", "\n", "Q2i", "=", "y", "[", "3", "]", "\n", "#faster channel for insulin absorption", "\n", "Q1b", "=", "y", "[", "4", "]", "\n", "#plasma insulin mass", "\n", "Q3", "=", "y", "[", "5", "]", "\n", "#plasma insulin concentration", "\n", "I", "=", "Q3", "/", "self", ".", "params", "[", "\"V_I\"", "]", "\n", "\n", "# insulin dynamics", "\n", "# x1 (min-1), x2 (min-1) and x3 (unitless) represent ", "\n", "# the effect of insulin on glucose distribution, ", "\n", "# glucose disposal and suppression of endogenous glucose ", "\n", "# production, respectively", "\n", "x1", "=", "y", "[", "6", "]", "\n", "x2", "=", "y", "[", "7", "]", "\n", "x3", "=", "y", "[", "8", "]", "\n", "\n", "k_b1", "=", "self", ".", "params", "[", "\"ka_1\"", "]", "*", "self", ".", "params", "[", "\"SIT\"", "]", "\n", "k_b2", "=", "self", ".", "params", "[", "\"ka_2\"", "]", "*", "self", ".", "params", "[", "\"SID\"", "]", "\n", "k_b3", "=", "self", ".", "params", "[", "\"ka_3\"", "]", "*", "self", ".", "params", "[", "\"SIE\"", "]", "\n", "\n", "# Subsystem of glucose absorption from gut", "\n", "# Glucose masses in the accessible and nonaccessible compartments", "\n", "G1", "=", "y", "[", "9", "]", "\n", "G2", "=", "y", "[", "10", "]", "\n", "\n", "tmax", "=", "np", ".", "maximum", "(", "self", ".", "params", "[", "\"tMaxg\"", "]", ",", "G2", "/", "self", ".", "params", "[", "\"Ug_ceil\"", "]", ")", "\n", "U_g", "=", "G2", "/", "tmax", "\n", "\n", "# interstitial glucose", "\n", "C", "=", "y", "[", "11", "]", "\n", "\n", "\n", "# exercise ", "\n", "PGUA", "=", "y", "[", "12", "]", "\n", "PVO2max", "=", "y", "[", "13", "]", "\n", "M_PGU", "=", "1", "+", "PGUA", "*", "MM", "*", "self", ".", "params", "[", "\"M_PGU_f\"", "]", "\n", "M_PIU", "=", "1", "+", "MM", "*", "self", ".", "params", "[", "\"M_PIU_f\"", "]", "\n", "M_HGP", "=", "1", "+", "PGUA", "*", "MM", "*", "self", ".", "params", "[", "\"M_HGP_f\"", "]", "\n", "#PGUA_ss = p.PGUA_a*PVO2max^2 + p.PGUA_b*PVO2max + p.PGUA_c;", "\n", "PGUA_ss", "=", "self", ".", "steady_PGUA_from_PVO2max", "(", "PVO2max", ")", "\n", "\n", "## compute change rates", "\n", "# use flow variables to avoid duplicated computation", "\n", "\n", "# Glucose kinetics", "\n", "Q1_to_Q2_flow", "=", "x1", "*", "Q1", "-", "self", ".", "params", "[", "\"k12\"", "]", "*", "Q2", "\n", "Q1dt", "=", "-", "F_01c", "-", "Q1_to_Q2_flow", "-", "F_R", "+", "U_g", "+", "self", ".", "params", "[", "\"EGP_0\"", "]", "*", "(", "1", "-", "x3", ")", "\n", "Q2dt", "=", "Q1_to_Q2_flow", "-", "x2", "*", "Q2", "\n", "dydt", "[", "0", "]", "=", "Q1dt", "\n", "dydt", "[", "1", "]", "=", "Q2dt", "\n", "\n", "## insulin kinetics", "\n", "Q1a_to_Q2i_flow", "=", "self", ".", "params", "[", "\"kia1\"", "]", "*", "Q1a", "\n", "Q2i_to_Q3_flow", "=", "self", ".", "params", "[", "\"kia1\"", "]", "*", "Q2i", "\n", "Q1b_to_Q3_flow", "=", "self", ".", "params", "[", "\"kia2\"", "]", "*", "Q1b", "\n", "###---", "\n", "insulin_ratio", "=", "self", ".", "params", "[", "\"K\"", "]", "*", "u", "\n", "\n", "Q1adt", "=", "insulin_ratio", "-", "Q1a_to_Q2i_flow", "-", "self", ".", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1a", "/", "(", "self", ".", "params", "[", "\"km_LD\"", "]", "+", "Q1a", ")", "\n", "Q2idt", "=", "Q1a_to_Q2i_flow", "-", "Q2i_to_Q3_flow", "\n", "####----", "\n", "Q1bdt", "=", "u", "-", "insulin_ratio", "-", "Q1b_to_Q3_flow", "-", "self", ".", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1b", "/", "(", "self", ".", "params", "[", "\"km_LD\"", "]", "+", "Q1b", ")", "\n", "Q3dt", "=", "Q2i_to_Q3_flow", "+", "Q1b_to_Q3_flow", "-", "self", ".", "params", "[", "\"k_e\"", "]", "*", "Q3", "\n", "\n", "dydt", "[", "2", "]", "=", "Q1adt", "\n", "dydt", "[", "3", "]", "=", "Q2idt", "\n", "dydt", "[", "4", "]", "=", "Q1bdt", "\n", "dydt", "[", "5", "]", "=", "Q3dt", "\n", "\n", "## insulin dynamics", "\n", "x1dt", "=", "-", "self", ".", "params", "[", "\"ka_1\"", "]", "*", "x1", "+", "M_PGU", "*", "M_PIU", "*", "k_b1", "*", "I", "\n", "x2dt", "=", "-", "self", ".", "params", "[", "\"ka_2\"", "]", "*", "x2", "+", "M_PGU", "*", "M_PIU", "*", "k_b2", "*", "I", "\n", "x3dt", "=", "-", "self", ".", "params", "[", "\"ka_3\"", "]", "*", "x3", "+", "M_HGP", "*", "k_b3", "*", "I", "\n", "dydt", "[", "6", "]", "=", "x1dt", "\n", "dydt", "[", "7", "]", "=", "x2dt", "\n", "dydt", "[", "8", "]", "=", "x3dt", "\n", "\n", "\n", "## Glucose absorption from gut", "\n", "G1_to_G2_flow", "=", "G1", "/", "tmax", "\n", "G1dt", "=", "-", "G1_to_G2_flow", "+", "self", ".", "params", "[", "\"Ag\"", "]", "*", "D", "\n", "G2dt", "=", "G1_to_G2_flow", "-", "G2", "/", "tmax", "\n", "dydt", "[", "9", "]", "=", "G1dt", "\n", "dydt", "[", "10", "]", "=", "G2dt", "\n", "\n", "\n", "## interstitial glucose", "\n", "Cdt", "=", "self", ".", "params", "[", "\"ka_int\"", "]", "*", "(", "G", "-", "C", ")", "\n", "dydt", "[", "11", "]", "=", "Cdt", "\n", "\n", "\n", "## exercise", "\n", "PGUAdt", "=", "-", "self", ".", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA", "+", "self", ".", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA_ss", "\n", "dydt", "[", "12", "]", "=", "PGUAdt", "\n", "\n", "PVO2maxdt", "=", "-", "self", ".", "params", "[", "\"PVO2max_rate\"", "]", "*", "PVO2max", "+", "self", ".", "params", "[", "\"PVO2max_rate\"", "]", "*", "targetPVo2max", "\n", "dydt", "[", "13", "]", "=", "PVO2maxdt", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.diff_eq": [[209, 213], ["ArtificialPancreas.ArtificialPancreas.HJ_init_state", "ArtificialPancreas.ArtificialPancreas.diff_eq_wu"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.HJ_init_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.diff_eq_wu"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "\t\t", "_", ",", "basal_iir", "=", "self", ".", "HJ_init_state", "(", "7.8", ")", "\n", "\n", "return", "self", ".", "diff_eq_wu", "(", "y", ",", "basal_iir", ",", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.ODE_wrapper": [[214, 223], ["ArtificialPancreas.ArtificialPancreas.diff_eq_wu", "len", "numpy.minimum", "int", "len", "numpy.floor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.diff_eq_wu"], ["", "def", "ODE_wrapper", "(", "self", ",", "t", ",", "y", ",", "u", ")", ":", "\n", "\n", "\t\t", "if", "len", "(", "u", ")", ">", "1", ":", "\n", "\t\t\t", "u_t", "=", "u", "[", "np", ".", "minimum", "(", "len", "(", "u", ")", "-", "1", ",", "int", "(", "np", ".", "floor", "(", "t", "+", "1", ")", ")", ")", "]", "\n", "\n", "\n", "", "dydt", "=", "self", ".", "diff_eq_wu", "(", "y", ",", "u_t", ",", "t", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.build_init_state": [[225, 264], ["ArtificialPancreas.ArtificialPancreas.steady_PGUA_from_PVO2max", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.steady_PGUA_from_PVO2max"], ["", "def", "build_init_state", "(", "self", ",", "target", ",", "xx", ")", ":", "\n", "\n", "# these are passed as arguments", "\n", "\t\t", "Q2i_0", "=", "xx", "[", "0", "]", "\n", "I_0", "=", "xx", "[", "1", "]", "\n", "\n", "G_0", "=", "target", "\n", "\n", "# insulin kinetics", "\n", "Q3_0", "=", "I_0", "*", "self", ".", "params", "[", "\"V_I\"", "]", "\n", "\n", "Q1a_0", "=", "Q2i_0", "\n", "\n", "Q1b_0", "=", "(", "self", ".", "params", "[", "\"k_e\"", "]", "*", "Q3_0", "-", "self", ".", "params", "[", "\"kia1\"", "]", "*", "Q2i_0", ")", "/", "self", ".", "params", "[", "\"kia2\"", "]", "\n", "basal_iir", "=", "(", "self", ".", "params", "[", "\"kia1\"", "]", "*", "Q1a_0", "+", "Q1a_0", "*", "self", ".", "params", "[", "\"Vmax_LD\"", "]", "/", "(", "self", ".", "params", "[", "\"km_LD\"", "]", "+", "Q1a_0", ")", ")", "/", "self", ".", "params", "[", "\"K\"", "]", "\n", "\n", "\n", "#effect of insulin", "\n", "x1_0", "=", "self", ".", "params", "[", "\"SIT\"", "]", "*", "I_0", "\n", "x2_0", "=", "self", ".", "params", "[", "\"SID\"", "]", "*", "I_0", "\n", "x3_0", "=", "self", ".", "params", "[", "\"SIE\"", "]", "*", "I_0", "\n", "\n", "#glucose kinetics", "\n", "Q1_0", "=", "G_0", "*", "self", ".", "params", "[", "\"V_G\"", "]", "\n", "Q2_0", "=", "x1_0", "*", "Q1_0", "/", "(", "self", ".", "params", "[", "\"k12\"", "]", "+", "x2_0", ")", "\n", "\n", "G1_0", "=", "0", "\n", "G2_0", "=", "0", "\n", "\n", "C_0", "=", "G_0", "\n", "\n", "restO2", "=", "8", "\n", "#PVO2max and PGUA at rest (8 and 0, resp)", "\n", "PVO2max_0", "=", "restO2", "\n", "PGUA_0", "=", "self", ".", "steady_PGUA_from_PVO2max", "(", "PVO2max_0", ")", "\n", "\n", "x0", "=", "np", ".", "array", "(", "[", "Q1_0", ",", "Q2_0", ",", "Q1a_0", ",", "Q2i_0", ",", "Q1b_0", ",", "Q3_0", ",", "x1_0", ",", "x2_0", ",", "x3_0", ",", "G1_0", ",", "G2_0", ",", "C_0", ",", "PGUA_0", ",", "PVO2max_0", "]", ")", "\n", "\n", "return", "x0", ",", "basal_iir", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.HJ_init_state": [[266, 293], ["numpy.array", "numpy.array", "scipy.optimize.leastsq", "ArtificialPancreas.ArtificialPancreas.build_init_state", "ArtificialPancreas.ArtificialPancreas.build_init_state", "ArtificialPancreas.ArtificialPancreas.diff_eq_wu", "ArtificialPancreas.ArtificialPancreas.HJ_init_state.fun_wrapper"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.build_init_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.build_init_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.diff_eq_wu"], ["", "def", "HJ_init_state", "(", "self", ",", "target_BG", ")", ":", "\n", "\t\t", "'''\n\t\t% Given the target glucose level G, we find initial values\n\t\t% for the basal insulin, I (x(2)), and Q2i (x(1)). \n\t\t% All the remaining initial conditions are derived algebraically from I, G,\n\t\t% and Q2i\n\t\t'''", "\n", "\n", "rest_dists", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "8", "]", ")", "\n", "\n", "def", "fun_wrapper", "(", "x_var", ")", ":", "\n", "\n", "\t\t\t", "init_state", ",", "b_iir", "=", "self", ".", "build_init_state", "(", "target_BG", ",", "x_var", ")", "\n", "y", "=", "self", ".", "diff_eq_wu", "(", "init_state", ",", "b_iir", ",", "rest_dists", ")", "\n", "\n", "return", "y", "\n", "\n", "", "myfunc", "=", "lambda", "x", ":", "fun_wrapper", "(", "x", ")", "\n", "\n", "#options_fsolve = optimoptions('fsolve','TolFun', 1e-08, 'Display', 'off', 'Algorithm', 'levenberg-marquardt');", "\n", "# initial point for search", "\n", "init_x0", "=", "np", ".", "array", "(", "[", "20", "*", "self", ".", "params", "[", "\"V_I\"", "]", "*", "np", ".", "random", ".", "rand", "(", ")", ",", "20", "*", "np", ".", "random", ".", "rand", "(", ")", "]", ")", "\n", "#x_opt = fsolve(fun_wrapper,init_x0)#,xtol=1e-08", "\n", "x_opt", ",", "_", "=", "leastsq", "(", "fun_wrapper", ",", "init_x0", ")", "\n", "y0", ",", "basal_iir", "=", "self", ".", "build_init_state", "(", "target_BG", ",", "x_opt", ")", "\n", "\n", "return", "y0", ",", "basal_iir", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.steady_PGUA_from_PVO2max": [[297, 302], ["None"], "methods", ["None"], ["", "def", "steady_PGUA_from_PVO2max", "(", "self", ",", "PVO2max", ")", ":", "\n", "\n", "\t\t", "PGUA_ss", "=", "self", ".", "params", "[", "\"PGUA_a\"", "]", "*", "PVO2max", "**", "2", "+", "self", ".", "params", "[", "\"PGUA_b\"", "]", "*", "PVO2max", "+", "self", ".", "params", "[", "\"PGUA_c\"", "]", "\n", "\n", "return", "PGUA_ss", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.get_init_state": [[304, 309], ["ArtificialPancreas.ArtificialPancreas.HJ_init_state"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.HJ_init_state"], ["", "def", "get_init_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "x0", ",", "basal_iir", "=", "self", ".", "HJ_init_state", "(", "7.8", ")", "\n", "\n", "return", "x0", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.gen_trajectories": [[310, 342], ["ArtificialPancreas.ArtificialPancreas.HJ_init_state", "numpy.zeros", "numpy.zeros", "numpy.linspace", "numpy.ones", "ArtificialPancreas.ArtificialPancreas.ODE_wrapper", "copy.deepcopy", "scipy.integrate.odeint", "int", "numpy.random.rand", "len"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.HJ_init_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.ODE_wrapper"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ",", "full_flag", "=", "False", ")", ":", "\n", "\n", "\n", "\t\t", "self", ".", "x0", ",", "self", ".", "basal_iir", "=", "self", ".", "HJ_init_state", "(", "7.8", ")", "\n", "\n", "u", "=", "self", ".", "basal_iir", "*", "np", ".", "ones", "(", "int", "(", "self", ".", "n_steps", ")", ")", "\n", "\n", "myf", "=", "lambda", "x", ",", "t", ":", "self", ".", "ODE_wrapper", "(", "t", ",", "x", ",", "u", ")", "\n", "\n", "self", ".", "X", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "red_state_dim", ")", ")", "\n", "self", ".", "X_full", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"i = \", i)", "\n", "\t\t\t", "x0_mod", "=", "copy", ".", "deepcopy", "(", "self", ".", "x0", ")", "\n", "rand_state", "=", "self", ".", "ranges", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "red_state_dim", ")", "\n", "\n", "x0_mod", "[", ":", "len", "(", "rand_state", ")", "]", "=", "rand_state", ".", "T", "\n", "\n", "yy", "=", "odeint", "(", "myf", ",", "x0_mod", ",", "tspan", ")", "\n", "#print(\"yy shape = \", yy.shape)", "\n", "self", ".", "X_full", "[", "i", "]", "=", "yy", "\n", "self", ".", "X", "[", "i", "]", "=", "yy", "[", ":", ",", ":", "self", ".", "red_state_dim", "]", "\n", "i", "+=", "1", "\n", "\n", "", "if", "full_flag", ":", "\n", "\t\t\t", "return", "self", ".", "X", ",", "self", ".", "X_full", "\n", "", "else", ":", "\n", "\t\t\t", "return", "self", ".", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.johnson_transform_SU": [[345, 347], ["numpy.sinh"], "methods", ["None"], ["", "", "def", "johnson_transform_SU", "(", "self", ",", "xi", ",", "lam", ",", "gamma", ",", "delta", ",", "x", ")", ":", "\n", "\t\t", "return", "xi", "+", "lam", "*", "np", ".", "sinh", "(", "(", "x", "-", "gamma", ")", "/", "delta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.get_noisy_measurments": [[349, 367], ["numpy.zeros", "range", "numpy.expand_dims", "range", "numpy.maximum", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "cgm", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\n", "\t\t\t\t", "bg_ij", "=", "trajs", "[", "i", ",", "j", ",", "0", "]", "\n", "cgm", "[", "i", ",", "j", "]", "=", "np", ".", "maximum", "(", "bg_ij", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", ",", "0", ")", "\n", "\n", "\n", "", "", "return", "np", ".", "expand_dims", "(", "cgm", "/", "self", ".", "params", "[", "\"V_G\"", "]", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.get_navigator_noisy_measurments": [[368, 393], ["numpy.zeros", "range", "numpy.expand_dims", "numpy.random.randn", "range", "ArtificialPancreas.ArtificialPancreas.johnson_transform_SU", "numpy.maximum", "numpy.minimum", "numpy.random.randn"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.johnson_transform_SU"], ["", "def", "get_navigator_noisy_measurments", "(", "self", ",", "trajs", ")", ":", "\n", "\t\t", "PACF", "=", "0.7", "\n", "gamma", "=", "-", "0.5444", "\n", "lam", "=", "15.9574", "\n", "delta", "=", "1.6898", "\n", "xi", "=", "-", "5.47", "\n", "minim", "=", "32.", "\n", "maxim", "=", "600.", "\n", "\n", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "NavigatorCGM", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "e", "=", "np", ".", "random", ".", "randn", "(", ")", "\n", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "e", "=", "PACF", "*", "(", "e", "+", "np", ".", "random", ".", "randn", "(", ")", ")", "\n", "eps", "=", "self", ".", "johnson_transform_SU", "(", "xi", ",", "lam", ",", "gamma", ",", "delta", ",", "e", ")", "\n", "\n", "bg_ij", "=", "trajs", "[", "i", ",", "j", ",", "0", "]", "\n", "cgm_ij", "=", "bg_ij", "+", "eps", "\n", "cgm_ij", "=", "np", ".", "maximum", "(", "cgm_ij", ",", "minim", ")", "\n", "cgm_ij", "=", "np", ".", "minimum", "(", "cgm_ij", ",", "maxim", ")", "\n", "NavigatorCGM", "[", "i", ",", "j", "]", "=", "cgm_ij", "\n", "\n", "", "", "return", "np", ".", "expand_dims", "(", "NavigatorCGM", "/", "self", ".", "params", "[", "\"V_G\"", "]", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.gen_labels": [[394, 414], ["numpy.empty", "range", "numpy.ones", "ArtificialPancreas.ArtificialPancreas.ODE_wrapper", "scipy.integrate.odeint", "int", "numpy.all", "numpy.all"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.ArtificialPancreas.ArtificialPancreas.ODE_wrapper"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "32", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "hypo_bound", "=", "3.9", "\n", "hyper_bound", "=", "8", "\n", "\n", "full_states", "=", "self", ".", "X_full", "[", ":", ",", "-", "1", "]", "\n", "\n", "u", "=", "self", ".", "basal_iir", "*", "np", ".", "ones", "(", "int", "(", "self", ".", "n_steps", ")", ")", "\n", "\n", "myf", "=", "lambda", "x", ",", "t", ":", "self", ".", "ODE_wrapper", "(", "t", ",", "x", ",", "u", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\t\t\t", "y0", "=", "full_states", "[", "i", "]", "\n", "yy", "=", "odeint", "(", "myf", ",", "y0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "/", "self", ".", "params", "[", "\"V_G\"", "]", ">=", "hypo_bound", ")", ")", "*", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "/", "self", ".", "params", "[", "\"V_G\"", "]", "<=", "hyper_bound", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.__init__": [[8, 22], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "time_horizon", "=", "4", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.5", ")", ":", "\n", "\t\t", "self", ".", "a", "=", "0.02", "\n", "self", ".", "b", "=", "0.2", "\n", "self", ".", "c", "=", "-", "65", "\n", "self", ".", "d", "=", "8", "\n", "self", ".", "I", "=", "40", "\n", "self", ".", "state_dim", "=", "2", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "-", "68.5", ",", "30.", "]", ",", "[", "0.", ",", "25.", "]", "]", ")", "\n", "self", ".", "unsafe_region", "=", "[", "-", "np", ".", "infty", ",", "-", "68.5", "]", "# v", "\n", "self", ".", "time_horizon", "=", "time_horizon", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "dt", "=", "time_horizon", "/", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.diff_eq_iv": [[24, 32], ["numpy.zeros"], "methods", ["None"], ["", "def", "diff_eq_iv", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "\n", "\t\t", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "0.04", "*", "y", "[", "0", "]", "**", "2", "+", "5", "*", "y", "[", "0", "]", "+", "140", "-", "y", "[", "1", "]", "+", "self", ".", "I", "\n", "dydt", "[", "1", "]", "=", "self", ".", "a", "*", "(", "self", ".", "b", "*", "y", "[", "0", "]", "-", "y", "[", "1", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.diff_eq": [[33, 41], ["numpy.zeros"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "\t\t", "y", "=", "y", "if", "y", "[", "0", "]", ">=", "30", "else", "(", "self", ".", "c", ",", "y", "[", "1", "]", "+", "self", ".", "d", ")", "\n", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "0.04", "*", "y", "[", "0", "]", "**", "2", "+", "5", "*", "y", "[", "0", "]", "+", "140", "-", "y", "[", "1", "]", "+", "self", ".", "I", "\n", "dydt", "[", "1", "]", "=", "self", ".", "a", "*", "(", "self", ".", "b", "*", "y", "[", "0", "]", "-", "y", "[", "1", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.sample_init_state": [[42, 45], ["numpy.random.rand"], "methods", ["None"], ["", "def", "sample_init_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "return", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "*", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "+", "self", ".", "ranges", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.jump_condition": [[46, 51], ["None"], "methods", ["None"], ["", "def", "jump_condition", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "\t\t", "if", "y", "[", "0", "]", ">=", "30", ":", "\n", "\t\t\t", "return", "0", "\n", "", "else", ":", "\n", "\t\t\t", "return", "1", "\n", "# Define terminal condition and type-change flag", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.gen_trajectories": [[54, 94], ["numpy.linspace", "numpy.empty", "SpikingNeuron.SpikingNeuron.sample_init_state", "numpy.zeros", "scipy.integrate.solve_ivp", "numpy.all", "numpy.all", "numpy.hstack", "numpy.hstack", "len", "numpy.array", "scipy.integrate.solve_ivp", "numpy.hstack", "numpy.hstack"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.sample_init_state"], ["def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "time_grid", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "time_horizon", ",", "self", ".", "n_steps", ")", "\n", "trajectories", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "sample_init_state", "(", ")", "\n", "\n", "time_grid_sol", "=", "np", ".", "zeros", "(", "(", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "dt", "=", "self", ".", "time_horizon", "/", "self", ".", "n_steps", "\n", "\n", "count", ",", "t", "=", "0", ",", "0", "\n", "while", "count", "<", "self", ".", "n_steps", ":", "\n", "\t\t\t\t", "tspan", "=", "[", "t", ",", "t", "+", "dt", "]", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "tspan", ",", "y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "if", "t", "==", "0", ":", "\n", "\t\t\t\t\t", "global_sol", "=", "sol", ".", "y", "\n", "global_t", "=", "sol", ".", "t", "\n", "time_grid_sol", "[", ":", ",", "0", "]", "=", "y0", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "time_grid_sol", "[", ":", ",", "count", "]", "=", "y0", "\n", "\n", "\n", "", "while", "len", "(", "sol", ".", "t_events", "[", "0", "]", ")", ">", "0", ":", "\n", "\t\t\t\t\t", "new_tspan", "=", "[", "sol", ".", "t_events", "[", "0", "]", ",", "t", "+", "dt", "]", "\n", "new_y0", "=", "np", ".", "array", "(", "[", "self", ".", "c", ",", "self", ".", "d", "+", "sol", ".", "y_events", "[", "0", "]", "[", "0", ",", "1", "]", "]", ")", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "new_tspan", ",", "new_y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "", "y0", "=", "global_sol", "[", ":", ",", "-", "1", "]", "\n", "count", "+=", "1", "\n", "t", "+=", "dt", "\n", "", "if", "np", ".", "all", "(", "time_grid_sol", "[", ":", ",", "-", "1", "]", ">=", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "time_grid_sol", "[", ":", ",", "-", "1", "]", "<=", "self", ".", "ranges", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajectories", "[", "i", "]", "=", "time_grid_sol", ".", "T", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "trajectories", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.get_noisy_measurments": [[96, 108], ["numpy.zeros", "range", "numpy.expand_dims", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "full_trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "full_trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "noisy_measurements", "[", "i", "]", "=", "full_trajs", "[", "i", ",", ":", ",", "1", "]", "+", "np", ".", "random", ".", "randn", "(", "t_sim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SpikingNeuron.SpikingNeuron.gen_labels": [[110, 133], ["numpy.empty", "range", "scipy.integrate.solve_ivp", "numpy.all", "len", "numpy.array", "scipy.integrate.solve_ivp", "numpy.hstack", "numpy.hstack"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "16", ")", ":", "\n", "\n", "\t\t", "n_states", ",", "state_dim", "=", "states", ".", "shape", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\t\t\t", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "y0", "=", "states", "[", "i", "]", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "tspan", ",", "y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "\n", "global_sol", "=", "sol", ".", "y", "\n", "global_t", "=", "sol", ".", "t", "\n", "\n", "while", "len", "(", "sol", ".", "t_events", "[", "0", "]", ")", ">", "0", ":", "\n", "\t\t\t\t", "new_tspan", "=", "[", "sol", ".", "t_events", "[", "0", "]", ",", "future_horizon", "]", "\n", "new_y0", "=", "np", ".", "array", "(", "[", "self", ".", "c", ",", "self", ".", "d", "+", "sol", ".", "y_events", "[", "0", "]", "[", "0", ",", "1", "]", "]", ")", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "new_tspan", ",", "new_y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "global_sol", "[", "0", "]", ">=", "-", "68.5", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqSE.FF_SeqSE.__init__": [[6, 14], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "FF_SeqSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqSE.FF_SeqSE.forward": [[15, 37], ["SeqSE.FF_SeqSE.fc1", "SeqSE.FF_SeqSE.fc2", "SeqSE.FF_SeqSE.fc3", "SeqSE.FF_SeqSE.fc4", "SeqSE.FF_SeqSE.fc5", "SeqSE.FF_SeqSE.out", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "torch", ".", "tanh", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqSE.Conv_SeqSE.__init__": [[41, 65], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", ",", "nb_filters", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "Conv_SeqSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "keep_prob", "=", "0.8", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "input_size", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer2", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer3", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer4", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer5", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "output_size", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SeqSE.Conv_SeqSE.forward": [[68, 77], ["SeqSE.Conv_SeqSE.layer1", "SeqSE.Conv_SeqSE.layer2", "SeqSE.Conv_SeqSE.layer3", "SeqSE.Conv_SeqSE.layer4", "SeqSE.Conv_SeqSE.layer5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.twt_diff_eq": [[4, 24], ["if_else", "if_else", "if_else", "vertcat", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["def", "twt_diff_eq", "(", "y", ")", ":", "\n", "\t", "a", "=", "0.5", "\n", "b", "=", "0.5", "\n", "g", "=", "9.8", "\n", "A", "=", "[", "2", ",", "4", ",", "3", "]", "\n", "q", "=", "[", "5", ",", "3", ",", "4", "]", "\n", "Lm", "=", "5", "\n", "LM", "=", "5", "\n", "\n", "P0", "=", "if_else", "(", "y", "[", "0", "]", ">", "LM", ",", "0.", ",", "1.", ")", "#if_else(y[0]<=Lm, 1, if_else(y[0]> LM, 0, 1))", "\n", "P1", "=", "if_else", "(", "y", "[", "1", "]", ">", "LM", ",", "0.", ",", "1.", ")", "#if_else(y[1]<=Lm, 1, if_else(y[1]> LM, 0, 1))", "\n", "P2", "=", "if_else", "(", "y", "[", "2", "]", ">", "LM", ",", "0.", ",", "1.", ")", "#if_else(y[2]<=Lm, 1, if_else(y[2]> LM, 0, 1))", "\n", "\n", "dydt", "=", "vertcat", "(", "\n", "(", "q", "[", "0", "]", "*", "P0", "-", "b", "*", "np", ".", "sqrt", "(", "2", "*", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", ")", "/", "A", "[", "0", "]", ",", "\n", "(", "q", "[", "1", "]", "*", "P1", "+", "a", "*", "np", ".", "sqrt", "(", "2", "*", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", "-", "b", "*", "np", ".", "sqrt", "(", "2", "*", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", ")", "/", "A", "[", "1", "]", ",", "\n", "(", "q", "[", "2", "]", "*", "P2", "+", "a", "*", "np", ".", "sqrt", "(", "2", "*", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", "-", "b", "*", "np", ".", "sqrt", "(", "2", "*", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "2", "]", ")", ")", "/", "A", "[", "2", "]", "\n", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.sn_diff_eq": [[26, 40], ["if_else", "vertcat", "vertcat"], "function", ["None"], ["", "def", "sn_diff_eq", "(", "y", ")", ":", "\n", "\t", "a", "=", "0.02", "\n", "b", "=", "0.2", "\n", "c", "=", "-", "65", "\n", "d", "=", "8", "\n", "I", "=", "40", "\n", "\n", "y", "=", "if_else", "(", "y", "[", "0", "]", ">=", "30", ",", "vertcat", "(", "c", ",", "y", "[", "1", "]", "+", "d", ")", ",", "y", ")", "\n", "\n", "dydt", "=", "vertcat", "(", "\n", "0.04", "*", "y", "[", "0", "]", "**", "2", "+", "5", "*", "y", "[", "0", "]", "+", "140", "-", "y", "[", "1", "]", "+", "I", ",", "\n", "a", "*", "(", "b", "*", "y", "[", "0", "]", "-", "y", "[", "1", "]", ")", "\n", ")", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.HJ_params": [[41, 78], ["None"], "function", ["None"], ["", "def", "HJ_params", "(", "BW", "=", "75", ")", ":", "\n", "\n", "\t", "p", "=", "{", "}", "\n", "p", "[", "\"BW\"", "]", "=", "BW", "\n", "p", "[", "\"ka_int\"", "]", "=", "0.025", "\n", "p", "[", "\"EGP_0\"", "]", "=", "0.0158", "*", "BW", "\n", "p", "[", "\"F_01\"", "]", "=", "0.0104", "*", "BW", "\n", "p", "[", "\"V_G\"", "]", "=", "0.1797", "*", "BW", "\n", "p", "[", "\"k12\"", "]", "=", "0.0793", "\n", "p", "[", "\"R_thr\"", "]", "=", "9", "\n", "p", "[", "\"R_cl\"", "]", "=", "0.003", "\n", "p", "[", "\"Ag\"", "]", "=", "0.8121", "\n", "p", "[", "\"tMaxg\"", "]", "=", "48.8385", "\n", "p", "[", "\"Ug_ceil\"", "]", "=", "0.0275", "*", "BW", "\n", "p", "[", "\"K\"", "]", "=", "0.7958", "\n", "p", "[", "\"kia1\"", "]", "=", "0.0113", "\n", "p", "[", "\"kia2\"", "]", "=", "0.0197", "\n", "p", "[", "\"k_e\"", "]", "=", "0.1735", "\n", "p", "[", "\"Vmax_LD\"", "]", "=", "2.9639", "\n", "p", "[", "\"km_LD\"", "]", "=", "47.5305", "\n", "p", "[", "\"ka_1\"", "]", "=", "0.007", "\n", "p", "[", "\"ka_2\"", "]", "=", "0.0331", "\n", "p", "[", "\"ka_3\"", "]", "=", "0.0308", "\n", "p", "[", "\"SIT\"", "]", "=", "0.0046", "\n", "p", "[", "\"SID\"", "]", "=", "0.0006", "\n", "p", "[", "\"SIE\"", "]", "=", "0.0384", "\n", "p", "[", "\"V_I\"", "]", "=", "0.1443", "*", "BW", "\n", "p", "[", "\"M_PGU_f\"", "]", "=", "1", "/", "35", "\n", "p", "[", "\"M_HGP_f\"", "]", "=", "1", "/", "155", "\n", "p", "[", "\"M_PIU_f\"", "]", "=", "2.4", "\n", "p", "[", "\"PGUA_rate\"", "]", "=", "1", "/", "30", "\n", "p", "[", "\"PGUA_a\"", "]", "=", "0.006", "\n", "p", "[", "\"PGUA_b\"", "]", "=", "1.2264", "\n", "p", "[", "\"PGUA_c\"", "]", "=", "-", "10.1952", "\n", "p", "[", "\"PVO2max_rate\"", "]", "=", "5", "/", "3", "\n", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.steady_PGUA_from_PVO2max": [[79, 84], ["None"], "function", ["None"], ["", "def", "steady_PGUA_from_PVO2max", "(", "PVO2max", ",", "params", ")", ":", "\n", "\n", "\t", "PGUA_ss", "=", "params", "[", "\"PGUA_a\"", "]", "*", "PVO2max", "**", "2", "+", "params", "[", "\"PGUA_b\"", "]", "*", "PVO2max", "+", "params", "[", "\"PGUA_c\"", "]", "\n", "\n", "return", "PGUA_ss", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.ap_diff_eq": [[85, 235], ["mhe_utils.HJ_params", "if_else", "if_else", "if_else", "mhe_utils.steady_PGUA_from_PVO2max", "vertcat"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.HJ_params", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.mhe_utils.steady_PGUA_from_PVO2max"], ["", "def", "ap_diff_eq", "(", "y", ")", ":", "\n", "\t", "'''\n\t% y: state variables -- vector of length 14\n\t% params: parameters\n\t% dists: disturbances at t (vector of length 3)\n\t'''", "\n", "#y0 =  np.array([2.79168049e-02, 3.64132238e-03, 2.33044632e-01, 0.00000000e+00, 0.00000000e+00, 7.80000000e+00,0.00000000e+00, 8.00000000e+00])", "\n", "\n", "params", "=", "HJ_params", "(", ")", "\n", "\n", "basal_iir", "=", "16.0146096438259", "\n", "\n", "u", "=", "basal_iir", "\n", "\n", "#dydt = np.zeros(14)", "\n", "\n", "## extract disturbances", "\n", "# ingested CHO", "\n", "D", "=", "0", "\n", "# active muscular mass at current time", "\n", "MM", "=", "0", "\n", "# max oxygen at current time", "\n", "targetPVo2max", "=", "8", "\n", "\n", "## extract variables", "\n", "\n", "# glucose kinetics", "\n", "# masses of glucose in the accessible and non-accessible compartments respectively, in mmol.", "\n", "Q1", "=", "y", "[", "0", "]", "\n", "Q2", "=", "y", "[", "1", "]", "\n", "\n", "# Measured glucose concentration", "\n", "G", "=", "Q1", "/", "params", "[", "\"V_G\"", "]", "\n", "\n", "# corrected non-insulin mediated glucose uptake [Hovorka04]", "\n", "#if G >= 4.5:", "\n", "#\tF_01c = params[\"F_01\"]", "\n", "#else:", "\n", "#\tF_01c = params[\"F_01\"]*G/4.5", "\n", "F_01c", "=", "if_else", "(", "G", ">=", "4.5", ",", "params", "[", "\"F_01\"", "]", ",", "params", "[", "\"F_01\"", "]", "*", "G", "/", "4.5", ")", "\n", "#if G >= 9:", "\n", "#\tF_R = 0.003*(G-9)*params[\"V_G\"]", "\n", "#else:", "\n", "#\tF_R = 0", "\n", "F_R", "=", "if_else", "(", "G", ">=", "9", ",", "0.003", "*", "(", "G", "-", "9", ")", "*", "params", "[", "\"V_G\"", "]", ",", "0", ")", "\n", "# insulin kinetics", "\n", "# insulin mass through the slow absorption pathway,", "\n", "Q1a", "=", "y", "[", "2", "]", "\n", "Q2i", "=", "y", "[", "3", "]", "\n", "#faster channel for insulin absorption", "\n", "Q1b", "=", "y", "[", "4", "]", "\n", "#plasma insulin mass", "\n", "Q3", "=", "y", "[", "5", "]", "\n", "#plasma insulin concentration", "\n", "I", "=", "Q3", "/", "params", "[", "\"V_I\"", "]", "\n", "\n", "# insulin dynamics", "\n", "# x1 (min-1), x2 (min-1) and x3 (unitless) represent ", "\n", "# the effect of insulin on glucose distribution, ", "\n", "# glucose disposal and suppression of endogenous glucose ", "\n", "# production, respectively", "\n", "x1", "=", "y", "[", "6", "]", "\n", "x2", "=", "y", "[", "7", "]", "\n", "x3", "=", "y", "[", "8", "]", "\n", "\n", "k_b1", "=", "params", "[", "\"ka_1\"", "]", "*", "params", "[", "\"SIT\"", "]", "\n", "k_b2", "=", "params", "[", "\"ka_2\"", "]", "*", "params", "[", "\"SID\"", "]", "\n", "k_b3", "=", "params", "[", "\"ka_3\"", "]", "*", "params", "[", "\"SIE\"", "]", "\n", "\n", "# Subsystem of glucose absorption from gut", "\n", "# Glucose masses in the accessible and nonaccessible compartments", "\n", "G1", "=", "y", "[", "9", "]", "\n", "G2", "=", "y", "[", "10", "]", "\n", "\n", "#tmax = np.maximum(params[\"tMaxg\"],G2/params[\"Ug_ceil\"])", "\n", "tmax", "=", "if_else", "(", "params", "[", "\"tMaxg\"", "]", ">=", "G2", "/", "params", "[", "\"Ug_ceil\"", "]", ",", "params", "[", "\"tMaxg\"", "]", ",", "G2", "/", "params", "[", "\"Ug_ceil\"", "]", ")", "\n", "U_g", "=", "G2", "/", "tmax", "\n", "\n", "# interstitial glucose", "\n", "C", "=", "y", "[", "11", "]", "\n", "\n", "# exercise ", "\n", "PGUA", "=", "y", "[", "12", "]", "\n", "PVO2max", "=", "y", "[", "13", "]", "\n", "M_PGU", "=", "1", "+", "PGUA", "*", "MM", "*", "params", "[", "\"M_PGU_f\"", "]", "\n", "M_PIU", "=", "1", "+", "MM", "*", "params", "[", "\"M_PIU_f\"", "]", "\n", "M_HGP", "=", "1", "+", "PGUA", "*", "MM", "*", "params", "[", "\"M_HGP_f\"", "]", "\n", "#PGUA_ss = p.PGUA_a*PVO2max^2 + p.PGUA_b*PVO2max + p.PGUA_c;", "\n", "PGUA_ss", "=", "steady_PGUA_from_PVO2max", "(", "PVO2max", ",", "params", ")", "\n", "\n", "## compute change rates", "\n", "# use flow variables to avoid duplicated computation", "\n", "\n", "# Glucose kinetics", "\n", "Q1_to_Q2_flow", "=", "x1", "*", "Q1", "-", "params", "[", "\"k12\"", "]", "*", "Q2", "\n", "Q1dt", "=", "-", "F_01c", "-", "Q1_to_Q2_flow", "-", "F_R", "+", "U_g", "+", "params", "[", "\"EGP_0\"", "]", "*", "(", "1", "-", "x3", ")", "\n", "Q2dt", "=", "Q1_to_Q2_flow", "-", "x2", "*", "Q2", "\n", "\n", "## insulin kinetics", "\n", "Q1a_to_Q2i_flow", "=", "params", "[", "\"kia1\"", "]", "*", "Q1a", "\n", "Q2i_to_Q3_flow", "=", "params", "[", "\"kia1\"", "]", "*", "Q2i", "\n", "Q1b_to_Q3_flow", "=", "params", "[", "\"kia2\"", "]", "*", "Q1b", "\n", "###---", "\n", "insulin_ratio", "=", "params", "[", "\"K\"", "]", "*", "u", "\n", "\n", "Q1adt", "=", "insulin_ratio", "-", "Q1a_to_Q2i_flow", "-", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1a", "/", "(", "params", "[", "\"km_LD\"", "]", "+", "Q1a", ")", "\n", "Q2idt", "=", "Q1a_to_Q2i_flow", "-", "Q2i_to_Q3_flow", "\n", "####----", "\n", "Q1bdt", "=", "u", "-", "insulin_ratio", "-", "Q1b_to_Q3_flow", "-", "params", "[", "\"Vmax_LD\"", "]", "*", "Q1b", "/", "(", "params", "[", "\"km_LD\"", "]", "+", "Q1b", ")", "\n", "Q3dt", "=", "Q2i_to_Q3_flow", "+", "Q1b_to_Q3_flow", "-", "params", "[", "\"k_e\"", "]", "*", "Q3", "\n", "\n", "## insulin dynamics", "\n", "x1dt", "=", "-", "params", "[", "\"ka_1\"", "]", "*", "x1", "+", "M_PGU", "*", "M_PIU", "*", "k_b1", "*", "I", "\n", "x2dt", "=", "-", "params", "[", "\"ka_2\"", "]", "*", "x2", "+", "M_PGU", "*", "M_PIU", "*", "k_b2", "*", "I", "\n", "x3dt", "=", "-", "params", "[", "\"ka_3\"", "]", "*", "x3", "+", "M_HGP", "*", "k_b3", "*", "I", "\n", "\n", "\n", "## Glucose absorption from gut", "\n", "G1_to_G2_flow", "=", "G1", "/", "tmax", "\n", "G1dt", "=", "-", "G1_to_G2_flow", "+", "params", "[", "\"Ag\"", "]", "*", "D", "\n", "G2dt", "=", "G1_to_G2_flow", "-", "G2", "/", "tmax", "\n", "\n", "\n", "## interstitial glucose", "\n", "Cdt", "=", "params", "[", "\"ka_int\"", "]", "*", "(", "G", "-", "C", ")", "\n", "\n", "\n", "## exercise", "\n", "PGUAdt", "=", "-", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA", "+", "params", "[", "\"PGUA_rate\"", "]", "*", "PGUA_ss", "\n", "\n", "PVO2maxdt", "=", "-", "params", "[", "\"PVO2max_rate\"", "]", "*", "PVO2max", "+", "params", "[", "\"PVO2max_rate\"", "]", "*", "targetPVo2max", "\n", "\n", "dydt", "=", "vertcat", "(", "\n", "Q1dt", ",", "\n", "Q2dt", ",", "\n", "Q1adt", ",", "\n", "Q2idt", ",", "\n", "Q1bdt", ",", "\n", "Q3dt", ",", "\n", "x1dt", ",", "\n", "x2dt", ",", "\n", "x3dt", ",", "\n", "G1dt", ",", "\n", "G2dt", ",", "\n", "Cdt", ",", "\n", "PGUAdt", ",", "\n", "PVO2maxdt", "\n", ")", "\n", "\n", "return", "dydt", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.label_correct_incorrect_pred": [[8, 18], ["len", "numpy.ones", "range"], "function", ["None"], ["def", "label_correct_incorrect_pred", "(", "predicted_class", ",", "real_class", ")", ":", "\n", "\n", "\t", "n_points", "=", "len", "(", "predicted_class", ")", "# 1 = correct label; -1 wrong label", "\n", "\n", "error_indexes", "=", "np", ".", "ones", "(", "n_points", ")", "\n", "for", "j", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t", "if", "real_class", "[", "j", "]", "!=", "predicted_class", "[", "j", "]", ":", "\n", "\t\t\t", "error_indexes", "[", "j", "]", "=", "-", "1", "\n", "\n", "", "", "return", "error_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.train_svc_query_strategy": [[20, 28], ["time.time", "sklearn.svm.SVC", "svm.SVC.fit", "print", "time.time"], "function", ["None"], ["", "def", "train_svc_query_strategy", "(", "kernel_type", ",", "unc_input", ",", "error_labels", ")", ":", "\n", "\n", "\t", "start", "=", "time", ".", "time", "(", ")", "\n", "wclf", "=", "svm", ".", "SVC", "(", "kernel", "=", "kernel_type", ",", "gamma", "=", "'scale'", ",", "class_weight", "=", "'balanced'", ",", "verbose", "=", "False", ",", "tol", "=", "1e-10", ",", "decision_function_shape", "=", "'ovo'", ")", "#max_iter=100000,", "\n", "wclf", ".", "fit", "(", "unc_input", ",", "error_labels", ")", "\n", "print", "(", "\"Time required to train the SVC rejetion rule: \"", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "return", "wclf", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.apply_svc_query_strategy": [[30, 32], ["trained_svc.predict"], "function", ["None"], ["", "def", "apply_svc_query_strategy", "(", "trained_svc", ",", "unc_input", ")", ":", "\n", "\t", "return", "trained_svc", ".", "predict", "(", "unc_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.PONSC_active_sample_query": [[34, 55], ["model_class.gen_trajectories", "model_class.get_noisy_measurments", "numpy.empty", "range", "utility_functions.apply_svc_query_strategy", "model_class.gen_labels", "conf_pred.compute_confidence_credibility", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility"], ["", "def", "PONSC_active_sample_query", "(", "pool_size", ",", "model_class", ",", "conf_pred", ",", "trained_svc", ",", "dataset", ")", ":", "\n", "# For PO NSC", "\n", "\n", "# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n", "pool_of_meas_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_meas", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "n_batches", "=", "pool_size", "//", "5000", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "5000", ":", "(", "i", "+", "1", ")", "*", "5000", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", "[", "i", "*", "5000", ":", "(", "i", "+", "1", ")", "*", "5000", "]", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_inputs_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n", "unc_labels", "=", "model_class", ".", "gen_labels", "(", "unc_trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "return", "unc_inputs_scaled", ",", "unc_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.Comb_PONSC_active_sample_query": [[57, 86], ["model_class.gen_trajectories", "model_class.get_noisy_measurments", "se_fnc", "numpy.empty", "range", "utility_functions.apply_svc_query_strategy", "model_class.gen_labels", "numpy.transpose", "conf_pred.compute_confidence_credibility"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility"], ["", "def", "Comb_PONSC_active_sample_query", "(", "pool_size", ",", "model_class", ",", "conf_pred", ",", "trained_svc", ",", "se_fnc", ",", "dataset", ")", ":", "\n", "# For Combined PO NSC", "\n", "\n", "# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_trajs_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_trajs", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n", "pool_of_meas_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_meas", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "pool_of_estim_states", "=", "se_fnc", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "# on estimate states", "\n", "BS", "=", "1000", "\n", "n_batches", "=", "pool_size", "//", "BS", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "pool_of_estim_states", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", ")", "\n", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_trajs_scaled", "=", "pool_of_trajs_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_meas_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n", "unc_labels", "=", "model_class", ".", "gen_labels", "(", "unc_trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "return", "unc_meas_scaled", ",", "unc_trajs_scaled", ",", "unc_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.Comb2_PONSC_active_sample_query": [[87, 113], ["model_class.gen_trajectories", "model_class.get_noisy_measurments", "numpy.empty", "range", "utility_functions.apply_svc_query_strategy", "model_class.gen_labels", "conf_pred.compute_confidence_credibility", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility"], ["", "def", "Comb2_PONSC_active_sample_query", "(", "pool_size", ",", "model_class", ",", "conf_pred", ",", "trained_svc", ",", "se_fnc", ",", "dataset", ")", ":", "\n", "# For Combined PO NSC", "\n", "\n", "# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_trajs_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_trajs", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n", "pool_of_meas_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_meas", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "#pool_of_estim_states = se_fnc(np.transpose(pool_of_meas_scaled,(0,2,1)))", "\n", "BS", "=", "1000", "\n", "n_batches", "=", "pool_size", "//", "BS", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_trajs_scaled", "=", "pool_of_trajs_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_meas_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n", "unc_labels", "=", "model_class", ".", "gen_labels", "(", "unc_trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "return", "unc_meas_scaled", ",", "unc_trajs_scaled", ",", "unc_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.compute_rejection_rate": [[115, 121], ["len", "len"], "function", ["None"], ["", "def", "compute_rejection_rate", "(", "estimated_errors", ")", ":", "\n", "\n", "\t", "nb_points", "=", "len", "(", "estimated_errors", ")", "\n", "nb_rej", "=", "len", "(", "estimated_errors", "[", "(", "estimated_errors", "<", "0", ")", "]", ")", "\n", "\n", "return", "nb_rej", "/", "nb_points", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.compute_error_detection_rate": [[123, 136], ["len", "len", "range"], "function", ["None"], ["", "def", "compute_error_detection_rate", "(", "estim_errors", ",", "errors", ")", ":", "\n", "\n", "\t", "nb_errors", "=", "len", "(", "errors", "[", "(", "errors", "<", "0", ")", "]", ")", "\n", "nb_points", "=", "len", "(", "errors", ")", "\n", "\n", "nb_detected", "=", "0", "\n", "for", "i", "in", "range", "(", "nb_points", ")", ":", "\n", "\t\t", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "errors", "[", "i", "]", "==", "-", "1", ")", ":", "\n", "\t\t\t", "nb_detected", "+=", "1", "\n", "\n", "", "", "detection_rate", "=", "nb_detected", "/", "nb_errors", "\n", "\n", "return", "nb_detected", ",", "nb_errors", ",", "detection_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.label_fp_fn": [[138, 151], ["len", "numpy.zeros", "numpy.zeros", "range"], "function", ["None"], ["", "def", "label_fp_fn", "(", "predicted_class", ",", "real_class", ")", ":", "\n", "\n", "\t", "n_points", "=", "len", "(", "predicted_class", ")", "# 1 = correct label; -1 wrong label", "\n", "\n", "fp_indexes", "=", "np", ".", "zeros", "(", "n_points", ")", "\n", "fn_indexes", "=", "np", ".", "zeros", "(", "n_points", ")", "\n", "for", "j", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t", "if", "real_class", "[", "j", "]", "==", "1", "and", "predicted_class", "[", "j", "]", "==", "0", ":", "\n", "\t\t\t", "fp_indexes", "[", "j", "]", "=", "1", "\n", "", "if", "real_class", "[", "j", "]", "==", "0", "and", "predicted_class", "[", "j", "]", "==", "1", ":", "\n", "\t\t\t", "fn_indexes", "[", "j", "]", "=", "1", "\n", "\n", "", "", "return", "fp_indexes", ",", "fn_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.compute_fp_fn_detection_rate": [[153, 177], ["numpy.sum", "numpy.sum", "print", "len", "range", "print", "print"], "function", ["None"], ["", "def", "compute_fp_fn_detection_rate", "(", "estim_errors", ",", "FPs", ",", "FNs", ")", ":", "\n", "\n", "\t", "nb_fp", "=", "np", ".", "sum", "(", "FPs", ")", "\n", "nb_fn", "=", "np", ".", "sum", "(", "FNs", ")", "\n", "\n", "print", "(", "\"tot nb of errors = \"", ",", "nb_fp", "+", "nb_fn", ")", "\n", "nb_points", "=", "len", "(", "estim_errors", ")", "\n", "\n", "nb_detected_fp", "=", "0", "\n", "nb_detected_fn", "=", "0", "\n", "for", "i", "in", "range", "(", "nb_points", ")", ":", "\n", "\t\t", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "FPs", "[", "i", "]", "==", "1", ")", ":", "\n", "\t\t\t", "nb_detected_fp", "+=", "1", "\n", "", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "FNs", "[", "i", "]", "==", "1", ")", ":", "\n", "\t\t\t", "nb_detected_fn", "+=", "1", "\n", "\n", "", "", "fp_detection_rate", "=", "nb_detected_fp", "/", "nb_fp", "\n", "fn_detection_rate", "=", "nb_detected_fn", "/", "nb_fn", "\n", "\n", "res_tuple", "=", "(", "nb_detected_fp", ",", "nb_fp", ",", "nb_detected_fn", ",", "nb_fn", ")", "\n", "print", "(", "\"nb_detected_fp/nb_fp = {}/{}\"", ".", "format", "(", "nb_detected_fp", ",", "nb_fp", ")", ")", "\n", "print", "(", "\"nb_detected_fn/nb_fn = {}/{}\"", ".", "format", "(", "nb_detected_fn", ",", "nb_fn", ")", ")", "\n", "\n", "return", "fp_detection_rate", ",", "fn_detection_rate", ",", "res_tuple", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.compute_accuracy": [[179, 188], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "function", ["None"], ["", "def", "compute_accuracy", "(", "real_label", ",", "hypothesis", ")", ":", "\n", "\n", "\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.compute_np_accuracy": [[189, 198], ["numpy.argmax", "range", "len", "len"], "function", ["None"], ["", "def", "compute_np_accuracy", "(", "real_label", ",", "hypothesis", ")", ":", "\n", "\n", "\t", "pred_label", "=", "np", ".", "argmax", "(", "hypothesis", ",", "axis", "=", "1", ")", "\n", "acc", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "real_label", ")", ")", ":", "\n", "\t\t", "if", "pred_label", "[", "i", "]", "==", "real_label", "[", "i", "]", ":", "\n", "\t\t\t", "acc", "+=", "1", "\n", "", "", "accuracy", "=", "acc", "/", "len", "(", "real_label", ")", "\n", "return", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.plot_test_results": [[200, 215], ["os.makedirs", "numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].plot", "axs[].plot"], "function", ["None"], ["", "def", "plot_test_results", "(", "dataset", ",", "estim_states", ",", "path", ")", ":", "\n", "\n", "\t", "plots_path", "=", "path", "+", "\"/SeqSE_Plots\"", "\n", "os", ".", "makedirs", "(", "plots_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "tspan", "=", "np", ".", "arange", "(", "dataset", ".", "traj_len", ")", "\n", "for", "i", "in", "range", "(", "dataset", ".", "n_val_points", ")", ":", "\n", "\t\t", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "dataset", ".", "x_dim", ",", "figsize", "=", "(", "6", ",", "dataset", ".", "x_dim", "*", "2", ")", ")", "\n", "for", "j", "in", "range", "(", "dataset", ".", "x_dim", ")", ":", "\n", "\t\t\t", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "dataset", ".", "X_val", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"blue\"", ")", "\n", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "estim_states", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"orange\"", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "plots_path", "+", "\"/Seq_SE_n{}.png\"", ".", "format", "(", "i", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.utility_functions.plot_test_results_w_coverage": [[216, 231], ["os.makedirs", "numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].scatter", "axs[].plot", "axs[].fill_between"], "function", ["None"], ["", "", "def", "plot_test_results_w_coverage", "(", "dataset", ",", "estim_states", ",", "width", ",", "path", ")", ":", "\n", "\n", "\t", "plots_path", "=", "path", "+", "\"/SeqSE_Plots\"", "\n", "os", ".", "makedirs", "(", "plots_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "tspan", "=", "np", ".", "arange", "(", "dataset", ".", "traj_len", ")", "\n", "for", "i", "in", "range", "(", "dataset", ".", "n_val_points", ")", ":", "\n", "\t\t", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "dataset", ".", "x_dim", ",", "figsize", "=", "(", "6", ",", "dataset", ".", "x_dim", "*", "2", ")", ")", "\n", "for", "j", "in", "range", "(", "dataset", ".", "x_dim", ")", ":", "\n", "\t\t\t", "axs", "[", "j", "]", ".", "scatter", "(", "tspan", ",", "dataset", ".", "X_val", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"blue\"", ",", "s", "=", "12", ")", "\n", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "estim_states", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"orange\"", ")", "\n", "axs", "[", "j", "]", ".", "fill_between", "(", "tspan", ",", "estim_states", "[", "i", ",", ":", ",", "j", "]", "-", "width", ",", "estim_states", "[", "i", ",", ":", ",", "j", "]", "+", "width", ",", "color", "=", "\"orange\"", ",", "alpha", "=", "0.2", ")", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "plots_path", "+", "\"/Seq_SE_n{}_with_coverage.png\"", ".", "format", "(", "i", ")", ")", "\n", "plt", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_nsc.Train_StochNSC.__init__": [[15, 26], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "dataset", ",", "net_type", "=", "\"FF\"", ",", "fine_tuning_flag", "=", "False", ",", "nsc_idx", "=", "None", ",", "se_idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "fine_tuning_flag", "=", "fine_tuning_flag", "\n", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "nsc_idx", "=", "nsc_idx", "[", "0", "]", "\n", "self", ".", "nsc_n_prev_epochs", "=", "nsc_idx", "[", "1", "]", "\n", "self", ".", "se_idx", "=", "se_idx", "[", "0", "]", "\n", "self", ".", "se_n_prev_epochs", "=", "se_idx", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_nsc.Train_StochNSC.compute_accuracy": [[29, 37], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_nsc.Train_StochNSC.train": [[39, 162], ["print", "os.makedirs", "train_stoch_nsc.Train_StochNSC.dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "torch.optim.Adam", "int", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "torch.save", "str", "train_stoch_nsc.Train_StochNSC.nsc.cuda", "train_stoch_nsc.Train_StochNSC.se.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_stoch_nsc.Train_StochNSC.nsc.parameters", "train_stoch_nsc.Train_StochNSC.se.parameters", "print", "range", "losses.append", "accuracies.append", "numpy.arange", "numpy.arange", "numpy.random.randint", "torch.load", "train_stoch_nsc.Train_StochNSC.nsc.eval", "torch.load", "train_stoch_nsc.Train_StochNSC.se.eval", "NSC.FF_NSC", "SE.FF_SE", "train_stoch_nsc.Train_StochNSC.dataset.generate_mini_batches", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_nsc.Train_StochNSC.se", "train_stoch_nsc.Train_StochNSC.nsc", "comb_loss_fnc1.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "train_stoch_nsc.Train_StochNSC.dataset.generate_mini_batches", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_nsc.Train_StochNSC.se", "train_stoch_nsc.Train_StochNSC.nsc", "comb_loss_fnc2.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "numpy.mean", "numpy.mean", "int", "int", "int", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_nsc.Train_StochNSC.compute_accuracy", "comb_loss_fnc1.item", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_nsc.Train_StochNSC.compute_accuracy", "comb_loss_fnc2.item", "print", "int", "nn.CrossEntropyLoss.", "nn.MSELoss.", "nn.CrossEntropyLoss.", "nn.MSELoss."], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\t\t", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "self", ".", "nsc_idx", "+", "\"+\"", "+", "self", ".", "se_idx", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_StochNSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t\t", "self", ".", "nsc_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_NSC_results/ID_\"", "+", "self", ".", "nsc_idx", "\n", "self", ".", "se_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SE_results/ID_\"", "+", "self", ".", "se_idx", "\n", "\n", "self", ".", "nsc", "=", "torch", ".", "load", "(", "self", ".", "nsc_path", "+", "\"/nsc_{}epochs.pt\"", ".", "format", "(", "self", ".", "nsc_n_prev_epochs", ")", ")", "\n", "self", ".", "nsc", ".", "eval", "(", ")", "\n", "self", ".", "se", "=", "torch", ".", "load", "(", "self", ".", "se_path", "+", "\"/state_estimator_{}epochs.pt\"", ".", "format", "(", "self", ".", "se_n_prev_epochs", ")", ")", "\n", "self", ".", "se", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "n_hidden", "=", "100", "\n", "self", ".", "nsc", "=", "FF_NSC", "(", "input_size", "=", "int", "(", "self", ".", "dataset", ".", "x_dim", ")", ")", "\n", "self", ".", "se", "=", "FF_SE", "(", "int", "(", "self", ".", "dataset", ".", "y_dim", "*", "self", ".", "dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "nsc", ".", "cuda", "(", ")", "\n", "self", ".", "se", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "se_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "optimizer_nsc", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "optimizer_se", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "nsc_net_path", "=", "self", ".", "results_path", "+", "\"/comb_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "se_net_path", "=", "self", ".", "results_path", "+", "\"/comb_se_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "w", "=", "0.5", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\t\t\t", "print", "(", "\"Epoch nb. \"", ",", "epoch", "+", "1", ",", "\"/\"", ",", "n_epochs", ")", "\n", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "\t\t\t\t", "X1", ",", "Y1", ",", "T1", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "\n", "X1t", "=", "Variable", "(", "FloatTensor", "(", "X1", ")", ")", "\n", "Y1t", "=", "Variable", "(", "FloatTensor", "(", "Y1", ")", ")", "\n", "T1t", "=", "Variable", "(", "LongTensor", "(", "T1", ")", ")", "\n", "\n", "optimizer_se", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim1", "=", "self", ".", "se", "(", "Y1t", ")", "\n", "label_hypothesis1", "=", "self", ".", "nsc", "(", "state_estim1", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc1", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis1", ",", "T1t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim1", ",", "X1t", ")", "\n", "comb_loss_fnc1", ".", "backward", "(", ")", "\n", "\n", "optimizer_se", ".", "step", "(", ")", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T1t", ",", "label_hypothesis1", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc1", ".", "item", "(", ")", ")", "\n", "\n", "X2", ",", "Y2", ",", "T2", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "\n", "X2t", "=", "Variable", "(", "FloatTensor", "(", "X2", ")", ")", "\n", "Y2t", "=", "Variable", "(", "FloatTensor", "(", "Y2", ")", ")", "\n", "T2t", "=", "Variable", "(", "LongTensor", "(", "T2", ")", ")", "\n", "\n", "optimizer_nsc", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim2", "=", "self", ".", "se", "(", "Y2t", ")", "\n", "label_hypothesis2", "=", "self", ".", "nsc", "(", "state_estim2", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc2", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis2", ",", "T2t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim2", ",", "X2t", ")", "\n", "comb_loss_fnc2", ".", "backward", "(", ")", "\n", "\n", "optimizer_nsc", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T2t", ",", "label_hypothesis2", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc2", ".", "item", "(", ")", ")", "\n", "\n", "if", "i", "%", "50", "==", "0", ":", "\n", "\t\t\t\t\t", "print", "(", "\"Epoch= {},\\t batch = {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "i", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "\n", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_losses.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_accuracies.png\"", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "nsc", ",", "self", ".", "nsc_net_path", ")", "\n", "torch", ".", "save", "(", "self", ".", "se", ",", "self", ".", "se_net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_nsc.Train_StochNSC.generate_test_results": [[164, 182], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "train_stoch_nsc.Train_StochNSC.se", "train_stoch_nsc.Train_StochNSC.nsc", "train_stoch_nsc.Train_StochNSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "FloatTensor", "FloatTensor", "LongTensor", "str"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "X_test_scaled", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "Y_test_scaled", ")", ")", "\n", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_test", ")", ")", "\n", "\n", "state_estimates", "=", "self", ".", "se", "(", "Ytest", ")", "\n", "label_predictions", "=", "self", ".", "nsc", "(", "state_estimates", ")", "\n", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "label_predictions", ")", "\n", "\n", "print", "(", "\"Combined Test Accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SE.FF_SE.__init__": [[7, 15], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "FF_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.SE.FF_SE.forward": [[16, 39], ["SE.FF_SE.fc1", "SE.FF_SE.fc2", "SE.FF_SE.fc3", "SE.FF_SE.fc4", "SE.FF_SE.fc5", "SE.FF_SE.out", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "torch", ".", "tanh", "(", "output", ")", "\n", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.run_cp_regression.split_train_calibration": [[6, 18], ["np.random.permutation", "int"], "function", ["None"], ["def", "split_train_calibration", "(", "full_input", ",", "full_output", ",", "split_rate", "=", "0.7", ")", ":", "\n", "\t", "n_full_points", "=", "full_input", ".", "shape", "[", "0", "]", "\n", "perm", "=", "np", ".", "random", ".", "permutation", "(", "n_full_points", ")", "\n", "split_index", "=", "int", "(", "n_full_points", "*", "split_rate", ")", "\n", "\n", "input_test", "=", "full_input", "[", "perm", "[", ":", "split_index", "]", "]", "\n", "output_test", "=", "full_output", "[", "perm", "[", ":", "split_index", "]", "]", "\n", "\n", "input_cal", "=", "full_input", "[", "perm", "[", "split_index", ":", "]", "]", "\n", "output_cal", "=", "full_output", "[", "perm", "[", "split_index", ":", "]", "]", "\n", "\n", "return", "input_test", ",", "output_test", ",", "input_cal", ",", "output_cal", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_seq_nsc.Train_StochSeqNSC.__init__": [[18, 29], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "seq_dataset", ",", "net_type", "=", "\"FF\"", ",", "fine_tuning_flag", "=", "False", ",", "seq_nsc_idx", "=", "None", ",", "seq_se_idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "fine_tuning_flag", "=", "fine_tuning_flag", "\n", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "seq_nsc_idx", "=", "seq_nsc_idx", "[", "0", "]", "\n", "self", ".", "seq_nsc_n_prev_epochs", "=", "seq_nsc_idx", "[", "1", "]", "\n", "self", ".", "seq_se_idx", "=", "seq_se_idx", "[", "0", "]", "\n", "self", ".", "seq_se_n_prev_epochs", "=", "seq_se_idx", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy": [[32, 40], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_seq_nsc.Train_StochSeqNSC.train": [[42, 205], ["print", "os.makedirs", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "torch.save", "str", "torch.load", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.eval", "torch.load", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.eval", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.cuda", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.parameters", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "range", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "losses.append", "val_losses.append", "accuracies.append", "val_accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.random.randint", "SeqNSC.FF_SeqNSC", "SeqSE.FF_SeqSE", "SeqNSC.Conv_SeqNSC", "SeqSE.Conv_SeqSE", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "comb_loss_fnc1.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "comb_loss_fnc2.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "numpy.mean", "val_comb_loss_fnc.item", "numpy.mean", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "int", "int", "int", "int", "int", "int", "int", "int", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_flat_mini_batches", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "comb_loss_fnc1.item", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_flat_mini_batches", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "comb_loss_fnc2.item", "nn.CrossEntropyLoss.", "nn.MSELoss.", "int", "nn.CrossEntropyLoss.", "nn.MSELoss.", "nn.CrossEntropyLoss.", "nn.MSELoss."], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\t\t", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "self", ".", "seq_nsc_idx", "+", "\"+\"", "+", "self", ".", "seq_se_idx", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_StochSeqNSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "seq_nsc_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_results/ID_\"", "+", "self", ".", "seq_nsc_idx", "\n", "self", ".", "seq_se_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "seq_se_idx", "\n", "\n", "self", ".", "seq_nsc", "=", "torch", ".", "load", "(", "self", ".", "seq_nsc_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "self", ".", "seq_nsc_n_prev_epochs", ")", ")", "\n", "self", ".", "seq_nsc", ".", "eval", "(", ")", "\n", "self", ".", "seq_se", "=", "torch", ".", "load", "(", "self", ".", "seq_se_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "self", ".", "seq_se_n_prev_epochs", ")", ")", "\n", "self", ".", "seq_se", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "n_hidden", "=", "100", "\n", "self", ".", "seq_nsc", "=", "FF_SeqNSC", "(", "input_size", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "self", ".", "seq_se", "=", "FF_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "n_filters", "=", "64", "\n", "self", ".", "seq_nsc", "=", "Conv_SeqNSC", "(", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "self", ".", "seq_se", "=", "Conv_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", ")", ",", "int", "(", "n_filters", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "seq_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "se_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "optimizer_nsc", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "optimizer_se", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "seq_nsc_net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_se_net_path", "=", "self", ".", "results_path", "+", "\"/seq_se_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "w", "=", "0.5", "\n", "\n", "losses", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X1", ",", "Y1", ",", "T1", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X1", ",", "Y1", ",", "T1", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X1", "=", "np", ".", "transpose", "(", "X1", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y1", "=", "np", ".", "transpose", "(", "Y1", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "", "X1t", "=", "Variable", "(", "FloatTensor", "(", "X1", ")", ")", "\n", "Y1t", "=", "Variable", "(", "FloatTensor", "(", "Y1", ")", ")", "\n", "T1t", "=", "Variable", "(", "LongTensor", "(", "T1", ")", ")", "\n", "\n", "optimizer_se", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim1", "=", "self", ".", "seq_se", "(", "Y1t", ")", "\n", "label_hypothesis1", "=", "self", ".", "seq_nsc", "(", "state_estim1", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc1", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis1", ",", "T1t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim1", ",", "X1t", ")", "\n", "comb_loss_fnc1", ".", "backward", "(", ")", "\n", "\n", "optimizer_se", ".", "step", "(", ")", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T1t", ",", "label_hypothesis1", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc1", ".", "item", "(", ")", ")", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X2", ",", "Y2", ",", "T2", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X2", ",", "Y2", ",", "T2", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X2", "=", "np", ".", "transpose", "(", "X2", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y2", "=", "np", ".", "transpose", "(", "Y2", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "", "X2t", "=", "Variable", "(", "FloatTensor", "(", "X2", ")", ")", "\n", "Y2t", "=", "Variable", "(", "FloatTensor", "(", "Y2", ")", ")", "\n", "T2t", "=", "Variable", "(", "LongTensor", "(", "T2", ")", ")", "\n", "\n", "optimizer_nsc", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim2", "=", "self", ".", "seq_se", "(", "Y2t", ")", "\n", "label_hypothesis2", "=", "self", ".", "seq_nsc", "(", "state_estim2", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc2", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis2", ",", "T2t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim2", ",", "X2t", ")", "\n", "comb_loss_fnc2", ".", "backward", "(", ")", "\n", "\n", "optimizer_nsc", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T2t", ",", "label_hypothesis2", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc2", ".", "item", "(", ")", ")", "\n", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_state_estim", "=", "self", ".", "seq_se", "(", "Yval_t", ")", "\n", "val_label_hypothesis", "=", "self", ".", "seq_nsc", "(", "val_state_estim", ")", "\n", "val_comb_loss_fnc", "=", "w", "*", "nsc_loss_fnc", "(", "val_label_hypothesis", ",", "Tval_t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "val_state_estim", ",", "Xval_t", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "val_losses", ".", "append", "(", "val_comb_loss_fnc", ".", "item", "(", ")", ")", "\n", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_label_hypothesis", ")", "\n", ")", "\n", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "seq_nsc", ",", "self", ".", "seq_nsc_net_path", ")", "\n", "torch", ".", "save", "(", "self", ".", "seq_se", ",", "self", ".", "seq_se_net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.train_stoch_seq_nsc.Train_StochSeqNSC.generate_test_results": [[207, 232], ["torch.autograd.Variable", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "str", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_test_scaled_flat", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "Y_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "X", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_test", ")", ")", "\n", "\n", "state_estimates", "=", "self", ".", "seq_se", "(", "Ytest", ")", "\n", "label_predictions", "=", "self", ".", "seq_nsc", "(", "state_estimates", ")", "\n", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "label_predictions", ")", "\n", "\n", "print", "(", "\"Combined Test Accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results_{}epochs.txt\"", ".", "format", "(", "self", ".", "n_epochs", ")", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.__init__": [[23, 33], ["trained_model", "CP_Classification.ICP_Classification.get_nonconformity_scores", "len"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["def", "__init__", "(", "self", ",", "Xc", ",", "Yc", ",", "trained_model", ",", "mondrian_flag", ")", ":", "\n", "\t\t", "self", ".", "Xc", "=", "Xc", "\n", "self", ".", "Yc", "=", "Yc", "\n", "self", ".", "pos_label", "=", "1", "\n", "self", ".", "neg_label", "=", "0", "\n", "self", ".", "mondrian_flag", "=", "mondrian_flag", "\n", "self", ".", "trained_model", "=", "trained_model", "\n", "self", ".", "cal_pred_lkh", "=", "trained_model", "(", "Xc", ")", "\n", "self", ".", "calibr_scores", "=", "self", ".", "get_nonconformity_scores", "(", "Yc", ",", "self", ".", "cal_pred_lkh", ")", "# nonconformity scores on the calibration set", "\n", "self", ".", "q", "=", "len", "(", "Yc", ")", "# number of points in the calibration set", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.set_labels": [[35, 39], ["None"], "methods", ["None"], ["", "def", "set_labels", "(", "self", ",", "new_pos_label", ",", "new_neg_label", ")", ":", "\n", "# Set the labels used in Y", "\n", "\t\t", "self", ".", "pos_label", "=", "new_pos_label", "\n", "self", ".", "neg_label", "=", "new_neg_label", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_nonconformity_scores": [[41, 53], ["scipy.special.softmax", "len", "numpy.array", "numpy.abs", "numpy.sort", "range", "int"], "methods", ["None"], ["", "def", "get_nonconformity_scores", "(", "self", ",", "y", ",", "pred_lkh", ",", "sorting", "=", "True", ")", ":", "\n", "\n", "\t\t", "if", "(", "self", ".", "pos_label", "!=", "1", ")", "or", "(", "self", ".", "neg_label", "!=", "0", ")", ":", "\n", "\t\t\t", "y", "[", "(", "y", "==", "self", ".", "pos_label", ")", "]", "=", "1", "\n", "y", "[", "(", "y", "==", "self", ".", "neg_label", ")", "]", "=", "0", "\n", "\n", "", "pred_probs", "=", "scipy", ".", "special", ".", "softmax", "(", "pred_lkh", ",", "axis", "=", "1", ")", "\n", "n_points", "=", "len", "(", "y", ")", "\n", "ncm", "=", "np", ".", "array", "(", "[", "np", ".", "abs", "(", "1", "-", "pred_probs", "[", "i", ",", "int", "(", "y", "[", "i", "]", ")", "]", ")", "for", "i", "in", "range", "(", "n_points", ")", "]", ")", "\n", "if", "sorting", ":", "\n", "\t\t\t", "ncm", "=", "np", ".", "sort", "(", "ncm", ")", "[", ":", ":", "-", "1", "]", "# descending order", "\n", "", "return", "ncm", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_p_values": [[55, 103], ["CP_Classification.ICP_Classification.trained_model", "len", "CP_Classification.ICP_Classification.get_nonconformity_scores", "CP_Classification.ICP_Classification.get_nonconformity_scores", "numpy.zeros", "numpy.zeros", "range", "range", "range", "numpy.ones", "numpy.ones", "numpy.random.rand", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_p_values", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "'''\n\t\tcalibr_scores: non conformity measures computed on the calibration set and sorted in descending order\n\t\tx: new input points (shape: (n_points,x_dim)\n\t\t\n\t\treturn: positive p-values, negative p-values\n\t\t\n\t\t'''", "\n", "pred_lkh", "=", "self", ".", "trained_model", "(", "x", ")", "# prob of going to pos class on x", "\n", "if", "self", ".", "mondrian_flag", ":", "\n", "\t\t\t", "alphas_pos", "=", "self", ".", "calibr_scores", "[", "(", "self", ".", "Yc", "==", "self", ".", "pos_label", ")", "]", "\n", "alphas_neg", "=", "self", ".", "calibr_scores", "[", "(", "self", ".", "Yc", "==", "self", ".", "neg_label", ")", "]", "\n", "q_pos", "=", "alphas_pos", ".", "shape", "[", "0", "]", "\n", "q_neg", "=", "alphas_neg", ".", "shape", "[", "0", "]", "\n", "", "else", ":", "\n", "\t\t\t", "alphas_pos", "=", "self", ".", "calibr_scores", "\n", "alphas_neg", "=", "self", ".", "calibr_scores", "\n", "q_pos", "=", "self", ".", "q", "\n", "q_neg", "=", "self", ".", "q", "\n", "", "n_points", "=", "len", "(", "pred_lkh", ")", "\n", "\n", "A_pos", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "pos_label", "*", "np", ".", "ones", "(", "n_points", ")", ",", "pred_lkh", ",", "sorting", "=", "False", ")", "# calibr scores for positive class", "\n", "A_neg", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "neg_label", "*", "np", ".", "ones", "(", "n_points", ")", ",", "pred_lkh", ",", "sorting", "=", "False", ")", "# negative scores for positive class", "\n", "\n", "p_pos", "=", "np", ".", "zeros", "(", "n_points", ")", "# p-value for class 1", "\n", "p_neg", "=", "np", ".", "zeros", "(", "n_points", ")", "# p-value for class 0", "\n", "for", "k", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "c_pos_a", "=", "0", "\n", "c_pos_b", "=", "0", "\n", "c_neg_a", "=", "0", "\n", "c_neg_b", "=", "0", "\n", "for", "count_pos", "in", "range", "(", "q_pos", ")", ":", "\n", "\t\t\t\t", "if", "alphas_pos", "[", "count_pos", "]", ">", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_a", "+=", "1", "\n", "", "elif", "alphas_pos", "[", "count_pos", "]", "==", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_b", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "", "for", "count_neg", "in", "range", "(", "q_neg", ")", ":", "\n", "\t\t\t\t", "if", "alphas_neg", "[", "count_neg", "]", ">", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_a", "+=", "1", "\n", "", "elif", "alphas_neg", "[", "count_neg", "]", "==", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_b", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "", "p_pos", "[", "k", "]", "=", "(", "c_pos_a", "+", "rand", "(", ")", "*", "(", "c_pos_b", "+", "1", ")", ")", "/", "(", "q_pos", "+", "1", ")", "\n", "p_neg", "[", "k", "]", "=", "(", "c_neg_a", "+", "rand", "(", ")", "*", "(", "c_neg_b", "+", "1", ")", ")", "/", "(", "q_neg", "+", "1", ")", "\n", "", "return", "p_pos", ",", "p_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_confidence_credibility": [[105, 120], ["len", "numpy.zeros", "range"], "methods", ["None"], ["", "def", "get_confidence_credibility", "(", "self", ",", "p_pos", ",", "p_neg", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "# OUTPUT: array containing confidence and credibility [shape: (n_points,2)]", "\n", "# \t\tfirst column: confidence (1-smallest p-value)", "\n", "# \t\tsecond column: credibility (largest p-value)", "\n", "\t\t", "n_points", "=", "len", "(", "p_pos", ")", "\n", "confidence_credibility", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "p_neg", "[", "i", "]", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_neg", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_pos", "[", "i", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_pos", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_neg", "[", "i", "]", "\n", "", "", "return", "confidence_credibility", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility": [[121, 125], ["CP_Classification.ICP_Classification.get_p_values", "CP_Classification.ICP_Classification.get_confidence_credibility"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_p_values", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_confidence_credibility"], ["", "def", "compute_confidence_credibility", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "p_pos", ",", "p_neg", "=", "self", ".", "get_p_values", "(", "x", ")", "\n", "\n", "return", "self", ".", "get_confidence_credibility", "(", "p_pos", ",", "p_neg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_prediction_region": [[127, 143], ["len", "numpy.zeros", "range"], "methods", ["None"], ["", "def", "get_prediction_region", "(", "self", ",", "epsilon", ",", "p_pos", ",", "p_neg", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\t\t", "n_points", "=", "len", "(", "p_pos", ")", "\n", "\n", "pred_region", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "epsilon", ":", "\n", "\t\t\t\t", "pred_region", "[", "i", ",", "1", "]", "=", "1", "\n", "", "if", "p_neg", "[", "i", "]", ">", "epsilon", ":", "\n", "\t\t\t\t", "pred_region", "[", "i", ",", "0", "]", "=", "1", "\n", "\n", "", "", "return", "pred_region", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_coverage": [[144, 156], ["len", "range", "int"], "methods", ["None"], ["", "def", "get_coverage", "(", "self", ",", "pred_region", ",", "labels", ")", ":", "\n", "\n", "\t\t", "n_points", "=", "len", "(", "labels", ")", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "pred_region", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "==", "1", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_coverage": [[157, 163], ["CP_Classification.ICP_Classification.get_p_values", "CP_Classification.ICP_Classification.get_prediction_region", "CP_Classification.ICP_Classification.get_coverage"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_p_values", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.get_prediction_region", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_coverage"], ["", "def", "compute_coverage", "(", "self", ",", "eps", ",", "inputs", ",", "outputs", ")", ":", "\n", "\t\t", "p1", ",", "p0", "=", "self", ".", "get_p_values", "(", "x", "=", "inputs", ")", "\n", "\n", "self", ".", "pred_region", "=", "self", ".", "get_prediction_region", "(", "epsilon", "=", "eps", ",", "p_pos", "=", "p1", ",", "p_neg", "=", "p0", ")", "\n", "\n", "return", "self", ".", "get_coverage", "(", "self", ".", "pred_region", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_cross_confidence_credibility": [[166, 224], ["CP_Classification.ICP_Classification.get_nonconformity_scores", "CP_Classification.ICP_Classification.get_nonconformity_scores", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "copy.deepcopy", "numpy.delete", "range", "range", "numpy.ones", "numpy.ones", "numpy.random.rand", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "compute_cross_confidence_credibility", "(", "self", ")", ":", "\n", "\t\t", "'''\n\t\talphas: non conformity measures sorted in descending order\n\t\tcal_pred_lkhs: prediction likelihood fro the twoclasses on points of the calibration set \n\n\t\treturn: 2-dim array containing values of confidence and credibility (which are not exactly the p-values)\n\t\t\t\tshape = (n_points,2) -- CROSS VALIDATION STRATEGY\n\t\t\t\tfirst column: confidence (1-smallest p-value)\n\t\t# \t\tsecond column: credibility (largest p-value)\n\t\t'''", "\n", "\n", "A_pos", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "pos_label", "*", "np", ".", "ones", "(", "self", ".", "q", ")", ",", "self", ".", "cal_pred_lkh", ",", "sorting", "=", "False", ")", "\n", "A_neg", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "neg_label", "*", "np", ".", "ones", "(", "self", ".", "q", ")", ",", "self", ".", "cal_pred_lkh", ",", "sorting", "=", "False", ")", "\n", "\n", "p_pos", "=", "np", ".", "zeros", "(", "self", ".", "q", ")", "# p_values for class 1", "\n", "p_neg", "=", "np", ".", "zeros", "(", "self", ".", "q", ")", "# p_values for class 0", "\n", "\n", "pos_counter", "=", "0", "\n", "neg_counter", "=", "0", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "\t\t\t", "alphas_mask", "=", "copy", ".", "deepcopy", "(", "self", ".", "calibr_scores", ")", "\n", "alphas_mask", "=", "np", ".", "delete", "(", "alphas_mask", ",", "k", ")", "\n", "c_pos_1", "=", "0", "\n", "c_pos_2", "=", "0", "\n", "c_neg_1", "=", "0", "\n", "c_neg_2", "=", "0", "\n", "for", "count_pos", "in", "range", "(", "self", ".", "q", "-", "1", ")", ":", "\n", "\t\t\t\t", "if", "alphas_mask", "[", "count_pos", "]", ">", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_1", "+=", "1", "\n", "", "elif", "alphas_mask", "[", "count_pos", "]", "==", "A_pos", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_pos_2", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "\n", "", "", "for", "count_neg", "in", "range", "(", "self", ".", "q", "-", "1", ")", ":", "\n", "\t\t\t\t", "if", "alphas_mask", "[", "count_neg", "]", ">", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_1", "+=", "1", "\n", "", "elif", "alphas_mask", "[", "count_neg", "]", "==", "A_neg", "[", "k", "]", ":", "\n", "\t\t\t\t\t", "c_neg_2", "+=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "break", "\n", "\n", "", "", "p_pos", "[", "k", "]", "=", "(", "c_pos_1", "+", "rand", "(", ")", "*", "(", "c_pos_2", "+", "1", ")", ")", "/", "self", ".", "q", "\n", "p_neg", "[", "k", "]", "=", "(", "c_neg_1", "+", "rand", "(", ")", "*", "(", "c_neg_2", "+", "1", ")", ")", "/", "self", ".", "q", "\n", "\n", "", "confidence_credibility", "=", "np", ".", "zeros", "(", "(", "self", ".", "q", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "q", ")", ":", "\n", "\t\t\t", "if", "p_pos", "[", "i", "]", ">", "p_neg", "[", "i", "]", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_neg", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_pos", "[", "i", "]", "\n", "", "else", ":", "\n", "\t\t\t\t", "confidence_credibility", "[", "i", ",", "0", "]", "=", "1", "-", "p_pos", "[", "i", "]", "\n", "confidence_credibility", "[", "i", ",", "1", "]", "=", "p_neg", "[", "i", "]", "\n", "\n", "", "", "self", ".", "cal_conf_cred", "=", "confidence_credibility", "\n", "\n", "return", "confidence_credibility", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_efficiency": [[226, 235], ["range", "numpy.sum"], "methods", ["None"], ["", "def", "compute_efficiency", "(", "self", ")", ":", "\n", "\n", "\t\t", "n_singletons", "=", "0", "\n", "n_points", "=", "self", ".", "pred_region", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "np", ".", "sum", "(", "self", ".", "pred_region", "[", "i", "]", ")", "==", "1", ":", "\n", "\t\t\t\t", "n_singletons", "+=", "1", "\n", "\n", "", "", "return", "n_singletons", "/", "n_points", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.__init__": [[23, 30], ["trained_model", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "Xc", ",", "Yc", ",", "trained_model", ")", ":", "\n", "\t\t", "self", ".", "Xc", "=", "Xc", "\n", "self", ".", "Yc", "=", "Yc", "\n", "self", ".", "output_dim", "=", "Yc", ".", "shape", "[", "1", "]", "\n", "self", ".", "trained_model", "=", "trained_model", "\n", "self", ".", "calibr_pred", "=", "trained_model", "(", "Xc", ")", "\n", "self", ".", "q", "=", "len", "(", "Yc", ")", "# number of points in the calibration set", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores": [[33, 43], ["len", "numpy.empty", "range", "numpy.linalg.norm", "numpy.sort"], "methods", ["None"], ["", "def", "get_nonconformity_scores", "(", "self", ",", "y", ",", "y_pred", ",", "sorting", "=", "True", ")", ":", "\n", "\n", "\t\t", "n", "=", "len", "(", "y", ")", "\n", "ncm", "=", "np", ".", "empty", "(", "n", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "\t\t\t", "ncm", "[", "i", "]", "=", "np", ".", "linalg", ".", "norm", "(", "y", "[", "i", "]", "-", "y_pred", "[", "i", "]", ")", "\n", "\n", "", "if", "sorting", ":", "\n", "\t\t\t", "ncm", "=", "np", ".", "sort", "(", "ncm", ")", "[", ":", ":", "-", "1", "]", "# descending order", "\n", "", "return", "ncm", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_alpha_threshold": [[45, 53], ["CP_Regression.ICP_Regression.get_nonconformity_scores", "numpy.quantile"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_alpha_threshold", "(", "self", ",", "eps", ")", ":", "\n", "\n", "\t\t", "self", ".", "calibr_scores", "=", "self", ".", "get_nonconformity_scores", "(", "self", ".", "Yc", ",", "self", ".", "calibr_pred", ")", "# nonconformity scores on the calibration set", "\n", "\n", "q", "=", "1", "-", "eps", "\n", "threshold", "=", "np", ".", "quantile", "(", "self", ".", "calibr_scores", ",", "q", ")", "\n", "\n", "return", "threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_1d_alpha_thresholds": [[55, 63], ["numpy.array", "numpy.array", "CP_Regression.ICP_Regression.get_nonconformity_scores", "numpy.quantile", "range", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_1d_alpha_thresholds", "(", "self", ",", "eps", ")", ":", "\n", "\n", "\t\t", "self", ".", "n_calibr_scores", "=", "np", ".", "array", "(", "[", "self", ".", "get_nonconformity_scores", "(", "self", ".", "Yc", "[", ":", ",", "i", "]", ",", "self", ".", "calibr_pred", "[", ":", ",", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", "\n", "\n", "q", "=", "1", "-", "eps", "/", "self", ".", "output_dim", "\n", "n_thresholds", "=", "np", ".", "array", "(", "[", "np", ".", "quantile", "(", "self", ".", "n_calibr_scores", "[", "j", "]", ",", "q", ")", "for", "j", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", "\n", "\n", "return", "n_thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_coverage": [[66, 87], ["CP_Regression.ICP_Regression.trained_model", "CP_Regression.ICP_Regression.get_nonconformity_scores", "len", "CP_Regression.ICP_Regression.get_alpha_threshold", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_alpha_threshold"], ["", "def", "get_coverage", "(", "self", ",", "epsilon", ",", "x_test", ",", "y_test", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\n", "\n", "\t\t", "y_test_pred", "=", "self", ".", "trained_model", "(", "x_test", ")", "\n", "test_scores", "=", "self", ".", "get_nonconformity_scores", "(", "y_test", ",", "y_test_pred", ")", "\n", "n_points", "=", "len", "(", "y_test", ")", "\n", "\n", "self", ".", "tau", "=", "self", ".", "get_alpha_threshold", "(", "epsilon", ")", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "test_scores", "[", "i", "]", "<", "self", ".", "tau", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_box_coverage": [[89, 111], ["CP_Regression.ICP_Regression.trained_model", "len", "CP_Regression.ICP_Regression.get_1d_alpha_thresholds", "range", "numpy.array", "numpy.all", "CP_Regression.ICP_Regression.get_nonconformity_scores", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_1d_alpha_thresholds", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_nonconformity_scores"], ["", "def", "get_box_coverage", "(", "self", ",", "epsilon", ",", "x_test", ",", "y_test", ")", ":", "\n", "# INPUTS: p_pos and p_neg are the outputs returned by the function get_p_values", "\n", "#\t\tepsilon = confidence_level", "\n", "# OUTPUT: one-hot encoding of the prediction region [shape: (n_points,2)]", "\n", "# \t\tfirst column: negative class", "\n", "# \t\tsecond column: positive class", "\n", "\n", "\n", "\t\t", "y_test_pred", "=", "self", ".", "trained_model", "(", "x_test", ")", "\n", "n_test_scores", "=", "np", ".", "array", "(", "[", "self", ".", "get_nonconformity_scores", "(", "y_test", "[", ":", ",", "i", "]", ",", "y_test_pred", "[", ":", ",", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "output_dim", ")", "]", ")", ".", "T", "\n", "n_points", "=", "len", "(", "y_test", ")", "\n", "\n", "n_tau", "=", "self", ".", "get_1d_alpha_thresholds", "(", "epsilon", ")", "\n", "self", ".", "box_tau", "=", "n_tau", "\n", "\n", "c", "=", "0", "\n", "for", "i", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t\t", "if", "np", ".", "all", "(", "n_test_scores", "[", "i", "]", "<", "n_tau", ")", ":", "\n", "\t\t\t\t", "c", "+=", "1", "\n", "", "", "coverage", "=", "c", "/", "n_points", "\n", "\n", "return", "coverage", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Regression.ICP_Regression.get_efficiency": [[113, 122], ["scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle", "scipy.spatial.Rectangle.volume", "scipy.spatial.Rectangle.volume"], "methods", ["None"], ["", "def", "get_efficiency", "(", "self", ",", "box_flag", ")", ":", "\n", "\n", "\t\t", "if", "box_flag", ":", "\n", "\t\t\t", "pred_rectangle", "=", "scipy", ".", "spatial", ".", "Rectangle", "(", "self", ".", "box_tau", ",", "-", "1", "*", "self", ".", "box_tau", ")", "\n", "eff", "=", "pred_rectangle", ".", "volume", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "eff", "=", "2", "*", "self", ".", "tau", "# width of the 1d tube", "\n", "\n", "", "return", "eff", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.__init__": [[9, 17], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "8", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.01", ")", ":", "\n", "\t\t", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "-", "2.5", ",", "2.5", "]", ",", "[", "-", "4.05", ",", "4.05", "]", ",", "[", "-", "2.5", ",", "2.5", "]", ",", "[", "-", "4.05", ",", "4.05", "]", "]", ")", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "4", "\n", "self", ".", "obs_dim", "=", "2", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.diff_eq": [[19, 29], ["numpy.array"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "z", ",", "t", ")", ":", "\n", "# z = (x1,y1,x2,y2)", "\n", "\t\t", "mu", "=", "1", "\n", "dzdt", "=", "np", ".", "array", "(", "[", "\n", "z", "[", "1", "]", ",", "\n", "mu", "*", "(", "1", "-", "z", "[", "0", "]", "**", "2", ")", "*", "z", "[", "1", "]", "-", "2", "*", "z", "[", "0", "]", "+", "z", "[", "2", "]", ",", "\n", "z", "[", "3", "]", ",", "\n", "mu", "*", "(", "1", "-", "z", "[", "2", "]", "**", "2", ")", "*", "z", "[", "3", "]", "-", "2", "*", "z", "[", "2", "]", "+", "z", "[", "0", "]", "\n", "]", ")", "\n", "return", "dzdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.gen_trajectories": [[32, 48], ["numpy.empty", "numpy.linspace", "scipy.integrate.odeint", "numpy.all", "numpy.all", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "z0", "=", "self", ".", "ranges", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "if", "np", ".", "all", "(", "zz", "[", "-", "1", "]", ">=", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "zz", "[", "-", "1", "]", "<=", "self", ".", "ranges", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "zz", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "trajs", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.get_noisy_measurments": [[50, 63], ["numpy.zeros", "range", "range", "numpy.random.randn", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "# observe x1, x2", "\n", "\t\t", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "obs_dim", ")", ")", "# 2-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "[", "trajs", "[", "i", ",", "j", ",", "0", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", ",", "trajs", "[", "i", ",", "j", ",", "2", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "]", "\n", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.gen_labels": [[64, 78], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "7", ")", ":", "\n", "\n", "# UNSAFE SET: y1, y2 >= 2.75", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "z0", "=", "states", "[", "i", "]", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "1", "]", "<", "2.75", ")", ")", "*", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "3", "]", "<", "2.75", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CoupledVanDerPol.CoupledVanDerPol.gen_dataset": [[79, 96], ["CoupledVanDerPol.CoupledVanDerPol.gen_trajectories", "CoupledVanDerPol.CoupledVanDerPol.get_noisy_measurments", "CoupledVanDerPol.CoupledVanDerPol.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "\t", "n_points", "=", "10000", "\n", "\n", "cvdp_model", "=", "CoupledVanDerPol", "(", ")", "\n", "trajs", "=", "cvdp_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "noisy_measurments", "=", "cvdp_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "labels", "=", "cvdp_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n", "filename", "=", "'Datasets/CVDP1_test_set_10K.pickle'", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "handle", ":", "\n", "\t\t", "pickle", ".", "dump", "(", "dataset_dict", ",", "handle", ")", "\n", "", "handle", ".", "close", "(", ")", "\n", "print", "(", "\"Data stored in: \"", ",", "filename", ")", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.__init__": [[11, 24], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "5", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.01", ")", ":", "\n", "\t\t", "self", ".", "W1", "=", "0.5", "\n", "self", ".", "W2", "=", "0.1", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "1.2", "-", "self", ".", "W1", ",", "1.2", "+", "self", ".", "W1", "]", ",", "[", "1.05", "-", "self", ".", "W1", ",", "1.05", "+", "self", ".", "W1", "]", ",", "\n", "[", "1.5", "-", "self", ".", "W1", ",", "1.5", "+", "self", ".", "W1", "]", ",", "[", "2.4", "-", "self", ".", "W1", ",", "2.4", "+", "self", ".", "W1", "]", ",", "[", "1", "-", "self", ".", "W1", ",", "1", "+", "self", ".", "W1", "]", ",", "\n", "[", "0.1", "-", "self", ".", "W2", ",", "0.1", "+", "self", ".", "W2", "]", ",", "[", "0.45", "-", "self", ".", "W1", ",", "0.45", "+", "self", ".", "W2", "]", "]", ")", "\n", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "7", "\n", "self", ".", "obs_dim", "=", "6", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.diff_eq": [[26, 38], ["numpy.array"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "\n", "\t\t", "dxdt", "=", "np", ".", "array", "(", "[", "\n", "1.4", "*", "x", "[", "2", "]", "-", "0.9", "*", "x", "[", "0", "]", ",", "\n", "2.5", "*", "x", "[", "4", "]", "-", "1.5", "*", "x", "[", "1", "]", ",", "\n", "0.6", "*", "x", "[", "6", "]", "-", "0.8", "*", "x", "[", "1", "]", "*", "x", "[", "2", "]", ",", "\n", "2", "-", "1.3", "*", "x", "[", "2", "]", "*", "x", "[", "3", "]", ",", "\n", "0.7", "*", "x", "[", "0", "]", "-", "x", "[", "3", "]", "*", "x", "[", "4", "]", ",", "\n", "0.3", "*", "x", "[", "0", "]", "-", "3.1", "*", "x", "[", "5", "]", ",", "\n", "1.8", "*", "x", "[", "5", "]", "-", "1.5", "*", "x", "[", "1", "]", "*", "x", "[", "6", "]", "\n", "]", ")", "\n", "return", "dxdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.gen_trajectories": [[41, 56], ["numpy.empty", "numpy.linspace", "scipy.integrate.odeint", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "z0", "=", "self", ".", "ranges", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "trajs", "[", "i", "]", "=", "zz", "\n", "i", "+=", "1", "\n", "\n", "", "return", "trajs", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.get_noisy_measurments": [[58, 72], ["numpy.zeros", "range", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "# observe x1, x2", "\n", "\t\t", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "obs_dim", ")", ")", "# 2-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", ",", "[", "0", ",", "1", ",", "2", ",", "4", ",", "5", ",", "6", "]", "]", "+", "np", ".", "random", ".", "randn", "(", "self", ".", "obs_dim", ")", "*", "sigm", "\n", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.gen_labels": [[73, 87], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "20", ")", ":", "\n", "\n", "# UNSAFE SET: x4 >= 5", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "z0", "=", "states", "[", "i", "]", "\n", "zz", "=", "odeint", "(", "self", ".", "diff_eq", ",", "z0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "zz", "[", ":", ",", "3", "]", "<", "4.5", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.LaubLoomis.LaubLoomis.gen_dataset": [[88, 105], ["LaubLoomis.LaubLoomis.gen_trajectories", "LaubLoomis.LaubLoomis.get_noisy_measurments", "LaubLoomis.LaubLoomis.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "\t", "n_points", "=", "50", "\n", "\n", "lalo_model", "=", "LaubLoomis", "(", ")", "\n", "trajs", "=", "lalo_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "noisy_measurments", "=", "lalo_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "labels", "=", "lalo_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n", "filename", "=", "'Datasets/LALO1_validation_set_50.pickle'", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "handle", ":", "\n", "\t\t", "pickle", ".", "dump", "(", "dataset_dict", ",", "handle", ")", "\n", "", "handle", ".", "close", "(", ")", "\n", "print", "(", "\"Data stored in: \"", ",", "filename", ")", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.__init__": [[9, 18], ["numpy.array", "numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "1", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.005", ")", ":", "\n", "\t\t", "self", ".", "ranges2", "=", "np", ".", "array", "(", "[", "[", "-", "math", ".", "pi", "/", "2", ",", "math", ".", "pi", "/", "2", "]", ",", "[", "-", "1.5", ",", "1.5", "]", "]", ")", "\n", "self", ".", "ranges4", "=", "np", ".", "array", "(", "[", "[", "-", "math", ".", "pi", "/", "4", ",", "math", ".", "pi", "/", "4", "]", ",", "[", "-", "1.5", ",", "1.5", "]", "]", ")", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "2", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.diff_eq": [[19, 24], ["numpy.array", "numpy.sin", "numpy.cos", "InvertedPendulum.InvertedPendulum.control_law"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.control_law"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "# y = (theta, w)", "\n", "\t\t", "dydt", "=", "np", ".", "array", "(", "[", "y", "[", "1", "]", ",", "np", ".", "sin", "(", "y", "[", "0", "]", ")", "-", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "*", "self", ".", "control_law", "(", "y", ")", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.energy": [[26, 28], ["numpy.cos"], "methods", ["None"], ["", "def", "energy", "(", "self", ",", "y", ")", ":", "\n", "\t\t", "return", "0.5", "*", "y", "[", "1", "]", "+", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.control_law": [[30, 42], ["InvertedPendulum.InvertedPendulum.energy", "numpy.cos", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.abs", "numpy.cos", "numpy.cos", "numpy.sin"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.energy"], ["", "def", "control_law", "(", "self", ",", "y", ")", ":", "\n", "\t\t", "E", "=", "self", ".", "energy", "(", "y", ")", "\n", "if", "E", "<", "-", "1", ":", "\n", "\t\t\t", "u", "=", "(", "y", "[", "1", "]", "*", "np", ".", "cos", "(", "y", "[", "0", "]", ")", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "y", "[", "1", "]", ")", ")", "\n", "", "elif", "E", ">", "1", ":", "\n", "\t\t\t", "u", "=", "-", "(", "y", "[", "1", "]", "*", "np", ".", "cos", "(", "y", "[", "0", "]", ")", ")", "/", "(", "1", "+", "np", ".", "abs", "(", "y", "[", "1", "]", ")", ")", "\n", "", "elif", "np", ".", "abs", "(", "y", "[", "1", "]", ")", "+", "np", ".", "abs", "(", "y", "[", "0", "]", ")", "<=", "1.85", ":", "\n", "\t\t\t", "u", "=", "(", "2", "*", "y", "[", "1", "]", "+", "y", "[", "0", "]", "+", "np", ".", "sin", "(", "y", "[", "0", "]", ")", ")", "/", "np", ".", "cos", "(", "y", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "u", "=", "0", "\n", "\n", "", "return", "u", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.gen_trajectories": [[43, 59], ["numpy.empty", "numpy.linspace", "numpy.transpose", "scipy.integrate.odeint", "numpy.all", "numpy.all", "numpy.random.rand"], "methods", ["None"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "ranges2", "[", ":", ",", "0", "]", "+", "(", "self", ".", "ranges2", "[", ":", ",", "1", "]", "-", "self", ".", "ranges2", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "if", "np", ".", "all", "(", "yy", "[", "-", "1", "]", ">=", "self", ".", "ranges4", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "yy", "[", "-", "1", "]", "<=", "self", ".", "ranges4", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "yy", ".", "T", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.get_noisy_measurments": [[61, 82], ["numpy.zeros", "range", "numpy.expand_dims", "range", "numpy.zeros", "range", "range", "InvertedPendulum.InvertedPendulum.energy", "numpy.random.randn", "numpy.random.randn"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.energy"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "noise_model", "=", "\"energy\"", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "if", "noise_model", "==", "\"energy\"", ":", "\n", "\t\t\t", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "self", ".", "energy", "(", "trajs", "[", "i", ",", "j", "]", ")", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "", "", "noisy_measurements", "=", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "", "elif", "noise_model", "==", "\"noise_only\"", ":", "\n", "\t\t\t", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ",", "self", ".", "state_dim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", "]", "+", "np", ".", "random", ".", "randn", "(", "self", ".", "state_dim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "", "", "return", "noisy_measurements", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.gen_labels": [[83, 95], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "5", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "y0", "=", "states", "[", "i", "]", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", ">=", "-", "math", ".", "pi", "/", "6", ")", ")", "*", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "<=", "math", ".", "pi", "/", "6", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.InvertedPendulum.InvertedPendulum.gen_dataset": [[97, 114], ["InvertedPendulum.InvertedPendulum.gen_trajectories", "InvertedPendulum.InvertedPendulum.get_noisy_measurments", "InvertedPendulum.InvertedPendulum.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "\t", "n_points", "=", "50000", "\n", "\n", "ip_model", "=", "InvertedPendulum", "(", "noise_sigma", "=", "0.005", ")", "\n", "trajs", "=", "ip_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "noisy_measurments", "=", "ip_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "labels", "=", "ip_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n", "filename", "=", "'Datasets/IP3_training_set_50K.pickle'", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "handle", ":", "\n", "\t\t", "pickle", ".", "dump", "(", "dataset_dict", ",", "handle", ")", "\n", "", "handle", ".", "close", "(", ")", "\n", "print", "(", "\"Data stored in: \"", ",", "filename", ")", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_po_nsc.Train_PO_NSC.__init__": [[17, 28], ["None"], "methods", ["None"], ["\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_NSC_resuts/ID_\"", "+", "self", ".", "idx", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_po_nsc.Train_PO_NSC.compute_accuracy": [[30, 38], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_po_nsc.Train_PO_NSC.train": [[40, 148], ["str", "print", "os.makedirs", "train_po_nsc.Train_PO_NSC.dataset.load_data", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "numpy.random.randint", "FF_PO_NSC", "Conv_PO_NSC", "train_po_nsc.Train_PO_NSC.po_nsc.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_po_nsc.Train_PO_NSC.po_nsc.parameters", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "range", "train_po_nsc.Train_PO_NSC.po_nsc", "nn.CrossEntropyLoss.", "losses.append", "val_losses.append", "accuracies.append", "val_accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "int", "int", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_po_nsc.Train_PO_NSC.po_nsc", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "numpy.mean", "nn.CrossEntropyLoss.item", "numpy.mean", "train_po_nsc.Train_PO_NSC.compute_accuracy", "int", "train_po_nsc.Train_PO_NSC.dataset.generate_flat_mini_batches", "train_po_nsc.Train_PO_NSC.dataset.generate_mini_batches", "numpy.transpose", "FloatTensor", "LongTensor", "train_po_nsc.Train_PO_NSC.compute_accuracy", "nn.CrossEntropyLoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_PO_NSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "po_nsc", "=", "FF_PO_NSC", "(", "input_size", "=", "int", "(", "self", ".", "dataset", ".", "y_dim", "*", "self", ".", "dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "po_nsc", "=", "Conv_PO_NSC", "(", "int", "(", "self", ".", "dataset", ".", "y_dim", ")", ",", "int", "(", "self", ".", "dataset", ".", "traj_len", ")", ",", "n_filters", "=", "self", ".", "nb_filters", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "po_nsc", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "po_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "# Softmax is internally computed.", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "po_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/po_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "#Xval_t = Variable(FloatTensor(self.dataset.X_val_scaled_flat))", "\n", "\t\t\t", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "#Xv = np.transpose(self.dataset.X_val_scaled, (0,2,1))", "\n", "\t\t\t", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "#Xval_t = Variable(FloatTensor(Xv))", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "#print(\"Epoch nb. \", epoch+1, \"/\", n_epochs)", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "Y", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# initialization of the gradients", "\n", "\n", "", "Yt", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "Tt", "=", "Variable", "(", "LongTensor", "(", "T", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "hypothesis", "=", "self", ".", "po_nsc", "(", "Yt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "hypothesis", ",", "Tt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tt", ",", "hypothesis", ")", ")", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_hypothesis", "=", "self", ".", "po_nsc", "(", "Yval_t", ")", "\n", "val_loss", "=", "loss_fnc", "(", "val_hypothesis", ",", "Tval_t", ")", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "val_losses", ".", "append", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_hypothesis", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "po_nsc", ",", "self", ".", "net_path", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_po_nsc.Train_PO_NSC.load_trained_net": [[150, 157], ["train_po_nsc.Train_PO_NSC.dataset.load_data", "torch.load", "train_po_nsc.Train_PO_NSC.po_nsc.eval", "train_po_nsc.Train_PO_NSC.po_nsc.cuda"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data"], ["\t\t", "self", ".", "dataset", ".", "load_data", "(", ")", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/po_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "po_nsc", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "po_nsc", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "po_nsc", ".", "cuda", "(", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_po_nsc.Train_PO_NSC.generate_test_results": [[159, 179], ["torch.autograd.Variable", "time.time", "train_po_nsc.Train_PO_NSC.po_nsc", "print", "train_po_nsc.Train_PO_NSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "time.time", "str", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "dataset", ".", "Y_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Y", "=", "np", ".", "transpose", "(", "self", ".", "dataset", ".", "Y_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "dataset", ".", "L_test", ")", ")", "\n", "test_preds", "=", "self", ".", "po_nsc", "(", "Ytest", ")", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "test_preds", ")", "\n", "print", "(", "\"Test accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.__init__": [[8, 26], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "time_horizon", "=", "1", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.1", ")", ":", "\n", "\t\t", "self", ".", "a", "=", "0.5", "\n", "self", ".", "b", "=", "0.5", "\n", "self", ".", "g", "=", "9.8", "\n", "self", ".", "A", "=", "[", "2", ",", "4", ",", "3", "]", "\n", "self", ".", "q", "=", "[", "5", ",", "3", ",", "4", "]", "\n", "self", ".", "Lm", "=", "5", "\n", "self", ".", "LM", "=", "5", "\n", "self", ".", "dt", "=", "time_horizon", "/", "n_steps", "\n", "self", ".", "obs_dim", "=", "3", "\n", "self", ".", "state_dim", "=", "3", "\n", "self", ".", "eta", "=", "2", "\n", "self", ".", "eta_safety", "=", "0.5", "\n", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", ",", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", ",", "[", "self", ".", "Lm", "-", "self", ".", "eta", ",", "self", ".", "LM", "+", "self", ".", "eta", "]", "]", ")", "\n", "self", ".", "time_horizon", "=", "time_horizon", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.diff_eq": [[28, 39], ["numpy.zeros", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "TripleWaterTank.TripleWaterTank.pump_control", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "\n", "\t\t", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "(", "self", ".", "q", "[", "0", "]", "*", "self", ".", "pump_control", "(", "y", "[", "0", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", ")", "/", "self", ".", "A", "[", "0", "]", "\n", "\n", "dydt", "[", "1", "]", "=", "(", "self", ".", "q", "[", "1", "]", "*", "self", ".", "pump_control", "(", "y", "[", "1", "]", ")", "+", "self", ".", "a", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "0", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", ")", "/", "self", ".", "A", "[", "1", "]", "\n", "\n", "dydt", "[", "2", "]", "=", "(", "self", ".", "q", "[", "2", "]", "*", "self", ".", "pump_control", "(", "y", "[", "2", "]", ")", "+", "self", ".", "a", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "1", "]", ")", "-", "self", ".", "b", "*", "np", ".", "sqrt", "(", "2", "*", "self", ".", "g", ")", "*", "np", ".", "sqrt", "(", "y", "[", "2", "]", ")", ")", "/", "self", ".", "A", "[", "2", "]", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.sample_init_state": [[41, 44], ["numpy.random.rand"], "methods", ["None"], ["", "def", "sample_init_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "return", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "*", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "+", "self", ".", "ranges", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.pump_control": [[46, 54], ["None"], "methods", ["None"], ["", "def", "pump_control", "(", "self", ",", "yi", ")", ":", "\n", "\n", "\t\t", "if", "(", "yi", "<=", "self", ".", "Lm", ")", ":", "\n", "\t\t\t", "return", "1", "\n", "", "elif", "(", "yi", ">", "self", ".", "LM", ")", ":", "\n", "\t\t\t", "return", "0", "\n", "", "else", ":", "\n", "\t\t\t", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.gen_trajectories": [[56, 81], ["numpy.empty", "numpy.ones", "numpy.linspace", "numpy.transpose", "TripleWaterTank.TripleWaterTank.sample_init_state", "scipy.integrate.odeint", "range", "numpy.max", "numpy.min", "range"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.sample_init_state"], ["", "", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "pumps", "=", "np", ".", "ones", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "time_horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "sample_init_state", "(", ")", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "\n", "if", "np", ".", "max", "(", "yy", ")", "<", "20", "and", "np", ".", "min", "(", "yy", ")", ">", "0.0000001", ":", "\n", "\t\t\t\t", "trajs", "[", "i", "]", "=", "yy", ".", "T", "\n", "for", "j", "in", "range", "(", "self", ".", "state_dim", ")", ":", "\n", "\t\t\t\t\t", "for", "k", "in", "range", "(", "self", ".", "n_steps", ")", ":", "\n", "\t\t\t\t\t\t", "if", "trajs", "[", "i", ",", "j", ",", "k", "]", ">", "self", ".", "LM", ":", "\n", "\t\t\t\t\t\t\t", "pumps", "[", "i", ",", "j", ",", "k", "]", "=", "0", "\n", "\n", "", "", "", "i", "+=", "1", "\n", "\n", "\n", "\n", "", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.get_noisy_measurments": [[83, 101], ["numpy.zeros", "range", "numpy.transpose", "range", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "state_dim", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "nm", "=", "trajs", "[", "i", ",", "j", "]", "+", "np", ".", "random", ".", "randn", "(", "state_dim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "for", "k", "in", "range", "(", "state_dim", ")", ":", "\n", "\t\t\t\t\t", "if", "nm", "[", "k", "]", ">=", "0", ":", "\n", "\t\t\t\t\t\t", "noisy_measurements", "[", "i", ",", "k", ",", "j", "]", "=", "nm", "[", "k", "]", "\n", "\n", "", "", "", "", "return", "np", ".", "transpose", "(", "noisy_measurements", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.gen_labels": [[103, 115], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "numpy.all"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "1", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "y0", "=", "states", "[", "i", "]", "\n", "yy", "=", "odeint", "(", "self", ".", "diff_eq", ",", "y0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", ">=", "self", ".", "Lm", "-", "self", ".", "eta_safety", ")", ")", "*", "np", ".", "all", "(", "(", "yy", "[", ":", ",", "0", "]", "<=", "self", ".", "LM", "+", "self", ".", "eta_safety", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.TripleWaterTank.TripleWaterTank.gen_dataset": [[116, 133], ["TripleWaterTank.TripleWaterTank.gen_trajectories", "TripleWaterTank.TripleWaterTank.get_noisy_measurments", "TripleWaterTank.TripleWaterTank.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "\t", "n_points", "=", "8500", "\n", "past_horizon", "=", "3", "\n", "future_horizon", "=", "1", "\n", "\n", "twt_model", "=", "TripleWaterTank", "(", "time_horizon", "=", "past_horizon", ",", "noise_sigma", "=", "0.01", ")", "\n", "trajs", "=", "twt_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "\n", "noisy_measurments", "=", "twt_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "\n", "labels", "=", "twt_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_se.Train_SeqSE.__init__": [[15, 24], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "seq_dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_se.Train_SeqSE.train": [[26, 119], ["str", "print", "os.makedirs", "train_seq_se.Train_SeqSE.seq_dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "numpy.random.randint", "SeqSE.FF_SeqSE", "SeqSE.Conv_SeqSE", "train_seq_se.Train_SeqSE.seq_se.cuda", "train_seq_se.Train_SeqSE.seq_se.parameters", "int", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "int", "int", "int", "int", "int", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "range", "train_seq_se.Train_SeqSE.seq_se", "val_losses.append", "losses.append", "numpy.arange", "numpy.arange", "Tensor", "Tensor", "Tensor", "Tensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_seq_se.Train_SeqSE.seq_se", "nn.MSELoss.", "nn.MSELoss.backward", "torch.optim.Adam.step", "tmp_loss.append", "print", "nn.MSELoss.", "numpy.mean", "train_seq_se.Train_SeqSE.seq_dataset.generate_flat_mini_batches", "train_seq_se.Train_SeqSE.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "Tensor", "Tensor", "nn.MSELoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches"], ["", "", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "n_hidden", "=", "100", ",", "lr", "=", "0.0001", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "seq_se", "=", "FF_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "seq_se", "=", "Conv_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", ")", ",", "128", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n", "", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "\n", "\n", "\n", "if", "self", ".", "training_flag", ":", "\n", "\n", "\t\t\t", "losses", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "Xval_t", "=", "Variable", "(", "Tensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "Tensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "Tensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "Tensor", "(", "Yv", ")", ")", "\n", "\n", "\n", "", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t\t", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "Y", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "# initialization of the gradients", "\n", "\n", "", "Yt", "=", "Variable", "(", "Tensor", "(", "Y", ")", ")", "\n", "Xt", "=", "Variable", "(", "Tensor", "(", "X", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "Xt_pred", "=", "self", ".", "seq_se", "(", "Yt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "Xt_pred", ",", "Xt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f}\\t\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "Xval_t_pred", "=", "self", ".", "seq_se", "(", "Yval_t", ")", "\n", "val_losses", ".", "append", "(", "loss_fnc", "(", "Xval_t_pred", ",", "Xval_t", ")", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/A_losses{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "seq_se", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_se.Train_SeqSE.load_trained_net": [[121, 129], ["train_seq_se.Train_SeqSE.seq_dataset.load_data", "torch.load", "train_seq_se.Train_SeqSE.seq_se.eval", "train_seq_se.Train_SeqSE.seq_se.cuda"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data"], ["", "", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_se", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "seq_se", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_se.Train_SeqSE.generate_test_results": [[131, 149], ["range", "numpy.empty", "numpy.empty", "print", "numpy.reshape", "numpy.transpose", "train_seq_se.Train_SeqSE.seq_se", "train_seq_se.Train_SeqSE.seq_se", "train_seq_se.Train_SeqSE.detach().cpu().numpy", "torch.autograd.Variable", "torch.autograd.Variable", "Tensor", "Tensor", "train_seq_se.Train_SeqSE.detach().cpu", "train_seq_se.Train_SeqSE.detach"], "methods", ["None"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "gen_estimates", "=", "np", ".", "empty", "(", "shape", "=", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "traj_len", "*", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "gen_estimates", "=", "np", ".", "empty", "(", "shape", "=", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "x_dim", ",", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "\n", "", "for", "iii", "in", "range", "(", "self", ".", "seq_dataset", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "print", "(", "\"Test point nb \"", ",", "iii", "+", "1", ",", "\" / \"", ",", "self", ".", "seq_dataset", ".", "n_test_points", ")", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "pred", "=", "self", ".", "seq_se", "(", "Variable", "(", "Tensor", "(", "[", "self", ".", "seq_dataset", ".", "Y_test_scaled_flat", "[", "iii", "]", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "pred", "=", "self", ".", "seq_se", "(", "Variable", "(", "Tensor", "(", "[", "self", ".", "seq_dataset", ".", "Y_test_scaled", "[", "iii", "]", ".", "T", "]", ")", ")", ")", "\n", "", "self", ".", "gen_estimates", "[", "iii", "]", "=", "pred", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "gen_estimates_reshaped", "=", "np", ".", "reshape", "(", "self", ".", "gen_estimates", ",", "(", "self", ".", "seq_dataset", ".", "n_test_points", ",", "self", ".", "seq_dataset", ".", "traj_len", ",", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "gen_estimates_reshaped", "=", "np", ".", "transpose", "(", "self", ".", "gen_estimates", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_se.Train_SeqSE.plot_test_results": [[150, 162], ["numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].plot", "axs[].plot"], "methods", ["None"], ["", "", "def", "plot_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "tspan", "=", "np", ".", "arange", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "seq_dataset", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ":", "\n", "\t\t\t\t", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "self", ".", "seq_dataset", ".", "X_test_scaled", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"blue\"", ")", "\n", "axs", "[", "j", "]", ".", "plot", "(", "tspan", ",", "self", ".", "gen_estimates_reshaped", "[", "i", ",", ":", ",", "j", "]", ",", "color", "=", "\"orange\"", ")", "\n", "\n", "", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/B_seq_pred_comparison_{}.png\"", ".", "format", "(", "i", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqNSC.FF_SeqNSC.__init__": [[7, 19], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", "=", "2", "*", "32", ",", "hidden_size", "=", "100", ",", "output_size", "=", "2", ")", ":", "\n", "\t\t", "super", "(", "FF_SeqNSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqNSC.FF_SeqNSC.forward": [[20, 42], ["SeqNSC.FF_SeqNSC.fc1", "SeqNSC.FF_SeqNSC.fc2", "SeqNSC.FF_SeqNSC.fc3", "SeqNSC.FF_SeqNSC.fc4", "SeqNSC.FF_SeqNSC.fc5", "SeqNSC.FF_SeqNSC.out", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "nn", ".", "ReLU", "(", ")", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqNSC.Conv_SeqNSC.__init__": [[46, 78], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "x_dim", "=", "2", ",", "traj_len", "=", "32", ",", "output_size", "=", "2", ",", "nb_filters", "=", "128", ")", ":", "\n", "\t\t", "super", "(", "Conv_SeqNSC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "keep_prob", "=", "0.8", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "x_dim", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer2", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer3", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer4", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "self", ".", "nb_filters", ",", "self", ".", "nb_filters", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "traj_len", "*", "self", ".", "nb_filters", ",", "100", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc1", ".", "weight", ")", "\n", "self", ".", "layer5", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "fc1", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "100", ",", "output_size", ",", "bias", "=", "True", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc2", ".", "weight", ")", "# initialize parameters", "\n", "self", ".", "layer6", "=", "nn", ".", "Sequential", "(", "self", ".", "fc2", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqNSC.Conv_SeqNSC.forward": [[79, 89], ["SeqNSC.Conv_SeqNSC.layer1", "SeqNSC.Conv_SeqNSC.layer2", "SeqNSC.Conv_SeqNSC.layer3", "SeqNSC.Conv_SeqNSC.layer4", "SeqNSC.Conv_SeqNSC.view", "SeqNSC.Conv_SeqNSC.layer5", "SeqNSC.Conv_SeqNSC.layer6", "SeqNSC.Conv_SeqNSC.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "out", "=", "self", ".", "layer6", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.__init__": [[9, 19], ["get_state_space"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.get_state_space"], ["\t", "def", "__init__", "(", "self", ",", "horizon", "=", "5", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "1", ")", ":", "\n", "\t\t", "self", ".", "ranges", "=", "[", "]", "\n", "self", ".", "horizon", "=", "horizon", "\n", "self", ".", "state_dim", "=", "29", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "dt", "=", "horizon", "/", "n_steps", "\n", "self", ".", "state_space", "=", "get_state_space", "(", ")", "\n", "self", ".", "state_dim", "=", "self", ".", "state_space", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.diff_eq": [[20, 24], ["derivative"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.src.heli_utils.derivative"], ["", "def", "diff_eq", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "\n", "\t\t", "dxdt", "=", "derivative", "(", "x", ")", "\n", "return", "dxdt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.issafe": [[25, 33], ["None"], "methods", ["None"], ["", "def", "issafe", "(", "self", ",", "x", ")", ":", "\n", "# safe  1 if state x is safe, 0 if state x is unsafe.", "\n", "\t\t", "if", "x", "[", "28", "]", ">", "0", ":", "\n", "\t\t\t", "safety", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t", "safety", "=", "0", "\n", "\n", "", "return", "safety", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.rand_state": [[35, 40], ["numpy.random.rand"], "methods", ["None"], ["", "def", "rand_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "x", "=", "self", ".", "state_space", "[", ":", ",", "0", "]", "+", "(", "self", ".", "state_space", "[", ":", ",", "1", "]", "-", "self", ".", "state_space", "[", ":", ",", "0", "]", ")", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.gen_trajectories": [[41, 57], ["numpy.empty", "numpy.linspace", "range", "numpy.transpose", "Helicopter.Helicopter.rand_state", "scipy.integrate.odeint", "Helicopter.Helicopter.issafe", "Helicopter.Helicopter.rand_state"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.rand_state", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.issafe", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.rand_state"], ["", "def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "trajs", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "tspan", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "horizon", ",", "self", ".", "n_steps", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "x0", "=", "self", ".", "rand_state", "(", ")", "\n", "\n", "while", "not", "self", ".", "issafe", "(", "x0", ")", ":", "\n", "\t\t\t\t", "x0", "=", "self", ".", "rand_state", "(", ")", "\n", "\n", "", "xx", "=", "odeint", "(", "self", ".", "diff_eq", ",", "x0", ",", "tspan", ")", "\n", "trajs", "[", "i", "]", "=", "xx", ".", "T", "\n", "\n", "", "return", "np", ".", "transpose", "(", "trajs", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.gen_labels": [[59, 73], ["numpy.empty", "range", "scipy.integrate.odeint", "numpy.all", "Helicopter.Helicopter.issafe"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.issafe"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "5", ")", ":", "\n", "\t\t", "n_states", "=", "states", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\n", "\t\t\t", "x0", "=", "states", "[", "i", "]", "\n", "xx", "=", "odeint", "(", "self", ".", "diff_eq", ",", "x0", ",", "tspan", ")", "\n", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "self", ".", "issafe", "(", "states", "[", "i", "]", ")", ")", "#1 = safe, 0 = unsafe", "\n", "\n", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.get_noisy_measurments": [[74, 89], ["numpy.zeros", "range", "numpy.expand_dims", "range", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "\n", "", "obs_idx", "=", "-", "1", "\n", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "for", "j", "in", "range", "(", "t_sim", ")", ":", "\n", "\t\t\t\t", "noisy_measurements", "[", "i", ",", "j", "]", "=", "trajs", "[", "i", ",", "j", ",", "obs_idx", "]", "+", "np", ".", "random", ".", "randn", "(", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "", "return", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.Helicopter.Helicopter.gen_dataset": [[90, 107], ["Helicopter.Helicopter.gen_trajectories", "Helicopter.Helicopter.get_noisy_measurments", "Helicopter.Helicopter.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\t", "import", "pickle", "\n", "n_points", "=", "50000", "\n", "\n", "hc_model", "=", "Helicopter", "(", ")", "\n", "trajs", "=", "hc_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "noisy_measurments", "=", "hc_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "labels", "=", "hc_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n", "filename", "=", "'Datasets/HC_training_set_50K.pickle'", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "handle", ":", "\n", "\t\t", "pickle", ".", "dump", "(", "dataset_dict", ",", "handle", ")", "\n", "", "handle", ".", "close", "(", ")", "\n", "print", "(", "\"Data stored in: \"", ",", "filename", ")", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.__init__": [[6, 10], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "trainset_fn", ",", "testset_fn", ",", "validset_fn", ")", ":", "\n", "\t\t", "self", ".", "trainset_fn", "=", "trainset_fn", "\n", "self", ".", "testset_fn", "=", "testset_fn", "\n", "self", ".", "validset_fn", "=", "validset_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.add_calibration_path": [[11, 13], ["None"], "methods", ["None"], ["", "def", "add_calibration_path", "(", "self", ",", "calibrset_fn", ")", ":", "\n", "\t\t", "self", ".", "calibrset_fn", "=", "calibrset_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data": [[14, 18], ["SeqDataset.SeqDataset.load_train_data", "SeqDataset.SeqDataset.load_test_data", "SeqDataset.SeqDataset.load_validation_data"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_train_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_test_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_validation_data"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "load_train_data", "(", ")", "\n", "self", ".", "load_test_data", "(", ")", "\n", "self", ".", "load_validation_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_train_data": [[19, 55], ["open", "pickle.load", "open.close", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "int"], "methods", ["None"], ["", "def", "load_train_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "trainset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "self", ".", "Y_train", "=", "data", "[", "\"y\"", "]", "\n", "self", ".", "X_train", "=", "data", "[", "\"x\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "y_dim", "=", "self", ".", "Y_train", ".", "shape", "[", "2", "]", "\n", "self", ".", "x_dim", "=", "self", ".", "X_train", ".", "shape", "[", "2", "]", "\n", "self", ".", "n_training_points", "=", "self", ".", "X_train", ".", "shape", "[", "0", "]", "\n", "self", ".", "traj_len", "=", "self", ".", "X_train", ".", "shape", "[", "1", "]", "\n", "\n", "xmax", "=", "np", ".", "max", "(", "np", ".", "max", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "ymax", "=", "np", ".", "max", "(", "np", ".", "max", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "\n", "self", ".", "MAX", "=", "(", "xmax", ",", "ymax", ")", "\n", "\n", "xmin", "=", "np", ".", "min", "(", "np", ".", "min", "(", "self", ".", "X_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "ymin", "=", "np", ".", "min", "(", "np", ".", "min", "(", "self", ".", "Y_train", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "\n", "self", ".", "MIN", "=", "(", "xmin", ",", "ymin", ")", "\n", "\n", "self", ".", "X_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_train", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_train_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_train", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_train_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_train_scaled", ",", "(", "self", ".", "n_training_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_train_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_train_scaled", ",", "(", "self", ".", "n_training_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "\n", "self", ".", "T_train", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_training_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_training_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_train", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_train", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_test_data": [[57, 83], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_test_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "testset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_test_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_test", "=", "X", "\n", "\n", "self", ".", "Y_test", "=", "Y", "\n", "\n", "self", ".", "X_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_test", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_test_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_test", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_test_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_test_scaled", ",", "(", "self", ".", "n_test_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_test_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_test_scaled", ",", "(", "self", ".", "n_test_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_test", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_test_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_test_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_test", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_test", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_validation_data": [[85, 110], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_validation_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "validset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_val_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_val", "=", "X", "\n", "self", ".", "Y_val", "=", "Y", "\n", "\n", "self", ".", "X_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_val", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_val_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_val", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_val_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_val_scaled", ",", "(", "self", ".", "n_val_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_val_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_val_scaled", ",", "(", "self", ".", "n_val_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_val", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_val_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_val_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_val", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_val", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_calibration_data": [[112, 137], ["open", "pickle.load", "open.close", "numpy.reshape", "numpy.reshape", "numpy.zeros", "range", "int"], "methods", ["None"], ["", "def", "load_calibration_data", "(", "self", ")", ":", "\n", "\n", "\t\t", "file", "=", "open", "(", "self", ".", "calibrset_fn", ",", "'rb'", ")", "\n", "data", "=", "pickle", ".", "load", "(", "file", ")", "\n", "file", ".", "close", "(", ")", "\n", "\n", "X", "=", "data", "[", "\"x\"", "]", "\n", "Y", "=", "data", "[", "\"y\"", "]", "\n", "labels", "=", "data", "[", "\"cat_labels\"", "]", "\n", "\n", "self", ".", "n_cal_points", "=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "self", ".", "X_cal", "=", "X", "\n", "self", ".", "Y_cal", "=", "Y", "\n", "\n", "self", ".", "X_cal_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "X_cal", "-", "self", ".", "MIN", "[", "0", "]", ")", "/", "(", "self", ".", "MAX", "[", "0", "]", "-", "self", ".", "MIN", "[", "0", "]", ")", "\n", "self", ".", "Y_cal_scaled", "=", "-", "1", "+", "2", "*", "(", "self", ".", "Y_cal", "-", "self", ".", "MIN", "[", "1", "]", ")", "/", "(", "self", ".", "MAX", "[", "1", "]", "-", "self", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "self", ".", "X_cal_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "X_cal_scaled", ",", "(", "self", ".", "n_cal_points", ",", "self", ".", "x_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "self", ".", "Y_cal_scaled_flat", "=", "np", ".", "reshape", "(", "self", ".", "Y_cal_scaled", ",", "(", "self", ".", "n_cal_points", ",", "self", ".", "y_dim", "*", "self", ".", "traj_len", ")", ")", "\n", "\n", "self", ".", "T_cal", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_cal_points", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_cal_points", ")", ":", "\n", "\t\t\t", "self", ".", "T_cal", "[", "i", ",", "int", "(", "labels", "[", "i", "]", ")", "]", "=", "1", "\n", "", "self", ".", "L_cal", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches": [[138, 146], ["numpy.random.randint"], "methods", ["None"], ["", "def", "generate_mini_batches", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "ix", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_training_points", ",", "n_samples", ")", "\n", "Xb", "=", "self", ".", "X_train_scaled", "[", "ix", "]", "\n", "Yb", "=", "self", ".", "Y_train_scaled", "[", "ix", "]", "\n", "Lb", "=", "self", ".", "L_train", "[", "ix", "]", "\n", "\n", "return", "Xb", ",", "Yb", ",", "Lb", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches": [[147, 155], ["numpy.random.randint"], "methods", ["None"], ["", "def", "generate_flat_mini_batches", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "ix", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "self", ".", "n_training_points", ",", "n_samples", ")", "\n", "Xb", "=", "self", ".", "X_train_scaled_flat", "[", "ix", "]", "\n", "Yb", "=", "self", ".", "Y_train_scaled_flat", "[", "ix", "]", "\n", "Lb", "=", "self", ".", "L_train", "[", "ix", "]", "\n", "\n", "return", "Xb", ",", "Yb", ",", "Lb", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_nsc.Train_SeqNSC.__init__": [[16, 26], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "model_name", ",", "seq_dataset", ",", "net_type", "=", "\"FF\"", ",", "training_flag", "=", "True", ",", "idx", "=", "None", ",", "nb_filters", "=", "64", ")", ":", "\n", "\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "idx", "=", "idx", "\n", "self", ".", "training_flag", "=", "training_flag", "\n", "self", ".", "nb_filters", "=", "nb_filters", "\n", "if", "self", ".", "idx", ":", "\n", "\t\t\t", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_resuts/ID_\"", "+", "self", ".", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_nsc.Train_SeqNSC.compute_accuracy": [[28, 36], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["", "", "def", "compute_accuracy", "(", "self", ",", "real_label", ",", "hypothesis", ")", ":", "\n", "\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_nsc.Train_SeqNSC.train": [[38, 147], ["str", "print", "os.makedirs", "train_seq_nsc.Train_SeqNSC.seq_dataset.load_data", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "numpy.random.randint", "SeqNSC.FF_SeqNSC", "SeqNSC.Conv_SeqNSC", "train_seq_nsc.Train_SeqNSC.seq_nsc.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_seq_nsc.Train_SeqNSC.seq_nsc.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "range", "train_seq_nsc.Train_SeqNSC.seq_nsc", "nn.CrossEntropyLoss.", "val_losses.append", "val_accuracies.append", "losses.append", "accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_seq_nsc.Train_SeqNSC.seq_nsc", "nn.CrossEntropyLoss.", "nn.CrossEntropyLoss.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "nn.CrossEntropyLoss.item", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "numpy.mean", "numpy.mean", "int", "int", "int", "train_seq_nsc.Train_SeqNSC.seq_dataset.generate_flat_mini_batches", "train_seq_nsc.Train_SeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "FloatTensor", "LongTensor", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "nn.CrossEntropyLoss.item"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "def", "train", "(", "self", ",", "n_epochs", ",", "batch_size", ",", "lr", ")", ":", "\n", "\n", "\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", "=", "FF_SeqNSC", "(", "input_size", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\n", "\t\t\t", "self", ".", "seq_nsc", "=", "Conv_SeqNSC", "(", "x_dim", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ",", "traj_len", "=", "int", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "nb_filters", "=", "self", ".", "nb_filters", ")", "\n", "\n", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "seq_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "# Softmax is internally computed.", "\n", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "# Select a minibatch", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X", ",", "Y", ",", "T", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "# initialization of the gradients", "\n", "\n", "", "Xt", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "Tt", "=", "Variable", "(", "LongTensor", "(", "T", ")", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# Forward propagation: compute the output", "\n", "hypothesis", "=", "self", ".", "seq_nsc", "(", "Xt", ")", "\n", "\n", "# Computation of the cost J", "\n", "loss", "=", "loss_fnc", "(", "hypothesis", ",", "Tt", ")", "# <= compute the loss function", "\n", "\n", "# Backward propagation", "\n", "loss", ".", "backward", "(", ")", "# <= compute the gradients", "\n", "\n", "# Update parameters (weights and biais)", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tt", ",", "hypothesis", ")", ")", "\n", "tmp_loss", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_hypothesis", "=", "self", ".", "seq_nsc", "(", "Xval_t", ")", "\n", "val_loss", "=", "loss_fnc", "(", "val_hypothesis", ",", "Tval_t", ")", "\n", "val_losses", ".", "append", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_hypothesis", ")", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "torch", ".", "save", "(", "self", ".", "seq_nsc", ",", "self", ".", "net_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_nsc.Train_SeqNSC.load_trained_net": [[149, 155], ["torch.load", "train_seq_nsc.Train_SeqNSC.seq_nsc.eval", "train_seq_nsc.Train_SeqNSC.seq_nsc.cuda"], "methods", ["None"], ["", "def", "load_trained_net", "(", "self", ",", "n_epochs", ")", ":", "\n", "\t\t", "self", ".", "net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_nsc", "=", "torch", ".", "load", "(", "self", ".", "net_path", ")", "\n", "self", ".", "seq_nsc", ".", "eval", "(", ")", "\n", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_seq_nsc.Train_SeqNSC.generate_test_results": [[157, 175], ["torch.autograd.Variable", "train_seq_nsc.Train_SeqNSC.seq_nsc", "train_seq_nsc.Train_SeqNSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "numpy.transpose", "torch.autograd.Variable", "LongTensor", "str", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["", "", "def", "generate_test_results", "(", "self", ")", ":", "\n", "\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "X", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_test", ")", ")", "\n", "test_preds", "=", "self", ".", "seq_nsc", "(", "Xtest", ")", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "test_preds", ")", "\n", "print", "(", "\"Test accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results.txt\"", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.__init__": [[8, 22], ["numpy.array"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "time_horizon", "=", "4", ",", "n_steps", "=", "32", ",", "noise_sigma", "=", "0.5", ")", ":", "\n", "\t\t", "self", ".", "a", "=", "0.02", "\n", "self", ".", "b", "=", "0.2", "\n", "self", ".", "c", "=", "-", "65", "\n", "self", ".", "d", "=", "8", "\n", "self", ".", "I", "=", "40", "\n", "self", ".", "state_dim", "=", "2", "\n", "self", ".", "obs_dim", "=", "1", "\n", "self", ".", "ranges", "=", "np", ".", "array", "(", "[", "[", "-", "68.5", ",", "30.", "]", ",", "[", "0.", ",", "25.", "]", "]", ")", "\n", "self", ".", "unsafe_region", "=", "[", "-", "np", ".", "infty", ",", "-", "68.5", "]", "# v", "\n", "self", ".", "time_horizon", "=", "time_horizon", "\n", "self", ".", "noise_sigma", "=", "noise_sigma", "\n", "self", ".", "n_steps", "=", "n_steps", "\n", "self", ".", "dt", "=", "time_horizon", "/", "n_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.diff_eq_iv": [[24, 32], ["numpy.zeros"], "methods", ["None"], ["", "def", "diff_eq_iv", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "\n", "\t\t", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "0.04", "*", "y", "[", "0", "]", "**", "2", "+", "5", "*", "y", "[", "0", "]", "+", "140", "-", "y", "[", "1", "]", "+", "self", ".", "I", "\n", "dydt", "[", "1", "]", "=", "self", ".", "a", "*", "(", "self", ".", "b", "*", "y", "[", "0", "]", "-", "y", "[", "1", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.diff_eq": [[33, 41], ["numpy.zeros"], "methods", ["None"], ["", "def", "diff_eq", "(", "self", ",", "y", ",", "t", ")", ":", "\n", "\t\t", "y", "=", "y", "if", "y", "[", "0", "]", ">=", "30", "else", "(", "self", ".", "c", ",", "y", "[", "1", "]", "+", "self", ".", "d", ")", "\n", "dydt", "=", "np", ".", "zeros", "(", "self", ".", "state_dim", ")", "\n", "\n", "dydt", "[", "0", "]", "=", "0.04", "*", "y", "[", "0", "]", "**", "2", "+", "5", "*", "y", "[", "0", "]", "+", "140", "-", "y", "[", "1", "]", "+", "self", ".", "I", "\n", "dydt", "[", "1", "]", "=", "self", ".", "a", "*", "(", "self", ".", "b", "*", "y", "[", "0", "]", "-", "y", "[", "1", "]", ")", "\n", "\n", "return", "dydt", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.sample_init_state": [[42, 45], ["numpy.random.rand"], "methods", ["None"], ["", "def", "sample_init_state", "(", "self", ")", ":", "\n", "\n", "\t\t", "return", "np", ".", "random", ".", "rand", "(", "self", ".", "state_dim", ")", "*", "(", "self", ".", "ranges", "[", ":", ",", "1", "]", "-", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "+", "self", ".", "ranges", "[", ":", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.jump_condition": [[46, 51], ["None"], "methods", ["None"], ["", "def", "jump_condition", "(", "self", ",", "t", ",", "y", ")", ":", "\n", "\t\t", "if", "y", "[", "0", "]", ">=", "30", ":", "\n", "\t\t\t", "return", "0", "\n", "", "else", ":", "\n", "\t\t\t", "return", "1", "\n", "# Define terminal condition and type-change flag", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories": [[54, 94], ["numpy.linspace", "numpy.empty", "SpikingNeuron.SpikingNeuron.sample_init_state", "numpy.zeros", "scipy.integrate.solve_ivp", "numpy.all", "numpy.all", "numpy.hstack", "numpy.hstack", "len", "numpy.array", "scipy.integrate.solve_ivp", "numpy.hstack", "numpy.hstack"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.sample_init_state"], ["def", "gen_trajectories", "(", "self", ",", "n_samples", ")", ":", "\n", "\n", "\t\t", "time_grid", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "time_horizon", ",", "self", ".", "n_steps", ")", "\n", "trajectories", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "self", ".", "n_steps", ",", "self", ".", "state_dim", ")", ")", "\n", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "#print(\"Point {}/{}\".format(i+1,n_samples))", "\n", "\t\t\t", "y0", "=", "self", ".", "sample_init_state", "(", ")", "\n", "\n", "time_grid_sol", "=", "np", ".", "zeros", "(", "(", "self", ".", "state_dim", ",", "self", ".", "n_steps", ")", ")", "\n", "dt", "=", "self", ".", "time_horizon", "/", "self", ".", "n_steps", "\n", "\n", "count", ",", "t", "=", "0", ",", "0", "\n", "while", "count", "<", "self", ".", "n_steps", ":", "\n", "\t\t\t\t", "tspan", "=", "[", "t", ",", "t", "+", "dt", "]", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "tspan", ",", "y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "if", "t", "==", "0", ":", "\n", "\t\t\t\t\t", "global_sol", "=", "sol", ".", "y", "\n", "global_t", "=", "sol", ".", "t", "\n", "time_grid_sol", "[", ":", ",", "0", "]", "=", "y0", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "time_grid_sol", "[", ":", ",", "count", "]", "=", "y0", "\n", "\n", "\n", "", "while", "len", "(", "sol", ".", "t_events", "[", "0", "]", ")", ">", "0", ":", "\n", "\t\t\t\t\t", "new_tspan", "=", "[", "sol", ".", "t_events", "[", "0", "]", ",", "t", "+", "dt", "]", "\n", "new_y0", "=", "np", ".", "array", "(", "[", "self", ".", "c", ",", "self", ".", "d", "+", "sol", ".", "y_events", "[", "0", "]", "[", "0", ",", "1", "]", "]", ")", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "new_tspan", ",", "new_y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "", "y0", "=", "global_sol", "[", ":", ",", "-", "1", "]", "\n", "count", "+=", "1", "\n", "t", "+=", "dt", "\n", "", "if", "np", ".", "all", "(", "time_grid_sol", "[", ":", ",", "-", "1", "]", ">=", "self", ".", "ranges", "[", ":", ",", "0", "]", ")", "and", "np", ".", "all", "(", "time_grid_sol", "[", ":", ",", "-", "1", "]", "<=", "self", ".", "ranges", "[", ":", ",", "1", "]", ")", ":", "\n", "\t\t\t\t", "trajectories", "[", "i", "]", "=", "time_grid_sol", ".", "T", "\n", "i", "+=", "1", "\n", "\n", "", "", "return", "trajectories", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments": [[96, 108], ["numpy.zeros", "range", "numpy.expand_dims", "numpy.random.randn"], "methods", ["None"], ["", "def", "get_noisy_measurments", "(", "self", ",", "full_trajs", ",", "new_sigma", "=", "0", ")", ":", "\n", "\n", "\t\t", "n_samples", ",", "t_sim", ",", "state_dim", "=", "full_trajs", ".", "shape", "\n", "if", "new_sigma", "==", "0", ":", "\n", "\t\t\t", "sigm", "=", "self", ".", "noise_sigma", "\n", "", "else", ":", "\n", "\t\t\t", "sigm", "=", "new_sigma", "\n", "", "noisy_measurements", "=", "np", ".", "zeros", "(", "(", "n_samples", ",", "t_sim", ")", ")", "# 1-dim measurement", "\n", "for", "i", "in", "range", "(", "n_samples", ")", ":", "\n", "\t\t\t", "noisy_measurements", "[", "i", "]", "=", "full_trajs", "[", "i", ",", ":", ",", "1", "]", "+", "np", ".", "random", ".", "randn", "(", "t_sim", ")", "*", "sigm", "# we observe variable u = y[1]", "\n", "\n", "", "return", "np", ".", "expand_dims", "(", "noisy_measurements", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels": [[110, 133], ["numpy.empty", "range", "scipy.integrate.solve_ivp", "numpy.all", "len", "numpy.array", "scipy.integrate.solve_ivp", "numpy.hstack", "numpy.hstack"], "methods", ["None"], ["", "def", "gen_labels", "(", "self", ",", "states", ",", "future_horizon", "=", "16", ")", ":", "\n", "\n", "\t\t", "n_states", ",", "state_dim", "=", "states", ".", "shape", "\n", "labels", "=", "np", ".", "empty", "(", "n_states", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_states", ")", ":", "\n", "\t\t\t", "tspan", "=", "[", "0", ",", "future_horizon", "]", "\n", "y0", "=", "states", "[", "i", "]", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "tspan", ",", "y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "\n", "global_sol", "=", "sol", ".", "y", "\n", "global_t", "=", "sol", ".", "t", "\n", "\n", "while", "len", "(", "sol", ".", "t_events", "[", "0", "]", ")", ">", "0", ":", "\n", "\t\t\t\t", "new_tspan", "=", "[", "sol", ".", "t_events", "[", "0", "]", ",", "future_horizon", "]", "\n", "new_y0", "=", "np", ".", "array", "(", "[", "self", ".", "c", ",", "self", ".", "d", "+", "sol", ".", "y_events", "[", "0", "]", "[", "0", ",", "1", "]", "]", ")", "\n", "sol", "=", "solve_ivp", "(", "self", ".", "diff_eq_iv", ",", "new_tspan", ",", "new_y0", ",", "events", "=", "self", ".", "jump_condition", ")", "\n", "global_sol", "=", "np", ".", "hstack", "(", "(", "global_sol", ",", "sol", ".", "y", "[", ":", ",", "1", ":", "]", ")", ")", "\n", "global_t", "=", "np", ".", "hstack", "(", "(", "global_t", ",", "sol", ".", "t", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "labels", "[", "i", "]", "=", "np", ".", "all", "(", "(", "global_sol", "[", "0", "]", ">=", "-", "68.5", ")", ")", "# 1 = safe; 0 = unsafe", "\n", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_dataset": [[134, 151], ["SpikingNeuron.SpikingNeuron.gen_trajectories", "SpikingNeuron.SpikingNeuron.get_noisy_measurments", "SpikingNeuron.SpikingNeuron.gen_labels", "print", "handle.close", "print", "open", "pickle.dump", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels"], ["", "", "if", "__name__", "==", "'__main__'", ":", "\n", "\n", "\t", "n_points", "=", "10000", "\n", "\n", "sn_model", "=", "SpikingNeuron", "(", "noise_sigma", "=", "0.1", ")", "\n", "trajs", "=", "sn_model", ".", "gen_trajectories", "(", "n_points", ")", "\n", "noisy_measurments", "=", "sn_model", ".", "get_noisy_measurments", "(", "trajs", ")", "\n", "labels", "=", "sn_model", ".", "gen_labels", "(", "trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "print", "(", "\"Percentage of positive points: \"", ",", "np", ".", "sum", "(", "labels", ")", "/", "n_points", ")", "\n", "\n", "dataset_dict", "=", "{", "\"x\"", ":", "trajs", ",", "\"y\"", ":", "noisy_measurments", ",", "\"cat_labels\"", ":", "labels", "}", "\n", "\n", "filename", "=", "'Datasets/SN1_test_set_10K.pickle'", "\n", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "handle", ":", "\n", "\t\t", "pickle", ".", "dump", "(", "dataset_dict", ",", "handle", ")", "\n", "", "handle", ".", "close", "(", ")", "\n", "print", "(", "\"Data stored in: \"", ",", "filename", ")", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqSE.FF_SeqSE.__init__": [[6, 14], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "FF_SeqSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "hidden_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "out", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "output_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqSE.FF_SeqSE.forward": [[15, 37], ["SeqSE.FF_SeqSE.fc1", "SeqSE.FF_SeqSE.fc2", "SeqSE.FF_SeqSE.fc3", "SeqSE.FF_SeqSE.fc4", "SeqSE.FF_SeqSE.fc5", "SeqSE.FF_SeqSE.out", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "drop_prob", "=", "0.1", "\n", "\n", "output", "=", "self", ".", "fc1", "(", "x", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc3", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc4", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "fc5", "(", "output", ")", "\n", "output", "=", "nn", ".", "LeakyReLU", "(", ")", "(", "output", ")", "\n", "output", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", "(", "output", ")", "\n", "output", "=", "self", ".", "out", "(", "output", ")", "\n", "output", "=", "torch", ".", "tanh", "(", "output", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqSE.Conv_SeqSE.__init__": [[41, 65], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Conv1d", "torch.Conv1d", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__"], ["\t", "def", "__init__", "(", "self", ",", "input_size", ",", "nb_filters", ",", "output_size", ")", ":", "\n", "\t\t", "super", "(", "Conv_SeqSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "keep_prob", "=", "0.8", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "input_size", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer2", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer3", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer4", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "nb_filters", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "1", "-", "self", ".", "keep_prob", ")", ")", "\n", "self", ".", "layer5", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv1d", "(", "nb_filters", ",", "output_size", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqSE.Conv_SeqSE.forward": [[68, 77], ["SeqSE.Conv_SeqSE.layer1", "SeqSE.Conv_SeqSE.layer2", "SeqSE.Conv_SeqSE.layer3", "SeqSE.Conv_SeqSE.layer4", "SeqSE.Conv_SeqSE.layer5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\t\t", "out", "=", "self", ".", "layer1", "(", "x", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "layer5", "(", "out", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.label_correct_incorrect_pred": [[8, 18], ["len", "numpy.ones", "range"], "function", ["None"], ["def", "label_correct_incorrect_pred", "(", "predicted_class", ",", "real_class", ")", ":", "\n", "\n", "\t", "n_points", "=", "len", "(", "predicted_class", ")", "# 1 = correct label; -1 wrong label", "\n", "\n", "error_indexes", "=", "np", ".", "ones", "(", "n_points", ")", "\n", "for", "j", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t", "if", "real_class", "[", "j", "]", "!=", "predicted_class", "[", "j", "]", ":", "\n", "\t\t\t", "error_indexes", "[", "j", "]", "=", "-", "1", "\n", "\n", "", "", "return", "error_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.train_svc_query_strategy": [[20, 28], ["time.time", "sklearn.svm.SVC", "svm.SVC.fit", "print", "time.time"], "function", ["None"], ["", "def", "train_svc_query_strategy", "(", "kernel_type", ",", "unc_input", ",", "error_labels", ")", ":", "\n", "\n", "\t", "start", "=", "time", ".", "time", "(", ")", "\n", "wclf", "=", "svm", ".", "SVC", "(", "kernel", "=", "kernel_type", ",", "gamma", "=", "'scale'", ",", "class_weight", "=", "'balanced'", ",", "verbose", "=", "False", ",", "tol", "=", "1e-10", ",", "decision_function_shape", "=", "'ovo'", ")", "#max_iter=100000,", "\n", "wclf", ".", "fit", "(", "unc_input", ",", "error_labels", ")", "\n", "print", "(", "\"Time required to train the SVC rejetion rule: \"", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "return", "wclf", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy": [[30, 32], ["trained_svc.predict"], "function", ["None"], ["", "def", "apply_svc_query_strategy", "(", "trained_svc", ",", "unc_input", ")", ":", "\n", "\t", "return", "trained_svc", ".", "predict", "(", "unc_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.PONSC_active_sample_query": [[34, 58], ["model_class.gen_trajectories", "model_class.get_noisy_measurments", "numpy.empty", "range", "utility_functions.apply_svc_query_strategy", "model_class.gen_labels", "conf_pred.compute_confidence_credibility", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility"], ["", "def", "PONSC_active_sample_query", "(", "pool_size", ",", "model_class", ",", "conf_pred", ",", "trained_svc", ",", "dataset", ")", ":", "\n", "# For PO NSC", "\n", "\n", "# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n", "pool_of_meas_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_meas", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "n_batches", "=", "pool_size", "//", "5000", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "5000", ":", "(", "i", "+", "1", ")", "*", "5000", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", "[", "i", "*", "5000", ":", "(", "i", "+", "1", ")", "*", "5000", "]", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_inputs_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n", "unc_labels", "=", "model_class", ".", "gen_labels", "(", "unc_trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "return", "unc_inputs_scaled", ",", "unc_labels", "\n", "\n", "\n", "", "def", "Comb_PONSC_active_sample_query", "(", "pool_size", ",", "model_class", ",", "conf_pred", ",", "trained_svc", ",", "se_fnc", ",", "dataset", ")", ":", "\n", "# For Combined PO NSC", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.Comb_PONSC_active_sample_query": [[60, 86], ["model_class.gen_trajectories", "model_class.get_noisy_measurments", "numpy.empty", "range", "utility_functions.apply_svc_query_strategy", "model_class.gen_labels", "conf_pred.compute_confidence_credibility", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_trajectories", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.get_noisy_measurments", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.apply_svc_query_strategy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SpikingNeuron.SpikingNeuron.gen_labels", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.CP_Classification.ICP_Classification.compute_confidence_credibility"], ["# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_trajs_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_trajs", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n", "pool_of_meas_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_meas", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "1", "]", "-", "dataset", ".", "MIN", "[", "1", "]", ")", "\n", "\n", "pool_of_estim_states", "=", "se_fnc", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "# on estimate states", "\n", "BS", "=", "1000", "\n", "n_batches", "=", "pool_size", "//", "BS", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "pool_of_estim_states", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", ")", "\n", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_trajs_scaled", "=", "pool_of_trajs_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_meas_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n", "unc_labels", "=", "model_class", ".", "gen_labels", "(", "unc_trajs", "[", ":", ",", "-", "1", "]", ")", "\n", "\n", "return", "unc_meas_scaled", ",", "unc_trajs_scaled", ",", "unc_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.compute_rejection_rate": [[88, 94], ["len", "len"], "function", ["None"], ["# For Combined PO NSC", "\n", "\n", "# Generate a pool of random inputs (remember to scale them)", "\n", "\t", "pool_of_trajs", "=", "model_class", ".", "gen_trajectories", "(", "pool_size", ")", "\n", "pool_of_trajs_scaled", "=", "-", "1", "+", "2", "*", "(", "pool_of_trajs", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "/", "(", "dataset", ".", "MAX", "[", "0", "]", "-", "dataset", ".", "MIN", "[", "0", "]", ")", "\n", "\n", "pool_of_meas", "=", "model_class", ".", "get_noisy_measurments", "(", "pool_of_trajs", ")", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.compute_error_detection_rate": [[96, 109], ["len", "len", "range"], "function", ["None"], ["\n", "#pool_of_estim_states = se_fnc(np.transpose(pool_of_meas_scaled,(0,2,1)))", "\n", "BS", "=", "1000", "\n", "n_batches", "=", "pool_size", "//", "BS", "\n", "pool_conf_cred", "=", "np", ".", "empty", "(", "(", "pool_size", ",", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "n_batches", ")", ":", "\n", "\t\t", "pool_conf_cred", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", "=", "conf_pred", ".", "compute_confidence_credibility", "(", "np", ".", "transpose", "(", "pool_of_meas_scaled", "[", "i", "*", "BS", ":", "(", "i", "+", "1", ")", "*", "BS", "]", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", "\n", "\n", "", "pool_pred_errors", "=", "apply_svc_query_strategy", "(", "trained_svc", ",", "pool_conf_cred", ")", "\n", "\n", "unc_trajs", "=", "pool_of_trajs", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_trajs_scaled", "=", "pool_of_trajs_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "unc_meas_scaled", "=", "pool_of_meas_scaled", "[", "(", "1", "-", "pool_pred_errors", ")", ".", "astype", "(", "bool", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.label_fp_fn": [[111, 124], ["len", "numpy.zeros", "numpy.zeros", "range"], "function", ["None"], ["\n", "return", "unc_meas_scaled", ",", "unc_trajs_scaled", ",", "unc_labels", "\n", "\n", "\n", "", "def", "compute_rejection_rate", "(", "estimated_errors", ")", ":", "\n", "\n", "\t", "nb_points", "=", "len", "(", "estimated_errors", ")", "\n", "nb_rej", "=", "len", "(", "estimated_errors", "[", "(", "estimated_errors", "<", "0", ")", "]", ")", "\n", "\n", "return", "nb_rej", "/", "nb_points", "\n", "\n", "\n", "", "def", "compute_error_detection_rate", "(", "estim_errors", ",", "errors", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.compute_fp_fn_detection_rate": [[126, 150], ["numpy.sum", "numpy.sum", "print", "len", "range", "print", "print"], "function", ["None"], ["nb_points", "=", "len", "(", "errors", ")", "\n", "\n", "nb_detected", "=", "0", "\n", "for", "i", "in", "range", "(", "nb_points", ")", ":", "\n", "\t\t", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "errors", "[", "i", "]", "==", "-", "1", ")", ":", "\n", "\t\t\t", "nb_detected", "+=", "1", "\n", "\n", "", "", "detection_rate", "=", "nb_detected", "/", "nb_errors", "\n", "\n", "return", "nb_detected", ",", "nb_errors", ",", "detection_rate", "\n", "\n", "\n", "", "def", "label_fp_fn", "(", "predicted_class", ",", "real_class", ")", ":", "\n", "\n", "\t", "n_points", "=", "len", "(", "predicted_class", ")", "# 1 = correct label; -1 wrong label", "\n", "\n", "fp_indexes", "=", "np", ".", "zeros", "(", "n_points", ")", "\n", "fn_indexes", "=", "np", ".", "zeros", "(", "n_points", ")", "\n", "for", "j", "in", "range", "(", "n_points", ")", ":", "\n", "\t\t", "if", "real_class", "[", "j", "]", "==", "1", "and", "predicted_class", "[", "j", "]", "==", "0", ":", "\n", "\t\t\t", "fp_indexes", "[", "j", "]", "=", "1", "\n", "", "if", "real_class", "[", "j", "]", "==", "0", "and", "predicted_class", "[", "j", "]", "==", "1", ":", "\n", "\t\t\t", "fn_indexes", "[", "j", "]", "=", "1", "\n", "\n", "", "", "return", "fp_indexes", ",", "fn_indexes", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.compute_accuracy": [[152, 161], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "function", ["None"], ["\n", "", "def", "compute_fp_fn_detection_rate", "(", "estim_errors", ",", "FPs", ",", "FNs", ")", ":", "\n", "\n", "\t", "nb_fp", "=", "np", ".", "sum", "(", "FPs", ")", "\n", "nb_fn", "=", "np", ".", "sum", "(", "FNs", ")", "\n", "\n", "print", "(", "\"tot nb of errors = \"", ",", "nb_fp", "+", "nb_fn", ")", "\n", "nb_points", "=", "len", "(", "estim_errors", ")", "\n", "\n", "nb_detected_fp", "=", "0", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.compute_np_accuracy": [[162, 171], ["numpy.argmax", "range", "len", "len"], "function", ["None"], ["nb_detected_fn", "=", "0", "\n", "for", "i", "in", "range", "(", "nb_points", ")", ":", "\n", "\t\t", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "FPs", "[", "i", "]", "==", "1", ")", ":", "\n", "\t\t\t", "nb_detected_fp", "+=", "1", "\n", "", "if", "(", "estim_errors", "[", "i", "]", "==", "-", "1", ")", "and", "(", "FNs", "[", "i", "]", "==", "1", ")", ":", "\n", "\t\t\t", "nb_detected_fn", "+=", "1", "\n", "\n", "", "", "fp_detection_rate", "=", "nb_detected_fp", "/", "nb_fp", "\n", "fn_detection_rate", "=", "nb_detected_fn", "/", "nb_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.plot_test_results": [[173, 188], ["os.makedirs", "numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].plot", "axs[].plot"], "function", ["None"], ["print", "(", "\"nb_detected_fp/nb_fp = {}/{}\"", ".", "format", "(", "nb_detected_fp", ",", "nb_fp", ")", ")", "\n", "print", "(", "\"nb_detected_fn/nb_fn = {}/{}\"", ".", "format", "(", "nb_detected_fn", ",", "nb_fn", ")", ")", "\n", "\n", "return", "fp_detection_rate", ",", "fn_detection_rate", ",", "res_tuple", "\n", "\n", "\n", "", "def", "compute_accuracy", "(", "real_label", ",", "hypothesis", ")", ":", "\n", "\n", "\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.utility_functions.plot_test_results_w_coverage": [[189, 204], ["os.makedirs", "numpy.arange", "range", "matplotlib.subplots", "range", "matplotlib.tight_layout", "fig.savefig", "matplotlib.close", "axs[].scatter", "axs[].plot", "axs[].fill_between"], "function", ["None"], ["", "def", "compute_np_accuracy", "(", "real_label", ",", "hypothesis", ")", ":", "\n", "\n", "\t", "pred_label", "=", "np", ".", "argmax", "(", "hypothesis", ",", "axis", "=", "1", ")", "\n", "acc", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "real_label", ")", ")", ":", "\n", "\t\t", "if", "pred_label", "[", "i", "]", "==", "real_label", "[", "i", "]", ":", "\n", "\t\t\t", "acc", "+=", "1", "\n", "", "", "accuracy", "=", "acc", "/", "len", "(", "real_label", ")", "\n", "return", "accuracy", "\n", "\n", "\n", "", "def", "plot_test_results", "(", "dataset", ",", "estim_states", ",", "path", ")", ":", "\n", "\n", "\t", "plots_path", "=", "path", "+", "\"/SeqSE_Plots\"", "\n", "os", ".", "makedirs", "(", "plots_path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.__init__": [[19, 30], ["None"], "methods", ["None"], ["\n", "\t\t", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "seq_dataset", "=", "seq_dataset", "\n", "self", ".", "net_type", "=", "net_type", "\n", "self", ".", "fine_tuning_flag", "=", "fine_tuning_flag", "\n", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "seq_nsc_idx", "=", "seq_nsc_idx", "[", "0", "]", "\n", "self", ".", "seq_nsc_n_prev_epochs", "=", "seq_nsc_idx", "[", "1", "]", "\n", "self", ".", "seq_se_idx", "=", "seq_se_idx", "[", "0", "]", "\n", "self", ".", "seq_se_n_prev_epochs", "=", "seq_se_idx", "[", "1", "]", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy": [[33, 41], ["accuracy.item", "hypothesis.data.round", "hypothesis.data.max"], "methods", ["None"], ["\t\t", "if", "hypothesis", ".", "shape", "[", "1", "]", "==", "2", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "else", ":", "\n", "\t\t\t", "pred_label", "=", "hypothesis", ".", "data", ".", "round", "(", ")", "\n", "\n", "", "accuracy", "=", "(", "(", "pred_label", ".", "data", "==", "real_label", ".", "data", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "return", "accuracy", ".", "item", "(", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.train": [[43, 206], ["print", "os.makedirs", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.load_data", "nn.MSELoss", "torch.optim.Adam", "torch.optim.Adam", "int", "torch.autograd.Variable", "range", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.title", "matplotlib.figure.savefig", "matplotlib.close", "torch.save", "torch.save", "str", "torch.load", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.eval", "torch.load", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.eval", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.cuda", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.cuda", "nn.MSELoss", "nn.CrossEntropyLoss", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc.parameters", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "range", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "losses.append", "val_losses.append", "accuracies.append", "val_accuracies.append", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.random.randint", "SeqNSC.FF_SeqNSC", "SeqSE.FF_SeqSE", "SeqNSC.Conv_SeqNSC", "SeqSE.Conv_SeqSE", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "comb_loss_fnc1.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "comb_loss_fnc2.backward", "torch.optim.Adam.step", "tmp_acc.append", "tmp_loss.append", "print", "numpy.mean", "val_comb_loss_fnc.item", "numpy.mean", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "int", "int", "int", "int", "int", "int", "int", "int", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_flat_mini_batches", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "comb_loss_fnc1.item", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_flat_mini_batches", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_dataset.generate_mini_batches", "numpy.transpose", "numpy.transpose", "FloatTensor", "FloatTensor", "LongTensor", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "comb_loss_fnc2.item", "nn.CrossEntropyLoss.", "nn.MSELoss.", "int", "nn.CrossEntropyLoss.", "nn.MSELoss.", "nn.CrossEntropyLoss.", "nn.MSELoss."], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.load_data", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_flat_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.SeqDataset.SeqDataset.generate_mini_batches", "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["\t\t", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "self", ".", "seq_nsc_idx", "+", "\"+\"", "+", "self", ".", "seq_se_idx", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "idx", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "0", ",", "100000", ")", ")", "\n", "", "print", "(", "\"ID = \"", ",", "self", ".", "idx", ")", "\n", "\n", "self", ".", "results_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_StochSeqNSC_results/ID_\"", "+", "self", ".", "idx", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "seq_dataset", ".", "load_data", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "\n", "if", "self", ".", "fine_tuning_flag", ":", "\n", "\t\t\t", "self", ".", "seq_nsc_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqNSC_results/ID_\"", "+", "self", ".", "seq_nsc_idx", "\n", "self", ".", "seq_se_path", "=", "self", ".", "model_name", "+", "\"/\"", "+", "self", ".", "net_type", "+", "\"_SeqSE_results/ID_\"", "+", "self", ".", "seq_se_idx", "\n", "\n", "self", ".", "seq_nsc", "=", "torch", ".", "load", "(", "self", ".", "seq_nsc_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "self", ".", "seq_nsc_n_prev_epochs", ")", ")", "\n", "self", ".", "seq_nsc", ".", "eval", "(", ")", "\n", "self", ".", "seq_se", "=", "torch", ".", "load", "(", "self", ".", "seq_se_path", "+", "\"/seq_state_estimator_{}epochs.pt\"", ".", "format", "(", "self", ".", "seq_se_n_prev_epochs", ")", ")", "\n", "self", ".", "seq_se", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t", "n_hidden", "=", "100", "\n", "self", ".", "seq_nsc", "=", "FF_SeqNSC", "(", "input_size", "=", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "self", ".", "seq_se", "=", "FF_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ",", "int", "(", "n_hidden", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", "*", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "n_filters", "=", "64", "\n", "self", ".", "seq_nsc", "=", "Conv_SeqNSC", "(", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "traj_len", ")", ")", "\n", "self", ".", "seq_se", "=", "Conv_SeqSE", "(", "int", "(", "self", ".", "seq_dataset", ".", "y_dim", ")", ",", "int", "(", "n_filters", ")", ",", "int", "(", "self", ".", "seq_dataset", ".", "x_dim", ")", ")", "\n", "\n", "", "", "if", "cuda", ":", "\n", "\t\t\t", "self", ".", "seq_nsc", ".", "cuda", "(", ")", "\n", "self", ".", "seq_se", ".", "cuda", "(", ")", "\n", "\n", "", "if", "self", ".", "seq_nsc", ".", "output_size", "==", "1", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t", "nsc_loss_fnc", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "se_loss_fnc", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "optimizer_nsc", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_nsc", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "optimizer_se", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "seq_se", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ")", "#, betas=(opt.b1, opt.b2)", "\n", "\n", "self", ".", "seq_nsc_net_path", "=", "self", ".", "results_path", "+", "\"/seq_nsc_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "self", ".", "seq_se_net_path", "=", "self", ".", "results_path", "+", "\"/seq_se_{}epochs.pt\"", ".", "format", "(", "n_epochs", ")", "\n", "\n", "w", "=", "0.5", "\n", "\n", "losses", "=", "[", "]", "\n", "val_losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "val_accuracies", "=", "[", "]", "\n", "\n", "bat_per_epo", "=", "int", "(", "self", ".", "seq_dataset", ".", "n_training_points", "/", "batch_size", ")", "\n", "n_steps", "=", "bat_per_epo", "*", "n_epochs", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_val_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "Xv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Yv", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_val_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xval_t", "=", "Variable", "(", "FloatTensor", "(", "Xv", ")", ")", "\n", "Yval_t", "=", "Variable", "(", "FloatTensor", "(", "Yv", ")", ")", "\n", "\n", "", "Tval_t", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_val", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "\n", "\t\t\t", "tmp_acc", "=", "[", "]", "\n", "tmp_loss", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "bat_per_epo", ")", ":", "\n", "\n", "\t\t\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X1", ",", "Y1", ",", "T1", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X1", ",", "Y1", ",", "T1", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X1", "=", "np", ".", "transpose", "(", "X1", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y1", "=", "np", ".", "transpose", "(", "Y1", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "", "X1t", "=", "Variable", "(", "FloatTensor", "(", "X1", ")", ")", "\n", "Y1t", "=", "Variable", "(", "FloatTensor", "(", "Y1", ")", ")", "\n", "T1t", "=", "Variable", "(", "LongTensor", "(", "T1", ")", ")", "\n", "\n", "optimizer_se", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim1", "=", "self", ".", "seq_se", "(", "Y1t", ")", "\n", "label_hypothesis1", "=", "self", ".", "seq_nsc", "(", "state_estim1", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc1", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis1", ",", "T1t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim1", ",", "X1t", ")", "\n", "comb_loss_fnc1", ".", "backward", "(", ")", "\n", "\n", "optimizer_se", ".", "step", "(", ")", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T1t", ",", "label_hypothesis1", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc1", ".", "item", "(", ")", ")", "\n", "\n", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t\t\t", "X2", ",", "Y2", ",", "T2", "=", "self", ".", "seq_dataset", ".", "generate_flat_mini_batches", "(", "batch_size", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "X2", ",", "Y2", ",", "T2", "=", "self", ".", "seq_dataset", ".", "generate_mini_batches", "(", "batch_size", ")", "\n", "X2", "=", "np", ".", "transpose", "(", "X2", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y2", "=", "np", ".", "transpose", "(", "Y2", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n", "", "X2t", "=", "Variable", "(", "FloatTensor", "(", "X2", ")", ")", "\n", "Y2t", "=", "Variable", "(", "FloatTensor", "(", "Y2", ")", ")", "\n", "T2t", "=", "Variable", "(", "LongTensor", "(", "T2", ")", ")", "\n", "\n", "optimizer_nsc", ".", "zero_grad", "(", ")", "\n", "\n", "state_estim2", "=", "self", ".", "seq_se", "(", "Y2t", ")", "\n", "label_hypothesis2", "=", "self", ".", "seq_nsc", "(", "state_estim2", ")", "\n", "\n", "# Computation of the cost J", "\n", "\n", "comb_loss_fnc2", "=", "w", "*", "nsc_loss_fnc", "(", "label_hypothesis2", ",", "T2t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "state_estim2", ",", "X2t", ")", "\n", "comb_loss_fnc2", ".", "backward", "(", ")", "\n", "\n", "optimizer_nsc", ".", "step", "(", ")", "\n", "\n", "# Print some performance to monitor the training", "\n", "tmp_acc", ".", "append", "(", "self", ".", "compute_accuracy", "(", "T2t", ",", "label_hypothesis2", ")", ")", "\n", "tmp_loss", ".", "append", "(", "comb_loss_fnc2", ".", "item", "(", ")", ")", "\n", "\n", "", "if", "epoch", "%", "50", "==", "0", ":", "\n", "\t\t\t\t", "print", "(", "\"Epoch= {},\\t loss = {:2.4f},\\t accuracy = {}\"", ".", "format", "(", "epoch", "+", "1", ",", "tmp_loss", "[", "-", "1", "]", ",", "tmp_acc", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "val_state_estim", "=", "self", ".", "seq_se", "(", "Yval_t", ")", "\n", "val_label_hypothesis", "=", "self", ".", "seq_nsc", "(", "val_state_estim", ")", "\n", "val_comb_loss_fnc", "=", "w", "*", "nsc_loss_fnc", "(", "val_label_hypothesis", ",", "Tval_t", ")", "+", "(", "1", "-", "w", ")", "*", "se_loss_fnc", "(", "val_state_estim", ",", "Xval_t", ")", "\n", "\n", "losses", ".", "append", "(", "np", ".", "mean", "(", "tmp_loss", ")", ")", "\n", "val_losses", ".", "append", "(", "val_comb_loss_fnc", ".", "item", "(", ")", ")", "\n", "\n", "accuracies", ".", "append", "(", "np", ".", "mean", "(", "tmp_acc", ")", ")", "\n", "val_accuracies", ".", "append", "(", "self", ".", "compute_accuracy", "(", "Tval_t", ",", "val_label_hypothesis", ")", "\n", ")", "\n", "\n", "\n", "", "fig_loss", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "losses", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_losses", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb loss\"", ")", "\n", "fig_loss", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_losses_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "fig_acc", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "accuracies", ",", "label", "=", "\"train\"", ")", "\n", "plt", ".", "plot", "(", "np", ".", "arange", "(", "n_epochs", ")", ",", "val_accuracies", ",", "label", "=", "\"valid\"", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "title", "(", "\"comb accuracy\"", ")", "\n", "fig_acc", ".", "savefig", "(", "self", ".", "results_path", "+", "\"/comb_accuracies_{}epochs.png\"", ".", "format", "(", "self", ".", "n_epochs", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "torch", ".", "save", "(", "self", ".", "seq_nsc", ",", "self", ".", "seq_nsc_net_path", ")", "\n", "torch", ".", "save", "(", "self", ".", "seq_se", ",", "self", ".", "seq_se_net_path", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.generate_test_results": [[208, 237], ["torch.autograd.Variable", "time.time", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_se", "train_stoch_seq_nsc.Train_StochSeqNSC.seq_nsc", "print", "train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy", "print", "os.makedirs", "open", "open.write", "open.write", "open.close", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.transpose", "numpy.transpose", "torch.autograd.Variable", "torch.autograd.Variable", "LongTensor", "time.time", "str", "FloatTensor", "FloatTensor", "FloatTensor", "FloatTensor"], "methods", ["home.repos.pwc.inspect_result.francescacairoli_stoch_nsc.RV21.train_stoch_seq_nsc.Train_StochSeqNSC.compute_accuracy"], ["\n", "\t\t", "if", "self", ".", "net_type", "==", "\"FF\"", ":", "\n", "\t\t\t", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "X_test_scaled_flat", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "self", ".", "seq_dataset", ".", "Y_test_scaled_flat", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "X", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "X_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Y", "=", "np", ".", "transpose", "(", "self", ".", "seq_dataset", ".", "Y_test_scaled", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "Xtest", "=", "Variable", "(", "FloatTensor", "(", "X", ")", ")", "\n", "Ytest", "=", "Variable", "(", "FloatTensor", "(", "Y", ")", ")", "\n", "\n", "", "Ttest", "=", "Variable", "(", "LongTensor", "(", "self", ".", "seq_dataset", ".", "L_test", ")", ")", "\n", "\n", "state_estimates", "=", "self", ".", "seq_se", "(", "Ytest", ")", "\n", "label_predictions", "=", "self", ".", "seq_nsc", "(", "state_estimates", ")", "\n", "\n", "test_accuracy", "=", "self", ".", "compute_accuracy", "(", "Ttest", ",", "label_predictions", ")", "\n", "\n", "print", "(", "\"Combined Test Accuracy: \"", ",", "test_accuracy", ")", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "results_path", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "self", ".", "results_path", "+", "\"/results_{}epochs.txt\"", ".", "format", "(", "self", ".", "n_epochs", ")", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "\"Test accuracy = \"", ")", "\n", "f", ".", "write", "(", "str", "(", "test_accuracy", ")", ")", "\n", "f", ".", "close", "(", ")", "", "", "", ""]]}