{"home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.process.train_model": [[9, 33], ["lib.utils.loss.AverageMeter", "lib.utils.loss.AverageMeter.reset", "model.train", "enumerate", "imgs.to.to", "target_maps.to.to", "model", "lib.utils.loss.calc_loss", "optimizer.zero_grad", "lib.utils.loss.calc_loss.backward", "optimizer.step", "lib.utils.loss.AverageMeter.update", "offset_maps.to", "lib.utils.loss.calc_loss.item", "imgs.to.size", "range"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.reset", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_loss", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.update"], ["def", "train_model", "(", "config", ",", "device", ",", "model", ",", "train_loader", ",", "optimizer", ",", "criterion", ",", "offset_criterion", "=", "None", ")", ":", "\n", "\n", "    ", "losses", "=", "AverageMeter", "(", ")", "\n", "losses", ".", "reset", "(", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "i", ",", "(", "imgs", ",", "target_maps", ",", "offset_maps", ",", "gt_landmarks", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "to", "(", "device", ")", "\n", "target_maps", "=", "target_maps", ".", "to", "(", "device", ")", "\n", "offset_maps", "=", "offset_maps", ".", "to", "(", "device", ")", "if", "config", ".", "head_type", ".", "upper", "!=", "'WOO'", "else", "None", "\n", "\n", "stack_pred_heatmap", ",", "stack_pred_offset", "=", "model", "(", "imgs", ")", "\n", "\n", "index", "=", "[", "i", "for", "i", "in", "range", "(", "config", ".", "num_stack", "-", "1", ",", "-", "1", ",", "-", "config", ".", "per_stack_heatmap", ")", "]", "\n", "stack_pred_heatmap", "=", "stack_pred_heatmap", "[", ":", ",", "index", ",", "...", "]", "\n", "loss", "=", "calc_loss", "(", "config", ",", "criterion", ",", "stack_pred_heatmap", ",", "target_maps", ",", "offset_criterion", ",", "stack_pred_offset", ",", "offset_maps", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "imgs", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "return", "losses", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.process.inference_model": [[34, 62], ["lib.utils.loss.AverageMeter", "lib.utils.loss.AverageMeter.reset", "model.eval", "len", "eval", "lib.utils.loss.compute_fr_and_auc", "hasattr", "torch.no_grad", "enumerate", "imgs.to.to", "target_maps.to.to", "gt_landmarks.to.to", "model.inference", "lib.utils.loss.calc_inference_loss", "lib.utils.loss.calc_nme", "lib.utils.loss.AverageMeter.update", "offset_maps.to", "numpy.concatenate", "lib.utils.loss.calc_inference_loss.item", "imgs.to.size"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.reset", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.compute_fr_and_auc", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.inference", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_inference_loss", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_nme", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.update"], ["", "def", "inference_model", "(", "config", ",", "device", ",", "model", ",", "val_loader", ",", "criterion", ",", "offset_criterion", "=", "None", ")", ":", "\n", "    ", "losses", "=", "AverageMeter", "(", ")", "\n", "losses", ".", "reset", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "dataset_size", "=", "len", "(", "val_loader", ".", "dataset", ")", "\n", "SME", "=", "0.0", "\n", "IONs", "=", "None", "\n", "inference_indice", "=", "config", ".", "inference_indice", "if", "hasattr", "(", "config", ",", "'inference_indice'", ")", "else", "-", "1", "\n", "decode_head_func", "=", "eval", "(", "'decode_'", "+", "config", ".", "head_type", "+", "'_head'", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "imgs", ",", "target_maps", ",", "offset_maps", ",", "gt_landmarks", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "imgs", "=", "imgs", ".", "to", "(", "device", ")", "\n", "target_maps", "=", "target_maps", ".", "to", "(", "device", ")", "\n", "offset_maps", "=", "offset_maps", ".", "to", "(", "device", ")", "if", "config", ".", "head_type", ".", "upper", "!=", "'WOO'", "else", "None", "\n", "gt_landmarks", "=", "gt_landmarks", ".", "to", "(", "device", ")", "\n", "\n", "pred_heatmap", ",", "pred_offset", "=", "model", ".", "inference", "(", "imgs", ",", "inference_indice", ")", "\n", "loss", "=", "calc_inference_loss", "(", "config", ",", "criterion", ",", "pred_heatmap", ",", "target_maps", ",", "offset_criterion", ",", "pred_offset", ",", "offset_maps", ")", "\n", "sum_ion", ",", "ion", "=", "calc_nme", "(", "config", ",", "gt_landmarks", ",", "pred_heatmap", ",", "pred_offset", ")", "\n", "SME", "+=", "sum_ion", "\n", "IONs", "=", "np", ".", "concatenate", "(", "(", "IONs", ",", "ion", ")", ",", "0", ")", "if", "IONs", "is", "not", "None", "else", "ion", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "imgs", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "nme", ",", "fr", ",", "auc", "=", "compute_fr_and_auc", "(", "IONs", ")", "\n", "\n", "NME", "=", "SME", "/", "dataset_size", "\n", "return", "losses", ".", "avg", ",", "NME", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.process.split_hih_losses": [[63, 106], ["model.eval", "numpy.array", "numpy.array", "hasattr", "torch.no_grad", "enumerate", "imgs.to.to", "target_maps.to.to", "gt_landmarks.to.to", "model.inference", "lib.dataset.decode_heads.decode_woo_head", "lib.dataset.decode_heads.decode_woo_head", "offset_criterion().view().cpu().numpy", "diffs.cpu().numpy().reshape.cpu().numpy().reshape", "range", "offset_maps.to", "len", "numpy.linalg.norm", "numpy.mean", "offset_criterion().view().cpu", "diffs.cpu().numpy().reshape.cpu().numpy", "np.array.append", "np.array.append", "offset_criterion().view", "diffs.cpu().numpy().reshape.cpu", "offset_criterion"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.inference", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head"], ["", "def", "split_hih_losses", "(", "config", ",", "device", ",", "model", ",", "val_loader", ",", "criterion", ",", "offset_criterion", ",", "threshold", ")", ":", "\n", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "inference_indice", "=", "config", ".", "inference_indice", "if", "hasattr", "(", "config", ",", "'inference_indice'", ")", "else", "-", "1", "\n", "\n", "match_losses", "=", "[", "]", "\n", "mismatch_losses", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "imgs", ",", "target_maps", ",", "offset_maps", ",", "gt_landmarks", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "imgs", "=", "imgs", ".", "to", "(", "device", ")", "\n", "target_maps", "=", "target_maps", ".", "to", "(", "device", ")", "\n", "offset_maps", "=", "offset_maps", ".", "to", "(", "device", ")", "if", "config", ".", "head_type", ".", "upper", "!=", "'WOO'", "else", "None", "\n", "gt_landmarks", "=", "gt_landmarks", ".", "to", "(", "device", ")", "\n", "\n", "# gt_offset = gt_landmarks - gt_landmarks.to(torch.int)", "\n", "# offset_resolution = torch.tensor(offset_maps.shape[-2:]).to(gt_offset)", "\n", "# gt_offset_location = gt_offset * offset_resolution", "\n", "\n", "pred_heatmap", ",", "pred_offset", "=", "model", ".", "inference", "(", "imgs", ",", "inference_indice", ")", "\n", "\n", "offset_location_decode_gt", "=", "decode_woo_head", "(", "offset_maps", ")", "\n", "offset_location_decode_pred", "=", "decode_woo_head", "(", "pred_offset", ")", "\n", "\n", "offset_losses", "=", "offset_criterion", "(", "pred_offset", ",", "offset_maps", ")", ".", "view", "(", "-", "1", ",", "8", ",", "8", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "diffs", "=", "offset_location_decode_gt", "-", "offset_location_decode_pred", "\n", "diffs", "=", "diffs", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "diffs", ")", ")", ":", "\n", "                ", "diff", "=", "diffs", "[", "i", "]", "\n", "loss", "=", "offset_losses", "[", "i", "]", "\n", "distance", "=", "np", ".", "linalg", ".", "norm", "(", "diff", ")", "\n", "mean_loss", "=", "np", ".", "mean", "(", "loss", ")", "\n", "\n", "if", "distance", "<", "threshold", ":", "\n", "                    ", "match_losses", ".", "append", "(", "mean_loss", ")", "\n", "", "else", ":", "\n", "                    ", "mismatch_losses", ".", "append", "(", "mean_loss", ")", "\n", "\n", "", "", "", "", "match_losses", "=", "np", ".", "array", "(", "match_losses", ")", "\n", "mismatch_losses", "=", "np", ".", "array", "(", "mismatch_losses", ")", "\n", "\n", "return", "match_losses", ",", "mismatch_losses", "\n", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.parser.train_parser_args": [[5, 67], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "args.config_file[].replace", "importlib.import_module().Config", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "up_kv.replace().split.replace().split", "hasattr", "setattr", "importlib.import_module", "datetime.datetime.now().strftime", "up_kv[].split", "len", "int.upper", "up_kv.replace().split.replace", "len", "int.upper", "datetime.datetime.now", "float", "int", "print"], "function", ["None"], ["def", "train_parser_args", "(", ")", ":", "\n", "    ", "\"\"\"\n        parser_args for training\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Training infos'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--config_file'", ",", "type", "=", "str", ",", "default", "=", "'experiments/Data_WFLW/HIHC_64x8_hg_l2.py'", ",", "help", "=", "\"relative path for experiments python file\"", ")", "\n", "parser", ".", "add_argument", "(", "'--model_dir'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--resume_checkpoint'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu_id'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--local_rank'", ",", "type", "=", "int", ",", "help", "=", "'local current rank'", ")", "\n", "parser", ".", "add_argument", "(", "'--offset_fine_tune'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'fine tune offset'", ")", "\n", "parser", ".", "add_argument", "(", "'--transformer'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "help", "=", "'use transformer or not'", ")", "\n", "\n", "args", ",", "unparsed", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "\n", "# parsed args", "\n", "config_path", "=", "args", ".", "config_file", "[", ":", "-", "3", "]", ".", "replace", "(", "'/'", ",", "'.'", ")", "# remove '.py'", "\n", "config", "=", "importlib", ".", "import_module", "(", "config_path", ")", ".", "Config", "(", ")", "\n", "setattr", "(", "config", ",", "'offset_fine_tune'", ",", "args", ".", "offset_fine_tune", ")", "\n", "setattr", "(", "config", ",", "'transformer'", ",", "args", ".", "transformer", ")", "\n", "if", "args", ".", "model_dir", "is", "not", "None", ":", "\n", "        ", "setattr", "(", "config", ",", "'model_dir'", ",", "args", ".", "model_dir", ")", "\n", "", "else", ":", "\n", "        ", "setattr", "(", "config", ",", "'model_dir'", ",", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%m_%d_%H_%M_%S\"", ")", ")", "\n", "", "if", "args", ".", "resume_checkpoint", "is", "not", "None", ":", "\n", "        ", "setattr", "(", "config", ",", "'resume_checkpoint'", ",", "args", ".", "resume_checkpoint", ")", "\n", "", "else", ":", "\n", "        ", "setattr", "(", "config", ",", "'resume_checkpoint'", ",", "False", ")", "\n", "\n", "", "if", "args", ".", "gpu_id", "is", "not", "None", ":", "\n", "        ", "setattr", "(", "config", ",", "'gpu_id'", ",", "args", ".", "gpu_id", ")", "\n", "\n", "# unparsed args", "\n", "", "for", "up_kv", "in", "unparsed", ":", "\n", "        ", "up_kv", "=", "up_kv", ".", "replace", "(", "'--'", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "up_kv", "=", "up_kv", "[", "0", "]", ".", "split", "(", "'='", ")", "if", "len", "(", "up_kv", ")", "==", "1", "else", "up_kv", "\n", "assert", "len", "(", "up_kv", ")", "==", "2", ",", "\"unparsed item only support ':' or '=', like --batch_size=8\"", "\n", "\n", "up_key", "=", "up_kv", "[", "0", "]", "\n", "up_val", "=", "up_kv", "[", "1", "]", "\n", "assert", "hasattr", "(", "config", ",", "up_key", ")", ",", "\"config file unsupport the item: {}\"", ".", "format", "(", "up_key", ")", "\n", "\n", "# judge type: bool, float, int", "\n", "if", "up_val", ".", "upper", "(", ")", "==", "\"TRUE\"", ":", "\n", "            ", "up_val", "=", "True", "\n", "", "elif", "up_val", ".", "upper", "(", ")", "==", "\"FALSE\"", ":", "\n", "            ", "up_val", "=", "False", "\n", "", "elif", "'.'", "in", "up_val", "or", "'e'", "in", "up_val", ":", "# float", "\n", "            ", "try", ":", "\n", "                ", "up_val", "=", "float", "(", "up_val", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "", "else", ":", "# int", "\n", "            ", "try", ":", "\n", "                ", "up_val", "=", "int", "(", "up_val", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"WARN: Cannot regcongnize the data type of {} ! Process as string type\"", ".", "format", "(", "up_val", ")", ")", "\n", "\n", "", "", "setattr", "(", "config", ",", "up_key", ",", "up_val", ")", "\n", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.parser.inference_parser_args": [[68, 123], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "args.config_file[].replace", "importlib.import_module().Config", "setattr", "setattr", "setattr", "setattr", "datetime.datetime.now().strftime", "setattr", "up_kv.replace().split.replace().split", "hasattr", "setattr", "importlib.import_module", "up_kv[].split", "len", "int.upper", "datetime.datetime.now", "up_kv.replace().split.replace", "len", "int.upper", "float", "int", "print"], "function", ["None"], ["", "def", "inference_parser_args", "(", ")", ":", "\n", "    ", "\"\"\"\n        parser_args for inference\n    \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Inference infos'", ")", "\n", "parser", ".", "add_argument", "(", "'--config_file'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "\"same as train\"", ")", "\n", "parser", ".", "add_argument", "(", "'--resume_checkpoint'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "\"the file path for resume checkpoint\"", ")", "\n", "parser", ".", "add_argument", "(", "'--test_folder'", ",", "type", "=", "str", ",", "default", "=", "'test'", ",", "help", "=", "\"Test which test folder, one subset or fullset\"", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu_id'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--inference_indice'", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "help", "=", "\"The index of stacked output, default is last one\"", ")", "\n", "\n", "args", ",", "unparsed", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "\n", "config_path", "=", "args", ".", "config_file", "[", ":", "-", "3", "]", ".", "replace", "(", "'/'", ",", "'.'", ")", "# remove '.py'", "\n", "config", "=", "importlib", ".", "import_module", "(", "config_path", ")", ".", "Config", "(", ")", "\n", "\n", "# setattr(config,'transformer',args.transformer)", "\n", "setattr", "(", "config", ",", "'resume_checkpoint'", ",", "args", ".", "resume_checkpoint", ")", "\n", "setattr", "(", "config", ",", "'test_folder'", ",", "args", ".", "test_folder", ")", "\n", "setattr", "(", "config", ",", "'model_dir'", ",", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%m_%d_%H_%M_%S\"", ")", ")", "\n", "setattr", "(", "config", ",", "'inference_indice'", ",", "args", ".", "inference_indice", ")", "\n", "\n", "if", "args", ".", "gpu_id", "is", "not", "None", ":", "\n", "        ", "setattr", "(", "config", ",", "'gpu_id'", ",", "args", ".", "gpu_id", ")", "\n", "\n", "\n", "# unparsed args", "\n", "", "for", "up_kv", "in", "unparsed", ":", "\n", "        ", "up_kv", "=", "up_kv", ".", "replace", "(", "'-'", ",", "''", ")", ".", "split", "(", "':'", ")", "\n", "up_kv", "=", "up_kv", "[", "0", "]", ".", "split", "(", "'='", ")", "if", "len", "(", "up_kv", ")", "==", "1", "else", "up_kv", "\n", "assert", "len", "(", "up_kv", ")", "==", "2", ",", "\"unparsed item only support ':' or '=', like --batch_size=8\"", "\n", "\n", "up_key", "=", "up_kv", "[", "0", "]", "\n", "up_val", "=", "up_kv", "[", "1", "]", "\n", "assert", "hasattr", "(", "config", ",", "up_key", ")", ",", "\"config file unsupport the item: {}\"", ".", "format", "(", "up_key", ")", "\n", "\n", "# judge type: bool, float, int", "\n", "if", "up_val", ".", "upper", "(", ")", "==", "\"TRUE\"", ":", "\n", "            ", "up_val", "=", "True", "\n", "", "elif", "up_val", ".", "upper", "(", ")", "==", "\"FALSE\"", ":", "\n", "            ", "up_val", "=", "False", "\n", "", "elif", "'.'", "in", "up_val", ":", "# float", "\n", "            ", "try", ":", "\n", "                ", "up_val", "=", "float", "(", "up_val", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "", "", "else", ":", "# int", "\n", "            ", "try", ":", "\n", "                ", "up_val", "=", "int", "(", "up_val", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "\"WARN: Cannot regcongnize the data type of {} ! Process as string type\"", ".", "format", "(", "up_val", ")", ")", "\n", "\n", "", "", "setattr", "(", "config", ",", "up_key", ",", "up_val", ")", "\n", "\n", "", "return", "config", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.check.check_mkdir": [[4, 15], ["str_path.split", "range", "os.path.exists", "len", "os.path.join", "os.path.exists", "print", "os.mkdir"], "function", ["None"], ["def", "check_mkdir", "(", "str_path", ")", ":", "\n", "    ", "paths", "=", "str_path", ".", "split", "(", "'/'", ")", "\n", "# temp_folder = paths[0]", "\n", "temp_folder", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "paths", ")", ")", ":", "\n", "        ", "temp_folder", "=", "os", ".", "path", ".", "join", "(", "temp_folder", ",", "paths", "[", "i", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "temp_folder", ")", ":", "\n", "            ", "print", "(", "\"INFO: {} not exist , created.\"", ".", "format", "(", "temp_folder", ")", ")", "\n", "os", ".", "mkdir", "(", "temp_folder", ")", "\n", "\n", "", "", "assert", "os", ".", "path", ".", "exists", "(", "str_path", ")", ",", "\"{} not created success.\"", ".", "format", "(", "str_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.check.check_pre": [[16, 36], ["os.path.join", "check.check_mkdir", "lib.utils.log.create_logger", "os.path.join", "os.path.exists", "os.path.exists", "config.data_type.upper", "os.path.join", "os.path.join", "config.head_type.upper", "hasattr", "hasattr"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.check.check_mkdir", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.log.create_logger"], ["", "def", "check_pre", "(", "config", ")", ":", "\n", "\n", "# check model dir", "\n", "    ", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "'checkpoints'", ",", "config", ".", "data_type", ",", "config", ".", "head_type", ",", "config", ".", "model_dir", ")", "\n", "check_mkdir", "(", "checkpoint_dir", ")", "\n", "\n", "# check log dir", "\n", "logger", "=", "create_logger", "(", "config", ")", "\n", "\n", "# check dataset", "\n", "dataset_path", "=", "os", ".", "path", ".", "join", "(", "'data'", ",", "'benchmark'", ",", "config", ".", "data_type", ".", "upper", "(", ")", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "config", ".", "data_folder", ")", ")", ",", "\"Wrong image data folder,don't exist image file\"", "\n", "assert", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "config", ".", "data_folder", "+", "'.txt'", ")", ")", ",", "\"Wrong image data folder, don't exist label file.\"", "\n", "\n", "# check config", "\n", "if", "config", ".", "head_type", ".", "upper", "(", ")", "!=", "'WOO'", ":", "\n", "        ", "assert", "hasattr", "(", "config", ",", "'criterion_offset'", ")", "\n", "assert", "hasattr", "(", "config", ",", "'loss_offset_weight'", ")", "\n", "\n", "", "return", "checkpoint_dir", ",", "logger", "\n", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.SoftKLLoss.__init__": [[24, 28], ["torch.KLDivLoss.__init__", "torch.LogSoftmax", "torch.LogSoftmax", "torch.Softmax", "torch.Softmax"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["def", "__init__", "(", "self", ",", "size_average", "=", "None", ",", "reduce", "=", "None", ",", "reduction", ":", "str", "=", "'mean'", ",", "log_target", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "        ", "super", "(", "SoftKLLoss", ",", "self", ")", ".", "__init__", "(", "size_average", "=", "size_average", ",", "reduce", "=", "reduce", ",", "reduction", "=", "reduction", ",", "log_target", "=", "log_target", ")", "\n", "self", ".", "logSoftmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "-", "1", ")", "\n", "self", ".", "Softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.SoftKLLoss.forward": [[29, 39], ["loss.SoftKLLoss.view", "loss.SoftKLLoss.view", "loss.SoftKLLoss.logSoftmax", "loss.SoftKLLoss.Softmax", "torch.nn.functional.kl_div", "torch.nn.functional.kl_div"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ":", "torch", ".", "Tensor", ",", "target", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "\"\"\"  \n        input is pred\n        target is gt\n        \"\"\"", "\n", "input", "=", "input", ".", "view", "(", "-", "1", ",", "input", ".", "shape", "[", "-", "2", "]", "*", "input", ".", "shape", "[", "-", "1", "]", ")", "\n", "target", "=", "target", ".", "view", "(", "-", "1", ",", "target", ".", "shape", "[", "-", "2", "]", "*", "target", ".", "shape", "[", "-", "1", "]", ")", "\n", "input", "=", "self", ".", "logSoftmax", "(", "input", ")", "\n", "target", "=", "self", ".", "Softmax", "(", "target", ")", "\n", "return", "F", ".", "kl_div", "(", "input", ",", "target", ",", "reduction", "=", "self", ".", "reduction", ",", "log_target", "=", "self", ".", "log_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.__init__": [[168, 174], ["loss.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.reset": [[175, 180], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.update": [[181, 186], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.reduce_loss": [[13, 18], ["torch.no_grad", "torch.no_grad", "torch.distributed.reduce"], "function", ["None"], ["def", "reduce_loss", "(", "tensor", ",", "rank", ",", "world_size", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "dist", ".", "reduce", "(", "tensor", ",", "dst", "=", "0", ")", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "tensor", "/=", "world_size", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.get_loss": [[40, 73], ["hasattr", "config.criterion_heatmap.upper", "hasattr", "torch.MSELoss", "config.criterion_offset.upper", "torch.L1Loss", "torch.MSELoss", "torch.SmoothL1Loss", "torch.L1Loss", "loss.SoftKLLoss", "torch.SmoothL1Loss", "loss.SoftKLLoss"], "function", ["None"], ["", "", "def", "get_loss", "(", "config", ")", ":", "\n", "    ", "criterion", "=", "None", "\n", "offset_criterion", "=", "None", "\n", "\n", "assert", "hasattr", "(", "config", ",", "\"criterion_heatmap\"", ")", ",", "\"Not exist criterion_heatmap in config file\"", "\n", "\n", "criterion_str", "=", "config", ".", "criterion_heatmap", ".", "upper", "(", ")", "\n", "if", "criterion_str", "in", "[", "'L2'", ",", "'MSE'", "]", ":", "\n", "        ", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "elif", "criterion_str", "==", "'L1'", ":", "\n", "        ", "criterion", "=", "nn", ".", "L1Loss", "(", ")", "\n", "", "elif", "criterion_str", "==", "'SMOOTH_L1'", ":", "\n", "        ", "criterion", "=", "nn", ".", "SmoothL1Loss", "(", ")", "\n", "", "elif", "criterion_str", "==", "'CLS'", ":", "\n", "        ", "criterion", "=", "SoftKLLoss", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "(", "\"Not support {} loss now.\"", ".", "format", "(", "criterion_str", ")", ")", "\n", "\n", "\n", "", "if", "hasattr", "(", "config", ",", "\"criterion_offset\"", ")", ":", "\n", "        ", "offset_criterion_str", "=", "config", ".", "criterion_offset", ".", "upper", "(", ")", "\n", "if", "offset_criterion_str", "in", "[", "'L2'", ",", "'MSE'", "]", ":", "\n", "            ", "offset_criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "", "elif", "offset_criterion_str", "==", "'L1'", ":", "\n", "            ", "offset_criterion", "=", "nn", ".", "L1Loss", "(", ")", "\n", "", "elif", "offset_criterion_str", "==", "'SMOOTH_L1'", ":", "\n", "            ", "offset_criterion", "=", "nn", ".", "SmoothL1Loss", "(", ")", "\n", "", "elif", "offset_criterion_str", "==", "'CLS'", ":", "\n", "            ", "offset_criterion", "=", "SoftKLLoss", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "\"Not support {} loss now.\"", ".", "format", "(", "offset_criterion_str", ")", ")", "\n", "\n", "", "", "return", "criterion", ",", "offset_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_loss": [[75, 91], ["gt_heatmap.unsqueeze().expand", "criterion", "gt_offset.unsqueeze().expand", "gt_heatmap.unsqueeze", "list", "offset_criterion", "stack_pred_heatmap.size", "gt_offset.unsqueeze", "list", "gt_heatmap.size", "stack_pred_offset.size", "gt_offset.size"], "function", ["None"], ["", "def", "calc_loss", "(", "config", ",", "criterion", ",", "stack_pred_heatmap", ",", "gt_heatmap", ",", "offset_criterion", "=", "None", ",", "stack_pred_offset", "=", "None", ",", "gt_offset", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n        calculate the loss for training in one iteration\n    \"\"\"", "\n", "# stack_pred_heatmap (5 dim): n_batch,n_stack,n_landmark,heatmap_size,heatmap_size", "\n", "# gt_heatmap (4 dim): n_batch,n_landmark,heatmap_size,heatmap_size", "\n", "# calculate the train loss for all stacks", "\n", "loss", "=", "0.0", "\n", "stack_gt_heatmap", "=", "gt_heatmap", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "[", "-", "1", ",", "stack_pred_heatmap", ".", "size", "(", "1", ")", "]", "+", "list", "(", "gt_heatmap", ".", "size", "(", ")", "[", "1", ":", "]", ")", ")", "\n", "loss", "=", "criterion", "(", "stack_pred_heatmap", ",", "stack_gt_heatmap", ")", "\n", "if", "offset_criterion", "is", "not", "None", ":", "\n", "        ", "loss", "*=", "config", ".", "loss_heatmap_weight", "\n", "stack_gt_offset", "=", "gt_offset", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "[", "-", "1", ",", "stack_pred_offset", ".", "size", "(", "1", ")", "]", "+", "list", "(", "gt_offset", ".", "size", "(", ")", "[", "1", ":", "]", ")", ")", "\n", "loss", "+=", "config", ".", "loss_offset_weight", "*", "offset_criterion", "(", "stack_pred_offset", ",", "stack_gt_offset", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_inference_loss": [[92, 105], ["criterion", "offset_criterion"], "function", ["None"], ["", "def", "calc_inference_loss", "(", "config", ",", "criterion", ",", "pred_heatmap", ",", "gt_heatmap", ",", "offset_criterion", "=", "None", ",", "pred_offset", "=", "None", ",", "gt_offset", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n        calculate the loss for testing in one iteration\n    \"\"\"", "\n", "# pred_heatmap (4 dim): n_batch,n_landmark,heatmap_size,heatmap_size", "\n", "# gt_heatmap (4 dim): n_batch,n_landmark,heatmap_size,heatmap_size", "\n", "# calculate the loss for the last stack, and the nme", "\n", "loss", "=", "criterion", "(", "pred_heatmap", ",", "gt_heatmap", ")", "\n", "if", "offset_criterion", "is", "not", "None", ":", "\n", "        ", "loss", "*=", "config", ".", "loss_heatmap_weight", "\n", "loss", "+=", "config", ".", "loss_offset_weight", "*", "offset_criterion", "(", "pred_offset", ",", "gt_offset", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.calc_nme": [[106, 151], ["eval", "eval.", "target_w_size.cpu().numpy().reshape", "decode_head_func.cpu().numpy().reshape", "zip", "numpy.sum", "len", "pred_heatmap.size", "pred_heatmap.size", "ION.append", "pred_heatmap.size", "target_w_size.cpu().numpy", "decode_head_func.cpu().numpy", "numpy.linalg.norm", "numpy.sum", "numpy.linalg.norm", "print", "exit", "target_w_size.cpu", "decode_head_func.cpu"], "function", ["None"], ["", "def", "calc_nme", "(", "config", ",", "target_w_size", ",", "pred_heatmap", ",", "pred_offset", "=", "None", ")", ":", "\n", "\n", "    ", "\"\"\"\n        Args: \n                target_w_size: tensor in pytorch (n,98,2)\n                pred_heatmap : tensor in pytorch (n,98,64,64) \n            \n        Return:\n                Sum_ION : the sum Ion of this batch data\n    \"\"\"", "\n", "assert", "len", "(", "pred_heatmap", ".", "size", "(", ")", ")", "==", "4", ",", "\"the pred_heatmap must be 4 dim, use inference function\"", "\n", "\n", "decode_head_func", "=", "eval", "(", "'decode_'", "+", "config", ".", "head_type", "+", "'_head'", ")", "\n", "preds", "=", "decode_head_func", "(", "pred_heatmap", ",", "pred_offset", ")", "\n", "\n", "ION", "=", "[", "]", "\n", "norm_indices", "=", "None", "# ION", "\n", "if", "config", ".", "data_type", "==", "\"300W\"", ":", "\n", "        ", "norm_indices", "=", "[", "36", ",", "45", "]", "\n", "", "elif", "config", ".", "data_type", "==", "\"COFW\"", ":", "\n", "        ", "norm_indices", "=", "[", "8", ",", "9", "]", "# ION", "\n", "# norm_indices = [17,16] # IPN", "\n", "", "elif", "config", ".", "data_type", "==", "\"WFLW\"", ":", "\n", "        ", "norm_indices", "=", "[", "60", ",", "72", "]", "\n", "", "elif", "config", ".", "data_type", "==", "\"AFLW\"", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such data!\"", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "# target_w_size and preds : n, 98 , 2", "\n", "", "target_np", "=", "target_w_size", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "pred_heatmap", ".", "size", "(", "0", ")", ",", "-", "1", ",", "2", ")", "\n", "pred_np", "=", "preds", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "pred_heatmap", ".", "size", "(", "0", ")", ",", "-", "1", ",", "2", ")", "\n", "\n", "for", "target", ",", "pred", "in", "zip", "(", "target_np", ",", "pred_np", ")", ":", "\n", "        ", "diff", "=", "target", "-", "pred", "\n", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "target", "[", "norm_indices", "[", "0", "]", "]", "-", "target", "[", "norm_indices", "[", "1", "]", "]", ")", "if", "norm_indices", "is", "not", "None", "else", "config", ".", "heatmap_size", "\n", "c_ION", "=", "np", ".", "sum", "(", "np", ".", "linalg", ".", "norm", "(", "diff", ",", "axis", "=", "1", ")", ")", "/", "(", "diff", ".", "shape", "[", "0", "]", "*", "norm", ")", "\n", "ION", ".", "append", "(", "c_ION", ")", "\n", "\n", "\n", "", "Sum_ION", "=", "np", ".", "sum", "(", "ION", ")", "# the ion of this batch ", "\n", "# need div the dataset size to get nme", "\n", "\n", "return", "Sum_ION", ",", "ION", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.compute_fr_and_auc": [[152, 164], ["len", "numpy.arange", "numpy.mean", "print", "print", "print", "numpy.array", "float", "scipy.integrate.simps", "numpy.count_nonzero", "numpy.mean"], "function", ["None"], ["", "def", "compute_fr_and_auc", "(", "nmes", ",", "thres", "=", "0.10", ",", "step", "=", "0.0001", ")", ":", "\n", "    ", "num_data", "=", "len", "(", "nmes", ")", "\n", "xs", "=", "np", ".", "arange", "(", "0", ",", "thres", "+", "step", ",", "step", ")", "\n", "ys", "=", "np", ".", "array", "(", "[", "np", ".", "count_nonzero", "(", "nmes", "<=", "x", ")", "for", "x", "in", "xs", "]", ")", "/", "float", "(", "num_data", ")", "\n", "fr", "=", "1.0", "-", "ys", "[", "-", "1", "]", "\n", "auc", "=", "simps", "(", "ys", ",", "x", "=", "xs", ")", "/", "thres", "\n", "nme", "=", "np", ".", "mean", "(", "nmes", ")", "\n", "\n", "print", "(", "\"NME %: {}\"", ".", "format", "(", "np", ".", "mean", "(", "nmes", ")", "*", "100", ")", ")", "\n", "print", "(", "\"FR_{}% : {}\"", ".", "format", "(", "thres", ",", "fr", "*", "100", ")", ")", "\n", "print", "(", "\"AUC_{}: {}\"", ".", "format", "(", "thres", ",", "auc", ")", ")", "\n", "return", "nme", ",", "fr", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.need_val": [[188, 199], ["numpy.array", "zip"], "function", ["None"], ["", "", "def", "need_val", "(", "epoch", ",", "config", ")", ":", "\n", "    ", "val_info", "=", "np", ".", "array", "(", "config", ".", "val_epoch", ")", "\n", "val_epochs", "=", "val_info", "[", ":", ",", "0", "]", "\n", "val_steps", "=", "val_info", "[", ":", ",", "1", "]", "\n", "\n", "for", "end_epoch", ",", "step", "in", "zip", "(", "val_epochs", ",", "val_steps", ")", ":", "\n", "        ", "if", "epoch", "<", "end_epoch", ":", "\n", "            ", "if", "epoch", "%", "step", "==", "0", ":", "\n", "                ", "return", "True", "\n", "", "else", ":", "\n", "                ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.lr_repr": [[201, 206], ["None"], "function", ["None"], ["", "", "", "", "def", "lr_repr", "(", "optim", ")", ":", "\n", "    ", "_lr_repr_", "=", "''", "\n", "for", "pg", "in", "optim", ".", "param_groups", ":", "\n", "        ", "_lr_repr_", "+=", "' {} '", ".", "format", "(", "pg", "[", "'lr'", "]", ")", "\n", "", "return", "_lr_repr_", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.model.get_model": [[4, 7], ["hgnet"], "function", ["None"], ["def", "get_model", "(", "config", ")", ":", "\n", "\n", "    ", "return", "hgnet", "(", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.log.create_logger": [[8, 31], ["os.path.exists", "logging.basicConfig", "logging.getLogger", "os.path.exists", "os.mkdir", "config.data_type.upper", "config.head_type.upper", "os.path.join", "os.path.join", "print", "logging.FileHandler", "logging.StreamHandler"], "function", ["None"], ["def", "create_logger", "(", "config", ",", "Is_test", "=", "False", ")", ":", "\n", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'logs'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'logs'", ")", "\n", "\n", "", "log_file", "=", "\"{}_{}_{}.log\"", ".", "format", "(", "config", ".", "data_type", ".", "upper", "(", ")", ",", "config", ".", "head_type", ".", "upper", "(", ")", ",", "config", ".", "model_dir", ")", "\n", "\n", "final_log_file", "=", "os", ".", "path", ".", "join", "(", "'logs'", ",", "log_file", ")", "if", "not", "Is_test", "else", "os", ".", "path", ".", "join", "(", "'test_logs'", ",", "log_file", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "final_log_file", ")", ":", "\n", "        ", "print", "(", "\"Current log file is exist\"", ")", "\n", "raise", "(", "\"Log file alread exist\"", ")", "\n", "\n", "", "logging", ".", "basicConfig", "(", "\n", "format", "=", "\n", "'[%(asctime)s] [%(filename)s:%(lineno)d] [%(levelname)s] %(message)s'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "\n", "logging", ".", "FileHandler", "(", "final_log_file", ",", "mode", "=", "'w'", ")", ",", "\n", "logging", ".", "StreamHandler", "(", ")", "\n", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "\n", "return", "logger", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.saver.save_checkpoint": [[6, 22], ["os.path.join", "os.path.join", "torch.save", "os.path.islink", "os.symlink", "os.remove", "os.path.join", "str", "str"], "function", ["None"], ["def", "save_checkpoint", "(", "model_state_dict", ",", "best_nme", ",", "optimizer_state_dict", ",", "checkpoint_dir", ")", ":", "\n", "\n", "    ", "epoch", "=", "best_nme", "[", "'epoch'", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "\"{}_checkpoint.pth\"", ".", "format", "(", "str", "(", "epoch", ")", ")", ")", "\n", "best_path", "=", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "\"best.pth\"", ")", "\n", "torch", ".", "save", "(", "{", "\n", "\"state_dict\"", ":", "model_state_dict", ",", "\n", "\"best_nme\"", ":", "best_nme", ",", "\n", "\"optimizer\"", ":", "optimizer_state_dict", ",", "\n", "\"epoch\"", ":", "epoch", "\n", "}", ",", "file_path", ")", "\n", "if", "os", ".", "path", ".", "islink", "(", "best_path", ")", ":", "\n", "        ", "os", ".", "remove", "(", "best_path", ")", "\n", "\n", "# symlink is create a relative path file : a is exist file and relative path,b is link and absolute path", "\n", "", "os", ".", "symlink", "(", "os", ".", "path", ".", "join", "(", "\"./\"", ",", "\"{}_checkpoint.pth\"", ".", "format", "(", "str", "(", "epoch", ")", ")", ")", ",", "best_path", ")", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_heat": [[14, 26], ["numpy.arange", "numpy.exp", "numpy.array"], "function", ["None"], ["def", "gen_heat", "(", "method", "=", "\"Gauss\"", ",", "sigma", "=", "0.", ")", ":", "\n", "\n", "    ", "if", "sigma", "==", "0", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "[", "1", "]", "]", ")", "\n", "\n", "", "tmp_size", "=", "sigma", "*", "3", "\n", "size", "=", "2", "*", "tmp_size", "+", "1", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_woo_head": [[28, 81], ["numpy.zeros", "heat.copy.copy", "range", "range", "print", "exit", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "max", "max", "max", "min", "max", "min", "max", "max", "int", "int", "min", "min", "min", "min", "round", "round", "round", "round"], "function", ["None"], ["", "def", "gen_woo_head", "(", "target_w_size", ",", "heat", ",", "config", ")", ":", "\n", "# without offset map head: normal head", "\n", "    ", "target_map", "=", "np", ".", "zeros", "(", "(", "config", ".", "num_landmarks", ",", "config", ".", "heatmap_size", ",", "config", ".", "heatmap_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "if", "config", ".", "heatmap_method", "==", "\"GAUSS\"", ":", "\n", "        ", "heat", "=", "heat", ".", "copy", "(", ")", "\n", "tmp_size", "=", "config", ".", "heatmap_sigma", "*", "3", "\n", "is_sigma_int", "=", "True", "if", "config", ".", "heatmap_sigma", "%", "1", "<", "1e-6", "else", "False", "\n", "\n", "for", "i", "in", "range", "(", "target_w_size", ".", "shape", "[", "0", "]", ")", ":", "\n", "# pt : [x,y], pt_map : [heatmap_size x heatmap_size]", "\n", "            ", "pt", ",", "pt_map", "=", "target_w_size", "[", "i", "]", ",", "target_map", "[", "i", "]", "\n", "if", "is_sigma_int", ":", "\n", "                ", "ul", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "-", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "-", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "+", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "+", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "", "else", ":", "\n", "                ", "ul", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "-", "tmp_size", ",", "pt", "[", "1", "]", "-", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "+", "tmp_size", ",", "pt", "[", "1", "]", "+", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "\n", "# Check that any part of the gaussian is in-bounds", "\n", "", "if", "(", "ul", "[", "0", "]", ">=", "pt_map", ".", "shape", "[", "1", "]", "or", "ul", "[", "1", "]", ">=", "pt_map", ".", "shape", "[", "0", "]", "or", "\n", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ")", ":", "\n", "# If not, just return the image as is", "\n", "                ", "continue", "\n", "", "br", "+=", "1", "# take the same process as shape, thus add 1", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "pt_map", ".", "shape", "[", "1", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "pt_map", ".", "shape", "[", "0", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "pt_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "pt_map", ".", "shape", "[", "1", "]", ")", "\n", "pt_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "pt_map", ".", "shape", "[", "0", "]", ")", "\n", "\n", "pt_map", "[", "pt_y", "[", "0", "]", ":", "pt_y", "[", "1", "]", ",", "pt_x", "[", "0", "]", ":", "pt_x", "[", "1", "]", "]", "=", "heat", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", "\n", "\n", "", "return", "target_map", ",", "None", "\n", "\n", "", "elif", "config", ".", "heatmap_method", "==", "\"DIRECT\"", ":", "\n", "        ", "for", "i", "in", "range", "(", "target_w_size", ".", "shape", "[", "0", "]", ")", ":", "\n", "# pt : [x,y], pt_map : [heatmap_size x heatmap_size]", "\n", "            ", "pt", ",", "pt_map", "=", "target_w_size", "[", "i", "]", ",", "target_map", "[", "i", "]", "\n", "pt_x", "=", "pt", "[", "0", "]", "\n", "pt_y", "=", "pt", "[", "1", "]", "\n", "# seen on the corner does better than unseen", "\n", "pt_x", "=", "max", "(", "0", ",", "pt_x", ")", "\n", "pt_y", "=", "max", "(", "0", ",", "pt_y", ")", "\n", "pt_x", "=", "int", "(", "min", "(", "pt_map", ".", "shape", "[", "1", "]", "-", "1", ",", "pt_x", ")", ")", "\n", "pt_y", "=", "int", "(", "min", "(", "pt_map", ".", "shape", "[", "0", "]", "-", "1", ",", "pt_y", ")", ")", "\n", "\n", "pt_map", "[", "pt_y", ",", "pt_x", "]", "=", "1", "\n", "", "return", "target_map", ",", "None", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Not support method for gen heatmap.\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_afc_head": [[83, 139], ["numpy.zeros", "numpy.floor", "numpy.clip", "heat.copy.copy", "range", "range", "print", "exit", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "max", "max", "max", "min", "max", "min", "max", "max", "int", "int", "min", "min", "min", "min", "round", "round", "round", "round"], "function", ["None"], ["", "", "def", "gen_afc_head", "(", "target_w_size", ",", "heat", ",", "config", ")", ":", "\n", "# add fc as offset", "\n", "    ", "target_map", "=", "np", ".", "zeros", "(", "(", "config", ".", "num_landmarks", ",", "config", ".", "heatmap_size", ",", "config", ".", "heatmap_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "target_int", "=", "np", ".", "floor", "(", "target_w_size", ")", "\n", "target_int", "=", "np", ".", "clip", "(", "target_int", ",", "0", ",", "config", ".", "heatmap_size", "-", "1", ")", "\n", "offset_float", "=", "target_w_size", "-", "target_int", "\n", "\n", "if", "config", ".", "heatmap_method", "==", "\"GAUSS\"", ":", "\n", "        ", "heat", "=", "heat", ".", "copy", "(", ")", "\n", "tmp_size", "=", "config", ".", "heatmap_sigma", "*", "3", "\n", "is_sigma_int", "=", "True", "if", "config", ".", "heatmap_sigma", "%", "1", "<", "1e-6", "else", "False", "\n", "for", "i", "in", "range", "(", "target_int", ".", "shape", "[", "0", "]", ")", ":", "\n", "# pt : [x,y], pt_map : [heatmap_size x heatmap_size] ", "\n", "            ", "pt", ",", "pt_map", "=", "target_int", "[", "i", "]", ",", "target_map", "[", "i", "]", "\n", "if", "is_sigma_int", ":", "\n", "                ", "ul", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "-", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "-", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "+", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "+", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "", "else", ":", "\n", "                ", "ul", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "-", "tmp_size", ",", "pt", "[", "1", "]", "-", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "+", "tmp_size", ",", "pt", "[", "1", "]", "+", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "\n", "# Check that any part of the gaussian is in-bounds", "\n", "", "if", "(", "ul", "[", "0", "]", ">=", "pt_map", ".", "shape", "[", "1", "]", "or", "ul", "[", "1", "]", ">=", "pt_map", ".", "shape", "[", "0", "]", "or", "\n", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ")", ":", "\n", "# If not, just return the image as is", "\n", "                ", "continue", "\n", "", "br", "+=", "1", "# take the same process as shape, thus add 1", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "pt_map", ".", "shape", "[", "1", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "pt_map", ".", "shape", "[", "0", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "pt_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "pt_map", ".", "shape", "[", "1", "]", ")", "\n", "pt_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "pt_map", ".", "shape", "[", "0", "]", ")", "\n", "\n", "pt_map", "[", "pt_y", "[", "0", "]", ":", "pt_y", "[", "1", "]", ",", "pt_x", "[", "0", "]", ":", "pt_x", "[", "1", "]", "]", "=", "heat", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", "\n", "\n", "", "return", "target_map", ",", "offset_float", "\n", "\n", "", "elif", "config", ".", "heatmap_method", "==", "\"DIRECT\"", ":", "\n", "        ", "for", "i", "in", "range", "(", "target_int", ".", "shape", "[", "0", "]", ")", ":", "\n", "# pt : [x,y], pt_map : [heatmap_size x heatmap_size] ", "\n", "            ", "pt", ",", "pt_map", "=", "target_int", "[", "i", "]", ",", "target_map", "[", "i", "]", "\n", "pt_x", "=", "pt", "[", "0", "]", "\n", "pt_y", "=", "pt", "[", "1", "]", "\n", "# seen on the corner will do better than unseen", "\n", "pt_x", "=", "max", "(", "0", ",", "pt_x", ")", "\n", "pt_y", "=", "max", "(", "0", ",", "pt_y", ")", "\n", "pt_x", "=", "int", "(", "min", "(", "pt_map", ".", "shape", "[", "1", "]", "-", "1", ",", "pt_x", ")", ")", "\n", "pt_y", "=", "int", "(", "min", "(", "pt_map", ".", "shape", "[", "0", "]", "-", "1", ",", "pt_y", ")", ")", "\n", "\n", "pt_map", "[", "pt_y", ",", "pt_x", "]", "=", "1", "\n", "", "return", "target_map", ",", "offset_float", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Not support method for gen heatmap.\"", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_hih_head": [[141, 160], ["gen_heads.gen_afc_head", "copy.copy", "gen_heads.gen_woo_head", "gen_heads.gen_heat"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_afc_head", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_woo_head", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_heat"], ["", "", "def", "gen_hih_head", "(", "target_w_size", ",", "heat", ",", "config", ")", ":", "\n", "# add another heatmap as offset", "\n", "# target_w_size is target * config.heatmap_size", "\n", "    ", "target_map", ",", "offset_float", "=", "gen_afc_head", "(", "target_w_size", ",", "heat", ",", "config", ")", "\n", "offset_w_size", "=", "offset_float", "*", "config", ".", "offset_size", "\n", "\n", "offset_config", "=", "copy", ".", "copy", "(", "config", ")", "\n", "offset_config", ".", "heatmap_size", "=", "config", ".", "offset_size", "\n", "offset_config", ".", "heatmap_method", "=", "config", ".", "offset_method", "\n", "offset_config", ".", "heatmap_sigma", "=", "config", ".", "offset_sigma", "\n", "\n", "if", "config", ".", "heatmap_sigma", "!=", "config", ".", "offset_sigma", ":", "\n", "        ", "offset_heat", "=", "gen_heat", "(", "config", ".", "offset_method", ",", "config", ".", "offset_sigma", ")", "\n", "", "else", ":", "\n", "        ", "offset_heat", "=", "heat", "\n", "\n", "", "offset_map", ",", "_", "=", "gen_woo_head", "(", "offset_w_size", ",", "offset_heat", ",", "offset_config", ")", "\n", "\n", "return", "target_map", ",", "offset_map", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_od_head": [[161, 175], ["numpy.zeros", "gen_heads.gen_afc_head", "numpy.floor", "numpy.clip().astype", "range", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_afc_head"], ["", "def", "gen_od_head", "(", "target_w_size", ",", "heat", ",", "config", ")", ":", "\n", "# od:object_detection", "\n", "# offset head like cornernet and extremenet", "\n", "    ", "offset_map", "=", "np", ".", "zeros", "(", "(", "2", ",", "config", ".", "heatmap_size", ",", "config", ".", "heatmap_size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "# 2,h,w  2->(x-,y-)", "\n", "target_map", ",", "offset_float", "=", "gen_afc_head", "(", "target_w_size", ",", "heat", ",", "config", ")", "\n", "\n", "target_int", "=", "np", ".", "floor", "(", "target_w_size", ")", "\n", "target_int", "=", "np", ".", "clip", "(", "target_int", ",", "0", ",", "config", ".", "heatmap_size", "-", "1", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "target_int", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "pt", ",", "offset", "=", "target_int", "[", "i", "]", ",", "offset_float", "[", "i", "]", "\n", "offset_map", "[", "0", ",", "pt", "[", "1", "]", ",", "pt", "[", "0", "]", "]", "=", "offset", "[", "0", "]", "# offset_x", "\n", "offset_map", "[", "1", ",", "pt", "[", "1", "]", ",", "pt", "[", "0", "]", "]", "=", "offset", "[", "1", "]", "# offset_y", "\n", "\n", "", "return", "target_map", ",", "offset_map", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head": [[4, 23], ["torch.max", "idx.view().repeat().float", "max_v.view.view", "max_v.view.gt().repeat().float", "preds[].remainder_", "preds[].div_().floor_", "idx.view().repeat().float.mul_", "target_maps.view", "idx.size", "idx.size", "target_maps.size", "target_maps.size", "target_maps.size", "idx.view().repeat", "max_v.view.gt().repeat", "preds[].div_", "target_maps.size", "target_maps.size", "target_maps.size", "idx.view", "max_v.view.gt", "idx.size", "idx.size"], "function", ["None"], ["def", "decode_woo_head", "(", "target_maps", ",", "offset_map", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n        Args:\n            target_maps (n,98,64,64) tensor float32\n            offset_map is None here.\n\n        return : \n            preds (n,98,2)\n    \"\"\"", "\n", "max_v", ",", "idx", "=", "torch", ".", "max", "(", "target_maps", ".", "view", "(", "target_maps", ".", "size", "(", "0", ")", ",", "target_maps", ".", "size", "(", "1", ")", ",", "target_maps", ".", "size", "(", "2", ")", "*", "target_maps", ".", "size", "(", "3", ")", ")", ",", "2", ")", "\n", "preds", "=", "idx", ".", "view", "(", "idx", ".", "size", "(", "0", ")", ",", "idx", ".", "size", "(", "1", ")", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "max_v", "=", "max_v", ".", "view", "(", "idx", ".", "size", "(", "0", ")", ",", "idx", ".", "size", "(", "1", ")", ",", "1", ")", "\n", "pred_mask", "=", "max_v", ".", "gt", "(", "0", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "\n", "preds", "[", "...", ",", "0", "]", ".", "remainder_", "(", "target_maps", ".", "size", "(", "3", ")", ")", "\n", "preds", "[", "...", ",", "1", "]", ".", "div_", "(", "target_maps", ".", "size", "(", "2", ")", ")", ".", "floor_", "(", ")", "\n", "\n", "preds", ".", "mul_", "(", "pred_mask", ")", "\n", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_afc_head": [[24, 34], ["decode_woo_head().float", "decode_woo_head().float.add_", "decode_heads.decode_woo_head"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head"], ["", "def", "decode_afc_head", "(", "target_maps", ",", "offset_float", ")", ":", "\n", "    ", "\"\"\"\n        target_maps : (n,98,64,64) float32\n        offset_float : (n,98,2) float32\n    \"\"\"", "\n", "\n", "preds", "=", "decode_woo_head", "(", "target_maps", ")", ".", "float", "(", ")", "\n", "preds", ".", "add_", "(", "offset_float", ")", "\n", "\n", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_hih_head": [[35, 47], ["decode_woo_head().float", "decode_woo_head().float.add_", "decode_heads.decode_woo_head", "torch.tensor().cuda", "decode_heads.decode_woo_head", "torch.tensor", "offset_map.size", "offset_map.size"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head"], ["", "def", "decode_hih_head", "(", "target_maps", ",", "offset_map", ")", ":", "\n", "    ", "\"\"\"\n        target_maps : (n,98,64,64) float32\n        offset_map : (n,98,4,4) float32\n\n        return preds (n,98,2)\n    \"\"\"", "\n", "preds", "=", "decode_woo_head", "(", "target_maps", ")", ".", "float", "(", ")", "\n", "offsets", "=", "decode_woo_head", "(", "offset_map", ")", "/", "torch", ".", "tensor", "(", "[", "offset_map", ".", "size", "(", "3", ")", ",", "offset_map", ".", "size", "(", "2", ")", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "preds", ".", "add_", "(", "offsets", ")", "\n", "\n", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_od_head": [[48, 62], ["decode_woo_head().float", "range", "decode_woo_head().float.size", "range", "decode_heads.decode_woo_head", "decode_woo_head().float.size", "torch.FloatTensor().cuda", "preds[].add_", "int", "int", "torch.FloatTensor"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.decode_heads.decode_woo_head"], ["", "def", "decode_od_head", "(", "target_maps", ",", "offset_map", ")", ":", "\n", "    ", "\"\"\"\n        target_maps : (n,98,64,64) float32\n        offset_map : (n,2,64,64) float32\n    \"\"\"", "\n", "preds", "=", "decode_woo_head", "(", "target_maps", ")", ".", "float", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "preds", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "preds", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "pX", ",", "pY", "=", "int", "(", "preds", "[", "i", ",", "j", ",", "0", "]", ")", ",", "int", "(", "preds", "[", "i", ",", "j", ",", "1", "]", ")", "\n", "offset_value", "=", "torch", ".", "FloatTensor", "(", "[", "offset_map", "[", "i", ",", "0", ",", "pY", ",", "pX", "]", ",", "offset_map", "[", "i", ",", "1", ",", "pY", ",", "pX", "]", "]", ")", ".", "cuda", "(", ")", "\n", "preds", "[", "i", ",", "j", "]", ".", "add_", "(", "offset_value", ")", "\n", "\n", "", "", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.dataset.dataset_heads.__init__": [[17, 48], ["os.path.join", "os.path.join", "lib.dataset.utils.flip_points", "gen_heat", "eval", "os.path.join", "numpy.array", "data_info[].copy", "data_info[].astype().reshape().copy", "lib.dataset.utils.check_size", "print", "open", "f.readlines", "x.strip().split", "data_info[].astype().reshape", "Image.open().convert", "x.strip", "data_info[].astype", "Image.open", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.utils.flip_points", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.gen_heads.gen_heat", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.utils.check_size"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "read_mem", "=", "True", ",", "Is_train", "=", "True", ",", "transform", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n            config : experiments/**\n            read_mem : bool, read dataset in memery or not.\n            Is_train : bool, train or test\n            transform: default is None, operations in torchvision\n        \"\"\"", "\n", "root_folder", "=", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "\"benchmark\"", ")", "\n", "self", ".", "data_folder", "=", "config", ".", "data_folder", "if", "Is_train", "else", "config", ".", "test_folder", "\n", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "root_folder", ",", "config", ".", "data_type", ",", "self", ".", "data_folder", ")", "\n", "self", ".", "points_flip", "=", "flip_points", "(", "config", ".", "data_type", ")", "\n", "self", ".", "is_train", "=", "Is_train", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "read_mem", "=", "read_mem", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "heat", "=", "gen_heat", "(", "config", ".", "heatmap_method", ",", "config", ".", "heatmap_sigma", ")", "\n", "self", ".", "gen_head", "=", "eval", "(", "\"gen_{}_head\"", ".", "format", "(", "config", ".", "head_type", ")", ")", "\n", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "root_folder", ",", "config", ".", "data_type", ",", "self", ".", "data_folder", "+", "\".txt\"", ")", "\n", "with", "open", "(", "label_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "data_txt", "=", "f", ".", "readlines", "(", ")", "\n", "", "data_info", "=", "np", ".", "array", "(", "[", "x", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "x", "in", "data_txt", "]", ")", "\n", "\n", "self", ".", "img_paths", "=", "data_info", "[", ":", ",", "0", "]", ".", "copy", "(", ")", "\n", "self", ".", "pts_array", "=", "data_info", "[", ":", ",", "1", ":", "]", ".", "astype", "(", "np", ".", "float32", ")", ".", "reshape", "(", "data_info", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "2", ")", ".", "copy", "(", ")", "\n", "self", ".", "imgs", "=", "[", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "img_path", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "for", "img_path", "in", "self", ".", "img_paths", "]", "if", "read_mem", "else", "[", "]", "\n", "# check image size", "\n", "check_size", "(", "self", ".", "imgs", ",", "config", ")", "\n", "print", "(", "\"Finish READ and CHECK dataset, Success !\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.dataset.dataset_heads.__getitem__": [[50, 80], ["dataset.dataset_heads.pts_array[].copy", "pad_crop", "dataset.dataset_heads.gen_head", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "dataset.dataset_heads.imgs[].copy", "Image.open().convert", "random_translate", "random_flip", "random_rotate", "random_blur", "random_occlusion", "dataset.dataset_heads.transform", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torchvision.ToTensor", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "Image.open", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.pad_crop", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_translate", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_flip", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_rotate", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_blur", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_occlusion"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "imgs", "[", "index", "]", ".", "copy", "(", ")", "if", "self", ".", "read_mem", "else", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "self", ".", "img_paths", "[", "index", "]", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "target", "=", "self", ".", "pts_array", "[", "index", "]", ".", "copy", "(", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "\n", "            ", "img", ",", "target", "=", "random_translate", "(", "img", ",", "target", ")", "\n", "img", ",", "target", "=", "random_flip", "(", "img", ",", "target", ",", "self", ".", "points_flip", ")", "\n", "img", ",", "target", "=", "random_rotate", "(", "img", ",", "target", ",", "angle_max", "=", "30", ")", "\n", "img", "=", "random_blur", "(", "img", ")", "\n", "img", "=", "random_occlusion", "(", "img", ")", "\n", "\n", "# ignore or pad crop,both are ok.", "\n", "", "img", ",", "target", "=", "pad_crop", "(", "img", ",", "target", ")", "\n", "# target = ignore_crop(target)  ", "\n", "\n", "target_w_size", "=", "target", "*", "self", ".", "config", ".", "heatmap_size", "\n", "target_map", ",", "offset_map", "=", "self", ".", "gen_head", "(", "target_w_size", ",", "self", ".", "heat", ",", "self", ".", "config", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "transforms", ".", "ToTensor", "(", ")", "(", "img", ")", "\n", "\n", "", "target_w_size", "=", "torch", ".", "from_numpy", "(", "target_w_size", ")", ".", "float", "(", ")", "\n", "target_map", "=", "torch", ".", "from_numpy", "(", "target_map", ")", ".", "float", "(", ")", "\n", "offset_map", "=", "torch", ".", "from_numpy", "(", "offset_map", ")", ".", "float", "(", ")", "if", "offset_map", "is", "not", "None", "else", "torch", ".", "zeros", "(", "1", ")", "\n", "\n", "return", "img", ",", "target_map", ",", "offset_map", ",", "target_w_size", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.dataset.dataset_heads.__len__": [[81, 83], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "pts_array", ".", "shape", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.utils.flip_points": [[4, 23], ["data_type.upper.upper", "len", "len", "len", "print", "exit", "len"], "function", ["None"], ["def", "flip_points", "(", "data_type", "=", "\"WFLW\"", ")", ":", "\n", "    ", "data_type", "=", "data_type", ".", "upper", "(", ")", "\n", "points_flip", "=", "None", "\n", "if", "data_type", "==", "'300W'", ":", "\n", "        ", "points_flip", "=", "[", "16", ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", ",", "26", ",", "25", ",", "24", ",", "23", ",", "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", "17", ",", "27", ",", "28", ",", "29", ",", "30", ",", "35", ",", "34", ",", "33", ",", "32", ",", "31", ",", "45", ",", "44", ",", "43", ",", "42", ",", "47", ",", "46", ",", "39", ",", "38", ",", "37", ",", "36", ",", "41", ",", "40", ",", "54", ",", "53", ",", "52", ",", "51", ",", "50", ",", "49", ",", "48", ",", "59", ",", "58", ",", "57", ",", "56", ",", "55", ",", "64", ",", "63", ",", "62", ",", "61", ",", "60", ",", "67", ",", "66", ",", "65", "]", "\n", "assert", "len", "(", "points_flip", ")", "==", "68", "\n", "", "elif", "data_type", "==", "'WFLW'", ":", "\n", "        ", "points_flip", "=", "[", "32", ",", "31", ",", "30", ",", "29", ",", "28", ",", "27", ",", "26", ",", "25", ",", "24", ",", "23", ",", "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", "17", ",", "16", ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", ",", "46", ",", "45", ",", "44", ",", "43", ",", "42", ",", "50", ",", "49", ",", "48", ",", "47", ",", "37", ",", "36", ",", "35", ",", "34", ",", "33", ",", "41", ",", "40", ",", "39", ",", "38", ",", "51", ",", "52", ",", "53", ",", "54", ",", "59", ",", "58", ",", "57", ",", "56", ",", "55", ",", "72", ",", "71", ",", "70", ",", "69", ",", "68", ",", "75", ",", "74", ",", "73", ",", "64", ",", "63", ",", "62", ",", "61", ",", "60", ",", "67", ",", "66", ",", "65", ",", "82", ",", "81", ",", "80", ",", "79", ",", "78", ",", "77", ",", "76", ",", "87", ",", "86", ",", "85", ",", "84", ",", "83", ",", "92", ",", "91", ",", "90", ",", "89", ",", "88", ",", "95", ",", "94", ",", "93", ",", "97", ",", "96", "]", "\n", "assert", "len", "(", "points_flip", ")", "==", "98", "\n", "", "elif", "data_type", "==", "'COFW'", ":", "\n", "        ", "points_flip", "=", "[", "1", ",", "0", ",", "3", ",", "2", ",", "6", ",", "7", ",", "4", ",", "5", ",", "9", ",", "8", ",", "11", ",", "10", ",", "14", ",", "15", ",", "12", ",", "13", ",", "17", ",", "16", ",", "19", ",", "18", ",", "20", ",", "21", ",", "23", ",", "22", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", "]", "\n", "assert", "len", "(", "points_flip", ")", "==", "29", "\n", "", "elif", "data_type", "==", "'AFLW'", ":", "\n", "        ", "points_flip", "=", "[", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "14", ",", "13", ",", "12", ",", "17", ",", "16", ",", "15", ",", "18", "]", "\n", "assert", "len", "(", "points_flip", ")", "==", "19", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No such data!'", ")", "\n", "exit", "(", "0", ")", "\n", "", "return", "points_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.utils.check_size": [[24, 36], ["range", "len", "print", "exit"], "function", ["None"], ["", "def", "check_size", "(", "imgs", ",", "config", ")", ":", "\n", "    ", "\"\"\"\n        check dataset read success and size is same as input size.\n        Args:\n            imgs: [Image,...]\n            config : config py\n    \"\"\"", "\n", "for", "i", "in", "range", "(", "len", "(", "imgs", ")", ")", ":", "\n", "        ", "img", "=", "imgs", "[", "i", "]", "\n", "if", "img", ".", "height", "!=", "config", ".", "input_size", "or", "img", ".", "width", "!=", "config", ".", "input_size", ":", "\n", "            ", "print", "(", "\"{}th Image is not applicable ({},{}),need delete or resize.\"", ".", "format", "(", "i", "+", "1", ",", "img", ".", "height", ",", "img", ".", "width", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_translate": [[20, 36], ["random.random", "int", "int", "image.transform.transform", "random.random", "random.random"], "function", ["None"], ["def", "random_translate", "(", "image", ",", "target", ")", ":", "\n", "# PIL type", "\n", "    ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "image_height", ",", "image_width", "=", "image", ".", "size", "\n", "a", "=", "1", "\n", "b", "=", "0", "\n", "c", "=", "int", "(", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "60", ")", "\n", "d", "=", "0", "\n", "e", "=", "1", "\n", "f", "=", "int", "(", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "60", ")", "\n", "image", "=", "image", ".", "transform", "(", "image", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ")", ")", "\n", "target", "[", ":", ",", "0", "]", "-=", "1.", "*", "c", "/", "image_width", "\n", "target", "[", ":", ",", "1", "]", "-=", "1.", "*", "f", "/", "image_height", "\n", "return", "image", ",", "target", "\n", "", "else", ":", "\n", "        ", "return", "image", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_blur": [[38, 43], ["random.random", "image.filter.filter", "PIL.ImageFilter.GaussianBlur", "random.random"], "function", ["None"], ["", "", "def", "random_blur", "(", "image", ")", ":", "\n", "# PIL type", "\n", "    ", "if", "random", ".", "random", "(", ")", ">", "0.7", ":", "\n", "        ", "image", "=", "image", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "random", ".", "random", "(", ")", "*", "5", ")", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_flip": [[44, 53], ["random.random", "image.transpose.transpose"], "function", ["None"], ["", "def", "random_flip", "(", "image", ",", "target", ",", "points_flip", ")", ":", "\n", "# PIL type", "\n", "    ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "target", "=", "target", "[", "points_flip", ",", ":", "]", "\n", "target", "[", ":", ",", "0", "]", "=", "1", "-", "target", "[", ":", ",", "0", "]", "\n", "return", "image", ",", "target", "\n", "", "else", ":", "\n", "        ", "return", "image", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_rotate": [[54, 73], ["random.random", "numpy.radians", "random.uniform", "numpy.degrees", "image.rotate.rotate", "numpy.array", "numpy.matmul", "numpy.array", "numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "", "def", "random_rotate", "(", "image", ",", "target", ",", "angle_max", ")", ":", "\n", "# PIL type", "\n", "    ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "center_x", "=", "0.5", "\n", "center_y", "=", "0.5", "\n", "landmark_num", "=", "target", ".", "shape", "[", "0", "]", "\n", "target_center", "=", "target", "-", "np", ".", "array", "(", "[", "center_x", ",", "center_y", "]", ")", "\n", "theta_max", "=", "np", ".", "radians", "(", "angle_max", ")", "\n", "theta", "=", "random", ".", "uniform", "(", "-", "theta_max", ",", "theta_max", ")", "\n", "angle", "=", "np", ".", "degrees", "(", "theta", ")", "\n", "image", "=", "image", ".", "rotate", "(", "angle", ")", "\n", "\n", "c", ",", "s", "=", "np", ".", "cos", "(", "theta", ")", ",", "np", ".", "sin", "(", "theta", ")", "\n", "rot", "=", "np", ".", "array", "(", "(", "(", "c", ",", "-", "s", ")", ",", "(", "s", ",", "c", ")", ")", ")", "\n", "target_center_rot", "=", "np", ".", "matmul", "(", "target_center", ",", "rot", ")", "\n", "target_rot", "=", "target_center_rot", "+", "np", ".", "array", "(", "[", "center_x", ",", "center_y", "]", ")", "\n", "return", "image", ",", "target_rot", "\n", "", "else", ":", "\n", "        ", "return", "image", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.random_occlusion": [[75, 91], ["random.random", "numpy.array().astype", "int", "int", "int", "int", "int", "int", "int", "PIL.Image.fromarray", "np.array().astype.astype", "numpy.array", "random.random", "random.random", "random.random", "random.random", "random.random", "random.random", "random.random"], "function", ["None"], ["", "", "def", "random_occlusion", "(", "image", ")", ":", "\n", "# Need change data type", "\n", "    ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "        ", "image_np", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image_height", ",", "image_width", ",", "_", "=", "image_np", ".", "shape", "\n", "occ_height", "=", "int", "(", "image_height", "*", "0.4", "*", "random", ".", "random", "(", ")", ")", "\n", "occ_width", "=", "int", "(", "image_width", "*", "0.4", "*", "random", ".", "random", "(", ")", ")", "\n", "occ_xmin", "=", "int", "(", "(", "image_width", "-", "occ_width", "-", "10", ")", "*", "random", ".", "random", "(", ")", ")", "\n", "occ_ymin", "=", "int", "(", "(", "image_height", "-", "occ_height", "-", "10", ")", "*", "random", ".", "random", "(", ")", ")", "\n", "image_np", "[", "occ_ymin", ":", "occ_ymin", "+", "occ_height", ",", "occ_xmin", ":", "occ_xmin", "+", "occ_width", ",", "0", "]", "=", "int", "(", "random", ".", "random", "(", ")", "*", "255", ")", "\n", "image_np", "[", "occ_ymin", ":", "occ_ymin", "+", "occ_height", ",", "occ_xmin", ":", "occ_xmin", "+", "occ_width", ",", "1", "]", "=", "int", "(", "random", ".", "random", "(", ")", "*", "255", ")", "\n", "image_np", "[", "occ_ymin", ":", "occ_ymin", "+", "occ_height", ",", "occ_xmin", ":", "occ_xmin", "+", "occ_width", ",", "2", "]", "=", "int", "(", "random", ".", "random", "(", ")", "*", "255", ")", "\n", "image_pil", "=", "Image", ".", "fromarray", "(", "image_np", ".", "astype", "(", "'uint8'", ")", ",", "'RGB'", ")", "\n", "return", "image_pil", "\n", "", "else", ":", "\n", "        ", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.pad_crop": [[92, 133], ["numpy.min", "numpy.max", "numpy.array().astype", "numpy.zeros().astype", "numpy.zeros().astype", "PIL.Image.fromarray", "image_pil.resize.resize", "numpy.maximum", "numpy.minimum", "np.zeros().astype.astype", "numpy.array", "numpy.array", "numpy.zeros", "math.ceil", "math.ceil", "math.ceil", "math.ceil", "numpy.zeros", "numpy.array", "numpy.array"], "function", ["None"], ["", "", "def", "pad_crop", "(", "image", ",", "target", ")", ":", "\n", "    ", "\"\"\"\n        add pad for the overflow points\n        image need change data type\n        border_pad : 8px\n    \"\"\"", "\n", "image_height", ",", "image_width", "=", "image", ".", "size", "\n", "\n", "l", ",", "t", "=", "np", ".", "min", "(", "target", ",", "axis", "=", "0", ")", "\n", "r", ",", "b", "=", "np", ".", "max", "(", "target", ",", "axis", "=", "0", ")", "\n", "\n", "# if the over border is left than grid_size, pass", "\n", "grid_size", "=", "0.5", "/", "image_height", "\n", "\n", "if", "l", ">", "-", "grid_size", "and", "t", ">", "-", "grid_size", "and", "r", "<", "(", "1", "+", "grid_size", ")", "and", "b", "<", "(", "1", "+", "grid_size", ")", ":", "\n", "        ", "target", "=", "np", ".", "maximum", "(", "target", ",", "0", ")", "\n", "target", "=", "np", ".", "minimum", "(", "target", ",", "1", ")", "\n", "return", "image", ",", "target", "\n", "", "border_pad_value", "=", "8", "\n", "image_np", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "border_size", "=", "np", ".", "zeros", "(", "4", ")", ".", "astype", "(", "'int'", ")", "# upper bottom left right", "\n", "if", "l", "<", "0", ":", "\n", "        ", "border_size", "[", "2", "]", "=", "ceil", "(", "-", "l", "*", "image_height", ")", "+", "border_pad_value", "#left", "\n", "", "if", "t", "<", "0", ":", "\n", "        ", "border_size", "[", "0", "]", "=", "ceil", "(", "-", "t", "*", "image_width", ")", "+", "border_pad_value", "#upper", "\n", "", "if", "r", ">", "1", ":", "\n", "        ", "border_size", "[", "3", "]", "=", "ceil", "(", "(", "r", "-", "1", ")", "*", "image_height", ")", "+", "border_pad_value", "#right", "\n", "", "if", "b", ">", "1", ":", "\n", "        ", "border_size", "[", "1", "]", "=", "ceil", "(", "(", "b", "-", "1", ")", "*", "image_width", ")", "+", "border_pad_value", "#bottom", "\n", "", "border_img", "=", "np", ".", "zeros", "(", "(", "image_width", "+", "border_size", "[", "0", "]", "+", "border_size", "[", "1", "]", ",", "\n", "image_height", "+", "border_size", "[", "2", "]", "+", "border_size", "[", "3", "]", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "border_img", "[", "border_size", "[", "0", "]", ":", "border_size", "[", "0", "]", "+", "image_height", ",", "\n", "border_size", "[", "2", "]", ":", "border_size", "[", "2", "]", "+", "image_width", ",", ":", "]", "=", "image_np", "\n", "\n", "image_pil", "=", "Image", ".", "fromarray", "(", "border_img", ".", "astype", "(", "'uint8'", ")", ",", "'RGB'", ")", "\n", "image_pil", "=", "image_pil", ".", "resize", "(", "(", "image_height", ",", "image_width", ")", ")", "\n", "target", "=", "(", "target", "*", "np", ".", "array", "(", "[", "image_height", ",", "image_width", "]", ")", "+", "\n", "np", ".", "array", "(", "[", "border_size", "[", "2", "]", ",", "border_size", "[", "0", "]", "]", ")", ")", "/", "np", ".", "array", "(", "[", "border_img", ".", "shape", "[", "1", "]", ",", "border_img", ".", "shape", "[", "0", "]", "]", ")", "\n", "\n", "return", "image_pil", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.augmentation.ignore_crop": [[134, 138], ["numpy.maximum", "numpy.minimum"], "function", ["None"], ["", "def", "ignore_crop", "(", "target", ")", ":", "\n", "    ", "target", "=", "np", ".", "maximum", "(", "target", ",", "0", ")", "\n", "target", "=", "np", ".", "minimum", "(", "target", ",", "1", ")", "\n", "return", "target", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.heatmap.generate_target": [[14, 56], ["numpy.arange", "numpy.exp", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "max", "max", "max", "min", "max", "min", "min", "min", "round", "round", "round", "round"], "function", ["None"], ["def", "generate_target", "(", "img", ",", "pt", ",", "sigma", ")", ":", "\n", "    ", "\"\"\"\n        return: a heatmap image.\n    \"\"\"", "\n", "\n", "tmp_size", "=", "sigma", "*", "3", "\n", "\n", "if", "sigma", "%", "1", ">", "1e-6", ":", "\n", "# sigma type float", "\n", "        ", "ul", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "-", "tmp_size", ",", "pt", "[", "1", "]", "-", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "pt", "[", "0", "]", "+", "tmp_size", ",", "pt", "[", "1", "]", "+", "tmp_size", "]", ",", "dtype", "=", "int", ")", "\n", "", "else", ":", "\n", "# sigma type int", "\n", "        ", "ul", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "-", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "-", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "br", "=", "np", ".", "array", "(", "[", "round", "(", "pt", "[", "0", "]", "+", "tmp_size", ")", ",", "round", "(", "pt", "[", "1", "]", "+", "tmp_size", ")", "]", ",", "dtype", "=", "int", ")", "\n", "\n", "# Check that any part of the gaussian is in-bounds", "\n", "", "if", "(", "ul", "[", "0", "]", ">=", "img", ".", "shape", "[", "1", "]", "or", "ul", "[", "1", "]", ">=", "img", ".", "shape", "[", "0", "]", "or", "\n", "br", "[", "0", "]", "<", "0", "or", "br", "[", "1", "]", "<", "0", ")", ":", "\n", "# If not, just return the image as is", "\n", "        ", "return", "img", "\n", "\n", "# Generate gaussian", "\n", "", "size", "=", "2", "*", "tmp_size", "+", "1", "# ensure size is odd number", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "size", ",", "1", ",", "np", ".", "float32", ")", "\n", "y", "=", "x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x0", "=", "y0", "=", "size", "//", "2", "\n", "# The gaussian i s not normalized, we want the center value to equal 1", "\n", "# max value is 1,and to keep diff with other 0 pixels ,don't sub min,thus normalization is no use", "\n", "g", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "-", "x0", ")", "**", "2", "+", "(", "y", "-", "y0", ")", "**", "2", ")", "/", "(", "2", "*", "sigma", "**", "2", ")", ")", "\n", "\n", "br", "+=", "1", "\n", "# Usable gaussian range", "\n", "g_x", "=", "max", "(", "0", ",", "-", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ")", "-", "ul", "[", "0", "]", "\n", "g_y", "=", "max", "(", "0", ",", "-", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", "-", "ul", "[", "1", "]", "\n", "# Image range", "\n", "img_x", "=", "max", "(", "0", ",", "ul", "[", "0", "]", ")", ",", "min", "(", "br", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ")", "\n", "img_y", "=", "max", "(", "0", ",", "ul", "[", "1", "]", ")", ",", "min", "(", "br", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ")", "\n", "# print(g_x,g_y,img_x,img_y)", "\n", "\n", "img", "[", "img_y", "[", "0", "]", ":", "img_y", "[", "1", "]", ",", "img_x", "[", "0", "]", ":", "img_x", "[", "1", "]", "]", "=", "g", "[", "g_y", "[", "0", "]", ":", "g_y", "[", "1", "]", ",", "g_x", "[", "0", "]", ":", "g_x", "[", "1", "]", "]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.heatmap.get_pts": [[57, 76], ["torch.max", "maxval.view.view", "idx.view.view", "idx.view.repeat().float", "torch.floor", "maxval.view.gt().repeat().float", "scores.dim", "scores.view", "scores.size", "scores.size", "scores.size", "scores.size", "scores.size", "scores.size", "scores.size", "idx.view.repeat", "scores.size", "maxval.view.gt().repeat", "maxval.view.gt"], "function", ["None"], ["", "def", "get_pts", "(", "scores", ")", ":", "\n", "    ", "\"\"\"\n    get predictions from score maps in torch Tensor\n    return type: torch.LongTensor\n    \"\"\"", "\n", "assert", "scores", ".", "dim", "(", ")", "==", "4", ",", "'Score maps should be 4-dim'", "\n", "maxval", ",", "idx", "=", "torch", ".", "max", "(", "scores", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "-", "1", ")", ",", "2", ")", "\n", "\n", "maxval", "=", "maxval", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "1", ")", "\n", "idx", "=", "idx", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "1", ")", "\n", "\n", "preds", "=", "idx", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "\n", "preds", "[", ":", ",", ":", ",", "0", "]", "=", "(", "preds", "[", ":", ",", ":", ",", "0", "]", ")", "%", "scores", ".", "size", "(", "3", ")", "\n", "preds", "[", ":", ",", ":", ",", "1", "]", "=", "torch", ".", "floor", "(", "(", "preds", "[", ":", ",", ":", ",", "1", "]", ")", "/", "scores", ".", "size", "(", "3", ")", ")", "\n", "\n", "pred_mask", "=", "maxval", ".", "gt", "(", "0", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "# gt(a,b) \u6bd4\u8f83a\u662f\u5426\u5927\u4e8eb \u5927\u4e8e\u5219\u4e3a1\uff0c\u4e0d\u5927\u4e8e\u5219\u4e3a0", "\n", "preds", "*=", "pred_mask", "\n", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.heatmap.get_pts_grad": [[77, 96], ["torch.max", "idx.view().repeat().float", "preds[].remainder_", "preds[].div_().floor_", "range", "hm.view", "hm.size", "idx.view().repeat().float.size", "range", "hm.size", "hm.size", "idx.view().repeat", "preds[].div_", "idx.view().repeat().float.size", "hm.size", "hm.size", "hm.size", "int", "int", "torch.FloatTensor", "preds[].add_", "idx.view", "torch.FloatTensor.sign_().mul_", "idx.size", "idx.size", "torch.FloatTensor.sign_"], "function", ["None"], ["", "def", "get_pts_grad", "(", "hm", ")", ":", "\n", "    ", "max", ",", "idx", "=", "torch", ".", "max", "(", "\n", "hm", ".", "view", "(", "hm", ".", "size", "(", "0", ")", ",", "hm", ".", "size", "(", "1", ")", ",", "hm", ".", "size", "(", "2", ")", "*", "hm", ".", "size", "(", "3", ")", ")", ",", "2", ")", "\n", "preds", "=", "idx", ".", "view", "(", "idx", ".", "size", "(", "0", ")", ",", "idx", ".", "size", "(", "1", ")", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "preds", "[", "...", ",", "0", "]", ".", "remainder_", "(", "hm", ".", "size", "(", "3", ")", ")", "\n", "preds", "[", "...", ",", "1", "]", ".", "div_", "(", "hm", ".", "size", "(", "2", ")", ")", ".", "floor_", "(", ")", "\n", "\n", "# add gradients in dx and dy, but a little effect.", "\n", "for", "i", "in", "range", "(", "preds", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "preds", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "hm_", "=", "hm", "[", "i", ",", "j", ",", ":", "]", "\n", "pX", ",", "pY", "=", "int", "(", "preds", "[", "i", ",", "j", ",", "0", "]", ")", ",", "int", "(", "preds", "[", "i", ",", "j", ",", "1", "]", ")", "\n", "if", "pX", ">", "0", "and", "pX", "<", "63", "and", "pY", ">", "0", "and", "pY", "<", "63", ":", "# make sure don't overflow", "\n", "                ", "diff", "=", "torch", ".", "FloatTensor", "(", "\n", "[", "hm_", "[", "pY", ",", "pX", "+", "1", "]", "-", "hm_", "[", "pY", ",", "pX", "-", "1", "]", ",", "\n", "hm_", "[", "pY", "+", "1", ",", "pX", "]", "-", "hm_", "[", "pY", "-", "1", ",", "pX", "]", "]", ")", "\n", "preds", "[", "i", ",", "j", "]", ".", "add_", "(", "diff", ".", "sign_", "(", ")", ".", "mul_", "(", ".25", ")", ")", "\n", "\n", "", "", "", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.dataset.heatmap.get_pts_all": [[97, 120], ["torch.max", "idx.view().repeat().float", "max_v.view.view", "max_v.view.gt().repeat().float", "preds[].remainder_", "preds[].div_().floor_", "range", "target_maps.view", "idx.size", "idx.size", "target_maps.size", "idx.view().repeat().float.size", "range", "target_maps.size", "target_maps.size", "idx.view().repeat", "max_v.view.gt().repeat", "preds[].div_", "idx.view().repeat().float.size", "target_maps.size", "target_maps.size", "target_maps.size", "int", "int", "torch.FloatTensor", "preds[].add_", "idx.view", "max_v.view.gt", "torch.FloatTensor.sign_().mul_", "idx.size", "idx.size", "target_maps.size", "target_maps.size", "torch.FloatTensor.sign_"], "function", ["None"], ["", "def", "get_pts_all", "(", "target_maps", ")", ":", "\n", "    ", "max_v", ",", "idx", "=", "torch", ".", "max", "(", "target_maps", ".", "view", "(", "target_maps", ".", "size", "(", "0", ")", ",", "target_maps", ".", "size", "(", "1", ")", ",", "target_maps", ".", "size", "(", "2", ")", "*", "target_maps", ".", "size", "(", "3", ")", ")", ",", "2", ")", "\n", "preds", "=", "idx", ".", "view", "(", "idx", ".", "size", "(", "0", ")", ",", "idx", ".", "size", "(", "1", ")", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "max_v", "=", "max_v", ".", "view", "(", "idx", ".", "size", "(", "0", ")", ",", "idx", ".", "size", "(", "1", ")", ",", "1", ")", "\n", "pred_mask", "=", "max_v", ".", "gt", "(", "0", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "\n", "preds", "[", "...", ",", "0", "]", ".", "remainder_", "(", "target_maps", ".", "size", "(", "3", ")", ")", "\n", "preds", "[", "...", ",", "1", "]", ".", "div_", "(", "target_maps", ".", "size", "(", "2", ")", ")", ".", "floor_", "(", ")", "\n", "\n", "# add gradients in dx and dy, but get a little effects.", "\n", "for", "i", "in", "range", "(", "preds", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "preds", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "hm_", "=", "target_maps", "[", "i", ",", "j", ",", ":", "]", "\n", "pX", ",", "pY", "=", "int", "(", "preds", "[", "i", ",", "j", ",", "0", "]", ")", ",", "int", "(", "preds", "[", "i", ",", "j", ",", "1", "]", ")", "\n", "if", "pX", ">", "0", "and", "pX", "<", "target_maps", ".", "size", "(", "3", ")", "-", "1", "and", "pY", ">", "0", "and", "pY", "<", "target_maps", ".", "size", "(", "2", ")", "-", "1", ":", "\n", "                ", "diff", "=", "torch", ".", "FloatTensor", "(", "\n", "[", "hm_", "[", "pY", ",", "pX", "+", "1", "]", "-", "hm_", "[", "pY", ",", "pX", "-", "1", "]", ",", "\n", "hm_", "[", "pY", "+", "1", ",", "pX", "]", "-", "hm_", "[", "pY", "-", "1", ",", "pX", "]", "]", ")", "\n", "preds", "[", "i", ",", "j", "]", ".", "add_", "(", "diff", ".", "sign_", "(", ")", ".", "mul_", "(", ".25", ")", ")", "\n", "\n", "", "", "", "preds", "*=", "pred_mask", "\n", "# print(preds.size())", "\n", "return", "preds", "\n", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.ConvBNReLu.__init__": [[52, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "bn", "=", "True", ",", "relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvBNReLu", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "kernel", ",", "stride", ",", "padding", "=", "(", "kernel", "-", "1", ")", "//", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "oup", ")", "if", "bn", "else", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "if", "relu", "else", "nn", ".", "Sequential", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.ConvBNReLu.forward": [[59, 66], ["get_hourglass.ConvBNReLu.conv", "get_hourglass.ConvBNReLu.bn", "get_hourglass.ConvBNReLu.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Residual.__init__": [[68, 76], ["torch.Module.__init__", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "ConvBNReLu", "(", "inp", ",", "int", "(", "oup", "/", "2", ")", ",", "1", ")", "\n", "self", ".", "conv2", "=", "ConvBNReLu", "(", "int", "(", "oup", "/", "2", ")", ",", "int", "(", "oup", "/", "2", ")", ",", "3", ")", "\n", "self", ".", "conv3", "=", "ConvBNReLu", "(", "int", "(", "oup", "/", "2", ")", ",", "oup", ",", "1", ",", "relu", "=", "False", ")", "\n", "self", ".", "skip_layer", "=", "ConvBNReLu", "(", "inp", ",", "oup", ",", "1", ",", "relu", "=", "False", ")", "\n", "self", ".", "need_skip", "=", "False", "if", "inp", "==", "oup", "else", "True", "\n", "self", ".", "last_relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Residual.forward": [[77, 90], ["get_hourglass.Residual.conv1", "get_hourglass.Residual.conv2", "get_hourglass.Residual.conv3", "get_hourglass.Residual.last_relu", "get_hourglass.Residual.skip_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "need_skip", ":", "\n", "            ", "residual", "=", "self", ".", "skip_layer", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "residual", "=", "x", "\n", "", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "+=", "residual", "\n", "out", "=", "self", ".", "last_relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Down_Block.__init__": [[92, 101], ["torch.Module.__init__", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", "=", "2", ")", ":", "\n", "        ", "super", "(", "Down_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "ConvBNReLu", "(", "inp", ",", "oup", ",", "3", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv2", "=", "ConvBNReLu", "(", "oup", ",", "oup", ",", "3", ",", "relu", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "inp", ",", "oup", ",", "1", ",", "stride", "=", "stride", ",", "relu", "=", "False", ")", "\n", ")", "if", "stride", "!=", "1", "or", "inp", "!=", "oup", "else", "nn", ".", "Sequential", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Down_Block.forward": [[102, 108], ["get_hourglass.Down_Block.conv1", "get_hourglass.Down_Block.conv2", "get_hourglass.Down_Block.relu", "get_hourglass.Down_Block.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "out", "+", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.AFC_head.__init__": [[110, 132], ["torch.Module.__init__", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "range"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "AFC_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "target_c", "=", "config", ".", "target_o", "\n", "\n", "self", ".", "conv1", "=", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "target_c", ",", "1", ")", "\n", "self", ".", "conv3x3_list", "=", "[", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "3", ")", "\n", "for", "i", "in", "range", "(", "config", ".", "num_o", ")", "\n", "]", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "conv3x3_list", ")", "\n", "self", ".", "conv2", "=", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "1", ")", "\n", "self", ".", "shortcut", "=", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "target_c", ",", "1", ")", "if", "config", ".", "num_feature", "!=", "target_c", "else", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ",", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "3", ",", "2", ")", ",", "\n", "ConvBNReLu", "(", "target_c", ",", "2", "*", "target_c", ",", "1", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "2", "*", "target_c", ",", "2", "*", "config", ".", "num_landmarks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.AFC_head.forward": [[133, 145], ["get_hourglass.AFC_head.conv1", "get_hourglass.AFC_head.convs", "get_hourglass.AFC_head.conv2", "get_hourglass.AFC_head.head", "offset.view.view.view", "get_hourglass.AFC_head.fc", "offset.view.view.view", "get_hourglass.AFC_head.shortcut", "offset.view.view.size", "offset.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "convs", "=", "self", ".", "convs", "(", "conv1", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "convs", ")", "\n", "merge_feature", "=", "conv2", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "offset", "=", "self", ".", "head", "(", "merge_feature", ")", "\n", "offset", "=", "offset", ".", "view", "(", "offset", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "offset", "=", "self", ".", "fc", "(", "offset", ")", "\n", "offset", "=", "offset", ".", "view", "(", "offset", ".", "size", "(", "0", ")", ",", "-", "1", ",", "2", ")", "\n", "\n", "return", "offset", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.AFC_head._init_offset_params": [[146, 153], ["get_hourglass.AFC_head.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_offset_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.HIH_head.__init__": [[155, 172], ["torch.Module.__init__", "get_hourglass.ConvBNReLu", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "math.log", "get_hourglass.Down_Block", "get_hourglass.ConvBNReLu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "HIH_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "target_c", "=", "config", ".", "target_o", "\n", "\n", "self", ".", "conv1", "=", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "target_c", ",", "1", ")", "\n", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", "\n", "downsample_stride", "=", "config", ".", "heatmap_size", "//", "config", ".", "offset_size", "\n", "down_step", "=", "int", "(", "math", ".", "log", "(", "downsample_stride", ",", "2", ")", ")", "\n", "self", ".", "down_list", "=", "[", "\n", "Down_Block", "(", "target_c", ",", "target_c", ",", "2", ")", "\n", "for", "d_i", "in", "range", "(", "down_step", "-", "1", ")", "\n", "]", "\n", "\n", "self", ".", "down_ops", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "down_list", ")", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "target_c", ",", "config", ".", "num_landmarks", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.HIH_head.forward": [[174, 181], ["get_hourglass.HIH_head.conv1", "get_hourglass.HIH_head.pool", "get_hourglass.HIH_head.down_ops", "get_hourglass.HIH_head.head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "pool", "=", "self", ".", "pool", "(", "conv1", ")", "\n", "feature", "=", "self", ".", "down_ops", "(", "pool", ")", "\n", "offset", "=", "self", ".", "head", "(", "feature", ")", "\n", "\n", "return", "offset", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.HIH_head._init_offset_params": [[182, 189], ["get_hourglass.HIH_head.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_offset_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.OD_head.__init__": [[191, 207], ["torch.Module.__init__", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "OD_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "target_c", "=", "config", ".", "target_o", "\n", "\n", "self", ".", "conv1", "=", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "target_c", ",", "1", ")", "\n", "self", ".", "conv3x3_list", "=", "[", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "3", ")", "\n", "for", "i", "in", "range", "(", "config", ".", "num_o", ")", "\n", "]", "\n", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "conv3x3_list", ")", "\n", "self", ".", "conv2", "=", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "1", ")", "\n", "self", ".", "shortcut", "=", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "target_c", ",", "1", ")", "if", "config", ".", "num_feature", "!=", "target_c", "else", "nn", ".", "Sequential", "(", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "target_c", ",", "target_c", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "target_c", ",", "2", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.OD_head.forward": [[209, 217], ["get_hourglass.OD_head.conv1", "get_hourglass.OD_head.convs", "get_hourglass.OD_head.conv2", "get_hourglass.OD_head.head", "get_hourglass.OD_head.shortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "convs", "=", "self", ".", "convs", "(", "conv1", ")", "\n", "conv2", "=", "self", ".", "conv2", "(", "convs", ")", "\n", "merge_feature", "=", "conv2", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "offset", "=", "self", ".", "head", "(", "merge_feature", ")", "\n", "\n", "return", "offset", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.OD_head._init_offset_params": [[218, 225], ["get_hourglass.OD_head.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_offset_params", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.VIT_head.__init__": [[228, 237], ["torch.Module.__init__", "timm.models.vision_transformer.VisionTransformer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.ConvBNReLu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "VIT_head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "vit", "=", "VisionTransformer", "(", "img_size", "=", "config", ".", "heatmap_size", ",", "in_chans", "=", "config", ".", "num_feature", ",", "\n", "patch_size", "=", "config", ".", "patch_size", ",", "embed_dim", "=", "config", ".", "embed_dim", ",", "depth", "=", "config", ".", "transformer_layer", ",", "num_heads", "=", "config", ".", "num_head", ",", "\n", "mlp_ratio", "=", "config", ".", "mlp_r", ",", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ")", "\n", "self", ".", "offset_lin", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "config", ".", "embed_dim", ",", "config", ".", "num_feature", ",", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "config", ".", "num_feature", ",", "config", ".", "num_landmarks", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.VIT_head.forward": [[238, 244], ["get_hourglass.VIT_head.vit.forward_wo_cls().transpose().contiguous().view", "get_hourglass.VIT_head.offset_lin", "get_hourglass.VIT_head.vit.forward_wo_cls().transpose().contiguous", "get_hourglass.VIT_head.vit.forward_wo_cls().transpose", "get_hourglass.VIT_head.vit.forward_wo_cls"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.forward_wo_cls"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "vit_feature", "=", "self", ".", "vit", ".", "forward_wo_cls", "(", "x", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "[", "x", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "embed_dim", ",", "x", ".", "shape", "[", "2", "]", "//", "self", ".", "config", ".", "patch_size", ",", "x", ".", "shape", "[", "3", "]", "//", "self", ".", "config", ".", "patch_size", "]", ")", "\n", "vit_offset", "=", "self", ".", "offset_lin", "(", "vit_feature", ")", "\n", "\n", "return", "vit_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.VIT_head._init_offset_params": [[245, 254], ["get_hourglass.VIT_head.offset_lin.modules", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_offset_params", "(", "self", ")", ":", "\n", "# vit exist init weight in its code,which don't need.", "\n", "        ", "offset_modules", "=", "self", ".", "offset_lin", ".", "modules", "(", ")", "\n", "for", "m", "in", "offset_modules", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass.__init__": [[256, 262], ["torch.Module.__init__", "get_hourglass.Hourglass._init_layers"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._init_layers"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "Hourglass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_n", "=", "config", ".", "num_layer", "\n", "self", ".", "_f", "=", "config", ".", "num_feature", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "_init_layers", "(", "self", ".", "_n", ",", "self", ".", "_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._init_layers": [[263, 272], ["setattr", "setattr", "setattr", "setattr", "get_hourglass.Residual", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "get_hourglass.Residual", "get_hourglass.Hourglass._init_layers", "get_hourglass.Residual", "get_hourglass.Residual", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._init_layers"], ["", "def", "_init_layers", "(", "self", ",", "n", ",", "f", ")", ":", "\n", "        ", "setattr", "(", "self", ",", "'res'", "+", "str", "(", "n", ")", "+", "'_1'", ",", "Residual", "(", "f", ",", "f", ")", ")", "\n", "setattr", "(", "self", ",", "'pool'", "+", "str", "(", "n", ")", "+", "'_1'", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", ")", "\n", "setattr", "(", "self", ",", "'res'", "+", "str", "(", "n", ")", "+", "'_2'", ",", "Residual", "(", "f", ",", "f", ")", ")", "\n", "if", "n", ">", "1", ":", "\n", "            ", "self", ".", "_init_layers", "(", "n", "-", "1", ",", "f", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "res_center", "=", "Residual", "(", "f", ",", "f", ")", "\n", "", "setattr", "(", "self", ",", "'res'", "+", "str", "(", "n", ")", "+", "'_3'", ",", "Residual", "(", "f", ",", "f", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._forward": [[273, 287], ["torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "eval", "eval", "eval", "get_hourglass.Hourglass._forward", "get_hourglass.Hourglass.res_center", "eval", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._forward"], ["", "def", "_forward", "(", "self", ",", "x", ",", "n", ",", "f", ")", ":", "\n", "        ", "up1", "=", "eval", "(", "'self.res'", "+", "str", "(", "n", ")", "+", "'_1'", ")", "(", "x", ")", "\n", "\n", "low1", "=", "eval", "(", "'self.pool'", "+", "str", "(", "n", ")", "+", "'_1'", ")", "(", "x", ")", "\n", "low1", "=", "eval", "(", "'self.res'", "+", "str", "(", "n", ")", "+", "'_2'", ")", "(", "low1", ")", "\n", "if", "n", ">", "1", ":", "\n", "            ", "low2", "=", "self", ".", "_forward", "(", "low1", ",", "n", "-", "1", ",", "f", ")", "\n", "", "else", ":", "\n", "            ", "low2", "=", "self", ".", "res_center", "(", "low1", ")", "\n", "", "low3", "=", "low2", "\n", "low3", "=", "eval", "(", "'self.'", "+", "'res'", "+", "str", "(", "n", ")", "+", "'_3'", ")", "(", "low3", ")", "\n", "up2", "=", "nn", ".", "functional", ".", "interpolate", "(", "low3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "up1", "+", "up2", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass.forward": [[288, 290], ["get_hourglass.Hourglass._forward"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.Hourglass._forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward", "(", "x", ",", "self", ".", "_n", ",", "self", ".", "_f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.__init__": [[293, 312], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "get_hourglass.StackedHourGlass._init_stacked_hourglass", "get_hourglass.StackedHourGlass.init_weights", "get_hourglass.ConvBNReLu", "get_hourglass.Residual", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "get_hourglass.Residual", "get_hourglass.Residual", "eval", "get_hourglass.StackedHourGlass.offset_func", "get_hourglass.StackedHourGlass.offset_head._init_offset_params", "config.head_type.upper", "hasattr", "config.head_type.upper"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass._init_stacked_hourglass", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.init_weights", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.VIT_head._init_offset_params"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "StackedHourGlass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "stride", "=", "config", ".", "input_size", "//", "config", ".", "heatmap_size", "\n", "\n", "self", ".", "pre_conv", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNReLu", "(", "3", ",", "config", ".", "num_feature", "//", "4", ",", "7", ",", "2", ")", ",", "\n", "Residual", "(", "config", ".", "num_feature", "//", "4", ",", "config", ".", "num_feature", "//", "2", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", ",", "\n", "Residual", "(", "config", ".", "num_feature", "//", "2", ",", "config", ".", "num_feature", "//", "2", ")", ",", "\n", "Residual", "(", "config", ".", "num_feature", "//", "2", ",", "config", ".", "num_feature", ")", ")", "\n", "\n", "self", ".", "_init_stacked_hourglass", "(", "config", ")", "\n", "self", ".", "init_weights", "(", "config", ".", "pretrained_path", "if", "config", ".", "pretrained", "and", "hasattr", "(", "config", ",", "\"pretrained_path\"", ")", "else", "''", ")", "\n", "\n", "self", ".", "offset_func", "=", "eval", "(", "config", ".", "head_type", ".", "upper", "(", ")", "+", "'_head'", ")", "if", "config", ".", "head_type", ".", "upper", "(", ")", "!=", "'WOO'", "else", "None", "\n", "self", ".", "offset_head", "=", "self", ".", "offset_func", "(", "config", ")", "if", "self", ".", "offset_func", "is", "not", "None", "else", "None", "\n", "if", "self", ".", "offset_func", "is", "not", "None", ":", "\n", "            ", "self", ".", "offset_head", ".", "_init_offset_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass._init_stacked_hourglass": [[314, 331], ["range", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "get_hourglass.Hourglass", "get_hourglass.Residual", "get_hourglass.ConvBNReLu", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "get_hourglass.ConvBNReLu", "get_hourglass.ConvBNReLu", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "", "def", "_init_stacked_hourglass", "(", "self", ",", "config", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "config", ".", "num_stack", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", ",", "Hourglass", "(", "config", ")", ")", "\n", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", "+", "'_res1'", ",", "\n", "Residual", "(", "config", ".", "num_feature", ",", "config", ".", "num_feature", ")", ")", "\n", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", "+", "'_lin1'", ",", "\n", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "config", ".", "num_feature", ",", "1", ")", ")", "\n", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", "+", "'_conv_pred'", ",", "\n", "nn", ".", "Conv2d", "(", "config", ".", "num_feature", ",", "config", ".", "num_landmarks", ",", "1", ")", ")", "\n", "# if self.offset_func is not None:", "\n", "#     setattr(self, 'offset_' + str(i),", "\n", "#         self.offset_func(config)) ", "\n", "\n", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", "+", "'_conv1'", ",", "\n", "ConvBNReLu", "(", "config", ".", "num_feature", ",", "config", ".", "num_feature", ",", "1", ")", ")", "\n", "setattr", "(", "self", ",", "'hg'", "+", "str", "(", "i", ")", "+", "'_conv2'", ",", "\n", "ConvBNReLu", "(", "config", ".", "num_landmarks", ",", "config", ".", "num_feature", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.forward": [[332, 365], ["get_hourglass.StackedHourGlass.pre_conv", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "get_hourglass.StackedHourGlass.offset_head", "get_hourglass.StackedHourGlass.unsqueeze", "eval", "eval", "eval", "eval", "eval", "eval", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "pre_conv", "(", "x", ")", "\n", "out_preds", "=", "[", "]", "\n", "# out_offsets = []", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "config", ".", "num_stack", ")", ":", "\n", "            ", "hg", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", ")", "(", "x", ")", "\n", "ll", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", "+", "'_res1'", ")", "(", "hg", ")", "\n", "feature", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", "+", "'_lin1'", ")", "(", "ll", ")", "\n", "preds", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", "+", "'_conv_pred'", ")", "(", "feature", ")", "\n", "out_preds", ".", "append", "(", "preds", ")", "\n", "\n", "# if self.offset_func is not None:", "\n", "#     offset = eval('self.offset_' + str(i))(x,hg,preds)", "\n", "#     out_offsets.append(offset)", "\n", "\n", "# if i < self.config.num_stack - 1:", "\n", "merge_feature", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", "+", "'_conv1'", ")", "(", "feature", ")", "\n", "merge_preds", "=", "eval", "(", "'self.hg'", "+", "str", "(", "i", ")", "+", "'_conv2'", ")", "(", "preds", ")", "\n", "x", "=", "x", "+", "merge_feature", "+", "merge_preds", "\n", "\n", "", "if", "self", ".", "offset_func", "is", "not", "None", ":", "\n", "            ", "offset", "=", "self", ".", "offset_head", "(", "x", ")", "\n", "\n", "", "out_preds", "=", "torch", ".", "stack", "(", "out_preds", ",", "dim", "=", "1", ")", "\n", "# out_preds size: n_batch,n_stack,n_landmark,heatmap_size,heatmap_size", "\n", "\n", "if", "self", ".", "offset_func", "is", "not", "None", ":", "\n", "            ", "out_offsets", "=", "offset", ".", "unsqueeze", "(", "1", ")", "# torch.stack(out_offsets,dim=1)", "\n", "", "else", ":", "\n", "            ", "out_offsets", "=", "None", "\n", "\n", "", "return", "out_preds", ",", "out_offsets", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.inference": [[366, 376], ["get_hourglass.StackedHourGlass.forward"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.forward"], ["", "def", "inference", "(", "self", ",", "x", ",", "inference_indice", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n            inference_indice: the index of output seconde dimension, choose which one tensor of output.\n            default is -1, the last one.\n        \"\"\"", "\n", "output", ",", "offset", "=", "self", ".", "forward", "(", "x", ")", "\n", "last_offset", "=", "offset", "[", ":", ",", "-", "1", "]", "if", "offset", "is", "not", "None", "else", "None", "\n", "last_output", "=", "output", "[", ":", ",", "inference_indice", "]", "\n", "\n", "return", "last_output", ",", "last_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.StackedHourGlass.init_weights": [[378, 403], ["get_hourglass.StackedHourGlass.modules", "print", "isinstance", "os.path.isfile", "os.path.islink", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "get_hourglass.StackedHourGlass.state_dict", "get_hourglass.StackedHourGlass.update", "get_hourglass.StackedHourGlass.load_state_dict", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "get_hourglass.StackedHourGlass.keys"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.AverageMeter.update"], ["", "def", "init_weights", "(", "self", ",", "pretrained", "=", "''", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "Conv2d", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "0.001", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "print", "(", "\"Finish init hourglass weights\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "pretrained", ")", "or", "os", ".", "path", ".", "islink", "(", "pretrained", ")", ":", "\n", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained", ")", "\n", "if", "not", "isinstance", "(", "pretrained_dict", ",", "collections", ".", "OrderedDict", ")", ":", "\n", "# suppose state_dict in pretrained_dict ", "\n", "                ", "if", "isinstance", "(", "pretrained_dict", "[", "'state_dict'", "]", ",", "collections", ".", "OrderedDict", ")", ":", "\n", "                    ", "pretrained_dict", "=", "pretrained_dict", "[", "'state_dict'", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "(", "\"cannot find the state_dict in {}\"", ".", "format", "(", "pretrained", ")", ")", "\n", "\n", "", "", "print", "(", "'=> loading pretrained model {}'", ".", "format", "(", "pretrained", ")", ")", "\n", "model_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "in", "model_dict", ".", "keys", "(", ")", "and", "model_dict", "[", "k", "]", ".", "shape", "==", "v", ".", "shape", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "self", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.attention_flops_counter_hook": [[15, 23], ["int"], "function", ["None"], ["def", "attention_flops_counter_hook", "(", "module", ",", "input", ",", "output", ")", ":", "\n", "    ", "input", "=", "input", "[", "0", "]", "\n", "B", ",", "N", ",", "C", "=", "input", ".", "shape", "\n", "qkv_linear_ops", "=", "C", "*", "3", "*", "B", "*", "N", "*", "C", "\n", "attention_ops", "=", "B", "*", "N", "*", "N", "*", "C", "*", "2", "\n", "proj_ops", "=", "B", "*", "N", "*", "C", "*", "C", "\n", "total_ops", "=", "qkv_linear_ops", "+", "proj_ops", "+", "attention_ops", "\n", "module", ".", "__flops__", "+=", "int", "(", "total_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.count_attention": [[24, 32], ["torch.DoubleTensor", "torch.DoubleTensor", "torch.DoubleTensor", "torch.DoubleTensor", "int"], "function", ["None"], ["", "def", "count_attention", "(", "m", ":", "Attention", ",", "x", ":", "(", "torch", ".", "Tensor", ",", ")", ",", "y", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "x", "=", "x", "[", "0", "]", "\n", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv_linear_ops", "=", "C", "*", "3", "*", "B", "*", "N", "*", "C", "\n", "attention_ops", "=", "B", "*", "N", "*", "N", "*", "C", "*", "2", "\n", "proj_ops", "=", "B", "*", "N", "*", "C", "*", "C", "\n", "total_ops", "=", "qkv_linear_ops", "+", "proj_ops", "+", "attention_ops", "\n", "m", ".", "total_ops", "+=", "torch", ".", "DoubleTensor", "(", "[", "int", "(", "total_ops", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.model.get_hourglass.forward_wo_cls": [[33, 47], ["get_hourglass..patch_embed", "get_hourglass..pos_drop", "get_hourglass..norm", "blk"], "function", ["None"], ["", "def", "forward_wo_cls", "(", "self", ",", "x", ")", ":", "\n", "    ", "B", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "self", ".", "patch_embed", "(", "x", ")", "\n", "\n", "# cls_tokens = self.cls_token.expand(B, -1, -1)  # stole cls_tokens impl from Phil Wang, thanks", "\n", "# x = torch.cat((cls_tokens, x), dim=1)", "\n", "x", "=", "x", "+", "self", ".", "pos_embed", "[", ":", ",", "1", ":", "]", "\n", "x", "=", "self", ".", "pos_drop", "(", "x", ")", "\n", "\n", "for", "blk", "in", "self", ".", "blocks", ":", "\n", "        ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.experiments.Basic_config.Basic_Config.__init__": [[2, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "head_type", "=", "''", "\n", "self", ".", "data_type", "=", "''", "\n", "self", ".", "data_folder", "=", "'train'", "\n", "self", ".", "test_folder", "=", "'test'", "\n", "self", ".", "batch_size", "=", "16", "\n", "self", ".", "num_workers", "=", "8", "\n", "self", ".", "init_lr", "=", "1e-4", "\n", "self", ".", "offset_lr", "=", "None", "\n", "self", ".", "num_epochs", "=", "60", "\n", "self", ".", "decay_steps", "=", "[", "30", ",", "50", "]", "\n", "self", ".", "val_epoch", "=", "[", "[", "30", ",", "10", "]", ",", "[", "40", ",", "5", "]", ",", "[", "100", ",", "1", "]", "]", "# \u524d30epoch \u6bcf10\u4e2a\u6d4b\u4e00\u6b21\uff0c\u524d40epoch\u6bcf5\u6b21\u6d4b\u4e00\u6b21\uff0c\u524d100epoch\u6bcf1\u6b21\u6d4b\u4e00\u6b21", "\n", "self", ".", "input_size", "=", "256", "\n", "self", ".", "backbone", "=", "''", "\n", "self", ".", "heatmap_size", "=", "64", "\n", "self", ".", "heatmap_method", "=", "\"GAUSS\"", "\n", "self", ".", "heatmap_sigma", "=", "1.5", "\n", "self", ".", "pretrained", "=", "True", "\n", "self", ".", "criterion_heatmap", "=", "'l2'", "\n", "self", ".", "num_landmarks", "=", "0", "\n", "self", ".", "use_gpu", "=", "True", "\n", "self", ".", "gpu_id", "=", "0", "\n", "self", ".", "inference_indice", "=", "-", "1", "\n", "self", ".", "mlp_r", "=", "2", "\n", "self", ".", "per_stack_heatmap", "=", "1", "# \u6bcfx\u4e2astack\u90fd\u8f93\u51fa\u4e00\u6b21heatmap,\u9ed8\u8ba4\u4e3a1", "\n", "", "def", "_print", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.experiments.Basic_config.Basic_Config._print": [[27, 29], ["Basic_config.Basic_Config.__dict__.items"], "methods", ["None"], ["", "def", "_print", "(", "self", ")", ":", "\n", "        ", "return", "'\\n'", "+", "'\\n'", ".", "join", "(", "[", "'%s:%s'", "%", "item", "for", "item", "in", "self", ".", "__dict__", ".", "items", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__": [[3, 34], ["experiments.Basic_config.Basic_Config.__init__"], "methods", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.Data_WFLW.HIHC_64x8_hg_l2.Config.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Config", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "head_type", "=", "'hih'", "\n", "self", ".", "data_type", "=", "'WFLW'", "\n", "self", ".", "data_folder", "=", "'train'", "\n", "self", ".", "test_folder", "=", "'test'", "\n", "self", ".", "batch_size", "=", "16", "\n", "self", ".", "num_workers", "=", "4", "\n", "self", ".", "init_lr", "=", "5e-6", "\n", "self", ".", "num_epochs", "=", "60", "\n", "self", ".", "decay_steps", "=", "[", "30", ",", "50", "]", "\n", "self", ".", "val_epoch", "=", "[", "[", "40", ",", "5", "]", ",", "[", "70", ",", "1", "]", "]", "\n", "self", ".", "input_size", "=", "256", "\n", "self", ".", "backbone", "=", "'hourglass'", "\n", "self", ".", "heatmap_size", "=", "64", "\n", "self", ".", "num_stack", "=", "4", "\n", "self", ".", "num_layer", "=", "4", "\n", "self", ".", "num_feature", "=", "256", "\n", "self", ".", "offset_size", "=", "8", "\n", "self", ".", "target_o", "=", "384", "\n", "self", ".", "heatmap_method", "=", "\"GAUSS\"", "\n", "self", ".", "heatmap_sigma", "=", "1.5", "\n", "self", ".", "offset_method", "=", "\"GAUSS\"", "\n", "self", ".", "offset_sigma", "=", "1.0", "\n", "self", ".", "criterion_heatmap", "=", "'l2'", "\n", "self", ".", "criterion_offset", "=", "'cls'", "\n", "self", ".", "loss_heatmap_weight", "=", "1", "\n", "self", ".", "loss_offset_weight", "=", "0.05", "\n", "self", ".", "num_landmarks", "=", "98", "\n", "self", ".", "use_gpu", "=", "True", "\n", "self", ".", "gpu_id", "=", "0", "", "", "", ""]], "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.tools.test_all.main_test_all": [[40, 93], ["eval", "lib.utils.check.create_logger", "lib.utils.check.create_logger.info", "lib.utils.check.create_logger.info", "str", "lib.utils.model.get_model", "lib.utils.loss.get_loss", "model.to.to", "criterion.to", "torchvision.transforms.Compose", "config._print", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "offset_criterion.to", "setattr", "lib.dataset.dataset.dataset_heads", "torch.utils.data.DataLoader", "lib.utils.process.inference_model", "lib.utils.check.create_logger.info", "config.data_type.upper", "torch.load", "torch.load", "torch.load", "model.to.load_state_dict", "lib.utils.check.create_logger.info", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "lib.utils.check.create_logger.info", "exit"], "function", ["home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.log.create_logger", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.model.get_model", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.loss.get_loss", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.experiments.Basic_config.Basic_Config._print", "home.repos.pwc.inspect_result.starhiking_HeatmapInHeatmap.utils.process.inference_model"], ["def", "main_test_all", "(", "config", ")", ":", "\n", "\n", "    ", "assert", "config", ".", "resume_checkpoint", ",", "\"Not find the checkpoint\"", "\n", "labels", "=", "eval", "(", "\"label_\"", "+", "config", ".", "data_type", ".", "upper", "(", ")", ")", "\n", "logger", "=", "create_logger", "(", "config", ",", "Is_test", "=", "True", ")", "\n", "logger", ".", "info", "(", "\"Test all subsets for {}\"", ".", "format", "(", "config", ".", "data_type", ")", ")", "\n", "logger", ".", "info", "(", "config", ".", "_print", "(", ")", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "config", ".", "gpu_id", ")", "\n", "model", "=", "get_model", "(", "config", ")", "\n", "criterion", ",", "offset_criterion", "=", "get_loss", "(", "config", ")", "\n", "if", "config", ".", "use_gpu", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "", "else", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "criterion", ".", "to", "(", "device", ")", "\n", "if", "offset_criterion", "is", "not", "None", ":", "\n", "        ", "offset_criterion", ".", "to", "(", "device", ")", "\n", "\n", "", "if", "config", ".", "resume_checkpoint", ":", "\n", "        ", "try", ":", "\n", "            ", "model_checkpoint", "=", "torch", ".", "load", "(", "config", ".", "resume_checkpoint", ")", "\n", "model", ".", "load_state_dict", "(", "model_checkpoint", "[", "'state_dict'", "]", ",", "strict", "=", "True", ")", "\n", "best_nme", "=", "model_checkpoint", "[", "'best_nme'", "]", "\n", "logger", ".", "info", "(", "\"Restore from {}\"", ".", "format", "(", "config", ".", "resume_checkpoint", ")", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "info", "(", "\"Restore failed.\"", ")", "\n", "exit", "(", ")", "\n", "\n", "", "", "val_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "\n", "for", "label", "in", "labels", ":", "\n", "        ", "setattr", "(", "config", ",", "\"test_folder\"", ",", "label", ")", "\n", "\n", "val_data", "=", "dataset_heads", "(", "config", ",", "read_mem", "=", "False", ",", "Is_train", "=", "False", ",", "transform", "=", "val_transform", ")", "\n", "\n", "val_loader", "=", "data", ".", "DataLoader", "(", "\n", "val_data", ",", "\n", "batch_size", "=", "16", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "4", ",", "\n", "drop_last", "=", "False", ",", "\n", "pin_memory", "=", "False", "\n", ")", "\n", "\n", "val_loss", ",", "val_nme", "=", "inference_model", "(", "config", ",", "device", ",", "model", ",", "val_loader", ",", "criterion", ",", "offset_criterion", ")", "\n", "logger", ".", "info", "(", "\"{}: [nme: {}] [loss: {}]\"", ".", "format", "(", "label", ",", "val_nme", ",", "val_loss", ")", ")", "\n", "\n"]]}