{"home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_color": [[9, 13], ["filename.replace.replace", "torchvision.io.read_image"], "function", ["None"], ["def", "load_color", "(", "filename", ":", "str", ",", "**", "kwargs", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "return", "{", "'color'", ":", "torchvision", ".", "io", ".", "read_image", "(", "filename", ")", "/", "255.0", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_depth": [[14, 27], ["filename.replace.replace().replace", "torch.from_numpy().unsqueeze", "filename.replace.replace", "depth_filename.replace.replace", "filename.replace.replace", "depth_filename.replace.split", "torch.from_numpy", "cv2.imread"], "function", ["None"], ["", "def", "load_depth", "(", "filename", ":", "str", ",", "max_depth", ":", "float", "=", "8.0", ",", "**", "kwargs", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "depth_filename", "=", "filename", ".", "replace", "(", "'emission'", ",", "'depth'", ")", ".", "replace", "(", "'.png'", ",", "'.exr'", ")", "\n", "if", "'filmic'", "in", "depth_filename", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "3", "]", ":", "\n", "        ", "depth_filename", "=", "depth_filename", ".", "replace", "(", "'_filmic'", ",", "''", ")", "\n", "", "depth", "=", "torch", ".", "from_numpy", "(", "\n", "cv2", ".", "imread", "(", "depth_filename", ",", "cv2", ".", "IMREAD_ANYDEPTH", ")", "\n", ")", ".", "unsqueeze", "(", "0", ")", "\n", "#NOTE: add a micro meter to allow for thresholding to extact the valid mask", "\n", "depth", "[", "depth", ">", "max_depth", "]", "=", "max_depth", "+", "1e-6", "\n", "return", "{", "\n", "'depth'", ":", "depth", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_normal": [[29, 39], ["filename.replace.replace().replace", "filename.replace.replace", "normal_filename.replace.replace", "torch.from_numpy", "filename.replace.replace", "normal_filename.replace.split", "cv2.imread().transpose", "cv2.imread"], "function", ["None"], ["", "def", "load_normal", "(", "filename", ":", "str", ",", "**", "kwargs", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "normal_filename", "=", "filename", ".", "replace", "(", "'emission'", ",", "'normal_map'", ")", ".", "replace", "(", "'.png'", ",", "'.exr'", ")", "\n", "if", "'filmic'", "in", "normal_filename", ".", "split", "(", "os", ".", "sep", ")", "[", "-", "3", "]", ":", "\n", "        ", "normal_filename", "=", "normal_filename", ".", "replace", "(", "'_filmic'", ",", "''", ")", "\n", "", "return", "{", "\n", "'normal'", ":", "torch", ".", "from_numpy", "(", "cv2", ".", "imread", "(", "normal_filename", ",", "\n", "cv2", ".", "IMREAD_ANYDEPTH", "|", "cv2", ".", "IMREAD_ANYCOLOR", "\n", ")", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_semantic": [[41, 48], ["filename.replace.replace", "torch.from_numpy().long", "torch.from_numpy", "cv2.imread", "filename.replace.replace().replace", "filename.replace.replace"], "function", ["None"], ["", "def", "load_semantic", "(", "filename", ":", "str", ",", "**", "kwargs", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "return", "{", "\n", "'semantic'", ":", "torch", ".", "from_numpy", "(", "cv2", ".", "imread", "(", "\n", "filename", ".", "replace", "(", "'emission'", ",", "'semantic_map'", ")", ".", "replace", "(", "'.png'", ",", "'.exr'", ")", "\n", ")", ")", ".", "long", "(", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_structure": [[50, 56], ["filename.replace.replace", "torch.from_numpy().long", "torch.from_numpy", "cv2.imread", "filename.replace.replace().replace", "filename.replace.replace"], "function", ["None"], ["", "def", "load_structure", "(", "filename", ":", "str", ",", "**", "kwargs", ")", "->", "torch", ".", "Tensor", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "return", "{", "\n", "'structure'", ":", "torch", ".", "from_numpy", "(", "cv2", ".", "imread", "(", "\n", "filename", ".", "replace", "(", "'emission'", ",", "'layout'", ")", ".", "replace", "(", "'.png'", ",", "'.exr'", ")", "\n", ")", ")", ".", "long", "(", ")", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.loaders.load_layout": [[59, 74], ["torch.from_numpy", "torch.from_numpy", "filename.replace.replace", "numpy.load"], "function", ["None"], ["", "def", "load_layout", "(", "filename", ":", "str", ",", "**", "kwargs", ")", "->", "typing", ".", "Mapping", "[", "str", ",", "torch", ".", "Tensor", "]", ":", "\n", "    ", "if", "'position'", "in", "kwargs", ":", "\n", "        ", "filename", "=", "filename", ".", "replace", "(", "'center'", ",", "kwargs", "[", "'position'", "]", ")", "\n", "", "ret", "=", "{", "}", "\n", "with", "numpy", ".", "load", "(", "filename", ")", "as", "f", ":", "\n", "        ", "layout", "=", "f", "[", "'arr_0.npy'", "]", "\n", "", "ret", "[", "\"top_layout\"", "]", "=", "torch", ".", "from_numpy", "(", "layout", "[", "0", ",", "...", "]", ")", "\n", "ret", "[", "\"top_weights\"", "]", "=", "(", "ret", "[", "\"top_layout\"", "]", ">", "0", ")", ".", "float", "(", ")", "\n", "ret", "[", "\"top_layout\"", "]", "=", "(", "128.", "-", "ret", "[", "\"top_layout\"", "]", ")", "/", "128.", "\n", "ret", "[", "\"bottom_layout\"", "]", "=", "torch", ".", "from_numpy", "(", "layout", "[", "1", ",", "...", "]", ")", "\n", "ret", "[", "\"bottom_weights\"", "]", "=", "(", "ret", "[", "\"bottom_layout\"", "]", ">", "0", ")", ".", "float", "(", ")", "\n", "ret", "[", "\"bottom_layout\"", "]", "=", "(", "ret", "[", "\"bottom_layout\"", "]", "-", "128.", ")", "/", "128.", "\n", "ret", "[", "\"top_layout\"", "]", "*=", "ret", "[", "\"top_weights\"", "]", "\n", "ret", "[", "\"bottom_layout\"", "]", "*=", "ret", "[", "\"bottom_weights\"", "]", "\n", "return", "ret", "\n", "", ""]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D.__init__": [[61, 74], ["__init__.Pano3D._get_folder", "__init__.Pano3D._get_filenames", "functools.partial"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D._get_folder", "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D._get_filenames"], ["def", "__init__", "(", "self", ",", "\n", "root", ":", "typing", ".", "Union", "[", "str", ",", "pathlib", ".", "Path", "]", ",", "\n", "part", ":", "str", ",", "\n", "split", ":", "typing", ".", "Union", "[", "str", ",", "pathlib", ".", "Path", "]", ",", "\n", "types", ":", "typing", ".", "Sequence", "[", "str", "]", ",", "\n", "max_depth", ":", "float", "=", "8.0", ",", "\n", ")", ":", "\n", "        ", "folder", "=", "self", ".", "_get_folder", "(", "root", ",", "part", ")", "\n", "self", ".", "filenames", "=", "self", ".", "_get_filenames", "(", "folder", ",", "split", ")", "\n", "self", ".", "loaders", "=", "[", "\n", "functools", ".", "partial", "(", "Pano3D", ".", "__LOADERS__", "[", "type", "]", ",", "\n", "max_depth", "=", "max_depth", "\n", ")", "for", "type", "in", "types", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D._get_folder": [[76, 91], ["os.path.join", "os.path.exists", "log.error", "sys.exit", "os.path.exists", "log.error", "sys.exit"], "methods", ["None"], ["", "def", "_get_folder", "(", "self", ",", "root", ":", "typing", ".", "Union", "[", "str", ",", "pathlib", ".", "Path", "]", ",", "part", ":", "str", ")", "->", "str", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "root", ")", ":", "\n", "            ", "log", ".", "error", "(", "(", "\n", "f\"Invalid Pano3D root folder ({root}), \"", "\n", "\"please use the folder where the Zenodo archives have been extracted to.\"", "\n", ")", ")", "\n", "sys", ".", "exit", "(", "2", ")", "\n", "", "part_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "part", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "part_path", ")", ":", "\n", "            ", "log", ".", "error", "(", "(", "\n", "\"Invalid Pano3D part folder, \"", "\n", "f\"please use the correct part folder's name inside the root directory ({root}).\"", "\n", ")", ")", "\n", "sys", ".", "exit", "(", "2", ")", "\n", "", "return", "part_path", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D._get_filenames": [[92, 107], ["yaml.load.items", "os.path.exists", "log.error", "sys.exit", "open", "yaml.load", "filenames.append", "os.path.join"], "methods", ["None"], ["", "def", "_get_filenames", "(", "self", ",", "\n", "folder", ":", "str", ",", "split", ":", "typing", ".", "Union", "[", "str", ",", "pathlib", ".", "Path", "]", "\n", ")", "->", "typing", ".", "Sequence", "[", "typing", ".", "Union", "[", "str", ",", "pathlib", ".", "Path", "]", "]", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "split", ")", ":", "\n", "            ", "log", ".", "error", "(", "(", "\n", "f\"Pano3D split file ({split}) does not exist. \"", "\n", ")", ")", "\n", "sys", ".", "exit", "(", "2", ")", "\n", "", "with", "open", "(", "split", ")", "as", "f", ":", "\n", "            ", "data_filenames", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "filenames", "=", "[", "]", "\n", "for", "building", ",", "renders", "in", "data_filenames", ".", "items", "(", ")", ":", "\n", "            ", "for", "render", "in", "renders", ":", "\n", "                ", "filenames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "building", ",", "render", ")", ")", "\n", "", "", "return", "filenames", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D.__len__": [[108, 110], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.dataset.__init__.Pano3D.__getitem__": [[111, 117], ["toolz.merge", "loader"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ":", "int", ")", "->", "typing", ".", "Mapping", "[", "str", ",", "torch", ".", "Tensor", "]", ":", "\n", "        ", "out", "=", "{", "}", "\n", "filename", "=", "self", ".", "filenames", "[", "index", "]", "\n", "for", "loader", "in", "self", ".", "loaders", ":", "\n", "            ", "out", "=", "toolz", ".", "merge", "(", "out", ",", "loader", "(", "filename", ")", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.DbeCom.__init__": [[6, 17], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "max_dist_thr", ":", "float", "=", "10.0", ",", "# Threshold for local neighborhood", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Completeness: sum of undirected chamfer distances of predicted and gt edges\n        This measure takes into account missing edges in the predicted depth image.\n        reference: https://openaccess.thecvf.com/content_ECCVW_2018/papers/11131/Koch_Evaluation_of_CNN-based_Single-Image_Depth_Estimation_Methods_ECCVW_2018_paper.pdf\n\n        \"\"\"", "\n", "super", "(", "DbeCom", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_dist_thr", "=", "max_dist_thr", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.DbeCom.forward": [[18, 42], ["scipy.ndimage.distance_transform_edt", "scipy.ndimage.distance_transform_edt", "pred.cpu", "E_fin_est_filt.sum", "torch.tensor", "gt.cpu", "pred.cpu", "torch.from_numpy", "pred.cpu", "torch.from_numpy", "gt.cpu", "torch.sum", "torch.sum", "torch.sum", "pred.cpu", "gt.cpu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "#gt edges", "\n", "pred", ":", "torch", ".", "Tensor", ",", "#pred edges", "\n", ")", ":", "\n", "# compute distance transform for chamfer metric", "\n", "        ", "D_gt", "=", "ndimage", ".", "distance_transform_edt", "(", "1", "-", "gt", ".", "cpu", "(", ")", ")", "\n", "D_est", "=", "ndimage", ".", "distance_transform_edt", "(", "1", "-", "pred", ".", "cpu", "(", ")", ")", "\n", "\n", "mask_D_gt", "=", "D_gt", "<", "self", ".", "max_dist_thr", "# truncate distance transform map", "\n", "\n", "E_fin_est_filt", "=", "pred", ".", "cpu", "(", ")", "*", "mask_D_gt", "# compute shortest distance for all predicted edges", "\n", "\n", "if", "E_fin_est_filt", ".", "sum", "(", ")", "==", "0", ":", "# assign MAX value if no edges could be detected in prediction", "\n", "            ", "dbe_com", "=", "torch", ".", "tensor", "(", "self", ".", "max_dist_thr", ")", "\n", "", "else", ":", "\n", "# completeness: sum of undirected chamfer distances of predicted and gt edges", "\n", "            ", "ch1", "=", "torch", ".", "from_numpy", "(", "D_gt", ")", "*", "pred", ".", "cpu", "(", ")", "\n", "ch1", "[", "ch1", ">", "self", ".", "max_dist_thr", "]", "=", "self", ".", "max_dist_thr", "#truncate distances", "\n", "ch2", "=", "torch", ".", "from_numpy", "(", "D_est", ")", "*", "gt", ".", "cpu", "(", ")", "\n", "ch2", "[", "ch2", ">", "self", ".", "max_dist_thr", "]", "=", "self", ".", "max_dist_thr", "# truncate distances", "\n", "res", "=", "ch1", "+", "ch2", "# summed distances", "\n", "dbe_com", "=", "torch", ".", "sum", "(", "res", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "/", "(", "torch", ".", "sum", "(", "pred", ".", "cpu", "(", ")", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "+", "torch", ".", "sum", "(", "gt", ".", "cpu", "(", ")", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "dbe_com", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.DbeAcc.__init__": [[44, 55], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "max_dist_thr", ":", "float", "=", "10.0", ",", "# Threshold for local neighborhood", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Accuracy metric: directed chamfer distance of predicted edges towards gt edges\n        \n        reference: https://openaccess.thecvf.com/content_ECCVW_2018/papers/11131/Koch_Evaluation_of_CNN-based_Single-Image_Depth_Estimation_Methods_ECCVW_2018_paper.pdf\n\n        \"\"\"", "\n", "super", "(", "DbeAcc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_dist_thr", "=", "max_dist_thr", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.DbeAcc.forward": [[56, 75], ["scipy.ndimage.distance_transform_edt", "pred.cpu", "E_fin_est_filt.sum", "torch.tensor", "gt.cpu", "torch.sum", "torch.sum().mean", "torch.from_numpy", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", ")", ":", "\n", "# compute distance transform for chamfer metric", "\n", "        ", "D_gt", "=", "ndimage", ".", "distance_transform_edt", "(", "1", "-", "gt", ".", "cpu", "(", ")", ")", "\n", "#D_est = ndimage.distance_transform_edt(1-pred.cpu())", "\n", "\n", "mask_D_gt", "=", "D_gt", "<", "self", ".", "max_dist_thr", "# truncate distance transform map", "\n", "\n", "E_fin_est_filt", "=", "pred", ".", "cpu", "(", ")", "*", "mask_D_gt", "# compute shortest distance for all predicted edges", "\n", "\n", "if", "E_fin_est_filt", ".", "sum", "(", ")", "==", "0", ":", "# assign MAX value if no edges could be detected in prediction", "\n", "            ", "dbe_acc", "=", "torch", ".", "tensor", "(", "self", ".", "max_dist_thr", ")", "\n", "", "else", ":", "\n", "#accuracy: directed chamfer distance of predicted edges towards gt edges per batch", "\n", "            ", "dbe_acc", "=", "torch", ".", "sum", "(", "torch", ".", "from_numpy", "(", "D_gt", ")", "*", "E_fin_est_filt", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", "/", "torch", ".", "sum", "(", "E_fin_est_filt", ",", "dim", "=", "(", "1", ",", "2", ",", "3", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "dbe_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.EdgePre.__init__": [[77, 85], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Edge precision metric.\n        reference: https://arxiv.org/pdf/1803.08673.pdf\n        \"\"\"", "\n", "super", "(", "EdgePre", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.EdgePre.forward": [[86, 106], ["torch.zeros", "range", "torch.zeros.mean", "torch.where().sum", "torch.where().sum", "torch.where().sum", "torch.where().sum", "torch.where", "torch.where", "torch.where", "torch.where"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", ")", ":", "\n", "\n", "        ", "b", ",", "_", ",", "__", ",", "___", "=", "gt", ".", "shape", "\n", "prec_", "=", "torch", ".", "zeros", "(", "b", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "            ", "if", "(", "torch", ".", "where", "(", "gt", "[", "i", "]", "==", "1", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "==", "0", ")", ":", "\n", "#no gt edges", "\n", "                ", "prec_", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "false_positives", "=", "torch", ".", "where", "(", "(", "gt", "[", "i", "]", "!=", "1", ")", "&", "(", "pred", "[", "i", "]", "==", "1", ")", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "\n", "true_positives", "=", "torch", ".", "where", "(", "(", "gt", "[", "i", "]", "==", "1", ")", "&", "(", "pred", "[", "i", "]", "==", "1", ")", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "\n", "if", "torch", ".", "where", "(", "pred", "[", "i", "]", "==", "1", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "==", "0", ":", "\n", "                    ", "prec_", "[", "i", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "prec_", "[", "i", "]", "=", "true_positives", "/", "(", "true_positives", "+", "false_positives", ")", "# , or the accuracy of minority class predictions", "\n", "\n", "", "", "", "return", "prec_", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.EdgeRec.__init__": [[108, 116], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Edge recall metric.\n        reference: https://arxiv.org/pdf/1803.08673.pdf\n        \"\"\"", "\n", "super", "(", "EdgeRec", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.boundary.EdgeRec.forward": [[117, 136], ["torch.zeros", "range", "torch.zeros.mean", "torch.where().sum", "torch.where().sum", "torch.where().sum", "torch.where().sum", "torch.where", "torch.where", "torch.where", "torch.where"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", ")", ":", "\n", "\n", "#if image has no edges", "\n", "        ", "b", ",", "_", ",", "__", ",", "___", "=", "gt", ".", "shape", "\n", "recall_", "=", "torch", ".", "zeros", "(", "b", ")", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "            ", "if", "torch", ".", "where", "(", "gt", "[", "i", "]", "==", "1", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "==", "0", ":", "\n", "#no gt edges", "\n", "                ", "recall_", "[", "i", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "false_positives", "=", "torch", ".", "where", "(", "(", "gt", "[", "i", "]", "!=", "1", ")", "&", "(", "pred", "[", "i", "]", "==", "1", ")", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "\n", "true_positives", "=", "torch", ".", "where", "(", "(", "gt", "[", "i", "]", "==", "1", ")", "&", "(", "pred", "[", "i", "]", "==", "1", ")", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "\n", "false_negatives", "=", "torch", ".", "where", "(", "(", "gt", "[", "i", "]", "!=", "0", ")", "&", "(", "pred", "[", "i", "]", "==", "0", ")", ",", "1", ",", "0", ")", ".", "sum", "(", ")", "\n", "recall_", "[", "i", "]", "=", "true_positives", "/", "(", "true_positives", "+", "false_negatives", ")", "#low recall a lot of missed edges -- our model needs to catch this better;", "\n", "\n", "", "", "return", "recall_", ".", "mean", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.Delta.__init__": [[7, 12], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "threshold", ":", "float", "=", "1.25", "\n", ")", ":", "\n", "        ", "super", "(", "Delta", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "threshold", "=", "threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.Delta.forward": [[13, 25], ["torch.mean", "torch.mean", "torch.max", "torch.sum", "torch.sum", "direct._dim_list", "direct._dim_list"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", "weights", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "#NOTE: no mean", "\n", "        ", "errors", "=", "(", "torch", ".", "max", "(", "(", "gt", "/", "pred", ")", ",", "(", "pred", "/", "gt", ")", ")", "<", "self", ".", "threshold", ")", ".", "float", "(", ")", "\n", "if", "weights", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "errors", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "\n", "torch", ".", "sum", "(", "errors", "*", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", "/", "torch", ".", "sum", "(", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.AbsRel.__init__": [[32, 34], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AbsRel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.AbsRel.forward": [[35, 52], ["torch.abs", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "direct._dim_list", "direct._dim_list", "direct._dim_list"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", "weights", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", "mask", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "absrel", "=", "torch", ".", "abs", "(", "(", "gt", "-", "pred", ")", "/", "gt", ")", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "absrel", "=", "absrel", "*", "weights", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "absrel", "=", "absrel", "[", "mask", "]", "\n", "", "if", "weights", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "absrel", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "\n", "torch", ".", "sum", "(", "absrel", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", "/", "torch", ".", "sum", "(", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.RMSE.__init__": [[55, 57], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "RMSE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.RMSE.forward": [[58, 75], ["torch.mean", "torch.sum", "torch.sum", "torch.mean", "torch.sqrt", "torch.sqrt", "torch.mean", "direct._dim_list", "direct._dim_list", "direct._dim_list"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", "weights", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", "mask", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "diff_sq", "=", "(", "gt", "-", "pred", ")", "**", "2", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "diff_sq", "=", "diff_sq", "*", "weights", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "diff_sq", "=", "diff_sq", "[", "mask", "]", "\n", "", "if", "weights", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "diff_sq", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "diff_sq_sum", "=", "torch", ".", "sum", "(", "diff_sq", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", "diff_w_sum", "=", "torch", ".", "sum", "(", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "# + 1e-18", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "diff_sq_sum", "/", "diff_w_sum", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.RMSLE.__init__": [[77, 82], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "base", ":", "str", "=", "'natural'", "# 'natural' or 'ten'", "\n", ")", ":", "\n", "        ", "super", "(", "RMSLE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "log", "=", "torch", ".", "log", "if", "base", "==", "'natural'", "else", "torch", ".", "log10", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.RMSLE.forward": [[83, 104], ["torch.where", "torch.mean", "torch.sum", "torch.sum", "torch.mean", "direct.RMSLE.log", "direct.RMSLE.log", "torch.sqrt", "torch.sqrt", "torch.mean", "direct._dim_list", "direct._dim_list", "direct._dim_list"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", "weights", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", "mask", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "pred_fix", "=", "torch", ".", "where", "(", "pred", "==", "0.0", ",", "\n", "pred", "+", "1e-24", ",", "\n", "pred", "\n", ")", "\n", "log_diff_sq", "=", "(", "self", ".", "log", "(", "gt", ")", "-", "self", ".", "log", "(", "pred_fix", ")", ")", "**", "2", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "log_diff_sq", "=", "log_diff_sq", "*", "weights", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "log_diff_sq", "=", "log_diff_sq", "[", "mask", "]", "\n", "", "if", "weights", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "torch", ".", "mean", "(", "log_diff_sq", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "log_diff_sq_sum", "=", "torch", ".", "sum", "(", "log_diff_sq", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", "log_diff_w_sum", "=", "torch", ".", "sum", "(", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "# + 1e-18", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sqrt", "(", "log_diff_sq_sum", "/", "log_diff_w_sum", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__": [[107, 109], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SqRel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct.SqRel.forward": [[110, 127], ["torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "direct._dim_list", "direct._dim_list", "direct._dim_list"], "methods", ["home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list", "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list"], ["", "def", "forward", "(", "self", ",", "\n", "gt", ":", "torch", ".", "Tensor", ",", "\n", "pred", ":", "torch", ".", "Tensor", ",", "\n", "weights", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", "mask", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "sqrel", "=", "(", "(", "gt", "-", "pred", ")", "**", "2", ")", "/", "gt", "\n", "if", "weights", "is", "not", "None", ":", "\n", "            ", "sqrel", "=", "sqrel", "*", "weights", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "sqrel", "=", "sqrel", "[", "mask", "]", "\n", "", "if", "weights", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "sqrel", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "mean", "(", "\n", "torch", ".", "sum", "(", "sqrel", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", "/", "torch", ".", "sum", "(", "weights", ",", "dim", "=", "_dim_list", "(", "gt", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VCL3D_Pano3D.metrics.direct._dim_list": [[130, 135], ["list", "range", "len"], "function", ["None"], ["", "", "", "def", "_dim_list", "(", "\n", "tensor", ":", "torch", ".", "Tensor", ",", "\n", "start_index", ":", "int", "=", "1", ",", "\n", ")", "->", "typing", ".", "List", "[", "int", "]", ":", "\n", "    ", "return", "list", "(", "range", "(", "start_index", ",", "len", "(", "tensor", ".", "shape", ")", ")", ")", "", "", ""]]}