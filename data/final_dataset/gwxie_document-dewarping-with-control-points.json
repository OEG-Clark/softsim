{"home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.SaveFlatImage.__init__": [[51, 64], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "date", ",", "date_time", ",", "_re_date", ",", "data_path_validate", ",", "data_path_test", ",", "batch_size", ",", "preproccess", "=", "False", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "date", "=", "date", "\n", "self", ".", "date_time", "=", "date_time", "\n", "self", ".", "_re_date", "=", "_re_date", "\n", "self", ".", "preproccess", "=", "preproccess", "\n", "self", ".", "data_path_validate", "=", "data_path_validate", "\n", "self", ".", "data_path_test", "=", "data_path_test", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "scaling_test_perturbed_img_path", "=", "'/lustre/home/gwxie/data/unwarp_new/test/shrink_2048_1920/crop/'", "\n", "# self.perturbed_test_img_path = '/lustre/home/gwxie/data/unwarp_new/test/new_1024_960/crop/'", "\n", "# self.perturbed_test_img_path = '/lustre/home/gwxie/data/unwarp_new/test/shrink_1024_960/crop/'", "\n", "self", ".", "perturbed_test_img_path", "=", "'/lustre/home/gwxie/data/unwarp_new/test/yin2/'", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.SaveFlatImage.location_mark": [[65, 71], ["location.astype().reshape", "cv2.circle", "location.astype", "math.ceil", "math.ceil"], "methods", ["None"], ["", "def", "location_mark", "(", "self", ",", "img", ",", "location", ",", "color", "=", "(", "0", ",", "0", ",", "255", ")", ")", ":", "\n", "        ", "stepSize", "=", "0", "\n", "for", "l", "in", "location", ".", "astype", "(", "np", ".", "int64", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", ":", "\n", "            ", "cv2", ".", "circle", "(", "img", ",", "\n", "(", "l", "[", "0", "]", "+", "math", ".", "ceil", "(", "stepSize", "/", "2", ")", ",", "l", "[", "1", "]", "+", "math", ".", "ceil", "(", "stepSize", "/", "2", ")", ")", ",", "3", ",", "color", ",", "-", "1", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.SaveFlatImage.flatByRegressWithClassiy_fiducial_v1_RGB_AT_show": [[72, 202], ["tshape.reshape.reshape.reshape", "sshape.reshape.reshape.reshape", "scipy.interpolate.griddata().astype", "cv2.remap", "flat_img.astype.astype.astype", "cv2.imread", "cv2.resize", "numpy.stack", "os.path.join", "os.path.join", "cv2.cvtColor", "im_name.replace.replace.replace", "cv2.imwrite", "utilsV3.SaveFlatImage.location_mark", "numpy.zeros_like", "numpy.concatenate", "im_name.replace.replace.replace", "cv2.imwrite", "im_name.replace.replace.replace", "cv2.imread", "scipy.interpolate.griddata", "str", "str", "os.path.exists", "os.makedirs", "perturbed_img.transpose.transpose.copy", "os.path.exists", "os.makedirs", "perturbed_img.transpose.transpose.transpose", "complex", "complex", "complex", "complex"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.location_mark"], ["", "def", "flatByRegressWithClassiy_fiducial_v1_RGB_AT_show", "(", "self", ",", "fiducial_points", ",", "segment", ",", "im_name", ",", "epoch", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "''''''", "\n", "# if (scheme == 'test' or scheme == 'eval') and is_scaling:", "\n", "#     pass", "\n", "# else:", "\n", "if", "scheme", "==", "'test'", "or", "scheme", "==", "'eval'", ":", "\n", "            ", "perturbed_img_path", "=", "self", ".", "data_path_test", "+", "im_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "perturbed_img", "=", "cv2", ".", "resize", "(", "perturbed_img", ",", "(", "960", ",", "1024", ")", ")", "\n", "", "elif", "scheme", "==", "'validate'", "and", "perturbed_img", "is", "None", ":", "\n", "            ", "RGB_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "perturbed_img_path", "=", "'/lustre/home/gwxie/data/unwarp_new/train/'", "+", "self", ".", "data_split", "+", "'/validate/png/'", "+", "RGB_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "", "elif", "perturbed_img", "is", "not", "None", ":", "\n", "            ", "perturbed_img", "=", "perturbed_img", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "", "fiducial_points", "=", "fiducial_points", "/", "[", "992", ",", "992", "]", "*", "[", "960", ",", "1024", "]", "\n", "# fiducial_points = fiducial_points / [496, 496] * [960, 1024]", "\n", "# flat_shape = perturbed_img.shape[:2]", "\n", "'''\n        tps = cv2.createThinPlateSplineShapeTransformer()\n        edge_padding = 3'''", "\n", "col_gap", "=", "2", "#4", "\n", "row_gap", "=", "col_gap", "# col_gap + 1 if col_gap < 6 else col_gap", "\n", "# fiducial_point_gaps = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60]  # POINTS NUM: 61, 31, 21, 16, 13, 11, 7, 6, 5, 4, 3, 2", "\n", "fiducial_point_gaps", "=", "[", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "10", ",", "15", ",", "30", "]", "# POINTS NUM: 31, 16, 11, 7, 6, 4, 3, 2", "\n", "sshape", "=", "fiducial_points", "[", ":", ":", "fiducial_point_gaps", "[", "row_gap", "]", ",", ":", ":", "fiducial_point_gaps", "[", "col_gap", "]", ",", ":", "]", "\n", "segment_h", ",", "segment_w", "=", "segment", "*", "[", "fiducial_point_gaps", "[", "col_gap", "]", ",", "fiducial_point_gaps", "[", "row_gap", "]", "]", "\n", "fiducial_points_row", ",", "fiducial_points_col", "=", "sshape", ".", "shape", "[", ":", "2", "]", "\n", "'''\n        im_hight = np.linspace(0, segment_h * (fiducial_points_col - 1), fiducial_points_col, dtype=np.int64)\n        im_wide = np.linspace(0, segment_w * (fiducial_points_row - 1), fiducial_points_row, dtype=np.int64)\n        im_y, im_x = np.meshgrid(im_hight, im_wide)\n        tshape = np.stack((im_x, im_y), axis=2)\n        '''", "\n", "im_x", ",", "im_y", "=", "np", ".", "mgrid", "[", "0", ":", "(", "fiducial_points_col", "-", "1", ")", ":", "complex", "(", "fiducial_points_col", ")", ",", "\n", "0", ":", "(", "fiducial_points_row", "-", "1", ")", ":", "complex", "(", "fiducial_points_row", ")", "]", "\n", "\n", "tshape", "=", "np", ".", "stack", "(", "(", "im_x", ",", "im_y", ")", ",", "axis", "=", "2", ")", "*", "[", "segment_w", ",", "segment_h", "]", "\n", "\n", "'''\n        tshape = get_matric_edge(tshape)\n        sshape = get_matric_edge(sshape)\n        '''", "\n", "tshape", "=", "tshape", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "sshape", "=", "sshape", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "# perturbed_img_mark = self.location_mark(perturbed_img.copy(), fiducial_points, (0, 0, 255))", "\n", "# perturbed_img_mark = self.location_mark(perturbed_img.copy(), sshape, (0, 255, 0))", "\n", "\n", "'''\n        i_path = os.path.join(self.path, self.date + self.date_time + ' @' + self._re_date,\n                              str(epoch)) if self._re_date is not None else os.path.join(self.path,\n                                                                                         self.date + self.date_time,\n                                                                                         str(epoch))\n        if scheme == 'test':\n            i_path += '/test'\n        if not os.path.exists(i_path):\n            os.makedirs(i_path)\n        im_name = im_name.replace('gw', 'png')\n        cv2.imwrite(i_path + '/' + im_name, perturbed_img_mark)\n        # return\n        '''", "\n", "'''\n        matches = list()\n        for i in range(sshape.shape[0]):\n            matches.append(cv2.DMatch(i, i, 0))\n        tps.estimateTransformation(tshape.reshape(1, -1, 2), sshape.reshape(1, -1, 2), matches)\n        \n        shrink_paddig = 0   # 2 * edge_padding\n        x_start, x_end, y_start, y_end = shrink_paddig, segment_h * (fiducial_points_col - 1) - shrink_paddig, shrink_paddig, segment_w * (fiducial_points_row - 1) - shrink_paddig\n        # flat_img = tps.warpImage(perturbed_img)[0:segment_h * (fiducial_points_col - 1), 0:segment_w * (fiducial_points_row - 1), :]\n        flat_img = tps.warpImage(perturbed_img)[x_start:x_end, y_start:y_end, :]\n        # flat_img_mark = self.location_mark(flat_img.copy(), tshape, (0, 255, 0))\n        '''", "\n", "\n", "output_shape", "=", "(", "segment_h", "*", "(", "fiducial_points_col", "-", "1", ")", ",", "segment_w", "*", "(", "fiducial_points_row", "-", "1", ")", ")", "\n", "grid_x", ",", "grid_y", "=", "np", ".", "mgrid", "[", "0", ":", "output_shape", "[", "0", "]", "-", "1", ":", "complex", "(", "output_shape", "[", "0", "]", ")", ",", "\n", "0", ":", "output_shape", "[", "1", "]", "-", "1", ":", "complex", "(", "output_shape", "[", "1", "]", ")", "]", "\n", "# grid_z = griddata(tshape, sshape, (grid_y, grid_x), method='cubic').astype('float32')", "\n", "grid_", "=", "griddata", "(", "tshape", ",", "sshape", ",", "(", "grid_y", ",", "grid_x", ")", ",", "method", "=", "'linear'", ")", ".", "astype", "(", "'float32'", ")", "\n", "flat_img", "=", "cv2", ".", "remap", "(", "perturbed_img", ",", "grid_", "[", ":", ",", ":", ",", "0", "]", ",", "grid_", "[", ":", ",", ":", ",", "1", "]", ",", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "''''''", "\n", "flat_img", "=", "flat_img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "i_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", "+", "' @'", "+", "self", ".", "_re_date", ",", "\n", "str", "(", "epoch", ")", ")", "if", "self", ".", "_re_date", "is", "not", "None", "else", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "\n", "self", ".", "date", "+", "self", ".", "date_time", ",", "\n", "str", "(", "epoch", ")", ")", "\n", "''''''", "\n", "if", "scheme", "==", "'eval'", ":", "\n", "            ", "img_figure", "=", "cv2", ".", "cvtColor", "(", "flat_img", ",", "cv2", ".", "COLOR_RGB2GRAY", ")", "\n", "if", "scheme", "==", "'eval'", ":", "\n", "                ", "i_path", "+=", "'/eval'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "# print(im_name)", "\n", "", "im_name", "=", "im_name", ".", "replace", "(", "' copy.png'", ",", "'.jpg'", ")", "\n", "cv2", ".", "imwrite", "(", "i_path", "+", "'/'", "+", "im_name", ",", "img_figure", ")", "\n", "", "else", ":", "\n", "            ", "perturbed_img_mark", "=", "self", ".", "location_mark", "(", "perturbed_img", ".", "copy", "(", ")", ",", "sshape", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "shrink_paddig", "=", "0", "# 2 * edge_padding", "\n", "x_start", ",", "x_end", ",", "y_start", ",", "y_end", "=", "shrink_paddig", ",", "segment_h", "*", "(", "fiducial_points_col", "-", "1", ")", "-", "shrink_paddig", ",", "shrink_paddig", ",", "segment_w", "*", "(", "fiducial_points_row", "-", "1", ")", "-", "shrink_paddig", "\n", "\n", "x_", "=", "(", "perturbed_img_mark", ".", "shape", "[", "0", "]", "-", "(", "x_end", "-", "x_start", ")", ")", "//", "2", "\n", "y_", "=", "(", "perturbed_img_mark", ".", "shape", "[", "1", "]", "-", "(", "y_end", "-", "y_start", ")", ")", "//", "2", "\n", "\n", "flat_img_new", "=", "np", ".", "zeros_like", "(", "perturbed_img_mark", ")", "\n", "flat_img_new", "[", "x_", ":", "perturbed_img_mark", ".", "shape", "[", "0", "]", "-", "x_", ",", "y_", ":", "perturbed_img_mark", ".", "shape", "[", "1", "]", "-", "y_", "]", "=", "flat_img", "\n", "img_figure", "=", "np", ".", "concatenate", "(", "\n", "(", "perturbed_img_mark", ",", "flat_img_new", ")", ",", "axis", "=", "1", ")", "\n", "\n", "if", "scheme", "==", "'test'", ":", "\n", "                ", "i_path", "+=", "'/test'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "\n", "", "im_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "cv2", ".", "imwrite", "(", "i_path", "+", "'/'", "+", "im_name", ",", "img_figure", ")", "\n", "", "'''\n        # img_figure = cv2.cvtColor(flat_img, cv2.COLOR_RGB2GRAY)\n        # if scheme == 'eval':\n        i_path += '/eval'\n        if not os.path.exists(i_path):\n            os.makedirs(i_path)\n        # print(im_name)\n        im_name = im_name.replace(' copy.png', '.jpg')\n        cv2.imwrite(i_path + '/' + im_name, flat_img)\n        '''", "\n", "", "def", "flatByRegressWithClassiy_multiProcessV2", "(", "self", ",", "pred_fiducial_points", ",", "pred_segment", ",", "im_name", ",", "epoch", ",", "process_pool", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2": [[202, 208], ["range", "process_pool.apply_async"], "methods", ["None"], ["", "def", "flatByRegressWithClassiy_multiProcessV2", "(", "self", ",", "pred_fiducial_points", ",", "pred_segment", ",", "im_name", ",", "epoch", ",", "process_pool", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n", "# process_pool = Pool(self.batch_size)", "\n", "        ", "for", "i_val_i", "in", "range", "(", "pred_fiducial_points", ".", "shape", "[", "0", "]", ")", ":", "\n", "# self.flatByRegressWithClassiy_fiducial_v1_RGB_AT(pred_fiducial_points[i_val_i], pred_segment[i_val_i], im_name[i_val_i], epoch, None if perturbed_img is None else perturbed_img[i_val_i], scheme, is_scaling)", "\n", "            ", "process_pool", ".", "apply_async", "(", "func", "=", "self", ".", "flatByRegressWithClassiy_fiducial_v1_RGB_AT_show", ",", "\n", "args", "=", "(", "pred_fiducial_points", "[", "i_val_i", "]", ",", "pred_segment", "[", "i_val_i", "]", ",", "im_name", "[", "i_val_i", "]", ",", "epoch", ",", "None", "if", "perturbed_img", "is", "None", "else", "perturbed_img", "[", "i_val_i", "]", ",", "scheme", ",", "is_scaling", ")", ")", "\n", "# process_pool.apply_async(func=self.flatByRegressWithClassiy_fiducial_v1_RGB,", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.AverageMeter.__init__": [[218, 220], ["utilsV3.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.AverageMeter.reset": [[221, 226], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.AverageMeter.update": [[227, 232], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ",", "m", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "m", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.__init__": [[234, 271], ["utilsV3.SaveFlatImage", "utilsV3.AverageMeter", "utilsV3.AverageMeter", "utilsV3.AverageMeter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "path", ",", "date", ",", "date_time", ",", "_re_date", ",", "model", ",", "reslut_file", ",", "n_classes", ",", "optimizer", ",", "model_D", "=", "None", ",", "optimizer_D", "=", "None", ",", "loss_fn", "=", "None", ",", "loss_fn2", "=", "None", ",", "data_loader", "=", "None", ",", "data_loader_hdf5", "=", "None", ",", "dataPackage_loader", "=", "None", ",", "data_path", "=", "None", ",", "data_path_validate", "=", "None", ",", "data_path_test", "=", "None", ",", "data_preproccess", "=", "True", ")", ":", "#, valloaderSet, v_loaderSet", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "date", "=", "date", "\n", "self", ".", "date_time", "=", "date_time", "\n", "self", ".", "_re_date", "=", "_re_date", "\n", "# self.valloaderSet = valloaderSet", "\n", "# self.v_loaderSet = v_loaderSet", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model_D", "=", "model_D", "\n", "self", ".", "reslut_file", "=", "reslut_file", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "optimizer_D", "=", "optimizer_D", "\n", "self", ".", "loss_fn", "=", "loss_fn", "\n", "self", ".", "loss_fn2", "=", "loss_fn2", "\n", "self", ".", "data_loader", "=", "data_loader", "\n", "self", ".", "data_loader_hdf5", "=", "data_loader_hdf5", "\n", "self", ".", "dataPackage_loader", "=", "dataPackage_loader", "\n", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data_path_validate", "=", "data_path_validate", "\n", "self", ".", "data_path_test", "=", "data_path_test", "\n", "self", ".", "data_preproccess", "=", "data_preproccess", "\n", "self", ".", "save_flat_mage", "=", "SaveFlatImage", "(", "self", ".", "path", ",", "self", ".", "date", ",", "self", ".", "date_time", ",", "self", ".", "_re_date", ",", "self", ".", "data_path_validate", ",", "self", ".", "data_path_test", ",", "self", ".", "args", ".", "batch_size", ",", "self", ".", "data_preproccess", ")", "\n", "\n", "self", ".", "validate_loss", "=", "AverageMeter", "(", ")", "\n", "self", ".", "validate_loss_regress", "=", "AverageMeter", "(", ")", "\n", "self", ".", "validate_loss_segment", "=", "AverageMeter", "(", ")", "\n", "self", ".", "lambda_loss", "=", "1", "\n", "self", ".", "lambda_loss_segment", "=", "1", "\n", "self", ".", "lambda_loss_a", "=", "1", "\n", "self", ".", "lambda_loss_b", "=", "1", "\n", "self", ".", "lambda_loss_c", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.saveDataPackage": [[272, 295], ["utilsV3.FlatImg.loadTrainData", "time.time", "enumerate", "divmod", "divmod", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "time.time", "open", "pickle.dumps", "f.write", "open", "pickle.dumps", "f.write", "str", "str"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTrainData"], ["", "def", "saveDataPackage", "(", "self", ",", "data_size", "=", "'640'", ")", ":", "\n", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "data_path_validate", "+", "'clip'", "+", "data_size", "+", "'/'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "data_path_validate", "+", "'clip'", "+", "data_size", "+", "'/'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "data_path_validate", "+", "'label'", "+", "data_size", "+", "'/'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "data_path_validate", "+", "'label'", "+", "data_size", "+", "'/'", ")", "\n", "", "trainloader", "=", "self", ".", "loadTrainData", "(", "data_split", "=", "self", ".", "data_split", ",", "is_shuffle", "=", "True", ")", "\n", "begin_train", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "with", "open", "(", "self", ".", "data_path_validate", "+", "'clip'", "+", "data_size", "+", "'/'", "+", "str", "(", "i", ")", "+", "'.im'", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle_perturbed_im", "=", "pickle", ".", "dumps", "(", "images", ")", "\n", "f", ".", "write", "(", "pickle_perturbed_im", ")", "\n", "\n", "", "with", "open", "(", "self", ".", "data_path_validate", "+", "'label'", "+", "data_size", "+", "'/'", "+", "str", "(", "i", ")", "+", "'.lbl'", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle_perturbed_lbl", "=", "pickle", ".", "dumps", "(", "labels", ")", "\n", "f", ".", "write", "(", "pickle_perturbed_lbl", ")", "\n", "\n", "", "", "trian_t", "=", "time", ".", "time", "(", ")", "-", "begin_train", "\n", "\n", "m", ",", "s", "=", "divmod", "(", "trian_t", ",", "60", ")", "\n", "h", ",", "m", "=", "divmod", "(", "m", ",", "60", ")", "\n", "print", "(", "\"All Train Time : %02d:%02d:%02d\\n\"", "%", "(", "h", ",", "m", ",", "s", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.loadTrainData": [[296, 301], ["utilsV3.FlatImg.data_loader", "torch.utils.data.DataLoader", "min"], "methods", ["None"], ["", "def", "loadTrainData", "(", "self", ",", "data_split", ",", "is_shuffle", "=", "True", ")", ":", "\n", "        ", "train_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path", ",", "split", "=", "data_split", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "preproccess", "=", "self", ".", "data_preproccess", ")", "\n", "trainloader", "=", "data", ".", "DataLoader", "(", "train_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "min", "(", "self", ".", "args", ".", "batch_size", ",", "8", ")", ",", "drop_last", "=", "True", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "is_shuffle", ")", "\n", "return", "trainloader", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.loadValidateAndTestData": [[308, 339], ["utilsV3.FlatImg.data_loader", "torch.utils.data.DataLoader", "utilsV3.FlatImg.data_loader", "torch.utils.data.DataLoader", "min"], "methods", ["None"], ["", "def", "loadValidateAndTestData", "(", "self", ",", "is_shuffle", "=", "True", ",", "sub_dir", "=", "'shrink_512/crop/'", ")", ":", "\n", "        ", "v1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_validate", ",", "split", "=", "'validate'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ",", "preproccess", "=", "self", ".", "data_preproccess", ")", "\n", "valloader1", "=", "data", ".", "DataLoader", "(", "v1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "min", "(", "self", ".", "args", ".", "batch_size", ",", "8", ")", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "is_shuffle", ")", "\n", "\n", "'''val sets'''", "\n", "v_loaderSet", "=", "{", "\n", "'v1_loader'", ":", "v1_loader", ",", "\n", "}", "\n", "valloaderSet", "=", "{", "\n", "'valloader1'", ":", "valloader1", ",", "\n", "}", "\n", "# sub_dir = 'crop/crop/'", "\n", "\n", "t1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'test'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ")", "\n", "testloader1", "=", "data", ".", "DataLoader", "(", "t1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "False", ")", "\n", "\n", "'''test sets'''", "\n", "t_loaderSet", "=", "{", "\n", "'t1_loader'", ":", "v1_loader", ",", "\n", "}", "\n", "testloaderSet", "=", "{", "\n", "'testloader1'", ":", "testloader1", ",", "\n", "}", "\n", "\n", "self", ".", "valloaderSet", "=", "valloaderSet", "\n", "self", ".", "v_loaderSet", "=", "v_loaderSet", "\n", "\n", "self", ".", "testloaderSet", "=", "testloaderSet", "\n", "self", ".", "t_loaderSet", "=", "t_loaderSet", "\n", "# return v_loaderSet, valloaderSet", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.loadTestData": [[341, 353], ["utilsV3.FlatImg.data_loader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "loadTestData", "(", "self", ",", "is_shuffle", "=", "True", ")", ":", "\n", "        ", "t1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'test'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "\n", "is_return_img_name", "=", "True", ")", "\n", "testloader1", "=", "data", ".", "DataLoader", "(", "t1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "shuffle", "=", "False", ")", "\n", "\n", "'''test sets'''", "\n", "testloaderSet", "=", "{", "\n", "'testloader1'", ":", "testloader1", ",", "\n", "}", "\n", "\n", "self", ".", "testloaderSet", "=", "testloaderSet", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.evalData": [[354, 360], ["utilsV3.FlatImg.data_loader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "evalData", "(", "self", ",", "is_shuffle", "=", "True", ",", "sub_dir", "=", "'shrink_512/crop/'", ")", ":", "\n", "        ", "eval_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'eval'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ")", "\n", "evalloader", "=", "data", ".", "DataLoader", "(", "eval_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "False", ")", "\n", "\n", "self", ".", "evalloaderSet", "=", "evalloader", "\n", "# return v_loaderSet, valloaderSet", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.saveModel_epoch": [[362, 379], ["utilsV3.FlatImg.model.state_dict", "utilsV3.FlatImg.optimizer.state_dict", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "torch.save", "torch.save", "str", "str"], "methods", ["None"], ["", "def", "saveModel_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "epoch", "+=", "1", "\n", "state", "=", "{", "'epoch'", ":", "epoch", ",", "\n", "'model_state'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "# AN ERROR HAS OCCURED", "\n", "}", "\n", "i_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", "+", "' @'", "+", "self", ".", "_re_date", ",", "\n", "str", "(", "epoch", ")", ")", "if", "self", ".", "_re_date", "is", "not", "None", "else", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", ",", "str", "(", "epoch", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "\n", "", "if", "self", ".", "_re_date", "is", "None", ":", "\n", "            ", "torch", ".", "save", "(", "state", ",", "i_path", "+", "'/'", "+", "self", ".", "date", "+", "self", ".", "date_time", "+", "\"{}\"", ".", "format", "(", "self", ".", "args", ".", "arch", ")", "+", "\".pkl\"", ")", "# \"./trained_model/{}_{}_best_model.pkl\"", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "state", ",", "\n", "i_path", "+", "'/'", "+", "self", ".", "_re_date", "+", "\"@\"", "+", "self", ".", "date", "+", "self", ".", "date_time", "+", "\"{}\"", ".", "format", "(", "\n", "self", ".", "args", ".", "arch", ")", "+", "\".pkl\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.evalModelGreyC1": [[380, 414], ["multiprocessing.Pool", "time.time", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "print", "torch.no_grad", "enumerate", "time.time", "torch.autograd.Variable", "utilsV3.FlatImg.model", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "utilsV3.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcess_eval", "print", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs_segment.data.round"], "methods", ["None"], ["", "", "def", "evalModelGreyC1", "(", "self", ",", "epoch", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "process_pool", "=", "Pool", "(", "self", ".", "args", ".", "batch_size", "*", "4", ")", "\n", "\n", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# for i_val, (images, perturbed_img, im_name) in enumerate(self.evalloaderSet):", "\n", "            ", "for", "i_val", ",", "(", "images", ",", "im_name", ")", "in", "enumerate", "(", "self", ".", "evalloaderSet", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "images", "=", "Variable", "(", "images", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "# outputs, outputs_segment = self.model(images, is_softmax=True)", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcess_eval", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "process_pool", ",", "\n", "# perturbed_img=perturbed_img,", "\n", "scheme", "=", "'eval'", ",", "\n", "is_scaling", "=", "is_scaling", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "'* save image tested error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "process_pool", ".", "close", "(", ")", "\n", "process_pool", ".", "join", "(", ")", "\n", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ")", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ",", "\n", "file", "=", "self", ".", "reslut_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.validateOrTestModelV3": [[415, 557], ["multiprocessing.Pool", "time.time", "torch.no_grad", "enumerate", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "len", "print", "print", "time.time", "time.time", "utilsV3.FlatImg.valloaderSet.values", "enumerate", "time.time", "torch.no_grad", "enumerate", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "print", "torch.no_grad", "enumerate", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "print", "utilsV3.FlatImg.testloaderSet.values", "enumerate", "time.time", "utilsV3.FlatImg.testloaderSet.values", "enumerate", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "utilsV3.FlatImg.model", "utilsV3.FlatImg.loss_fn", "utilsV3.FlatImg.loss_fn2", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "loss_list.append", "utilsV3.FlatImg.item", "loss_overall.item", "loss_local.item", "random.choices", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "utilsV3.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "loss.item", "print", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "random.choices", "torch.autograd.Variable", "utilsV3.FlatImg.model", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "utilsV3.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "print", "random.choices", "torch.autograd.Variable", "utilsV3.FlatImg.model", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "utilsV3.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "print", "torch.autograd.Variable.numpy", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "outputs_segment.data.round", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs_segment.data.round", "outputs_segment.data.round"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2"], ["", "def", "validateOrTestModelV3", "(", "self", ",", "epoch", ",", "trian_t", ",", "validate_test", "=", "'v_l2'", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "process_pool", "=", "Pool", "(", "16", ")", "# Pool(self.args.batch_size)", "\n", "\n", "if", "validate_test", "==", "'v_l4'", ":", "\n", "            ", "loss_segment_list", "=", "0", "\n", "loss_overall_list", "=", "0", "\n", "loss_local_list", "=", "0", "\n", "loss_edge_list", "=", "0", "\n", "loss_rectangles_list", "=", "0", "\n", "loss_list", "=", "[", "]", "\n", "\n", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "valloaderSet", ".", "values", "(", ")", ")", ":", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "labels", ",", "segment", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = random.choices([True, False], weights=[1, 0])[0]", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "0.05", ",", "0.95", "]", ")", "[", "0", "]", "\n", "# save_img_ = True", "\n", "\n", "images", "=", "Variable", "(", "images", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", "self", ".", "args", ".", "gpu", ")", ")", "\n", "segment", "=", "Variable", "(", "segment", ".", "cuda", "(", "self", ".", "args", ".", "gpu", ")", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "\n", "loss_overall", ",", "loss_local", ",", "loss_edge", ",", "loss_rectangles", "=", "self", ".", "loss_fn", "(", "outputs", ",", "labels", ",", "size_average", "=", "True", ")", "\n", "loss_segment", "=", "self", ".", "loss_fn2", "(", "outputs_segment", ",", "segment", ")", "\n", "\n", "loss", "=", "self", ".", "lambda_loss", "*", "(", "loss_overall", "+", "loss_local", "+", "loss_edge", "*", "self", ".", "lambda_loss_a", "+", "loss_rectangles", "*", "self", ".", "lambda_loss_b", ")", "+", "self", ".", "lambda_loss_segment", "*", "loss_segment", "\n", "# loss = self.lambda_loss * (loss_local + loss_rectangles + loss_edge*self.lambda_loss_a + loss_overall*self.lambda_loss_b) + self.lambda_loss_segment * loss_segment", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "# (4, 1280, 1024, 2)", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "process_pool", ",", "\n", "perturbed_img", "=", "images", ".", "numpy", "(", ")", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "loss_list", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "loss_segment_list", "+=", "loss_segment", ".", "item", "(", ")", "\n", "loss_overall_list", "+=", "loss_overall", ".", "item", "(", ")", "\n", "loss_local_list", "+=", "loss_local", ".", "item", "(", ")", "\n", "# loss_edge_list += loss_edge.item()", "\n", "# loss_rectangles_list += loss_rectangles.item()", "\n", "\n", "", "except", ":", "\n", "                            ", "print", "(", "'* save image validated error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "process_pool", ".", "close", "(", ")", "\n", "process_pool", ".", "join", "(", ")", "\n", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "# if always_save_model:", "\n", "#     self.saveModel(epoch, save_path=self.path)", "\n", "list_len", "=", "len", "(", "loss_list", ")", "\n", "print", "(", "'train time : {trian_t:.3f}\\t'", "\n", "'validate time : {test_time:.3f}\\t'", "\n", "'[o:{overall_avg:.4f} l:{local_avg:.4f} e:{edge_avg:.4f} r:{rectangles_avg:.4f}\\t'", "\n", "'[{loss_regress:.4f}  {loss_segment:.4f}]\\n'", ".", "format", "(", "\n", "trian_t", "=", "trian_t", ",", "test_time", "=", "test_time", ",", "\n", "overall_avg", "=", "loss_overall_list", "/", "list_len", ",", "local_avg", "=", "loss_local_list", "/", "list_len", ",", "edge_avg", "=", "loss_edge_list", "/", "list_len", ",", "rectangles_avg", "=", "loss_rectangles_list", "/", "list_len", ",", "\n", "loss_regress", "=", "(", "loss_overall_list", "+", "loss_local_list", "+", "loss_edge_list", ")", "/", "list_len", ",", "loss_segment", "=", "loss_segment_list", "/", "list_len", ")", ")", "\n", "print", "(", "'train time : {trian_t:.3f}\\t'", "\n", "'validate time : {test_time:.3f}\\t'", "\n", "'[o:{overall_avg:.4f} l:{local_avg:.4f} e:{edge_avg:.4f} r:{rectangles_avg:.4f}\\t'", "\n", "'[{loss_regress:.4f}  {loss_segment:.4f}]\\n'", ".", "format", "(", "\n", "trian_t", "=", "trian_t", ",", "test_time", "=", "test_time", ",", "\n", "overall_avg", "=", "loss_overall_list", "/", "list_len", ",", "local_avg", "=", "loss_local_list", "/", "list_len", ",", "edge_avg", "=", "loss_edge_list", "/", "list_len", ",", "rectangles_avg", "=", "loss_rectangles_list", "/", "list_len", ",", "\n", "loss_regress", "=", "(", "loss_overall_list", "+", "loss_local_list", "+", "loss_edge_list", ")", "/", "list_len", ",", "loss_segment", "=", "loss_segment_list", "/", "list_len", ")", ",", "file", "=", "self", ".", "reslut_file", ")", "\n", "", "", "elif", "validate_test", "==", "'t_all'", ":", "\n", "            ", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "testloaderSet", ".", "values", "(", ")", ")", ":", "\n", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = True", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "1", ",", "0", "]", ")", "[", "0", "]", "\n", "# save_img_ = random.choices([True, False], weights=[0.2, 0.8])[0]", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "images", "=", "Variable", "(", "images", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "# outputs, outputs_segment = self.model(images, is_softmax=True)", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "process_pool", ",", "\n", "scheme", "=", "'test'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "", "except", ":", "\n", "                            ", "print", "(", "'* save image tested error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "process_pool", ".", "close", "(", ")", "\n", "process_pool", ".", "join", "(", ")", "\n", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ")", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ",", "\n", "file", "=", "self", ".", "reslut_file", ")", "\n", "", "", "else", ":", "\n", "            ", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "testloaderSet", ".", "values", "(", ")", ")", ":", "\n", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = True", "\n", "# save_img_ = random.choices([True, False], weights=[1, 0])[0]", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "0.4", ",", "0.6", "]", ")", "[", "0", "]", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "images", "=", "Variable", "(", "images", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "# outputs, outputs_segment = self.model(images, is_softmax=True)", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "process_pool", ",", "\n", "scheme", "=", "'test'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "", "except", ":", "\n", "                            ", "print", "(", "'* save image tested error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "process_pool", ".", "close", "(", ")", "\n", "process_pool", ".", "join", "(", ")", "\n", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ")", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ",", "\n", "file", "=", "self", ".", "reslut_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.adjust_position": [[28, 45], ["None"], "function", ["None"], ["def", "adjust_position", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ",", "new_shape", ")", ":", "\n", "    ", "if", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "%", "2", "==", "0", ":", "\n", "        ", "f_g_0_0", "=", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "//", "2", "\n", "f_g_0_1", "=", "f_g_0_0", "\n", "", "else", ":", "\n", "        ", "f_g_0_0", "=", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "//", "2", "\n", "f_g_0_1", "=", "f_g_0_0", "+", "1", "\n", "\n", "", "if", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "%", "2", "==", "0", ":", "\n", "        ", "f_g_1_0", "=", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "//", "2", "\n", "f_g_1_1", "=", "f_g_1_0", "\n", "", "else", ":", "\n", "        ", "f_g_1_0", "=", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "//", "2", "\n", "f_g_1_1", "=", "f_g_1_0", "+", "1", "\n", "\n", "# return f_g_0_0, f_g_0_1, f_g_1_0, f_g_1_1", "\n", "", "return", "f_g_0_0", ",", "f_g_1_0", ",", "new_shape", "[", "0", "]", "-", "f_g_0_1", ",", "new_shape", "[", "1", "]", "-", "f_g_1_1", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.get_matric_edge": [[46, 48], ["numpy.concatenate"], "function", ["None"], ["", "def", "get_matric_edge", "(", "matric", ")", ":", "\n", "    ", "return", "np", ".", "concatenate", "(", "(", "matric", "[", ":", ",", "0", ",", ":", "]", ",", "matric", "[", ":", ",", "-", "1", ",", ":", "]", ",", "matric", "[", "0", ",", "1", ":", "-", "1", ",", ":", "]", ",", "matric", "[", "-", "1", ",", "1", ":", "-", "1", ",", ":", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResidualBlockWithDilatedV1.__init__": [[28, 49], ["torch.Module.__init__", "BatchNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "BatchNorm", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "network.conv3x3", "network.dilation_conv", "network.conv3x3", "network.dilation_conv"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.conv3x3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.conv3x3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv"], ["\t", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "BatchNorm", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "is_activation", "=", "True", ",", "is_top", "=", "False", ",", "is_dropout", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "ResidualBlockWithDilatedV1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "is_activation", "=", "is_activation", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "is_top", "=", "is_top", "\n", "if", "self", ".", "stride", "!=", "1", "or", "self", ".", "is_top", ":", "\n", "\t\t\t", "self", ".", "conv1", "=", "conv3x3", "(", "in_channels", ",", "out_channels", ",", "self", ".", "stride", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "conv1", "=", "dilation_conv", "(", "in_channels", ",", "out_channels", ",", "dilation", "=", "3", ")", "# 3", "\n", "", "self", ".", "bn1", "=", "BatchNorm", "(", "out_channels", ")", "\n", "# self.bn1 = nn.BatchNorm2d(out_channels)", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "if", "self", ".", "stride", "!=", "1", "or", "self", ".", "is_top", ":", "\n", "\t\t\t", "self", ".", "conv2", "=", "conv3x3", "(", "out_channels", ",", "out_channels", ")", "\n", "", "else", ":", "\n", "\t\t\t", "self", ".", "conv2", "=", "dilation_conv", "(", "out_channels", ",", "out_channels", ",", "dilation", "=", "3", ")", "# 1", "\n", "", "self", ".", "bn2", "=", "BatchNorm", "(", "out_channels", ")", "\n", "\n", "self", ".", "is_dropout", "=", "is_dropout", "\n", "self", ".", "drop_out", "=", "nn", ".", "Dropout2d", "(", "p", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResidualBlockWithDilatedV1.forward": [[50, 63], ["network.ResidualBlockWithDilatedV1.relu", "network.ResidualBlockWithDilatedV1.bn2", "network.ResidualBlockWithDilatedV1.relu", "network.ResidualBlockWithDilatedV1.bn1", "network.ResidualBlockWithDilatedV1.conv2", "network.ResidualBlockWithDilatedV1.downsample", "network.ResidualBlockWithDilatedV1.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\t\t", "residual", "=", "x", "\n", "\n", "out1", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "# if self.is_dropout:", "\n", "# \tout1 = self.drop_out(out1)", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out1", ")", ")", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "\t\t\t", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.__init__": [[65, 83], ["torch.Module.__init__", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "network.ResNetV2StraightV2.blocklayer", "network.ResNetV2StraightV2.blocklayer", "network.ResNetV2StraightV2.blocklayer", "network.ResNetV2StraightV2.blocklayer"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.blocklayer", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.blocklayer", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.blocklayer", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.blocklayer"], ["\t", "def", "__init__", "(", "self", ",", "num_filter", ",", "map_num", ",", "BatchNorm", ",", "block_nums", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "block", "=", "ResidualBlockWithDilatedV1", ",", "stride", "=", "[", "1", ",", "2", ",", "2", ",", "2", "]", ",", "dropRate", "=", "[", "0.2", ",", "0.2", ",", "0.2", ",", "0.2", "]", ",", "is_sub_dropout", "=", "False", ")", ":", "\n", "\t\t", "super", "(", "ResNetV2StraightV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "num_filter", "*", "map_num", "[", "0", "]", "\n", "self", ".", "dropRate", "=", "dropRate", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "is_sub_dropout", "=", "is_sub_dropout", "\n", "# self.is_dropout = is_dropout", "\n", "self", ".", "drop_out", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropRate", "[", "0", "]", ")", "\n", "self", ".", "drop_out_2", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropRate", "[", "1", "]", ")", "\n", "self", ".", "drop_out_3", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropRate", "[", "2", "]", ")", "\n", "self", ".", "drop_out_4", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropRate", "[", "3", "]", ")", "# add", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "block_nums", "=", "block_nums", "\n", "self", ".", "layer1", "=", "self", ".", "blocklayer", "(", "block", ",", "num_filter", "*", "map_num", "[", "0", "]", ",", "self", ".", "block_nums", "[", "0", "]", ",", "BatchNorm", ",", "stride", "=", "self", ".", "stride", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "blocklayer", "(", "block", ",", "num_filter", "*", "map_num", "[", "1", "]", ",", "self", ".", "block_nums", "[", "1", "]", ",", "BatchNorm", ",", "stride", "=", "self", ".", "stride", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "blocklayer", "(", "block", ",", "num_filter", "*", "map_num", "[", "2", "]", ",", "self", ".", "block_nums", "[", "2", "]", ",", "BatchNorm", ",", "stride", "=", "self", ".", "stride", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "blocklayer", "(", "block", ",", "num_filter", "*", "map_num", "[", "3", "]", ",", "self", ".", "block_nums", "[", "3", "]", ",", "BatchNorm", ",", "stride", "=", "self", ".", "stride", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.blocklayer": [[84, 97], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "network.conv3x3", "BatchNorm", "block"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.conv3x3"], ["", "def", "blocklayer", "(", "self", ",", "block", ",", "out_channels", ",", "block_nums", ",", "BatchNorm", ",", "stride", "=", "1", ")", ":", "\n", "\t\t", "downsample", "=", "None", "\n", "if", "(", "stride", "!=", "1", ")", "or", "(", "self", ".", "in_channels", "!=", "out_channels", ")", ":", "\n", "\t\t\t", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv3x3", "(", "self", ".", "in_channels", ",", "out_channels", ",", "stride", "=", "stride", ")", ",", "\n", "BatchNorm", "(", "out_channels", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "in_channels", ",", "out_channels", ",", "BatchNorm", ",", "stride", ",", "downsample", ",", "is_top", "=", "True", ",", "is_dropout", "=", "False", ")", ")", "\n", "self", ".", "in_channels", "=", "out_channels", "\n", "for", "i", "in", "range", "(", "1", ",", "block_nums", ")", ":", "\n", "\t\t\t", "layers", ".", "append", "(", "block", "(", "out_channels", ",", "out_channels", ",", "BatchNorm", ",", "is_activation", "=", "True", ",", "is_top", "=", "False", ",", "is_dropout", "=", "self", ".", "is_sub_dropout", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.ResNetV2StraightV2.forward": [[98, 109], ["network.ResNetV2StraightV2.layer1", "network.ResNetV2StraightV2.layer2", "network.ResNetV2StraightV2.layer3", "network.ResNetV2StraightV2.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_skip", "=", "False", ")", ":", "\n", "\n", "\t\t", "out1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "\n", "out2", "=", "self", ".", "layer2", "(", "out1", ")", "\n", "\n", "out3", "=", "self", ".", "layer3", "(", "out2", ")", "\n", "\n", "out4", "=", "self", ".", "layer4", "(", "out3", ")", "\n", "\n", "return", "out4", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.FiducialPoints.__init__": [[111, 126], ["torch.Module.__init__", "architecture"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__"], ["\t", "def", "__init__", "(", "self", ",", "n_classes", ",", "num_filter", ",", "architecture", ",", "BatchNorm", "=", "'GN'", ",", "in_channels", "=", "3", ")", ":", "\n", "\t\t", "super", "(", "FiducialPoints", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "num_filter", "=", "num_filter", "\n", "if", "BatchNorm", "==", "'IN'", ":", "\n", "\t\t\t", "BatchNorm", "=", "nn", ".", "InstanceNorm2d", "\n", "", "elif", "BatchNorm", "==", "'BN'", ":", "\n", "\t\t\t", "BatchNorm", "=", "nn", ".", "BatchNorm2d", "\n", "", "elif", "BatchNorm", "==", "'GN'", ":", "\n", "\t\t\t", "BatchNorm", "=", "nn", ".", "GroupNorm", "\n", "\n", "\n", "\n", "", "self", ".", "dilated_unet", "=", "architecture", "(", "self", ".", "n_classes", ",", "self", ".", "num_filter", ",", "BatchNorm", ",", "in_channels", "=", "self", ".", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.FiducialPoints.forward": [[127, 129], ["network.FiducialPoints.dilated_unet"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_softmax", "=", "True", ")", ":", "\n", "\t\t", "return", "self", ".", "dilated_unet", "(", "x", ",", "is_softmax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.__init__": [[133, 223], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "print", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "network.ResNetV2StraightV2", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "network.DilatedResnetForFlatByFiducialPointsS2._initialize_weights", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "network.dilation_conv_bn_act", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2._initialize_weights", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act"], ["\t", "def", "__init__", "(", "self", ",", "n_classes", ",", "num_filter", ",", "BatchNorm", ",", "in_channels", "=", "3", ")", ":", "\n", "\t\t", "super", "(", "DilatedResnetForFlatByFiducialPointsS2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "num_filter", "=", "num_filter", "\n", "# act_fn = nn.PReLU()", "\n", "act_fn", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# act_fn = nn.LeakyReLU(0.2)", "\n", "\n", "map_num", "=", "[", "1", ",", "2", ",", "4", ",", "8", ",", "16", "]", "\n", "\n", "print", "(", "\"\\n------load DilatedResnetForFlatByFiducialPointsS2------\\n\"", ")", "\n", "\n", "self", ".", "resnet_head", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv2d", "(", "self", ".", "in_channels", ",", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "# nn.InstanceNorm2d(self.num_filter * map_num[0]),", "\n", "# BatchNorm(1, self.num_filter * map_num[0]),", "\n", "BatchNorm", "(", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ")", ",", "\n", "# nn.BatchNorm2d(self.num_filter * map_num[0]),", "\n", "act_fn", ",", "\n", "# nn.Dropout(p=0.2),", "\n", "# nn.MaxPool2d(kernel_size=2, stride=2, padding=0),", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "BatchNorm", "(", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ")", ",", "\n", "act_fn", ",", "\n", "# nn.Dropout(p=0.2),", "\n", ")", "\n", "\n", "self", ".", "resnet_down", "=", "ResNetV2StraightV2", "(", "num_filter", ",", "map_num", ",", "BatchNorm", ",", "block_nums", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "block", "=", "ResidualBlockWithDilatedV1", ",", "dropRate", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "is_sub_dropout", "=", "False", ")", "\n", "\n", "map_num_i", "=", "3", "\n", "self", ".", "bridge_1", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "1", ")", ",", "\n", "# conv_bn_act(self.num_filter * map_num[map_num_i], self.num_filter * map_num[map_num_i], act_fn),", "\n", ")", "\n", "self", ".", "bridge_2", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "bridge_3", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "5", ")", ",", "\n", ")", "\n", "self", ".", "bridge_4", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "8", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "3", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "bridge_5", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "12", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "7", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "4", ")", ",", "\n", ")", "\n", "self", ".", "bridge_6", "=", "nn", ".", "Sequential", "(", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "18", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "12", ")", ",", "\n", "dilation_conv_bn_act", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", ",", "\n", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "6", ")", ",", "\n", ")", "\n", "\n", "self", ".", "bridge_concate", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_filter", "*", "map_num", "[", "map_num_i", "]", "*", "6", ",", "self", ".", "num_filter", "*", "map_num", "[", "2", "]", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "# BatchNorm(GN_num, self.num_filter * map_num[4]),", "\n", "BatchNorm", "(", "self", ".", "num_filter", "*", "map_num", "[", "2", "]", ")", ",", "\n", "# nn.BatchNorm2d(self.num_filter * map_num[4]),", "\n", "act_fn", ",", "\n", ")", "\n", "self", ".", "out_regress", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_filter", "*", "map_num", "[", "2", "]", ",", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BatchNorm", "(", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "self", ".", "num_filter", "*", "map_num", "[", "0", "]", ",", "n_classes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "\n", ")", "\n", "\n", "\n", "self", ".", "segment_regress", "=", "nn", ".", "Linear", "(", "self", ".", "num_filter", "*", "map_num", "[", "2", "]", "*", "31", "*", "31", ",", "2", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2._initialize_weights": [[224, 231], ["network.DilatedResnetForFlatByFiducialPointsS2.modules", "isinstance", "isinstance", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_", "torch.xavier_normal_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "\t\t", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "\t\t\t", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "\t\t\t\t", "tinit", ".", "xavier_normal_", "(", "m", ".", "weight", ",", "gain", "=", "0.2", ")", "\n", "", "if", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "\t\t\t\t", "assert", "m", ".", "kernel_size", "[", "0", "]", "==", "m", ".", "kernel_size", "[", "1", "]", "\n", "tinit", ".", "xavier_normal_", "(", "m", ".", "weight", ",", "gain", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat": [[232, 234], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat"], ["", "", "", "def", "cat", "(", "self", ",", "trans", ",", "down", ")", ":", "\n", "\t\t", "return", "torch", ".", "cat", "(", "[", "trans", ",", "down", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.forward": [[235, 253], ["network.DilatedResnetForFlatByFiducialPointsS2.resnet_head", "network.DilatedResnetForFlatByFiducialPointsS2.resnet_down", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_1", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_2", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_3", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_4", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_5", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_6", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.DilatedResnetForFlatByFiducialPointsS2.bridge_concate", "network.DilatedResnetForFlatByFiducialPointsS2.out_regress", "network.DilatedResnetForFlatByFiducialPointsS2.segment_regress", "network.DilatedResnetForFlatByFiducialPointsS2.view", "x.size"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat"], ["", "def", "forward", "(", "self", ",", "x", ",", "is_softmax", ")", ":", "\n", "\t\t", "resnet_head", "=", "self", ".", "resnet_head", "(", "x", ")", "\n", "resnet_down", "=", "self", ".", "resnet_down", "(", "resnet_head", ")", "\n", "\n", "bridge_1", "=", "self", ".", "bridge_1", "(", "resnet_down", ")", "\n", "bridge_2", "=", "self", ".", "bridge_2", "(", "resnet_down", ")", "\n", "bridge_3", "=", "self", ".", "bridge_3", "(", "resnet_down", ")", "\n", "bridge_4", "=", "self", ".", "bridge_4", "(", "resnet_down", ")", "\n", "bridge_5", "=", "self", ".", "bridge_5", "(", "resnet_down", ")", "\n", "bridge_6", "=", "self", ".", "bridge_6", "(", "resnet_down", ")", "\n", "bridge_concate", "=", "torch", ".", "cat", "(", "[", "bridge_1", ",", "bridge_2", ",", "bridge_3", ",", "bridge_4", ",", "bridge_5", ",", "bridge_6", "]", ",", "dim", "=", "1", ")", "\n", "bridge", "=", "self", ".", "bridge_concate", "(", "bridge_concate", ")", "\n", "\n", "out_regress", "=", "self", ".", "out_regress", "(", "bridge", ")", "\n", "\n", "segment_regress", "=", "self", ".", "segment_regress", "(", "bridge", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n", "return", "out_regress", ",", "segment_regress", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.conv3x3": [[9, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_channels", ",", "out_channels", ",", "stride", "=", "1", ")", ":", "\n", "\t", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv_bn_act": [[12, 20], ["torch.Sequential", "torch.Conv2d", "BatchNorm"], "function", ["None"], ["", "def", "dilation_conv_bn_act", "(", "in_channels", ",", "out_dim", ",", "act_fn", ",", "BatchNorm", ",", "dilation", "=", "4", ")", ":", "\n", "\t", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ")", ",", "\n", "BatchNorm", "(", "out_dim", ")", ",", "\n", "# nn.BatchNorm2d(out_dim),", "\n", "act_fn", ",", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.dilation_conv": [[21, 26], ["torch.Sequential", "torch.Conv2d"], "function", ["None"], ["", "def", "dilation_conv", "(", "in_channels", ",", "out_dim", ",", "stride", "=", "1", ",", "dilation", "=", "4", ",", "groups", "=", "1", ")", ":", "\n", "\t", "model", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ")", ",", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.train.AverageMeter.__init__": [[240, 242], ["train.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.train.AverageMeter.reset": [[243, 248], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.train.AverageMeter.update": [[249, 254], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.train.train": [[40, 237], ["print", "print", "network.FiducialPoints", "loss.Losses", "utilsV4.FlatImg", "utils.FlatImg.loadTestData", "train.AverageMeter", "train.AverageMeter", "torch.optim.lr_scheduler.MultiStepLR", "divmod", "divmod", "print", "print", "open.close", "re.compile", "re.compile.search().group", "open", "open", "str", "str", "str", "list", "torch.device", "torch.cuda.set_device", "torch.nn.DataParallel", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.optim.SGD", "os.path.isfile", "utils.FlatImg.loadTrainData", "utils.FlatImg.loadValidateAndTestData", "len", "range", "map", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel", "warnings.warn", "exit", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.optim.Adam", "exit", "print", "torch.load", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.optim.Adam.load_state_dict", "print", "print", "print", "print", "time.time", "torch.nn.parallel.DistributedDataParallel.train", "enumerate", "utils.FlatImg.saveModel_epoch", "torch.nn.parallel.DistributedDataParallel.eval", "train.AverageMeter.reset", "train.AverageMeter.update", "print", "torch.nn.parallel.DistributedDataParallel.eval", "utils.FlatImg.validateOrTestModelV3", "exit", "re.compile.search", "str", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.optim.Adam.zero_grad", "utils.FlatImg.model", "loss_fun", "loss_fun2", "train.AverageMeter.update", "loss.backward", "torch.optim.Adam.step", "loss_list.append", "loss_fun2.item", "loss_l1.item", "loss_local.item", "time.time", "utils.FlatImg.validateOrTestModelV3", "utils.FlatImg.validateOrTestModelV3", "torch.optim.lr_scheduler.MultiStepLR.step", "torch.nn.parallel.DistributedDataParallel.eval", "utils.FlatImg.validateOrTestModelV3", "exit", "str", "str", "str", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "loss.item", "loss.item", "len", "print", "print", "print", "utils.FlatImg.evalData", "torch.nn.parallel.DistributedDataParallel.eval", "utils.FlatImg.evalModelGreyC1", "exit", "min", "max", "min", "max", "str", "str", "sum", "sum"], "function", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTestData", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTrainData", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadValidateAndTestData", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.test.train", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.saveModel_epoch", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.reset", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.update", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.update", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.evalData", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV3.FlatImg.evalModelGreyC1"], ["def", "train", "(", "args", ")", ":", "\n", "    ", "global", "_re_date", "\n", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "        ", "re_date", "=", "re", ".", "compile", "(", "r'\\d{4}-\\d{1,2}-\\d{1,2}'", ")", "\n", "_re_date", "=", "re_date", ".", "search", "(", "str", "(", "args", ".", "resume", ")", ")", ".", "group", "(", "0", ")", "\n", "reslut_file", "=", "open", "(", "path", "+", "'/'", "+", "date", "+", "date_time", "+", "' @'", "+", "_re_date", "+", "'_'", "+", "args", ".", "arch", "+", "'.log'", ",", "'w'", ")", "\n", "", "else", ":", "\n", "        ", "_re_date", "=", "None", "\n", "reslut_file", "=", "open", "(", "path", "+", "'/'", "+", "date", "+", "date_time", "+", "'_'", "+", "args", ".", "arch", "+", "'.log'", ",", "'w'", ")", "\n", "\n", "# Setup Dataloader", "\n", "", "data_path", "=", "str", "(", "args", ".", "data_path_train", ")", "+", "'/'", "\n", "data_path_validate", "=", "str", "(", "args", ".", "data_path_validate", ")", "+", "'/'", "\n", "data_path_test", "=", "str", "(", "args", ".", "data_path_test", ")", "+", "'/'", "\n", "\n", "print", "(", "args", ")", "\n", "print", "(", "args", ",", "file", "=", "reslut_file", ")", "\n", "\n", "n_classes", "=", "2", "\n", "\n", "model", "=", "FiducialPoints", "(", "n_classes", "=", "n_classes", ",", "num_filter", "=", "32", ",", "architecture", "=", "DilatedResnetForFlatByFiducialPointsS2", ",", "BatchNorm", "=", "'BN'", ",", "in_channels", "=", "3", ")", "#", "\n", "\n", "if", "args", ".", "parallel", "is", "not", "None", ":", "\n", "        ", "device_ids", "=", "list", "(", "map", "(", "int", ",", "args", ".", "parallel", ")", ")", "\n", "args", ".", "device", "=", "torch", ".", "device", "(", "'cuda:'", "+", "str", "(", "device_ids", "[", "0", "]", ")", ")", "\n", "\n", "# args.gpu = device_ids[0]", "\n", "# if args.gpu < 8:", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "device", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "device_ids", ")", "\n", "model", ".", "cuda", "(", "args", ".", "device", ")", "\n", "", "elif", "args", ".", "distributed", ":", "\n", "        ", "model", ".", "cuda", "(", ")", "\n", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ")", "\n", "", "else", ":", "\n", "        ", "warnings", ".", "warn", "(", "'no found gpu'", ")", "\n", "exit", "(", ")", "\n", "\n", "", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "0.0001", ",", "momentum", "=", "0.8", ",", "weight_decay", "=", "1e-12", ")", "\n", "", "elif", "args", ".", "optimizer", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "l_rate", ",", "weight_decay", "=", "1e-10", ")", "\n", "", "else", ":", "\n", "        ", "assert", "'please choice optimizer'", "\n", "exit", "(", "'error'", ")", "\n", "\n", "", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ":", "\n", "            ", "print", "(", "\"Loading model and optimizer from checkpoint '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ",", "map_location", "=", "args", ".", "device", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_state'", "]", ")", "\n", "print", "(", "\"Loaded checkpoint '{}' (epoch {})\"", "\n", ".", "format", "(", "args", ".", "resume", ".", "name", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"No checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "resume", ".", "name", ")", ")", "\n", "\n", "", "", "loss_fun_classes", "=", "Losses", "(", "classify_size_average", "=", "True", ",", "args_gpu", "=", "args", ".", "device", ")", "\n", "loss_fun", "=", "loss_fun_classes", ".", "loss_fn4_v5_r_4", "# *", "\n", "# loss_fun = loss_fun_classes.loss_fn4_v5_r_3   # *", "\n", "\n", "loss_fun2", "=", "loss_fun_classes", ".", "loss_fn_l1_loss", "\n", "\n", "FlatImg", "=", "utils", ".", "FlatImg", "(", "args", "=", "args", ",", "path", "=", "path", ",", "date", "=", "date", ",", "date_time", "=", "date_time", ",", "_re_date", "=", "_re_date", ",", "model", "=", "model", ",", "reslut_file", "=", "reslut_file", ",", "n_classes", "=", "n_classes", ",", "optimizer", "=", "optimizer", ",", "loss_fn", "=", "loss_fun", ",", "loss_fn2", "=", "loss_fun2", ",", "data_loader", "=", "PerturbedDatastsForFiducialPoints_pickle_color_v2_v2", ",", "data_path", "=", "data_path", ",", "data_path_validate", "=", "data_path_validate", ",", "data_path_test", "=", "data_path_test", ",", "data_preproccess", "=", "False", ")", "# , valloaderSet=valloaderSet, v_loaderSet=v_loaderSet", "\n", "''' load data '''", "\n", "FlatImg", ".", "loadTestData", "(", ")", "\n", "\n", "train_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "FlatImg", ".", "lambda_loss", "=", "1", "\n", "FlatImg", ".", "lambda_loss_segment", "=", "0.01", "\n", "FlatImg", ".", "lambda_loss_a", "=", "0.1", "\n", "FlatImg", ".", "lambda_loss_b", "=", "0.001", "\n", "FlatImg", ".", "lambda_loss_c", "=", "0.01", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "FlatImg", ".", "optimizer", ",", "milestones", "=", "[", "40", ",", "90", ",", "150", ",", "200", "]", ",", "gamma", "=", "0.5", ")", "\n", "\n", "epoch_start", "=", "checkpoint", "[", "'epoch'", "]", "if", "args", ".", "resume", "is", "not", "None", "else", "0", "\n", "\n", "if", "args", ".", "schema", "==", "'train'", ":", "\n", "        ", "trainloader", "=", "FlatImg", ".", "loadTrainData", "(", "data_split", "=", "'train'", ",", "is_shuffle", "=", "True", ")", "\n", "FlatImg", ".", "loadValidateAndTestData", "(", "is_shuffle", "=", "True", ")", "\n", "trainloader_len", "=", "len", "(", "trainloader", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epoch_start", ",", "args", ".", "n_epoch", ")", ":", "\n", "\n", "            ", "print", "(", "'* lambda_loss :'", "+", "str", "(", "FlatImg", ".", "lambda_loss", ")", "+", "'\\t'", "+", "'learning_rate :'", "+", "str", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "print", "(", "'* lambda_loss :'", "+", "str", "(", "FlatImg", ".", "lambda_loss", ")", "+", "'\\t'", "+", "'learning_rate :'", "+", "str", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ",", "file", "=", "reslut_file", ")", "\n", "\n", "begin_train", "=", "time", ".", "time", "(", ")", "\n", "loss_segment_list", "=", "0", "\n", "loss_l1_list", "=", "0", "\n", "loss_local_list", "=", "0", "\n", "loss_edge_list", "=", "0", "\n", "loss_rectangles_list", "=", "0", "\n", "loss_list", "=", "[", "]", "\n", "\n", "model", ".", "train", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ",", "segment", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "\n", "                ", "images", "=", "Variable", "(", "images", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", "args", ".", "device", ")", ")", "\n", "segment", "=", "Variable", "(", "segment", ".", "cuda", "(", "args", ".", "device", ")", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", ",", "outputs_segment", "=", "FlatImg", ".", "model", "(", "images", ",", "is_softmax", "=", "False", ")", "\n", "\n", "loss_l1", ",", "loss_local", ",", "loss_edge", ",", "loss_rectangles", "=", "loss_fun", "(", "outputs", ",", "labels", ",", "size_average", "=", "True", ")", "\n", "loss_segment", "=", "loss_fun2", "(", "outputs_segment", ",", "segment", ")", "\n", "loss", "=", "FlatImg", ".", "lambda_loss", "*", "(", "loss_l1", "+", "loss_local", "*", "FlatImg", ".", "lambda_loss_a", "+", "loss_edge", "*", "FlatImg", ".", "lambda_loss_b", "+", "loss_rectangles", "*", "FlatImg", ".", "lambda_loss_c", ")", "+", "FlatImg", ".", "lambda_loss_segment", "*", "loss_segment", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "loss_list", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "loss_segment_list", "+=", "loss_segment", ".", "item", "(", ")", "\n", "loss_l1_list", "+=", "loss_l1", ".", "item", "(", ")", "\n", "loss_local_list", "+=", "loss_local", ".", "item", "(", ")", "\n", "# loss_edge_list += loss_edge.item()", "\n", "# loss_rectangles_list += loss_rectangles.item()", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "args", ".", "print_freq", "==", "0", "or", "(", "i", "+", "1", ")", "==", "trainloader_len", ":", "\n", "                    ", "list_len", "=", "len", "(", "loss_list", ")", "\n", "print", "(", "'[{0}][{1}/{2}]\\t\\t'", "\n", "'[{3:.2f} {4:.4f} {5:.2f}]\\t'", "\n", "'[l1:{6:.4f} l:{7:.4f} e:{8:.4f} r:{9:.4f} s:{10:.4f}]\\t'", "\n", "'{loss.avg:.4f}'", ".", "format", "(", "\n", "epoch", "+", "1", ",", "i", "+", "1", ",", "trainloader_len", ",", "\n", "min", "(", "loss_list", ")", ",", "sum", "(", "loss_list", ")", "/", "list_len", ",", "max", "(", "loss_list", ")", ",", "\n", "loss_l1_list", "/", "list_len", ",", "loss_local_list", "/", "list_len", ",", "loss_edge_list", "/", "list_len", ",", "loss_rectangles_list", "/", "list_len", ",", "loss_segment_list", "/", "list_len", ",", "\n", "loss", "=", "losses", ")", ")", "\n", "print", "(", "'[{0}][{1}/{2}]\\t\\t'", "\n", "'[{3:.2f} {4:.4f} {5:.2f}]\\t'", "\n", "'[l1:{6:.4f} l:{7:.4f} e:{8:.4f} r:{9:.4f} s:{10:.4f}]\\t'", "\n", "'{loss.avg:.4f}'", ".", "format", "(", "\n", "epoch", "+", "1", ",", "i", "+", "1", ",", "trainloader_len", ",", "\n", "min", "(", "loss_list", ")", ",", "sum", "(", "loss_list", ")", "/", "list_len", ",", "max", "(", "loss_list", ")", ",", "\n", "loss_l1_list", "/", "list_len", ",", "loss_local_list", "/", "list_len", ",", "loss_edge_list", "/", "list_len", ",", "loss_rectangles_list", "/", "list_len", ",", "loss_segment_list", "/", "list_len", ",", "\n", "loss", "=", "losses", ")", ",", "file", "=", "reslut_file", ")", "\n", "\n", "del", "loss_list", "[", ":", "]", "\n", "loss_segment_list", "=", "0", "\n", "loss_l1_list", "=", "0", "\n", "loss_local_list", "=", "0", "\n", "loss_edge_list", "=", "0", "\n", "loss_rectangles_list", "=", "0", "\n", "", "", "FlatImg", ".", "saveModel_epoch", "(", "epoch", ")", "# FlatImg.saveModel(epoch, save_path=path)", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "trian_t", "=", "time", ".", "time", "(", ")", "-", "begin_train", "\n", "losses", ".", "reset", "(", ")", "\n", "\n", "train_time", ".", "update", "(", "trian_t", ")", "\n", "\n", "try", ":", "\n", "                ", "FlatImg", ".", "validateOrTestModelV3", "(", "epoch", ",", "trian_t", ",", "validate_test", "=", "'v_l4'", ")", "\n", "FlatImg", ".", "validateOrTestModelV3", "(", "epoch", ",", "0", ",", "validate_test", "=", "'t'", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "' Error: validate or test'", ")", "\n", "\n", "", "try", ":", "\n", "                ", "scheduler", ".", "step", "(", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "\n", "", "print", "(", "'\\n'", ")", "\n", "", "", "elif", "args", ".", "schema", "==", "'validate'", ":", "\n", "        ", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "if", "args", ".", "resume", "is", "not", "None", "else", "0", "\n", "model", ".", "eval", "(", ")", "\n", "FlatImg", ".", "validateOrTestModelV3", "(", "epoch", ",", "0", ",", "validate_test", "=", "'t_all'", ")", "\n", "exit", "(", ")", "\n", "", "elif", "args", ".", "schema", "==", "'test'", ":", "\n", "        ", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "if", "args", ".", "resume", "is", "not", "None", "else", "0", "\n", "model", ".", "eval", "(", ")", "\n", "FlatImg", ".", "validateOrTestModelV3", "(", "epoch", ",", "0", ",", "validate_test", "=", "'t_all'", ")", "\n", "exit", "(", ")", "\n", "", "elif", "args", ".", "schema", "==", "'eval'", ":", "\n", "        ", "FlatImg", ".", "evalData", "(", "is_shuffle", "=", "True", ")", "\n", "\n", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "if", "args", ".", "resume", "is", "not", "None", "else", "0", "\n", "model", ".", "eval", "(", ")", "\n", "FlatImg", ".", "evalModelGreyC1", "(", "epoch", ",", "is_scaling", "=", "False", ")", "\n", "exit", "(", ")", "\n", "\n", "", "m", ",", "s", "=", "divmod", "(", "train_time", ".", "sum", ",", "60", ")", "\n", "h", ",", "m", "=", "divmod", "(", "m", ",", "60", ")", "\n", "print", "(", "\"All Train Time : %02d:%02d:%02d\\n\"", "%", "(", "h", ",", "m", ",", "s", ")", ")", "\n", "print", "(", "\"All Train Time : %02d:%02d:%02d\\n\"", "%", "(", "h", ",", "m", ",", "s", ")", ",", "file", "=", "reslut_file", ")", "\n", "\n", "reslut_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.createThinPlateSplineShapeTransformer.__init__": [[11, 26], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.Module.__init__", "tpsV2.estimateTransformation"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "I_r_size", ",", "fiducial_num", "=", "[", "31", ",", "31", "]", ",", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ")", ":", "\n", "        ", "\"\"\"\n        input:\n            batch_I: Batch Input Image [batch_size x I_channel_num x I_height x I_width]\n            I_r_size : (height, width) of the rectified image I_r\n            fiducial_num : the number of fiducial_points\n        output:\n            batch_I_r: rectified image [batch_size x I_channel_num x I_r_height x I_r_width]\n        \"\"\"", "\n", "super", "(", "createThinPlateSplineShapeTransformer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "f_row_num", ",", "self", ".", "f_col_num", "=", "fiducial_num", "\n", "self", ".", "F", "=", "self", ".", "f_row_num", "*", "self", ".", "f_col_num", "\n", "self", ".", "I_r_size", "=", "I_r_size", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "estimateTransformation", "=", "estimateTransformation", "(", "self", ".", "F", ",", "self", ".", "I_r_size", ",", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.createThinPlateSplineShapeTransformer.forward": [[27, 40], ["tpsV2.createThinPlateSplineShapeTransformer.estimateTransformation.build_P_prime", "tpsV2.createThinPlateSplineShapeTransformer.reshape", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "build_P_prime_reshape.transpose().transpose.transpose().transpose.transpose().transpose", "torch.interpolate", "torch.interpolate", "torch.interpolate", "map.transpose().transpose.transpose().transpose.transpose().transpose", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "tpsV2.createThinPlateSplineShapeTransformer.size", "build_P_prime_reshape.transpose().transpose.transpose().transpose.transpose", "map.transpose().transpose.transpose().transpose.transpose"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation.build_P_prime"], ["", "def", "forward", "(", "self", ",", "batch_I", ",", "batch_F", ",", "shap_new", "=", "None", ")", ":", "\n", "        ", "build_P_prime", "=", "self", ".", "estimateTransformation", ".", "build_P_prime", "(", "batch_F", ")", "\n", "build_P_prime_reshape", "=", "build_P_prime", ".", "reshape", "(", "[", "build_P_prime", ".", "size", "(", "0", ")", ",", "self", ".", "I_r_size", "[", "0", "]", ",", "self", ".", "I_r_size", "[", "1", "]", ",", "2", "]", ")", "\n", "\n", "if", "shap_new", "is", "None", ":", "\n", "            ", "batch_I_r", "=", "F", ".", "grid_sample", "(", "batch_I", ",", "build_P_prime_reshape", ",", "padding_mode", "=", "'border'", ",", "align_corners", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "build_P_prime_reshape", "=", "build_P_prime_reshape", ".", "transpose", "(", "2", ",", "3", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "map", "=", "F", ".", "interpolate", "(", "build_P_prime_reshape", ",", "shap_new", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "map", "=", "map", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "batch_I_r", "=", "F", ".", "grid_sample", "(", "batch_I", ",", "map", ",", "padding_mode", "=", "'border'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "return", "batch_I_r", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation.__init__": [[43, 53], ["torch.Module.__init__", "tpsV2.estimateTransformation._build_C", "tpsV2.estimateTransformation._build_P", "tpsV2.estimateTransformation.register_buffer", "tpsV2.estimateTransformation.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "tpsV2.estimateTransformation._build_inv_delta_C", "tpsV2.estimateTransformation._build_P_hat"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_C", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_P", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_inv_delta_C", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_P_hat"], ["    ", "def", "__init__", "(", "self", ",", "F", ",", "I_r_size", ",", "device", ")", ":", "\n", "        ", "super", "(", "estimateTransformation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "1e-6", "\n", "self", ".", "I_r_height", ",", "self", ".", "I_r_width", "=", "I_r_size", "\n", "self", ".", "F", "=", "F", "\n", "self", ".", "C", "=", "self", ".", "_build_C", "(", "self", ".", "F", ")", "\n", "self", ".", "P", "=", "self", ".", "_build_P", "(", "self", ".", "I_r_width", ",", "self", ".", "I_r_height", ")", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "register_buffer", "(", "\"inv_delta_C\"", ",", "torch", ".", "tensor", "(", "self", ".", "_build_inv_delta_C", "(", "self", ".", "F", ",", "self", ".", "C", ")", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "self", ".", "device", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"P_hat\"", ",", "torch", ".", "tensor", "(", "self", ".", "_build_P_hat", "(", "self", ".", "F", ",", "self", ".", "C", ",", "self", ".", "P", ")", ",", "dtype", "=", "torch", ".", "float64", ",", "device", "=", "self", ".", "device", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_C": [[54, 58], ["numpy.stack().reshape", "numpy.stack", "complex", "complex"], "methods", ["None"], ["", "def", "_build_C", "(", "self", ",", "F", ")", ":", "\n", "        ", "im_x", ",", "im_y", "=", "np", ".", "mgrid", "[", "-", "1", ":", "1", ":", "complex", "(", "31", ")", ",", "-", "1", ":", "1", ":", "complex", "(", "31", ")", "]", "\n", "C", "=", "np", ".", "stack", "(", "(", "im_y", ",", "im_x", ")", ",", "axis", "=", "2", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_inv_delta_C": [[59, 78], ["numpy.zeros", "range", "numpy.fill_diagonal", "numpy.concatenate", "numpy.linalg.inv", "range", "numpy.log", "numpy.linalg.norm", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.ones", "numpy.zeros", "numpy.ones", "numpy.zeros", "numpy.transpose"], "methods", ["None"], ["", "def", "_build_inv_delta_C", "(", "self", ",", "F", ",", "C", ")", ":", "\n", "        ", "hat_C", "=", "np", ".", "zeros", "(", "(", "F", ",", "F", ")", ",", "dtype", "=", "float", ")", "# F x F", "\n", "for", "i", "in", "range", "(", "0", ",", "F", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "F", ")", ":", "\n", "                ", "r", "=", "np", ".", "linalg", ".", "norm", "(", "C", "[", "i", "]", "-", "C", "[", "j", "]", ")", "\n", "hat_C", "[", "i", ",", "j", "]", "=", "r", "\n", "hat_C", "[", "j", ",", "i", "]", "=", "r", "\n", "", "", "np", ".", "fill_diagonal", "(", "hat_C", ",", "1", ")", "\n", "hat_C", "=", "(", "hat_C", "**", "2", ")", "*", "np", ".", "log", "(", "hat_C", "**", "2", ")", "\n", "delta_C", "=", "np", ".", "concatenate", "(", "# F+3 x F+3", "\n", "[", "\n", "np", ".", "concatenate", "(", "[", "np", ".", "ones", "(", "(", "F", ",", "1", ")", ")", ",", "C", ",", "hat_C", "]", ",", "axis", "=", "1", ")", ",", "# F x F+3", "\n", "np", ".", "concatenate", "(", "[", "np", ".", "zeros", "(", "(", "1", ",", "3", ")", ")", ",", "np", ".", "ones", "(", "(", "1", ",", "F", ")", ")", "]", ",", "axis", "=", "1", ")", ",", "# 1 x F+3", "\n", "np", ".", "concatenate", "(", "[", "np", ".", "zeros", "(", "(", "2", ",", "3", ")", ")", ",", "np", ".", "transpose", "(", "C", ")", "]", ",", "axis", "=", "1", ")", ",", "# 2 x F+3", "\n", "]", ",", "\n", "axis", "=", "0", "\n", ")", "\n", "inv_delta_C", "=", "np", ".", "linalg", ".", "inv", "(", "delta_C", ")", "\n", "return", "inv_delta_C", "# F+3 x F+3", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_P": [[79, 87], ["numpy.stack", "numpy.stack.reshape", "numpy.meshgrid", "numpy.arange", "numpy.arange"], "methods", ["None"], ["", "def", "_build_P", "(", "self", ",", "I_r_width", ",", "I_r_height", ")", ":", "\n", "        ", "I_r_grid_x", "=", "(", "np", ".", "arange", "(", "-", "I_r_width", ",", "I_r_width", ",", "2", ")", "+", "1.0", ")", "/", "I_r_width", "# self.I_r_width", "\n", "I_r_grid_y", "=", "(", "np", ".", "arange", "(", "-", "I_r_height", ",", "I_r_height", ",", "2", ")", "+", "1.0", ")", "/", "I_r_height", "# self.I_r_height", "\n", "P", "=", "np", ".", "stack", "(", "# self.I_r_width x self.I_r_height x 2", "\n", "np", ".", "meshgrid", "(", "I_r_grid_x", ",", "I_r_grid_y", ")", ",", "\n", "axis", "=", "2", "\n", ")", "\n", "return", "P", ".", "reshape", "(", "[", "-", "1", ",", "2", "]", ")", "# n (= self.I_r_width x self.I_r_height) x 2", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation._build_P_hat": [[88, 97], ["numpy.tile", "numpy.expand_dims", "numpy.linalg.norm", "numpy.concatenate", "numpy.expand_dims", "numpy.multiply", "numpy.square", "numpy.log", "numpy.ones"], "methods", ["None"], ["", "def", "_build_P_hat", "(", "self", ",", "F", ",", "C", ",", "P", ")", ":", "\n", "        ", "n", "=", "P", ".", "shape", "[", "0", "]", "# n (= self.I_r_width x self.I_r_height)", "\n", "P_tile", "=", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "P", ",", "axis", "=", "1", ")", ",", "(", "1", ",", "F", ",", "1", ")", ")", "# n x 2 -> n x 1 x 2 -> n x F x 2", "\n", "C_tile", "=", "np", ".", "expand_dims", "(", "C", ",", "axis", "=", "0", ")", "# 1 x F x 2", "\n", "P_diff", "=", "P_tile", "-", "C_tile", "# n x F x 2", "\n", "rbf_norm", "=", "np", ".", "linalg", ".", "norm", "(", "P_diff", ",", "ord", "=", "2", ",", "axis", "=", "2", ",", "keepdims", "=", "False", ")", "# n x F", "\n", "rbf", "=", "2", "*", "np", ".", "multiply", "(", "np", ".", "square", "(", "rbf_norm", ")", ",", "np", ".", "log", "(", "rbf_norm", "+", "self", ".", "eps", ")", ")", "# n x F", "\n", "P_hat", "=", "np", ".", "concatenate", "(", "[", "np", ".", "ones", "(", "(", "n", ",", "1", ")", ")", ",", "P", ",", "rbf", "]", ",", "axis", "=", "1", ")", "\n", "return", "P_hat", "# n x F+3", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.tpsV2.estimateTransformation.build_P_prime": [[98, 105], ["batch_C_prime.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double().to", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros().double", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.network.DilatedResnetForFlatByFiducialPointsS2.cat"], ["", "def", "build_P_prime", "(", "self", ",", "batch_C_prime", ")", ":", "\n", "        ", "batch_size", "=", "batch_C_prime", ".", "size", "(", "0", ")", "\n", "batch_C_prime_with_zeros", "=", "torch", ".", "cat", "(", "(", "batch_C_prime", ",", "torch", ".", "zeros", "(", "\n", "batch_size", ",", "3", ",", "2", ")", ".", "double", "(", ")", ".", "to", "(", "self", ".", "device", ")", ")", ",", "dim", "=", "1", ")", "# batch_size x F+3 x 2", "\n", "batch_T", "=", "torch", ".", "matmul", "(", "self", ".", "inv_delta_C", ",", "batch_C_prime_with_zeros", ")", "# batch_size x F+3 x 2", "\n", "batch_P_prime", "=", "torch", ".", "matmul", "(", "self", ".", "P_hat", ",", "batch_T", ")", "# batch_size x n x 2", "\n", "return", "batch_P_prime", "# batch_size x n x 2", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.__init__": [[47, 68], ["torch.device", "tpsV2.createThinPlateSplineShapeTransformer"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "date", ",", "date_time", ",", "_re_date", ",", "data_path_validate", ",", "data_path_test", ",", "batch_size", ",", "preproccess", "=", "False", ",", "postprocess", "=", "'tps_gpu'", ",", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "date", "=", "date", "\n", "self", ".", "date_time", "=", "date_time", "\n", "self", ".", "_re_date", "=", "_re_date", "\n", "self", ".", "preproccess", "=", "preproccess", "\n", "self", ".", "data_path_validate", "=", "data_path_validate", "\n", "self", ".", "data_path_test", "=", "data_path_test", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "col_gap", "=", "0", "#4", "\n", "self", ".", "row_gap", "=", "self", ".", "col_gap", "# col_gap + 1 if col_gap < 6 else col_gap", "\n", "# fiducial_point_gaps = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60]  # POINTS NUM: 61, 31, 21, 16, 13, 11, 7, 6, 5, 4, 3, 2", "\n", "self", ".", "fiducial_point_gaps", "=", "[", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "10", ",", "15", ",", "30", "]", "# POINTS NUM: 31, 16, 11, 7, 6, 4, 3, 2", "\n", "self", ".", "fiducial_point_num", "=", "[", "31", ",", "16", ",", "11", ",", "7", ",", "6", ",", "4", ",", "3", ",", "2", "]", "\n", "self", ".", "fiducial_num", "=", "self", ".", "fiducial_point_num", "[", "self", ".", "col_gap", "]", ",", "self", ".", "fiducial_point_num", "[", "self", ".", "row_gap", "]", "\n", "map_shape", "=", "(", "320", ",", "320", ")", "\n", "self", ".", "postprocess", "=", "postprocess", "\n", "\n", "if", "self", ".", "postprocess", "==", "'tps'", ":", "\n", "            ", "self", ".", "tps", "=", "createThinPlateSplineShapeTransformer", "(", "map_shape", ",", "fiducial_num", "=", "self", ".", "fiducial_num", ",", "device", "=", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.location_mark": [[70, 76], ["location.astype().reshape", "cv2.circle", "location.astype", "math.ceil", "math.ceil"], "methods", ["None"], ["", "", "def", "location_mark", "(", "self", ",", "img", ",", "location", ",", "color", "=", "(", "0", ",", "0", ",", "255", ")", ")", ":", "\n", "        ", "stepSize", "=", "0", "\n", "for", "l", "in", "location", ".", "astype", "(", "np", ".", "int64", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", ":", "\n", "            ", "cv2", ".", "circle", "(", "img", ",", "\n", "(", "l", "[", "0", "]", "+", "math", ".", "ceil", "(", "stepSize", "/", "2", ")", ",", "l", "[", "1", "]", "+", "math", ".", "ceil", "(", "stepSize", "/", "2", ")", ")", ",", "3", ",", "color", ",", "-", "1", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByfiducial_TPS": [[77, 131], ["time.time", "torch.tensor", "utilsV4.SaveFlatImage.tps", "time.time", "print", "rectified[].cpu().numpy().transpose", "flat_img.astype.astype.astype", "utilsV4.SaveFlatImage.location_mark", "im_name.replace.replace.replace", "cv2.imwrite", "cv2.imwrite", "cv2.imread", "cv2.resize", "torch.tensor.double().to", "fiducial_points_.to", "list", "os.path.join", "os.path.join", "perturbed_img.transpose.transpose.copy", "os.path.exists", "os.makedirs", "im_name.replace.replace.replace", "cv2.imread", "perturbed_img.transpose.transpose.transpose", "str", "rectified[].cpu().numpy", "str", "str", "perturbed_img.transpose.transpose.transpose", "torch.tensor", "torch.tensor.double", "fiducial_points.transpose().reshape", "rectified[].cpu", "fiducial_points.transpose"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.location_mark"], ["", "def", "flatByfiducial_TPS", "(", "self", ",", "fiducial_points", ",", "segment", ",", "im_name", ",", "epoch", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "'''\n        flat_shap controls the output image resolution\n        '''", "\n", "# if (scheme == 'test' or scheme == 'eval') and is_scaling:", "\n", "#     pass", "\n", "# else:", "\n", "if", "scheme", "==", "'test'", "or", "scheme", "==", "'eval'", ":", "\n", "            ", "perturbed_img_path", "=", "self", ".", "data_path_test", "+", "im_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "perturbed_img", "=", "cv2", ".", "resize", "(", "perturbed_img", ",", "(", "960", ",", "1024", ")", ")", "\n", "", "elif", "scheme", "==", "'validate'", "and", "perturbed_img", "is", "None", ":", "\n", "            ", "RGB_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "perturbed_img_path", "=", "self", ".", "data_path_validate", "+", "'/png/'", "+", "RGB_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "", "elif", "perturbed_img", "is", "not", "None", ":", "\n", "            ", "perturbed_img", "=", "perturbed_img", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "", "fiducial_points", "=", "fiducial_points", "/", "[", "992", ",", "992", "]", "\n", "perturbed_img_shape", "=", "perturbed_img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "sshape", "=", "fiducial_points", "[", ":", ":", "self", ".", "fiducial_point_gaps", "[", "self", ".", "row_gap", "]", ",", ":", ":", "self", ".", "fiducial_point_gaps", "[", "self", ".", "col_gap", "]", ",", ":", "]", "\n", "flat_shap", "=", "segment", "*", "[", "self", ".", "fiducial_point_gaps", "[", "self", ".", "col_gap", "]", ",", "self", ".", "fiducial_point_gaps", "[", "self", ".", "row_gap", "]", "]", "*", "[", "self", ".", "fiducial_point_num", "[", "self", ".", "col_gap", "]", ",", "self", ".", "fiducial_point_num", "[", "self", ".", "row_gap", "]", "]", "\n", "# flat_shap = perturbed_img_shape", "\n", "time_1", "=", "time", ".", "time", "(", ")", "\n", "perturbed_img_", "=", "torch", ".", "tensor", "(", "perturbed_img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "[", "None", ",", ":", "]", ")", "\n", "\n", "fiducial_points_", "=", "(", "torch", ".", "tensor", "(", "fiducial_points", ".", "transpose", "(", "1", ",", "0", ",", "2", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", ")", "[", "None", ",", ":", "]", "-", "0.5", ")", "*", "2", "\n", "rectified", "=", "self", ".", "tps", "(", "perturbed_img_", ".", "double", "(", ")", ".", "to", "(", "self", ".", "device", ")", ",", "fiducial_points_", ".", "to", "(", "self", ".", "device", ")", ",", "list", "(", "flat_shap", ")", ")", "\n", "time_2", "=", "time", ".", "time", "(", ")", "\n", "time_interval", "=", "time_2", "-", "time_1", "\n", "print", "(", "'TPS time: '", "+", "str", "(", "time_interval", ")", ")", "\n", "\n", "flat_img", "=", "rectified", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "'''save'''", "\n", "flat_img", "=", "flat_img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "i_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", "+", "' @'", "+", "self", ".", "_re_date", ",", "\n", "str", "(", "epoch", ")", ")", "if", "self", ".", "_re_date", "is", "not", "None", "else", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "\n", "self", ".", "date", "+", "self", ".", "date_time", ",", "\n", "str", "(", "epoch", ")", ")", "\n", "''''''", "\n", "\n", "perturbed_img_mark", "=", "self", ".", "location_mark", "(", "perturbed_img", ".", "copy", "(", ")", ",", "sshape", "*", "perturbed_img_shape", "[", ":", ":", "-", "1", "]", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "if", "scheme", "==", "'test'", ":", "\n", "            ", "i_path", "+=", "'/test'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "\n", "", "im_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "cv2", ".", "imwrite", "(", "i_path", "+", "'/mark_'", "+", "im_name", ",", "perturbed_img_mark", ")", "\n", "cv2", ".", "imwrite", "(", "i_path", "+", "'/'", "+", "im_name", ",", "flat_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByfiducial_interpolation": [[132, 200], ["tshape.reshape.reshape.reshape", "sshape.reshape.reshape.reshape", "time.time", "scipy.interpolate.griddata().astype", "cv2.remap", "time.time", "print", "flat_img.astype.astype.astype", "utilsV4.SaveFlatImage.location_mark", "numpy.zeros_like", "numpy.concatenate", "im_name.replace.replace.replace", "cv2.imwrite", "cv2.imread", "cv2.resize", "numpy.stack", "os.path.join", "os.path.join", "perturbed_img.transpose.transpose.copy", "os.path.exists", "os.makedirs", "im_name.replace.replace.replace", "cv2.imread", "scipy.interpolate.griddata", "str", "str", "str", "perturbed_img.transpose.transpose.transpose", "complex", "complex", "complex", "complex"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.location_mark"], ["", "def", "flatByfiducial_interpolation", "(", "self", ",", "fiducial_points", ",", "segment", ",", "im_name", ",", "epoch", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "''''''", "\n", "if", "scheme", "==", "'test'", "or", "scheme", "==", "'eval'", ":", "\n", "            ", "perturbed_img_path", "=", "self", ".", "data_path_test", "+", "im_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "perturbed_img", "=", "cv2", ".", "resize", "(", "perturbed_img", ",", "(", "960", ",", "1024", ")", ")", "\n", "", "elif", "scheme", "==", "'validate'", "and", "perturbed_img", "is", "None", ":", "\n", "            ", "RGB_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "perturbed_img_path", "=", "self", ".", "data_path_validate", "+", "'/png/'", "+", "RGB_name", "\n", "perturbed_img", "=", "cv2", ".", "imread", "(", "perturbed_img_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "", "elif", "perturbed_img", "is", "not", "None", ":", "\n", "            ", "perturbed_img", "=", "perturbed_img", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "\n", "", "fiducial_points", "=", "fiducial_points", "/", "[", "992", ",", "992", "]", "*", "[", "960", ",", "1024", "]", "\n", "col_gap", "=", "2", "#4", "\n", "row_gap", "=", "col_gap", "# col_gap + 1 if col_gap < 6 else col_gap", "\n", "# fiducial_point_gaps = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60]  # POINTS NUM: 61, 31, 21, 16, 13, 11, 7, 6, 5, 4, 3, 2", "\n", "fiducial_point_gaps", "=", "[", "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "10", ",", "15", ",", "30", "]", "# POINTS NUM: 31, 16, 11, 7, 6, 4, 3, 2", "\n", "sshape", "=", "fiducial_points", "[", ":", ":", "fiducial_point_gaps", "[", "row_gap", "]", ",", ":", ":", "fiducial_point_gaps", "[", "col_gap", "]", ",", ":", "]", "\n", "segment_h", ",", "segment_w", "=", "segment", "*", "[", "fiducial_point_gaps", "[", "col_gap", "]", ",", "fiducial_point_gaps", "[", "row_gap", "]", "]", "\n", "fiducial_points_row", ",", "fiducial_points_col", "=", "sshape", ".", "shape", "[", ":", "2", "]", "\n", "\n", "im_x", ",", "im_y", "=", "np", ".", "mgrid", "[", "0", ":", "(", "fiducial_points_col", "-", "1", ")", ":", "complex", "(", "fiducial_points_col", ")", ",", "\n", "0", ":", "(", "fiducial_points_row", "-", "1", ")", ":", "complex", "(", "fiducial_points_row", ")", "]", "\n", "\n", "tshape", "=", "np", ".", "stack", "(", "(", "im_x", ",", "im_y", ")", ",", "axis", "=", "2", ")", "*", "[", "segment_w", ",", "segment_h", "]", "\n", "\n", "tshape", "=", "tshape", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "sshape", "=", "sshape", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "\n", "output_shape", "=", "(", "segment_h", "*", "(", "fiducial_points_col", "-", "1", ")", ",", "segment_w", "*", "(", "fiducial_points_row", "-", "1", ")", ")", "\n", "grid_x", ",", "grid_y", "=", "np", ".", "mgrid", "[", "0", ":", "output_shape", "[", "0", "]", "-", "1", ":", "complex", "(", "output_shape", "[", "0", "]", ")", ",", "\n", "0", ":", "output_shape", "[", "1", "]", "-", "1", ":", "complex", "(", "output_shape", "[", "1", "]", ")", "]", "\n", "time_1", "=", "time", ".", "time", "(", ")", "\n", "# grid_z = griddata(tshape, sshape, (grid_y, grid_x), method='cubic').astype('float32')", "\n", "grid_", "=", "griddata", "(", "tshape", ",", "sshape", ",", "(", "grid_y", ",", "grid_x", ")", ",", "method", "=", "'linear'", ")", ".", "astype", "(", "'float32'", ")", "\n", "flat_img", "=", "cv2", ".", "remap", "(", "perturbed_img", ",", "grid_", "[", ":", ",", ":", ",", "0", "]", ",", "grid_", "[", ":", ",", ":", ",", "1", "]", ",", "cv2", ".", "INTER_CUBIC", ")", "\n", "time_2", "=", "time", ".", "time", "(", ")", "\n", "time_interval", "=", "time_2", "-", "time_1", "\n", "print", "(", "'Interpolation time: '", "+", "str", "(", "time_interval", ")", ")", "\n", "''''''", "\n", "flat_img", "=", "flat_img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "i_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", "+", "' @'", "+", "self", ".", "_re_date", ",", "\n", "str", "(", "epoch", ")", ")", "if", "self", ".", "_re_date", "is", "not", "None", "else", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "\n", "self", ".", "date", "+", "self", ".", "date_time", ",", "\n", "str", "(", "epoch", ")", ")", "\n", "''''''", "\n", "perturbed_img_mark", "=", "self", ".", "location_mark", "(", "perturbed_img", ".", "copy", "(", ")", ",", "sshape", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "shrink_paddig", "=", "0", "# 2 * edge_padding", "\n", "x_start", ",", "x_end", ",", "y_start", ",", "y_end", "=", "shrink_paddig", ",", "segment_h", "*", "(", "fiducial_points_col", "-", "1", ")", "-", "shrink_paddig", ",", "shrink_paddig", ",", "segment_w", "*", "(", "fiducial_points_row", "-", "1", ")", "-", "shrink_paddig", "\n", "\n", "x_", "=", "(", "perturbed_img_mark", ".", "shape", "[", "0", "]", "-", "(", "x_end", "-", "x_start", ")", ")", "//", "2", "\n", "y_", "=", "(", "perturbed_img_mark", ".", "shape", "[", "1", "]", "-", "(", "y_end", "-", "y_start", ")", ")", "//", "2", "\n", "\n", "flat_img_new", "=", "np", ".", "zeros_like", "(", "perturbed_img_mark", ")", "\n", "flat_img_new", "[", "x_", ":", "perturbed_img_mark", ".", "shape", "[", "0", "]", "-", "x_", ",", "y_", ":", "perturbed_img_mark", ".", "shape", "[", "1", "]", "-", "y_", "]", "=", "flat_img", "\n", "img_figure", "=", "np", ".", "concatenate", "(", "\n", "(", "perturbed_img_mark", ",", "flat_img_new", ")", ",", "axis", "=", "1", ")", "\n", "\n", "if", "scheme", "==", "'test'", ":", "\n", "            ", "i_path", "+=", "'/test'", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "\n", "", "im_name", "=", "im_name", ".", "replace", "(", "'gw'", ",", "'png'", ")", "\n", "cv2", ".", "imwrite", "(", "i_path", "+", "'/'", "+", "im_name", ",", "img_figure", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2": [[201, 210], ["range", "utilsV4.SaveFlatImage.flatByfiducial_TPS", "utilsV4.SaveFlatImage.flatByfiducial_interpolation", "print", "exit"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByfiducial_TPS", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByfiducial_interpolation"], ["", "def", "flatByRegressWithClassiy_multiProcessV2", "(", "self", ",", "pred_fiducial_points", ",", "pred_segment", ",", "im_name", ",", "epoch", ",", "process_pool", "=", "None", ",", "perturbed_img", "=", "None", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "False", ")", ":", "\n", "        ", "for", "i_val_i", "in", "range", "(", "pred_fiducial_points", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "self", ".", "postprocess", "==", "'tps'", ":", "\n", "                ", "self", ".", "flatByfiducial_TPS", "(", "pred_fiducial_points", "[", "i_val_i", "]", ",", "pred_segment", "[", "i_val_i", "]", ",", "im_name", "[", "i_val_i", "]", ",", "epoch", ",", "None", "if", "perturbed_img", "is", "None", "else", "perturbed_img", "[", "i_val_i", "]", ",", "scheme", ",", "is_scaling", ")", "\n", "", "elif", "self", ".", "postprocess", "==", "'interpolation'", ":", "\n", "                ", "self", ".", "flatByfiducial_interpolation", "(", "pred_fiducial_points", "[", "i_val_i", "]", ",", "pred_segment", "[", "i_val_i", "]", ",", "im_name", "[", "i_val_i", "]", ",", "epoch", ",", "None", "if", "perturbed_img", "is", "None", "else", "perturbed_img", "[", "i_val_i", "]", ",", "scheme", ",", "is_scaling", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Error: Other postprocess.'", ")", "\n", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.__init__": [[213, 215], ["utilsV4.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.reset": [[216, 221], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.AverageMeter.update": [[222, 227], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ",", "m", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "m", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.__init__": [[233, 272], ["utilsV4.SaveFlatImage", "utilsV4.AverageMeter", "utilsV4.AverageMeter", "utilsV4.AverageMeter", "torch.device"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "args", ",", "path", ",", "date", ",", "date_time", ",", "_re_date", ",", "model", ",", "reslut_file", ",", "n_classes", ",", "optimizer", ",", "model_D", "=", "None", ",", "optimizer_D", "=", "None", ",", "loss_fn", "=", "None", ",", "loss_fn2", "=", "None", ",", "data_loader", "=", "None", ",", "data_loader_hdf5", "=", "None", ",", "dataPackage_loader", "=", "None", ",", "data_path", "=", "None", ",", "data_path_validate", "=", "None", ",", "data_path_test", "=", "None", ",", "data_preproccess", "=", "True", ")", ":", "#, valloaderSet, v_loaderSet", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "date", "=", "date", "\n", "self", ".", "date_time", "=", "date_time", "\n", "self", ".", "_re_date", "=", "_re_date", "\n", "# self.valloaderSet = valloaderSet", "\n", "# self.v_loaderSet = v_loaderSet", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "model_D", "=", "model_D", "\n", "self", ".", "reslut_file", "=", "reslut_file", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "optimizer_D", "=", "optimizer_D", "\n", "self", ".", "loss_fn", "=", "loss_fn", "\n", "self", ".", "loss_fn2", "=", "loss_fn2", "\n", "self", ".", "data_loader", "=", "data_loader", "\n", "self", ".", "data_loader_hdf5", "=", "data_loader_hdf5", "\n", "self", ".", "dataPackage_loader", "=", "dataPackage_loader", "\n", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "data_path_validate", "=", "data_path_validate", "\n", "self", ".", "data_path_test", "=", "data_path_test", "\n", "self", ".", "data_preproccess", "=", "data_preproccess", "\n", "\n", "postprocess_list", "=", "[", "'tps'", ",", "'interpolation'", "]", "\n", "self", ".", "save_flat_mage", "=", "SaveFlatImage", "(", "self", ".", "path", ",", "self", ".", "date", ",", "self", ".", "date_time", ",", "self", ".", "_re_date", ",", "self", ".", "data_path_validate", ",", "self", ".", "data_path_test", ",", "self", ".", "args", ".", "batch_size", ",", "self", ".", "data_preproccess", ",", "postprocess", "=", "postprocess_list", "[", "0", "]", ",", "device", "=", "torch", ".", "device", "(", "self", ".", "args", ".", "device", ")", ")", "\n", "\n", "self", ".", "validate_loss", "=", "AverageMeter", "(", ")", "\n", "self", ".", "validate_loss_regress", "=", "AverageMeter", "(", ")", "\n", "self", ".", "validate_loss_segment", "=", "AverageMeter", "(", ")", "\n", "self", ".", "lambda_loss", "=", "1", "\n", "self", ".", "lambda_loss_segment", "=", "1", "\n", "self", ".", "lambda_loss_a", "=", "1", "\n", "self", ".", "lambda_loss_b", "=", "1", "\n", "self", ".", "lambda_loss_c", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTrainData": [[274, 279], ["utilsV4.FlatImg.data_loader", "torch.utils.data.DataLoader", "min"], "methods", ["None"], ["", "def", "loadTrainData", "(", "self", ",", "data_split", ",", "is_shuffle", "=", "True", ")", ":", "\n", "        ", "train_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path", ",", "split", "=", "data_split", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "preproccess", "=", "self", ".", "data_preproccess", ")", "\n", "trainloader", "=", "data", ".", "DataLoader", "(", "train_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "min", "(", "self", ".", "args", ".", "batch_size", ",", "8", ")", ",", "drop_last", "=", "True", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "is_shuffle", ")", "\n", "return", "trainloader", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadValidateAndTestData": [[280, 311], ["utilsV4.FlatImg.data_loader", "torch.utils.data.DataLoader", "utilsV4.FlatImg.data_loader", "torch.utils.data.DataLoader", "min"], "methods", ["None"], ["", "def", "loadValidateAndTestData", "(", "self", ",", "is_shuffle", "=", "True", ",", "sub_dir", "=", "'shrink_512/crop/'", ")", ":", "\n", "        ", "v1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_validate", ",", "split", "=", "'validate'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ",", "preproccess", "=", "self", ".", "data_preproccess", ")", "\n", "valloader1", "=", "data", ".", "DataLoader", "(", "v1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "min", "(", "self", ".", "args", ".", "batch_size", ",", "8", ")", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "is_shuffle", ")", "\n", "\n", "'''val sets'''", "\n", "v_loaderSet", "=", "{", "\n", "'v1_loader'", ":", "v1_loader", ",", "\n", "}", "\n", "valloaderSet", "=", "{", "\n", "'valloader1'", ":", "valloader1", ",", "\n", "}", "\n", "# sub_dir = 'crop/crop/'", "\n", "\n", "t1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'test'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ")", "\n", "testloader1", "=", "data", ".", "DataLoader", "(", "t1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "False", ")", "\n", "\n", "'''test sets'''", "\n", "t_loaderSet", "=", "{", "\n", "'t1_loader'", ":", "v1_loader", ",", "\n", "}", "\n", "testloaderSet", "=", "{", "\n", "'testloader1'", ":", "testloader1", ",", "\n", "}", "\n", "\n", "self", ".", "valloaderSet", "=", "valloaderSet", "\n", "self", ".", "v_loaderSet", "=", "v_loaderSet", "\n", "\n", "self", ".", "testloaderSet", "=", "testloaderSet", "\n", "self", ".", "t_loaderSet", "=", "t_loaderSet", "\n", "# return v_loaderSet, valloaderSet", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTestData": [[313, 325], ["utilsV4.FlatImg.data_loader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "loadTestData", "(", "self", ",", "is_shuffle", "=", "True", ")", ":", "\n", "        ", "t1_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'test'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "\n", "is_return_img_name", "=", "True", ")", "\n", "testloader1", "=", "data", ".", "DataLoader", "(", "t1_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "False", ")", "\n", "\n", "'''test sets'''", "\n", "testloaderSet", "=", "{", "\n", "'testloader1'", ":", "testloader1", ",", "\n", "}", "\n", "\n", "self", ".", "testloaderSet", "=", "testloaderSet", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.evalData": [[326, 332], ["utilsV4.FlatImg.data_loader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "evalData", "(", "self", ",", "is_shuffle", "=", "True", ",", "sub_dir", "=", "'shrink_512/crop/'", ")", ":", "\n", "        ", "eval_loader", "=", "self", ".", "data_loader", "(", "self", ".", "data_path_test", ",", "split", "=", "'eval'", ",", "img_shrink", "=", "self", ".", "args", ".", "img_shrink", ",", "is_return_img_name", "=", "True", ")", "\n", "evalloader", "=", "data", ".", "DataLoader", "(", "eval_loader", ",", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "num_workers", "=", "self", ".", "args", ".", "batch_size", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "False", ")", "\n", "\n", "self", ".", "evalloaderSet", "=", "evalloader", "\n", "# return v_loaderSet, valloaderSet", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.saveModel_epoch": [[334, 351], ["utilsV4.FlatImg.model.state_dict", "utilsV4.FlatImg.optimizer.state_dict", "os.path.join", "os.path.join", "os.path.exists", "os.makedirs", "torch.save", "torch.save", "str", "str"], "methods", ["None"], ["", "def", "saveModel_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "epoch", "+=", "1", "\n", "state", "=", "{", "'epoch'", ":", "epoch", ",", "\n", "'model_state'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "# AN ERROR HAS OCCURED", "\n", "}", "\n", "i_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", "+", "' @'", "+", "self", ".", "_re_date", ",", "\n", "str", "(", "epoch", ")", ")", "if", "self", ".", "_re_date", "is", "not", "None", "else", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "self", ".", "date", "+", "self", ".", "date_time", ",", "str", "(", "epoch", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "i_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "i_path", ")", "\n", "\n", "", "if", "self", ".", "_re_date", "is", "None", ":", "\n", "            ", "torch", ".", "save", "(", "state", ",", "i_path", "+", "'/'", "+", "self", ".", "date", "+", "self", ".", "date_time", "+", "\"{}\"", ".", "format", "(", "self", ".", "args", ".", "arch", ")", "+", "\".pkl\"", ")", "# \"./trained_model/{}_{}_best_model.pkl\"", "\n", "", "else", ":", "\n", "            ", "torch", ".", "save", "(", "state", ",", "\n", "i_path", "+", "'/'", "+", "self", ".", "_re_date", "+", "\"@\"", "+", "self", ".", "date", "+", "self", ".", "date_time", "+", "\"{}\"", ".", "format", "(", "\n", "self", ".", "args", ".", "arch", ")", "+", "\".pkl\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3": [[352, 487], ["time.time", "torch.no_grad", "enumerate", "len", "print", "print", "time.time", "time.time", "utilsV4.FlatImg.valloaderSet.values", "enumerate", "time.time", "torch.no_grad", "enumerate", "print", "print", "torch.no_grad", "enumerate", "print", "print", "utilsV4.FlatImg.testloaderSet.values", "enumerate", "time.time", "utilsV4.FlatImg.testloaderSet.values", "enumerate", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "utilsV4.FlatImg.model", "utilsV4.FlatImg.loss_fn", "utilsV4.FlatImg.loss_fn2", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "loss_list.append", "utilsV4.FlatImg.item", "loss_overall.item", "loss_local.item", "random.choices", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "utilsV4.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "loss.item", "print", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "random.choices", "torch.autograd.Variable", "utilsV4.FlatImg.model", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "utilsV4.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "print", "random.choices", "torch.autograd.Variable", "utilsV4.FlatImg.model", "outputs.data.cpu().numpy().transpose", "outputs_segment.data.round().int().cpu().numpy", "utilsV4.FlatImg.save_flat_mage.flatByRegressWithClassiy_multiProcessV2", "print", "torch.autograd.Variable.numpy", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "outputs.data.cpu().numpy", "outputs_segment.data.round().int().cpu", "outputs_segment.data.round", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs.data.cpu", "outputs_segment.data.round().int", "outputs_segment.data.round", "outputs_segment.data.round"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.SaveFlatImage.flatByRegressWithClassiy_multiProcessV2"], ["", "", "def", "validateOrTestModelV3", "(", "self", ",", "epoch", ",", "trian_t", ",", "validate_test", "=", "'v_l2'", ",", "is_scaling", "=", "False", ")", ":", "\n", "\n", "        ", "if", "validate_test", "==", "'v_l4'", ":", "\n", "            ", "loss_segment_list", "=", "0", "\n", "loss_overall_list", "=", "0", "\n", "loss_local_list", "=", "0", "\n", "loss_edge_list", "=", "0", "\n", "loss_rectangles_list", "=", "0", "\n", "loss_list", "=", "[", "]", "\n", "\n", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "valloaderSet", ".", "values", "(", ")", ")", ":", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "labels", ",", "segment", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = random.choices([True, False], weights=[1, 0])[0]", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "0.05", ",", "0.95", "]", ")", "[", "0", "]", "\n", "# save_img_ = True", "\n", "\n", "images", "=", "Variable", "(", "images", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", "self", ".", "args", ".", "device", ")", ")", "\n", "segment", "=", "Variable", "(", "segment", ".", "cuda", "(", "self", ".", "args", ".", "device", ")", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "\n", "loss_overall", ",", "loss_local", ",", "loss_edge", ",", "loss_rectangles", "=", "self", ".", "loss_fn", "(", "outputs", ",", "labels", ",", "size_average", "=", "True", ")", "\n", "loss_segment", "=", "self", ".", "loss_fn2", "(", "outputs_segment", ",", "segment", ")", "\n", "\n", "loss", "=", "self", ".", "lambda_loss", "*", "(", "loss_overall", "+", "loss_local", "+", "loss_edge", "*", "self", ".", "lambda_loss_a", "+", "loss_rectangles", "*", "self", ".", "lambda_loss_b", ")", "+", "self", ".", "lambda_loss_segment", "*", "loss_segment", "\n", "# loss = self.lambda_loss * (loss_local + loss_rectangles + loss_edge*self.lambda_loss_a + loss_overall*self.lambda_loss_b) + self.lambda_loss_segment * loss_segment", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "# (4, 1280, 1024, 2)", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "\n", "perturbed_img", "=", "images", ".", "numpy", "(", ")", ",", "scheme", "=", "'validate'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "loss_list", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "loss_segment_list", "+=", "loss_segment", ".", "item", "(", ")", "\n", "loss_overall_list", "+=", "loss_overall", ".", "item", "(", ")", "\n", "loss_local_list", "+=", "loss_local", ".", "item", "(", ")", "\n", "# loss_edge_list += loss_edge.item()", "\n", "# loss_rectangles_list += loss_rectangles.item()", "\n", "\n", "", "except", ":", "\n", "                            ", "print", "(", "'* save image validated error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "# if always_save_model:", "\n", "#     self.saveModel(epoch, save_path=self.path)", "\n", "list_len", "=", "len", "(", "loss_list", ")", "\n", "print", "(", "'train time : {trian_t:.3f}\\t'", "\n", "'validate time : {test_time:.3f}\\t'", "\n", "'[o:{overall_avg:.4f} l:{local_avg:.4f} e:{edge_avg:.4f} r:{rectangles_avg:.4f}\\t'", "\n", "'[{loss_regress:.4f}  {loss_segment:.4f}]\\n'", ".", "format", "(", "\n", "trian_t", "=", "trian_t", ",", "test_time", "=", "test_time", ",", "\n", "overall_avg", "=", "loss_overall_list", "/", "list_len", ",", "local_avg", "=", "loss_local_list", "/", "list_len", ",", "edge_avg", "=", "loss_edge_list", "/", "list_len", ",", "rectangles_avg", "=", "loss_rectangles_list", "/", "list_len", ",", "\n", "loss_regress", "=", "(", "loss_overall_list", "+", "loss_local_list", "+", "loss_edge_list", ")", "/", "list_len", ",", "loss_segment", "=", "loss_segment_list", "/", "list_len", ")", ")", "\n", "print", "(", "'train time : {trian_t:.3f}\\t'", "\n", "'validate time : {test_time:.3f}\\t'", "\n", "'[o:{overall_avg:.4f} l:{local_avg:.4f} e:{edge_avg:.4f} r:{rectangles_avg:.4f}\\t'", "\n", "'[{loss_regress:.4f}  {loss_segment:.4f}]\\n'", ".", "format", "(", "\n", "trian_t", "=", "trian_t", ",", "test_time", "=", "test_time", ",", "\n", "overall_avg", "=", "loss_overall_list", "/", "list_len", ",", "local_avg", "=", "loss_local_list", "/", "list_len", ",", "edge_avg", "=", "loss_edge_list", "/", "list_len", ",", "rectangles_avg", "=", "loss_rectangles_list", "/", "list_len", ",", "\n", "loss_regress", "=", "(", "loss_overall_list", "+", "loss_local_list", "+", "loss_edge_list", ")", "/", "list_len", ",", "loss_segment", "=", "loss_segment_list", "/", "list_len", ")", ",", "file", "=", "self", ".", "reslut_file", ")", "\n", "", "", "elif", "validate_test", "==", "'t_all'", ":", "\n", "            ", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "testloaderSet", ".", "values", "(", ")", ")", ":", "\n", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = True", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "1", ",", "0", "]", ")", "[", "0", "]", "\n", "# save_img_ = random.choices([True, False], weights=[0.2, 0.8])[0]", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "images", "=", "Variable", "(", "images", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "# outputs, outputs_segment = self.model(images, is_softmax=True)", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "\n", "scheme", "=", "'test'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "", "except", ":", "\n", "                            ", "print", "(", "'* save image tested error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ")", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ",", "\n", "file", "=", "self", ".", "reslut_file", ")", "\n", "", "", "else", ":", "\n", "            ", "begin_test", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "i_valloader", ",", "valloader", "in", "enumerate", "(", "self", ".", "testloaderSet", ".", "values", "(", ")", ")", ":", "\n", "\n", "                    ", "for", "i_val", ",", "(", "images", ",", "im_name", ")", "in", "enumerate", "(", "valloader", ")", ":", "\n", "                        ", "try", ":", "\n", "# save_img_ = True", "\n", "# save_img_ = random.choices([True, False], weights=[1, 0])[0]", "\n", "                            ", "save_img_", "=", "random", ".", "choices", "(", "[", "True", ",", "False", "]", ",", "weights", "=", "[", "0.4", ",", "0.6", "]", ")", "[", "0", "]", "\n", "\n", "if", "save_img_", ":", "\n", "                                ", "images", "=", "Variable", "(", "images", ")", "\n", "\n", "outputs", ",", "outputs_segment", "=", "self", ".", "model", "(", "images", ")", "\n", "# outputs, outputs_segment = self.model(images, is_softmax=True)", "\n", "\n", "pred_regress", "=", "outputs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "pred_segment", "=", "outputs_segment", ".", "data", ".", "round", "(", ")", ".", "int", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (4, 1280, 1024)  ==outputs.data.argmax(dim=0).cpu().numpy()", "\n", "\n", "self", ".", "save_flat_mage", ".", "flatByRegressWithClassiy_multiProcessV2", "(", "pred_regress", ",", "\n", "pred_segment", ",", "im_name", ",", "\n", "epoch", "+", "1", ",", "\n", "scheme", "=", "'test'", ",", "is_scaling", "=", "is_scaling", ")", "\n", "", "", "except", ":", "\n", "                            ", "print", "(", "'* save image tested error :'", "+", "im_name", "[", "0", "]", ")", "\n", "", "", "", "test_time", "=", "time", ".", "time", "(", ")", "-", "begin_test", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ")", "\n", "\n", "print", "(", "'test time : {test_time:.3f}'", ".", "format", "(", "\n", "test_time", "=", "test_time", ")", ",", "\n", "file", "=", "self", ".", "reslut_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.adjust_position": [[17, 34], ["None"], "function", ["None"], ["def", "adjust_position", "(", "x_min", ",", "y_min", ",", "x_max", ",", "y_max", ",", "new_shape", ")", ":", "\n", "    ", "if", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "%", "2", "==", "0", ":", "\n", "        ", "f_g_0_0", "=", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "//", "2", "\n", "f_g_0_1", "=", "f_g_0_0", "\n", "", "else", ":", "\n", "        ", "f_g_0_0", "=", "(", "new_shape", "[", "0", "]", "-", "(", "x_max", "-", "x_min", ")", ")", "//", "2", "\n", "f_g_0_1", "=", "f_g_0_0", "+", "1", "\n", "\n", "", "if", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "%", "2", "==", "0", ":", "\n", "        ", "f_g_1_0", "=", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "//", "2", "\n", "f_g_1_1", "=", "f_g_1_0", "\n", "", "else", ":", "\n", "        ", "f_g_1_0", "=", "(", "new_shape", "[", "1", "]", "-", "(", "y_max", "-", "y_min", ")", ")", "//", "2", "\n", "f_g_1_1", "=", "f_g_1_0", "+", "1", "\n", "\n", "# return f_g_0_0, f_g_0_1, f_g_1_0, f_g_1_1", "\n", "", "return", "f_g_0_0", ",", "f_g_1_0", ",", "new_shape", "[", "0", "]", "-", "f_g_0_1", ",", "new_shape", "[", "1", "]", "-", "f_g_1_1", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.get_matric_edge": [[35, 37], ["numpy.concatenate"], "function", ["None"], ["", "def", "get_matric_edge", "(", "matric", ")", ":", "\n", "    ", "return", "np", ".", "concatenate", "(", "(", "matric", "[", ":", ",", "0", ",", ":", "]", ",", "matric", "[", ":", ",", "-", "1", ",", ":", "]", ",", "matric", "[", "0", ",", "1", ":", "-", "1", ",", ":", "]", ",", "matric", "[", "-", "1", ",", "1", ":", "-", "1", ",", ":", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.__init__": [[6, 46], ["torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.full().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full", "torch.full"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "classify_size_average", "=", "True", ",", "args_gpu", "=", "0", ")", ":", "\n", "        ", "self", ".", "classify_size_average", "=", "classify_size_average", "\n", "self", ".", "args_gpu", "=", "args_gpu", "\n", "self", ".", "kernel_r", "=", "torch", ".", "ones", "(", "2", ",", "1", ",", "3", ",", "3", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "self", ".", "kernel_cross_17", "=", "torch", ".", "tensor", "(", "\n", "[", "[", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", ",", "\n", "[", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", ",", "1.", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1.", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", "]", "]", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "self", ".", "kernel", "=", "torch", ".", "tensor", "(", "[", "[", "[", "[", "0", ",", "1.", ",", "0", "]", ",", "\n", "[", "1.", ",", "1.", ",", "1.", "]", ",", "\n", "[", "0", ",", "1.", ",", "0", "]", "]", "]", ",", "\n", "[", "[", "[", "0", ",", "1.", ",", "0", "]", ",", "\n", "[", "1.", ",", "1.", ",", "1.", "]", ",", "\n", "[", "0", ",", "1.", ",", "0", "]", "]", "]", "]", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "# self.kernel = torch.ones(2, 1, 3, 3).cuda(self.args_gpu)", "\n", "self", ".", "kernel_2_1", "=", "torch", ".", "tensor", "(", "[", "[", "[", "[", "1.", "]", ",", "[", "-", "1.", "]", "]", "]", ",", "[", "[", "[", "1.", "]", ",", "[", "-", "1.", "]", "]", "]", "]", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "self", ".", "kernel_1_2", "=", "torch", ".", "tensor", "(", "[", "[", "[", "[", "1.", ",", "-", "1.", "]", "]", "]", ",", "[", "[", "[", "1.", ",", "-", "1.", "]", "]", "]", "]", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "# self.lambda_ = 0.1", "\n", "self", ".", "lambda_", "=", "0.5", "\n", "\n", "self", ".", "matrices_2", "=", "torch", ".", "full", "(", "(", "1024", ",", "960", ")", ",", "2", ",", "dtype", "=", "torch", ".", "float", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "self", ".", "matrices_0", "=", "torch", ".", "full", "(", "(", "1024", ",", "960", ")", ",", "0", ",", "dtype", "=", "torch", ".", "float", ")", ".", "cuda", "(", "self", ".", "args_gpu", ")", "\n", "\n", "self", ".", "fiducial_point_gaps", "=", "[", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "10", ",", "12", ",", "15", ",", "20", ",", "30", "]", "\n", "self", ".", "fiducial_point_gaps_v2", "=", "[", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "10", ",", "12", ",", "15", ",", "20", ",", "30", ",", "60", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.line_cross": [[47, 58], ["torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.mse_loss", "torch.mse_loss", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.mse_loss", "torch.mse_loss"], "methods", ["None"], ["", "def", "line_cross", "(", "self", ",", "input", ",", "target", ",", "size_average", "=", "False", ")", ":", "\n", "\n", "        ", "input_rectangles_h", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_h", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_h", "=", "F", ".", "mse_loss", "(", "input_rectangles_h", ",", "target_rectangles_h", ",", "size_average", "=", "size_average", ")", "\n", "input_rectangles_o", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_o", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_o", "=", "F", ".", "mse_loss", "(", "input_rectangles_o", ",", "target_rectangles_o", ",", "size_average", "=", "size_average", ")", "\n", "loss_rectangles", "=", "input_arget_rectangles_h", "+", "input_arget_rectangles_o", "\n", "\n", "return", "loss_rectangles", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.loss_line_cross": [[59, 75], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.mse_loss", "torch.mse_loss", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.mse_loss", "torch.mse_loss", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.conv2d", "torch.conv2d", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "loss_line_cross", "(", "self", ",", "input", ",", "target", ",", "size_average", "=", "False", ")", ":", "\n", "        ", "i_t", "=", "target", "-", "input", "\n", "\n", "loss_local", "=", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "F", ".", "conv2d", "(", "F", ".", "pad", "(", "i_t", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", ",", "self", ".", "kernel", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "-", "i_t", "*", "5", ",", "2", ")", ")", "\n", "# loss_local = torch.mean(torch.abs(F.conv2d(i_t, self.kernel, padding=1, groups=2) - i_t*5))", "\n", "# loss_local = torch.mean(torch.pow(F.conv2d(i_t, self.kernel, padding=1, groups=2) - i_t*5, 2))", "\n", "\n", "input_rectangles_h", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_h", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_h", "=", "F", ".", "mse_loss", "(", "input_rectangles_h", ",", "target_rectangles_h", ",", "size_average", "=", "size_average", ")", "\n", "input_rectangles_o", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_o", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_o", "=", "F", ".", "mse_loss", "(", "input_rectangles_o", ",", "target_rectangles_o", ",", "size_average", "=", "size_average", ")", "\n", "loss_rectangles", "=", "input_arget_rectangles_h", "+", "input_arget_rectangles_o", "\n", "\n", "return", "loss_local", ",", "loss_rectangles", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.loss_line_cross_l1": [[76, 92], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.l1_loss", "torch.l1_loss", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.l1_loss", "torch.l1_loss", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.conv2d", "torch.conv2d", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "loss_line_cross_l1", "(", "self", ",", "input", ",", "target", ",", "size_average", "=", "False", ")", ":", "\n", "        ", "i_t", "=", "target", "-", "input", "\n", "\n", "loss_local", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "F", ".", "conv2d", "(", "F", ".", "pad", "(", "i_t", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", ",", "self", ".", "kernel", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "-", "i_t", "*", "5", ")", ")", "\n", "# loss_local = torch.mean(torch.abs(F.conv2d(i_t, self.kernel, padding=1, groups=2) - i_t*5))", "\n", "# loss_local = torch.mean(torch.pow(F.conv2d(i_t, self.kernel, padding=1, groups=2) - i_t*5, 2))", "\n", "\n", "input_rectangles_h", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_h", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_1_2", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_h", "=", "F", ".", "l1_loss", "(", "input_rectangles_h", ",", "target_rectangles_h", ",", "size_average", "=", "size_average", ")", "\n", "input_rectangles_o", "=", "F", ".", "conv2d", "(", "input", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "target_rectangles_o", "=", "F", ".", "conv2d", "(", "target", ",", "self", ".", "kernel_2_1", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "\n", "input_arget_rectangles_o", "=", "F", ".", "l1_loss", "(", "input_rectangles_o", ",", "target_rectangles_o", ",", "size_average", "=", "size_average", ")", "\n", "loss_rectangles", "=", "input_arget_rectangles_h", "+", "input_arget_rectangles_o", "\n", "\n", "return", "loss_local", ",", "loss_rectangles", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.loss_fn4_v5": [[94, 119], ["input.size", "torch.smooth_l1_loss", "torch.smooth_l1_loss", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "loss.Losses.line_cross", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.conv2d", "torch.conv2d", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.line_cross"], ["", "def", "loss_fn4_v5", "(", "self", ",", "input", ",", "target", ",", "size_average", "=", "False", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "input", ".", "size", "(", ")", "\n", "\n", "# n_ = n*c*h*w", "\n", "\n", "i_t", "=", "target", "-", "input", "\n", "\n", "'''one'''", "\n", "loss_l1", "=", "F", ".", "smooth_l1_loss", "(", "input", ",", "target", ",", "size_average", "=", "size_average", ")", "\n", "\n", "'''two'''", "\n", "loss_local", "=", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "F", ".", "conv2d", "(", "F", ".", "pad", "(", "i_t", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'replicate'", ")", ",", "self", ".", "kernel", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "-", "i_t", "*", "5", ",", "2", ")", ")", "\n", "\n", "'''three   --weak'''", "\n", "loss_edge_a", "=", "F", ".", "mse_loss", "(", "input", "[", ":", ",", ":", ",", "0", ",", ":", "]", ",", "target", "[", ":", ",", ":", ",", "0", ",", ":", "]", ",", "size_average", "=", "size_average", ")", "\n", "loss_edge_b", "=", "F", ".", "mse_loss", "(", "input", "[", ":", ",", ":", ",", "h", "-", "1", ",", ":", "]", ",", "target", "[", ":", ",", ":", ",", "h", "-", "1", ",", ":", "]", ",", "size_average", "=", "size_average", ")", "\n", "loss_edge_c", "=", "F", ".", "mse_loss", "(", "input", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "target", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "size_average", "=", "size_average", ")", "\n", "loss_edge_d", "=", "F", ".", "mse_loss", "(", "input", "[", ":", ",", ":", ",", ":", ",", "w", "-", "1", "]", ",", "target", "[", ":", ",", ":", ",", ":", ",", "w", "-", "1", "]", ",", "size_average", "=", "size_average", ")", "\n", "loss_edge", "=", "loss_edge_a", "+", "loss_edge_b", "+", "loss_edge_c", "+", "loss_edge_d", "\n", "\n", "'''four'''", "\n", "loss_rectangle", "=", "self", ".", "line_cross", "(", "input", ",", "target", ",", "size_average", ")", "\n", "\n", "\n", "return", "loss_l1", ",", "loss_local", ",", "loss_edge", ",", "loss_rectangle", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.loss_fn4_v5_r_4": [[120, 131], ["torch.smooth_l1_loss", "torch.smooth_l1_loss", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.conv2d", "torch.conv2d", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "loss_fn4_v5_r_4", "(", "self", ",", "input", ",", "target", ",", "size_average", "=", "False", ")", ":", "\n", "        ", "i_t", "=", "target", "-", "input", "\n", "\n", "'''one'''", "\n", "loss_l1", "=", "F", ".", "smooth_l1_loss", "(", "input", ",", "target", ",", "size_average", "=", "size_average", ")", "\n", "\n", "\n", "'''two'''", "\n", "loss_local", "=", "torch", ".", "mean", "(", "torch", ".", "pow", "(", "F", ".", "conv2d", "(", "F", ".", "pad", "(", "i_t", ",", "(", "4", ",", "4", ",", "4", ",", "4", ")", ",", "mode", "=", "'replicate'", ")", ",", "self", ".", "kernel_cross_17", ",", "padding", "=", "0", ",", "groups", "=", "2", ")", "-", "i_t", "*", "17", ",", "2", ")", ")", "\n", "\n", "return", "loss_l1", ",", "loss_local", ",", "0", ",", "0", "\n", "# return loss_l1, loss_local, loss_edge, loss_rectangle", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.loss.Losses.loss_fn_l1_loss": [[133, 135], ["torch.l1_loss", "torch.l1_loss"], "methods", ["None"], ["", "def", "loss_fn_l1_loss", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "F", ".", "l1_loss", "(", "input", ",", "target", ",", "size_average", "=", "self", ".", "classify_size_average", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.test.train": [[37, 114], ["print", "print", "network.FiducialPoints", "utilsV4.FlatImg", "utils.FlatImg.loadTestData", "torch.nn.DataParallel.eval", "utils.FlatImg.validateOrTestModelV3", "exit", "open.close", "re.compile", "re.compile.search().group", "open", "open", "str", "str", "str", "list", "torch.device", "torch.cuda.set_device", "torch.nn.DataParallel", "torch.nn.DataParallel.cuda", "torch.device", "print", "torch.optim.SGD", "os.path.isfile", "map", "torch.nn.DataParallel.parameters", "torch.optim.Adam", "exit", "print", "print", "print", "re.compile.search", "str", "torch.nn.DataParallel.parameters", "torch.load", "torch.nn.DataParallel.load_state_dict", "torch.load", "torch.nn.DataParallel.load_state_dict", "str", "k.replace"], "function", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.loadTestData", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.utilsV4.FlatImg.validateOrTestModelV3"], ["def", "train", "(", "args", ")", ":", "\n", "    ", "global", "_re_date", "\n", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "        ", "re_date", "=", "re", ".", "compile", "(", "r'\\d{4}-\\d{1,2}-\\d{1,2}'", ")", "\n", "_re_date", "=", "re_date", ".", "search", "(", "str", "(", "args", ".", "resume", ")", ")", ".", "group", "(", "0", ")", "\n", "reslut_file", "=", "open", "(", "path", "+", "'/'", "+", "date", "+", "date_time", "+", "' @'", "+", "_re_date", "+", "'_'", "+", "args", ".", "arch", "+", "'.log'", ",", "'w'", ")", "\n", "", "else", ":", "\n", "        ", "_re_date", "=", "None", "\n", "reslut_file", "=", "open", "(", "path", "+", "'/'", "+", "date", "+", "date_time", "+", "'_'", "+", "args", ".", "arch", "+", "'.log'", ",", "'w'", ")", "\n", "\n", "# Setup Dataloader", "\n", "", "data_path", "=", "str", "(", "args", ".", "data_path_train", ")", "+", "'/'", "\n", "data_path_validate", "=", "str", "(", "args", ".", "data_path_validate", ")", "+", "'/'", "\n", "data_path_test", "=", "str", "(", "args", ".", "data_path_test", ")", "+", "'/'", "\n", "\n", "print", "(", "args", ")", "\n", "print", "(", "args", ",", "file", "=", "reslut_file", ")", "\n", "\n", "n_classes", "=", "2", "\n", "\n", "model", "=", "FiducialPoints", "(", "n_classes", "=", "n_classes", ",", "num_filter", "=", "32", ",", "architecture", "=", "DilatedResnetForFlatByFiducialPointsS2", ",", "BatchNorm", "=", "'BN'", ",", "in_channels", "=", "3", ")", "#", "\n", "\n", "if", "args", ".", "parallel", "is", "not", "None", ":", "\n", "        ", "device_ids", "=", "list", "(", "map", "(", "int", ",", "args", ".", "parallel", ")", ")", "\n", "args", ".", "device", "=", "torch", ".", "device", "(", "'cuda:'", "+", "str", "(", "device_ids", "[", "0", "]", ")", ")", "\n", "\n", "# args.gpu = device_ids[0]", "\n", "# if args.gpu < 8:", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "device", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "device_ids", ")", "\n", "model", ".", "cuda", "(", "args", ".", "device", ")", "\n", "", "else", ":", "\n", "# exit()", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "print", "(", "'using CPU!'", ")", "\n", "\n", "\n", "", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "0.0001", ",", "momentum", "=", "0.8", ",", "weight_decay", "=", "1e-12", ")", "\n", "", "elif", "args", ".", "optimizer", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "l_rate", ",", "weight_decay", "=", "1e-10", ")", "\n", "", "else", ":", "\n", "        ", "assert", "'please choice optimizer'", "\n", "exit", "(", "'error'", ")", "\n", "\n", "", "if", "args", ".", "resume", "is", "not", "None", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ":", "\n", "            ", "print", "(", "\"Loading model and optimizer from checkpoint '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "if", "args", ".", "parallel", "is", "not", "None", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ",", "map_location", "=", "args", ".", "device", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state'", "]", ")", "\n", "", "else", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ",", "map_location", "=", "args", ".", "device", ")", "\n", "'''cpu'''", "\n", "model_parameter_dick", "=", "{", "}", "\n", "for", "k", "in", "checkpoint", "[", "'model_state'", "]", ":", "\n", "                    ", "model_parameter_dick", "[", "k", ".", "replace", "(", "'module.'", ",", "''", ")", "]", "=", "checkpoint", "[", "'model_state'", "]", "[", "k", "]", "\n", "", "model", ".", "load_state_dict", "(", "model_parameter_dick", ")", "\n", "\n", "", "print", "(", "\"Loaded checkpoint '{}' (epoch {})\"", "\n", ".", "format", "(", "args", ".", "resume", ".", "name", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"No checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "resume", ".", "name", ")", ")", "\n", "\n", "", "", "FlatImg", "=", "utils", ".", "FlatImg", "(", "args", "=", "args", ",", "path", "=", "path", ",", "date", "=", "date", ",", "date_time", "=", "date_time", ",", "_re_date", "=", "_re_date", ",", "model", "=", "model", ",", "reslut_file", "=", "reslut_file", ",", "n_classes", "=", "n_classes", ",", "optimizer", "=", "optimizer", ",", "data_loader", "=", "PerturbedDatastsForFiducialPoints_pickle_color_v2_v2", ",", "data_path", "=", "data_path", ",", "data_path_validate", "=", "data_path_validate", ",", "data_path_test", "=", "data_path_test", ",", "data_preproccess", "=", "False", ")", "# , valloaderSet=valloaderSet, v_loaderSet=v_loaderSet", "\n", "''' load data '''", "\n", "FlatImg", ".", "loadTestData", "(", ")", "\n", "\n", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "if", "args", ".", "resume", "is", "not", "None", "else", "0", "\n", "model", ".", "eval", "(", ")", "\n", "FlatImg", ".", "validateOrTestModelV3", "(", "epoch", ",", "0", ",", "validate_test", "=", "'t_all'", ")", "\n", "exit", "(", ")", "\n", "\n", "reslut_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__init__": [[65, 94], ["os.path.expanduser", "collections.defaultdict", "collections.defaultdict", "dataloader.getDatasets", "os.path.join", "dataloader.getDatasets", "sorted", "Exception", "os.path.join", "getDatasets.append", "id_.rstrip", "re.match().group", "int", "int", "re.match().group", "re.match().group", "re.match().group", "re.match", "re.match", "re.match", "re.match"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.getDatasets", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.getDatasets"], ["\t", "def", "__init__", "(", "self", ",", "root", ",", "split", "=", "'1-1'", ",", "img_shrink", "=", "None", ",", "is_return_img_name", "=", "False", ",", "preproccess", "=", "False", ")", ":", "\n", "\t\t", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "img_shrink", "=", "img_shrink", "\n", "self", ".", "is_return_img_name", "=", "is_return_img_name", "\n", "self", ".", "preproccess", "=", "preproccess", "\n", "# self.mean = np.array([104.00699, 116.66877, 122.67892])", "\n", "self", ".", "images", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "self", ".", "labels", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "self", ".", "row_gap", "=", "1", "\n", "self", ".", "col_gap", "=", "1", "\n", "datasets", "=", "[", "'validate'", ",", "'test'", ",", "'train'", "]", "\n", "\n", "if", "self", ".", "split", "==", "'test'", "or", "self", ".", "split", "==", "'eval'", ":", "\n", "\t\t\t", "img_file_list", "=", "getDatasets", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ")", ")", "\n", "self", ".", "images", "[", "self", ".", "split", "]", "=", "img_file_list", "\n", "# self.images[self.split] = sorted(img_file_list, key=lambda num: (", "\n", "# int(re.match(r'(\\d+)_(\\d+)( copy.png)', num, re.IGNORECASE).group(1)), int(re.match(r'(\\d+)_(\\d+)( copy.png)', num, re.IGNORECASE).group(2))))", "\n", "", "elif", "self", ".", "split", "in", "datasets", ":", "\n", "\t\t\t", "img_file_list", "=", "[", "]", "\n", "img_file_list_", "=", "getDatasets", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'color'", ")", ")", "\n", "for", "id_", "in", "img_file_list_", ":", "\n", "\t\t\t\t", "img_file_list", ".", "append", "(", "id_", ".", "rstrip", "(", ")", ")", "\n", "\n", "", "self", ".", "images", "[", "self", ".", "split", "]", "=", "sorted", "(", "img_file_list", ",", "key", "=", "lambda", "num", ":", "(", "\n", "re", ".", "match", "(", "r'(\\w+\\d*)_(\\d+)_(\\d+)_(\\w+)'", ",", "num", ",", "re", ".", "IGNORECASE", ")", ".", "group", "(", "1", ")", ",", "int", "(", "re", ".", "match", "(", "r'(\\w+\\d*)_(\\d+)_(\\d+)_(\\w+)'", ",", "num", ",", "re", ".", "IGNORECASE", ")", ".", "group", "(", "2", ")", ")", "\n", ",", "int", "(", "re", ".", "match", "(", "r'(\\w+\\d*)_(\\d+)_(\\d+)_(\\w+)'", ",", "num", ",", "re", ".", "IGNORECASE", ")", ".", "group", "(", "3", ")", ")", ",", "re", ".", "match", "(", "r'(\\w+\\d*)_(\\d+)_(\\d+)_(\\w+)'", ",", "num", ",", "re", ".", "IGNORECASE", ")", ".", "group", "(", "4", ")", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "raise", "Exception", "(", "'load data error'", ")", "\n", "# self.checkImg()", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.checkImg": [[96, 108], ["os.path.join", "open", "pickle.load", "print"], "methods", ["None"], ["", "", "def", "checkImg", "(", "self", ")", ":", "\n", "\t\t", "if", "self", ".", "split", "==", "'validate'", ":", "\n", "\t\t\t", "for", "im_name", "in", "self", ".", "images", "[", "self", ".", "split", "]", ":", "\n", "# if 'SinglePage' in im_name:", "\n", "\t\t\t\t", "im_path", "=", "pjoin", "(", "self", ".", "root", ",", "self", ".", "split", ",", "'color'", ",", "im_name", ")", "\n", "try", ":", "\n", "\t\t\t\t\t", "with", "open", "(", "im_path", ",", "'rb'", ")", "as", "f", ":", "\n", "\t\t\t\t\t\t", "perturbed_data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "im_shape", "=", "perturbed_data", ".", "shape", "\n", "", "except", ":", "\n", "\t\t\t\t\t", "print", "(", "im_name", ")", "\n", "# os.remove(im_path)", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__len__": [[110, 112], ["len"], "methods", ["None"], ["", "", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "\t\t", "return", "len", "(", "self", ".", "images", "[", "self", ".", "split", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.__getitem__": [[113, 167], ["os.path.join", "cv2.imread", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.transform_im", "os.path.join", "cv2.imread", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.transform_im", "os.path.join", "pickle.load.get", "pickle.load.get", "pickle.load.get", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "torch.from_numpy.transpose", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_lbl", "dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.fiducal_points_lbl", "torch.from_numpy().float.transpose", "torch.from_numpy", "torch.from_numpy().float", "torch.from_numpy().float", "open", "pickle.load", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.transform_im", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.transform_im", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_lbl", "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.fiducal_points_lbl"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "\t\t", "if", "self", ".", "split", "==", "'test'", ":", "\n", "\t\t\t", "im_name", "=", "self", ".", "images", "[", "self", ".", "split", "]", "[", "item", "]", "\n", "im_path", "=", "pjoin", "(", "self", ".", "root", ",", "im_name", ")", "\n", "\n", "im", "=", "cv2", ".", "imread", "(", "im_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "im", "=", "self", ".", "resize_im", "(", "im", ")", "\n", "im", "=", "self", ".", "transform_im", "(", "im", ")", "\n", "\n", "if", "self", ".", "is_return_img_name", ":", "\n", "\t\t\t\t", "return", "im", ",", "im_name", "\n", "", "return", "im", "\n", "", "elif", "self", ".", "split", "==", "'eval'", ":", "\n", "\t\t\t", "im_name", "=", "self", ".", "images", "[", "self", ".", "split", "]", "[", "item", "]", "\n", "im_path", "=", "pjoin", "(", "self", ".", "root", ",", "im_name", ")", "\n", "\n", "img", "=", "cv2", ".", "imread", "(", "im_path", ",", "flags", "=", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "im", "=", "self", ".", "resize_im", "(", "img", ")", "\n", "im", "=", "self", ".", "transform_im", "(", "im", ")", "\n", "\n", "if", "self", ".", "is_return_img_name", ":", "\n", "\t\t\t\t", "return", "im", ",", "im_name", "\n", "", "return", "im", ",", "img", "\n", "# return im, img, im_name", "\n", "\n", "", "else", ":", "\n", "\t\t\t", "im_name", "=", "self", ".", "images", "[", "self", ".", "split", "]", "[", "item", "]", "\n", "\n", "im_path", "=", "pjoin", "(", "self", ".", "root", ",", "'color'", ",", "im_name", ")", "\n", "\n", "with", "open", "(", "im_path", ",", "'rb'", ")", "as", "f", ":", "\n", "\t\t\t\t", "perturbed_data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n", "", "im", "=", "perturbed_data", ".", "get", "(", "'image'", ")", "\n", "lbl", "=", "perturbed_data", ".", "get", "(", "'fiducial_points'", ")", "\n", "segment", "=", "perturbed_data", ".", "get", "(", "'segment'", ")", "\n", "\n", "im", "=", "self", ".", "resize_im", "(", "im", ")", "\n", "im", "=", "im", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "lbl", "=", "self", ".", "resize_lbl", "(", "lbl", ")", "\n", "lbl", ",", "segment", "=", "self", ".", "fiducal_points_lbl", "(", "lbl", ",", "segment", ")", "\n", "lbl", "=", "lbl", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "im", "=", "torch", ".", "from_numpy", "(", "im", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "lbl", ")", ".", "float", "(", ")", "\n", "segment", "=", "torch", ".", "from_numpy", "(", "segment", ")", ".", "float", "(", ")", "\n", "\n", "if", "self", ".", "is_return_img_name", ":", "\n", "\t\t\t\t", "return", "im", ",", "lbl", ",", "segment", ",", "im_name", "\n", "\n", "", "return", "im", ",", "lbl", ",", "segment", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.transform_im": [[168, 173], ["torch.from_numpy().float.transpose", "torch.from_numpy().float", "torch.from_numpy"], "methods", ["None"], ["", "", "def", "transform_im", "(", "self", ",", "im", ")", ":", "\n", "\t\t", "im", "=", "im", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im", "=", "torch", ".", "from_numpy", "(", "im", ")", ".", "float", "(", ")", "\n", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_im": [[174, 178], ["cv2.resize"], "methods", ["None"], ["", "def", "resize_im", "(", "self", ",", "im", ")", ":", "\n", "\t\t", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "992", ",", "992", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "# im = cv2.resize(im, (496, 496), interpolation=cv2.INTER_LINEAR)", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.resize_lbl": [[179, 183], ["None"], "methods", ["None"], ["", "def", "resize_lbl", "(", "self", ",", "lbl", ")", ":", "\n", "\t\t", "lbl", "=", "lbl", "/", "[", "960", ",", "1024", "]", "*", "[", "992", ",", "992", "]", "\n", "# lbl = lbl/[960, 1024]*[496, 496]", "\n", "return", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.PerturbedDatastsForFiducialPoints_pickle_color_v2_v2.fiducal_points_lbl": [[184, 190], ["None"], "methods", ["None"], ["", "def", "fiducal_points_lbl", "(", "self", ",", "fiducial_points", ",", "segment", ")", ":", "\n", "\n", "\t\t", "fiducial_point_gaps", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "10", ",", "12", ",", "15", ",", "20", ",", "30", ",", "60", "]", "# POINTS NUM: 61, 31, 21, 16, 13, 11, 7, 6, 5, 4, 3, 2", "\n", "fiducial_points", "=", "fiducial_points", "[", ":", ":", "fiducial_point_gaps", "[", "self", ".", "row_gap", "]", ",", ":", ":", "fiducial_point_gaps", "[", "self", ".", "col_gap", "]", ",", ":", "]", "\n", "segment", "=", "segment", "*", "[", "fiducial_point_gaps", "[", "self", ".", "col_gap", "]", ",", "fiducial_point_gaps", "[", "self", ".", "row_gap", "]", "]", "\n", "return", "fiducial_points", ",", "segment", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.get_data_path": [[15, 29], ["json.loads", "os.path.expanduser", "open", "f.read"], "function", ["None"], ["def", "get_data_path", "(", "name", ")", ":", "\n", "\t", "\"\"\"Extract path to data from config file.\n\n\tArgs:\n\t\tname (str): The name of the dataset.\n\n\tReturns:\n\t\t(str): The path to the root directory containing the dataset.\n\t\"\"\"", "\n", "with", "open", "(", "'../xgw/segmentation/config.json'", ")", "as", "f", ":", "\n", "\t\t", "js", "=", "f", ".", "read", "(", ")", "\n", "# js = open('config.json').read()", "\n", "", "data", "=", "json", ".", "loads", "(", "js", ")", "\n", "return", "os", ".", "path", ".", "expanduser", "(", "data", "[", "name", "]", "[", "'data_path'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.getDatasets": [[30, 32], ["os.listdir"], "function", ["None"], ["", "def", "getDatasets", "(", "dir", ")", ":", "\n", "\t", "return", "os", ".", "listdir", "(", "dir", ")", "\n", ""]], "home.repos.pwc.inspect_result.gwxie_document-dewarping-with-control-points.Source.dataloader.resize_image": [[35, 63], ["numpy.zeros", "int", "min", "cv2.resize", "int", "min", "cv2.resize"], "function", ["None"], ["def", "resize_image", "(", "origin_img", ",", "long_edge", "=", "1024", ",", "short_edge", "=", "960", ")", ":", "\n", "# long_edge, short_edge = 2048, 1920", "\n", "# long_edge, short_edge = 1024, 960", "\n", "# long_edge, short_edge = 512, 480", "\n", "\n", "\t", "im_lr", "=", "origin_img", ".", "shape", "[", "0", "]", "\n", "im_ud", "=", "origin_img", ".", "shape", "[", "1", "]", "\n", "new_img", "=", "np", ".", "zeros", "(", "[", "long_edge", ",", "short_edge", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "new_shape", "=", "new_img", ".", "shape", "[", ":", "2", "]", "\n", "if", "im_lr", ">", "im_ud", ":", "\n", "\t\t", "img_shrink", ",", "base_img_shrink", "=", "long_edge", ",", "long_edge", "\n", "im_ud", "=", "int", "(", "im_ud", "/", "im_lr", "*", "base_img_shrink", ")", "\n", "im_ud", "+=", "32", "-", "im_ud", "%", "32", "\n", "im_ud", "=", "min", "(", "im_ud", ",", "short_edge", ")", "\n", "im_lr", "=", "img_shrink", "\n", "origin_img", "=", "cv2", ".", "resize", "(", "origin_img", ",", "(", "im_ud", ",", "im_lr", ")", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "new_img", "[", ":", ",", "(", "new_shape", "[", "1", "]", "-", "im_ud", ")", "//", "2", ":", "new_shape", "[", "1", "]", "-", "(", "new_shape", "[", "1", "]", "-", "im_ud", ")", "//", "2", "]", "=", "origin_img", "\n", "# mask = np.full(new_shape, 255, dtype='uint8')", "\n", "# mask[:, (new_shape[1] - im_ud) // 2:new_shape[1] - (new_shape[1] - im_ud) // 2] = 0", "\n", "", "else", ":", "\n", "\t\t", "img_shrink", ",", "base_img_shrink", "=", "short_edge", ",", "short_edge", "\n", "im_lr", "=", "int", "(", "im_lr", "/", "im_ud", "*", "base_img_shrink", ")", "\n", "im_lr", "+=", "32", "-", "im_lr", "%", "32", "\n", "im_lr", "=", "min", "(", "im_lr", ",", "long_edge", ")", "\n", "im_ud", "=", "img_shrink", "\n", "origin_img", "=", "cv2", ".", "resize", "(", "origin_img", ",", "(", "im_ud", ",", "im_lr", ")", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "new_img", "[", "(", "new_shape", "[", "0", "]", "-", "im_lr", ")", "//", "2", ":", "new_shape", "[", "0", "]", "-", "(", "new_shape", "[", "0", "]", "-", "im_lr", ")", "//", "2", ",", ":", "]", "=", "origin_img", "\n", "", "return", "new_img", "\n", "\n"]]}