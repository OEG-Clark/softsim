{"home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.ProposalNet.__init__": [[12, 21], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ProposalNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down1", "=", "nn", ".", "Conv2d", "(", "512", ",", "128", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "down2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "down3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "ReLU", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tidy1", "=", "nn", ".", "Conv2d", "(", "128", ",", "6", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "tidy2", "=", "nn", ".", "Conv2d", "(", "128", ",", "6", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "tidy3", "=", "nn", ".", "Conv2d", "(", "128", ",", "9", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.ProposalNet.forward": [[22, 31], ["x.size", "model_vgg.ProposalNet.ReLU", "model_vgg.ProposalNet.ReLU", "model_vgg.ProposalNet.ReLU", "model_vgg.ProposalNet.tidy1().view", "model_vgg.ProposalNet.tidy2().view", "model_vgg.ProposalNet.tidy3().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_vgg.ProposalNet.down1", "model_vgg.ProposalNet.down2", "model_vgg.ProposalNet.down3", "model_vgg.ProposalNet.tidy1", "model_vgg.ProposalNet.tidy2", "model_vgg.ProposalNet.tidy3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "d1", "=", "self", ".", "ReLU", "(", "self", ".", "down1", "(", "x", ")", ")", "\n", "d2", "=", "self", ".", "ReLU", "(", "self", ".", "down2", "(", "d1", ")", ")", "\n", "d3", "=", "self", ".", "ReLU", "(", "self", ".", "down3", "(", "d2", ")", ")", "\n", "t1", "=", "self", ".", "tidy1", "(", "d1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "t2", "=", "self", ".", "tidy2", "(", "d2", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "t3", "=", "self", ".", "tidy3", "(", "d3", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "return", "torch", ".", "cat", "(", "(", "t1", ",", "t2", ",", "t3", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.aug_net.__init__": [[33, 45], ["torch.nn.Module.__init__", "net.get_features", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "NUM_CLASSES", ",", "M", "=", "32", ",", "net", "=", "None", ")", ":", "\n", "        ", "super", "(", "aug_net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "NUM_CLASSES", "\n", "self", ".", "M", "=", "M", "\n", "self", ".", "num_features", "=", "2048", "\n", "self", ".", "expansion", "=", "1", "\n", "\n", "self", ".", "features", "=", "net", ".", "get_features", "(", ")", "\n", "self", ".", "expansion", "=", "self", ".", "features", "[", "-", "1", "]", "[", "-", "1", "]", ".", "expansion", "\n", "self", ".", "num_features", "=", "512", "\n", "self", ".", "attentions", "=", "nn", ".", "Conv2d", "(", "self", ".", "num_features", "*", "self", ".", "expansion", ",", "self", ".", "M", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "M", "*", "self", ".", "num_features", "*", "self", ".", "expansion", ",", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.aug_net.forward": [[46, 63], ["x.size", "model_vgg.aug_net.features", "model_vgg.aug_net.attentions", "numpy.random.randint", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "torch.mean.view", "torch.mean.view", "torch.mean.max", "torch.mean.max", "torch.mean.min", "torch.mean.min", "torch.mean.view", "torch.mean.view", "torch.device", "torch.device", "torch.device", "torch.device", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "feature_maps", "=", "self", ".", "features", "(", "x", ")", "\n", "attention_maps", "=", "self", ".", "attentions", "(", "feature_maps", ")", "\n", "k_indices", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "M", ",", "size", "=", "batch_size", ")", "\n", "attention_map", "=", "torch", ".", "zeros", "(", "batch_size", ",", "-", "1", ")", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "attention_map", "[", "i", "]", "=", "attention_maps", "[", "i", ",", "k_indices", "[", "i", "]", ":", "k_indices", "[", "i", "]", "+", "1", ",", "...", "]", "\n", "", "else", ":", "\n", "            ", "attention_map", "=", "torch", ".", "mean", "(", "attention_maps", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "attention_map", "=", "attention_map", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "attention_map_max", ",", "_", "=", "attention_map", ".", "max", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "attention_map_min", ",", "_", "=", "attention_map", ".", "min", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "attention_map", "=", "(", "attention_map", "-", "attention_map_min", ")", "/", "(", "attention_map_max", "-", "attention_map_min", ")", "\n", "attention_map", "=", "attention_map", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "\n", "return", "attention_map", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.attention_net.__init__": [[65, 80], ["torch.nn.Module.__init__", "core.vgg.vgg16", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Linear", "torch.nn.Linear", "model_vgg.ProposalNet", "model_vgg.aug_net", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "core.anchors.generate_default_anchor_maps"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg16", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.generate_default_anchor_maps"], ["    ", "def", "__init__", "(", "self", ",", "topN", "=", "4", ")", ":", "\n", "        ", "super", "(", "attention_net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.pretrained_model = resnet.resnet50(pretrained=True)", "\n", "self", ".", "pretrained_model", "=", "vgg", ".", "vgg16", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "pretrained_model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "pretrained_model", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "2341", ")", "\n", "self", ".", "proposal_net", "=", "ProposalNet", "(", ")", "\n", "self", ".", "topN", "=", "topN", "\n", "self", ".", "aug_net", "=", "aug_net", "(", ")", "\n", "self", ".", "concat_net", "=", "nn", ".", "Linear", "(", "2048", "*", "(", "CAT_NUM", "+", "1", ")", ",", "2341", ")", "\n", "#self.concat_net = nn.Linear(2560, 2341)", "\n", "self", ".", "partcls_net", "=", "nn", ".", "Linear", "(", "512", ",", "2341", ")", "\n", "_", ",", "edge_anchors", ",", "_", "=", "generate_default_anchor_maps", "(", ")", "\n", "self", ".", "pad_side", "=", "224", "\n", "self", ".", "edge_anchors", "=", "(", "edge_anchors", "+", "224", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.attention_net.forward": [[81, 114], ["model_vgg.attention_net.pretrained_model", "torch.pad", "torch.pad", "x.size", "model_vgg.attention_net.proposal_net", "numpy.array", "top_n_cdds[].astype", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "range", "part_imgs.view.view.view", "model_vgg.attention_net.pretrained_model", "part_features.view", "part_feature[].contiguous", "part_feature.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_vgg.attention_net.concat_net", "model_vgg.attention_net.aug_net", "model_vgg.attention_net.partcls_net().view", "rpn_feature.detach", "numpy.concatenate", "core.anchors.hard_nms", "range", "part_imgs.view.view.detach", "model_vgg.attention_net.data.cpu().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "[].astype", "torch.upsample", "torch.upsample", "model_vgg.attention_net.partcls_net", "x.reshape", "model_vgg.attention_net.edge_anchors.copy", "numpy.arange().reshape", "model_vgg.attention_net.data.cpu", "numpy.arange", "len"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.hard_nms"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "resnet_out", ",", "rpn_feature", ",", "feature", "=", "self", ".", "pretrained_model", "(", "x", ")", "\n", "x_pad", "=", "F", ".", "pad", "(", "x", ",", "(", "self", ".", "pad_side", ",", "self", ".", "pad_side", ",", "self", ".", "pad_side", ",", "self", ".", "pad_side", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "batch", "=", "x", ".", "size", "(", "0", ")", "\n", "# we will reshape rpn to shape: batch * nb_anchor", "\n", "rpn_score", "=", "self", ".", "proposal_net", "(", "rpn_feature", ".", "detach", "(", ")", ")", "\n", "all_cdds", "=", "[", "\n", "np", ".", "concatenate", "(", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "self", ".", "edge_anchors", ".", "copy", "(", ")", ",", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "for", "x", "in", "rpn_score", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "top_n_cdds", "=", "[", "hard_nms", "(", "x", ",", "topn", "=", "self", ".", "topN", ",", "iou_thresh", "=", "0.25", ")", "for", "x", "in", "all_cdds", "]", "\n", "top_n_cdds", "=", "np", ".", "array", "(", "top_n_cdds", ")", "\n", "top_n_index", "=", "top_n_cdds", "[", ":", ",", ":", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "int", ")", "\n", "top_n_index", "=", "torch", ".", "from_numpy", "(", "top_n_index", ")", ".", "cuda", "(", ")", "\n", "top_n_prob", "=", "torch", ".", "gather", "(", "rpn_score", ",", "dim", "=", "1", ",", "index", "=", "top_n_index", ")", "\n", "part_imgs", "=", "torch", ".", "zeros", "(", "[", "batch", ",", "self", ".", "topN", ",", "3", ",", "224", ",", "224", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "batch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "topN", ")", ":", "\n", "                ", "[", "y0", ",", "x0", ",", "y1", ",", "x1", "]", "=", "top_n_cdds", "[", "i", "]", "[", "j", ",", "1", ":", "5", "]", ".", "astype", "(", "np", ".", "int", ")", "\n", "part_imgs", "[", "i", ":", "i", "+", "1", ",", "j", "]", "=", "F", ".", "upsample", "(", "x_pad", "[", "i", ":", "i", "+", "1", ",", ":", ",", "y0", ":", "y1", ",", "x0", ":", "x1", "]", ",", "size", "=", "(", "224", ",", "224", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ")", "\n", "", "", "part_imgs", "=", "part_imgs", ".", "view", "(", "batch", "*", "self", ".", "topN", ",", "3", ",", "224", ",", "224", ")", "\n", "_", ",", "_", ",", "part_features", "=", "self", ".", "pretrained_model", "(", "part_imgs", ".", "detach", "(", ")", ")", "\n", "part_feature", "=", "part_features", ".", "view", "(", "batch", ",", "self", ".", "topN", ",", "-", "1", ")", "\n", "part_feature", "=", "part_feature", "[", ":", ",", ":", "CAT_NUM", ",", "...", "]", ".", "contiguous", "(", ")", "\n", "part_feature", "=", "part_feature", ".", "view", "(", "batch", ",", "-", "1", ")", "\n", "# concat_logits have the shape: B*2341", "\n", "concat_out", "=", "torch", ".", "cat", "(", "[", "part_feature", ",", "feature", "]", ",", "dim", "=", "1", ")", "\n", "concat_logits", "=", "self", ".", "concat_net", "(", "concat_out", ")", "\n", "raw_logits", "=", "resnet_out", "\n", "aug_logits", "=", "self", ".", "aug_net", "(", "part_features", ")", "\n", "# part_logits have the shape: B*N*2341", "\n", "part_logits", "=", "self", ".", "partcls_net", "(", "part_features", ")", ".", "view", "(", "batch", ",", "self", ".", "topN", ",", "-", "1", ")", "\n", "return", "[", "raw_logits", ",", "aug_logits", ",", "concat_logits", ",", "part_logits", ",", "top_n_index", ",", "top_n_prob", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.list_loss": [[116, 120], ["torch.log_softmax", "torch.stack", "torch.stack", "range", "logits.size", "targets[].item"], "function", ["None"], ["", "", "def", "list_loss", "(", "logits", ",", "targets", ")", ":", "\n", "    ", "temp", "=", "F", ".", "log_softmax", "(", "logits", ",", "-", "1", ")", "\n", "loss", "=", "[", "-", "temp", "[", "i", "]", "[", "targets", "[", "i", "]", ".", "item", "(", ")", "]", "for", "i", "in", "range", "(", "logits", ".", "size", "(", "0", ")", ")", "]", "\n", "return", "torch", ".", "stack", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_vgg.ranking_loss": [[122, 132], ["torch.autograd.Variable", "score.size", "range", "torch.zeros().cuda", "torch.zeros().cuda", "score[].unsqueeze", "torch.sum", "torch.sum", "torch.relu", "torch.zeros", "torch.zeros", "targets[].unsqueeze"], "function", ["None"], ["", "def", "ranking_loss", "(", "score", ",", "targets", ",", "proposal_num", "=", "PROPOSAL_NUM", ")", ":", "\n", "    ", "loss", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ")", "\n", "batch_size", "=", "score", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "proposal_num", ")", ":", "\n", "        ", "targets_p", "=", "(", "targets", ">", "targets", "[", ":", ",", "i", "]", ".", "unsqueeze", "(", "1", ")", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "pivot", "=", "score", "[", ":", ",", "i", "]", ".", "unsqueeze", "(", "1", ")", "\n", "loss_p", "=", "(", "1", "-", "pivot", "+", "score", ")", "*", "targets_p", "\n", "loss_p", "=", "torch", ".", "sum", "(", "F", ".", "relu", "(", "loss_p", ")", ")", "\n", "loss", "+=", "loss_p", "\n", "", "return", "loss", "/", "batch_size", "\n", "", ""]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.VGG.__init__": [[27, 45], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "vgg.VGG._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "features", ",", "num_classes", "=", "1000", ",", "init_weights", "=", "True", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "7", ",", "7", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "4096", ")", ",", "\n", "#nn.Linear(16384, 4096),", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n", "#self.fc = nn.Linear(512*7*7, num_classes)", "\n", "if", "init_weights", ":", "\n", "#self.fc  = nn.Linear(4096, num_classes)", "\n", "            ", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.VGG.forward": [[46, 54], ["vgg.VGG.features", "vgg.VGG.avgpool", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "feature1", "=", "x", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "feature2", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "feature1", ",", "feature2", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.VGG._initialize_weights": [[55, 67], ["vgg.VGG.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.make_layers": [[69, 83], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "", "", "", "def", "make_layers", "(", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg": [[93, 100], ["vgg.VGG", "vgg.make_layers", "VGG.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.make_layers"], ["def", "_vgg", "(", "arch", ",", "cfg", ",", "batch_norm", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "pretrained", ":", "\n", "        ", "kwargs", "[", "'init_weights'", "]", "=", "False", "\n", "", "model", "=", "VGG", "(", "make_layers", "(", "cfgs", "[", "cfg", "]", ",", "batch_norm", "=", "batch_norm", ")", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "arch", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg11": [[102, 109], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg11", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\")\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg11'", ",", "'A'", ",", "False", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg11_bn": [[111, 118], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg11_bn", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\") with batch normalization\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg11_bn'", ",", "'A'", ",", "True", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg13": [[120, 127], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg13", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\")\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg13'", ",", "'B'", ",", "False", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg13_bn": [[129, 136], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg13_bn", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\") with batch normalization\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg13_bn'", ",", "'B'", ",", "True", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg16": [[138, 145], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg16", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\")\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg16'", ",", "'D'", ",", "False", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg16_bn": [[147, 154], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg16_bn", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\") with batch normalization\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg16_bn'", ",", "'D'", ",", "True", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg19": [[156, 163], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg19", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration \"E\")\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg19'", ",", "'E'", ",", "False", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg.vgg19_bn": [[165, 172], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.vgg._vgg"], ["", "def", "vgg19_bn", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration 'E') with batch normalization\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_vgg", "(", "'vgg19_bn'", ",", "'E'", ",", "True", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.data_loader.GetLoader.__init__": [[9, 27], ["open", "open.readlines", "open.close", "len", "data_loader.GetLoader.img_paths.append", "data_loader.GetLoader.labels.append", "image_path.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_root", ",", "data_list", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "self", ".", "data_root", "=", "data_root", "\n", "# print(self.data_root)", "\n", "f", "=", "open", "(", "data_list", ",", "'r'", ")", "\n", "data_list", "=", "f", ".", "readlines", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "self", ".", "n_data", "=", "len", "(", "data_list", ")", "\n", "\n", "self", ".", "img_paths", "=", "[", "]", "\n", "self", ".", "labels", "=", "[", "]", "\n", "\n", "for", "data", "in", "data_list", ":", "\n", "            ", "image_path", "=", "data", "[", ":", "-", "1", "]", "\n", "label", "=", "image_path", ".", "split", "(", "'/'", ")", "[", "1", "]", "\n", "self", ".", "img_paths", ".", "append", "(", "image_path", ")", "\n", "self", ".", "labels", ".", "append", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.data_loader.GetLoader.__getitem__": [[28, 42], ["PIL.Image.open().convert", "int", "data_loader.GetLoader.transform", "PIL.Image.open"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "\n", "#   print(self.data_root)", "\n", "        ", "img_path", ",", "label", "=", "self", ".", "img_paths", "[", "item", "]", ",", "self", ".", "labels", "[", "item", "]", "\n", "#img_path_full = os.path.join(self.data_root, img_path)", "\n", "img_path_full", "=", "self", ".", "data_root", "+", "img_path", "\n", "#  print(img_path_full)", "\n", "img", "=", "Image", ".", "open", "(", "img_path_full", ")", ".", "convert", "(", "'RGB'", ")", "\n", "# label = np.array(label,dtype='float32')", "\n", "label", "=", "int", "(", "label", ")", "-", "100", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.data_loader.GetLoader.__len__": [[43, 45], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_data", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.generate_default_anchor_maps": [[11, 62], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.array", "numpy.ceil", "output_map_shape.astype.astype", "numpy.arange", "oy.reshape.reshape", "numpy.arange", "ox.reshape.reshape", "numpy.zeros", "tuple", "np.array.astype", "np.zeros.copy", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "float", "float", "center_anchor_map_template.copy.reshape", "np.concatenate.reshape", "anchor_area_map.reshape"], "function", ["None"], ["def", "generate_default_anchor_maps", "(", "anchors_setting", "=", "None", ",", "input_shape", "=", "INPUT_SIZE", ")", ":", "\n", "    ", "\"\"\"\n    generate default anchor\n\n    :param anchors_setting: all informations of anchors\n    :param input_shape: shape of input images, e.g. (h, w)\n    :return: center_anchors: # anchors * 4 (oy, ox, h, w)\n             edge_anchors: # anchors * 4 (y0, x0, y1, x1)\n             anchor_area: # anchors * 1 (area)\n    \"\"\"", "\n", "if", "anchors_setting", "is", "None", ":", "\n", "        ", "anchors_setting", "=", "_default_anchors_setting", "\n", "\n", "", "center_anchors", "=", "np", ".", "zeros", "(", "(", "0", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "edge_anchors", "=", "np", ".", "zeros", "(", "(", "0", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "anchor_areas", "=", "np", ".", "zeros", "(", "(", "0", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "input_shape", "=", "np", ".", "array", "(", "input_shape", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "anchor_info", "in", "anchors_setting", ":", "\n", "\n", "        ", "stride", "=", "anchor_info", "[", "'stride'", "]", "\n", "size", "=", "anchor_info", "[", "'size'", "]", "\n", "scales", "=", "anchor_info", "[", "'scale'", "]", "\n", "aspect_ratios", "=", "anchor_info", "[", "'aspect_ratio'", "]", "\n", "\n", "output_map_shape", "=", "np", ".", "ceil", "(", "input_shape", ".", "astype", "(", "np", ".", "float32", ")", "/", "stride", ")", "\n", "output_map_shape", "=", "output_map_shape", ".", "astype", "(", "np", ".", "int", ")", "\n", "output_shape", "=", "tuple", "(", "output_map_shape", ")", "+", "(", "4", ",", ")", "\n", "ostart", "=", "stride", "/", "2.", "\n", "oy", "=", "np", ".", "arange", "(", "ostart", ",", "ostart", "+", "stride", "*", "output_shape", "[", "0", "]", ",", "stride", ")", "\n", "oy", "=", "oy", ".", "reshape", "(", "output_shape", "[", "0", "]", ",", "1", ")", "\n", "ox", "=", "np", ".", "arange", "(", "ostart", ",", "ostart", "+", "stride", "*", "output_shape", "[", "1", "]", ",", "stride", ")", "\n", "ox", "=", "ox", ".", "reshape", "(", "1", ",", "output_shape", "[", "1", "]", ")", "\n", "center_anchor_map_template", "=", "np", ".", "zeros", "(", "output_shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "center_anchor_map_template", "[", ":", ",", ":", ",", "0", "]", "=", "oy", "\n", "center_anchor_map_template", "[", ":", ",", ":", ",", "1", "]", "=", "ox", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "for", "aspect_ratio", "in", "aspect_ratios", ":", "\n", "                ", "center_anchor_map", "=", "center_anchor_map_template", ".", "copy", "(", ")", "\n", "center_anchor_map", "[", ":", ",", ":", ",", "2", "]", "=", "size", "*", "scale", "/", "float", "(", "aspect_ratio", ")", "**", "0.5", "\n", "center_anchor_map", "[", ":", ",", ":", ",", "3", "]", "=", "size", "*", "scale", "*", "float", "(", "aspect_ratio", ")", "**", "0.5", "\n", "\n", "edge_anchor_map", "=", "np", ".", "concatenate", "(", "(", "center_anchor_map", "[", "...", ",", ":", "2", "]", "-", "center_anchor_map", "[", "...", ",", "2", ":", "4", "]", "/", "2.", ",", "\n", "center_anchor_map", "[", "...", ",", ":", "2", "]", "+", "center_anchor_map", "[", "...", ",", "2", ":", "4", "]", "/", "2.", ")", ",", "\n", "axis", "=", "-", "1", ")", "\n", "anchor_area_map", "=", "center_anchor_map", "[", "...", ",", "2", "]", "*", "center_anchor_map", "[", "...", ",", "3", "]", "\n", "center_anchors", "=", "np", ".", "concatenate", "(", "(", "center_anchors", ",", "center_anchor_map", ".", "reshape", "(", "-", "1", ",", "4", ")", ")", ")", "\n", "edge_anchors", "=", "np", ".", "concatenate", "(", "(", "edge_anchors", ",", "edge_anchor_map", ".", "reshape", "(", "-", "1", ",", "4", ")", ")", ")", "\n", "anchor_areas", "=", "np", ".", "concatenate", "(", "(", "anchor_areas", ",", "anchor_area_map", ".", "reshape", "(", "-", "1", ")", ")", ")", "\n", "\n", "", "", "", "return", "center_anchors", ",", "edge_anchors", ",", "anchor_areas", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.hard_nms": [[64, 92], ["cdds.copy.copy", "numpy.argsort", "res.any", "numpy.array", "TypeError", "cdd_results.append", "numpy.maximum", "numpy.minimum", "len", "numpy.array", "len", "numpy.logical_or", "type"], "function", ["None"], ["", "def", "hard_nms", "(", "cdds", ",", "topn", "=", "10", ",", "iou_thresh", "=", "0.25", ")", ":", "\n", "    ", "if", "not", "(", "type", "(", "cdds", ")", ".", "__module__", "==", "'numpy'", "and", "len", "(", "cdds", ".", "shape", ")", "==", "2", "and", "cdds", ".", "shape", "[", "1", "]", ">=", "5", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'edge_box_map should be N * 5+ ndarray'", ")", "\n", "\n", "", "cdds", "=", "cdds", ".", "copy", "(", ")", "\n", "indices", "=", "np", ".", "argsort", "(", "cdds", "[", ":", ",", "0", "]", ")", "\n", "cdds", "=", "cdds", "[", "indices", "]", "\n", "cdd_results", "=", "[", "]", "\n", "\n", "res", "=", "cdds", "\n", "\n", "while", "res", ".", "any", "(", ")", ":", "\n", "        ", "cdd", "=", "res", "[", "-", "1", "]", "\n", "cdd_results", ".", "append", "(", "cdd", ")", "\n", "if", "len", "(", "cdd_results", ")", "==", "topn", ":", "\n", "            ", "return", "np", ".", "array", "(", "cdd_results", ")", "\n", "", "res", "=", "res", "[", ":", "-", "1", "]", "\n", "\n", "start_max", "=", "np", ".", "maximum", "(", "res", "[", ":", ",", "1", ":", "3", "]", ",", "cdd", "[", "1", ":", "3", "]", ")", "\n", "end_min", "=", "np", ".", "minimum", "(", "res", "[", ":", ",", "3", ":", "5", "]", ",", "cdd", "[", "3", ":", "5", "]", ")", "\n", "lengths", "=", "end_min", "-", "start_max", "\n", "intersec_map", "=", "lengths", "[", ":", ",", "0", "]", "*", "lengths", "[", ":", ",", "1", "]", "\n", "intersec_map", "[", "np", ".", "logical_or", "(", "lengths", "[", ":", ",", "0", "]", "<", "0", ",", "lengths", "[", ":", ",", "1", "]", "<", "0", ")", "]", "=", "0", "\n", "iou_map_cur", "=", "intersec_map", "/", "(", "(", "res", "[", ":", ",", "3", "]", "-", "res", "[", ":", ",", "1", "]", ")", "*", "(", "res", "[", ":", ",", "4", "]", "-", "res", "[", ":", ",", "2", "]", ")", "+", "(", "cdd", "[", "3", "]", "-", "cdd", "[", "1", "]", ")", "*", "(", "\n", "cdd", "[", "4", "]", "-", "cdd", "[", "2", "]", ")", "-", "intersec_map", ")", "\n", "res", "=", "res", "[", "iou_map_cur", "<", "iou_thresh", "]", "\n", "\n", "", "return", "np", ".", "array", "(", "cdd_results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.ProposalNet.__init__": [[12, 21], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ProposalNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "down1", "=", "nn", ".", "Conv2d", "(", "2048", ",", "128", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "down2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "down3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "2", ",", "1", ")", "\n", "self", ".", "ReLU", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tidy1", "=", "nn", ".", "Conv2d", "(", "128", ",", "6", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "tidy2", "=", "nn", ".", "Conv2d", "(", "128", ",", "6", ",", "1", ",", "1", ",", "0", ")", "\n", "self", ".", "tidy3", "=", "nn", ".", "Conv2d", "(", "128", ",", "9", ",", "1", ",", "1", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.ProposalNet.forward": [[22, 31], ["x.size", "model_resnet.ProposalNet.ReLU", "model_resnet.ProposalNet.ReLU", "model_resnet.ProposalNet.ReLU", "model_resnet.ProposalNet.tidy1().view", "model_resnet.ProposalNet.tidy2().view", "model_resnet.ProposalNet.tidy3().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_resnet.ProposalNet.down1", "model_resnet.ProposalNet.down2", "model_resnet.ProposalNet.down3", "model_resnet.ProposalNet.tidy1", "model_resnet.ProposalNet.tidy2", "model_resnet.ProposalNet.tidy3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "d1", "=", "self", ".", "ReLU", "(", "self", ".", "down1", "(", "x", ")", ")", "\n", "d2", "=", "self", ".", "ReLU", "(", "self", ".", "down2", "(", "d1", ")", ")", "\n", "d3", "=", "self", ".", "ReLU", "(", "self", ".", "down3", "(", "d2", ")", ")", "\n", "t1", "=", "self", ".", "tidy1", "(", "d1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "t2", "=", "self", ".", "tidy2", "(", "d2", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "t3", "=", "self", ".", "tidy3", "(", "d3", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "return", "torch", ".", "cat", "(", "(", "t1", ",", "t2", ",", "t3", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.aug_net.__init__": [[33, 44], ["torch.nn.Module.__init__", "net.get_features", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "NUM_CLASSES", ",", "M", "=", "32", ",", "net", "=", "None", ")", ":", "\n", "        ", "super", "(", "aug_net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "NUM_CLASSES", "\n", "self", ".", "M", "=", "M", "\n", "self", ".", "num_features", "=", "2048", "\n", "self", ".", "expansion", "=", "1", "\n", "self", ".", "features", "=", "net", ".", "get_features", "(", ")", "\n", "self", ".", "expansion", "=", "self", ".", "features", "[", "-", "1", "]", "[", "-", "1", "]", ".", "expansion", "\n", "self", ".", "num_features", "=", "512", "\n", "self", ".", "attentions", "=", "nn", ".", "Conv2d", "(", "self", ".", "num_features", "*", "self", ".", "expansion", ",", "self", ".", "M", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "M", "*", "self", ".", "num_features", "*", "self", ".", "expansion", ",", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.aug_net.forward": [[45, 62], ["x.size", "model_resnet.aug_net.features", "model_resnet.aug_net.attentions", "numpy.random.randint", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "torch.mean.view", "torch.mean.view", "torch.mean.max", "torch.mean.max", "torch.mean.min", "torch.mean.min", "torch.mean.view", "torch.mean.view", "torch.device", "torch.device", "torch.device", "torch.device", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "feature_maps", "=", "self", ".", "features", "(", "x", ")", "\n", "attention_maps", "=", "self", ".", "attentions", "(", "feature_maps", ")", "\n", "k_indices", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "M", ",", "size", "=", "batch_size", ")", "\n", "attention_map", "=", "torch", ".", "zeros", "(", "batch_size", ",", "-", "1", ")", ".", "to", "(", "torch", ".", "device", "(", "\"cuda\"", ")", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "attention_map", "[", "i", "]", "=", "attention_maps", "[", "i", ",", "k_indices", "[", "i", "]", ":", "k_indices", "[", "i", "]", "+", "1", ",", "...", "]", "\n", "", "else", ":", "\n", "            ", "attention_map", "=", "torch", ".", "mean", "(", "attention_maps", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "attention_map", "=", "attention_map", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "attention_map_max", ",", "_", "=", "attention_map", ".", "max", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "attention_map_min", ",", "_", "=", "attention_map", ".", "min", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "attention_map", "=", "(", "attention_map", "-", "attention_map_min", ")", "/", "(", "attention_map_max", "-", "attention_map_min", ")", "\n", "attention_map", "=", "attention_map", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "\n", "return", "attention_map", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.attention_net.__init__": [[68, 81], ["torch.nn.Module.__init__", "core.resnet.resnet152", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Linear", "torch.nn.Linear", "model_resnet.ProposalNet", "model_resnet.aug_net", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "core.anchors.generate_default_anchor_maps"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet152", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.generate_default_anchor_maps"], ["    ", "def", "__init__", "(", "self", ",", "topN", "=", "4", ")", ":", "\n", "        ", "super", "(", "attention_net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained_model", "=", "resnet", ".", "resnet152", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "pretrained_model", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "pretrained_model", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "2", ",", "2341", ")", "\n", "self", ".", "proposal_net", "=", "ProposalNet", "(", ")", "\n", "self", ".", "topN", "=", "topN", "\n", "self", ".", "aug_net", "=", "aug_net", "(", ")", "\n", "self", ".", "concat_net", "=", "nn", ".", "Linear", "(", "2048", "*", "(", "CAT_NUM", "+", "1", ")", ",", "2341", ")", "\n", "self", ".", "partcls_net", "=", "nn", ".", "Linear", "(", "512", "*", "2", ",", "2341", ")", "\n", "_", ",", "edge_anchors", ",", "_", "=", "generate_default_anchor_maps", "(", ")", "\n", "self", ".", "pad_side", "=", "224", "\n", "self", ".", "edge_anchors", "=", "(", "edge_anchors", "+", "224", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.attention_net.forward": [[82, 113], ["model_resnet.attention_net.pretrained_model", "torch.pad", "torch.pad", "x.size", "model_resnet.attention_net.proposal_net", "numpy.array", "top_n_cdds[].astype", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "range", "part_imgs.view.view.view", "model_resnet.attention_net.pretrained_model", "part_features.view", "part_feature[].contiguous", "part_feature.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_resnet.attention_net.concat_net", "model_resnet.attention_net.aug_net", "model_resnet.attention_net.partcls_net().view", "rpn_feature.detach", "numpy.concatenate", "core.anchors.hard_nms", "range", "part_imgs.view.view.detach", "model_resnet.attention_net.data.cpu().numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "[].astype", "torch.upsample", "torch.upsample", "model_resnet.attention_net.partcls_net", "x.reshape", "model_resnet.attention_net.edge_anchors.copy", "numpy.arange().reshape", "model_resnet.attention_net.data.cpu", "numpy.arange", "len"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.anchors.hard_nms"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "resnet_out", ",", "rpn_feature", ",", "feature", "=", "self", ".", "pretrained_model", "(", "x", ")", "\n", "x_pad", "=", "F", ".", "pad", "(", "x", ",", "(", "self", ".", "pad_side", ",", "self", ".", "pad_side", ",", "self", ".", "pad_side", ",", "self", ".", "pad_side", ")", ",", "mode", "=", "'constant'", ",", "value", "=", "0", ")", "\n", "batch", "=", "x", ".", "size", "(", "0", ")", "\n", "# we will reshape rpn to shape: batch * nb_anchor", "\n", "rpn_score", "=", "self", ".", "proposal_net", "(", "rpn_feature", ".", "detach", "(", ")", ")", "\n", "all_cdds", "=", "[", "np", ".", "concatenate", "(", "(", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", ",", "self", ".", "edge_anchors", ".", "copy", "(", ")", ",", "np", ".", "arange", "(", "0", ",", "len", "(", "x", ")", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ",", "axis", "=", "1", ")", "\n", "for", "x", "in", "rpn_score", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "]", "\n", "top_n_cdds", "=", "[", "hard_nms", "(", "x", ",", "topn", "=", "self", ".", "topN", ",", "iou_thresh", "=", "0.25", ")", "for", "x", "in", "all_cdds", "]", "\n", "top_n_cdds", "=", "np", ".", "array", "(", "top_n_cdds", ")", "\n", "top_n_index", "=", "top_n_cdds", "[", ":", ",", ":", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "int", ")", "\n", "top_n_index", "=", "torch", ".", "from_numpy", "(", "top_n_index", ")", ".", "cuda", "(", ")", "\n", "top_n_prob", "=", "torch", ".", "gather", "(", "rpn_score", ",", "dim", "=", "1", ",", "index", "=", "top_n_index", ")", "\n", "part_imgs", "=", "torch", ".", "zeros", "(", "[", "batch", ",", "self", ".", "topN", ",", "3", ",", "224", ",", "224", "]", ")", ".", "cuda", "(", ")", "\n", "for", "i", "in", "range", "(", "batch", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "topN", ")", ":", "\n", "                ", "[", "y0", ",", "x0", ",", "y1", ",", "x1", "]", "=", "top_n_cdds", "[", "i", "]", "[", "j", ",", "1", ":", "5", "]", ".", "astype", "(", "np", ".", "int", ")", "\n", "part_imgs", "[", "i", ":", "i", "+", "1", ",", "j", "]", "=", "F", ".", "upsample", "(", "x_pad", "[", "i", ":", "i", "+", "1", ",", ":", ",", "y0", ":", "y1", ",", "x0", ":", "x1", "]", ",", "size", "=", "(", "224", ",", "224", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "", "", "part_imgs", "=", "part_imgs", ".", "view", "(", "batch", "*", "self", ".", "topN", ",", "3", ",", "224", ",", "224", ")", "\n", "_", ",", "_", ",", "part_features", "=", "self", ".", "pretrained_model", "(", "part_imgs", ".", "detach", "(", ")", ")", "\n", "part_feature", "=", "part_features", ".", "view", "(", "batch", ",", "self", ".", "topN", ",", "-", "1", ")", "\n", "part_feature", "=", "part_feature", "[", ":", ",", ":", "CAT_NUM", ",", "...", "]", ".", "contiguous", "(", ")", "\n", "part_feature", "=", "part_feature", ".", "view", "(", "batch", ",", "-", "1", ")", "\n", "# concat_logits have the shape: B*2341", "\n", "concat_out", "=", "torch", ".", "cat", "(", "[", "part_feature", ",", "feature", "]", ",", "dim", "=", "1", ")", "\n", "concat_logits", "=", "self", ".", "concat_net", "(", "concat_out", ")", "\n", "raw_logits", "=", "resnet_out", "\n", "aug_logits", "=", "self", ".", "aug_net", "(", "part_features", ")", "\n", "# part_logits have the shape: B*N*2341", "\n", "part_logits", "=", "self", ".", "partcls_net", "(", "part_features", ")", ".", "view", "(", "batch", ",", "self", ".", "topN", ",", "-", "1", ")", "\n", "return", "[", "raw_logits", ",", "aug_logits", ",", "concat_logits", ",", "part_logits", ",", "top_n_index", ",", "top_n_prob", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.list_loss": [[115, 119], ["torch.log_softmax", "torch.stack", "torch.stack", "range", "logits.size", "targets[].item"], "function", ["None"], ["", "", "def", "list_loss", "(", "logits", ",", "targets", ")", ":", "\n", "    ", "temp", "=", "F", ".", "log_softmax", "(", "logits", ",", "-", "1", ")", "\n", "loss", "=", "[", "-", "temp", "[", "i", "]", "[", "targets", "[", "i", "]", ".", "item", "(", ")", "]", "for", "i", "in", "range", "(", "logits", ".", "size", "(", "0", ")", ")", "]", "\n", "return", "torch", ".", "stack", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.model_resnet.ranking_loss": [[121, 131], ["torch.autograd.Variable", "score.size", "range", "torch.zeros().cuda", "torch.zeros().cuda", "score[].unsqueeze", "torch.sum", "torch.sum", "torch.relu", "torch.zeros", "torch.zeros", "targets[].unsqueeze"], "function", ["None"], ["", "def", "ranking_loss", "(", "score", ",", "targets", ",", "proposal_num", "=", "PROPOSAL_NUM", ")", ":", "\n", "    ", "loss", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ")", ".", "cuda", "(", ")", ")", "\n", "batch_size", "=", "score", ".", "size", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "proposal_num", ")", ":", "\n", "        ", "targets_p", "=", "(", "targets", ">", "targets", "[", ":", ",", "i", "]", ".", "unsqueeze", "(", "1", ")", ")", ".", "type", "(", "torch", ".", "cuda", ".", "FloatTensor", ")", "\n", "pivot", "=", "score", "[", ":", ",", "i", "]", ".", "unsqueeze", "(", "1", ")", "\n", "loss_p", "=", "(", "1", "-", "pivot", "+", "score", ")", "*", "targets_p", "\n", "loss_p", "=", "torch", ".", "sum", "(", "F", ".", "relu", "(", "loss_p", ")", ")", "\n", "loss", "+=", "loss_p", "\n", "", "return", "loss", "/", "batch_size", "\n", "", ""]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.BasicBlock.__init__": [[26, 35], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.conv3x3", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.BasicBlock.forward": [[36, 53], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.Bottleneck.__init__": [[58, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.Bottleneck.forward": [[72, 93], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__": [[96, 118], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.__init__", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet._make_layer": [[119, 135], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.ResNet.forward": [[136, 154], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.fc", "resnet.ResNet.size", "torch.Dropout", "torch.Dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "feature1", "=", "x", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "(", "x", ")", "\n", "feature2", "=", "x", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", ",", "feature1", ",", "feature2", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.conv3x3": [[17, 21], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet18": [[156, 166], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet34": [[168, 178], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet50": [[180, 190], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet101": [[192, 202], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.resnet.resnet152": [[204, 214], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.utils.progress_bar": [[15, 57], ["int", "sys.stdout.write", "range", "sys.stdout.write", "range", "sys.stdout.write", "time.time", "L.append", "L.append", "sys.stdout.write", "range", "range", "sys.stdout.write", "sys.stdout.flush", "time.time", "int", "sys.stdout.write", "sys.stdout.write", "L.append", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "utils.format_time", "utils.format_time", "int", "len", "int"], "function", ["home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.utils.format_time", "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.utils.format_time"], ["def", "progress_bar", "(", "current", ",", "total", ",", "msg", "=", "None", ")", ":", "\n", "    ", "global", "last_time", ",", "begin_time", "\n", "if", "current", "==", "0", ":", "\n", "        ", "begin_time", "=", "time", ".", "time", "(", ")", "# Reset for new bar.", "\n", "\n", "", "cur_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "*", "current", "/", "total", ")", "\n", "rest_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "-", "cur_len", ")", "-", "1", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "' ['", ")", "\n", "for", "i", "in", "range", "(", "cur_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'='", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "'>'", ")", "\n", "for", "i", "in", "range", "(", "rest_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'.'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "']'", ")", "\n", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "step_time", "=", "cur_time", "-", "last_time", "\n", "last_time", "=", "cur_time", "\n", "tot_time", "=", "cur_time", "-", "begin_time", "\n", "\n", "L", "=", "[", "]", "\n", "L", ".", "append", "(", "'  Step: %s'", "%", "format_time", "(", "step_time", ")", ")", "\n", "L", ".", "append", "(", "' | Tot: %s'", "%", "format_time", "(", "tot_time", ")", ")", "\n", "if", "msg", ":", "\n", "        ", "L", ".", "append", "(", "' | '", "+", "msg", ")", "\n", "\n", "", "msg", "=", "''", ".", "join", "(", "L", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "msg", ")", "\n", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", ")", "-", "len", "(", "msg", ")", "-", "3", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "' '", ")", "\n", "\n", "# Go back to the center of the bar.", "\n", "", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", "/", "2", ")", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\b'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "' %d/%d '", "%", "(", "current", "+", "1", ",", "total", ")", ")", "\n", "\n", "if", "current", "<", "total", "-", "1", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\r'", ")", "\n", "", "else", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\n'", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.utils.format_time": [[59, 90], ["int", "int", "int", "int", "int", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "format_time", "(", "seconds", ")", ":", "\n", "    ", "days", "=", "int", "(", "seconds", "/", "3600", "/", "24", ")", "\n", "seconds", "=", "seconds", "-", "days", "*", "3600", "*", "24", "\n", "hours", "=", "int", "(", "seconds", "/", "3600", ")", "\n", "seconds", "=", "seconds", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "seconds", "/", "60", ")", "\n", "seconds", "=", "seconds", "-", "minutes", "*", "60", "\n", "secondsf", "=", "int", "(", "seconds", ")", "\n", "seconds", "=", "seconds", "-", "secondsf", "\n", "millis", "=", "int", "(", "seconds", "*", "1000", ")", "\n", "\n", "f", "=", "''", "\n", "i", "=", "1", "\n", "if", "days", ">", "0", ":", "\n", "        ", "f", "+=", "str", "(", "days", ")", "+", "'D'", "\n", "i", "+=", "1", "\n", "", "if", "hours", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "hours", ")", "+", "'h'", "\n", "i", "+=", "1", "\n", "", "if", "minutes", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "minutes", ")", "+", "'m'", "\n", "i", "+=", "1", "\n", "", "if", "secondsf", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "secondsf", ")", "+", "'s'", "\n", "i", "+=", "1", "\n", "", "if", "millis", ">", "0", "and", "i", "<=", "2", ":", "\n", "        ", "f", "+=", "str", "(", "millis", ")", "+", "'ms'", "\n", "i", "+=", "1", "\n", "", "if", "f", "==", "''", ":", "\n", "        ", "f", "=", "'0ms'", "\n", "", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.msn199959_Logo-2k-plus-Dataset.core.utils.init_log": [[92, 102], ["logging.basicConfig", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.getLogger().addHandler", "os.path.join", "logging.getLogger"], "function", ["None"], ["", "def", "init_log", "(", "output_dir", ")", ":", "\n", "    ", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "DEBUG", ",", "\n", "format", "=", "'%(asctime)s %(message)s'", ",", "\n", "datefmt", "=", "'%Y%m%d-%H:%M:%S'", ",", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "'log.log'", ")", ",", "\n", "filemode", "=", "'w'", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "return", "logging", "\n", "\n"]]}