{"home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL.__init__": [[13, 43], ["torch.device", "torch.device", "torch.device", "torch.device", "replaybuffer.ReplayBuffer", "len", "cdqlnetwork.Model"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "system", ",", "all_actions", ",", "num_explore_episodes", ",", "gamma", ",", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", ")", ",", "folder_name", "=", "\"./\"", ",", "\n", "centralize_states", "=", "False", ",", "centralize_rewards", "=", "False", ",", "\n", "update_num", "=", "20", ")", ":", "\n", "\n", "        ", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "batch_size", "=", "32", "\n", "self", ".", "buffer", "=", "ReplayBuffer", "(", "1e6", ")", "\n", "\n", "self", ".", "folder_name", "=", "folder_name", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "centralize_states", "=", "centralize_states", "\n", "self", ".", "centralize_rewards", "=", "centralize_rewards", "\n", "self", ".", "system", "=", "system", "\n", "self", ".", "num_explore_episodes", "=", "num_explore_episodes", "\n", "self", ".", "all_actions", "=", "all_actions", "\n", "self", ".", "num_actions", "=", "len", "(", "self", ".", "all_actions", ")", "\n", "\n", "if", "self", ".", "centralize_states", ":", "\n", "            ", "num_bins", "=", "self", ".", "system", ".", "num_bins", "*", "2", "\n", "", "else", ":", "\n", "            ", "num_bins", "=", "self", ".", "system", ".", "num_bins", "\n", "\n", "", "self", ".", "model", "=", "Model", "(", "self", ".", "device", ",", "num_bins", "=", "num_bins", ",", "\n", "num_actions", "=", "self", ".", "num_actions", ")", "\n", "self", ".", "loss", "=", "[", "]", "\n", "self", ".", "store_Q", "=", "[", "]", "\n", "self", ".", "training_iter", "=", "0", "\n", "self", ".", "update_freq", "=", "2", "\n", "self", ".", "update_num", "=", "update_num", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._update": [[45, 93], ["cdql.CDQL.buffer.sample", "cdql.CDQL.buffer.transition", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().unsqueeze().long", "torch.tensor().unsqueeze().long", "torch.tensor().unsqueeze().long", "torch.tensor().unsqueeze().long", "torch.tensor().unsqueeze().float", "torch.tensor().unsqueeze().float", "torch.tensor().unsqueeze().float", "torch.tensor().unsqueeze().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().unsqueeze().bool", "torch.tensor().unsqueeze().bool", "torch.tensor().unsqueeze().bool", "torch.tensor().unsqueeze().bool", "cdql.CDQL.model.q_1().gather", "cdql.CDQL.model.q_2().gather", "cdql.CDQL.loss.append", "cdql.CDQL.model.q_optimizer_1.zero_grad", "cdql.CDQL.model.q_optimizer_2.zero_grad", "L_1.backward", "L_2.backward", "cdql.CDQL.model.q_optimizer_1.step", "cdql.CDQL.model.q_optimizer_2.step", "cdql.CDQL.store_Q.append", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.max", "torch.max", "torch.max", "torch.max", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "cdql.CDQL.model.update_target_nn", "zip", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "[].unsqueeze", "[].unsqueeze", "cdql.CDQL.model.q_1", "cdql.CDQL.model.q_2", "L_1.item", "L_2.item", "cdql.CDQL.tolist", "cdql.CDQL.tolist", "Q_expected.tolist", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "cdql.CDQL.model.q_target_1().min", "cdql.CDQL.model.q_target_2().min", "cdql.CDQL.model.q_target_1", "cdql.CDQL.model.q_target_2"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.sample", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.update_target_nn"], ["", "def", "_update", "(", "self", ")", ":", "\n", "        ", "\"\"\"Updates q1, q2, q1_target and q2_target networks based on\n        clipped Double Q Learning Algorithm\n        \"\"\"", "\n", "if", "(", "len", "(", "self", ".", "buffer", ")", "<", "self", ".", "batch_size", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "training_iter", "+=", "1", "\n", "# Make sure actor_target and critic_target are in eval mode", "\n", "assert", "not", "self", ".", "model", ".", "q_target_1", ".", "training", "\n", "assert", "not", "self", ".", "model", ".", "q_target_2", ".", "training", "\n", "\n", "assert", "self", ".", "model", ".", "q_1", ".", "training", "\n", "assert", "self", ".", "model", ".", "q_2", ".", "training", "\n", "transitions", "=", "self", ".", "buffer", ".", "sample", "(", "self", ".", "batch_size", ")", "\n", "batch", "=", "self", ".", "buffer", ".", "transition", "(", "*", "zip", "(", "*", "transitions", ")", ")", "\n", "state_batch", "=", "torch", ".", "tensor", "(", "batch", ".", "state", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "action_batch", "=", "torch", ".", "tensor", "(", "batch", ".", "action", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "long", "(", ")", "\n", "reward_batch", "=", "torch", ".", "tensor", "(", "batch", ".", "reward", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "float", "(", ")", "\n", "next_state_batch", "=", "torch", ".", "tensor", "(", "batch", ".", "next_state", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "is_done_batch", "=", "torch", ".", "tensor", "(", "batch", ".", "done", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "bool", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "Q_next_1", "=", "(", "(", "~", "is_done_batch", ")", "\n", "*", "(", "self", ".", "model", ".", "q_target_1", "(", "next_state_batch", ")", ".", "min", "(", "dim", "=", "-", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "-", "1", ")", ")", ")", "\n", "Q_next_2", "=", "(", "(", "~", "is_done_batch", ")", "\n", "*", "(", "self", ".", "model", ".", "q_target_2", "(", "next_state_batch", ")", ".", "min", "(", "dim", "=", "-", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "-", "1", ")", ")", ")", "\n", "\n", "# Use max want to avoid underestimation bias", "\n", "Q_next", "=", "torch", ".", "max", "(", "Q_next_1", ",", "Q_next_2", ")", "\n", "Q_expected", "=", "reward_batch", "+", "self", ".", "gamma", "*", "Q_next", "\n", "\n", "", "Q_1", "=", "self", ".", "model", ".", "q_1", "(", "state_batch", ")", ".", "gather", "(", "-", "1", ",", "action_batch", ")", "\n", "Q_2", "=", "self", ".", "model", ".", "q_2", "(", "state_batch", ")", ".", "gather", "(", "-", "1", ",", "action_batch", ")", "\n", "L_1", "=", "nn", ".", "MSELoss", "(", ")", "(", "Q_1", ",", "Q_expected", ")", "\n", "L_2", "=", "nn", ".", "MSELoss", "(", ")", "(", "Q_2", ",", "Q_expected", ")", "\n", "self", ".", "loss", ".", "append", "(", "[", "L_1", ".", "item", "(", ")", ",", "L_2", ".", "item", "(", ")", "]", ")", "\n", "self", ".", "model", ".", "q_optimizer_1", ".", "zero_grad", "(", ")", "\n", "self", ".", "model", ".", "q_optimizer_2", ".", "zero_grad", "(", ")", "\n", "L_1", ".", "backward", "(", ")", "\n", "L_2", ".", "backward", "(", ")", "\n", "self", ".", "model", ".", "q_optimizer_1", ".", "step", "(", ")", "\n", "self", ".", "model", ".", "q_optimizer_2", ".", "step", "(", ")", "\n", "self", ".", "store_Q", ".", "append", "(", "[", "Q_1", ".", "tolist", "(", ")", ",", "Q_2", ".", "tolist", "(", ")", ",", "Q_expected", ".", "tolist", "(", ")", "]", ")", "\n", "if", "(", "self", ".", "training_iter", "%", "self", ".", "update_freq", ")", "==", "0", ":", "\n", "            ", "self", ".", "model", ".", "update_target_nn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_state": [[94, 111], ["torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.tolist", "torch.cat.tolist", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "", "def", "_get_state", "(", "self", ",", "grid_dist", ",", "surrounding_dist", ")", ":", "\n", "        ", "\"\"\"Gets concatenated state if including state information about surrounding regions\n        (i.e. if self.centralize_states). Inputs a list of states for multiple regions/surrounding regions\n        Args:\n            grid_dist: A 2D List representing the state of the current region\n            surrounding_dist: A 2D List representing the state of the surrounding region\n        Returns:\n            A 2D List representing the final state information to use\n        \"\"\"", "\n", "if", "(", "self", ".", "centralize_states", ")", ":", "\n", "            ", "grid_dist", "=", "torch", ".", "tensor", "(", "grid_dist", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "surrounding_dist", "=", "torch", ".", "tensor", "(", "surrounding_dist", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "cat_dist", "=", "torch", ".", "cat", "(", "(", "grid_dist", ",", "surrounding_dist", ")", ",", "dim", "=", "1", ")", "\n", "return", "cat_dist", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "grid_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_reward": [[112, 129], ["torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "final_reward.tolist", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "", "def", "_get_reward", "(", "self", ",", "grid_reward", ",", "surrounding_reward", ")", ":", "\n", "        ", "\"\"\"Gets concatenated rewards if including cost information about surrounding regions\n        (i.e. if self.centralize_rewards).  Inputs a list of rewards for multiple regions/surrounding regions\n        Args:\n            grid_reward: A list representing the reward of the current region\n            surrounding_reward: A list representing the reward of the surrounding regions\n        Returns:\n            A list representing the final reward information to use\n        \"\"\"", "\n", "if", "(", "self", ".", "centralize_rewards", ")", ":", "\n", "            ", "grid_reward", "=", "torch", ".", "tensor", "(", "grid_reward", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "surrounding_reward", "=", "torch", ".", "tensor", "(", "surrounding_reward", ",", "\n", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "final_reward", "=", "(", "grid_reward", "+", "surrounding_reward", ")", "/", "2", "\n", "return", "final_reward", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "grid_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_action": [[130, 149], ["cdql.CDQL.model.q_1.eval", "cdql.CDQL.model.q_1.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.argmin().tolist", "torch.argmin().tolist", "torch.argmin().tolist", "torch.argmin().tolist", "random.choice", "list", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "range", "len", "cdql.CDQL.model.q_1"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL.train"], ["", "", "def", "_get_action", "(", "self", ",", "state", ",", "episode", ")", ":", "\n", "        ", "\"\"\"Gets action given some state\n        if episode is less than 5 returns a random action for each region\n        Args:\n            state: List of states (corresponding to each region)\n            episode: episode number\n        \"\"\"", "\n", "if", "(", "episode", "<", "self", ".", "num_explore_episodes", ")", ":", "\n", "            ", "action", "=", "[", "random", ".", "choice", "(", "list", "(", "range", "(", "self", ".", "num_actions", ")", ")", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "state", ")", ")", "]", "\n", "return", "action", "\n", "\n", "", "action", "=", "[", "]", "\n", "self", ".", "model", ".", "q_1", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "state", "=", "torch", ".", "tensor", "(", "state", ",", "device", "=", "self", ".", "device", ")", ".", "float", "(", ")", "\n", "action", "=", "torch", ".", "argmin", "(", "self", ".", "model", ".", "q_1", "(", "state", ")", ",", "dim", "=", "-", "1", ")", ".", "tolist", "(", ")", "\n", "", "self", ".", "model", ".", "q_1", ".", "train", "(", ")", "\n", "return", "action", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._save_data": [[150, 161], ["numpy.save", "numpy.save", "numpy.save", "cdql.CDQL.model.save_networks", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.save_networks"], ["", "def", "_save_data", "(", "self", ")", ":", "\n", "        ", "filename", "=", "self", ".", "folder_name", "+", "\"replaybuffer\"", "\n", "np", ".", "save", "(", "filename", ",", "np", ".", "array", "(", "self", ".", "buffer", ".", "buffer", ",", "dtype", "=", "object", ")", ")", "\n", "\n", "filename", "=", "self", ".", "folder_name", "+", "\"loss\"", "\n", "np", ".", "save", "(", "filename", ",", "np", ".", "array", "(", "self", ".", "loss", ")", ")", "\n", "\n", "filename", "=", "self", ".", "folder_name", "+", "\"Q_pair.npy\"", "\n", "np", ".", "save", "(", "filename", ",", "np", ".", "array", "(", "self", ".", "store_Q", ",", "dtype", "=", "object", ")", ")", "\n", "\n", "self", ".", "model", ".", "save_networks", "(", "self", ".", "folder_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._save_episode_data": [[162, 167], ["numpy.save", "cdql.CDQL.model.save_networks", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.save_networks"], ["", "def", "_save_episode_data", "(", "self", ",", "episode_folder_name", ")", ":", "\n", "        ", "filename", "=", "episode_folder_name", "+", "\"replaybuffer\"", "\n", "np", ".", "save", "(", "filename", ",", "np", ".", "array", "(", "self", ".", "buffer", ".", "buffer", ",", "dtype", "=", "object", ")", ")", "\n", "\n", "self", ".", "model", ".", "save_networks", "(", "episode_folder_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL.load_data": [[168, 172], ["torch.load().tolist", "torch.load().tolist", "torch.load().tolist", "torch.load().tolist", "cdql.CDQL.buffer.load_buffer", "cdql.CDQL.model.load_networks", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.load_buffer", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.load_networks"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss", "=", "torch", ".", "load", "(", "self", ".", "folder_name", "+", "\"loss.pt\"", ")", ".", "tolist", "(", ")", "\n", "self", ".", "buffer", ".", "load_buffer", "(", "self", ".", "folder_name", "+", "\"replaybuffer.npy\"", ")", "\n", "self", ".", "model", ".", "load_networks", "(", "self", ".", "folder_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL.train": [[173, 238], ["os.system", "range", "os.system", "cdql.CDQL.system.reset_context", "cdql.CDQL.system.run_decorrelation", "cdql.CDQL.system.get_state_reward", "cdql.CDQL._get_state", "range", "cdql.CDQL._save_episode_data", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "cdql.CDQL._save_data", "cdql.CDQL._get_action", "cdql.CDQL.system.get_state_reward", "cdql.CDQL._get_state", "cdql.CDQL._get_reward", "all_grid_states_cluster.append", "all_surrounding_states_cluster.append", "transition_to_add.extend", "zip", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "str", "str", "str", "cdql.CDQL.system.update_action", "cdql.CDQL.system.run_step", "all_system_states.append", "all_system_rewards.append", "all_system_states_cluster.append", "len", "cdql.CDQL.buffer.push", "cdql.CDQL._update", "print", "str", "str", "list"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.reset_context", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_decorrelation", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_state", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._save_episode_data", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._save_data", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_state", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_step", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.push", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._update"], ["", "def", "train", "(", "self", ",", "num_decisions", "=", "350", ")", ":", "\n", "        ", "\"\"\"Train q networks based on Clipped Double Q Learning\n        Args:\n            num_decisions: Number of decisions to train algorithm for\n        \"\"\"", "\n", "os", ".", "system", "(", "\"mkdir \"", "+", "self", ".", "folder_name", "+", "\"Train\"", ")", "\n", "for", "i", "in", "range", "(", "5000", ")", ":", "\n", "            ", "episode_folder_name", "=", "self", ".", "folder_name", "+", "\"Train/\"", "+", "str", "(", "i", ")", "+", "\"/\"", "\n", "all_system_states", "=", "[", "]", "\n", "all_system_rewards", "=", "[", "]", "\n", "all_system_states_cluster", "=", "[", "]", "\n", "all_grid_states_cluster", "=", "[", "]", "\n", "all_surrounding_states_cluster", "=", "[", "]", "\n", "os", ".", "system", "(", "\"mkdir \"", "+", "episode_folder_name", ")", "\n", "filename", "=", "episode_folder_name", "+", "str", "(", "i", ")", "+", "\".h5\"", "\n", "self", ".", "system", ".", "reset_context", "(", "filename", ")", "\n", "self", ".", "system", ".", "run_decorrelation", "(", "20", ")", "\n", "grid_dist", ",", "surrounding_dist", ",", "_", ",", "_", ",", "_", ",", "_", "=", "self", ".", "system", ".", "get_state_reward", "(", ")", "\n", "state", "=", "self", ".", "_get_state", "(", "grid_dist", ",", "surrounding_dist", ")", "\n", "for", "j", "in", "range", "(", "num_decisions", ")", ":", "\n", "                ", "action_index", "=", "self", ".", "_get_action", "(", "state", ",", "i", ")", "\n", "transition_to_add", "=", "[", "state", ",", "action_index", "]", "\n", "tag", "=", "\"_train_\"", "+", "str", "(", "j", ")", "\n", "actions", "=", "[", "self", ".", "all_actions", "[", "i", "]", "for", "i", "in", "action_index", "]", "\n", "try", ":", "\n", "                    ", "self", ".", "system", ".", "update_action", "(", "actions", ")", "\n", "system_states", ",", "system_rewards", ",", "system_states_cluster", "=", "self", ".", "system", ".", "run_step", "(", "\n", "is_detailed", "=", "True", ",", "tag", "=", "tag", ")", "\n", "all_system_states", ".", "append", "(", "system_states", ")", "\n", "all_system_rewards", ".", "append", "(", "system_rewards", ")", "\n", "all_system_states_cluster", ".", "append", "(", "system_states_cluster", ")", "\n", "\n", "", "except", "OpenMMException", ":", "\n", "                    ", "print", "(", "\"Broken Simulation at Episode:\"", ",", "\n", "str", "(", "i", ")", ",", "\", Decision:\"", ",", "str", "(", "j", ")", ")", "\n", "break", "\n", "\n", "", "grid_dist", ",", "surrounding_dist", ",", "grid_reward", ",", "surrounding_reward", ",", "grid_states_cluster", ",", "surrounding_states_cluster", "=", "self", ".", "system", ".", "get_state_reward", "(", ")", "\n", "state", "=", "self", ".", "_get_state", "(", "grid_dist", ",", "surrounding_dist", ")", "\n", "reward", "=", "self", ".", "_get_reward", "(", "grid_reward", ",", "surrounding_reward", ")", "\n", "\n", "all_grid_states_cluster", ".", "append", "(", "grid_states_cluster", ")", "\n", "all_surrounding_states_cluster", ".", "append", "(", "surrounding_states_cluster", ")", "\n", "\n", "# Use len_reward for number of grids", "\n", "done", "=", "[", "False", "]", "*", "len", "(", "reward", ")", "# Never Done", "\n", "transition_to_add", ".", "extend", "(", "[", "reward", ",", "state", ",", "done", "]", ")", "\n", "rb_decision_samples", "=", "0", "\n", "for", "rb_tuple", "in", "zip", "(", "*", "transition_to_add", ")", ":", "\n", "                    ", "self", ".", "buffer", ".", "push", "(", "*", "list", "(", "rb_tuple", ")", ")", "\n", "\n", "", "for", "_", "in", "range", "(", "self", ".", "update_num", ")", ":", "\n", "                    ", "self", ".", "_update", "(", ")", "\n", "", "", "self", ".", "_save_episode_data", "(", "episode_folder_name", ")", "\n", "np", ".", "save", "(", "episode_folder_name", "+", "\"system_states\"", ",", "\n", "np", ".", "array", "(", "all_system_states", ")", ")", "\n", "np", ".", "save", "(", "episode_folder_name", "+", "\"system_rewards\"", ",", "\n", "np", ".", "array", "(", "all_system_rewards", ")", ")", "\n", "np", ".", "save", "(", "episode_folder_name", "+", "\"system_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_system_states_cluster", ")", ")", "\n", "np", ".", "save", "(", "episode_folder_name", "+", "\"grid_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_grid_states_cluster", ",", "dtype", "=", "object", ")", ")", "\n", "np", ".", "save", "(", "episode_folder_name", "+", "\"all_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_surrounding_states_cluster", ")", ")", "\n", "self", ".", "_save_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL.test": [[240, 329], ["os.system", "cdql.CDQL.system.reset_context", "cdql.CDQL.system.run_decorrelation", "cdql.CDQL.system.get_state_reward", "cdql.CDQL._get_state", "all_dissipation.append", "range", "cdql.CDQL.system.get_dissipation", "cdql.CDQL._get_action", "all_actions.append", "cdql.CDQL.system.update_action", "cdql.CDQL.system.run_step", "cdql.CDQL.system.get_state_reward", "cdql.CDQL._get_state", "cdql.CDQL._get_reward", "all_grid_states.append", "all_grid_rewards.append", "all_grid_states_cluster.append", "all_surrounding_states_cluster.append", "all_dissipation.append", "all_system_states.append", "all_system_rewards.append", "all_system_states_cluster.append", "str", "cdql.CDQL.system.get_dissipation", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.reset_context", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_decorrelation", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_state", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.get_dissipation", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_step", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_state", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdql.CDQL._get_reward", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.get_dissipation"], ["", "", "def", "test", "(", "self", ",", "num_decisions", "=", "1000", ")", ":", "\n", "        ", "\"\"\"Given trained q networks, generate trajectories\n        Saves:\n            grid_rewards: Numpy array of all the rewards of each region along traj\n            grid_states: Numpy array of all the states (i.e. normalized distibution of cluster sizes)\n                         of each region along traj\n            grid_states_cluster: Numpy array of all the cluster sizes of each region along traj\n            actions: Numpy array of actions taken along trajectory\n            dissipation: Total dissipation (not average dissipation rate) along trajectory\n            system_states: Numpy array of states of the system along traj:\n            system_states_cluster: Numpy array of cluster sizes along traj\n            system_rewards: Numpy array of reward of entire system along traj\n        \"\"\"", "\n", "all_grid_states", "=", "[", "]", "\n", "all_grid_rewards", "=", "[", "]", "\n", "\n", "all_grid_states_cluster", "=", "[", "]", "\n", "all_surrounding_states_cluster", "=", "[", "]", "\n", "\n", "all_system_rewards", "=", "[", "]", "\n", "all_system_states", "=", "[", "]", "\n", "all_system_states_cluster", "=", "[", "]", "\n", "\n", "all_actions", "=", "[", "]", "\n", "all_dissipation", "=", "[", "]", "\n", "\n", "os", ".", "system", "(", "\"mkdir \"", "+", "self", ".", "folder_name", "+", "\"Test/\"", ")", "\n", "filename", "=", "self", ".", "folder_name", "+", "\"Test/\"", "+", "\"TEST.h5\"", "\n", "self", ".", "system", ".", "reset_context", "(", "filename", ")", "\n", "tag", "=", "\"_test_init\"", "\n", "self", ".", "system", ".", "run_decorrelation", "(", "20", ")", "\n", "\n", "grid_dist", ",", "surrounding_dist", ",", "_", ",", "_", ",", "_", ",", "_", "=", "self", ".", "system", ".", "get_state_reward", "(", ")", "\n", "state", "=", "self", ".", "_get_state", "(", "grid_dist", ",", "surrounding_dist", ")", "\n", "\n", "all_dissipation", ".", "append", "(", "self", ".", "system", ".", "get_dissipation", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "num_decisions", ")", ":", "\n", "            ", "action_index", "=", "self", ".", "_get_action", "(", "state", ",", "episode", "=", "10000", ")", "\n", "tag", "=", "\"_test_\"", "+", "str", "(", "i", ")", "\n", "actions", "=", "[", "self", ".", "all_actions", "[", "i", "]", "for", "i", "in", "action_index", "]", "\n", "all_actions", ".", "append", "(", "actions", ")", "\n", "self", ".", "system", ".", "update_action", "(", "actions", ")", "\n", "system_states", ",", "system_rewards", ",", "system_states_cluster", "=", "self", ".", "system", ".", "run_step", "(", "\n", "is_detailed", "=", "True", ",", "tag", "=", "tag", ")", "\n", "\n", "grid_dist", ",", "surrounding_dist", ",", "grid_reward", ",", "surrounding_reward", ",", "grid_states_cluster", ",", "surrounding_states_cluster", "=", "self", ".", "system", ".", "get_state_reward", "(", ")", "\n", "\n", "# The \"grid states\" and dissipation are recorded at the end of a decision", "\n", "# Dissipation here is total entropy production (not epr)", "\n", "# Actions are recorded at the beginning of the decision", "\n", "\n", "state", "=", "self", ".", "_get_state", "(", "grid_dist", ",", "surrounding_dist", ")", "\n", "reward", "=", "self", ".", "_get_reward", "(", "grid_reward", ",", "surrounding_reward", ")", "\n", "\n", "all_grid_states", ".", "append", "(", "state", ")", "\n", "all_grid_rewards", ".", "append", "(", "reward", ")", "\n", "\n", "all_grid_states_cluster", ".", "append", "(", "grid_states_cluster", ")", "\n", "all_surrounding_states_cluster", ".", "append", "(", "surrounding_states_cluster", ")", "\n", "\n", "all_dissipation", ".", "append", "(", "self", ".", "system", ".", "get_dissipation", "(", ")", ")", "\n", "\n", "# The \"System States\" are recorded every 0.25 seconds. Excludes 0th second", "\n", "all_system_states", ".", "append", "(", "system_states", ")", "\n", "# Just to have a 1D array use extend", "\n", "all_system_rewards", ".", "append", "(", "system_rewards", ")", "\n", "all_system_states_cluster", ".", "append", "(", "system_states_cluster", ")", "\n", "\n", "if", "(", "i", "%", "100", "==", "99", ")", ":", "\n", "                ", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"grid_rewards\"", ",", "\n", "np", ".", "array", "(", "all_grid_rewards", ")", ")", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"grid_states\"", ",", "\n", "np", ".", "array", "(", "all_grid_states", ",", "dtype", "=", "object", ")", ")", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"grid_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_grid_states_cluster", ",", "dtype", "=", "object", ")", ")", "\n", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"surrounding_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_surrounding_states_cluster", ")", ")", "\n", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"actions\"", ",", "np", ".", "array", "(", "all_actions", ")", ")", "\n", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"dissipation\"", ",", "\n", "np", ".", "array", "(", "all_dissipation", ")", ")", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"system_states\"", ",", "\n", "np", ".", "array", "(", "all_system_states", ")", ")", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"system_states_cluster\"", ",", "\n", "np", ".", "array", "(", "all_system_states_cluster", ")", ")", "\n", "np", ".", "save", "(", "self", ".", "folder_name", "+", "\"system_rewards\"", ",", "\n", "np", ".", "array", "(", "all_system_rewards", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.__init__": [[8, 14], ["int", "collections.namedtuple"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "capacity", ")", ":", "\n", "        ", "self", ".", "capacity", "=", "capacity", "\n", "self", ".", "buffer", "=", "[", "]", "\n", "self", ".", "position", "=", "int", "(", "0", ")", "\n", "self", ".", "transition", "=", "namedtuple", "(", "\"Transition\"", ",", "(", "\"state\"", ",", "\"action\"", ",", "\"reward\"", ",", "\"next_state\"", ",", "\"done\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.push": [[15, 32], ["replaybuffer.ReplayBuffer.transition", "int", "len", "replaybuffer.ReplayBuffer.buffer.append"], "methods", ["None"], ["", "def", "push", "(", "self", ",", "state", ",", "action", ",", "reward", ",", "next_state", ",", "done", ")", ":", "\n", "        ", "\"\"\"Adds new tuple of (state, action, reward, next_state, done) sample to replay buffer\n        If buffer is full (i.e. more than self. capacity) add new samples to beginning of\n        replay buffer\n        Args:\n            state: state of system\n            action: current action\n            reward: observed reward\n            next_state: next state of system\n            done: if terminal state of decision (1) otherwise 0\n        \"\"\"", "\n", "\n", "to_add", "=", "[", "state", ",", "action", ",", "reward", ",", "next_state", ",", "done", "]", "\n", "if", "len", "(", "self", ".", "buffer", ")", "<", "self", ".", "capacity", ":", "\n", "            ", "self", ".", "buffer", ".", "append", "(", "None", ")", "\n", "", "self", ".", "buffer", "[", "self", ".", "position", "]", "=", "self", ".", "transition", "(", "*", "to_add", ")", "\n", "self", ".", "position", "=", "int", "(", "(", "self", ".", "position", "+", "1", ")", "%", "self", ".", "capacity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.sample": [[33, 39], ["random.sample"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.sample"], ["", "def", "sample", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "\"\"\"Samples batch_size samples from replay buffer\n        Args:\n            batch_size: batch size of sample\n        \"\"\"", "\n", "return", "random", ".", "sample", "(", "self", ".", "buffer", ",", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.__len__": [[40, 42], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "(", "len", "(", "self", ".", "buffer", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.replaybuffer.ReplayBuffer.load_buffer": [[43, 46], ["numpy.load().tolist", "len", "numpy.load"], "methods", ["None"], ["", "def", "load_buffer", "(", "self", ",", "filename", ")", ":", "\n", "        ", "self", ".", "buffer", "=", "np", ".", "load", "(", "filename", ",", "allow_pickle", "=", "True", ")", ".", "tolist", "(", ")", "\n", "self", ".", "position", "=", "len", "(", "self", ".", "buffer", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.__init__": [[12, 26], ["int", "numpy.linspace", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "filename", ",", "region_num", ",", "surrounding_grids_type", ",", "\n", "num_particles", ",", "dt", ",", "dim_length", ",", "target_dist", ")", ":", "\n", "        ", "self", ".", "num_particles", "=", "num_particles", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "dimensions", "=", "2", "\n", "self", ".", "dt", "=", "dt", "\n", "self", ".", "invdt", "=", "int", "(", "1", "/", "self", ".", "dt", ")", "\n", "self", ".", "dim_length", "=", "dim_length", "\n", "self", ".", "region_num", "=", "region_num", "\n", "self", ".", "region_int", "=", "np", ".", "linspace", "(", "0", ",", "self", ".", "dim_length", ",", "self", ".", "region_num", "+", "1", ")", "\n", "self", ".", "region_action", "=", "np", ".", "zeros", "(", "(", "self", ".", "region_num", ",", "self", ".", "region_num", ")", ")", "\n", "self", ".", "surrounding", "=", "surrounding_grids_type", "\n", "self", ".", "target_dist", "=", "target_dist", "\n", "self", ".", "q", "=", "self", ".", "bin", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._surrounding_grid_indices": [[27, 46], ["ValueError", "isinstance", "builtins.sum", "ValueError", "ValueError", "range", "range"], "methods", ["None"], ["", "def", "_surrounding_grid_indices", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the indices of surrounding regions\n        Raises:\n            ValueError: If surrounding region is larger than system or if\n            incorrect description provided\n        \"\"\"", "\n", "if", "(", "self", ".", "surrounding", "==", "\"plaquette\"", ")", ":", "\n", "            ", "if", "(", "self", ".", "region_num", "<", "3", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"Need more regions\"", ")", "\n", "", "return", "[", "(", "0", ",", "0", ")", ",", "(", "0", ",", "-", "1", ")", ",", "(", "0", ",", "1", ")", ",", "(", "-", "1", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", "\n", "", "elif", "(", "isinstance", "(", "self", ".", "surrounding", ",", "int", ")", "and", "1", "<=", "self", ".", "surrounding", "<", "(", "self", ".", "region_num", "//", "2", ")", ")", ":", "\n", "            ", "a", "=", "[", "[", "(", "i", ",", "j", ")", "for", "i", "in", "range", "(", "-", "self", ".", "surrounding", ",", "self", ".", "surrounding", "+", "1", ",", "1", ")", "]", "\n", "for", "j", "in", "range", "(", "-", "self", ".", "surrounding", ",", "self", ".", "surrounding", "+", "1", ",", "1", ")", "]", "\n", "a", "=", "builtins", ".", "sum", "(", "a", ",", "[", "]", ")", "\n", "return", "a", "\n", "", "elif", "(", "self", ".", "surrounding", ">=", "(", "self", ".", "region_num", "//", "2", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Inputted too many surrounding grids\"", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Incorrect Description provided\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_target_distribution": [[47, 49], ["NotImplementedError"], "methods", ["None"], ["", "", "def", "_init_target_distribution", "(", "self", ",", "dist", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.plot_target_distribution": [[50, 52], ["NotImplementedError"], "methods", ["None"], ["", "def", "plot_target_distribution", "(", "self", ",", "dist", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_system": [[53, 55], ["NotImplementedError"], "methods", ["None"], ["", "def", "_init_system", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_integrator": [[56, 58], ["NotImplementedError"], "methods", ["None"], ["", "def", "_init_integrator", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_simulation": [[59, 61], ["NotImplementedError"], "methods", ["None"], ["", "def", "_init_simulation", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_position": [[62, 80], ["round", "range", "Vec3"], "methods", ["None"], ["", "def", "_init_position", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes positions on a lattice\n\n        Returns:\n            Array of particle positions.\n        \"\"\"", "\n", "num_per_dim", "=", "round", "(", "(", "(", "self", ".", "num_particles", ")", "**", "(", "1", "/", "self", ".", "dimensions", ")", ")", "\n", "+", "0.5", ")", "\n", "lattice_spacing", "=", "self", ".", "dim_length", "/", "num_per_dim", "\n", "particle_position", "=", "self", ".", "num_particles", "*", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "x", "=", "i", "%", "num_per_dim", "\n", "y", "=", "i", "//", "num_per_dim", "\n", "x_pos", "=", "lattice_spacing", "*", "(", "x", "+", "0.5", "*", "(", "y", "%", "2", ")", ")", "\n", "y_pos", "=", "lattice_spacing", "*", "y", "\n", "particle_position", "[", "i", "]", "=", "Vec3", "(", "x_pos", ",", "y_pos", ",", "0", ")", "\n", "\n", "", "return", "particle_position", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_region_action": [[81, 92], ["numpy.sum", "numpy.sum"], "methods", ["None"], ["", "def", "_get_region_action", "(", "self", ",", "particle_pos", ")", ":", "\n", "        ", "\"\"\"For a given particle position returns activity of the region that\n           particle is in\n\n        Returns:\n            Action of region particle is in\n        \"\"\"", "\n", "# Get region indices of x and y", "\n", "x_in", "=", "np", ".", "sum", "(", "[", "self", ".", "region_int", "<", "particle_pos", "[", "0", "]", "]", ")", "-", "1", "\n", "y_in", "=", "np", ".", "sum", "(", "[", "self", ".", "region_int", ">", "particle_pos", "[", "1", "]", "]", ")", "-", "1", "\n", "return", "self", ".", "region_action", "[", "y_in", ",", "x_in", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.update_action": [[93, 102], ["numpy.array().reshape", "ValueError", "len", "numpy.array"], "methods", ["None"], ["", "def", "update_action", "(", "self", ",", "new_action", ")", ":", "\n", "        ", "\"\"\"Updates region_action to be new_action\n        Args:\n            new_action: 1D (flattened) array of actions of regions\n        \"\"\"", "\n", "if", "(", "not", "len", "(", "new_action", ")", "==", "(", "self", ".", "region_num", "**", "2", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Incorrect Action Length\"", ")", "\n", "", "self", ".", "region_action", "=", "np", ".", "array", "(", "new_action", ")", ".", "reshape", "(", "(", "self", ".", "region_num", ",", "\n", "self", ".", "region_num", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._update_regions": [[103, 105], ["NotImplementedError"], "methods", ["None"], ["", "def", "_update_regions", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_KL": [[106, 130], ["len", "range", "numpy.log", "ValueError"], "methods", ["None"], ["", "def", "_get_KL", "(", "self", ",", "p", ")", ":", "\n", "        ", "\"\"\"Calculates KL Div from target_distribution to p\n        Args:\n            p: A normalized distribution of cluster sizes\n        Returns:\n            KL divergence from target_distribution to p or None if p is None\n        Raises:\n            ValueError: If q does not have full support over sample space\n        \"\"\"", "\n", "\n", "if", "p", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "sum", "=", "0", "\n", "ss_len", "=", "len", "(", "self", ".", "q", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "ss_len", ")", ":", "\n", "            ", "p_i", "=", "p", "[", "0", "]", "[", "i", "]", "*", "(", "p", "[", "1", "]", "[", "i", "+", "1", "]", "-", "p", "[", "1", "]", "[", "i", "]", ")", "\n", "q_i", "=", "self", ".", "q", "[", "0", "]", "[", "i", "]", "*", "(", "self", ".", "q", "[", "1", "]", "[", "i", "+", "1", "]", "-", "self", ".", "q", "[", "1", "]", "[", "i", "]", ")", "\n", "try", ":", "\n", "                ", "if", "(", "p_i", "==", "0", ")", ":", "\n", "                    ", "continue", "\n", "", "sum", "+=", "p_i", "*", "np", ".", "log", "(", "p_i", "/", "q_i", ")", "\n", "", "except", ":", "\n", "                ", "raise", "ValueError", "(", "\"Define q with support over sample space\"", ")", "\n", "", "", "return", "sum", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._duplicate_element_by_val": [[131, 145], ["None"], "methods", ["None"], ["", "def", "_duplicate_element_by_val", "(", "self", ",", "count", ")", ":", "\n", "        ", "\"\"\"Duplicates elements by current value. Use to get number of particles per cluster\n        E.g. Given an input of [1, 2, 3] it will return [1, 2, 2, 3, 3, 3]\n        Args:\n            count: A List of all cluster sizes\n        Returns:\n            A List of the cluster size that each particle belongs to\n            or empty list if the input list is empty (i.e. no clusters present)\n        \"\"\"", "\n", "dup_count", "=", "[", "]", "\n", "for", "val", "in", "count", ":", "\n", "            ", "dup_count", "+=", "[", "val", "]", "*", "val", "\n", "# Return empty list for empty region", "\n", "", "return", "dup_count", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_all_cluster_sizes": [[146, 181], ["freud.cluster.Cluster", "freud.box.Box.square", "system.MolecularSystem.simulation.context.getState().getPositions", "freud.cluster.Cluster.compute", "numpy.unique", "range", "list", "system.MolecularSystem.simulation.context.getState", "range", "numpy.sum", "numpy.sum", "[].append", "range", "system.MolecularSystem._duplicate_element_by_val", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._duplicate_element_by_val"], ["", "def", "_get_all_cluster_sizes", "(", "self", ")", ":", "\n", "        ", "\"\"\"Gets all cluster size within each region\n        Returns:\n            cs_region: A 2D List of all cluster sizes in each region\n        \"\"\"", "\n", "\n", "cl", "=", "freud", ".", "cluster", ".", "Cluster", "(", ")", "\n", "box", "=", "freud", ".", "box", ".", "Box", ".", "square", "(", "L", "=", "self", ".", "dim_length", ")", "\n", "positions", "=", "self", ".", "simulation", ".", "context", ".", "getState", "(", "\n", "getPositions", "=", "True", ",", "enforcePeriodicBox", "=", "True", ")", ".", "getPositions", "(", ")", "\n", "positions", "=", "[", "list", "(", "x", ")", "for", "x", "in", "positions", ".", "_value", "]", "# Convert to 2D list", "\n", "cl", ".", "compute", "(", "(", "box", ",", "positions", ")", ",", "neighbors", "=", "{", "'r_max'", ":", "1.25", "}", ")", "# In nm", "\n", "index", ",", "counts", "=", "np", ".", "unique", "(", "cl", ".", "cluster_idx", ",", "return_counts", "=", "True", ")", "\n", "\n", "cs_region", "=", "[", "[", "[", "]", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "p_i", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "particle_pos", "=", "positions", "[", "p_i", "]", "\n", "x_in", "=", "np", ".", "sum", "(", "[", "self", ".", "region_int", "<", "particle_pos", "[", "0", "]", "]", ")", "-", "1", "\n", "y_in", "=", "np", ".", "sum", "(", "[", "self", ".", "region_int", ">", "particle_pos", "[", "1", "]", "]", ")", "-", "1", "\n", "current_cluster_index", "=", "cl", ".", "cluster_idx", "[", "p_i", "]", "\n", "# Get all the cluster indices in each region", "\n", "if", "current_cluster_index", "not", "in", "cs_region", "[", "y_in", "]", "[", "x_in", "]", ":", "\n", "                ", "cs_region", "[", "y_in", "]", "[", "x_in", "]", ".", "append", "(", "current_cluster_index", ")", "\n", "\n", "# Get all the unique cluster sizes in each region", "\n", "", "", "cs_region", "=", "[", "[", "counts", "[", "cs_region", "[", "i", "]", "[", "j", "]", "]", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "\n", "# Get all the particles in a cluster sizes in each region", "\n", "cs_region", "=", "[", "[", "self", ".", "_duplicate_element_by_val", "(", "cs_region", "[", "i", "]", "[", "j", "]", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "return", "cs_region", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_cluster_distribution_all": [[182, 209], ["freud.cluster.Cluster", "freud.box.Box.square", "system.MolecularSystem.simulation.context.getState().getPositions", "freud.cluster.Cluster.compute", "numpy.unique", "system.MolecularSystem._duplicate_element_by_val", "matplotlib.hist", "matplotlib.close", "list", "system.MolecularSystem.plot_target_distribution", "matplotlib.savefig", "system.MolecularSystem.simulation.context.getState", "max", "numpy.max"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._duplicate_element_by_val", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.plot_target_distribution"], ["", "def", "_get_cluster_distribution_all", "(", "self", ",", "tag", "=", "None", ")", ":", "\n", "        ", "\"\"\"Gets the cluster distribution of the entire system (not individual grids)\n        Args:\n            tag: A string describing the end of the filename\n        Returns:\n            p: 2D list of normalized distribution of cluster sizes in the entire system\n            counts: A List of all cluster sizes in the entire system\n        Saves:\n            Image of distribution and cluster distribution if tag is not None\n        \"\"\"", "\n", "\n", "cl", "=", "freud", ".", "cluster", ".", "Cluster", "(", ")", "\n", "box", "=", "freud", ".", "box", ".", "Box", ".", "square", "(", "L", "=", "self", ".", "dim_length", ")", "\n", "positions", "=", "self", ".", "simulation", ".", "context", ".", "getState", "(", "\n", "getPositions", "=", "True", ",", "enforcePeriodicBox", "=", "True", ")", ".", "getPositions", "(", ")", "\n", "positions", "=", "[", "list", "(", "x", ")", "for", "x", "in", "positions", ".", "_value", "]", "# Convert to 2D list", "\n", "cl", ".", "compute", "(", "(", "box", ",", "positions", ")", ",", "neighbors", "=", "{", "'r_max'", ":", "1.25", "}", ")", "# In nm", "\n", "index", ",", "counts", "=", "np", ".", "unique", "(", "cl", ".", "cluster_idx", ",", "return_counts", "=", "True", ")", "\n", "counts", "=", "self", ".", "_duplicate_element_by_val", "(", "counts", ")", "\n", "p", "=", "plt", ".", "hist", "(", "counts", ",", "bins", "=", "self", ".", "bin", "+", "\n", "[", "max", "(", "np", ".", "max", "(", "counts", ")", ",", "self", ".", "bin", "[", "-", "1", "]", "+", "1", ")", "]", ",", "density", "=", "True", ")", "\n", "if", "(", "tag", "is", "not", "None", ")", ":", "\n", "            ", "self", ".", "plot_target_distribution", "(", "dist", "=", "self", ".", "target_dist", ")", "\n", "filename", "=", "self", ".", "filename", "[", ":", "-", "3", "]", "+", "tag", "+", "\".png\"", "\n", "plt", ".", "savefig", "(", "filename", ")", "\n", "", "plt", ".", "close", "(", ")", "\n", "return", "p", ",", "counts", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_cluster_distribution": [[210, 253], ["system.MolecularSystem._get_all_cluster_sizes", "numpy.histogram", "numpy.histogram", "range", "system.MolecularSystem._get_cluster_distribution_all", "numpy.array", "numpy.array", "numpy.histogram", "numpy.histogram", "range", "range", "system.MolecularSystem._surrounding_grid_indices", "len", "range", "range", "all_cluster_sizes[].sum", "range", "range", "range", "range", "numpy.histogram", "range", "len", "max", "max", "tuple", "max", "max"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_all_cluster_sizes", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_cluster_distribution_all", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._surrounding_grid_indices"], ["", "def", "_get_cluster_distribution", "(", "self", ")", ":", "\n", "        ", "\"\"\"Gets the cluster distribution of the current grid and surrounding grids\n        Returns:\n            p: A 2D list of histograms of cluster sizes in each grid\n            surrounding: A 2D list of histograms of cluster sizes in surrounding system\n            cs_region: A 3D List of all cluster sizes in each region\n            surrounding_clusters: A 3D List of all cluster sizes in each surrounding region\n        \"\"\"", "\n", "cs_region", "=", "self", ".", "_get_all_cluster_sizes", "(", ")", "\n", "# GET CURRENT REGION", "\n", "dist0", "=", "np", ".", "histogram", "(", "[", "]", ",", "bins", "=", "self", ".", "bin", "+", "[", "self", ".", "bin", "[", "-", "1", "]", "+", "1", "]", ")", "\n", "\n", "p", "=", "[", "[", "dist0", "if", "(", "len", "(", "cs_region", "[", "i", "]", "[", "j", "]", ")", "==", "0", ")", "\n", "else", "np", ".", "histogram", "(", "cs_region", "[", "i", "]", "[", "j", "]", ",", "bins", "=", "self", ".", "bin", "+", "[", "max", "(", "max", "(", "cs_region", "[", "i", "]", "[", "j", "]", ")", ",", "self", ".", "bin", "[", "-", "1", "]", "+", "1", ")", "]", ",", "density", "=", "True", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "\n", "surrounding_clusters", "=", "[", "]", "\n", "# GET SURROUNDING REGIONS", "\n", "if", "(", "self", ".", "surrounding", "==", "None", ")", ":", "\n", "            ", "dist", "=", "np", ".", "histogram", "(", "[", "]", ",", "bins", "=", "self", ".", "bin", "+", "[", "self", ".", "bin", "[", "-", "1", "]", "+", "1", "]", ")", "\n", "surrounding", "=", "[", "[", "dist", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "", "elif", "(", "self", ".", "surrounding", "==", "\"all\"", ")", ":", "\n", "            ", "p_all", ",", "_", "=", "self", ".", "_get_cluster_distribution_all", "(", ")", "\n", "surrounding", "=", "[", "[", "p_all", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "", "else", ":", "\n", "            ", "all_cluster_sizes", "=", "np", ".", "array", "(", "cs_region", ",", "dtype", "=", "\"object\"", ")", "\n", "indices", "=", "np", ".", "array", "(", "self", ".", "_surrounding_grid_indices", "(", ")", ")", "\n", "dist0", "=", "np", ".", "histogram", "(", "[", "]", ",", "bins", "=", "self", ".", "bin", "+", "[", "self", ".", "bin", "[", "-", "1", "]", "+", "1", "]", ")", "\n", "\n", "# This will double count clusters that span multiple regions", "\n", "surrounding_clusters", "=", "[", "[", "all_cluster_sizes", "[", "tuple", "(", "(", "(", "indices", "+", "[", "i", ",", "j", "]", ")", "%", "self", ".", "region_num", ")", ".", "T", ".", "tolist", "(", ")", ")", "]", ".", "sum", "(", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "surrounding", "=", "[", "[", "dist0", "if", "(", "len", "(", "surrounding_clusters", "[", "i", "]", "[", "j", "]", ")", "==", "0", ")", "\n", "else", "np", ".", "histogram", "(", "surrounding_clusters", "[", "i", "]", "[", "j", "]", ",", "bins", "=", "self", ".", "bin", "+", "[", "max", "(", "max", "(", "surrounding_clusters", "[", "i", "]", "[", "j", "]", ")", ",", "self", ".", "bin", "[", "-", "1", "]", "+", "1", ")", "]", ",", "density", "=", "True", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", "]", "\n", "\n", "", "return", "p", ",", "surrounding", ",", "cs_region", ",", "surrounding_clusters", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward": [[254, 284], ["system.MolecularSystem._get_cluster_distribution", "range", "ValueError", "range", "reward.append", "surrounding_reward.append", "dist.append", "surrounding_dist.append", "system.MolecularSystem._get_KL", "system.MolecularSystem._get_KL", "numpy.diff", "curr_dist.tolist", "numpy.diff", "curr_s_dist.tolist"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_cluster_distribution", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_KL", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_KL"], ["", "def", "get_state_reward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the current state, reward, and list of cluster sizes of each region and surrounding regions\n        Returns:\n            dist: 2D list of normalized distribution of cluster sizes in each grid\n            surrounding_dist: A 2D list of normalized distribution of cluster sizes in each surrounding region\n            reward: A 2D list of the KL divergence in each region\n            surrounding_reward: A 2D list of the KL divergence in each surrounding region\n            cs_region: A 3D List of all cluster sizes in each region\n            surrounding_clusters: A 3D List of all cluster sizes in each surrounding region\n        \"\"\"", "\n", "if", "self", ".", "q", "is", "None", "or", "self", ".", "bin", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"Define q and/or bin\"", ")", "\n", "", "p", ",", "surrounding", ",", "cs_region", ",", "surrounding_clusters", "=", "self", ".", "_get_cluster_distribution", "(", ")", "\n", "\n", "reward", "=", "[", "]", "\n", "surrounding_reward", "=", "[", "]", "\n", "dist", "=", "[", "]", "\n", "surrounding_dist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "region_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "region_num", ")", ":", "\n", "                ", "reward", ".", "append", "(", "self", ".", "_get_KL", "(", "p", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "surrounding_reward", ".", "append", "(", "self", ".", "_get_KL", "(", "surrounding", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "\n", "curr_dist", "=", "p", "[", "i", "]", "[", "j", "]", "[", "0", "]", "*", "np", ".", "diff", "(", "p", "[", "i", "]", "[", "j", "]", "[", "1", "]", ")", "\n", "dist", ".", "append", "(", "curr_dist", ".", "tolist", "(", ")", ")", "\n", "\n", "curr_s_dist", "=", "surrounding", "[", "i", "]", "[", "j", "]", "[", "0", "]", "*", "np", ".", "diff", "(", "surrounding", "[", "i", "]", "[", "j", "]", "[", "1", "]", ")", "\n", "surrounding_dist", ".", "append", "(", "curr_s_dist", ".", "tolist", "(", ")", ")", "\n", "", "", "return", "[", "dist", ",", "surrounding_dist", ",", "reward", ",", "surrounding_reward", ",", "cs_region", ",", "surrounding_clusters", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward_all": [[285, 301], ["system.MolecularSystem._get_cluster_distribution_all", "system.MolecularSystem._get_KL", "dist.tolist", "ValueError", "numpy.diff"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_cluster_distribution_all", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_KL"], ["", "def", "get_state_reward_all", "(", "self", ",", "tag", ")", ":", "\n", "        ", "\"\"\"Returns the current state, reward, and list of the entire system\n        Args:\n            tag: A string describing the end of the filename\n        Returns:\n            dist: list of normalized distribution of cluster sizes in the entire system\n            reward: KL divergence of entire system\n            cs_region: A List of all cluster sizes in entire system\n        \"\"\"", "\n", "if", "self", ".", "q", "is", "None", "or", "self", ".", "bin", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"Define q and/or bin\"", ")", "\n", "", "p", ",", "counts", "=", "self", ".", "_get_cluster_distribution_all", "(", "tag", ")", "\n", "reward", "=", "self", ".", "_get_KL", "(", "p", ")", "\n", "dist", "=", "p", "[", "0", "]", "*", "np", ".", "diff", "(", "p", "[", "1", "]", ")", "\n", "state", "=", "dist", ".", "tolist", "(", ")", "\n", "return", "[", "state", ",", "reward", ",", "counts", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._run_sim": [[302, 309], ["int", "system.MolecularSystem.simulation.step"], "methods", ["None"], ["", "def", "_run_sim", "(", "self", ",", "time", ")", ":", "\n", "        ", "\"\"\"Runs a simulation for time seconds\n        Args:\n            time: number of seconds to run simulation\n        \"\"\"", "\n", "total_sim_time", "=", "int", "(", "time", "*", "self", ".", "invdt", ")", "\n", "self", ".", "simulation", ".", "step", "(", "total_sim_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.run_step": [[310, 312], ["NotImplementedError"], "methods", ["None"], ["", "def", "run_step", "(", "self", ",", "is_detailed", ",", "tag", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.run_decorrelation": [[313, 315], ["NotImplementedError"], "methods", ["None"], ["", "def", "run_decorrelation", "(", "self", ",", "time", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.reset_context": [[316, 318], ["NotImplementedError"], "methods", ["None"], ["", "def", "reset_context", "(", "self", ",", "filename", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_dissipation": [[319, 321], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_dissipation", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.__init__": [[324, 339], ["system.MolecularSystem.__init__", "system.ActiveSystem._init_target_distribution", "len", "system.ActiveSystem._init_system", "system.ActiveSystem._init_integrator", "system.ActiveSystem._init_simulation"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.__init__", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_target_distribution", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_system", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_integrator", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_simulation"], ["    ", "def", "__init__", "(", "self", ",", "filename", ",", "region_num", "=", "48", ",", "target_dist", "=", "\"default_gaussian\"", ",", "\n", "surrounding_grids_type", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "filename", "=", "filename", ",", "region_num", "=", "region_num", ",", "\n", "num_particles", "=", "5000", ",", "dt", "=", "0.00005", ",", "\n", "surrounding_grids_type", "=", "surrounding_grids_type", ",", "\n", "dim_length", "=", "(", "134", "*", "1.41", ")", ",", "target_dist", "=", "target_dist", ")", "\n", "self", ".", "active_mag_def", "=", "2", "\n", "self", ".", "D_t", "=", "self", ".", "active_mag_def", "*", "0.0625", "/", "3", "\n", "self", ".", "A", "=", "0.87", "\n", "self", ".", "bin", ",", "self", ".", "q", "=", "self", ".", "_init_target_distribution", "(", "\n", "dist", "=", "self", ".", "target_dist", ")", "\n", "self", ".", "num_bins", "=", "len", "(", "self", ".", "bin", ")", "\n", "self", ".", "system", "=", "self", ".", "_init_system", "(", ")", "\n", "self", ".", "integrator", "=", "self", ".", "_init_integrator", "(", ")", "\n", "self", ".", "simulation", "=", "self", ".", "_init_simulation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem._init_target_distribution": [[340, 398], ["numpy.diff", "numpy.arange", "scipy.stats.norm.cdf", "numpy.diff", "numpy.arange", "len", "scipy.stats.binom.cdf", "numpy.sum", "matplotlib.hist", "matplotlib.close", "ValueError", "len", "numpy.random.gamma"], "methods", ["None"], ["", "def", "_init_target_distribution", "(", "self", ",", "dist", "=", "\"default_gaussian\"", ")", ":", "\n", "        ", "\"\"\"Initializes the target distribution\n\n        Args:\n            dist: The name of the target distribution\n        Returns:\n            bin: The positions of the endpoints of each bin. Width of each bin\n                 is used to calculate probability\n            q: The height of each bin\n        Raises:\n            ValueError: If inputted distribution is not found\n        \"\"\"", "\n", "if", "(", "dist", "==", "\"default_gaussian\"", ")", ":", "\n", "            ", "bin", "=", "[", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", ",", "16", ",", "18", ",", "20", ",", "\n", "22", ",", "24", ",", "26", ",", "28", ",", "30", ",", "32", ",", "34", ",", "36", ",", "38", ",", "39", ",", "100", "]", "\n", "q_0", "=", "np", ".", "diff", "(", "norm", ".", "cdf", "(", "bin", ",", "20", ",", "3", ")", ")", "\n", "# Because gaussian distribution is symmetric and we want to bin (-inf, 2) into 1", "\n", "q_0", "[", "0", "]", "+=", "q_0", "[", "-", "1", "]", "\n", "# Just create a vector whose differences will be 1", "\n", "# This is important for calculating KL, where q_1 is bin_width", "\n", "# and q_0 is bin height. Here the bin_height is already a probability", "\n", "# so create an artificial bin_width of 1", "\n", "# Remove the last element of bin so its consistent with the", "\n", "# approaches done below with plt.hist()", "\n", "bin", "=", "bin", "[", ":", "-", "1", "]", "\n", "q_1", "=", "np", ".", "arange", "(", "len", "(", "q_0", ")", "+", "1", ")", "\n", "q", "=", "(", "q_0", ",", "q_1", ")", "\n", "\n", "", "elif", "(", "dist", "==", "\"default_binom\"", ")", ":", "\n", "            ", "n", ",", "p", "=", "20", ",", "15", "/", "20", "\n", "bin", "=", "[", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", ",", "16", ",", "18", ",", "19", ",", "20", ",", "100", "]", "\n", "q_0", "=", "np", ".", "diff", "(", "binom", ".", "cdf", "(", "bin", ",", "n", ",", "p", ")", ")", "\n", "q_0", "[", "-", "1", "]", "=", "1", "-", "np", ".", "sum", "(", "q_0", ")", "\n", "# Just create a vector whose differences will be 1", "\n", "# This is important for calculating KL, where q_1 is bin_width", "\n", "# and q_0 is bin height. Here the bin_height is already a probability", "\n", "# so create an artificial bin_width of 1", "\n", "# Remove the last element of bin so its consistent with the", "\n", "# approaches done below with plt.hist()", "\n", "bin", "=", "bin", "[", ":", "-", "1", "]", "\n", "q_1", "=", "np", ".", "arange", "(", "len", "(", "q_0", ")", "+", "1", ")", "\n", "q", "=", "(", "q_0", ",", "q_1", ")", "\n", "\n", "", "elif", "(", "dist", "==", "\"default_gamma\"", ")", ":", "\n", "            ", "bin", "=", "[", "1", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", ",", "16", ",", "18", ",", "\n", "20", ",", "22", ",", "24", ",", "26", ",", "28", ",", "30", ",", "50", "]", "# Regular", "\n", "q", "=", "plt", ".", "hist", "(", "np", ".", "random", ".", "gamma", "(", "25", ",", "3", "/", "5", ",", "100000000", ")", ",", "\n", "bins", "=", "(", "bin", "+", "[", "100", "]", ")", ",", "density", "=", "True", ")", "\n", "plt", ".", "close", "(", ")", "\n", "q_hist", "=", "q", "[", "0", "]", "\n", "q_hist", "[", "0", "]", "=", "3.11E-14", "\n", "q_hist", "[", "-", "1", "]", "=", "3.644E-16", "\n", "if", "(", "q_hist", "[", "2", "]", "==", "0", ")", ":", "\n", "                ", "q_hist", "[", "2", "]", "=", "1.5E-8", "\n", "", "q", "=", "(", "q_hist", ",", "q", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dist supplied not defined\"", ")", "\n", "", "return", "bin", ",", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.plot_target_distribution": [[399, 419], ["matplotlib.plot", "numpy.linspace", "scipy.stats.norm.pdf", "matplotlib.plot", "numpy.linspace", "matplotlib.plot", "ValueError", "numpy.linspace", "scipy.stats.gamma.pdf", "numpy.linspace"], "methods", ["None"], ["", "def", "plot_target_distribution", "(", "self", ",", "dist", "=", "\"default_gaussian\"", ")", ":", "\n", "        ", "\"\"\"\n        Plots target distribution\n        Args:\n            dist: The name of the target distribution\n        Raises:\n            ValueError: If inputted distribution is not found\n        \"\"\"", "\n", "if", "(", "dist", "==", "\"default_gaussian\"", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "np", ".", "linspace", "(", "0", ",", "100", ",", "500", ")", ",", "norm", ".", "pdf", "(", "\n", "np", ".", "linspace", "(", "0", ",", "100", ",", "500", ")", ",", "loc", "=", "20", ",", "scale", "=", "3", ")", ")", "\n", "", "elif", "(", "dist", "==", "\"default_binom\"", "or", "dist", "==", "\"old_binom\"", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "self", ".", "bin", ",", "self", ".", "q", "[", "0", "]", ",", "'bo'", ")", "\n", "\n", "", "elif", "(", "dist", "==", "\"default_gamma\"", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "np", ".", "linspace", "(", "0", ",", "100", ",", "500", ")", ",", "gamma", ".", "pdf", "(", "\n", "np", ".", "linspace", "(", "0", ",", "100", ",", "500", ")", ",", "a", "=", "25", ",", "scale", "=", "3", "/", "5", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dist supplied not defined\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem._init_system": [[420, 467], ["Quantity", "Quantity", "Quantity", "System", "System.setDefaultPeriodicBoxVectors", "CustomNonbondedForce", "CustomNonbondedForce.addGlobalParameter", "CustomNonbondedForce.addGlobalParameter", "CustomNonbondedForce.setCutoffDistance", "CustomNonbondedForce.setNonbondedMethod", "CustomNonbondedForce", "CustomNonbondedForce.addPerParticleParameter", "CustomNonbondedForce.setCutoffDistance", "CustomNonbondedForce.setNonbondedMethod", "range", "System.addForce", "System.addForce", "System.addParticle", "CustomNonbondedForce.addParticle", "CustomNonbondedForce.addParticle", "CustomNonbondedForce.setParticleParameters"], "methods", ["None"], ["", "", "def", "_init_system", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM system\n\n        Returns:\n            Initialized OpenMM System\n        \"\"\"", "\n", "\n", "a", "=", "Quantity", "(", "(", "self", ".", "dim_length", "*", "nanometer", ",", "\n", "0", "*", "nanometer", ",", "0", "*", "nanometer", ")", ")", "\n", "b", "=", "Quantity", "(", "(", "0", "*", "nanometer", ",", "self", ".", "dim_length", "*", "\n", "nanometer", ",", "0", "*", "nanometer", ")", ")", "\n", "c", "=", "Quantity", "(", "(", "0", "*", "nanometer", ",", "0", "*", "nanometer", ",", "\n", "self", ".", "dim_length", "*", "nanometer", ")", ")", "\n", "system", "=", "System", "(", ")", "\n", "system", ".", "setDefaultPeriodicBoxVectors", "(", "a", ",", "b", ",", "c", ")", "\n", "\n", "sigma", "=", "1", "*", "nanometer", "\n", "# Adding 1 to integrator to represent shift for WCA", "\n", "epsilon", "=", "1", "*", "kilojoule_per_mole", "\n", "cutoff_type", "=", "NonbondedForce", ".", "CutoffPeriodic", "\n", "\n", "wca", "=", "CustomNonbondedForce", "(", "\n", "\"step((2^(1/6) * sigma)-r)* (4*epsilon*((sigma/r)^12-(sigma/r)^6) + epsilon)\"", ")", "\n", "\n", "wca", ".", "addGlobalParameter", "(", "\"sigma\"", ",", "sigma", ")", "\n", "wca", ".", "addGlobalParameter", "(", "\"epsilon\"", ",", "epsilon", ")", "\n", "wca", ".", "setCutoffDistance", "(", "3", "*", "sigma", ")", "\n", "wca", ".", "setNonbondedMethod", "(", "cutoff_type", ")", "\n", "\n", "A_val", "=", "(", "self", ".", "active_mag_def", "**", "2", ")", "*", "self", ".", "A", "*", "elementary_charge", "\n", "\n", "attractive_force", "=", "CustomNonbondedForce", "(", "\"A*((1/r)^2); A=-sqrt(A1*A2)\"", ")", "\n", "attractive_force", ".", "addPerParticleParameter", "(", "\"A\"", ")", "\n", "\n", "attractive_force", ".", "setCutoffDistance", "(", "3", "*", "sigma", ")", "\n", "attractive_force", ".", "setNonbondedMethod", "(", "cutoff_type", ")", "\n", "\n", "for", "particle_index", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "system", ".", "addParticle", "(", "2", "*", "amu", ")", "\n", "wca", ".", "addParticle", "(", ")", "\n", "attractive_force", ".", "addParticle", "(", ")", "\n", "attractive_force", ".", "setParticleParameters", "(", "particle_index", ",", "[", "A_val", "]", ")", "\n", "\n", "", "system", ".", "addForce", "(", "wca", ")", "\n", "system", ".", "addForce", "(", "attractive_force", ")", "\n", "\n", "return", "system", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem._init_integrator": [[468, 520], ["CustomIntegrator", "CustomIntegrator.addGlobalVariable", "CustomIntegrator.addGlobalVariable", "CustomIntegrator.addGlobalVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "range", "CustomIntegrator.setPerDofVariableByName", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addUpdateContextState", "vec.append", "numpy.random.random", "Vec3"], "methods", ["None"], ["", "def", "_init_integrator", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM integrator\n\n        Returns:\n            Initialized OpenMM integrator\n        \"\"\"", "\n", "\n", "self", ".", "D_t", "=", "self", ".", "active_mag_def", "*", "0.0625", "/", "3", "# Assumes mu=1", "\n", "D_r", "=", "self", ".", "active_mag_def", "*", "0.0625", "# Assumes mu=1", "\n", "# Intialize Variables", "\n", "abp_integrator", "=", "CustomIntegrator", "(", "self", ".", "dt", ")", "\n", "abp_integrator", ".", "addGlobalVariable", "(", "\"D_t\"", ",", "self", ".", "D_t", ")", "\n", "abp_integrator", ".", "addGlobalVariable", "(", "\"box_length\"", ",", "self", ".", "dim_length", ")", "\n", "\n", "abp_integrator", ".", "addGlobalVariable", "(", "\"D_r\"", ",", "D_r", ")", "\n", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"theta\"", ",", "0", ")", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"active_mag\"", ",", "self", ".", "active_mag_def", ")", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"active\"", ",", "0", ")", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"x_dot\"", ",", "0", ")", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"dissipation\"", ",", "0", ")", "\n", "abp_integrator", ".", "addPerDofVariable", "(", "\"total_force\"", ",", "0", ")", "\n", "\n", "vec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "rand_theta", "=", "2", "*", "np", ".", "pi", "*", "np", ".", "random", ".", "random", "(", ")", "\n", "vec", ".", "append", "(", "Vec3", "(", "rand_theta", ",", "0", ",", "0", ")", ")", "\n", "", "abp_integrator", ".", "setPerDofVariableByName", "(", "\"theta\"", ",", "vec", ")", "\n", "\n", "# Use x1 to store previous x to calculate dx", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"active\"", ",", "\n", "\"vector(_x(active_mag) * cos(_x(theta)), \\\n            _x(active_mag) * sin(_x(theta)), 0)\"", ")", "\n", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"x_dot\"", ",", "\"x\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"total_force\"", ",", "\"f + active\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"x\"", ",", "\"x + dt*(f + active) + \\\n            gaussian * sqrt(2 * D_t * dt)\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"x\"", ",", "\"vector(_x(x), _y(x), 0)\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"x_dot\"", ",", "\"x - x_dot\"", ")", "\n", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\n", "\"x_dot\"", ",", "\"x_dot + step(x_dot - 0.5*box_length)*(-0.5*box_length)\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\n", "\"x_dot\"", ",", "\"x_dot + step(-(x_dot + 0.5*box_length))*(0.5*box_length)\"", ")", "\n", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\n", "\"dissipation\"", ",", "\"dissipation + dot(x_dot, total_force)\"", ")", "\n", "abp_integrator", ".", "addComputePerDof", "(", "\"theta\"", ",", "\"theta + \\\n            gaussian * sqrt(2 * D_r * dt)\"", ")", "\n", "abp_integrator", ".", "addUpdateContextState", "(", ")", "\n", "return", "abp_integrator", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem._init_simulation": [[521, 541], ["Topology", "Element.getBySymbol", "Topology.addChain", "range", "Topology.setUnitCellDimensions", "Simulation", "Simulation.context.getPlatform().setPropertyDefaultValue", "Simulation.context.setPositions", "Simulation.reporters.append", "Topology.addResidue", "Topology.addAtom", "Quantity", "system.ActiveSystem._init_position", "mdtraj.reporters.HDF5Reporter", "Simulation.context.getPlatform"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_position"], ["", "def", "_init_simulation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM Simulation\n\n        Returns:\n            Initialized OpenMM Simulation\n        \"\"\"", "\n", "topology", "=", "Topology", "(", ")", "\n", "element", "=", "Element", ".", "getBySymbol", "(", "'H'", ")", "\n", "chain", "=", "topology", ".", "addChain", "(", ")", "\n", "for", "particle", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "residue", "=", "topology", ".", "addResidue", "(", "'abp'", ",", "chain", ")", "\n", "topology", ".", "addAtom", "(", "'abp'", ",", "element", ",", "residue", ")", "\n", "", "topology", ".", "setUnitCellDimensions", "(", "\n", "Quantity", "(", "3", "*", "[", "self", ".", "dim_length", "]", ",", "nanometer", ")", ")", "\n", "simulation", "=", "Simulation", "(", "topology", ",", "self", ".", "system", ",", "self", ".", "integrator", ")", "\n", "simulation", ".", "context", ".", "getPlatform", "(", ")", ".", "setPropertyDefaultValue", "(", "\"CudaDeviceIndex\"", ",", "\"0\"", ")", "\n", "simulation", ".", "context", ".", "setPositions", "(", "self", ".", "_init_position", "(", ")", ")", "\n", "simulation", ".", "reporters", ".", "append", "(", "\n", "HDF5Reporter", "(", "self", ".", "filename", ",", "self", ".", "invdt", "//", "4", ")", ")", "\n", "return", "simulation", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem._update_regions": [[542, 559], ["system.ActiveSystem.system.getForce", "system.ActiveSystem.simulation.context.getState().getPositions", "system.ActiveSystem.simulation.integrator.setPerDofVariableByName", "system.ActiveSystem.updateParametersInContext", "system.ActiveSystem._get_region_action", "Vec3", "system.ActiveSystem.setParticleParameters", "system.ActiveSystem.simulation.context.getState", "enumerate"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_region_action"], ["", "def", "_update_regions", "(", "self", ")", ":", "\n", "        ", "\"\"\"Updates activity of all particles based on the region it is in\n        \"\"\"", "\n", "attractive_force", "=", "self", ".", "system", ".", "getForce", "(", "1", ")", "\n", "positions", "=", "self", ".", "simulation", ".", "context", ".", "getState", "(", "\n", "getPositions", "=", "True", ",", "enforcePeriodicBox", "=", "True", ")", ".", "getPositions", "(", ")", "\n", "all_particle_active", "=", "[", "self", ".", "_get_region_action", "(", "x", ".", "_value", ")", "\n", "for", "x", "in", "positions", "]", "\n", "active_mag_vec", "=", "[", "Vec3", "(", "particle_i_active", ",", "0", ",", "0", ")", "\n", "for", "particle_i_active", "in", "all_particle_active", "]", "\n", "charge_vec", "=", "[", "(", "particle_i_active", "**", "2", ")", "*", "self", ".", "A", "*", "elementary_charge", "\n", "for", "particle_i_active", "in", "all_particle_active", "]", "\n", "self", ".", "simulation", ".", "integrator", ".", "setPerDofVariableByName", "(", "\"active_mag\"", ",", "\n", "active_mag_vec", ")", "\n", "[", "attractive_force", ".", "setParticleParameters", "(", "index", ",", "[", "element", "]", ")", "\n", "for", "(", "index", ",", "element", ")", "in", "enumerate", "(", "charge_vec", ")", "]", "\n", "attractive_force", ".", "updateParametersInContext", "(", "self", ".", "simulation", ".", "context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.run_decorrelation": [[560, 571], ["system.ActiveSystem.update_action", "system.ActiveSystem._update_regions", "system.ActiveSystem._run_sim"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._update_regions", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._run_sim"], ["", "def", "run_decorrelation", "(", "self", ",", "time", ")", ":", "\n", "        ", "\"\"\"Runs a decorrelation step of zero activity to \"decorrelate\" from some current state\n        Args:\n            time: time in seconds to run decorrelation\n            tag: A string describing the end of the filename\n        \"\"\"", "\n", "\n", "new_active_mag", "=", "[", "0.0", "]", "*", "self", ".", "region_num", "**", "2", "\n", "self", ".", "update_action", "(", "new_action", "=", "new_active_mag", ")", "\n", "self", ".", "_update_regions", "(", ")", "\n", "self", ".", "_run_sim", "(", "time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.run_step": [[572, 598], ["range", "system.ActiveSystem.simulation.context.getPlatform().getName", "system.ActiveSystem._update_regions", "system.ActiveSystem._run_sim", "system.ActiveSystem.get_state_reward_all", "str", "system.ActiveSystem.simulation.context.getPlatform"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._update_regions", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._run_sim", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward_all"], ["", "def", "run_step", "(", "self", ",", "is_detailed", "=", "False", ",", "tag", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"Runs simulation for one time \"step\" (i.e. decision) of RL algorithm\n        Updates particle activity every 0.5 seconds based on what region particle\n        is in. Runs for a total of 3 seconds (i.e. 1 decision)\n        Args:\n            is_detailed: Include information about states/rewards of entire system\n            tag: A string describing the end of the filename\n        Returns:\n            A list of states, rewards and cluster sizes of the system if more_detailed\n            The states, rewards and cluster sizes of the system if is _detailed\n            None, None, None if not (is_detailed)\n        \"\"\"", "\n", "assert", "self", ".", "simulation", ".", "context", ".", "getPlatform", "(", ")", ".", "getName", "(", ")", "==", "\"CUDA\"", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "            ", "self", ".", "_update_regions", "(", ")", "\n", "self", ".", "_run_sim", "(", "0.5", ")", "\n", "", "if", "(", "is_detailed", ")", ":", "\n", "            ", "curr_tag", "=", "tag", "+", "\"_\"", "+", "str", "(", "i", ")", "\n", "system_state", ",", "system_reward", ",", "system_cluster_counts", "=", "self", ".", "get_state_reward_all", "(", "\n", "tag", ")", "\n", "all_system_states", "=", "system_state", "\n", "all_system_rewards", "=", "system_reward", "\n", "all_system_states_cluster", "=", "system_cluster_counts", "\n", "return", "all_system_states", ",", "all_system_rewards", ",", "all_system_states_cluster", "\n", "", "else", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.reset_context": [[599, 610], ["system.ActiveSystem.simulation.reporters[].close", "mdtraj.reporters.HDF5Reporter", "system.ActiveSystem.simulation.context.setPositions", "system.ActiveSystem._init_position"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_position"], ["", "", "def", "reset_context", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"Resets position to lattice and closes h5 file\n        Args:\n            filename: file to save new trajectory in\n        \"\"\"", "\n", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "simulation", ".", "reporters", "[", "0", "]", ".", "close", "(", ")", "\n", "self", ".", "simulation", ".", "reporters", "[", "0", "]", "=", "HDF5Reporter", "(", "\n", "self", ".", "filename", ",", "self", ".", "invdt", "//", "4", ")", "\n", "self", ".", "simulation", ".", "context", ".", "setPositions", "(", "self", ".", "_init_position", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.ActiveSystem.get_dissipation": [[611, 621], ["system.ActiveSystem.simulation.integrator.getPerDofVariableByName", "numpy.array", "numpy.mean"], "methods", ["None"], ["", "def", "get_dissipation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Gets dissipation of simulation\n        Returns:\n            Mean total dissipation across all particles\n        \"\"\"", "\n", "dissipation", "=", "self", ".", "simulation", ".", "integrator", ".", "getPerDofVariableByName", "(", "\n", "\"dissipation\"", ")", "\n", "dissipation", "=", "np", ".", "array", "(", "[", "d_n", "[", "0", "]", "for", "d_n", "in", "dissipation", "]", ")", "\n", "dissipation", "/=", "(", "self", ".", "D_t", ")", "\n", "return", "np", ".", "mean", "(", "dissipation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.__init__": [[624, 637], ["system.MolecularSystem.__init__", "system.LJSystem._init_target_distribution", "len", "system.LJSystem._init_system", "system.LJSystem._init_integrator", "system.LJSystem._init_simulation"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.__init__", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_target_distribution", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_system", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_integrator", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_simulation"], ["    ", "def", "__init__", "(", "self", ",", "filename", ",", "region_num", "=", "15", ",", "target_dist", "=", "\"default_gamma\"", ",", "\n", "surrounding_grids_type", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "filename", "=", "filename", ",", "region_num", "=", "region_num", ",", "\n", "num_particles", "=", "100", ",", "dt", "=", "0.0002", ",", "\n", "surrounding_grids_type", "=", "surrounding_grids_type", ",", "\n", "dim_length", "=", "30", ",", "target_dist", "=", "target_dist", ")", "\n", "\n", "self", ".", "bin", ",", "self", ".", "q", "=", "self", ".", "_init_target_distribution", "(", "\n", "dist", "=", "self", ".", "target_dist", ")", "\n", "self", ".", "num_bins", "=", "len", "(", "self", ".", "bin", ")", "\n", "self", ".", "system", "=", "self", ".", "_init_system", "(", ")", "\n", "self", ".", "integrator", "=", "self", ".", "_init_integrator", "(", ")", "\n", "self", ".", "simulation", "=", "self", ".", "_init_simulation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_target_distribution": [[638, 658], ["numpy.random.gamma", "matplotlib.hist", "matplotlib.close", "ValueError"], "methods", ["None"], ["", "def", "_init_target_distribution", "(", "self", ",", "dist", "=", "\"default_gamma\"", ")", ":", "\n", "        ", "\"\"\"Initializes the target distribution\n\n        Args:\n            dist: The name of the target distribution\n        Returns:\n            bin: The positions of the endpoints of each bin. Width of each bin\n                 is used to calculate probability\n            q: The height of each bin\n        Raises:\n            ValueError: If inputted distribution is not found\n        \"\"\"", "\n", "if", "(", "dist", "==", "\"default_gamma\"", ")", ":", "\n", "            ", "bin", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", "]", "# Regular", "\n", "target_data", "=", "np", ".", "random", ".", "gamma", "(", "16", ",", "0.25", ",", "10000000", ")", "\n", "q", "=", "plt", ".", "hist", "(", "target_data", ",", "bins", "=", "(", "bin", "+", "[", "100", "]", ")", ",", "density", "=", "True", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dist supplied not defined\"", ")", "\n", "", "return", "bin", ",", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.plot_target_distribution": [[659, 672], ["matplotlib.plot", "ValueError", "numpy.linspace", "scipy.stats.gamma.pdf", "numpy.linspace"], "methods", ["None"], ["", "def", "plot_target_distribution", "(", "self", ",", "dist", "=", "\"default_gamma\"", ")", ":", "\n", "        ", "\"\"\"\n        Plots target distribution\n        Args:\n            dist: The name of the target distribution\n        Raises:\n            ValueError: If inputted distribution is not found\n        \"\"\"", "\n", "if", "(", "dist", "==", "\"default_gamma\"", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "np", ".", "linspace", "(", "0", ",", "10", ",", "500", ")", ",", "gamma", ".", "pdf", "(", "\n", "np", ".", "linspace", "(", "0", ",", "10", ",", "500", ")", ",", "a", "=", "16", ",", "scale", "=", "0.25", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dist supplied not defined\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_system": [[673, 706], ["Quantity", "Quantity", "Quantity", "System", "System.setDefaultPeriodicBoxVectors", "CustomNonbondedForce", "CustomNonbondedForce.addGlobalParameter", "CustomNonbondedForce.addGlobalParameter", "CustomNonbondedForce.setCutoffDistance", "CustomNonbondedForce.setNonbondedMethod", "range", "System.addForce", "System.addParticle", "CustomNonbondedForce.addParticle"], "methods", ["None"], ["", "", "def", "_init_system", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM system\n\n        Returns:\n            Initialized OpenMM System\n        \"\"\"", "\n", "\n", "a", "=", "Quantity", "(", "(", "self", ".", "dim_length", "*", "nanometer", ",", "\n", "0", "*", "nanometer", ",", "0", "*", "nanometer", ")", ")", "\n", "b", "=", "Quantity", "(", "(", "0", "*", "nanometer", ",", "self", ".", "dim_length", "*", "\n", "nanometer", ",", "0", "*", "nanometer", ")", ")", "\n", "c", "=", "Quantity", "(", "(", "0", "*", "nanometer", ",", "0", "*", "nanometer", ",", "\n", "self", ".", "dim_length", "*", "nanometer", ")", ")", "\n", "system", "=", "System", "(", ")", "\n", "system", ".", "setDefaultPeriodicBoxVectors", "(", "a", ",", "b", ",", "c", ")", "\n", "\n", "sigma", "=", "1", "*", "nanometer", "\n", "epsilon", "=", "0.5", "*", "kilojoule_per_mole", "\n", "cutoff_type", "=", "NonbondedForce", ".", "CutoffPeriodic", "\n", "\n", "lj", "=", "CustomNonbondedForce", "(", "\"4*epsilon*(((sigma/r)^12-(sigma/r)^6))\"", ")", "\n", "lj", ".", "addGlobalParameter", "(", "\"sigma\"", ",", "sigma", ")", "\n", "lj", ".", "addGlobalParameter", "(", "\"epsilon\"", ",", "epsilon", ")", "\n", "lj", ".", "setCutoffDistance", "(", "15", "*", "sigma", ")", "\n", "lj", ".", "setNonbondedMethod", "(", "cutoff_type", ")", "\n", "\n", "for", "particle_index", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "system", ".", "addParticle", "(", "2", "*", "amu", ")", "\n", "lj", ".", "addParticle", "(", ")", "\n", "\n", "", "system", ".", "addForce", "(", "lj", ")", "\n", "\n", "return", "system", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_integrator": [[707, 738], ["CustomIntegrator", "CustomIntegrator.addGlobalVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addPerDofVariable", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addComputePerDof", "CustomIntegrator.addUpdateContextState"], "methods", ["None"], ["", "def", "_init_integrator", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM Integrator\n\n        Returns:\n            Initialized OpenMM Integrator\n        \"\"\"", "\n", "\n", "lj_integrator", "=", "CustomIntegrator", "(", "self", ".", "dt", ")", "\n", "lj_integrator", ".", "addGlobalVariable", "(", "\"box_length\"", ",", "self", ".", "dim_length", ")", "\n", "lj_integrator", ".", "addPerDofVariable", "(", "\"D_t\"", ",", "1.2", ")", "\n", "\n", "lj_integrator", ".", "addPerDofVariable", "(", "\"dissipation\"", ",", "0", ")", "\n", "lj_integrator", ".", "addPerDofVariable", "(", "\"x_dot\"", ",", "0", ")", "\n", "lj_integrator", ".", "addPerDofVariable", "(", "\"total_force\"", ",", "0", ")", "\n", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\"x_dot\"", ",", "\"x\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\"total_force\"", ",", "\"f\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\"x\"", ",", "\"x + dt*(f) + \\\n            gaussian * sqrt(2 * D_t * dt)\"", ")", "\n", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\"x\"", ",", "\"vector(_x(x), _y(x), 0)\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\"x_dot\"", ",", "\"x - x_dot\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\n", "\"x_dot\"", ",", "\"x_dot + step(x_dot - 0.5*box_length)*(-0.5*box_length)\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\n", "\"x_dot\"", ",", "\"x_dot + step(-(x_dot + 0.5*box_length))*(0.5*box_length)\"", ")", "\n", "lj_integrator", ".", "addComputePerDof", "(", "\n", "\"dissipation\"", ",", "\"dissipation + (dot(x_dot, total_force)/D_t)\"", ")", "\n", "\n", "lj_integrator", ".", "addUpdateContextState", "(", ")", "\n", "return", "lj_integrator", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._init_simulation": [[739, 760], ["Topology", "Element.getBySymbol", "Topology.addChain", "range", "Topology.setUnitCellDimensions", "Simulation", "Simulation.context.setPositions", "Simulation.reporters.append", "Topology.addResidue", "Topology.addAtom", "Quantity", "system.LJSystem._init_position", "mdtraj.reporters.HDF5Reporter"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_position"], ["", "def", "_init_simulation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Initializes an OpenMM Simulation\n\n        Returns:\n            Initialized OpenMM Simulation\n        \"\"\"", "\n", "topology", "=", "Topology", "(", ")", "\n", "element", "=", "Element", ".", "getBySymbol", "(", "'H'", ")", "\n", "chain", "=", "topology", ".", "addChain", "(", ")", "\n", "for", "particle", "in", "range", "(", "self", ".", "num_particles", ")", ":", "\n", "            ", "residue", "=", "topology", ".", "addResidue", "(", "'lj'", ",", "chain", ")", "\n", "topology", ".", "addAtom", "(", "'lj'", ",", "element", ",", "residue", ")", "\n", "", "topology", ".", "setUnitCellDimensions", "(", "\n", "Quantity", "(", "3", "*", "[", "self", ".", "dim_length", "]", ",", "nanometer", ")", ")", "\n", "simulation", "=", "Simulation", "(", "topology", ",", "self", ".", "system", ",", "self", ".", "integrator", ")", "\n", "# simulation.context.getPlatform().\\", "\n", "#     setPropertyDefaultValue(\"CudaDeviceIndex\", \"0\")", "\n", "simulation", ".", "context", ".", "setPositions", "(", "self", ".", "_init_position", "(", ")", ")", "\n", "simulation", ".", "reporters", ".", "append", "(", "\n", "HDF5Reporter", "(", "self", ".", "filename", ",", "self", ".", "invdt", "//", "100", ")", ")", "\n", "return", "simulation", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action": [[761, 765], ["system.MolecularSystem.update_action", "numpy.any", "ValueError"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action"], ["", "def", "update_action", "(", "self", ",", "new_action", ")", ":", "\n", "        ", "super", "(", ")", ".", "update_action", "(", "new_action", ")", "\n", "if", "np", ".", "any", "(", "(", "self", ".", "region_action", "<=", "0", ")", "|", "(", "self", ".", "region_action", ">", "2.0", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Unallowed Temperatures Inputted\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._update_regions": [[766, 778], ["system.LJSystem.simulation.context.getState().getPositions", "system.LJSystem.simulation.integrator.setPerDofVariableByName", "system.LJSystem._get_region_action", "Vec3", "system.LJSystem.simulation.context.getState"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._get_region_action"], ["", "", "def", "_update_regions", "(", "self", ")", ":", "\n", "        ", "\"\"\"Updates temperature of all particles based on the region it is in\n        \"\"\"", "\n", "positions", "=", "self", ".", "simulation", ".", "context", ".", "getState", "(", "\n", "getPositions", "=", "True", ",", "enforcePeriodicBox", "=", "True", ")", ".", "getPositions", "(", ")", "\n", "all_particle_temps", "=", "[", "self", ".", "_get_region_action", "(", "x", ".", "_value", ")", "\n", "for", "x", "in", "positions", "]", "\n", "temp_vec", "=", "[", "Vec3", "(", "particle_i_temp", ",", "particle_i_temp", ",", "0", ")", "\n", "for", "particle_i_temp", "in", "all_particle_temps", "]", "\n", "\n", "self", ".", "simulation", ".", "integrator", ".", "setPerDofVariableByName", "(", "\"D_t\"", ",", "\n", "temp_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_decorrelation": [[779, 789], ["system.LJSystem.update_action", "system.LJSystem._update_regions", "system.LJSystem._run_sim"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.update_action", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._update_regions", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._run_sim"], ["", "def", "run_decorrelation", "(", "self", ",", "time", ")", ":", "\n", "        ", "\"\"\"Runs a decorrelation step of high temperature to \"decorrelate\" from some current state\n        Args:\n            time: time in seconds to run decorrelation\n            tag: A string describing the end of the filename\n        \"\"\"", "\n", "new_temp", "=", "[", "1.2", "]", "*", "self", ".", "region_num", "**", "2", "\n", "self", ".", "update_action", "(", "new_temp", ")", "\n", "self", ".", "_update_regions", "(", ")", "\n", "self", ".", "_run_sim", "(", "time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.run_step": [[790, 816], ["range", "system.LJSystem._update_regions", "system.LJSystem._run_sim", "system.LJSystem.get_state_reward_all", "str"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem._update_regions", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._run_sim", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem.get_state_reward_all"], ["", "def", "run_step", "(", "self", ",", "is_detailed", "=", "False", ",", "tag", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"Runs simulation for one time \"step\" (i.e. decision) of RL algorithm\n        Updates particle activity every 0.25 seconds based on what region particle\n        is in. Runs for a total of 0.25 seconds (i.e. 1 decision)\n        Args:\n            is_detailed: Include information about states/rewards of entire system\n            tag: A string describing the end of the filename\n        Returns:\n            The states, rewards and cluster sizes of the system if is _detailed\n            None, None, None if not (is_detailed)\n        \"\"\"", "\n", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "# Updating once every second", "\n", "            ", "self", ".", "_update_regions", "(", ")", "\n", "self", ".", "_run_sim", "(", "0.25", ")", "\n", "", "if", "(", "is_detailed", ")", ":", "\n", "            ", "curr_tag", "=", "tag", "+", "\"_\"", "+", "str", "(", "i", ")", "\n", "system_state", ",", "system_reward", ",", "system_cluster_counts", "=", "self", ".", "get_state_reward_all", "(", "\n", "tag", ")", "\n", "all_system_states", "=", "system_state", "\n", "all_system_rewards", "=", "system_reward", "\n", "all_system_states_cluster", "=", "system_cluster_counts", "\n", "", "if", "(", "is_detailed", ")", ":", "\n", "            ", "return", "all_system_states", ",", "all_system_rewards", ",", "all_system_states_cluster", "\n", "", "else", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.reset_context": [[817, 828], ["system.LJSystem.simulation.reporters[].close", "mdtraj.reporters.HDF5Reporter", "system.LJSystem.simulation.context.setPositions", "system.LJSystem._init_position"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.MolecularSystem._init_position"], ["", "", "def", "reset_context", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"Resets position to lattice and closes h5 file\n        Args:\n            filename: file to save new trajectory in\n        \"\"\"", "\n", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "simulation", ".", "reporters", "[", "0", "]", ".", "close", "(", ")", "\n", "self", ".", "simulation", ".", "reporters", "[", "0", "]", "=", "HDF5Reporter", "(", "\n", "self", ".", "filename", ",", "self", ".", "invdt", "//", "100", ")", "\n", "self", ".", "simulation", ".", "context", ".", "setPositions", "(", "self", ".", "_init_position", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.system.LJSystem.get_dissipation": [[829, 838], ["system.LJSystem.simulation.integrator.getPerDofVariableByName", "numpy.array", "numpy.mean"], "methods", ["None"], ["", "def", "get_dissipation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Gets dissipation of simulation\n        Returns:\n            Mean total dissipation across all particles\n        \"\"\"", "\n", "dissipation", "=", "self", ".", "simulation", ".", "integrator", ".", "getPerDofVariableByName", "(", "\n", "\"dissipation\"", ")", "\n", "dissipation", "=", "np", ".", "array", "(", "[", "d_n", "[", "0", "]", "for", "d_n", "in", "dissipation", "]", ")", "\n", "return", "np", ".", "mean", "(", "dissipation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Q.__init__": [[10, 16], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_bins", "=", "17", ",", "num_actions", "=", "11", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "num_bins", ",", "250", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "250", ",", "250", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "250", ",", "num_actions", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Q.forward": [[17, 22], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "cdqlnetwork.Q.fc1", "cdqlnetwork.Q.fc2", "cdqlnetwork.Q.sigmoid", "cdqlnetwork.Q.fc3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "s", ")", ":", "\n", "        ", "s", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "s", ")", ")", "\n", "s", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "s", ")", ")", "\n", "q_a", "=", "self", ".", "sigmoid", "(", "self", ".", "fc3", "(", "s", ")", "/", "10", ")", "*", "120", "\n", "return", "q_a", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.__init__": [[25, 42], ["Q().to", "Q().to", "Q().to", "Q().to", "cdqlnetwork.Model.q_target_1.eval", "cdqlnetwork.Model.q_target_2.eval", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "cdqlnetwork.Model._update", "cdqlnetwork.Model._update", "cdqlnetwork.Model.q_1.parameters", "cdqlnetwork.Model.q_2.parameters", "cdqlnetwork.Q", "cdqlnetwork.Q", "cdqlnetwork.Q", "cdqlnetwork.Q"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._update", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._update"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "num_bins", "=", "17", ",", "num_actions", "=", "11", ")", ":", "\n", "        ", "self", ".", "device", "=", "device", "\n", "self", ".", "q_1", "=", "Q", "(", "num_bins", ",", "num_actions", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "q_target_1", "=", "Q", "(", "num_bins", ",", "num_actions", ")", ".", "to", "(", "device", ")", "\n", "\n", "self", ".", "q_2", "=", "Q", "(", "num_bins", ",", "num_actions", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "q_target_2", "=", "Q", "(", "num_bins", ",", "num_actions", ")", ".", "to", "(", "device", ")", "\n", "\n", "self", ".", "q_target_1", ".", "eval", "(", ")", "\n", "self", ".", "q_target_2", ".", "eval", "(", ")", "\n", "\n", "self", ".", "q_optimizer_1", "=", "Adam", "(", "self", ".", "q_1", ".", "parameters", "(", ")", ",", "lr", "=", "3e-4", ")", "\n", "self", ".", "q_optimizer_2", "=", "Adam", "(", "self", ".", "q_2", ".", "parameters", "(", ")", ",", "lr", "=", "3e-4", ")", "\n", "\n", "self", ".", "_update", "(", "self", ".", "q_target_1", ",", "self", ".", "q_1", ")", "\n", "self", ".", "_update", "(", "self", ".", "q_target_2", ",", "self", ".", "q_2", ")", "\n", "self", ".", "tau", "=", "0.005", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._smaller_weights_last_layer": [[43, 52], ["list", "network.state_dict().keys", "network.state_dict", "network.state_dict"], "methods", ["None"], ["", "def", "_smaller_weights_last_layer", "(", "self", ",", "network", ",", "scale", ")", ":", "\n", "        ", "\"\"\"Updates the last layer with smaller weights\n        Args:\n            network: network to update\n            scale: amount to scale down weights of last layer\n        \"\"\"", "\n", "last_layers", "=", "list", "(", "network", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "[", "-", "2", ":", "]", "\n", "for", "layer", "in", "last_layers", ":", "\n", "            ", "network", ".", "state_dict", "(", ")", "[", "layer", "]", "/=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._update": [[53, 60], ["target.load_state_dict", "local.state_dict"], "methods", ["None"], ["", "", "def", "_update", "(", "self", ",", "target", ",", "local", ")", ":", "\n", "        ", "\"\"\"Set the parametrs of target network to be that of local network\n        Args:\n            target: target network\n            local: local network\n        \"\"\"", "\n", "target", ".", "load_state_dict", "(", "local", ".", "state_dict", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._soft_update": [[61, 68], ["zip", "target.parameters", "local.parameters", "target_param.data.copy_"], "methods", ["None"], ["", "def", "_soft_update", "(", "self", ",", "target", ",", "local", ")", ":", "\n", "        ", "\"\"\"Soft update of parameters in target Networks\n        \"\"\"", "\n", "for", "target_param", ",", "param", "in", "zip", "(", "target", ".", "parameters", "(", ")", ",", "local", ".", "parameters", "(", ")", ")", ":", "\n", "            ", "target_param", ".", "data", ".", "copy_", "(", "target_param", ".", "data", "\n", "*", "(", "1.0", "-", "self", ".", "tau", ")", "\n", "+", "param", ".", "data", "*", "self", ".", "tau", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.update_target_nn": [[69, 72], ["cdqlnetwork.Model._soft_update", "cdqlnetwork.Model._soft_update"], "methods", ["home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._soft_update", "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model._soft_update"], ["", "", "def", "update_target_nn", "(", "self", ")", ":", "\n", "        ", "self", ".", "_soft_update", "(", "self", ".", "q_target_1", ",", "self", ".", "q_1", ")", "\n", "self", ".", "_soft_update", "(", "self", ".", "q_target_2", ",", "self", ".", "q_2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.save_networks": [[73, 87], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "cdqlnetwork.Model.q_1.state_dict", "cdqlnetwork.Model.q_optimizer_1.state_dict", "cdqlnetwork.Model.q_2.state_dict", "cdqlnetwork.Model.q_optimizer_2.state_dict", "cdqlnetwork.Model.q_target_1.state_dict", "cdqlnetwork.Model.q_target_2.state_dict"], "methods", ["None"], ["", "def", "save_networks", "(", "self", ",", "folder_name", ")", ":", "\n", "        ", "torch", ".", "save", "(", "{", "\"model_state_dict\"", ":", "self", ".", "q_1", ".", "state_dict", "(", ")", ",", "\n", "\"optimizer_state_dict\"", ":", "self", ".", "q_optimizer_1", ".", "state_dict", "(", ")", "\n", "}", ",", "folder_name", "+", "\"q_1\"", ")", "\n", "\n", "torch", ".", "save", "(", "{", "\"model_state_dict\"", ":", "self", ".", "q_2", ".", "state_dict", "(", ")", ",", "\n", "\"optimizer_state_dict\"", ":", "self", ".", "q_optimizer_2", ".", "state_dict", "(", ")", "\n", "}", ",", "folder_name", "+", "\"q_2\"", ")", "\n", "\n", "torch", ".", "save", "(", "{", "\"model_state_dict\"", ":", "self", ".", "q_target_1", ".", "state_dict", "(", ")", "}", ",", "\n", "folder_name", "+", "\"q_target_1\"", ")", "\n", "\n", "torch", ".", "save", "(", "{", "\"model_state_dict\"", ":", "self", ".", "q_target_2", ".", "state_dict", "(", ")", "}", ",", "\n", "folder_name", "+", "\"q_target_2\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rotskoff-group_marl-design.None.cdqlnetwork.Model.load_networks": [[88, 111], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "cdqlnetwork.Model.q_1.load_state_dict", "cdqlnetwork.Model.q_optimizer_1.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "cdqlnetwork.Model.q_2.load_state_dict", "cdqlnetwork.Model.q_optimizer_2.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "cdqlnetwork.Model.q_target_1.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "cdqlnetwork.Model.q_target_2.load_state_dict"], "methods", ["None"], ["", "def", "load_networks", "(", "self", ",", "folder_name", "=", "\"./\"", ")", ":", "\n", "\n", "        ", "q_checkpoint_1", "=", "torch", ".", "load", "(", "folder_name", "+", "\"q_1\"", ",", "\n", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "q_1", ".", "load_state_dict", "(", "q_checkpoint_1", "[", "\"model_state_dict\"", "]", ")", "\n", "self", ".", "q_optimizer_1", ".", "load_state_dict", "(", "q_checkpoint_1", "[", "\n", "\"optimizer_state_dict\"", "]", ")", "\n", "\n", "q_checkpoint_2", "=", "torch", ".", "load", "(", "folder_name", "+", "\"q_2\"", ",", "\n", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "q_2", ".", "load_state_dict", "(", "q_checkpoint_2", "[", "\"model_state_dict\"", "]", ")", "\n", "self", ".", "q_optimizer_2", ".", "load_state_dict", "(", "q_checkpoint_2", "[", "\n", "\"optimizer_state_dict\"", "]", ")", "\n", "\n", "q_target_checkpoint_1", "=", "torch", ".", "load", "(", "folder_name", "+", "\"q_target_1\"", ",", "\n", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "q_target_1", ".", "load_state_dict", "(", "\n", "q_target_checkpoint_1", "[", "\"model_state_dict\"", "]", ")", "\n", "\n", "q_target_checkpoint_2", "=", "torch", ".", "load", "(", "folder_name", "+", "\"q_target_2\"", ",", "\n", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "q_target_2", ".", "load_state_dict", "(", "\n", "q_target_checkpoint_2", "[", "\"model_state_dict\"", "]", ")", "\n", "", "", ""]]}