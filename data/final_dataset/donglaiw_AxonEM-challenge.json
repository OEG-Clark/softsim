{"home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.eval_erl.skelToNetworkX": [[8, 27], ["networkx.Graph", "range", "len", "len", "nodes[].astype", "range", "range", "len", "nx.Graph.add_node", "range", "nx.Graph.add_edge", "len"], "function", ["None"], ["def", "skelToNetworkX", "(", "nodes", ",", "edges", ",", "res", ",", "seg_list", "=", "[", "]", ")", ":", "\n", "# for ERL evaluation", "\n", "# node: physical unit", "\n", "    ", "gt_graph", "=", "nx", ".", "Graph", "(", ")", "\n", "node_segment_lut", "=", "[", "{", "}", "]", "*", "len", "(", "seg_list", ")", "\n", "cc", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "nodes", ")", ")", ":", "\n", "        ", "if", "len", "(", "edges", "[", "k", "]", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "node", "=", "nodes", "[", "k", "]", ".", "astype", "(", "int", ")", "\n", "edge", "=", "edges", "[", "k", "]", "+", "cc", "\n", "for", "l", "in", "range", "(", "node", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "gt_graph", ".", "add_node", "(", "cc", ",", "skeleton_id", "=", "k", ",", "z", "=", "node", "[", "l", ",", "0", "]", "*", "res", "[", "0", "]", ",", "y", "=", "node", "[", "l", ",", "1", "]", "*", "res", "[", "1", "]", ",", "x", "=", "node", "[", "l", ",", "2", "]", "*", "res", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "seg_list", ")", ")", ":", "\n", "                ", "node_segment_lut", "[", "i", "]", "[", "cc", "]", "=", "seg_list", "[", "i", "]", "[", "node", "[", "l", ",", "0", "]", ",", "node", "[", "l", ",", "1", "]", ",", "node", "[", "l", ",", "2", "]", "]", "\n", "", "cc", "+=", "1", "\n", "", "for", "l", "in", "range", "(", "edge", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "gt_graph", ".", "add_edge", "(", "edge", "[", "l", ",", "0", "]", ",", "edge", "[", "l", ",", "1", "]", ")", "\n", "", "", "return", "gt_graph", ",", "node_segment_lut", "\n", "\n"]], "home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.eval_erl.test_erl": [[28, 41], ["funlib.evaluate.expected_run_length", "print", "eval_erl.skelToNetworkX", "eval_erl.skelToNetworkX"], "function", ["home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.eval_erl.skelToNetworkX", "home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.eval_erl.skelToNetworkX"], ["", "def", "test_erl", "(", "gt_nodes", ",", "gt_edges", ",", "pred_seg", ",", "res", "=", "[", "30", ",", "6", ",", "6", "]", ",", "merge_thres", "=", "0", ",", "node_segment_lut", "=", "None", ")", ":", "\n", "    ", "if", "node_segment_lut", "is", "not", "None", ":", "\n", "        ", "gt_graph", ",", "_", "=", "skelToNetworkX", "(", "gt_nodes", ",", "gt_edges", ",", "res", ")", "\n", "", "else", ":", "\n", "        ", "gt_graph", ",", "node_segment_lut", "=", "skelToNetworkX", "(", "gt_nodes", ",", "gt_edges", ",", "res", ",", "[", "pred_seg", "]", ")", "\n", "", "scores", "=", "evaluate", ".", "expected_run_length", "(", "\n", "skeletons", "=", "gt_graph", ",", "\n", "skeleton_id_attribute", "=", "'skeleton_id'", ",", "\n", "edge_length_attribute", "=", "'length'", ",", "\n", "node_segment_lut", "=", "node_segment_lut", "[", "0", "]", ",", "\n", "merge_thres", "=", "merge_thres", ",", "\n", "skeleton_position_attributes", "=", "[", "'z'", ",", "'y'", ",", "'x'", "]", ")", "\n", "print", "(", "'ERL:'", ",", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.generate_skel.skeletonize": [[8, 39], ["kimimaro.skeletonize", "numpy.unique", "list"], "function", ["home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.generate_skel.skeletonize"], ["def", "skeletonize", "(", "labels", ",", "scale", "=", "4", ",", "const", "=", "500", ",", "obj_ids", "=", "None", ",", "dust_size", "=", "100", ",", "res", "=", "(", "32", ",", "32", ",", "30", ")", ",", "num_thread", "=", "1", ")", ":", "\n", "    ", "if", "obj_ids", "is", "None", ":", "\n", "        ", "obj_ids", "=", "np", ".", "unique", "(", "labels", ")", "\n", "obj_ids", "=", "list", "(", "obj_ids", "[", "obj_ids", ">", "0", "]", ")", "\n", "", "skels", "=", "kimimaro", ".", "skeletonize", "(", "\n", "labels", ",", "\n", "teasar_params", "=", "{", "\n", "'scale'", ":", "scale", ",", "\n", "'const'", ":", "const", ",", "# physical units", "\n", "'pdrf_exponent'", ":", "4", ",", "\n", "'pdrf_scale'", ":", "100000", ",", "\n", "'soma_detection_threshold'", ":", "1100", ",", "# physical units", "\n", "'soma_acceptance_threshold'", ":", "3500", ",", "# physical units", "\n", "'soma_invalidation_scale'", ":", "1.0", ",", "\n", "'soma_invalidation_const'", ":", "300", ",", "# physical units", "\n", "'max_paths'", ":", "50", ",", "# default  None", "\n", "}", ",", "\n", "object_ids", "=", "obj_ids", ",", "# process only the specified labels", "\n", "# object_ids=[ ... ], # process only the specified labels", "\n", "# extra_targets_before=[ (27,33,100), (44,45,46) ], # target points in voxels", "\n", "# extra_targets_after=[ (27,33,100), (44,45,46) ], # target points in voxels", "\n", "dust_threshold", "=", "dust_size", ",", "# skip connected components with fewer than this many voxels", "\n", "#       anisotropy=(30,30,30), # default True", "\n", "anisotropy", "=", "res", ",", "# default True", "\n", "fix_branching", "=", "True", ",", "# default True", "\n", "fix_borders", "=", "True", ",", "# default True", "\n", "progress", "=", "True", ",", "# default False, show progress bar", "\n", "parallel", "=", "num_thread", ",", "# <= 0 all cpu, 1 single process, 2+ multiprocess", "\n", "parallel_chunk_size", "=", "100", ",", "# how many skeletons to process before updating progress bar", "\n", ")", "\n", "return", "skels", "\n", "\n"]], "home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.io_util.readVol": [[4, 12], ["io_util.readH5", "volread", "ValueError"], "function", ["home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.io_util.readH5"], ["def", "readVol", "(", "filename", ",", "datasetname", "=", "None", ")", ":", "\n", "    ", "if", "'.h5'", "in", "filename", ":", "\n", "        ", "return", "readH5", "(", "filename", ",", "datasetname", ")", "\n", "", "elif", "'.tif'", "in", "filename", "or", "'.tiff'", "in", "filename", ":", "\n", "        ", "from", "imageio", "import", "volread", "\n", "return", "volread", "(", "filename", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'cannot recognize input file type:'", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.donglaiw_AxonEM-challenge.None.io_util.readH5": [[13, 30], ["h5py.File", "isinstance", "len", "enumerate", "numpy.array", "h5py.File.keys", "list", "len", "numpy.array"], "function", ["None"], ["", "", "def", "readH5", "(", "filename", ",", "datasetname", "=", "None", ")", ":", "\n", "    ", "import", "h5py", "\n", "fid", "=", "h5py", ".", "File", "(", "filename", ",", "'r'", ")", "\n", "if", "datasetname", "is", "None", ":", "\n", "        ", "if", "sys", ".", "version", "[", "0", "]", "==", "'2'", ":", "# py2", "\n", "            ", "datasetname", "=", "fid", ".", "keys", "(", ")", "\n", "", "else", ":", "# py3", "\n", "            ", "datasetname", "=", "list", "(", "fid", ")", "\n", "", "", "if", "len", "(", "datasetname", ")", "==", "1", ":", "\n", "        ", "datasetname", "=", "datasetname", "[", "0", "]", "\n", "", "if", "isinstance", "(", "datasetname", ",", "(", "list", ",", ")", ")", ":", "\n", "        ", "out", "=", "[", "None", "]", "*", "len", "(", "datasetname", ")", "\n", "for", "di", ",", "d", "in", "enumerate", "(", "datasetname", ")", ":", "\n", "            ", "out", "[", "di", "]", "=", "np", ".", "array", "(", "fid", "[", "d", "]", ")", "\n", "", "return", "out", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "array", "(", "fid", "[", "datasetname", "]", ")", "\n", "\n"]]}