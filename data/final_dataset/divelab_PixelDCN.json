{"home.repos.pwc.inspect_result.divelab_PixelDCN.None.main.configure": [[13, 52], ["flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_float", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_string", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_integer", "flags.DEFINE_string", "flags.DEFINE_string", "int", "time.time"], "function", ["None"], ["def", "configure", "(", ")", ":", "\n", "# training", "\n", "    ", "flags", "=", "tf", ".", "app", ".", "flags", "\n", "flags", ".", "DEFINE_integer", "(", "'max_step'", ",", "10", ",", "'# of step for training'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'test_step'", ",", "100", ",", "'# of step to test a model'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'save_step'", ",", "1000", ",", "'# of step to save a model'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'summary_step'", ",", "100", ",", "'# of step to save the summary'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'learning_rate'", ",", "1e-3", ",", "'learning rate'", ")", "\n", "# data", "\n", "flags", ".", "DEFINE_string", "(", "'data_dir'", ",", "'./dataset/'", ",", "'Name of data directory'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'train_data'", ",", "'training.h5'", ",", "'Training data'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'valid_data'", ",", "'validation.h5'", ",", "'Validation data'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'test_data'", ",", "'testing.h5'", ",", "'Testing data'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'batch'", ",", "2", ",", "'batch size'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'channel'", ",", "3", ",", "'channel size'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'height'", ",", "256", ",", "'height size'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'width'", ",", "256", ",", "'width size'", ")", "\n", "# Debug", "\n", "flags", ".", "DEFINE_string", "(", "'logdir'", ",", "'./logdir'", ",", "'Log dir'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'modeldir'", ",", "'./modeldir'", ",", "'Model dir'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'sampledir'", ",", "'./samples/'", ",", "'Sample directory'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'model_name'", ",", "'model'", ",", "'Model file name'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'reload_step'", ",", "0", ",", "'Reload step to continue training'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'test_step'", ",", "0", ",", "'Test or predict model at this step'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'random_seed'", ",", "int", "(", "time", ".", "time", "(", ")", ")", ",", "'random seed'", ")", "\n", "# network architecture", "\n", "flags", ".", "DEFINE_integer", "(", "'network_depth'", ",", "5", ",", "'network depth for U-Net'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'class_num'", ",", "21", ",", "'output class number'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'start_channel_num'", ",", "64", ",", "\n", "'start number of outputs for the first conv layer'", ")", "\n", "flags", ".", "DEFINE_string", "(", "\n", "'conv_name'", ",", "'conv2d'", ",", "\n", "'Use which conv op in decoder: conv2d or ipixel_cl'", ")", "\n", "flags", ".", "DEFINE_string", "(", "\n", "'deconv_name'", ",", "'pixel_dcl'", ",", "\n", "'Use which deconv op in decoder: deconv, pixel_dcl, ipixel_dcl'", ")", "\n", "# fix bug of flags", "\n", "flags", ".", "FLAGS", ".", "__dict__", "[", "'__parsed'", "]", "=", "False", "\n", "return", "flags", ".", "FLAGS", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.main.main": [[54, 65], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "print", "network.PixelDCN", "tensorflow.Session", "main.configure", "getattr"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.main.configure"], ["", "def", "main", "(", "_", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--action'", ",", "dest", "=", "'action'", ",", "type", "=", "str", ",", "default", "=", "'train'", ",", "\n", "help", "=", "'actions: train, test, or predict'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "action", "not", "in", "[", "'train'", ",", "'test'", ",", "'predict'", "]", ":", "\n", "        ", "print", "(", "'invalid action: '", ",", "args", ".", "action", ")", "\n", "print", "(", "\"Please input a action: train, test, or predict\"", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "PixelDCN", "(", "tf", ".", "Session", "(", ")", ",", "configure", "(", ")", ")", "\n", "getattr", "(", "model", ",", "args", ".", "action", ")", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.__init__": [[17, 36], ["network.PixelDCN.configure_networks", "network.PixelDCN.config_summary", "network.PixelDCN.config_summary", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.configure_networks", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.config_summary", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.config_summary"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "conf", ")", ":", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "conf", "=", "conf", "\n", "self", ".", "conv_size", "=", "(", "3", ",", "3", ")", "\n", "self", ".", "pool_size", "=", "(", "2", ",", "2", ")", "\n", "self", ".", "data_format", "=", "'NHWC'", "\n", "self", ".", "axis", ",", "self", ".", "channel_axis", "=", "(", "1", ",", "2", ")", ",", "3", "\n", "self", ".", "input_shape", "=", "[", "\n", "conf", ".", "batch", ",", "conf", ".", "height", ",", "conf", ".", "width", ",", "conf", ".", "channel", "]", "\n", "self", ".", "output_shape", "=", "[", "conf", ".", "batch", ",", "conf", ".", "height", ",", "conf", ".", "width", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "conf", ".", "modeldir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "conf", ".", "modeldir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "conf", ".", "logdir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "conf", ".", "logdir", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "conf", ".", "sampledir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "conf", ".", "sampledir", ")", "\n", "", "self", ".", "configure_networks", "(", ")", "\n", "self", ".", "train_summary", "=", "self", ".", "config_summary", "(", "'train'", ")", "\n", "self", ".", "valid_summary", "=", "self", ".", "config_summary", "(", "'valid'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.configure_networks": [[37, 46], ["network.PixelDCN.build_network", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.set_random_seed", "network.PixelDCN.sess.run", "tensorflow.trainable_variables", "tensorflow.train.Saver", "tensorflow.summary.FileWriter", "tensorflow.global_variables_initializer"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.build_network"], ["", "def", "configure_networks", "(", "self", ")", ":", "\n", "        ", "self", ".", "build_network", "(", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "conf", ".", "learning_rate", ")", "\n", "self", ".", "train_op", "=", "optimizer", ".", "minimize", "(", "self", ".", "loss_op", ",", "name", "=", "'train_op'", ")", "\n", "tf", ".", "set_random_seed", "(", "self", ".", "conf", ".", "random_seed", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "trainable_vars", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "var_list", "=", "trainable_vars", ",", "max_to_keep", "=", "0", ")", "\n", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "self", ".", "conf", ".", "logdir", ",", "self", ".", "sess", ".", "graph", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.build_network": [[47, 54], ["tensorflow.placeholder", "tensorflow.placeholder", "network.PixelDCN.inference", "network.PixelDCN.cal_loss"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.inference", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.cal_loss"], ["", "def", "build_network", "(", "self", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "self", ".", "input_shape", ",", "name", "=", "'inputs'", ")", "\n", "self", ".", "annotations", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "int64", ",", "self", ".", "output_shape", ",", "name", "=", "'annotations'", ")", "\n", "self", ".", "predictions", "=", "self", ".", "inference", "(", "self", ".", "inputs", ")", "\n", "self", ".", "cal_loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.cal_loss": [[55, 81], ["tensorflow.expand_dims", "tensorflow.squeeze", "tensorflow.one_hot", "tensorflow.losses.softmax_cross_entropy", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.metrics.mean_iou", "tensorflow.cast", "tensorflow.greater"], "methods", ["None"], ["", "def", "cal_loss", "(", "self", ")", ":", "\n", "        ", "expand_annotations", "=", "tf", ".", "expand_dims", "(", "\n", "self", ".", "annotations", ",", "-", "1", ",", "name", "=", "'annotations/expand_dims'", ")", "\n", "one_hot_annotations", "=", "tf", ".", "squeeze", "(", "\n", "expand_annotations", ",", "axis", "=", "[", "self", ".", "channel_axis", "]", ",", "\n", "name", "=", "'annotations/squeeze'", ")", "\n", "one_hot_annotations", "=", "tf", ".", "one_hot", "(", "\n", "one_hot_annotations", ",", "depth", "=", "self", ".", "conf", ".", "class_num", ",", "\n", "axis", "=", "self", ".", "channel_axis", ",", "name", "=", "'annotations/one_hot'", ")", "\n", "losses", "=", "tf", ".", "losses", ".", "softmax_cross_entropy", "(", "\n", "one_hot_annotations", ",", "self", ".", "predictions", ",", "scope", "=", "'loss/losses'", ")", "\n", "self", ".", "loss_op", "=", "tf", ".", "reduce_mean", "(", "losses", ",", "name", "=", "'loss/loss_op'", ")", "\n", "self", ".", "decoded_predictions", "=", "tf", ".", "argmax", "(", "\n", "self", ".", "predictions", ",", "self", ".", "channel_axis", ",", "name", "=", "'accuracy/decode_pred'", ")", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "\n", "self", ".", "annotations", ",", "self", ".", "decoded_predictions", ",", "\n", "name", "=", "'accuracy/correct_pred'", ")", "\n", "self", ".", "accuracy_op", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ",", "name", "=", "'accuracy/cast'", ")", ",", "\n", "name", "=", "'accuracy/accuracy_op'", ")", "\n", "weights", "=", "tf", ".", "cast", "(", "\n", "tf", ".", "greater", "(", "self", ".", "decoded_predictions", ",", "0", ",", "name", "=", "'m_iou/greater'", ")", ",", "\n", "tf", ".", "int32", ",", "name", "=", "'m_iou/weights'", ")", "\n", "self", ".", "m_iou", ",", "self", ".", "miou_op", "=", "tf", ".", "metrics", ".", "mean_iou", "(", "\n", "self", ".", "annotations", ",", "self", ".", "decoded_predictions", ",", "self", ".", "conf", ".", "class_num", ",", "\n", "weights", ",", "name", "=", "'m_iou/m_ious'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.config_summary": [[82, 101], ["summarys.append", "summarys.append", "tensorflow.summary.merge", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "summarys.append", "summarys.append", "summarys.append", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.summary.image", "tensorflow.cast", "tensorflow.cast", "tensorflow.expand_dims", "tensorflow.expand_dims"], "methods", ["None"], ["", "def", "config_summary", "(", "self", ",", "name", ")", ":", "\n", "        ", "summarys", "=", "[", "]", "\n", "summarys", ".", "append", "(", "tf", ".", "summary", ".", "scalar", "(", "name", "+", "'/loss'", ",", "self", ".", "loss_op", ")", ")", "\n", "summarys", ".", "append", "(", "tf", ".", "summary", ".", "scalar", "(", "name", "+", "'/accuracy'", ",", "self", ".", "accuracy_op", ")", ")", "\n", "if", "name", "==", "'valid'", ":", "\n", "            ", "summarys", ".", "append", "(", "tf", ".", "summary", ".", "image", "(", "\n", "name", "+", "'/input'", ",", "self", ".", "inputs", ",", "max_outputs", "=", "100", ")", ")", "\n", "summarys", ".", "append", "(", "tf", ".", "summary", ".", "image", "(", "\n", "name", "+", "\n", "'/annotation'", ",", "tf", ".", "cast", "(", "tf", ".", "expand_dims", "(", "\n", "self", ".", "annotations", ",", "-", "1", ")", ",", "tf", ".", "float32", ")", ",", "\n", "max_outputs", "=", "100", ")", ")", "\n", "summarys", ".", "append", "(", "tf", ".", "summary", ".", "image", "(", "\n", "name", "+", "\n", "'/prediction'", ",", "tf", ".", "cast", "(", "tf", ".", "expand_dims", "(", "\n", "self", ".", "decoded_predictions", ",", "-", "1", ")", ",", "tf", ".", "float32", ")", ",", "\n", "max_outputs", "=", "100", ")", ")", "\n", "", "summary", "=", "tf", ".", "summary", ".", "merge", "(", "summarys", ")", "\n", "return", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.inference": [[102, 118], ["range", "network.PixelDCN.construct_bottom_block", "range", "network.PixelDCN.construct_down_block", "network.PixelDCN.construct_up_block"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_bottom_block", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_down_block", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_up_block"], ["", "def", "inference", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "outputs", "=", "inputs", "\n", "down_outputs", "=", "[", "]", "\n", "for", "layer_index", "in", "range", "(", "self", ".", "conf", ".", "network_depth", "-", "1", ")", ":", "\n", "            ", "is_first", "=", "True", "if", "not", "layer_index", "else", "False", "\n", "name", "=", "'down%s'", "%", "layer_index", "\n", "outputs", "=", "self", ".", "construct_down_block", "(", "\n", "outputs", ",", "name", ",", "down_outputs", ",", "first", "=", "is_first", ")", "\n", "", "outputs", "=", "self", ".", "construct_bottom_block", "(", "outputs", ",", "'bottom'", ")", "\n", "for", "layer_index", "in", "range", "(", "self", ".", "conf", ".", "network_depth", "-", "2", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "            ", "is_final", "=", "True", "if", "layer_index", "==", "0", "else", "False", "\n", "name", "=", "'up%s'", "%", "layer_index", "\n", "down_inputs", "=", "down_outputs", "[", "layer_index", "]", "\n", "outputs", "=", "self", ".", "construct_up_block", "(", "\n", "outputs", ",", "down_inputs", ",", "name", ",", "final", "=", "is_final", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_down_block": [[119, 130], ["utils.ops.conv2d", "utils.ops.conv2d", "down_outputs.append", "utils.ops.pool2d"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.pool2d"], ["", "def", "construct_down_block", "(", "self", ",", "inputs", ",", "name", ",", "down_outputs", ",", "first", "=", "False", ")", ":", "\n", "        ", "num_outputs", "=", "self", ".", "conf", ".", "start_channel_num", "if", "first", "else", "2", "*", "inputs", ".", "shape", "[", "self", ".", "channel_axis", "]", ".", "value", "\n", "conv1", "=", "ops", ".", "conv2d", "(", "\n", "inputs", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv1'", ")", "\n", "conv2", "=", "ops", ".", "conv2d", "(", "\n", "conv1", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv2'", ",", ")", "\n", "down_outputs", ".", "append", "(", "conv2", ")", "\n", "pool", "=", "ops", ".", "pool2d", "(", "\n", "conv2", ",", "self", ".", "pool_size", ",", "name", "+", "'/pool'", ")", "\n", "return", "pool", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_bottom_block": [[131, 138], ["utils.ops.conv2d", "utils.ops.conv2d"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d"], ["", "def", "construct_bottom_block", "(", "self", ",", "inputs", ",", "name", ")", ":", "\n", "        ", "num_outputs", "=", "inputs", ".", "shape", "[", "self", ".", "channel_axis", "]", ".", "value", "\n", "conv1", "=", "ops", ".", "conv2d", "(", "\n", "inputs", ",", "2", "*", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv1'", ")", "\n", "conv2", "=", "ops", ".", "conv2d", "(", "\n", "conv1", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv2'", ")", "\n", "return", "conv2", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.construct_up_block": [[139, 151], ["tensorflow.concat", "utils.ops.conv2d", "network.PixelDCN.deconv_func", "network.PixelDCN.conv_func"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.deconv_func", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.conv_func"], ["", "def", "construct_up_block", "(", "self", ",", "inputs", ",", "down_inputs", ",", "name", ",", "final", "=", "False", ")", ":", "\n", "        ", "num_outputs", "=", "inputs", ".", "shape", "[", "self", ".", "channel_axis", "]", ".", "value", "\n", "conv1", "=", "self", ".", "deconv_func", "(", ")", "(", "\n", "inputs", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv1'", ")", "\n", "conv1", "=", "tf", ".", "concat", "(", "\n", "[", "conv1", ",", "down_inputs", "]", ",", "self", ".", "channel_axis", ",", "name", "=", "name", "+", "'/concat'", ")", "\n", "conv2", "=", "self", ".", "conv_func", "(", ")", "(", "\n", "conv1", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv2'", ")", "\n", "num_outputs", "=", "self", ".", "conf", ".", "class_num", "if", "final", "else", "num_outputs", "/", "2", "\n", "conv3", "=", "ops", ".", "conv2d", "(", "\n", "conv2", ",", "num_outputs", ",", "self", ".", "conv_size", ",", "name", "+", "'/conv3'", ")", "\n", "return", "conv3", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.deconv_func": [[152, 154], ["getattr"], "methods", ["None"], ["", "def", "deconv_func", "(", "self", ")", ":", "\n", "        ", "return", "getattr", "(", "ops", ",", "self", ".", "conf", ".", "deconv_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.conv_func": [[155, 157], ["getattr"], "methods", ["None"], ["", "def", "conv_func", "(", "self", ")", ":", "\n", "        ", "return", "getattr", "(", "ops", ",", "self", ".", "conf", ".", "conv_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save_summary": [[158, 161], ["print", "network.PixelDCN.writer.add_summary"], "methods", ["None"], ["", "def", "save_summary", "(", "self", ",", "summary", ",", "step", ")", ":", "\n", "        ", "print", "(", "'---->summarizing'", ",", "step", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.train": [[162, 193], ["utils.data_reader.H5DataLoader", "utils.data_reader.H5DataLoader", "range", "network.PixelDCN.reload", "utils.data_reader.H5DataLoader.next_batch", "network.PixelDCN.sess.run", "network.PixelDCN.save_summary", "print", "network.PixelDCN.save", "utils.data_reader.H5DataLoader.next_batch", "network.PixelDCN.sess.run", "network.PixelDCN.save_summary", "utils.data_reader.H5DataLoader.next_batch", "network.PixelDCN.sess.run", "print"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.reload", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save_summary", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch", "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save_summary", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "conf", ".", "reload_step", ">", "0", ":", "\n", "            ", "self", ".", "reload", "(", "self", ".", "conf", ".", "reload_step", ")", "\n", "", "train_reader", "=", "H5DataLoader", "(", "self", ".", "conf", ".", "data_dir", "+", "self", ".", "conf", ".", "train_data", ")", "\n", "valid_reader", "=", "H5DataLoader", "(", "self", ".", "conf", ".", "data_dir", "+", "self", ".", "conf", ".", "valid_data", ")", "\n", "for", "epoch_num", "in", "range", "(", "self", ".", "conf", ".", "max_step", ")", ":", "\n", "            ", "if", "epoch_num", "%", "self", ".", "conf", ".", "test_step", "==", "0", ":", "\n", "                ", "inputs", ",", "annotations", "=", "valid_reader", ".", "next_batch", "(", "self", ".", "conf", ".", "batch", ")", "\n", "feed_dict", "=", "{", "self", ".", "inputs", ":", "inputs", ",", "\n", "self", ".", "annotations", ":", "annotations", "}", "\n", "loss", ",", "summary", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "loss_op", ",", "self", ".", "valid_summary", "]", ",", "feed_dict", "=", "feed_dict", ")", "\n", "self", ".", "save_summary", "(", "summary", ",", "epoch_num", "+", "self", ".", "conf", ".", "reload_step", ")", "\n", "print", "(", "'----testing loss'", ",", "loss", ")", "\n", "", "elif", "epoch_num", "%", "self", ".", "conf", ".", "summary_step", "==", "0", ":", "\n", "                ", "inputs", ",", "annotations", "=", "train_reader", ".", "next_batch", "(", "self", ".", "conf", ".", "batch", ")", "\n", "feed_dict", "=", "{", "self", ".", "inputs", ":", "inputs", ",", "\n", "self", ".", "annotations", ":", "annotations", "}", "\n", "loss", ",", "_", ",", "summary", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "loss_op", ",", "self", ".", "train_op", ",", "self", ".", "train_summary", "]", ",", "\n", "feed_dict", "=", "feed_dict", ")", "\n", "self", ".", "save_summary", "(", "summary", ",", "epoch_num", "+", "self", ".", "conf", ".", "reload_step", ")", "\n", "", "else", ":", "\n", "                ", "inputs", ",", "annotations", "=", "train_reader", ".", "next_batch", "(", "self", ".", "conf", ".", "batch", ")", "\n", "feed_dict", "=", "{", "self", ".", "inputs", ":", "inputs", ",", "\n", "self", ".", "annotations", ":", "annotations", "}", "\n", "loss", ",", "_", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "loss_op", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed_dict", ")", "\n", "print", "(", "'----training loss'", ",", "loss", ")", "\n", "", "if", "epoch_num", "%", "self", ".", "conf", ".", "save_step", "==", "0", ":", "\n", "                ", "self", ".", "save", "(", "epoch_num", "+", "self", ".", "conf", ".", "reload_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.test": [[194, 224], ["print", "utils.data_reader.H5DataLoader", "network.PixelDCN.sess.run", "print", "print", "print", "network.PixelDCN.reload", "print", "tensorflow.local_variables_initializer", "utils.data_reader.H5DataLoader.next_batch", "network.PixelDCN.sess.run", "print", "losses.append", "accuracies.append", "m_ious.append", "numpy.mean", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.reload", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch"], ["", "", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "print", "(", "'---->testing '", ",", "self", ".", "conf", ".", "test_step", ")", "\n", "if", "self", ".", "conf", ".", "test_step", ">", "0", ":", "\n", "            ", "self", ".", "reload", "(", "self", ".", "conf", ".", "test_step", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"please set a reasonable test_step\"", ")", "\n", "return", "\n", "", "test_reader", "=", "H5DataLoader", "(", "\n", "self", ".", "conf", ".", "data_dir", "+", "self", ".", "conf", ".", "test_data", ",", "False", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "count", "=", "0", "\n", "losses", "=", "[", "]", "\n", "accuracies", "=", "[", "]", "\n", "m_ious", "=", "[", "]", "\n", "while", "True", ":", "\n", "            ", "inputs", ",", "annotations", "=", "test_reader", ".", "next_batch", "(", "self", ".", "conf", ".", "batch", ")", "\n", "if", "inputs", ".", "shape", "[", "0", "]", "<", "self", ".", "conf", ".", "batch", ":", "\n", "                ", "break", "\n", "", "feed_dict", "=", "{", "self", ".", "inputs", ":", "inputs", ",", "self", ".", "annotations", ":", "annotations", "}", "\n", "loss", ",", "accuracy", ",", "m_iou", ",", "_", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "loss_op", ",", "self", ".", "accuracy_op", ",", "self", ".", "m_iou", ",", "self", ".", "miou_op", "]", ",", "\n", "feed_dict", "=", "feed_dict", ")", "\n", "print", "(", "'values----->'", ",", "loss", ",", "accuracy", ",", "m_iou", ")", "\n", "count", "+=", "1", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "accuracies", ".", "append", "(", "accuracy", ")", "\n", "m_ious", ".", "append", "(", "m_iou", ")", "\n", "", "print", "(", "'Loss: '", ",", "np", ".", "mean", "(", "losses", ")", ")", "\n", "print", "(", "'Accuracy: '", ",", "np", ".", "mean", "(", "accuracies", ")", ")", "\n", "print", "(", "'M_iou: '", ",", "m_ious", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.predict": [[225, 247], ["print", "utils.data_reader.H5DataLoader", "print", "enumerate", "network.PixelDCN.reload", "print", "utils.data_reader.H5DataLoader.next_batch", "predictions.append", "range", "network.PixelDCN.sess.run", "utils.img_utils.imsave", "str"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.reload", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave"], ["", "def", "predict", "(", "self", ")", ":", "\n", "        ", "print", "(", "'---->predicting '", ",", "self", ".", "conf", ".", "test_step", ")", "\n", "if", "self", ".", "conf", ".", "test_step", ">", "0", ":", "\n", "            ", "self", ".", "reload", "(", "self", ".", "conf", ".", "test_step", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"please set a reasonable test_step\"", ")", "\n", "return", "\n", "", "test_reader", "=", "H5DataLoader", "(", "\n", "self", ".", "conf", ".", "data_dir", "+", "self", ".", "conf", ".", "test_data", ",", "False", ")", "\n", "predictions", "=", "[", "]", "\n", "while", "True", ":", "\n", "            ", "inputs", ",", "annotations", "=", "test_reader", ".", "next_batch", "(", "self", ".", "conf", ".", "batch", ")", "\n", "if", "inputs", ".", "shape", "[", "0", "]", "<", "self", ".", "conf", ".", "batch", ":", "\n", "                ", "break", "\n", "", "feed_dict", "=", "{", "self", ".", "inputs", ":", "inputs", ",", "self", ".", "annotations", ":", "annotations", "}", "\n", "predictions", ".", "append", "(", "self", ".", "sess", ".", "run", "(", "\n", "self", ".", "decoded_predictions", ",", "feed_dict", "=", "feed_dict", ")", ")", "\n", "", "print", "(", "'----->saving predictions'", ")", "\n", "for", "index", ",", "prediction", "in", "enumerate", "(", "predictions", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "prediction", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "imsave", "(", "prediction", "[", "i", "]", ",", "self", ".", "conf", ".", "sampledir", "+", "\n", "str", "(", "index", "*", "prediction", ".", "shape", "[", "0", "]", "+", "i", ")", "+", "'.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save": [[248, 253], ["print", "os.path.join", "network.PixelDCN.saver.save"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.save"], ["", "", "", "def", "save", "(", "self", ",", "step", ")", ":", "\n", "        ", "print", "(", "'---->saving'", ",", "step", ")", "\n", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "conf", ".", "modeldir", ",", "self", ".", "conf", ".", "model_name", ")", "\n", "self", ".", "saver", ".", "save", "(", "self", ".", "sess", ",", "checkpoint_path", ",", "global_step", "=", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.None.network.PixelDCN.reload": [[254, 262], ["os.path.join", "network.PixelDCN.saver.restore", "str", "os.path.exists", "print"], "methods", ["None"], ["", "def", "reload", "(", "self", ",", "step", ")", ":", "\n", "        ", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "conf", ".", "modeldir", ",", "self", ".", "conf", ".", "model_name", ")", "\n", "model_path", "=", "checkpoint_path", "+", "'-'", "+", "str", "(", "step", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_path", "+", "'.meta'", ")", ":", "\n", "            ", "print", "(", "'------- no such checkpoint'", ",", "model_path", ")", "\n", "return", "\n", "", "self", ".", "saver", ".", "restore", "(", "self", ".", "sess", ",", "model_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.pixel_dcl": [[14, 41], ["pixel_dcn.conv2d", "pixel_dcn.conv2d", "pixel_dcn.dilate_tensor", "pixel_dcn.dilate_tensor", "tensorflow.add", "tensorflow.add", "d_format.index", "d_format.index", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.multiply", "tensorflow.nn.conv2d", "activation_fn", "list", "pixel_dcn.get_mask", "tensorflow.truncated_normal_initializer"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.get_mask"], ["def", "pixel_dcl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "\"\"\"\n    inputs: input tensor\n    out_num: output channel number\n    kernel_size: convolutional kernel size\n    scope: operation scope\n    activation_fn: activation function, could be None if needed\n    \"\"\"", "\n", "axis", "=", "(", "d_format", ".", "index", "(", "'H'", ")", ",", "d_format", ".", "index", "(", "'W'", ")", ")", "\n", "conv0", "=", "conv2d", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", "+", "'/conv0'", ")", "\n", "conv1", "=", "conv2d", "(", "conv0", ",", "out_num", ",", "kernel_size", ",", "scope", "+", "'/conv1'", ")", "\n", "dilated_conv0", "=", "dilate_tensor", "(", "conv0", ",", "axis", ",", "0", ",", "0", ",", "scope", "+", "'/dialte_conv0'", ")", "\n", "dilated_conv1", "=", "dilate_tensor", "(", "conv1", ",", "axis", ",", "1", ",", "1", ",", "scope", "+", "'/dialte_conv1'", ")", "\n", "conv1", "=", "tf", ".", "add", "(", "dilated_conv0", ",", "dilated_conv1", ",", "scope", "+", "'/add1'", ")", "\n", "with", "tf", ".", "variable_scope", "(", "scope", "+", "'/conv2'", ")", ":", "\n", "        ", "shape", "=", "list", "(", "kernel_size", ")", "+", "[", "out_num", ",", "out_num", "]", "\n", "weights", "=", "tf", ".", "get_variable", "(", "\n", "'weights'", ",", "shape", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", "(", ")", ")", "\n", "weights", "=", "tf", ".", "multiply", "(", "weights", ",", "get_mask", "(", "shape", ",", "scope", ")", ")", "\n", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "conv2", "=", "tf", ".", "nn", ".", "conv2d", "(", "conv1", ",", "weights", ",", "strides", ",", "padding", "=", "'SAME'", ",", "\n", "data_format", "=", "d_format", ")", "\n", "", "outputs", "=", "tf", ".", "add", "(", "conv1", ",", "conv2", ",", "name", "=", "scope", "+", "'/add2'", ")", "\n", "if", "activation_fn", ":", "\n", "        ", "outputs", "=", "activation_fn", "(", "outputs", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.ipixel_dcl": [[43, 70], ["d_format.index", "pixel_dcn.conv2d", "tensorflow.concat", "pixel_dcn.conv2d", "tensorflow.concat", "pixel_dcn.conv2d", "tensorflow.split", "pixel_dcn.dilate_tensor", "pixel_dcn.dilate_tensor", "pixel_dcn.dilate_tensor", "pixel_dcn.dilate_tensor", "tensorflow.add_n", "d_format.index", "d_format.index", "activation_fn"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor"], ["", "def", "ipixel_dcl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "\"\"\"\n    inputs: input tensor\n    out_num: output channel number\n    kernel_size: convolutional kernel size\n    scope: operation scope\n    activation_fn: activation function, could be None if needed\n    \"\"\"", "\n", "axis", "=", "(", "d_format", ".", "index", "(", "'H'", ")", ",", "d_format", ".", "index", "(", "'W'", ")", ")", "\n", "channel_axis", "=", "d_format", ".", "index", "(", "'C'", ")", "\n", "conv1", "=", "conv2d", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", "+", "'/conv1'", ")", "\n", "conv1_concat", "=", "tf", ".", "concat", "(", "\n", "[", "inputs", ",", "conv1", "]", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/concat1'", ")", "\n", "conv2", "=", "conv2d", "(", "conv1_concat", ",", "out_num", ",", "kernel_size", ",", "scope", "+", "'/conv2'", ")", "\n", "conv2_concat", "=", "tf", ".", "concat", "(", "\n", "[", "conv1_concat", ",", "conv2", "]", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/concat2'", ")", "\n", "conv3", "=", "conv2d", "(", "conv2_concat", ",", "2", "*", "out_num", ",", "kernel_size", ",", "scope", "+", "'/conv3'", ")", "\n", "conv4", ",", "conv5", "=", "tf", ".", "split", "(", "conv3", ",", "2", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/split'", ")", "\n", "dialte1", "=", "dilate_tensor", "(", "conv1", ",", "axis", ",", "0", ",", "0", ",", "scope", "+", "'/dialte1'", ")", "\n", "dialte2", "=", "dilate_tensor", "(", "conv2", ",", "axis", ",", "1", ",", "1", ",", "scope", "+", "'/dialte2'", ")", "\n", "dialte3", "=", "dilate_tensor", "(", "conv4", ",", "axis", ",", "1", ",", "0", ",", "scope", "+", "'/dialte3'", ")", "\n", "dialte4", "=", "dilate_tensor", "(", "conv5", ",", "axis", ",", "0", ",", "1", ",", "scope", "+", "'/dialte4'", ")", "\n", "outputs", "=", "tf", ".", "add_n", "(", "[", "dialte1", ",", "dialte2", ",", "dialte3", ",", "dialte4", "]", ",", "scope", "+", "'/add'", ")", "\n", "if", "activation_fn", ":", "\n", "        ", "outputs", "=", "activation_fn", "(", "outputs", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.ipixel_cl": [[72, 113], ["d_format.index", "tensorflow.contrib.layers.conv2d", "pixel_dcn.dilate_tensor", "pixel_dcn.shift_tensor", "tensorflow.concat", "tensorflow.contrib.layers.conv2d", "pixel_dcn.dilate_tensor", "tensorflow.add_n", "pixel_dcn.shift_tensor", "tensorflow.concat", "tensorflow.contrib.layers.conv2d", "pixel_dcn.dilate_tensor", "pixel_dcn.shift_tensor", "tensorflow.concat", "tensorflow.contrib.layers.conv2d", "pixel_dcn.dilate_tensor", "tensorflow.add_n", "d_format.index", "d_format.index", "activation_fn"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.shift_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.shift_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.shift_tensor", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor"], ["", "def", "ipixel_cl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "\"\"\"\n    inputs: input tensor\n    out_num: output channel number\n    kernel_size: convolutional kernel size\n    scope: operation scope\n    activation_fn: activation function, could be None if needed\n    \"\"\"", "\n", "axis", "=", "(", "d_format", ".", "index", "(", "'H'", ")", ",", "d_format", ".", "index", "(", "'W'", ")", ")", "\n", "channel_axis", "=", "d_format", ".", "index", "(", "'C'", ")", "\n", "conv1", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "inputs", ",", "out_num", ",", "kernel_size", ",", "stride", "=", "2", ",", "scope", "=", "scope", "+", "'/conv1'", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "dialte1", "=", "dilate_tensor", "(", "conv1", ",", "axis", ",", "0", ",", "0", ",", "scope", "+", "'/dialte1'", ")", "\n", "shifted_inputs", "=", "shift_tensor", "(", "inputs", ",", "axis", ",", "1", ",", "1", ",", "scope", "+", "'/shift1'", ")", "\n", "conv1_concat", "=", "tf", ".", "concat", "(", "\n", "[", "shifted_inputs", ",", "dialte1", "]", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/concat1'", ")", "\n", "conv2", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "conv1_concat", ",", "out_num", ",", "kernel_size", ",", "stride", "=", "2", ",", "scope", "=", "scope", "+", "'/conv2'", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "dialte2", "=", "dilate_tensor", "(", "conv2", ",", "axis", ",", "1", ",", "1", ",", "scope", "+", "'/dialte2'", ")", "\n", "conv3", "=", "tf", ".", "add_n", "(", "[", "dialte1", ",", "dialte2", "]", ",", "scope", "+", "'/add'", ")", "\n", "shifted_inputs", "=", "shift_tensor", "(", "inputs", ",", "axis", ",", "1", ",", "0", ",", "scope", "+", "'/shift2'", ")", "\n", "conv2_concat", "=", "tf", ".", "concat", "(", "\n", "[", "shifted_inputs", ",", "conv3", "]", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/concat2'", ")", "\n", "conv4", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "conv2_concat", ",", "out_num", ",", "kernel_size", ",", "stride", "=", "2", ",", "scope", "=", "scope", "+", "'/conv4'", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "dialte3", "=", "dilate_tensor", "(", "conv4", ",", "axis", ",", "1", ",", "0", ",", "scope", "+", "'/dialte3'", ")", "\n", "shifted_inputs", "=", "shift_tensor", "(", "inputs", ",", "axis", ",", "0", ",", "1", ",", "scope", "+", "'/shift3'", ")", "\n", "conv2_concat", "=", "tf", ".", "concat", "(", "\n", "[", "shifted_inputs", ",", "conv3", "]", ",", "channel_axis", ",", "name", "=", "scope", "+", "'/concat3'", ")", "\n", "conv5", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "conv2_concat", ",", "out_num", ",", "kernel_size", ",", "stride", "=", "2", ",", "scope", "=", "scope", "+", "'/conv5'", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "dialte4", "=", "dilate_tensor", "(", "conv5", ",", "axis", ",", "0", ",", "1", ",", "scope", "+", "'/dialte4'", ")", "\n", "outputs", "=", "tf", ".", "add_n", "(", "[", "dialte1", ",", "dialte2", ",", "dialte3", ",", "dialte4", "]", ",", "scope", "+", "'/add'", ")", "\n", "if", "activation_fn", ":", "\n", "        ", "outputs", "=", "activation_fn", "(", "outputs", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.conv2d": [[115, 120], ["tensorflow.contrib.layers.conv2d"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d"], ["", "def", "conv2d", "(", "inputs", ",", "num_outputs", ",", "kernel_size", ",", "scope", ",", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "inputs", ",", "num_outputs", ",", "kernel_size", ",", "scope", "=", "scope", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.get_mask": [[122, 129], ["numpy.ones", "range", "numpy.reshape", "tensorflow.constant"], "function", ["None"], ["", "def", "get_mask", "(", "shape", ",", "scope", ")", ":", "\n", "    ", "new_shape", "=", "(", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", ",", "shape", "[", "2", "]", ",", "shape", "[", "3", "]", ")", "\n", "mask", "=", "np", ".", "ones", "(", "new_shape", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "new_shape", "[", "0", "]", ",", "2", ")", ":", "\n", "        ", "mask", "[", "i", ",", ":", ",", ":", "]", "=", "0", "\n", "", "mask", "=", "np", ".", "reshape", "(", "mask", ",", "shape", ",", "'F'", ")", "\n", "return", "tf", ".", "constant", "(", "mask", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "scope", "+", "'/mask'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.shift_tensor": [[131, 146], ["tensorflow.unstack", "tensorflow.zeros_like", "tensorflow.stack", "tensorflow.unstack", "tensorflow.zeros_like", "tensorflow.stack"], "function", ["None"], ["", "def", "shift_tensor", "(", "inputs", ",", "axis", ",", "row_shift", ",", "column_shift", ",", "scope", ")", ":", "\n", "    ", "if", "row_shift", ":", "\n", "        ", "rows", "=", "tf", ".", "unstack", "(", "inputs", ",", "axis", "=", "axis", "[", "0", "]", ",", "name", "=", "scope", "+", "'/rowsunstack'", ")", "\n", "row_zeros", "=", "tf", ".", "zeros_like", "(", "\n", "rows", "[", "0", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "scope", "+", "'/rowzeros'", ")", "\n", "rows", "=", "rows", "[", "row_shift", ":", "]", "+", "[", "row_zeros", "]", "*", "row_shift", "\n", "inputs", "=", "tf", ".", "stack", "(", "rows", ",", "axis", "=", "axis", "[", "0", "]", ",", "name", "=", "scope", "+", "'/rowsstack'", ")", "\n", "", "if", "column_shift", ":", "\n", "        ", "columns", "=", "tf", ".", "unstack", "(", "\n", "inputs", ",", "axis", "=", "axis", "[", "1", "]", ",", "name", "=", "scope", "+", "'/columnsunstack'", ")", "\n", "columns_zeros", "=", "tf", ".", "zeros_like", "(", "\n", "columns", "[", "0", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "scope", "+", "'/columnzeros'", ")", "\n", "columns", "=", "columns", "[", "column_shift", ":", "]", "+", "[", "columns_zeros", "]", "*", "column_shift", "\n", "inputs", "=", "tf", ".", "stack", "(", "columns", ",", "axis", "=", "axis", "[", "1", "]", ",", "name", "=", "scope", "+", "'/columnsstack'", ")", "\n", "", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.pixel_dcn.dilate_tensor": [[148, 164], ["tensorflow.unstack", "tensorflow.zeros_like", "range", "tensorflow.stack", "tensorflow.unstack", "tensorflow.zeros_like", "range", "tensorflow.stack", "len", "tf.unstack.insert", "len", "tf.unstack.insert"], "function", ["None"], ["", "def", "dilate_tensor", "(", "inputs", ",", "axis", ",", "row_shift", ",", "column_shift", ",", "scope", ")", ":", "\n", "    ", "rows", "=", "tf", ".", "unstack", "(", "inputs", ",", "axis", "=", "axis", "[", "0", "]", ",", "name", "=", "scope", "+", "'/rowsunstack'", ")", "\n", "row_zeros", "=", "tf", ".", "zeros_like", "(", "\n", "rows", "[", "0", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "scope", "+", "'/rowzeros'", ")", "\n", "for", "index", "in", "range", "(", "len", "(", "rows", ")", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "rows", ".", "insert", "(", "index", "-", "row_shift", ",", "row_zeros", ")", "\n", "", "inputs", "=", "tf", ".", "stack", "(", "rows", ",", "axis", "=", "axis", "[", "0", "]", ",", "name", "=", "scope", "+", "'/rowsstack'", ")", "\n", "columns", "=", "tf", ".", "unstack", "(", "\n", "inputs", ",", "axis", "=", "axis", "[", "1", "]", ",", "name", "=", "scope", "+", "'/columnsunstack'", ")", "\n", "columns_zeros", "=", "tf", ".", "zeros_like", "(", "\n", "columns", "[", "0", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "scope", "+", "'/columnzeros'", ")", "\n", "for", "index", "in", "range", "(", "len", "(", "columns", ")", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "columns", ".", "insert", "(", "index", "-", "column_shift", ",", "columns_zeros", ")", "\n", "", "inputs", "=", "tf", ".", "stack", "(", "\n", "columns", ",", "axis", "=", "axis", "[", "1", "]", ",", "name", "=", "scope", "+", "'/columnsstack'", ")", "\n", "return", "inputs", "\n", "", ""]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.center_crop": [[8, 13], ["scipy.misc.imresize", "scipy.misc.imresize", "int", "int"], "function", ["None"], ["def", "center_crop", "(", "image", ",", "pre_height", ",", "pre_width", ",", "height", ",", "width", ")", ":", "\n", "    ", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "j", ",", "i", "=", "int", "(", "(", "h", "-", "pre_height", ")", "/", "2.", ")", ",", "int", "(", "(", "w", "-", "pre_width", ")", "/", "2.", ")", "\n", "return", "scipy", ".", "misc", ".", "imresize", "(", "\n", "image", "[", "j", ":", "j", "+", "pre_height", ",", "i", ":", "i", "+", "pre_width", "]", ",", "[", "height", ",", "width", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.transform": [[15, 21], ["img_utils.center_crop", "scipy.misc.imresize", "scipy.misc.imresize", "numpy.array"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.center_crop"], ["", "def", "transform", "(", "image", ",", "pre_height", ",", "pre_width", ",", "height", ",", "width", ",", "is_crop", ")", ":", "\n", "    ", "if", "is_crop", ":", "\n", "        ", "new_image", "=", "center_crop", "(", "image", ",", "pre_height", ",", "pre_width", ",", "height", ",", "width", ")", "\n", "", "else", ":", "\n", "        ", "new_image", "=", "scipy", ".", "misc", ".", "imresize", "(", "image", ",", "[", "height", ",", "width", "]", ")", "\n", "", "return", "np", ".", "array", "(", "new_image", ")", "/", "127.5", "-", "1.", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread": [[23, 27], ["scipy.misc.imread().astype", "scipy.misc.imread().astype", "scipy.misc.imread().astype", "scipy.misc.imread().astype", "scipy.misc.imread", "scipy.misc.imread", "scipy.misc.imread", "scipy.misc.imread"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread"], ["", "def", "imread", "(", "path", ",", "is_grayscale", "=", "False", ")", ":", "\n", "    ", "if", "is_grayscale", ":", "\n", "        ", "return", "scipy", ".", "misc", ".", "imread", "(", "path", ",", "flatten", "=", "True", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "", "return", "scipy", ".", "misc", ".", "imread", "(", "path", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave": [[29, 47], ["numpy.ones", "enumerate", "scipy.misc.imsave", "scipy.misc.imsave", "enumerate", "list", "int"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave"], ["", "def", "imsave", "(", "image", ",", "path", ")", ":", "\n", "    ", "label_colours", "=", "[", "\n", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "# 0=background", "\n", "(", "128", ",", "0", ",", "0", ")", ",", "(", "0", ",", "128", ",", "0", ")", ",", "(", "128", ",", "128", ",", "0", ")", ",", "(", "0", ",", "0", ",", "128", ")", ",", "(", "128", ",", "0", ",", "128", ")", ",", "\n", "# 1=aeroplane, 2=bicycle, 3=bird, 4=boat, 5=bottle", "\n", "(", "0", ",", "128", ",", "128", ")", ",", "(", "128", ",", "128", ",", "128", ")", ",", "(", "64", ",", "0", ",", "0", ")", ",", "(", "192", ",", "0", ",", "0", ")", ",", "(", "64", ",", "128", ",", "0", ")", ",", "\n", "# 6=bus, 7=car, 8=cat, 9=chair, 10=cow", "\n", "(", "192", ",", "128", ",", "0", ")", ",", "(", "64", ",", "0", ",", "128", ")", ",", "(", "192", ",", "0", ",", "128", ")", ",", "(", "64", ",", "128", ",", "128", ")", ",", "(", "192", ",", "128", ",", "128", ")", ",", "\n", "# 11=diningtable, 12=dog, 13=horse, 14=motorbike, 15=person", "\n", "(", "0", ",", "64", ",", "0", ")", ",", "(", "128", ",", "64", ",", "0", ")", ",", "(", "0", ",", "192", ",", "0", ")", ",", "(", "128", ",", "192", ",", "0", ")", ",", "(", "0", ",", "64", ",", "128", ")", "]", "\n", "# 16=potted plant, 17=sheep, 18=sofa, 19=train, 20=tv/monitor", "\n", "images", "=", "np", ".", "ones", "(", "list", "(", "image", ".", "shape", ")", "+", "[", "3", "]", ")", "\n", "for", "j_", ",", "j", "in", "enumerate", "(", "image", ")", ":", "\n", "        ", "for", "k_", ",", "k", "in", "enumerate", "(", "j", ")", ":", "\n", "            ", "if", "k", "<", "21", ":", "\n", "                ", "images", "[", "j_", ",", "k_", "]", "=", "label_colours", "[", "int", "(", "k", ")", "]", "\n", "", "", "", "scipy", ".", "misc", ".", "imsave", "(", "path", ",", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.get_images": [[49, 58], ["numpy.array().astype", "img_utils.imread", "img_utils.transform", "images.append", "numpy.array"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.transform"], ["", "def", "get_images", "(", "paths", ",", "pre_height", ",", "pre_width", ",", "height", ",", "width", ",", "\n", "is_crop", "=", "False", ",", "is_grayscale", "=", "False", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "image", "=", "imread", "(", "path", ",", "is_grayscale", ")", "\n", "new_image", "=", "transform", "(", "\n", "image", ",", "pre_height", ",", "pre_width", ",", "height", ",", "width", ",", "is_crop", ")", "\n", "images", ".", "append", "(", "new_image", ")", "\n", "", "return", "np", ".", "array", "(", "images", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.save_data": [[60, 69], ["h5py.File", "range", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "scipy.misc.imsave", "scipy.misc.imsave", "img_utils.imsave", "str", "str"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave"], ["", "def", "save_data", "(", "path", ",", "image_folder", "=", "'./images/'", ",", "label_folder", "=", "'./labels/'", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "image_folder", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "label_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "label_folder", ")", "\n", "", "data_file", "=", "h5py", ".", "File", "(", "path", ",", "'r'", ")", "\n", "for", "index", "in", "range", "(", "data_file", "[", "'X'", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "scipy", ".", "misc", ".", "imsave", "(", "image_folder", "+", "str", "(", "index", ")", "+", "'.png'", ",", "data_file", "[", "'X'", "]", "[", "index", "]", ")", "\n", "imsave", "(", "data_file", "[", "'Y'", "]", "[", "index", "]", ",", "label_folder", "+", "str", "(", "index", ")", "+", "'.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.compose_images": [[71, 89], ["enumerate", "numpy.concatenate", "scipy.misc.imsave", "scipy.misc.imsave", "os.path.exists", "os.makedirs", "numpy.concatenate", "id_imgs.append", "id_imgs.append", "scipy.misc.imread().astype", "scipy.misc.imread().astype", "scipy.misc.imresize", "scipy.misc.imresize", "imgs.append", "imgs.append", "numpy.ones", "str", "scipy.misc.imread", "scipy.misc.imread", "int", "numpy.ones", "list"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imsave", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.imread"], ["", "", "def", "compose_images", "(", "ids", ",", "wides", ",", "folders", ",", "name", ")", ":", "\n", "    ", "result_folder", "=", "'./results/'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "result_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "result_folder", ")", "\n", "", "id_imgs", "=", "[", "]", "\n", "for", "i", ",", "index", "in", "enumerate", "(", "ids", ")", ":", "\n", "        ", "imgs", "=", "[", "]", "\n", "for", "folder", "in", "folders", ":", "\n", "            ", "path", "=", "folder", "+", "str", "(", "index", ")", "+", "'.png'", "\n", "cur_img", "=", "scipy", ".", "misc", ".", "imread", "(", "path", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "cur_img", "=", "scipy", ".", "misc", ".", "imresize", "(", "cur_img", ",", "[", "256", ",", "int", "(", "256", "*", "wides", "[", "i", "]", ")", "]", ")", "\n", "imgs", ".", "append", "(", "cur_img", ")", "\n", "imgs", ".", "append", "(", "np", ".", "ones", "(", "[", "3", "]", "+", "list", "(", "cur_img", ".", "shape", ")", "[", "1", ":", "]", ")", "*", "255", ")", "\n", "", "img", "=", "np", ".", "concatenate", "(", "imgs", "[", ":", "-", "1", "]", ",", "axis", "=", "0", ")", "\n", "id_imgs", ".", "append", "(", "img", ")", "\n", "id_imgs", ".", "append", "(", "np", ".", "ones", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "2", ",", "img", ".", "shape", "[", "2", "]", ")", ")", "*", "255", ")", "\n", "", "id_img", "=", "np", ".", "concatenate", "(", "id_imgs", "[", ":", "-", "1", "]", ",", "axis", "=", "1", ")", "\n", "scipy", ".", "misc", ".", "imsave", "(", "result_folder", "+", "name", "+", "'.png'", ",", "id_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d": [[11, 21], ["tensorflow.contrib.layers.conv2d", "tensorflow.contrib.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.conv2d"], ["def", "conv2d", "(", "inputs", ",", "num_outputs", ",", "kernel_size", ",", "scope", ",", "norm", "=", "True", ",", "\n", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d", "(", "\n", "inputs", ",", "num_outputs", ",", "kernel_size", ",", "scope", "=", "scope", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "\n", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "outputs", ",", "decay", "=", "0.9", ",", "center", "=", "True", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "\n", "updates_collections", "=", "None", ",", "epsilon", "=", "1e-5", ",", "scope", "=", "scope", "+", "'/batch_norm'", ",", "\n", "data_format", "=", "d_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.deconv": [[23, 30], ["tensorflow.contrib.layers.conv2d_transpose", "tensorflow.contrib.layers.batch_norm"], "function", ["None"], ["", "def", "deconv", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "tf", ".", "contrib", ".", "layers", ".", "conv2d_transpose", "(", "\n", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", "=", "scope", ",", "stride", "=", "[", "2", ",", "2", "]", ",", "\n", "data_format", "=", "d_format", ",", "activation_fn", "=", "None", ",", "biases_initializer", "=", "None", ")", "\n", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "outputs", ",", "decay", "=", "0.9", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "1e-5", ",", "scope", "=", "scope", "+", "'/batch_norm'", ",", "data_format", "=", "d_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.ipixel_cl": [[32, 38], ["pixel_dcn.ipixel_cl", "tensorflow.contrib.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.ipixel_cl"], ["", "def", "ipixel_cl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "norm", "=", "True", ",", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "pixel_dcn", ".", "ipixel_cl", "(", "\n", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "None", ",", "d_format", ")", "\n", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "outputs", ",", "decay", "=", "0.9", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "1e-5", ",", "scope", "=", "scope", "+", "'/batch_norm'", ",", "data_format", "=", "d_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.pixel_dcl": [[40, 46], ["pixel_dcn.pixel_dcl", "tensorflow.contrib.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.pixel_dcl"], ["", "def", "pixel_dcl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "pixel_dcn", ".", "pixel_dcl", "(", "\n", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "None", ",", "d_format", ")", "\n", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "outputs", ",", "decay", "=", "0.9", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "1e-5", ",", "scope", "=", "scope", "+", "'/batch_norm'", ",", "data_format", "=", "d_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.ipixel_dcl": [[48, 54], ["pixel_dcn.ipixel_dcl", "tensorflow.contrib.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.ipixel_dcl"], ["", "def", "ipixel_dcl", "(", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "d_format", "=", "'NHWC'", ")", ":", "\n", "    ", "outputs", "=", "pixel_dcn", ".", "ipixel_dcl", "(", "\n", "inputs", ",", "out_num", ",", "kernel_size", ",", "scope", ",", "None", ",", "d_format", ")", "\n", "return", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "outputs", ",", "decay", "=", "0.9", ",", "activation_fn", "=", "tf", ".", "nn", ".", "relu", ",", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "1e-5", ",", "scope", "=", "scope", "+", "'/batch_norm'", ",", "data_format", "=", "d_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.ops.pool2d": [[56, 60], ["tensorflow.contrib.layers.max_pool2d"], "function", ["None"], ["", "def", "pool2d", "(", "inputs", ",", "kernel_size", ",", "scope", ",", "data_format", "=", "'NHWC'", ")", ":", "\n", "    ", "return", "tf", ".", "contrib", ".", "layers", ".", "max_pool2d", "(", "\n", "inputs", ",", "kernel_size", ",", "scope", "=", "scope", ",", "padding", "=", "'SAME'", ",", "\n", "data_format", "=", "data_format", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.read_images": [[16, 20], ["open", "line.strip().split", "line.strip"], "function", ["None"], ["def", "read_images", "(", "data_list", ")", ":", "\n", "    ", "with", "open", "(", "data_list", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "[", "line", ".", "strip", "(", "\"\\n\"", ")", ".", "split", "(", "' '", ")", "for", "line", "in", "f", "]", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.process_image": [[22, 27], ["PIL.Image.open", "img.resize.resize", "img.resize.load", "numpy.asarray", "PIL.Image.NEAREST"], "function", ["None"], ["", "def", "process_image", "(", "image", ",", "shape", ",", "resize_mode", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "    ", "img", "=", "Image", ".", "open", "(", "image", ")", "\n", "img", "=", "img", ".", "resize", "(", "shape", ",", "resize_mode", ")", "\n", "img", ".", "load", "(", ")", "\n", "return", "np", ".", "asarray", "(", "img", ",", "dtype", "=", "\"float32\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.build_h5_dataset": [[29, 43], ["h5_util.read_images", "len", "h5py.File", "h5py.File.create_dataset", "h5py.File.create_dataset", "progressbar.ProgressBar", "progressbar.ProgressBar.", "h5py.File.close", "enumerate", "h5_util.process_image", "h5_util.process_image"], "function", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.read_images", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.close", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.process_image", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.h5_util.process_image"], ["", "def", "build_h5_dataset", "(", "data_dir", ",", "list_path", ",", "out_dir", ",", "shape", ",", "name", ",", "norm", "=", "False", ")", ":", "\n", "    ", "images", "=", "read_images", "(", "list_path", ")", "\n", "images_size", "=", "len", "(", "images", ")", "\n", "dataset", "=", "h5py", ".", "File", "(", "out_dir", "+", "name", "+", "'.h5'", ",", "'w'", ")", "\n", "dataset", ".", "create_dataset", "(", "'X'", ",", "(", "images_size", ",", "*", "shape", ",", "3", ")", ",", "dtype", "=", "'f'", ")", "\n", "dataset", ".", "create_dataset", "(", "'Y'", ",", "(", "images_size", ",", "*", "shape", ")", ",", "dtype", "=", "'f'", ")", "\n", "pbar", "=", "ProgressBar", "(", ")", "\n", "for", "index", ",", "(", "image", ",", "label", ")", "in", "pbar", "(", "enumerate", "(", "images", ")", ")", ":", "\n", "        ", "image", "=", "process_image", "(", "data_dir", "+", "image", ",", "shape", ")", "\n", "label", "=", "process_image", "(", "data_dir", "+", "label", ",", "shape", ",", "Image", ".", "NEAREST", ")", "\n", "image", "-=", "IMG_MEAN", "\n", "image", "=", "image", "/", "255.", "if", "norm", "else", "image", "\n", "dataset", "[", "'X'", "]", "[", "index", "]", ",", "dataset", "[", "'Y'", "]", "[", "index", "]", "=", "image", ",", "label", "\n", "", "dataset", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.FileDataReader.__init__": [[17, 24], ["glob.glob"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "input_height", ",", "input_width", ",", "height", ",", "width", ",", "\n", "batch_size", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "input_height", ",", "self", ".", "input_width", "=", "input_height", ",", "input_width", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "height", ",", "width", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "image_files", "=", "glob", ".", "glob", "(", "data_dir", "+", "'*'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.FileDataReader.next_batch": [[25, 31], ["numpy.random.choice", "img_utils.get_images"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.img_utils.get_images"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "sample_files", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "image_files", ",", "batch_size", ")", "\n", "images", "=", "get_images", "(", "\n", "sample_files", ",", "self", ".", "input_height", ",", "self", ".", "input_width", ",", "\n", "self", ".", "height", ",", "self", ".", "width", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.H5DataLoader.__init__": [[35, 40], ["h5py.File", "data_reader.H5DataLoader.gen_indexes"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.H5DataLoader.gen_indexes"], ["    ", "def", "__init__", "(", "self", ",", "data_path", ",", "is_train", "=", "True", ")", ":", "\n", "        ", "self", ".", "is_train", "=", "is_train", "\n", "data_file", "=", "h5py", ".", "File", "(", "data_path", ",", "'r'", ")", "\n", "self", ".", "images", ",", "self", ".", "labels", "=", "data_file", "[", "'X'", "]", ",", "data_file", "[", "'Y'", "]", "\n", "self", ".", "gen_indexes", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.H5DataLoader.gen_indexes": [[41, 47], ["numpy.random.permutation", "numpy.array", "range", "range"], "methods", ["None"], ["", "def", "gen_indexes", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "indexes", "=", "np", ".", "random", ".", "permutation", "(", "range", "(", "self", ".", "images", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "indexes", "=", "np", ".", "array", "(", "range", "(", "self", ".", "images", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "self", ".", "cur_index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.H5DataLoader.next_batch": [[48, 62], ["list", "sorted", "data_reader.H5DataLoader.gen_indexes", "list", "set", "len", "len", "print", "numpy.empty", "numpy.empty", "len"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.H5DataLoader.gen_indexes"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "next_index", "=", "self", ".", "cur_index", "+", "batch_size", "\n", "cur_indexes", "=", "list", "(", "self", ".", "indexes", "[", "self", ".", "cur_index", ":", "next_index", "]", ")", "\n", "self", ".", "cur_index", "=", "next_index", "\n", "if", "len", "(", "cur_indexes", ")", "<", "batch_size", "and", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "gen_indexes", "(", ")", "\n", "self", ".", "cur_index", "=", "batch_size", "-", "len", "(", "cur_indexes", ")", "\n", "cur_indexes", "+=", "list", "(", "self", ".", "indexes", "[", ":", "batch_size", "-", "len", "(", "cur_indexes", ")", "]", ")", "\n", "", "cur_indexes", "=", "sorted", "(", "set", "(", "cur_indexes", ")", ")", "\n", "try", ":", "\n", "            ", "return", "self", ".", "images", "[", "cur_indexes", "]", ",", "self", ".", "labels", "[", "cur_indexes", "]", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "return", "np", ".", "empty", "(", "0", ")", ",", "np", ".", "empty", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.__init__": [[66, 79], ["data_reader.QueueDataReader.read_data", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.train.slice_input_producer", "data_reader.QueueDataReader.read_dataset"], "methods", ["home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.read_data", "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.read_dataset"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "data_dir", ",", "data_list", ",", "input_size", ",", "class_num", ",", "\n", "name", ",", "data_format", ")", ":", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "scope", "=", "name", "+", "'/data_reader'", "\n", "self", ".", "class_num", "=", "class_num", "\n", "self", ".", "channel_axis", "=", "3", "\n", "images", ",", "labels", "=", "self", ".", "read_data", "(", "data_dir", ",", "data_list", ")", "\n", "images", "=", "tf", ".", "convert_to_tensor", "(", "images", ",", "dtype", "=", "tf", ".", "string", ")", "\n", "labels", "=", "tf", ".", "convert_to_tensor", "(", "labels", ",", "dtype", "=", "tf", ".", "string", ")", "\n", "queue", "=", "tf", ".", "train", ".", "slice_input_producer", "(", "\n", "[", "images", ",", "labels", "]", ",", "shuffle", "=", "True", ",", "name", "=", "self", ".", "scope", "+", "'/slice'", ")", "\n", "self", ".", "image", ",", "self", ".", "label", "=", "self", ".", "read_dataset", "(", "\n", "queue", ",", "input_size", ",", "data_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.next_batch": [[80, 86], ["tensorflow.train.shuffle_batch"], "methods", ["None"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "image_batch", ",", "label_batch", "=", "tf", ".", "train", ".", "shuffle_batch", "(", "\n", "[", "self", ".", "image", ",", "self", ".", "label", "]", ",", "batch_size", "=", "batch_size", ",", "\n", "num_threads", "=", "4", ",", "capacity", "=", "50000", ",", "min_after_dequeue", "=", "10000", ",", "\n", "name", "=", "self", ".", "scope", "+", "'/batch'", ")", "\n", "return", "image_batch", ",", "label_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.read_dataset": [[87, 101], ["tensorflow.image.decode_jpeg", "tensorflow.image.decode_png", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.reduce_mean", "tensorflow.read_file", "tensorflow.read_file", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.cast"], "methods", ["None"], ["", "def", "read_dataset", "(", "self", ",", "queue", ",", "input_size", ",", "data_format", ")", ":", "\n", "        ", "image", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "\n", "tf", ".", "read_file", "(", "queue", "[", "0", "]", ")", ",", "channels", "=", "3", ",", "name", "=", "self", ".", "scope", "+", "'/image'", ")", "\n", "label", "=", "tf", ".", "image", ".", "decode_png", "(", "\n", "tf", ".", "read_file", "(", "queue", "[", "1", "]", ")", ",", "channels", "=", "1", ",", "name", "=", "self", ".", "scope", "+", "'/label'", ")", "\n", "image", "=", "tf", ".", "image", ".", "resize_images", "(", "image", ",", "input_size", ")", "\n", "label", "=", "tf", ".", "image", ".", "resize_images", "(", "label", ",", "input_size", ",", "1", ")", "\n", "if", "data_format", "==", "'NCHW'", ":", "\n", "            ", "self", ".", "channel_axis", "=", "1", "\n", "image", "=", "tf", ".", "transpose", "(", "image", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "label", "=", "tf", ".", "transpose", "(", "label", ",", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "image", "-=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "image", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "(", "0", ",", "1", ")", ",", "name", "=", "self", ".", "scope", "+", "'/mean'", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.read_data": [[102, 110], ["open", "line.strip().split", "images.append", "labels.append", "line.strip"], "methods", ["None"], ["", "def", "read_data", "(", "self", ",", "data_dir", ",", "data_list", ")", ":", "\n", "        ", "with", "open", "(", "data_list", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "images", ",", "labels", "=", "[", "]", ",", "[", "]", "\n", "for", "line", "in", "f", ":", "\n", "                ", "image", ",", "label", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", "' '", ")", "\n", "images", ".", "append", "(", "data_dir", "+", "image", ")", "\n", "labels", ".", "append", "(", "data_dir", "+", "label", ")", "\n", "", "", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.start": [[111, 115], ["tensorflow.train.Coordinator", "tensorflow.train.start_queue_runners"], "methods", ["None"], ["", "def", "start", "(", "self", ")", ":", "\n", "        ", "self", ".", "coord", "=", "tf", ".", "train", ".", "Coordinator", "(", ")", "\n", "self", ".", "threads", "=", "tf", ".", "train", ".", "start_queue_runners", "(", "\n", "coord", "=", "self", ".", "coord", ",", "sess", "=", "self", ".", "sess", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.divelab_PixelDCN.utils.data_reader.QueueDataReader.close": [[116, 119], ["data_reader.QueueDataReader.coord.request_stop", "data_reader.QueueDataReader.coord.join"], "methods", ["None"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "coord", ".", "request_stop", "(", ")", "\n", "self", ".", "coord", ".", "join", "(", "self", ".", "threads", ")", "\n", "", "", ""]]}