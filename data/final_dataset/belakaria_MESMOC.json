{"home.repos.pwc.inspect_result.belakaria_MESMOC.None.benchmark_functions.Currin": [[7, 9], ["float", "math.exp", "pow", "pow"], "function", ["None"], ["def", "Currin", "(", "x", ",", "d", ")", ":", "\n", "    ", "return", "-", "1", "*", "float", "(", "(", "(", "1", "-", "math", ".", "exp", "(", "-", "0.5", "*", "(", "1", "/", "x", "[", "1", "]", ")", ")", ")", "*", "(", "(", "2300", "*", "pow", "(", "x", "[", "0", "]", ",", "3", ")", "+", "1900", "*", "x", "[", "0", "]", "*", "x", "[", "0", "]", "+", "2092", "*", "x", "[", "0", "]", "+", "60", ")", "/", "(", "100", "*", "pow", "(", "x", "[", "0", "]", ",", "3", ")", "+", "500", "*", "x", "[", "0", "]", "*", "x", "[", "0", "]", "+", "4", "*", "x", "[", "0", "]", "+", "20", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.benchmark_functions.branin": [[10, 15], ["copy.deepcopy", "float", "numpy.square", "numpy.cos", "numpy.square", "numpy.square"], "function", ["None"], ["", "def", "branin", "(", "x1", ",", "d", ")", ":", "\n", "    ", "x", "=", "deepcopy", "(", "x1", ")", "\n", "x", "[", "0", "]", "=", "15", "*", "x", "[", "0", "]", "-", "5", "\n", "x", "[", "1", "]", "=", "15", "*", "x", "[", "1", "]", "\n", "return", "-", "1", "*", "float", "(", "np", ".", "square", "(", "x", "[", "1", "]", "-", "(", "5.1", "/", "(", "4", "*", "np", ".", "square", "(", "math", ".", "pi", ")", ")", ")", "*", "np", ".", "square", "(", "x", "[", "0", "]", ")", "+", "(", "5", "/", "math", ".", "pi", ")", "*", "x", "[", "0", "]", "-", "6", ")", "+", "10", "*", "(", "1", "-", "(", "1.", "/", "(", "8", "*", "math", ".", "pi", ")", ")", ")", "*", "np", ".", "cos", "(", "x", "[", "0", "]", ")", "+", "10", ")", "", "", ""]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.singlemes.MaxvalueEntropySearch.__init__": [[13, 17], ["max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "GPmodel", ")", ":", "\n", "        ", "self", ".", "GPmodel", "=", "GPmodel", "\n", "self", ".", "y_max", "=", "max", "(", "GPmodel", ".", "yValues", ")", "\n", "self", ".", "d", "=", "GPmodel", ".", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.singlemes.MaxvalueEntropySearch.Sampling_RFM": [[19, 27], ["sklearn.kernel_approximation.RBFSampler", "singlemes.MaxvalueEntropySearch.rbf_features.fit_transform", "numpy.linalg.inv", "numpy.linalg.inv.dot().dot", "numpy.linalg.cholesky", "numpy.asarray", "singlemes.MaxvalueEntropySearch.T.dot", "numpy.linalg.inv.dot", "numpy.eye"], "methods", ["None"], ["", "def", "Sampling_RFM", "(", "self", ")", ":", "\n", "        ", "self", ".", "rbf_features", "=", "RBFSampler", "(", "gamma", "=", "1", "/", "(", "2", "*", "self", ".", "GPmodel", ".", "kernel", ".", "length_scale", "**", "2", ")", ",", "n_components", "=", "1000", ",", "random_state", "=", "1", ")", "\n", "X_train_features", "=", "self", ".", "rbf_features", ".", "fit_transform", "(", "np", ".", "asarray", "(", "self", ".", "GPmodel", ".", "xValues", ")", ")", "\n", "\n", "A_inv", "=", "np", ".", "linalg", ".", "inv", "(", "(", "X_train_features", ".", "T", ")", ".", "dot", "(", "X_train_features", ")", "+", "np", ".", "eye", "(", "self", ".", "rbf_features", ".", "n_components", ")", "/", "self", ".", "GPmodel", ".", "beta", ")", "\n", "self", ".", "weights_mu", "=", "A_inv", ".", "dot", "(", "X_train_features", ".", "T", ")", ".", "dot", "(", "self", ".", "GPmodel", ".", "yValues", ")", "\n", "weights_gamma", "=", "A_inv", "/", "self", ".", "GPmodel", ".", "beta", "\n", "self", ".", "L", "=", "np", ".", "linalg", ".", "cholesky", "(", "weights_gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.singlemes.MaxvalueEntropySearch.weigh_sampling": [[28, 31], ["numpy.random.normal", "numpy.size", "singlemes.MaxvalueEntropySearch.L.dot"], "methods", ["None"], ["", "def", "weigh_sampling", "(", "self", ")", ":", "\n", "        ", "random_normal_sample", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "np", ".", "size", "(", "self", ".", "weights_mu", ")", ")", "\n", "self", ".", "sampled_weights", "=", "np", ".", "c_", "[", "self", ".", "weights_mu", "]", "+", "self", ".", "L", ".", "dot", "(", "np", ".", "c_", "[", "random_normal_sample", "]", ")", "\n", "", "def", "f_regression", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.singlemes.MaxvalueEntropySearch.f_regression": [[31, 35], ["singlemes.MaxvalueEntropySearch.rbf_features.fit_transform", "x.reshape", "singlemes.MaxvalueEntropySearch.dot", "len"], "methods", ["None"], ["", "def", "f_regression", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "X_features", "=", "self", ".", "rbf_features", ".", "fit_transform", "(", "x", ".", "reshape", "(", "1", ",", "len", "(", "x", ")", ")", ")", "\n", "return", "-", "(", "X_features", ".", "dot", "(", "self", ".", "sampled_weights", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.singlemes.MaxvalueEntropySearch.single_acq": [[36, 49], ["singlemes.MaxvalueEntropySearch.GPmodel.getPrediction", "scipy.stats.norm.pdf", "scipy.stats.norm.cdf", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getPrediction"], ["", "def", "single_acq", "(", "self", ",", "x", ",", "maximum", ")", ":", "\n", "        ", "mean", ",", "std", "=", "self", ".", "GPmodel", ".", "getPrediction", "(", "x", ")", "\n", "mean", "=", "mean", "[", "0", "]", "\n", "std", "=", "std", "[", "0", "]", "\n", "#if maximum < max(self.GPmodel.yValues)+5/self.GPmodel.beta:", "\n", "#    maximum=max(self.GPmodel.yValues)+5/self.GPmodel.beta", "\n", "\n", "normalized_max", "=", "(", "maximum", "-", "mean", ")", "/", "std", "\n", "pdf", "=", "norm", ".", "pdf", "(", "normalized_max", ")", "\n", "cdf", "=", "norm", ".", "cdf", "(", "normalized_max", ")", "\n", "if", "(", "cdf", "==", "0", ")", ":", "\n", "            ", "cdf", "=", "1e-30", "\n", "", "return", "-", "(", "normalized_max", "*", "pdf", ")", "/", "(", "2", "*", "cdf", ")", "+", "np", ".", "log", "(", "cdf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.__init__": [[14, 22], ["sklearn.gaussian_process.kernels.RBF", "sklearn.gaussian_process.GaussianProcessRegressor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dim", ")", ":", "\n", "        ", "self", ".", "dim", "=", "dim", "\n", "self", ".", "kernel", "=", "RBF", "(", "length_scale", "=", "1", ",", "length_scale_bounds", "=", "(", "1e-3", ",", "1e2", ")", ")", "\n", "self", ".", "beta", "=", "1e6", "\n", "self", ".", "xValues", "=", "[", "]", "\n", "self", ".", "yValues", "=", "[", "]", "\n", "self", ".", "yValuesNorm", "=", "[", "]", "\n", "self", ".", "model", "=", "GaussianProcessRegressor", "(", "kernel", "=", "self", ".", "kernel", ",", "n_restarts_optimizer", "=", "5", ")", "\n", "#        self.model = GaussianProcessRegressor(kernel=self.kernel,normalize_y=True,n_restarts_optimizer=5)", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.fitNormal": [[25, 30], ["numpy.mean", "model.GaussianProcess.getstd", "model.GaussianProcess.model.fit"], "methods", ["home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getstd"], ["", "def", "fitNormal", "(", "self", ")", ":", "\n", "        ", "y_mean", "=", "np", ".", "mean", "(", "self", ".", "yValues", ")", "\n", "y_std", "=", "self", ".", "getstd", "(", ")", "\n", "self", ".", "yValuesNorm", "=", "(", "self", ".", "yValues", "-", "y_mean", ")", "/", "y_std", "\n", "self", ".", "model", ".", "fit", "(", "self", ".", "xValues", ",", "self", ".", "yValuesNorm", ")", "\n", "", "def", "fitModel", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.fitModel": [[30, 32], ["model.GaussianProcess.model.fit"], "methods", ["None"], ["", "def", "fitModel", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "fit", "(", "self", ".", "xValues", ",", "self", ".", "yValues", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.addSample": [[34, 37], ["model.GaussianProcess.xValues.append", "model.GaussianProcess.yValues.append"], "methods", ["None"], ["", "def", "addSample", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "self", ".", "xValues", ".", "append", "(", "x", ")", "\n", "self", ".", "yValues", ".", "append", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getPrediction": [[38, 43], ["model.GaussianProcess.model.predict", "x.reshape", "numpy.sqrt", "model.GaussianProcess.getstd"], "methods", ["home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getstd"], ["", "def", "getPrediction", "(", "self", ",", "x", ")", ":", "\n", "        ", "mean", ",", "std", "=", "self", ".", "model", ".", "predict", "(", "x", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "return_std", "=", "True", ")", "\n", "if", "std", "[", "0", "]", "==", "0", ":", "\n", "            ", "std", "[", "0", "]", "=", "np", ".", "sqrt", "(", "1e-5", ")", "*", "self", ".", "getstd", "(", ")", "\n", "", "return", "mean", ",", "std", "\n", "", "def", "getmeanPrediction", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getmeanPrediction": [[43, 46], ["model.GaussianProcess.model.predict", "x.reshape"], "methods", ["None"], ["", "def", "getmeanPrediction", "(", "self", ",", "x", ")", ":", "\n", "        ", "mean", "=", "self", ".", "model", ".", "predict", "(", "x", ".", "reshape", "(", "1", ",", "-", "1", ")", ")", "\n", "return", "mean", "\n", "", "def", "getmean", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getmean": [[46, 48], ["numpy.mean"], "methods", ["None"], ["", "def", "getmean", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "mean", "(", "self", ".", "yValues", ")", "\n", "", "def", "getstd", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.model.GaussianProcess.getstd": [[48, 53], ["numpy.std"], "methods", ["None"], ["", "def", "getstd", "(", "self", ")", ":", "\n", "        ", "y_std", "=", "np", ".", "std", "(", "self", ".", "yValues", ")", "\n", "if", "y_std", "==", "0", ":", "\n", "            ", "y_std", "=", "1", "\n", "", "return", "y_std", "\n", "", "", ""]], "home.repos.pwc.inspect_result.belakaria_MESMOC.None.MESMOC.evaluation": [[22, 30], ["print", "range", "range", "len", "len"], "function", ["None"], ["def", "evaluation", "(", "xx", ",", "d", ")", ":", "\n", "    ", "global", "functions", "\n", "x", "=", "[", "item", "for", "item", "in", "xx", "]", "\n", "y", "=", "[", "functions", "[", "i", "]", "(", "x", ",", "d", ")", "for", "i", "in", "range", "(", "len", "(", "functions", ")", ")", "]", "\n", "c", "=", "[", "constraints", "[", "i", "]", "(", "x", ",", "d", ")", "for", "i", "in", "range", "(", "len", "(", "constraints", ")", ")", "]", "\n", "all_", "=", "y", "+", "c", "\n", "print", "(", "all_", ")", "\n", "return", "all_", "\n", "", "functions_and_contraints", "=", "evaluation", "\n"]]}