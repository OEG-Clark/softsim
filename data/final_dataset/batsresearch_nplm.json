{"home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Experiment.__init__": [[10, 18], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "num_classes", ",", "label_partition", ",", "lm_annot_votes", ",", "lm_train_votes", ",", "lm_annot_labels", "=", "None", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "label_partition", "=", "label_partition", "\n", "self", ".", "lm_annot_votes", "=", "lm_annot_votes", "\n", "self", ".", "lm_train_votes", "=", "lm_train_votes", "\n", "self", ".", "lm_annot_labels", "=", "lm_annot_labels", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_df", "=", "len", "(", "label_partition", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Experiment.set_soft_labels": [[19, 21], ["None"], "methods", ["None"], ["", "def", "set_soft_labels", "(", "self", ",", "soft_labels", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.__init__": [[24, 31], ["nplm.PartialLabelModel"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "num_classes", ",", "label_partition", ",", "preset_classbalance", "=", "None", ",", "device", "=", "'cuda:0'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "\n", "self", ".", "labelmodel", "=", "PartialLabelModel", "(", "num_classes", "=", "num_classes", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "preset_classbalance", "=", "preset_classbalance", ",", "\n", "device", "=", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.annotate": [[32, 36], ["test_nplm.LMTask.labelmodel.get_label_distribution", "test_nplm.LMTask.labelmodel.estimate_label_model"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.get_label_distribution", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.estimate_label_model"], ["", "def", "annotate", "(", "self", ",", "lm_annot_votes", ",", "lm_train_votes", "=", "None", ")", ":", "\n", "        ", "if", "lm_train_votes", "is", "not", "None", ":", "\n", "            ", "self", ".", "labelmodel", ".", "estimate_label_model", "(", "lm_train_votes", ")", "\n", "", "return", "self", ".", "labelmodel", ".", "get_label_distribution", "(", "lm_annot_votes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.get_accuracy": [[37, 39], ["test_nplm.LMTask.labelmodel.get_accuracies"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_accuracies"], ["", "def", "get_accuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labelmodel", ".", "get_accuracies", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.get_propensity": [[40, 42], ["test_nplm.LMTask.labelmodel.get_propensities"], "methods", ["None"], ["", "def", "get_propensity", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labelmodel", ".", "get_propensities", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.get_class_balance": [[43, 45], ["test_nplm.LMTask.labelmodel.get_class_balance"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_class_balance"], ["", "def", "get_class_balance", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "labelmodel", ".", "get_class_balance", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.TestPartialLabelModel.test_general_accuracy_recovery_0": [[104, 131], ["print", "numpy.array", "test_nplm.setup_test", "test_nplm.Experiment", "test_nplm.Workflow", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.close_estimation", "test_nplm.close_estimation"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation"], ["    ", "def", "test_general_accuracy_recovery_0", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Testing Accuracy Recovery Rate for PLM - 0'", ")", "\n", "true_cb_0", "=", "[", "1", "/", "3", ",", "1", "/", "3", ",", "1", "/", "3", "]", "\n", "true_acc_0", "=", "np", ".", "array", "(", "\n", "[", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".75", ",", ".65", ",", ".7", "]", ",", "\n", "[", ".8", ",", ".7", ",", ".65", "]", ",", "\n", "[", ".8", ",", ".8", ",", ".75", "]", ",", "\n", "[", ".9", ",", ".7", ",", ".8", "]", "]", ")", "\n", "label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", ",", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "2", "]", ",", "[", "1", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "3", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "4", ":", "[", "[", "1", ",", "3", "]", ",", "[", "2", "]", "]", "\n", "}", "\n", "votes", ",", "gold", "=", "setup_test", "(", "label_partition", ",", "true_acc_0", ",", "true_cb_0", ")", "\n", "test_data_0", "=", "Experiment", "(", "'acc-tests-0'", ",", "\n", "num_classes", "=", "3", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "lm_annot_votes", "=", "votes", ",", "\n", "lm_train_votes", "=", "votes", ",", "\n", "lm_annot_labels", "=", "gold", ")", "\n", "\n", "acc_0", ",", "cb_0", ",", "_", "=", "Workflow", "(", "experimental_data", "=", "test_data_0", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "acc_0", ",", "true_acc_0", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "cb_0", ",", "true_cb_0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.TestPartialLabelModel.test_general_accuracy_recovery_1": [[132, 160], ["print", "numpy.array", "test_nplm.setup_test", "test_nplm.Experiment", "test_nplm.Workflow", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.close_estimation", "test_nplm.close_estimation"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation"], ["", "def", "test_general_accuracy_recovery_1", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Testing Accuracy Recovery Rate for PLM - 1'", ")", "\n", "true_cb_1", "=", "[", ".5", ",", ".3", ",", ".2", "]", "\n", "true_acc_1", "=", "np", ".", "array", "(", "\n", "[", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".5", ",", ".9", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".9", ",", ".7", ",", ".6", "]", "]", ")", "\n", "label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "1", "]", ",", "[", "2", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "3", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "4", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", "\n", "}", "\n", "votes", ",", "gold", "=", "setup_test", "(", "label_partition", ",", "true_acc_1", ",", "true_cb_1", ")", "\n", "test_data_1", "=", "Experiment", "(", "'acc-tests-1'", ",", "\n", "num_classes", "=", "3", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "lm_annot_votes", "=", "votes", ",", "\n", "lm_train_votes", "=", "votes", ",", "\n", "lm_annot_labels", "=", "gold", ")", "\n", "\n", "acc_1", ",", "cb_1", ",", "_", "=", "Workflow", "(", "experimental_data", "=", "test_data_1", ")", "\n", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "acc_1", ",", "true_acc_1", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "cb_1", ",", "true_cb_1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.TestPartialLabelModel.test_general_accuracy_recovery_2": [[161, 191], ["print", "numpy.array", "test_nplm.setup_test", "test_nplm.Experiment", "test_nplm.Workflow", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.close_estimation", "test_nplm.close_estimation"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation"], ["", "def", "test_general_accuracy_recovery_2", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Testing Accuracy Recovery Rate for PLM - 2'", ")", "\n", "true_cb_2", "=", "[", ".4", ",", ".2", ",", ".4", "]", "\n", "true_acc_2", "=", "np", ".", "array", "(", "\n", "[", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".8", ",", ".7", "]", ",", "\n", "[", ".5", ",", ".7", ",", ".9", "]", ",", "\n", "[", ".8", ",", ".6", ",", ".7", "]", ",", "\n", "[", ".9", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".5", ",", ".6", "]", "]", ")", "\n", "label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "2", "]", ",", "[", "1", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "3", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "4", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "5", ":", "[", "[", "3", ",", "2", "]", ",", "[", "1", "]", "]", "\n", "}", "\n", "votes", ",", "gold", "=", "setup_test", "(", "label_partition", ",", "true_acc_2", ",", "true_cb_2", ")", "\n", "\n", "test_data_2", "=", "Experiment", "(", "'acc-tests-2'", ",", "\n", "num_classes", "=", "3", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "lm_annot_votes", "=", "votes", ",", "\n", "lm_train_votes", "=", "votes", ",", "\n", "lm_annot_labels", "=", "gold", ")", "\n", "\n", "acc_2", ",", "cb_2", ",", "_", "=", "Workflow", "(", "experimental_data", "=", "test_data_2", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "acc_2", ",", "true_acc_2", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "cb_2", ",", "true_cb_2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.TestPartialLabelModel.test_general_accuracy_recovery_3": [[192, 231], ["print", "numpy.array", "test_nplm.setup_test", "copy.deepcopy", "test_nplm.Experiment", "test_nplm.Workflow", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.close_estimation", "test_nplm.close_estimation", "test_nplm.close_estimation"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation"], ["", "def", "test_general_accuracy_recovery_3", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Testing Accuracy Recovery Rate for PLM - 3 with Abstention'", ")", "\n", "true_cb_3", "=", "[", ".4", ",", ".2", ",", ".4", "]", "\n", "true_acc_3", "=", "np", ".", "array", "(", "\n", "[", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".7", ",", ".7", "]", ",", "\n", "[", ".5", ",", ".7", ",", ".9", "]", ",", "\n", "[", ".8", ",", ".6", ",", ".7", "]", ",", "\n", "[", ".9", ",", ".8", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".5", ",", ".8", "]", "]", ")", "\n", "label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "2", "]", ",", "[", "1", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "3", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "4", ":", "[", "[", "1", "]", ",", "[", "2", ",", "3", "]", "]", ",", "\n", "5", ":", "[", "[", "3", ",", "2", "]", ",", "[", "1", "]", "]", "\n", "}", "\n", "\n", "abstention", "=", "[", "0.8", ",", "0.9", ",", "0.8", ",", "0.7", ",", "0.8", ",", "0.9", "]", "\n", "votes", ",", "gold", "=", "setup_test", "(", "label_partition", ",", "true_acc_3", ",", "true_cb_3", ",", "\n", "abstention", "=", "abstention", ")", "\n", "\n", "tv", "=", "dc", "(", "votes", ")", "\n", "tv", "[", "tv", "==", "-", "1", "]", "=", "100", "\n", "tv", "[", "tv", "<", "100", "]", "=", "0", "\n", "tv", "=", "tv", "/", "100", "\n", "\n", "test_data_3", "=", "Experiment", "(", "'acc-tests-2'", ",", "\n", "num_classes", "=", "3", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "lm_annot_votes", "=", "votes", ",", "\n", "lm_train_votes", "=", "votes", ",", "\n", "lm_annot_labels", "=", "gold", ")", "\n", "acc_3", ",", "cb_3", ",", "prp_3", "=", "Workflow", "(", "test_data_3", ")", "\n", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "acc_3", ",", "true_acc_3", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "cb_3", ",", "true_cb_3", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "prp_3", ",", "abstention", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.TestPartialLabelModel.test_general_accuracy_recovery_4": [[232, 271], ["print", "numpy.array", "test_nplm.setup_test", "copy.deepcopy", "numpy.mean", "test_nplm.Experiment", "test_nplm.Workflow", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.TestPartialLabelModel.assertTrue", "test_nplm.close_estimation", "test_nplm.close_estimation", "test_nplm.close_estimation"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation"], ["", "def", "test_general_accuracy_recovery_4", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Testing Accuracy Recovery Rate for PLM - 4 with Abstention'", ")", "\n", "true_cb_3", "=", "[", ".4", ",", ".2", ",", ".4", "]", "\n", "true_acc_3", "=", "np", ".", "array", "(", "\n", "[", "[", ".8", ",", ".7", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".6", ",", ".7", "]", ",", "\n", "[", ".5", ",", ".7", ",", ".9", "]", ",", "\n", "[", ".8", ",", ".6", ",", ".7", "]", ",", "\n", "[", ".9", ",", ".8", ",", ".6", "]", ",", "\n", "[", ".8", ",", ".5", ",", ".8", "]", "]", ")", "\n", "label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "2", "]", ",", "[", "1", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "1", ",", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "3", ":", "[", "[", "1", "]", ",", "[", "2", "]", ",", "[", "3", "]", "]", ",", "\n", "4", ":", "[", "[", "1", "]", ",", "[", "2", ",", "3", "]", "]", ",", "\n", "5", ":", "[", "[", "3", ",", "2", "]", ",", "[", "1", "]", "]", "\n", "}", "\n", "\n", "abstention", "=", "[", "0.8", ",", "0.9", ",", "0.8", ",", "0.7", ",", "0.8", ",", "0.9", "]", "\n", "votes", ",", "gold", "=", "setup_test", "(", "label_partition", ",", "true_acc_3", ",", "true_cb_3", ",", "\n", "abstention", "=", "abstention", ")", "\n", "\n", "tv", "=", "dc", "(", "votes", ")", "\n", "tv", "[", "tv", "==", "-", "1", "]", "=", "100", "\n", "tv", "[", "tv", "<", "100", "]", "=", "0", "\n", "tv", "=", "tv", "/", "100", "\n", "est_abst", "=", "np", ".", "mean", "(", "tv", ",", "axis", "=", "0", ")", "\n", "\n", "test_data_3", "=", "Experiment", "(", "'acc-tests-4'", ",", "\n", "num_classes", "=", "3", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "lm_annot_votes", "=", "votes", ",", "\n", "lm_train_votes", "=", "votes", ",", "\n", "lm_annot_labels", "=", "gold", ")", "\n", "acc_3", ",", "cb_3", ",", "prp_3", "=", "Workflow", "(", "test_data_3", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "acc_3", ",", "true_acc_3", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "cb_3", ",", "true_cb_3", ")", ")", "\n", "self", ".", "assertTrue", "(", "close_estimation", "(", "prp_3", ",", "abstention", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.Workflow": [[47, 59], ["test_nplm.LMTask", "test_nplm.LMTask.annotate", "output.append", "output.append", "output.append", "test_nplm.LMTask.get_accuracy", "test_nplm.LMTask.get_class_balance", "test_nplm.LMTask.get_propensity"], "function", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.annotate", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.get_accuracy", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_class_balance", "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.LMTask.get_propensity"], ["", "", "def", "Workflow", "(", "experimental_data", ")", ":", "\n", "    ", "lm_task", "=", "LMTask", "(", "'test'", ",", "num_classes", "=", "experimental_data", ".", "num_classes", ",", "\n", "label_partition", "=", "experimental_data", ".", "label_partition", ",", "\n", "device", "=", "'cuda:0'", ")", "\n", "\n", "lm_annot_soft_labels", "=", "lm_task", ".", "annotate", "(", "lm_annot_votes", "=", "experimental_data", ".", "lm_annot_votes", ",", "\n", "lm_train_votes", "=", "experimental_data", ".", "lm_train_votes", ")", "\n", "output", "=", "[", "]", "\n", "output", ".", "append", "(", "lm_task", ".", "get_accuracy", "(", ")", ")", "\n", "output", ".", "append", "(", "lm_task", ".", "get_class_balance", "(", ")", ")", "\n", "output", ".", "append", "(", "lm_task", ".", "get_propensity", "(", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup": [[61, 82], ["len", "numpy.random.randint", "test_nplm.Experiment", "numpy.random.randint"], "function", ["None"], ["", "def", "setup", "(", ")", ":", "\n", "    ", "simple_label_partition", "=", "{", "\n", "0", ":", "[", "[", "1", "]", ",", "[", "2", ",", "3", "]", "]", ",", "\n", "1", ":", "[", "[", "2", "]", ",", "[", "1", ",", "3", "]", "]", ",", "\n", "2", ":", "[", "[", "3", "]", ",", "[", "1", ",", "2", "]", "]", "\n", "}", "\n", "num_sources", "=", "len", "(", "simple_label_partition", ")", "\n", "num_classes", "=", "4", "\n", "num_annot_inst", "=", "4096", "*", "16", "\n", "\n", "labelmodel_annotation_votes", "=", "np", ".", "random", ".", "randint", "(", "2", ",", "size", "=", "(", "num_annot_inst", ",", "num_sources", ")", ")", "\n", "labelmodel_training_votes", "=", "labelmodel_annotation_votes", "\n", "labelmodel_annotation_labels", "=", "np", ".", "random", ".", "randint", "(", "num_classes", ",", "size", "=", "(", "num_annot_inst", ",", "1", ")", ")", "+", "1", "\n", "test_data", "=", "Experiment", "(", "'simple-tests'", ",", "\n", "num_classes", "=", "num_classes", ",", "\n", "label_partition", "=", "simple_label_partition", ",", "\n", "lm_annot_votes", "=", "labelmodel_annotation_votes", ",", "\n", "lm_train_votes", "=", "labelmodel_training_votes", ",", "\n", "lm_annot_labels", "=", "labelmodel_annotation_labels", ")", "\n", "\n", "return", "test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.setup_test": [[84, 88], ["test_nplm._generate_data"], "function", ["home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm._generate_data"], ["", "def", "setup_test", "(", "label_partition", ",", "accuracies", ",", "class_balance", ",", "m", "=", "4096", "*", "8", ",", "abstention", "=", "None", ")", ":", "\n", "    ", "votes", ",", "gold", "=", "_generate_data", "(", "m", ",", "label_partition", ",", "accuracies", ",", "class_balance", ",", "abstention", "=", "abstention", ")", "\n", "\n", "return", "votes", ",", "gold", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.close_estimation": [[90, 96], ["torch.allclose", "torch.Tensor", "torch.Tensor", "print"], "function", ["None"], ["", "def", "close_estimation", "(", "model_acc", ",", "true_acc", ",", "thresh", "=", "0.05", ",", "verbose", "=", "True", ")", ":", "\n", "# assert model_acc.shape == true_acc.shape", "\n", "    ", "res", "=", "torch", ".", "allclose", "(", "torch", ".", "Tensor", "(", "model_acc", ")", ",", "torch", ".", "Tensor", "(", "true_acc", ")", ",", "atol", "=", "thresh", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "res", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm.actual_cb": [[98, 101], ["numpy.unique", "sum"], "function", ["None"], ["", "def", "actual_cb", "(", "gold", ")", ":", "\n", "    ", "unique", ",", "counts", "=", "np", ".", "unique", "(", "gold", ",", "return_counts", "=", "True", ")", "\n", "return", "counts", "/", "sum", "(", "counts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.test.test_nplm._generate_data": [[273, 311], ["len", "numpy.zeros", "numpy.zeros", "range", "numpy.argmax", "range", "enumerate", "numpy.random.multinomial", "enumerate", "numpy.random.random", "numpy.random.choice", "numpy.random.choice", "correct.append", "incorrect.append", "numpy.array", "random.sample", "range", "int"], "function", ["None"], ["", "", "def", "_generate_data", "(", "m", ",", "label_partition", ",", "accuracies", ",", "class_balance", ",", "abstention", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Generate synthetic data\n\n    :param m: number of examples\n    :param n: number of sources\n    :param label_partition: feature id clustering\n    :param accuracies: n x k matrix of accuracies, where k is number of classes\n    :param class_balance: k-dim vector representing prior over classes\n    :param abstention: n-dim vector representing prob of not abstention\n    :return: m x n matrix of features, m-dim vector of gold class labels\n    \"\"\"", "\n", "n", "=", "len", "(", "label_partition", ")", "\n", "gold", "=", "np", ".", "zeros", "(", "(", "m", ",", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "votes", "=", "np", ".", "zeros", "(", "(", "m", ",", "n", ")", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "        ", "k", "=", "np", ".", "argmax", "(", "np", ".", "random", ".", "multinomial", "(", "1", ",", "class_balance", ")", ")", "\n", "gold", "[", "i", "]", "=", "k", "+", "1", "\n", "for", "j", "in", "range", "(", "n", ")", ":", "\n", "# Collects correct and incorrect clusters", "\n", "            ", "correct", "=", "[", "]", "\n", "incorrect", "=", "[", "]", "\n", "for", "cid", ",", "cluster", "in", "enumerate", "(", "label_partition", "[", "j", "]", ")", ":", "\n", "                ", "if", "k", "+", "1", "in", "cluster", ":", "\n", "                    ", "correct", ".", "append", "(", "cid", "+", "1", ")", "\n", "", "else", ":", "\n", "                    ", "incorrect", ".", "append", "(", "cid", "+", "1", ")", "\n", "", "", "if", "np", ".", "random", ".", "random", "(", ")", "<", "accuracies", "[", "j", ",", "k", "]", ":", "\n", "                ", "votes", "[", "i", ",", "j", "]", "=", "np", ".", "random", ".", "choice", "(", "correct", ")", "\n", "", "else", ":", "\n", "                ", "votes", "[", "i", ",", "j", "]", "=", "np", ".", "random", ".", "choice", "(", "incorrect", ")", "\n", "\n", "", "", "", "if", "abstention", "is", "not", "None", ":", "\n", "        ", "for", "idx", ",", "prob", "in", "enumerate", "(", "abstention", ")", ":", "\n", "            ", "votes", "[", "np", ".", "array", "(", "sample", "(", "range", "(", "m", ")", ",", "int", "(", "(", "1", "-", "prob", ")", "*", "m", ")", ")", ")", ",", "idx", "]", "=", "0", "\n", "\n", "", "", "return", "votes", ",", "gold", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.__init__": [[7, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "exec_module", "=", "None", ",", "label_maps", "=", "None", ",", "\n", "name", "=", "None", ")", ":", "\n", "# Label Map is", "\n", "# mapping from output of execution module to label groups", "\n", "# {0:[1,2,3],1:[3,4]}", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "label_maps", "=", "label_maps", "\n", "# Execution module is a function operates on single instances", "\n", "self", ".", "exec_module", "=", "exec_module", "\n", "\n", "self", ".", "true_votes", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.set_exec_module": [[19, 21], ["None"], "methods", ["None"], ["", "def", "set_exec_module", "(", "self", ",", "exec_module", ")", ":", "\n", "        ", "self", ".", "exec_module", "=", "exec_module", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.set_label_maps": [[22, 24], ["None"], "methods", ["None"], ["", "def", "set_label_maps", "(", "self", ",", "label_maps", ")", ":", "\n", "        ", "self", ".", "label_maps", "=", "label_maps", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.set_name": [[25, 27], ["None"], "methods", ["None"], ["", "def", "set_name", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.execute": [[28, 36], ["numpy.zeros", "enumerate", "NotImplementedError", "len", "text.WeakRule.exec_module"], "methods", ["None"], ["", "def", "execute", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "exec_module", "is", "None", ":", "\n", "            ", "raise", "NotImplementedError", "(", "'Exec Module Not Specified'", ")", "\n", "", "results", "=", "np", ".", "zeros", "(", "len", "(", "data", ")", ")", "\n", "for", "idx", ",", "inst", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "results", "[", "idx", "]", "=", "self", ".", "exec_module", "(", "inst", ")", "\n", "", "self", ".", "curr_results", "=", "results", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.eval": [[37, 96], ["enumerate", "numpy.unique", "numpy.mean", "enumerate", "enumerate", "ValueError", "len", "len", "ValueError", "numpy.where", "text.WeakRule.label_maps.items", "enumerate", "precision.append", "len", "len", "numpy.unique", "sorted", "range", "enumerate", "numpy.where", "len", "translated_votes[].append", "len", "numpy.where", "len", "enumerate", "class_wise_acc.append", "class_wise_acc.append", "float", "len", "numpy.array"], "methods", ["None"], ["", "def", "eval", "(", "self", ",", "true_labels", ",", "\n", "class_wise_acc", "=", "False", ")", ":", "\n", "\n", "        ", "if", "self", ".", "curr_results", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"No Results Found!\"", ")", "\n", "", "if", "len", "(", "true_labels", ")", "!=", "len", "(", "self", ".", "curr_results", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Incomparable Shape for GT\"", ")", "\n", "", "concerned_index", "=", "np", ".", "where", "(", "self", ".", "curr_results", ">=", "0", ")", "[", "0", "]", "\n", "translated_votes", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "self", ".", "curr_results", ")", ")", "]", "\n", "for", "inst_idx", ",", "label", "in", "enumerate", "(", "true_labels", ")", ":", "\n", "            ", "for", "vote", ",", "group", "in", "self", ".", "label_maps", ".", "items", "(", ")", ":", "\n", "                ", "if", "label", "in", "group", ":", "\n", "                    ", "translated_votes", "[", "inst_idx", "]", ".", "append", "(", "vote", ")", "\n", "", "", "", "truncated_translated_votes", "=", "[", "item", "for", "idx", ",", "item", "in", "enumerate", "(", "translated_votes", ")", "if", "self", ".", "curr_results", "[", "idx", "]", "!=", "-", "1", "]", "\n", "curr_votes", "=", "self", ".", "curr_results", "[", "concerned_index", "]", "\n", "self", ".", "true_votes", "=", "truncated_translated_votes", "\n", "polars", "=", "np", ".", "unique", "(", "curr_votes", ")", "\n", "precision", "=", "[", "]", "\n", "for", "g", "in", "polars", ":", "\n", "            ", "idx", "=", "np", ".", "where", "(", "curr_votes", "==", "g", ")", "[", "0", "]", "\n", "cw_acc", "=", "0", "\n", "for", "item_idx", ",", "vote", "in", "enumerate", "(", "curr_votes", "[", "idx", "]", ")", ":", "\n", "                ", "if", "vote", "in", "truncated_translated_votes", "[", "idx", "[", "item_idx", "]", "]", ":", "\n", "                    ", "cw_acc", "+=", "1", "\n", "", "", "precision", ".", "append", "(", "cw_acc", "/", "len", "(", "idx", ")", ")", "\n", "", "overall_precision", "=", "np", ".", "mean", "(", "precision", ")", "\n", "\n", "cw_acc", "=", "0", "\n", "for", "item_idx", ",", "vote", "in", "enumerate", "(", "self", ".", "curr_results", ")", ":", "\n", "            ", "if", "vote", "in", "translated_votes", "[", "item_idx", "]", ":", "\n", "                ", "cw_acc", "+=", "1", "\n", "", "", "overall_recall", "=", "cw_acc", "/", "len", "(", "self", ".", "curr_results", ")", "\n", "\n", "acc", "=", "0", "\n", "for", "item_idx", ",", "vote", "in", "enumerate", "(", "curr_votes", ")", ":", "\n", "            ", "if", "vote", "in", "truncated_translated_votes", "[", "item_idx", "]", ":", "\n", "                ", "acc", "+=", "1", "\n", "", "", "try", ":", "\n", "            ", "acc", "/=", "len", "(", "curr_votes", ")", "\n", "", "except", "ZeroDivisionError", ":", "\n", "            ", "acc", "=", "0", "\n", "\n", "", "if", "class_wise_acc", ":", "\n", "            ", "class_wise_acc", "=", "[", "]", "\n", "unique_class", "=", "np", ".", "unique", "(", "true_labels", ")", "\n", "sorted", "(", "unique_class", ")", "\n", "for", "label", "in", "unique_class", ":", "\n", "                ", "class_acc", "=", "0", "\n", "idx", "=", "np", ".", "where", "(", "np", ".", "array", "(", "true_labels", ")", "[", "concerned_index", "]", "==", "label", ")", "[", "0", "]", "\n", "if", "len", "(", "idx", ")", ">", "0", ":", "\n", "                    ", "for", "item_idx", ",", "vote", "in", "enumerate", "(", "curr_votes", "[", "idx", "]", ")", ":", "\n", "                        ", "if", "vote", "in", "truncated_translated_votes", "[", "idx", "[", "item_idx", "]", "]", ":", "\n", "                            ", "class_acc", "+=", "1", "\n", "", "", "class_wise_acc", ".", "append", "(", "class_acc", "/", "len", "(", "idx", ")", ")", "\n", "", "else", ":", "\n", "                    ", "class_wise_acc", ".", "append", "(", "float", "(", "'nan'", ")", ")", "\n", "", "", "return", "acc", ",", "overall_precision", ",", "overall_recall", ",", "class_wise_acc", "\n", "\n", "", "return", "acc", ",", "overall_precision", ",", "overall_recall", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.SpacyDepMatcherRule.__init__": [[99, 114], ["text.WeakRule.__init__", "matcher.add", "text.SpacyDepMatcherRule.__init__.matcher"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "patterns", ",", "matcher", ",", "preproc", "=", "None", ",", "label_maps", "=", "None", ")", ":", "\n", "        ", "if", "type", "(", "patterns", ")", "is", "not", "list", "and", "type", "(", "patterns", ")", "is", "dict", ":", "\n", "            ", "patterns", "=", "[", "patterns", "]", "\n", "\n", "", "def", "matcher", "(", "inst", ")", ":", "\n", "            ", "if", "preproc", "is", "not", "None", ":", "\n", "                ", "inst", "=", "preproc", "(", "inst", ")", "\n", "", "matcher", ".", "add", "(", "\"\"", ",", "patterns", ")", "\n", "match", "=", "matcher", "(", "inst", ")", "\n", "res", "=", "False", "\n", "for", "r", "in", "match", ":", "\n", "                ", "res", "=", "res", "and", "len", "(", "r", "[", "1", "]", ")", ">", "0", "\n", "", "return", "int", "(", "res", ")", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "exec_module", "=", "matcher", ",", "label_maps", "=", "label_maps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.BinaryRERules.__init__": [[117, 132], ["text.WeakRule.__init__", "type", "NotImplementedError", "int", "preproc", "re.search"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "re_pattern", ",", "preproc", "=", "None", ",", "label_maps", "=", "None", ",", "unipolar", "=", "True", ",", "name", "=", "None", ")", ":", "\n", "        ", "if", "type", "(", "re_pattern", ")", "is", "list", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"List Not Supported\"", ")", "\n", "\n", "", "def", "repm", "(", "inst", ")", ":", "\n", "            ", "if", "preproc", "is", "not", "None", ":", "\n", "                ", "inst", "=", "preproc", "(", "inst", ")", "\n", "", "res", "=", "int", "(", "re", ".", "search", "(", "re_pattern", ",", "inst", ")", "is", "not", "None", ")", "\n", "if", "unipolar", ":", "\n", "                ", "resmat", "=", "[", "-", "1", ",", "1", "]", "\n", "", "else", ":", "\n", "                ", "resmat", "=", "[", "0", ",", "1", "]", "\n", "", "return", "resmat", "[", "res", "]", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "exec_module", "=", "repm", ",", "label_maps", "=", "label_maps", ",", "name", "=", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.exec.executor": [[4, 36], ["numpy.zeros", "enumerate", "NotImplementedError", "enumerate", "print", "curr_lmap.items", "len", "len", "rule.execute", "rule.set_name", "len"], "function", ["home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.execute", "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.set_name"], ["def", "executor", "(", "rules", ",", "data", ",", "\n", "cpu_parallelism", "=", "False", ",", "\n", "one_indexed", "=", "True", ")", ":", "\n", "    ", "'''\n    :param rules: List of functions of size m\n    :param data: List of instances of size n\n    :return: votes: unit8 (n*m), fid2clusters\n    '''", "\n", "\n", "votes", "=", "np", ".", "zeros", "(", "[", "len", "(", "data", ")", ",", "len", "(", "rules", ")", "]", ")", "\n", "\n", "if", "cpu_parallelism", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"Not Yet Implemented for CPU Parallelism\"", ")", "\n", "", "else", ":", "\n", "        ", "for", "rule_idx", ",", "rule", "in", "enumerate", "(", "rules", ")", ":", "\n", "            ", "votes", "[", ":", ",", "rule_idx", "]", "=", "rule", ".", "execute", "(", "data", ")", "\n", "\n", "", "", "fid2clusters", "=", "{", "}", "\n", "for", "rule_idx", ",", "rule", "in", "enumerate", "(", "rules", ")", ":", "\n", "        ", "if", "rule", ".", "name", "is", "None", ":", "\n", "            ", "rule", ".", "set_name", "(", "'Rule {:d}'", ".", "format", "(", "rule_idx", ")", ")", "\n", "", "curr_lmap", "=", "rule", ".", "label_maps", "\n", "print", "(", "curr_lmap", ")", "\n", "curr_group", "=", "[", "0", "]", "*", "len", "(", "curr_lmap", ")", "\n", "for", "idx", ",", "group", "in", "curr_lmap", ".", "items", "(", ")", ":", "\n", "            ", "if", "one_indexed", ":", "\n", "                ", "curr_group", "[", "idx", "]", "=", "group", "\n", "", "else", ":", "\n", "                ", "curr_group", "[", "idx", "]", "=", "[", "elem", "+", "1", "for", "elem", "in", "group", "]", "\n", "", "", "fid2clusters", "[", "rule_idx", "]", "=", "curr_group", "\n", "\n", "", "return", "votes", ",", "fid2clusters", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.exec.evaluator": [[38, 63], ["enumerate", "accs.append", "ps.append", "rs.append", "print", "enumerate", "rule.eval", "cw_accs.append", "rule.eval", "print"], "function", ["home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.eval", "home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.eval"], ["", "def", "evaluator", "(", "rules", ",", "gold_labels", ",", "\n", "pprint", "=", "False", ",", "\n", "class_wise_acc", "=", "False", ",", "\n", "average", "=", "'macro'", ")", ":", "\n", "    ", "ps", "=", "[", "]", "\n", "rs", "=", "[", "]", "\n", "accs", "=", "[", "]", "\n", "cw_accs", "=", "[", "]", "\n", "\n", "for", "rule_idx", ",", "rule", "in", "enumerate", "(", "rules", ")", ":", "\n", "\n", "        ", "if", "class_wise_acc", ":", "\n", "            ", "acc", ",", "p", ",", "r", ",", "cw_acc", "=", "rule", ".", "eval", "(", "gold_labels", ",", "class_wise_acc", "=", "class_wise_acc", ",", "average", "=", "average", ")", "\n", "cw_accs", ".", "append", "(", "cw_acc", ")", "\n", "", "else", ":", "\n", "            ", "acc", ",", "p", ",", "r", "=", "rule", ".", "eval", "(", "gold_labels", ")", "\n", "", "accs", ".", "append", "(", "acc", ")", "\n", "ps", ".", "append", "(", "p", ")", "\n", "rs", ".", "append", "(", "r", ")", "\n", "\n", "", "if", "pprint", ":", "\n", "        ", "print", "(", "'Name\\tAcc\\tP\\tR'", ")", "\n", "for", "idx", ",", "acc", "in", "enumerate", "(", "accs", ")", ":", "\n", "            ", "print", "(", "rules", "[", "idx", "]", ".", "name", ",", "'\\t{:.4f}\\t{:.4f}\\t{:.4f}'", ".", "format", "(", "acc", ",", "ps", "[", "idx", "]", ",", "rs", "[", "idx", "]", ")", ")", "\n", "", "", "return", "accs", ",", "ps", ",", "rs", "\n", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.utils.regex_decision": [[3, 5], ["re.search"], "function", ["None"], ["def", "regex_decision", "(", "rep", ",", "str", ")", ":", "\n", "    ", "return", "re", ".", "search", "(", "rep", ",", "str", ")", "is", "not", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.image.ResNetFeaturesLC.__init__": [[10, 29], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "image.ResNetFeaturesLC.modules", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "isinstance", "torch.xavier_normal_", "torch.xavier_normal_", "torch.normal_", "torch.normal_"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", "=", "r101_in_dim", ",", "target_dim", "=", "2", ",", "intermediate_1", "=", "1024", ",", "intermediate_2", "=", "1024", ")", ":", "\n", "        ", "super", "(", "ResNetFeaturesLC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "target_fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_features", ",", "intermediate_1", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "num_features", "=", "intermediate_1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "intermediate_1", ",", "intermediate_2", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "num_features", "=", "intermediate_2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "intermediate_2", ",", "target_dim", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.image.ResNetFeaturesLC.forward": [[30, 32], ["image.ResNetFeaturesLC.target_fc"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "target_fc", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.image.ResNetAttr.__init__": [[35, 62], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "image.ResNetAttr.modules", "torchvision.models.resnet50", "torchvision.models.resnet101", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "isinstance", "torch.xavier_normal_", "torch.xavier_normal_", "torch.normal_", "torch.normal_"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "backbone", "=", "'r50'", ",", "\n", "pretrained", "=", "True", ",", "\n", "target_dim", "=", "2", ",", "\n", "intermediate_1", "=", "1024", ",", "\n", "intermediate_2", "=", "1024", ")", ":", "\n", "        ", "super", "(", "ResNetAttr", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "backbone_model", "=", "resnet50", "(", "pretrained", "=", "pretrained", ")", "if", "backbone", "==", "'r50'", "else", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "\n", "in_features", "=", "self", ".", "backbone_model", ".", "fc", ".", "in_features", "\n", "\n", "self", ".", "target_fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_features", ",", "intermediate_1", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "num_features", "=", "intermediate_1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "intermediate_1", ",", "intermediate_2", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "num_features", "=", "intermediate_2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "intermediate_2", ",", "target_dim", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.plf.image.ResNetAttr.forward": [[63, 65], ["image.ResNetAttr.target_fc", "image.ResNetAttr.backbone_model"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "target_fc", "(", "self", ".", "backbone_model", "(", "x", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.LabelModel.__init__": [[30, 49], ["len", "labelmodel.LabelModel.label_partition.items", "enumerate", "cluster.sort", "labelmodel.intercect", "labelmodel.union", "len", "RuntimeError", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.intercect", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.union"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "label_partition", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "label_partition", "=", "label_partition", "\n", "self", ".", "verbose", "=", "verbose", "\n", "self", ".", "num_plf", "=", "len", "(", "label_partition", ")", "\n", "\n", "for", "fid", ",", "clusters", "in", "self", ".", "label_partition", ".", "items", "(", ")", ":", "\n", "            ", "crange", "=", "clusters", "[", "0", "]", "\n", "ccover", "=", "[", "]", "\n", "for", "cluster_id", ",", "cluster", "in", "enumerate", "(", "clusters", ")", ":", "\n", "                ", "cluster", ".", "sort", "(", ")", "\n", "self", ".", "label_partition", "[", "fid", "]", "[", "cluster_id", "]", "=", "cluster", "\n", "crange", "=", "intercect", "(", "crange", ",", "cluster", ")", "\n", "ccover", "=", "union", "(", "ccover", ",", "cluster", ")", "\n", "", "if", "len", "(", "crange", ")", ">", "0", ":", "\n", "                ", "raise", "RuntimeError", "(", "'Setup Violation: No class can appear in all groups!'", ")", "\n", "", "if", "len", "(", "ccover", ")", "<", "self", ".", "num_classes", ":", "\n", "                ", "raise", "RuntimeError", "(", "\n", "'Setup Violation: Class must appear at least once! Please setup a dummy label group if necessary!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.LabelModel.get_label_distribution": [[50, 52], ["NotImplementedError"], "methods", ["None"], ["", "", "", "def", "get_label_distribution", "(", "self", ",", "votes", ",", "batch_sz", "=", "1024", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Module Not Implemented'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.__init__": [[55, 80], ["labelmodel.LabelModel.__init__", "torch.nn.Module.__init__", "torch.set_default_dtype", "labelmodel.GenerativeLM._init", "torch.cuda.is_available", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._init"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "label_partition", ",", "\n", "acc_prior", "=", "0.70", ",", "\n", "opt_cfg", "=", "None", ",", "verbose", "=", "False", ",", "\n", "opt_cb", "=", "True", ",", "device", "=", "'cuda:0'", ")", ":", "\n", "        ", "LabelModel", ".", "__init__", "(", "self", ",", "num_classes", "=", "num_classes", ",", "\n", "label_partition", "=", "label_partition", ",", "\n", "verbose", "=", "verbose", ")", "\n", "Module", ".", "__init__", "(", "self", ")", "\n", "torch", ".", "set_default_dtype", "(", "torch", ".", "float64", ")", "\n", "\n", "self", ".", "acc_prior", "=", "-", "1", "*", "np", ".", "log", "(", "1.0", "/", "acc_prior", "-", "1", ")", "/", "2", "\n", "self", ".", "opt_cb", "=", "opt_cb", "\n", "\n", "if", "opt_cfg", "is", "None", ":", "\n", "            ", "opt_cfg", "=", "defualt_lm_opt_cfg", "\n", "", "self", ".", "opt_cfg", "=", "opt_cfg", "\n", "\n", "if", "'cuda'", "in", "device", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "device", "=", "device", "\n", "", "else", ":", "\n", "            ", "self", ".", "device", "=", "'cpu'", "\n", "\n", "", "self", ".", "optimized", "=", "False", "\n", "\n", "self", ".", "_init", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._init": [[81, 83], ["NotImplementedError"], "methods", ["None"], ["", "def", "_init", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Module Not Implemented'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._cll": [[84, 86], ["NotImplementedError"], "methods", ["None"], ["", "def", "_cll", "(", "self", ",", "votes", ",", "bid", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Module Not Implemented'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._setup": [[87, 89], ["NotImplementedError"], "methods", ["None"], ["", "def", "_setup", "(", "self", ",", "votes", ",", "batch_size", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Module Not Implemented'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._norm_class_balance": [[90, 92], ["torch.logsumexp"], "methods", ["None"], ["", "def", "_norm_class_balance", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "class_balance", "-", "torch", ".", "logsumexp", "(", "self", ".", "class_balance", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._regularization": [[93, 95], ["None"], "methods", ["None"], ["", "def", "_regularization", "(", "self", ")", ":", "\n", "        ", "return", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._batchize": [[96, 108], ["numpy.arange", "numpy.random.shuffle", "torch.LongTensor", "votes[].astype", "range", "numpy.shape", "int", "numpy.ceil"], "methods", ["None"], ["", "def", "_batchize", "(", "self", ",", "votes", ",", "batch_size", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "if", "shuffle", ":", "\n", "            ", "index", "=", "np", ".", "arange", "(", "np", ".", "shape", "(", "votes", ")", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "votes", "=", "votes", "[", "index", ",", ":", "]", "\n", "\n", "", "batches", "=", "[", "\n", "torch", ".", "LongTensor", "(", "votes", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", ",", ":", "]", ".", "astype", "(", "np", ".", "int", ")", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "np", ".", "ceil", "(", "votes", ".", "shape", "[", "0", "]", "/", "batch_size", ")", ")", ")", "\n", "]", "\n", "\n", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.optimize": [[109, 187], ["labelmodel.GenerativeLM.init_random", "labelmodel.GenerativeLM._setup", "torch.optim.SGD", "torch.optim.Adam", "labelmodel.GenerativeLM.train", "range", "time.time", "print", "labelmodel.GenerativeLM.parameters", "labelmodel.GenerativeLM.parameters", "torch.optim.lr_scheduler.ReduceLROnPlateau", "copy.deepcopy", "enumerate", "torch.cuda.empty_cache", "torch.optim.lr_scheduler.CyclicLR", "tqdm.tqdm.tqdm", "torch.optim.Adam.zero_grad", "labelmodel.GenerativeLM.", "labelmodel.GenerativeLM._regularization", "loss.backward", "torch.optim.Adam.step", "epoch_loss.append", "len", "tqdm.tqdm.tqdm.set_postfix", "tqdm.tqdm.tqdm.close", "torch.sum", "print", "time.time", "list", "torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.ExponentialLR", "torch.mean", "float", "tqdm.tqdm.tqdm.set_postfix", "tqdm.tqdm.tqdm.update", "torch.abs", "torch.optim.lr_scheduler.ExponentialLR.step", "torch.optim.lr_scheduler.ExponentialLR.step", "filter", "len", "loss.item", "epoch_loss.item", "numpy.mean", "range"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.init_random", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._setup", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._regularization"], ["", "def", "optimize", "(", "self", ",", "votes", ",", "training_batch_size", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "init_random", "(", "self", ".", "opt_cfg", "[", "'seed'", "]", ")", "\n", "if", "training_batch_size", "is", "None", ":", "\n", "            ", "self", ".", "training_batch_size", "=", "self", ".", "opt_cfg", "[", "'batch_size'", "]", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "start", "=", "time", ".", "time", "(", ")", "\n", "", "batches", "=", "self", ".", "_setup", "(", "votes", "-", "1", ",", "self", ".", "training_batch_size", ",", "shuffle", "=", "True", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "'Setup: '", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "", "lr", "=", "self", ".", "opt_cfg", "[", "'lr'", "]", "\n", "momentum", "=", "self", ".", "opt_cfg", "[", "'momentum'", "]", "\n", "step_size_mult", "=", "self", ".", "opt_cfg", "[", "'step_multiplier'", "]", "\n", "step_schedule", "=", "self", ".", "opt_cfg", "[", "'step_schedule'", "]", "\n", "epochs", "=", "self", ".", "opt_cfg", "[", "'epoch'", "]", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "self", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "momentum", ",", "nesterov", "=", "False", ",", "\n", "weight_decay", "=", "0", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "self", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "0", ")", "\n", "\n", "if", "step_schedule", "==", "'p'", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "min_lr", "=", "1e-10", ",", "factor", "=", "step_size_mult", ")", "\n", "", "elif", "step_schedule", "==", "'c'", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CyclicLR", "(", "optimizer", ",", "base_lr", "=", "1e-1", ",", "max_lr", "=", "0.2", ")", "\n", "", "elif", "step_schedule", "is", "not", "None", "and", "step_size_mult", "is", "not", "None", ":", "\n", "            ", "LR_milestones", "=", "list", "(", "\n", "filter", "(", "\n", "lambda", "a", ":", "a", ">", "0", ",", "\n", "[", "i", "if", "(", "i", "%", "step_schedule", "==", "0", ")", "else", "-", "1", "for", "i", "in", "range", "(", "epochs", ")", "]", "\n", ")", ")", "\n", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "\n", "optimizer", ",", "LR_milestones", ",", "gamma", "=", "step_size_mult", ")", "\n", "", "else", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ExponentialLR", "(", "optimizer", ",", "\n", "gamma", "=", "0.1", ",", "\n", "last_epoch", "=", "-", "1", ")", "\n", "\n", "", "self", ".", "train", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "ga", "=", "dc", "(", "self", ".", "accuracy", ")", "\n", "running_loss", "=", "0.0", "\n", "if", "self", ".", "verbose", ":", "\n", "                ", "progress", "=", "tqdm", "(", "total", "=", "len", "(", "batches", ")", ",", "desc", "=", "'epoch % 3d'", "%", "(", "epoch", "+", "1", ")", ")", "\n", "", "epoch_loss", "=", "[", "]", "\n", "for", "i_batch", ",", "inputs", "in", "enumerate", "(", "batches", ")", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "log_likelihood", "=", "self", "(", "inputs", ",", "i_batch", ")", "\n", "loss", "=", "-", "1", "*", "torch", ".", "mean", "(", "log_likelihood", ")", "\n", "loss", "+=", "self", ".", "_regularization", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "running_loss", "+=", "loss", "\n", "epoch_loss", ".", "append", "(", "float", "(", "loss", ".", "item", "(", ")", ")", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "progress", ".", "set_postfix", "(", "{", "'Train Loss: '", ":", "np", ".", "mean", "(", "epoch_loss", "[", "-", "3", ":", "]", ")", "}", ")", "\n", "progress", ".", "update", "(", ")", "\n", "", "", "epoch_loss", "=", "running_loss", "/", "len", "(", "batches", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "                ", "progress", ".", "set_postfix", "(", "{", "'Epoch Loss: '", ":", "epoch_loss", ".", "item", "(", ")", "}", ")", "\n", "progress", ".", "close", "(", ")", "\n", "", "if", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "self", ".", "accuracy", "-", "ga", ")", ")", "<", "1e-7", ":", "\n", "                ", "print", "(", "'1e-7 Criterion Reached: Epoch '", ",", "epoch", ")", "\n", "break", "\n", "", "if", "scheduler", "is", "not", "None", ":", "\n", "                ", "if", "step_schedule", "==", "'p'", ":", "\n", "                    ", "scheduler", ".", "step", "(", "epoch_loss", ")", "\n", "", "else", ":", "\n", "                    ", "scheduler", ".", "step", "(", ")", "\n", "", "", "", "if", "'cuda'", "in", "self", ".", "device", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "self", ".", "optimized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.forward": [[188, 192], ["labelmodel.GenerativeLM._norm_class_balance", "labelmodel.GenerativeLM._cll", "torch.logsumexp"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._norm_class_balance", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._cll"], ["", "def", "forward", "(", "self", ",", "votes", ",", "bid", ")", ":", "\n", "        ", "class_prior", "=", "self", ".", "_norm_class_balance", "(", ")", "\n", "conditional_ll", "=", "self", ".", "_cll", "(", "votes", ",", "bid", ")", "\n", "return", "torch", ".", "logsumexp", "(", "class_prior", "+", "conditional_ll", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_label_distribution": [[193, 220], ["labelmodel.GenerativeLM.eval", "labelmodel.GenerativeLM._setup", "numpy.ndarray", "enumerate", "warnings.warn", "time.time", "print", "time.time", "labelmodel.GenerativeLM._norm_class_balance", "labelmodel.GenerativeLM._cll", "torch.exp", "torch.sum().unsqueeze().repeat", "torch.exp.detach().cpu().numpy", "print", "torch.cuda.empty_cache", "time.time", "[].unsqueeze().repeat", "torch.sum().unsqueeze", "torch.exp.detach().cpu", "time.time", "[].unsqueeze", "torch.sum", "torch.exp.detach", "torch.max"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.plf.text.WeakRule.eval", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._setup", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._norm_class_balance", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._cll"], ["", "def", "get_label_distribution", "(", "self", ",", "votes", ",", "annot_batch_sz", "=", "2048", ")", ":", "\n", "        ", "if", "not", "self", ".", "optimized", ":", "\n", "            ", "warnings", ".", "warn", "(", "\"Warning: Label Model not trained!\"", ")", "\n", "return", "None", "\n", "", "self", ".", "eval", "(", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "start", "=", "time", ".", "time", "(", ")", "\n", "", "batches", "=", "self", ".", "_setup", "(", "votes", ",", "annot_batch_sz", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "'Setup: '", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "", "labels", "=", "np", ".", "ndarray", "(", "(", "votes", ".", "shape", "[", "0", "]", ",", "self", ".", "num_classes", ")", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "start", "=", "time", ".", "time", "(", ")", "\n", "", "for", "batch_id", ",", "batch_votes", "in", "enumerate", "(", "batches", ")", ":", "\n", "            ", "class_balance", "=", "self", ".", "_norm_class_balance", "(", ")", "\n", "lf_likelihood", "=", "self", ".", "_cll", "(", "batch_votes", ",", "batch_id", ")", "\n", "jll", "=", "class_balance", "+", "lf_likelihood", "\n", "P", "=", "torch", ".", "exp", "(", "jll", "-", "torch", ".", "max", "(", "jll", ",", "dim", "=", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", ")", "\n", "P", "/=", "torch", ".", "sum", "(", "P", ",", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "num_classes", ")", "\n", "labels", "[", "\n", "batch_id", "*", "annot_batch_sz", ":", "batch_id", "*", "annot_batch_sz", "+", "batch_votes", ".", "shape", "[", "0", "]", "]", "=", "P", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "'Parallel Estimation: '", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "", "if", "'cuda'", "in", "self", ".", "device", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.reload_label_partition": [[221, 224], ["None"], "methods", ["None"], ["", "def", "reload_label_partition", "(", "self", ",", "label_partition", ",", "oldnewfid_map", ")", ":", "\n", "# TODO: Update Internal Configurations", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_accuracies": [[225, 228], ["labelmodel.GenerativeLM.accuracy.detach().cpu().numpy", "numpy.exp", "labelmodel.GenerativeLM.accuracy.detach().cpu", "numpy.exp", "numpy.exp", "labelmodel.GenerativeLM.accuracy.detach"], "methods", ["None"], ["", "def", "get_accuracies", "(", "self", ")", ":", "\n", "        ", "acc", "=", "self", ".", "accuracy", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "np", ".", "exp", "(", "acc", ")", "/", "(", "np", ".", "exp", "(", "acc", ")", "+", "np", ".", "exp", "(", "-", "1", "*", "acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.get_class_balance": [[229, 231], ["numpy.exp", "labelmodel.GenerativeLM._norm_class_balance().detach().cpu().numpy", "labelmodel.GenerativeLM._norm_class_balance().detach().cpu", "labelmodel.GenerativeLM._norm_class_balance().detach", "labelmodel.GenerativeLM._norm_class_balance"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM._norm_class_balance"], ["", "def", "get_class_balance", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "self", ".", "_norm_class_balance", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.init_random": [[232, 239], ["random.seed", "torch.manual_seed", "numpy.random.seed", "torch.cuda.is_available", "torch.cuda.manual_seed_all"], "methods", ["None"], ["", "def", "init_random", "(", "self", ",", "seed", ")", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "'cuda'", "in", "self", ".", "device", ":", "\n", "            ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.GenerativeLM.weak_label": [[240, 242], ["labelmodel.GenerativeLM.get_label_distribution"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.get_label_distribution"], ["", "", "def", "weak_label", "(", "self", ",", "votes", ",", "batch_sz", "=", "2048", ")", ":", "\n", "        ", "return", "self", ".", "get_label_distribution", "(", "votes", "-", "1", ",", "annot_batch_sz", "=", "batch_sz", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.intercect": [[21, 23], ["None"], "function", ["None"], ["def", "intercect", "(", "l1", ",", "l2", ")", ":", "\n", "    ", "return", "[", "value", "for", "value", "in", "l1", "if", "value", "in", "l2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.labelmodel.union": [[25, 27], ["list", "set", "set"], "function", ["None"], ["", "def", "union", "(", "l1", ",", "l2", ")", ":", "\n", "    ", "return", "list", "(", "set", "(", "l1", ")", "|", "set", "(", "l2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.lm_utils.translate_label_partitions_to_lid2fid": [[4, 18], ["len", "range", "fid2clusters.items", "enumerate"], "function", ["None"], ["def", "translate_label_partitions_to_lid2fid", "(", "fid2clusters", ",", "num_classes", ")", ":", "\n", "    ", "lid2fid", "=", "{", "}", "\n", "feature_len", "=", "len", "(", "fid2clusters", ")", "\n", "\n", "for", "lid", "in", "range", "(", "num_classes", ")", ":", "\n", "        ", "lid2fid", "[", "lid", "]", "=", "[", "0", "]", "*", "feature_len", "\n", "\n", "# If out of bounds exception, problem with lid > range(num_classes)!", "\n", "", "for", "fid", ",", "clusters", "in", "fid2clusters", ".", "items", "(", ")", ":", "\n", "        ", "for", "cluster_id", ",", "cluster", "in", "enumerate", "(", "clusters", ")", ":", "\n", "            ", "for", "lid", "in", "cluster", ":", "\n", "                ", "lid2fid", "[", "lid", "-", "1", "]", "[", "fid", "]", "=", "cluster_id", "\n", "\n", "", "", "", "return", "lid2fid", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.lm_utils.isnotin": [[20, 22], ["torch.DoubleTensor"], "function", ["None"], ["", "def", "isnotin", "(", "ar1", ",", "ar2", ")", ":", "\n", "    ", "return", "torch", ".", "DoubleTensor", "(", "~", "(", "ar1", "[", "...", ",", "None", "]", "==", "ar2", ")", ".", "any", "(", "-", "1", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__": [[14, 27], ["labelmodel.LabelModel.__init__", "lm_utils.translate_label_partitions_to_lid2fid", "multiprocessing.cpu_count"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.__init__", "home.repos.pwc.inspect_result.batsresearch_nplm.lm.lm_utils.translate_label_partitions_to_lid2fid"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "label_partitions", ",", "offset", "=", "0", ",", "metric", "=", "'hamming'", ",", "\n", "verbose", "=", "False", ",", "cpu_parallelism", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "num_classes", ",", "label_partitions", ",", "verbose", ")", "\n", "self", ".", "class_feature_map", "=", "translate_label_partitions_to_lid2fid", "(", "label_partitions", ",", "num_classes", ")", "\n", "self", ".", "offset", "=", "offset", "\n", "self", ".", "cpu_parallelism", "=", "cpu_parallelism", "and", "(", "multiprocessing", ".", "cpu_count", "(", ")", ">", "3", ")", "\n", "\n", "if", "metric", "==", "'euclidean'", ":", "\n", "            ", "self", ".", "metric", "=", "euclidean", "\n", "", "elif", "metric", "==", "'cosine'", ":", "\n", "            ", "self", ".", "metric", "=", "cosine", "\n", "", "else", ":", "\n", "            ", "self", ".", "metric", "=", "hamming", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.weak_label": [[28, 30], ["distance.DistanceLM.get_label_distribution"], "methods", ["home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.get_label_distribution"], ["", "", "def", "weak_label", "(", "self", ",", "instances", ")", ":", "\n", "        ", "return", "self", ".", "get_label_distribution", "(", "instances", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.estimate_label_model": [[31, 33], ["None"], "methods", ["None"], ["", "def", "estimate_label_model", "(", "self", ",", "votes", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.optimize": [[34, 36], ["None"], "methods", ["None"], ["", "def", "optimize", "(", "self", ",", "training", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.batsresearch_nplm.lm.distance.DistanceLM.get_label_distribution": [[37, 94], ["numpy.empty", "numpy.zeros", "len", "time.time", "threading.enumerate", "multiprocessing.cpu_count", "numpy.array_split", "enumerate", "tqdm.tqdm.tqdm", "enumerate", "print", "len", "numpy.empty", "enumerate", "threading.Thread", "threading.Thread.start", "threading.enumerate", "distance.DistanceLM.class_feature_map.items", "len", "len", "list", "distance.DistanceLM.class_feature_map.items", "threading.Thread.join", "distance.DistanceLM.metric", "numpy.arange", "time.time", "distance.DistanceLM.class_feature_map.values", "distance.DistanceLM.metric", "len", "len"], "methods", ["None"], ["", "def", "get_label_distribution", "(", "self", ",", "instances", ",", "batch_size", "=", "None", ")", ":", "\n", "\n", "        ", "instances", "+=", "self", ".", "offset", "\n", "\n", "est_labels", "=", "np", ".", "empty", "(", "[", "len", "(", "instances", ")", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "default_dist", "=", "len", "(", "list", "(", "self", ".", "class_feature_map", ".", "values", "(", ")", ")", "[", "0", "]", ")", "+", "1", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "start", "=", "time", ".", "time", "(", ")", "\n", "", "if", "self", ".", "cpu_parallelism", ":", "\n", "            ", "def", "batch_decision", "(", "data_batch", ",", "\n", "start_idx", ",", "\n", "batch_sz", ")", ":", "\n", "                ", "curr_batch_result", "=", "np", ".", "empty", "(", "[", "batch_sz", "]", ")", "\n", "for", "data_id", ",", "data", "in", "enumerate", "(", "data_batch", ")", ":", "\n", "                    ", "min_dist", "=", "default_dist", "\n", "curr_label", "=", "-", "1", "\n", "for", "class_id", ",", "features", "in", "self", ".", "class_feature_map", ".", "items", "(", ")", ":", "\n", "                        ", "incorrectness", "=", "self", ".", "metric", "(", "features", ",", "data", ")", "\n", "if", "incorrectness", "<", "min_dist", ":", "\n", "                            ", "min_dist", "=", "incorrectness", "\n", "curr_label", "=", "class_id", "\n", "", "", "curr_batch_result", "[", "data_id", "]", "=", "curr_label", "\n", "", "est_labels", "[", "start_idx", ":", "start_idx", "+", "batch_sz", "]", "=", "curr_batch_result", "\n", "\n", "", "running_threads", "=", "threading", ".", "enumerate", "(", ")", "\n", "thread_num", "=", "multiprocessing", ".", "cpu_count", "(", ")", "\n", "data_batches", "=", "np", ".", "array_split", "(", "instances", ",", "thread_num", ")", "\n", "for", "batch_id", ",", "batch", "in", "enumerate", "(", "data_batches", ")", ":", "\n", "                ", "t", "=", "threading", ".", "Thread", "(", "target", "=", "batch_decision", ",", "\n", "args", "=", "(", "batch", ",", "\n", "batch_id", "*", "len", "(", "batch", ")", ",", "\n", "len", "(", "batch", ")", ",", ")", ")", "\n", "t", ".", "start", "(", ")", "\n", "\n", "", "for", "t", "in", "tqdm", "(", "threading", ".", "enumerate", "(", ")", ")", ":", "\n", "                ", "if", "t", "not", "in", "running_threads", ":", "\n", "                    ", "t", ".", "join", "(", ")", "\n", "\n", "", "", "", "else", ":", "\n", "            ", "for", "data_id", ",", "data", "in", "enumerate", "(", "instances", ")", ":", "\n", "                ", "min_dist", "=", "default_dist", "\n", "curr_label", "=", "-", "1", "\n", "for", "class_id", ",", "features", "in", "self", ".", "class_feature_map", ".", "items", "(", ")", ":", "\n", "                    ", "correctness", "=", "self", ".", "metric", "(", "features", ",", "data", ")", "\n", "if", "correctness", "<", "min_dist", ":", "\n", "                        ", "min_dist", "=", "correctness", "\n", "curr_label", "=", "class_id", "\n", "", "", "est_labels", "[", "data_id", "]", "=", "curr_label", "\n", "\n", "", "", "label_dist", "=", "np", ".", "zeros", "(", "[", "len", "(", "instances", ")", ",", "len", "(", "self", ".", "class_feature_map", ")", "]", ")", "\n", "label_dist", "[", "np", ".", "arange", "(", "est_labels", ".", "size", ")", ",", "est_labels", "]", "=", "1", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "'Total Time: '", ",", "time", ".", "time", "(", ")", "-", "start", ")", "\n", "\n", "", "return", "label_dist", "\n", "", "", ""]]}