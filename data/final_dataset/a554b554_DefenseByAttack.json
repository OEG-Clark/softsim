{"home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.Loss_flow.__init__": [[52, 66], ["numpy.array", "torch.Module.__init__", "range", "numpy.array", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "range", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "numpy.zeros", "numpy.array.append", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "neighbours", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", ")", ")", ":", "\n", "        ", "super", "(", "Loss_flow", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "filters", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "neighbours", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "neighbours", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "neighbours", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "filter", "=", "np", ".", "zeros", "(", "(", "1", ",", "neighbours", ".", "shape", "[", "0", "]", ",", "neighbours", ".", "shape", "[", "1", "]", ")", ")", "\n", "filter", "[", "0", "]", "[", "i", "]", "[", "j", "]", "=", "-", "1", "\n", "filter", "[", "0", "]", "[", "neighbours", ".", "shape", "[", "0", "]", "//", "2", "]", "[", "neighbours", ".", "shape", "[", "1", "]", "//", "2", "]", "=", "1", "\n", "filters", ".", "append", "(", "filter", ")", "\n", "\n", "", "", "", "filters", "=", "np", ".", "array", "(", "filters", ")", "\n", "self", ".", "filters", "=", "torch", ".", "from_numpy", "(", "filters", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.Loss_flow.forward": [[67, 85], ["f[].unsqueeze", "f[].unsqueeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f", ")", ":", "\n", "# TODO: padding", "\n", "        ", "'''\n        f - f.size() =  [1, h, w, 2]\n            f[0, :, :, 0] - u channel\n            f[0, :, :, 1] - v channel\n        '''", "\n", "f_u", "=", "f", "[", ":", ",", ":", ",", ":", ",", "0", "]", ".", "unsqueeze", "(", "1", ")", "\n", "f_v", "=", "f", "[", ":", ",", ":", ",", ":", ",", "1", "]", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "diff_u", "=", "F", ".", "conv2d", "(", "f_u", ",", "self", ".", "filters", ")", "[", "0", "]", "[", "0", "]", "# don't use squeeze", "\n", "diff_u_sq", "=", "torch", ".", "mul", "(", "diff_u", ",", "diff_u", ")", "\n", "\n", "diff_v", "=", "F", ".", "conv2d", "(", "f_v", ",", "self", ".", "filters", ")", "[", "0", "]", "[", "0", "]", "# don't use squeeze", "\n", "diff_v_sq", "=", "torch", ".", "mul", "(", "diff_v", ",", "diff_v", ")", "\n", "\n", "dist", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "diff_u_sq", ",", "dim", "=", "0", ")", "+", "torch", ".", "sum", "(", "diff_v_sq", ",", "dim", "=", "0", ")", ")", "\n", "return", "torch", ".", "sum", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.stn": [[8, 12], ["torch.affine_grid", "torch.grid_sample", "F.grid_sample.size"], "function", ["None"], ["def", "stn", "(", "aff", ",", "x", ")", ":", "\n", "    ", "grid", "=", "F", ".", "affine_grid", "(", "aff", ",", "x", ".", "size", "(", ")", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "x", ",", "grid", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.para2aff": [[13, 16], ["torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "para2aff", "(", "theta", ",", "dx", ",", "dy", ")", ":", "\n", "    ", "aff", "=", "torch", ".", "tensor", "(", "[", "[", "np", ".", "cos", "(", "theta", ")", ",", "np", ".", "sin", "(", "theta", ")", ",", "dx", "]", ",", "[", "-", "np", ".", "sin", "(", "theta", ")", ",", "np", ".", "cos", "(", "theta", ")", ",", "dy", "]", "]", ")", ".", "float", "(", ")", "\n", "return", "aff", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.para2aff2": [[17, 26], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.cos", "torch.cos", "torch.cos", "len", "torch.sin", "torch.sin", "torch.sin"], "function", ["None"], ["", "def", "para2aff2", "(", "thetas", ",", "dxs", ",", "dys", ")", ":", "\n", "    ", "aff", "=", "torch", ".", "zeros", "(", "len", "(", "thetas", ")", ",", "2", ",", "3", ")", "\n", "aff", "[", ":", ",", "0", ",", "0", "]", "=", "torch", ".", "cos", "(", "thetas", ")", "\n", "aff", "[", ":", ",", "0", ",", "1", "]", "=", "torch", ".", "sin", "(", "thetas", ")", "\n", "aff", "[", ":", ",", "0", ",", "2", "]", "=", "dxs", "\n", "aff", "[", ":", ",", "1", ",", "0", "]", "=", "-", "torch", ".", "sin", "(", "thetas", ")", "\n", "aff", "[", ":", ",", "1", ",", "1", "]", "=", "torch", ".", "cos", "(", "thetas", ")", "\n", "aff", "[", ":", ",", "1", ",", "2", "]", "=", "dys", "\n", "return", "aff", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.gen_rand_aff": [[27, 32], ["stn.para2aff2", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.para2aff2"], ["", "def", "gen_rand_aff", "(", "max_theta", ",", "max_d", ",", "n", ")", ":", "\n", "    ", "thetas", "=", "2", "*", "max_theta", "*", "(", "torch", ".", "rand", "(", "n", ")", "-", "0.5", ")", "\n", "dxs", "=", "2", "*", "max_d", "*", "(", "torch", ".", "rand", "(", "n", ")", "-", "0.5", ")", "\n", "dys", "=", "2", "*", "max_d", "*", "(", "torch", ".", "rand", "(", "n", ")", "-", "0.5", ")", "\n", "return", "para2aff2", "(", "thetas", ",", "dxs", ",", "dys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.CWLoss": [[35, 49], ["torch.ones().type().fill_", "torch.ones().type().fill_", "torch.ones().type().fill_", "torch.sum", "torch.sum", "torch.sum", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.sum", "torch.sum", "torch.sum", "torch.eye().type", "torch.eye().type", "torch.eye().type", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.ones().type", "torch.ones().type", "torch.ones().type", "logits.type", "torch.ones().type().fill_.long", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "logits.type", "torch.eye", "torch.eye", "torch.eye", "torch.ones", "torch.ones", "torch.ones", "logits.size"], "function", ["None"], ["", "def", "CWLoss", "(", "logits", ",", "target", ",", "kappa", "=", "0", ")", ":", "\n", "# inputs to the softmax function are called logits.", "\n", "# https://arxiv.org/pdf/1608.04644.pdf", "\n", "    ", "target", "=", "torch", ".", "ones", "(", "logits", ".", "size", "(", "0", ")", ")", ".", "type", "(", "logits", ".", "type", "(", ")", ")", ".", "fill_", "(", "target", ")", "\n", "target_one_hot", "=", "torch", ".", "eye", "(", "10", ")", ".", "type", "(", "logits", ".", "type", "(", ")", ")", "[", "target", ".", "long", "(", ")", "]", "\n", "\n", "# workaround here.", "\n", "# subtract large value from target class to find other max value", "\n", "# https://github.com/carlini/nn_robust_attacks/blob/master/l2_attack.py", "\n", "real", "=", "torch", ".", "sum", "(", "target_one_hot", "*", "logits", ",", "1", ")", "\n", "other", "=", "torch", ".", "max", "(", "(", "1", "-", "target_one_hot", ")", "*", "logits", "-", "(", "target_one_hot", "*", "10000", ")", ",", "1", ")", "[", "0", "]", "\n", "kappa", "=", "torch", ".", "zeros_like", "(", "other", ")", ".", "fill_", "(", "kappa", ")", "\n", "\n", "return", "torch", ".", "sum", "(", "torch", ".", "max", "(", "other", "-", "real", ",", "kappa", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.attack_stadv": [[87, 124], ["torch.tensor().unsqueeze().float", "torch.tensor().unsqueeze().float", "torch.tensor().unsqueeze().float", "theta.repeat.repeat", "torch.affine_grid().to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "grid_new.clamp.clamp", "torch.grid_sample", "stn.Loss_flow", "torch.CrossEntropyLoss", "model", "range", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "model.max", "torch.optim.LBFGS.zero_grad", "model", "print", "loss.backward", "torch.optim.LBFGS.step", "print", "grid_new.clamp.clamp", "torch.grid_sample", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor().unsqueeze", "torch.affine_grid", "torch.optim.LBFGS", "torch.optim.LBFGS", "torch.optim.LBFGS", "X.size", "nn.CrossEntropyLoss.", "Loss_flow.", "torch.tensor", "torch.tensor", "torch.tensor", "torch.CrossEntropyLoss", "model.max"], "function", ["None"], ["", "", "def", "attack_stadv", "(", "model", ",", "X", ",", "opt", "=", "'sgd'", ",", "lr", "=", "0.005", ",", "tau", "=", "10", ",", "iters", "=", "20", ")", ":", "\n", "    ", "theta", "=", "torch", ".", "tensor", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "1", ",", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", "# identity transformation", "\n", "theta", "=", "theta", ".", "repeat", "(", "X", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ")", "\n", "grid", "=", "F", ".", "affine_grid", "(", "theta", ",", "X", ".", "size", "(", ")", ")", ".", "to", "(", "X", ".", "device", ")", "# flow = 0. This is base grid", "\n", "f", "=", "torch", ".", "zeros_like", "(", "grid", ",", "requires_grad", "=", "True", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "f", ",", "mean", "=", "0", ",", "std", "=", "0.01", ")", "\n", "grid_new", "=", "grid", "+", "f", "\n", "grid_new", "=", "grid_new", ".", "clamp", "(", "min", "=", "-", "1", ",", "max", "=", "1", ")", "\n", "X_new", "=", "F", ".", "grid_sample", "(", "X", ",", "grid_new", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "if", "opt", "==", "'sgd'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "f", ",", "]", ",", "lr", "=", "lr", ")", "\n", "", "elif", "opt", "==", "'lbfgs'", ":", "\n", "        ", "optimizer", "=", "optimizer", "=", "torch", ".", "optim", ".", "LBFGS", "(", "[", "f", ",", "]", ",", "lr", "=", "lr", ")", "\n", "\n", "", "loss_flow", "=", "Loss_flow", "(", "device", "=", "X", ".", "device", ")", "\n", "loss_adv", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "yp0", "=", "model", "(", "X", ")", "\n", "y0", "=", "yp0", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "for", "i", "in", "range", "(", "iters", ")", ":", "\n", "        ", "optimizer", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "X_new", ")", "\n", "print", "(", "(", "logits", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y0", ")", ".", "sum", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "loss", "=", "-", "loss_adv", "(", "logits", ",", "y0", ")", "+", "tau", "*", "loss_flow", "(", "f", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "logits", ",", "y0", ")", ".", "item", "(", ")", ")", "\n", "\n", "# update variables and predict on adversarial image", "\n", "grid_new", "=", "grid", "+", "f", "\n", "grid_new", "=", "grid_new", ".", "clamp", "(", "min", "=", "-", "1", ",", "max", "=", "1", ")", "\n", "X_new", "=", "F", ".", "grid_sample", "(", "X", ",", "grid_new", ",", "mode", "=", "'bilinear'", ")", "\n", "\n", "", "return", "X_new", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Flatten.forward": [[13, 15], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SparsifyBase.__init__": [[18, 23], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "SparsifyBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "self", ".", "preact", "=", "None", "\n", "self", ".", "act", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SparsifyBase.get_activation": [[24, 29], ["input[].cpu().detach().clone", "output.cpu().detach().clone", "input[].cpu().detach", "output.cpu().detach", "input[].cpu", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "preact", "=", "input", "[", "0", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "self", ".", "act", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SparsifyBase.record_activation": [[30, 32], ["models.SparsifyBase.register_forward_hook", "models.SparsifyBase.get_activation"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "record_activation", "(", "self", ")", ":", "\n", "        ", "self", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify1D.__init__": [[35, 38], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Sparsify1D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify1D.forward": [[39, 45], ["int", "topval.expand().permute.expand().permute.expand().permute", "x.topk", "topval.expand().permute.expand().permute.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "k", "=", "int", "(", "self", ".", "sr", "*", "x", ".", "shape", "[", "1", "]", ")", "\n", "topval", "=", "x", ".", "topk", "(", "k", ",", "dim", "=", "1", ")", "[", "0", "]", "[", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "expand", "(", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "0", "]", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "comp", "=", "(", "x", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify1D_kactive.__init__": [[47, 50], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "1", ")", ":", "\n", "        ", "super", "(", "Sparsify1D_kactive", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify1D_kactive.forward": [[51, 57], ["topval.expand().permute.expand().permute.expand().permute", "x.topk", "topval.expand().permute.expand().permute.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "k", "=", "self", ".", "k", "\n", "topval", "=", "x", ".", "topk", "(", "k", ",", "dim", "=", "1", ")", "[", "0", "]", "[", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "expand", "(", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "0", "]", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "comp", "=", "(", "x", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D.__init__": [[60, 66], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Sparsify2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "\n", "self", ".", "preact", "=", "None", "\n", "self", ".", "act", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D.forward": [[67, 75], ["int", "x.view", "topval.expand().permute.expand().permute.expand().permute", "x.view.topk", "topval.expand().permute.expand().permute.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer_size", "=", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", "\n", "k", "=", "int", "(", "self", ".", "sr", "*", "layer_size", ")", "\n", "tmpx", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "topval", "=", "tmpx", ".", "topk", "(", "k", ",", "dim", "=", "2", ")", "[", "0", "]", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "expand", "(", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ",", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "comp", "=", "(", "x", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_vol.__init__": [[79, 82], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Sparsify2D_vol", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_vol.forward": [[84, 93], ["int", "x.view", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat().permute().view_as", "x.view.topk", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat().permute", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "shape", "[", "1", "]", "*", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", "\n", "k", "=", "int", "(", "self", ".", "sr", "*", "size", ")", "\n", "\n", "tmpx", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "topval", "=", "tmpx", ".", "topk", "(", "k", ",", "dim", "=", "1", ")", "[", "0", "]", "[", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "repeat", "(", "tmpx", ".", "shape", "[", "1", "]", ",", "1", ")", ".", "permute", "(", "1", ",", "0", ")", ".", "view_as", "(", "x", ")", "\n", "comp", "=", "(", "x", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_kactive.__init__": [[96, 99], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "k", ")", ":", "\n", "        ", "super", "(", "Sparsify2D_vol", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_kactive.forward": [[101, 108], ["x.view", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat().permute().view_as", "x.view.topk", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat().permute", "topval.repeat().permute().view_as.repeat().permute().view_as.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "k", "=", "self", ".", "k", "\n", "tmpx", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "topval", "=", "tmpx", ".", "topk", "(", "k", ",", "dim", "=", "1", ")", "[", "0", "]", "[", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "repeat", "(", "tmpx", ".", "shape", "[", "1", "]", ",", "1", ")", ".", "permute", "(", "1", ",", "0", ")", ".", "view_as", "(", "x", ")", "\n", "comp", "=", "(", "x", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_abs.__init__": [[110, 113], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Sparsify2D_abs", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_abs.forward": [[115, 124], ["int", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs.view", "torch.abs.view", "torch.abs.view", "torch.abs.view", "topval.expand().permute.expand().permute.expand().permute", "torch.abs.view.topk", "topval.expand().permute.expand().permute.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer_size", "=", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", "\n", "k", "=", "int", "(", "self", ".", "sr", "*", "layer_size", ")", "\n", "absx", "=", "torch", ".", "abs", "(", "x", ")", "\n", "tmpx", "=", "absx", ".", "view", "(", "absx", ".", "shape", "[", "0", "]", ",", "absx", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "topval", "=", "tmpx", ".", "topk", "(", "k", ",", "dim", "=", "2", ")", "[", "0", "]", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "expand", "(", "absx", ".", "shape", "[", "2", "]", ",", "absx", ".", "shape", "[", "3", "]", ",", "absx", ".", "shape", "[", "0", "]", ",", "absx", ".", "shape", "[", "1", "]", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "comp", "=", "(", "absx", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_invabs.__init__": [[126, 129], ["models.SparsifyBase.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Sparsify2D_invabs", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sr", "=", "sparse_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.Sparsify2D_invabs.forward": [[131, 140], ["int", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs.view", "torch.abs.view", "torch.abs.view", "torch.abs.view", "topval.expand().permute.expand().permute.expand().permute", "torch.abs.view.topk", "topval.expand().permute.expand().permute.expand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer_size", "=", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", "\n", "k", "=", "int", "(", "self", ".", "sr", "*", "layer_size", ")", "\n", "absx", "=", "torch", ".", "abs", "(", "x", ")", "\n", "tmpx", "=", "absx", ".", "view", "(", "absx", ".", "shape", "[", "0", "]", ",", "absx", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "topval", "=", "tmpx", ".", "topk", "(", "k", ",", "dim", "=", "2", ",", "largest", "=", "False", ")", "[", "0", "]", "[", ":", ",", ":", ",", "-", "1", "]", "\n", "topval", "=", "topval", ".", "expand", "(", "absx", ".", "shape", "[", "2", "]", ",", "absx", ".", "shape", "[", "3", "]", ",", "absx", ".", "shape", "[", "0", "]", ",", "absx", ".", "shape", "[", "1", "]", ")", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "comp", "=", "(", "absx", ">=", "topval", ")", ".", "to", "(", "x", ")", "\n", "return", "comp", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.breakReLU.__init__": [[143, 147], ["torch.Module.__init__", "torch.Threshold", "torch.Threshold", "torch.Threshold", "torch.Threshold"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparse_ratio", "=", "5", ")", ":", "\n", "        ", "super", "(", "breakReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "h", "=", "sparse_ratio", "\n", "self", ".", "thre", "=", "nn", ".", "Threshold", "(", "0", ",", "-", "self", ".", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.breakReLU.forward": [[148, 150], ["models.breakReLU.thre"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "thre", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SmallCNN.__init__": [[152, 162], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "models.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fc_in", "=", "3136", ",", "n_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "SmallCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "module_list", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "fc_in", ",", "100", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "100", ",", "n_classes", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SmallCNN.forward": [[163, 167], ["range", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "module_list", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "module_list", "[", "i", "]", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SmallCNN.forward_to": [[168, 172], ["range"], "methods", ["None"], ["", "def", "forward_to", "(", "self", ",", "x", ",", "layer_i", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "layer_i", ")", ":", "\n", "            ", "x", "=", "self", ".", "module_list", "[", "i", "]", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.VGG.__init__": [[18, 36], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "vgg.VGG.modules", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "features", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "10", ")", ",", "\n", ")", "\n", "# Initialize weights", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.VGG.forward": [[38, 43], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers_sp": [[44, 58], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d"], "function", ["None"], ["", "", "def", "make_layers_sp", "(", "cfg", ",", "batch_norm", "=", "False", ",", "sp", "=", "0.1", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "models", ".", "sparse_func_dict", "[", "'vol'", "]", "(", "sp", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "models", ".", "sparse_func_dict", "[", "'vol'", "]", "(", "sp", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers": [[59, 73], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "def", "make_layers", "(", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg11": [[85, 88], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["def", "vgg11", "(", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\")\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'A'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg11_bn": [[90, 93], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg11_bn", "(", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\") with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'A'", "]", ",", "batch_norm", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg0_bn": [[94, 97], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg0_bn", "(", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\") with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'O'", "]", ",", "batch_norm", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg0_sp": [[98, 101], ["vgg.VGG", "vgg.make_layers_sp"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers_sp"], ["", "def", "vgg0_sp", "(", "sp", ")", ":", "\n", "    ", "\"\"\"VGG 11-layer model (configuration \"A\") with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers_sp", "(", "cfg", "[", "'O'", "]", ",", "batch_norm", "=", "True", ",", "sp", "=", "sp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg13": [[103, 106], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg13", "(", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\")\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'B'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg13_bn": [[108, 111], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg13_bn", "(", ")", ":", "\n", "    ", "\"\"\"VGG 13-layer model (configuration \"B\") with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'B'", "]", ",", "batch_norm", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg16": [[113, 116], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg16", "(", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\")\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'D'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg16_bn": [[118, 121], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg16_bn", "(", ")", ":", "\n", "    ", "\"\"\"VGG 16-layer model (configuration \"D\") with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'D'", "]", ",", "batch_norm", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg19": [[123, 126], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg19", "(", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration \"E\")\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'E'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.vgg19_bn": [[128, 131], ["vgg.VGG", "vgg.make_layers"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.vgg.make_layers"], ["", "def", "vgg19_bn", "(", ")", ":", "\n", "    ", "\"\"\"VGG 19-layer model (configuration 'E') with batch normalization\"\"\"", "\n", "return", "VGG", "(", "make_layers", "(", "cfg", "[", "'E'", "]", ",", "batch_norm", "=", "True", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__init__": [[25, 55], ["os.path.expanduser", "os.path.join", "sorted", "glob.iglob", "open", "sorted", "tinyimagenet.TinyImageNet.label_text_to_number.items", "os.path.join", "os.path.join", "enumerate", "range", "tinyimagenet.TinyImageNet.read_image", "text.strip", "open", "fp.readlines", "fp.readlines", "os.path.join", "line.split"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.read_image"], ["def", "__init__", "(", "self", ",", "root", ",", "split", "=", "'train'", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "in_memory", "=", "False", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "in_memory", "=", "in_memory", "\n", "self", ".", "split_dir", "=", "os", ".", "path", ".", "join", "(", "root", ",", "self", ".", "split", ")", "\n", "self", ".", "image_paths", "=", "sorted", "(", "glob", ".", "iglob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'**'", ",", "'*.%s'", "%", "EXTENSION", ")", ",", "recursive", "=", "True", ")", ")", "\n", "self", ".", "labels", "=", "{", "}", "# fname - label number mapping", "\n", "self", ".", "images", "=", "[", "]", "# used for in-memory processing", "\n", "\n", "# build class label - number mapping", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "CLASS_LIST_FILE", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "label_texts", "=", "sorted", "(", "[", "text", ".", "strip", "(", ")", "for", "text", "in", "fp", ".", "readlines", "(", ")", "]", ")", "\n", "", "self", ".", "label_text_to_number", "=", "{", "text", ":", "i", "for", "i", ",", "text", "in", "enumerate", "(", "self", ".", "label_texts", ")", "}", "\n", "\n", "if", "self", ".", "split", "==", "'train'", ":", "\n", "            ", "for", "label_text", ",", "i", "in", "self", ".", "label_text_to_number", ".", "items", "(", ")", ":", "\n", "                ", "for", "cnt", "in", "range", "(", "NUM_IMAGES_PER_CLASS", ")", ":", "\n", "                    ", "self", ".", "labels", "[", "'%s_%d.%s'", "%", "(", "label_text", ",", "cnt", ",", "EXTENSION", ")", "]", "=", "i", "\n", "", "", "", "elif", "self", ".", "split", "==", "'val'", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "VAL_ANNOTATION_FILE", ")", ",", "'r'", ")", "as", "fp", ":", "\n", "                ", "for", "line", "in", "fp", ".", "readlines", "(", ")", ":", "\n", "                    ", "terms", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "file_name", ",", "label_text", "=", "terms", "[", "0", "]", ",", "terms", "[", "1", "]", "\n", "self", ".", "labels", "[", "file_name", "]", "=", "self", ".", "label_text_to_number", "[", "label_text", "]", "\n", "\n", "# read all images into torch tensor in memory to minimize disk IO overhead", "\n", "", "", "", "if", "self", ".", "in_memory", ":", "\n", "            ", "self", ".", "images", "=", "[", "self", ".", "read_image", "(", "path", ")", "for", "path", "in", "self", ".", "image_paths", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__len__": [[56, 58], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__getitem__": [[59, 72], ["tinyimagenet.TinyImageNet.read_image", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.read_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "file_path", "=", "self", ".", "image_paths", "[", "index", "]", "\n", "\n", "if", "self", ".", "in_memory", ":", "\n", "            ", "img", "=", "self", ".", "images", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "read_image", "(", "file_path", ")", "\n", "\n", "", "if", "self", ".", "split", "==", "'test'", ":", "\n", "            ", "return", "img", "\n", "", "else", ":", "\n", "# file_name = file_path.split('/')[-1]", "\n", "            ", "return", "img", ",", "self", ".", "labels", "[", "os", ".", "path", ".", "basename", "(", "file_path", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__repr__": [[73, 84], ["tinyimagenet.TinyImageNet.__len__", "tinyimagenet.TinyImageNet.transform.__repr__().replace", "tinyimagenet.TinyImageNet.target_transform.__repr__().replace", "tinyimagenet.TinyImageNet.transform.__repr__", "tinyimagenet.TinyImageNet.target_transform.__repr__", "len", "len"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__len__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__repr__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.__repr__"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset '", "+", "self", ".", "__class__", ".", "__name__", "+", "'\\n'", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "tmp", "=", "self", ".", "split", "\n", "fmt_str", "+=", "'    Split: {}\\n'", ".", "format", "(", "tmp", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "root", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "tmp", "=", "'    Target Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}'", ".", "format", "(", "tmp", ",", "self", ".", "target_transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.tinyimagenet.TinyImageNet.read_image": [[85, 88], ["PIL.Image.open", "tinyimagenet.TinyImageNet.transform"], "methods", ["None"], ["", "def", "read_image", "(", "self", ",", "path", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "path", ")", "\n", "return", "self", ".", "transform", "(", "img", ")", "if", "self", ".", "transform", "else", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.BasicBlock.__init__": [[9, 23], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "self", ".", "equalInOut", "=", "(", "in_planes", "==", "out_planes", ")", "\n", "self", ".", "convShortcut", "=", "(", "not", "self", ".", "equalInOut", ")", "and", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ",", "bias", "=", "False", ")", "or", "None", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.BasicBlock.forward": [[23, 33], ["wideresnet.BasicBlock.relu2", "wideresnet.BasicBlock.conv2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "wideresnet.BasicBlock.relu1", "wideresnet.BasicBlock.relu1", "wideresnet.BasicBlock.bn2", "torch.dropout", "torch.dropout", "torch.dropout", "wideresnet.BasicBlock.bn1", "wideresnet.BasicBlock.bn1", "wideresnet.BasicBlock.conv1", "wideresnet.BasicBlock.convShortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "equalInOut", ":", "\n", "            ", "x", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "relu2", "(", "self", ".", "bn2", "(", "self", ".", "conv1", "(", "out", "if", "self", ".", "equalInOut", "else", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "torch", ".", "add", "(", "x", "if", "self", ".", "equalInOut", "else", "self", ".", "convShortcut", "(", "x", ")", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseBasicBlock.__init__": [[35, 49], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", ",", "dropRate", "=", "0.0", ",", "sp", "=", "0.5", ",", "sp_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "relu1", "=", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu2", "=", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "out_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "droprate", "=", "dropRate", "\n", "self", ".", "equalInOut", "=", "(", "in_planes", "==", "out_planes", ")", "\n", "self", ".", "convShortcut", "=", "(", "not", "self", ".", "equalInOut", ")", "and", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "0", ",", "bias", "=", "bias", ")", "or", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseBasicBlock.forward": [[50, 60], ["wideresnet.SparseBasicBlock.relu2", "wideresnet.SparseBasicBlock.conv2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "wideresnet.SparseBasicBlock.relu1", "wideresnet.SparseBasicBlock.relu1", "wideresnet.SparseBasicBlock.bn2", "torch.dropout", "torch.dropout", "torch.dropout", "wideresnet.SparseBasicBlock.bn1", "wideresnet.SparseBasicBlock.bn1", "wideresnet.SparseBasicBlock.conv1", "wideresnet.SparseBasicBlock.convShortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "equalInOut", ":", "\n", "            ", "x", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "relu1", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "", "out", "=", "self", ".", "relu2", "(", "self", ".", "bn2", "(", "self", ".", "conv1", "(", "out", "if", "self", ".", "equalInOut", "else", "x", ")", ")", ")", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "            ", "out", "=", "F", ".", "dropout", "(", "out", ",", "p", "=", "self", ".", "droprate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "return", "torch", ".", "add", "(", "x", "if", "self", ".", "equalInOut", "else", "self", ".", "convShortcut", "(", "x", ")", ",", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.NetworkBlock.__init__": [[63, 66], ["torch.Module.__init__", "wideresnet.NetworkBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nb_layers", ",", "in_planes", ",", "out_planes", ",", "block", ",", "stride", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "NetworkBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.NetworkBlock._make_layer": [[66, 71], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "nb_layers", ")", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "i", "==", "0", "and", "in_planes", "or", "out_planes", ",", "out_planes", ",", "i", "==", "0", "and", "stride", "or", "1", ",", "dropRate", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.NetworkBlock.forward": [[71, 73], ["wideresnet.NetworkBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseNetworkBlock.__init__": [[75, 78], ["torch.Module.__init__", "wideresnet.SparseNetworkBlock._make_layer"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "nb_layers", ",", "in_planes", ",", "out_planes", ",", "block", ",", "stride", ",", "dropRate", "=", "0.0", ",", "sp", "=", "0.5", ",", "sp_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseNetworkBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer", "=", "self", ".", "_make_layer", "(", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseNetworkBlock._make_layer": [[78, 83], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "in_planes", ",", "out_planes", ",", "nb_layers", ",", "stride", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "nb_layers", ")", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "i", "==", "0", "and", "in_planes", "or", "out_planes", ",", "out_planes", ",", "i", "==", "0", "and", "stride", "or", "1", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseNetworkBlock.forward": [[83, 85], ["wideresnet.SparseNetworkBlock.layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layer", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.WideResNet.__init__": [[87, 117], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "wideresnet.NetworkBlock", "wideresnet.NetworkBlock", "wideresnet.NetworkBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "wideresnet.WideResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", ",", "widen_factor", "=", "1", ",", "dropRate", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "WideResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels", "=", "[", "16", ",", "16", "*", "widen_factor", ",", "32", "*", "widen_factor", ",", "64", "*", "widen_factor", "]", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "block", "=", "BasicBlock", "\n", "# 1st conv before any network block", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "nChannels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "# 1st block", "\n", "self", ".", "block1", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "0", "]", ",", "nChannels", "[", "1", "]", ",", "block", ",", "1", ",", "dropRate", ")", "\n", "# 2nd block", "\n", "self", ".", "block2", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "1", "]", ",", "nChannels", "[", "2", "]", ",", "block", ",", "2", ",", "dropRate", ")", "\n", "# 3rd block", "\n", "self", ".", "block3", "=", "NetworkBlock", "(", "n", ",", "nChannels", "[", "2", "]", ",", "nChannels", "[", "3", "]", ",", "block", ",", "2", ",", "dropRate", ")", "\n", "# global average pooling and classifier", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nChannels", "[", "3", "]", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "nChannels", "[", "3", "]", ",", "num_classes", ")", "\n", "self", ".", "nChannels", "=", "nChannels", "[", "3", "]", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.WideResNet.forward": [[117, 126], ["wideresnet.WideResNet.conv1", "wideresnet.WideResNet.block1", "wideresnet.WideResNet.block2", "wideresnet.WideResNet.block3", "wideresnet.WideResNet.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "wideresnet.WideResNet.fc", "wideresnet.WideResNet.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "block1", "(", "out", ")", "\n", "out", "=", "self", ".", "block2", "(", "out", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "nChannels", ")", "\n", "return", "self", ".", "fc", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseWideResNet.__init__": [[128, 163], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "wideresnet.SparseNetworkBlock", "wideresnet.SparseNetworkBlock", "wideresnet.SparseNetworkBlock", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "wideresnet.SparseWideResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", ",", "widen_factor", "=", "1", ",", "dropRate", "=", "0.0", ",", "sp", "=", "0.5", ",", "sp_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseWideResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "nChannels", "=", "[", "16", ",", "16", "*", "widen_factor", ",", "32", "*", "widen_factor", ",", "64", "*", "widen_factor", "]", "\n", "assert", "(", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ")", "\n", "n", "=", "(", "depth", "-", "4", ")", "/", "6", "\n", "block", "=", "SparseBasicBlock", "\n", "# 1st conv before any network block", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "nChannels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "# 1st block", "\n", "self", ".", "block1", "=", "SparseNetworkBlock", "(", "n", ",", "nChannels", "[", "0", "]", ",", "nChannels", "[", "1", "]", ",", "block", ",", "1", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", "\n", "# 2nd block", "\n", "self", ".", "block2", "=", "SparseNetworkBlock", "(", "n", ",", "nChannels", "[", "1", "]", ",", "nChannels", "[", "2", "]", ",", "block", ",", "2", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", "\n", "# 3rd block", "\n", "self", ".", "block3", "=", "SparseNetworkBlock", "(", "n", ",", "nChannels", "[", "2", "]", ",", "nChannels", "[", "3", "]", ",", "block", ",", "2", ",", "dropRate", ",", "sp", ",", "sp_func", ",", "bias", ")", "\n", "\n", "\n", "# global average pooling and classifier", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "nChannels", "[", "3", "]", ")", "\n", "# self.relu = nn.ReLU(inplace=True)", "\n", "self", ".", "sparse", "=", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "nChannels", "[", "3", "]", ",", "num_classes", ")", "\n", "self", ".", "nChannels", "=", "nChannels", "[", "3", "]", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "bias", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.wideresnet.SparseWideResNet.forward": [[163, 172], ["wideresnet.SparseWideResNet.conv1", "wideresnet.SparseWideResNet.block1", "wideresnet.SparseWideResNet.block2", "wideresnet.SparseWideResNet.block3", "wideresnet.SparseWideResNet.sparse", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "wideresnet.SparseWideResNet.fc", "wideresnet.SparseWideResNet.bn1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "block1", "(", "out", ")", "\n", "out", "=", "self", ".", "block2", "(", "out", ")", "\n", "out", "=", "self", ".", "block3", "(", "out", ")", "\n", "out", "=", "self", ".", "sparse", "(", "self", ".", "bn1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "nChannels", ")", "\n", "return", "self", ".", "fc", "(", "out", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.Flatten.forward": [[19, 21], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.AlexNet.__init__": [[24, 49], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "channels", "=", "[", "64", ",", "192", ",", "384", ",", "256", ",", "256", "]", ")", ":", "\n", "        ", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "channels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "0", "]", ",", "channels", "[", "1", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "1", "]", ",", "channels", "[", "2", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "2", "]", ",", "channels", "[", "3", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "3", "]", ",", "channels", "[", "4", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", "*", "2", "*", "2", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.AlexNet.forward": [[51, 56], ["othernets.AlexNet.features", "othernets.AlexNet.view", "othernets.AlexNet.classifier", "othernets.AlexNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "256", "*", "2", "*", "2", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseAlexNet.__init__": [[58, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "channels", "=", "[", "64", ",", "192", ",", "384", ",", "256", ",", "256", "]", ",", "sp1", "=", "0.5", ",", "sp2", "=", "0.5", ",", "sp_func", "=", "'reg'", ")", ":", "\n", "        ", "super", "(", "SparseAlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "channels", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "0", "]", ",", "channels", "[", "1", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "1", "]", ",", "channels", "[", "2", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "2", "]", ",", "channels", "[", "3", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", "[", "3", "]", ",", "channels", "[", "4", "]", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "sp_func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", "*", "2", "*", "2", ",", "4096", ")", ",", "\n", "models", ".", "Sparsify1D", "(", "sp2", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "models", ".", "Sparsify1D", "(", "sp2", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseAlexNet.forward": [[83, 88], ["othernets.SparseAlexNet.features", "othernets.SparseAlexNet.view", "othernets.SparseAlexNet.classifier", "othernets.SparseAlexNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "256", "*", "2", "*", "2", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.VGG.__init__": [[91, 96], ["torch.Module.__init__", "othernets.VGG._make_layers", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseVGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "512", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.VGG.forward": [[97, 102], ["othernets.VGG.features", "othernets.VGG.view", "othernets.VGG.classifier", "othernets.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.VGG._make_layers": [[103, 116], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseVGG.__init__": [[119, 129], ["torch.Module.__init__", "othernets.SparseVGG._make_layers", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseVGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "sparsity", "=", "0.3", ",", "sparse_func", "=", "'reg'", ",", "sp_lin", "=", "0.02", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "SparseVGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sparsity", "=", "sparsity", "\n", "self", ".", "sparse_func", "=", "sparse_func", "\n", "\n", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "512", ",", "hidden_size", ")", ",", "models", ".", "Sparsify1D", "(", "sp_lin", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseVGG.forward": [[130, 135], ["othernets.SparseVGG.features", "othernets.SparseVGG.view", "othernets.SparseVGG.classifier", "othernets.SparseVGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseVGG._make_layers": [[136, 149], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "models", ".", "sparse_func_dict", "[", "self", ".", "sparse_func", "]", "(", "self", ".", "sparsity", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.Small_CNN.__init__": [[151, 160], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "othernets.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "Small_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.Small_CNN.forward": [[161, 163], ["othernets.Small_CNN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseSmall_CNN.__init__": [[165, 175], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "othernets.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sp1", ",", "sp2", ",", "func", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "SparseSmall_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "hidden_size", ")", ",", "models", ".", "Sparsify1D", "(", "sp2", ")", ",", "\n", "#   nn.Linear(hidden_size, hidden_size), models.Sparsify1D(sp),", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseSmall_CNN.forward": [[176, 178], ["othernets.SparseSmall_CNN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.LeNet.__init__": [[181, 188], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.LeNet.forward": [[189, 199], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "othernets.LeNet.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "othernets.LeNet.fc3", "othernets.LeNet.conv1", "othernets.LeNet.conv2", "othernets.LeNet.size", "othernets.LeNet.fc1", "othernets.LeNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "fc2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseLeNet.__init__": [[202, 216], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "kWTA.models.Sparsify1D", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sparsities", ",", "sparse_func", "=", "'reg'", ")", ":", "\n", "        ", "super", "(", "SparseLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "5", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "5", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "256", ",", "120", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n", "self", ".", "sparse1", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsities", "[", "0", "]", ")", "\n", "self", ".", "sparse2", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsities", "[", "1", "]", ")", "\n", "self", ".", "sparse3", "=", "models", ".", "Sparsify1D", "(", "sparsities", "[", "2", "]", ")", "\n", "self", ".", "sparse4", "=", "models", ".", "Sparsify1D", "(", "sparsities", "[", "3", "]", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.SparseLeNet.forward": [[217, 239], ["othernets.SparseLeNet.sparse1", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "othernets.SparseLeNet.sparse2", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "othernets.SparseLeNet.view", "othernets.SparseLeNet.sparse3", "othernets.SparseLeNet.sparse4", "othernets.SparseLeNet.fc3", "othernets.SparseLeNet.conv1", "othernets.SparseLeNet.conv2", "othernets.SparseLeNet.size", "othernets.SparseLeNet.fc1", "othernets.SparseLeNet.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "sparse1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "\n", "out", "=", "self", ".", "sparse2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "=", "F", ".", "max_pool2d", "(", "out", ",", "2", ")", "\n", "\n", "\n", "# out = self.relu(self.conv1(x))", "\n", "# out = self.relu(self.conv2(out))", "\n", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "out", "=", "self", ".", "sparse3", "(", "self", ".", "fc1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "sparse4", "(", "self", ".", "fc2", "(", "out", ")", ")", "\n", "\n", "# out = self.relu(self.fc1(out))", "\n", "# out = self.relu(self.fc2(out))", "\n", "\n", "out", "=", "self", ".", "fc3", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.breakReLU.__init__": [[242, 246], ["torch.Module.__init__", "torch.Threshold", "torch.Threshold", "torch.Threshold", "torch.Threshold"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "h", ")", ":", "\n", "        ", "super", "(", "breakReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "thre", "=", "nn", ".", "Threshold", "(", "0", ",", "-", "self", ".", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.breakReLU.forward": [[247, 249], ["othernets.breakReLU.thre"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "thre", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.DNN.__init__": [[251, 276], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "othernets.DNN.modules", "layers.append", "layers.append", "isinstance", "len", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "kWTA.models.Sparsify1D", "m.weight.data.normal_", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "len", "m.bias.data.zero_", "othernets.breakReLU"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sizes", ",", "activation", "=", "'sp'", ",", "bias", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "sizes", ")", "-", "1", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "i", "]", ",", "sizes", "[", "i", "+", "1", "]", ",", "bias", "=", "bias", ")", ")", "\n", "if", "activation", "==", "'sp'", ":", "\n", "                ", "act", "=", "models", ".", "Sparsify1D", "(", "**", "kwargs", ")", "\n", "", "elif", "activation", "==", "'relu'", ":", "\n", "                ", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "activation", "==", "'breakrelu'", ":", "\n", "                ", "act", "=", "breakReLU", "(", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "if", "i", "==", "len", "(", "sizes", ")", "-", "2", ":", "\n", "                ", "break", "\n", "", "layers", ".", "append", "(", "act", ")", "\n", "", "self", ".", "nn", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "1", ")", "\n", "if", "bias", ":", "\n", "# m.bias.data.normal_(0, 0.01)", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.othernets.DNN.forward": [[277, 279], ["othernets.DNN.nn"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "nn", "(", "x", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.isnotebook": [[13, 24], ["get_ipython"], "function", ["None"], ["def", "isnotebook", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "shell", "=", "get_ipython", "(", ")", ".", "__class__", ".", "__name__", "\n", "if", "shell", "==", "'ZMQInteractiveShell'", ":", "\n", "            ", "return", "True", "# Jupyter notebook or qtconsole", "\n", "", "elif", "shell", "==", "'TerminalInteractiveShell'", ":", "\n", "            ", "return", "False", "# Terminal running IPython", "\n", "", "else", ":", "\n", "            ", "return", "False", "# Other type (?)", "\n", "", "", "except", "NameError", ":", "\n", "        ", "return", "False", "# Probably standard Python interpreter", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.showimg": [[31, 35], ["matplotlib.pyplot.imshow", "isinstance", "img.numpy", "numpy.transpose"], "function", ["None"], ["", "def", "showimg", "(", "img", ",", "cmap", "=", "None", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "npimg", "=", "img", ".", "numpy", "(", ")", "\n", "", "plt", ".", "imshow", "(", "np", ".", "transpose", "(", "npimg", ",", "(", "1", ",", "2", ",", "0", ")", ")", ",", "interpolation", "=", "'nearest'", ",", "cmap", "=", "cmap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.showallimg": [[36, 41], ["matplotlib.pyplot.figure", "utilities.showimg", "torchvision.utils.make_grid", "matplotlib.pyplot.savefig", "imgs.to().detach", "imgs.to"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.showimg"], ["", "def", "showallimg", "(", "imgs", ",", "n_row", ",", "normalize", "=", "True", ",", "cmap", "=", "None", ",", "savename", "=", "None", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "30", ",", "30", ")", ",", "dpi", "=", "20", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "showimg", "(", "torchvision", ".", "utils", ".", "make_grid", "(", "imgs", ".", "to", "(", "\"cpu\"", ")", ".", "detach", "(", ")", ",", "padding", "=", "1", ",", "normalize", "=", "normalize", ",", "nrow", "=", "n_row", ")", ",", "cmap", "=", "cmap", ")", "\n", "if", "savename", ":", "\n", "        ", "plt", ".", "savefig", "(", "savename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.show_batch_img": [[42, 46], ["matplotlib.pyplot.figure", "batch[].permute", "utilities.showimg", "torchvision.utils.make_grid", "batch[].permute.to().detach", "batch[].permute.to"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.showimg"], ["", "", "def", "show_batch_img", "(", "batch", ",", "img_id", ",", "n_row", ",", "normalize", "=", "True", ",", "figsize", "=", "30", ",", "dpi", "=", "20", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "figsize", ",", "figsize", ")", ",", "dpi", "=", "dpi", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "imgs", "=", "batch", "[", "img_id", ":", "img_id", "+", "1", ",", ":", ",", ":", ",", ":", "]", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", "\n", "showimg", "(", "torchvision", ".", "utils", ".", "make_grid", "(", "imgs", ".", "to", "(", "\"cpu\"", ")", ".", "detach", "(", ")", ",", "padding", "=", "1", ",", "normalize", "=", "normalize", ",", "nrow", "=", "n_row", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.compare_imgs": [[47, 54], ["torch.zeros", "torch.zeros", "torch.zeros", "range", "matplotlib.pyplot.figure", "utilities.showimg", "torchvision.utils.make_grid", "torch.zeros.to().detach", "torch.zeros.to"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.showimg"], ["", "def", "compare_imgs", "(", "imgs1", ",", "imgs2", ",", "n_row", ",", "normalize", "=", "True", ",", "figsize", "=", "30", ",", "dpi", "=", "20", ")", ":", "\n", "    ", "toshow", "=", "torch", ".", "zeros", "(", "imgs1", ".", "shape", "[", "0", "]", "*", "2", ",", "imgs1", ".", "shape", "[", "1", "]", ",", "imgs1", ".", "shape", "[", "2", "]", ",", "imgs1", ".", "shape", "[", "3", "]", ")", "\n", "for", "i", "in", "range", "(", "imgs1", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "toshow", "[", "2", "*", "i", ",", ":", ",", ":", ",", ":", "]", "=", "imgs1", "[", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "toshow", "[", "2", "*", "i", "+", "1", ",", ":", ",", ":", ",", ":", "]", "=", "imgs2", "[", "i", ",", ":", ",", ":", ",", ":", "]", "\n", "", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "figsize", ",", "figsize", ")", ",", "dpi", "=", "dpi", ",", "facecolor", "=", "'w'", ",", "edgecolor", "=", "'k'", ")", "\n", "showimg", "(", "torchvision", ".", "utils", ".", "make_grid", "(", "toshow", ".", "to", "(", "\"cpu\"", ")", ".", "detach", "(", ")", ",", "padding", "=", "1", ",", "normalize", "=", "normalize", ",", "nrow", "=", "n_row", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.draw_loss": [[56, 98], ["numpy.meshgrid", "print", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.tensor().view_as().to", "torch.tensor().view_as().to", "torch.tensor().view_as().to", "numpy.sign", "torch.tensor", "torch.tensor", "torch.tensor", "all_deltas.view.view", "torch.zeros", "torch.zeros", "torch.zeros", "print", "print", "Zi.reshape.reshape", "numpy.linspace", "numpy.linspace", "delta.requires_grad_", "delta.grad.detach().sign().view().cpu().numpy", "utilities.draw_loss.grad_at_delta"], "function", ["None"], ["", "def", "draw_loss", "(", "model", ",", "X", ",", "y", ",", "epsilon", ",", "device", ",", "dir1", "=", "'grad'", ",", "grid_size", "=", "25", ",", "batch_size", "=", "100", ")", ":", "\n", "    ", "Xi", ",", "Yi", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "epsilon", ",", "epsilon", ",", "grid_size", ")", ",", "np", ".", "linspace", "(", "-", "epsilon", ",", "epsilon", ",", "grid_size", ")", ")", "\n", "print", "(", "Xi", ".", "shape", ")", "\n", "def", "grad_at_delta", "(", "delta", ")", ":", "\n", "        ", "delta", ".", "requires_grad_", "(", "True", ")", "\n", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", "[", "0", ":", "1", "]", ")", ".", "backward", "(", ")", "\n", "return", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ".", "view", "(", "-", "1", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "assert", "(", "dir1", "in", "[", "'grad'", ",", "'rand'", "]", ")", "\n", "\n", "if", "dir1", "==", "'grad'", ":", "\n", "        ", "dir1", "=", "grad_at_delta", "(", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", ")", "\n", "", "elif", "dir1", "==", "'rand'", ":", "\n", "        ", "dir1", "=", "np", ".", "sign", "(", "np", ".", "random", ".", "randn", "(", "X", ".", "shape", "[", "0", "]", "*", "X", ".", "shape", "[", "1", "]", "*", "X", ".", "shape", "[", "2", "]", "*", "X", ".", "shape", "[", "3", "]", ")", ")", "\n", "", "delta2", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta2", ".", "data", "=", "torch", ".", "tensor", "(", "dir1", ")", ".", "view_as", "(", "X", ")", ".", "to", "(", "device", ")", "\n", "# dir2 = grad_at_delta(delta2)", "\n", "# np.random.seed(0)", "\n", "dir2", "=", "np", ".", "sign", "(", "np", ".", "random", ".", "randn", "(", "dir1", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "all_deltas", "=", "torch", ".", "tensor", "(", "(", "np", ".", "array", "(", "[", "Xi", ".", "flatten", "(", ")", ",", "Yi", ".", "flatten", "(", ")", "]", ")", ".", "T", "@", "\n", "np", ".", "array", "(", "[", "dir2", ",", "dir1", "]", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "all_deltas", "=", "all_deltas", ".", "view", "(", "-", "1", ",", "X", ".", "shape", "[", "1", "]", ",", "X", ".", "shape", "[", "2", "]", ",", "X", ".", "shape", "[", "3", "]", ")", "\n", "start", "=", "0", "\n", "yp", "=", "torch", ".", "zeros", "(", "all_deltas", ".", "shape", "[", "0", "]", ",", "10", ")", "\n", "while", "1", ":", "\n", "        ", "end", "=", "start", "+", "batch_size", "\n", "if", "end", ">", "all_deltas", ".", "shape", "[", "0", "]", ":", "\n", "            ", "end", "=", "all_deltas", ".", "shape", "[", "0", "]", "\n", "", "deltas", "=", "all_deltas", "[", "start", ":", "end", ",", ":", ",", ":", ",", ":", "]", ".", "to", "(", "device", ")", "\n", "yp0", "=", "model", "(", "deltas", "+", "X", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "yp", "[", "start", ":", "end", ",", ":", "]", "=", "yp0", "\n", "start", "=", "end", "\n", "if", "start", ">=", "all_deltas", ".", "shape", "[", "0", "]", ":", "\n", "            ", "break", "\n", "", "", "Zi", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "\"none\"", ")", "(", "yp", ",", "y", ".", "cpu", "(", ")", "[", "0", ":", "1", "]", ".", "repeat", "(", "yp", ".", "shape", "[", "0", "]", ")", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "print", "(", "yp", ".", "shape", ")", "\n", "print", "(", "'error:'", ",", "(", "yp", ".", "cpu", "(", ")", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", "[", "0", ":", "1", "]", ".", "cpu", "(", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "yp", ".", "shape", "[", "0", "]", ")", "\n", "Zi", "=", "Zi", ".", "reshape", "(", "*", "Xi", ".", "shape", ")", "\n", "#Zi = (Zi-Zi.min())/(Zi.max() - Zi.min())", "\n", "return", "Xi", ",", "Yi", ",", "Zi", "\n", "# fig = plt.figure(figsize=(10,10))", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.count_feature_stats": [[106, 118], ["print", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "print", "print", "print", "print", "torch.norm", "torch.norm", "torch.norm", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "count_feature_stats", "(", "activations", ",", "layer_list", ",", "imgs", "=", "None", ")", ":", "\n", "    ", "for", "l", "in", "layer_list", ":", "\n", "        ", "print", "(", "l", ")", "\n", "act", "=", "activations", "[", "l", "]", "\n", "if", "imgs", "is", "not", "None", ":", "\n", "            ", "act", "=", "act", "[", "imgs", ",", ":", ",", ":", ",", ":", "]", "\n", "", "g", "=", "torch", ".", "norm", "(", "act", ",", "p", "=", "0", ")", ".", "item", "(", ")", "\n", "l", "=", "torch", ".", "sum", "(", "act", "<=", "0", ")", ".", "item", "(", ")", "\n", "print", "(", "'total:'", ",", "act", ".", "shape", ")", "\n", "print", "(", "'>0:'", ",", "g", ")", "\n", "print", "(", "'<=0:'", ",", "l", ")", "\n", "print", "(", "'ratio:'", ",", "g", "/", "(", "g", "+", "l", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.feature_diff": [[119, 126], ["torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "", "def", "feature_diff", "(", "act1", ",", "act2", ",", "layer_list", ",", "relu", "=", "False", ")", ":", "\n", "    ", "diff", "=", "{", "}", "\n", "for", "l", "in", "layer_list", ":", "\n", "        ", "diff", "[", "l", "]", "=", "act1", "[", "l", "]", "-", "act2", "[", "l", "]", "\n", "if", "relu", ":", "\n", "            ", "diff", "[", "l", "]", "=", "nn", ".", "ReLU", "(", ")", "(", "act1", "[", "l", "]", ")", "-", "nn", ".", "ReLU", "(", ")", "(", "act2", "[", "l", "]", ")", "\n", "", "", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.feature_diff_stats": [[128, 131], ["print", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm().item", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["None"], ["", "def", "feature_diff_stats", "(", "act1", ",", "act2", ",", "relu", "=", "False", ")", ":", "\n", "    ", "diff", "=", "act1", "-", "act2", "\n", "print", "(", "'act1 l0:'", ",", "torch", ".", "norm", "(", "act1", ",", "p", "=", "0", ")", ".", "item", "(", ")", ",", "'act2 l0:'", ",", "torch", ".", "norm", "(", "act2", ",", "p", "=", "0", ")", ".", "item", "(", ")", ",", "'diff l2:'", ",", "torch", ".", "norm", "(", "diff", ",", "p", "=", "2", ")", ".", "item", "(", ")", ",", "'diff l0:'", ",", "torch", ".", "norm", "(", "diff", ",", "p", "=", "0", ")", ".", "item", "(", ")", ")", "\n", "# print('act2 l0:', torch.norm(act1, p=0))", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.accuracy": [[135, 149], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.register_layers": [[152, 155], ["layer.record_activation"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.models.SparsifyBase.record_activation"], ["", "def", "register_layers", "(", "activation_list", ")", ":", "\n", "    ", "for", "layer", "in", "activation_list", ":", "\n", "        ", "layer", ".", "record_activation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.activation_counts": [[157, 186], ["model.to", "enumerate", "X.to.to", "model", "enumerate", "tqdm", "tqdm", "mask.sum", "tqdm.update", "len", "count_list.append", "len", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "function", ["None"], ["", "", "def", "activation_counts", "(", "model", ",", "loader", ",", "activation_list", ",", "device", ",", "use_tqdm", "=", "True", ",", "test_size", "=", "None", ")", ":", "\n", "    ", "count_list", "=", "[", "]", "\n", "count", "=", "0", "\n", "model", ".", "to", "(", "device", ")", "\n", "if", "use_tqdm", ":", "\n", "        ", "if", "test_size", "is", "not", "None", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "test_size", ")", "\n", "", "else", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ".", "dataset", ")", ")", "\n", "\n", "", "", "for", "i", ",", "(", "X", ",", "y", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "X", "=", "X", ".", "to", "(", "device", ")", "\n", "_", "=", "model", "(", "X", ")", "\n", "for", "j", ",", "layer", "in", "enumerate", "(", "activation_list", ")", ":", "\n", "            ", "act", "=", "layer", ".", "act", "\n", "batch_size", "=", "act", ".", "shape", "[", "0", "]", "\n", "if", "len", "(", "count_list", ")", "<=", "j", ":", "\n", "                ", "count_list", ".", "append", "(", "torch", ".", "zeros_like", "(", "act", "[", "0", ",", ":", "]", ")", ")", "\n", "", "mask", "=", "(", "act", "!=", "0", ")", ".", "to", "(", "act", ")", "\n", "mask_sum", "=", "mask", ".", "sum", "(", "dim", "=", "0", ")", "\n", "count_list", "[", "j", "]", "+=", "mask_sum", "\n", "", "count", "+=", "X", ".", "shape", "[", "0", "]", "\n", "if", "test_size", "is", "not", "None", ":", "\n", "            ", "if", "count", ">=", "test_size", ":", "\n", "                ", "break", "\n", "\n", "", "", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "", "", "return", "count_list", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.perturb_network": [[188, 209], ["model.modules", "hasattr", "hasattr", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like"], "function", ["None"], ["", "def", "perturb_network", "(", "model", ",", "eps", ",", "whitelist", "=", "None", ",", "blacklist", "=", "None", ")", ":", "\n", "\n", "    ", "assert", "(", "(", "not", "whitelist", ")", "or", "(", "not", "blacklist", ")", ")", "\n", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "whitelist", ":", "\n", "            ", "if", "m", "not", "in", "whitelist", ":", "\n", "                ", "continue", "\n", "", "", "elif", "blacklist", ":", "\n", "            ", "if", "m", "in", "blacklist", ":", "\n", "                ", "continue", "\n", "\n", "", "", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "m", ".", "weight", "is", "not", "None", ")", ":", "\n", "            ", "delta", "=", "eps", "*", "torch", ".", "rand_like", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "weight", ".", "data", "+=", "delta", "\n", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "(", "m", ".", "bias", "is", "not", "None", ")", ":", "\n", "            ", "delta", "=", "eps", "*", "torch", ".", "rand_like", "(", "m", ".", "bias", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", "+=", "delta", "\n", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.append_activation_list": [[211, 221], ["enumerate", "model.modules", "isinstance", "activation_list.append"], "function", ["None"], ["", "def", "append_activation_list", "(", "model", ",", "max_list_size", ")", ":", "\n", "    ", "count", "=", "0", "\n", "activation_list", "=", "[", "]", "\n", "for", "(", "i", ",", "m", ")", "in", "enumerate", "(", "model", ".", "modules", "(", ")", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "models", ".", "SparsifyBase", ")", ":", "\n", "            ", "count", "+=", "1", "\n", "activation_list", ".", "append", "(", "m", ")", "\n", "", "if", "count", ">=", "max_list_size", ":", "\n", "            ", "break", "\n", "", "", "return", "activation_list", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.visualize_prediction_trajectory": [[223, 242], ["next", "model.to", "attack.clamp", "range", "numpy.array", "matplotlib.pyplot.figure", "range", "iter", "X.to", "y.to", "torch.rand_like", "torch.rand_like", "torch.rand_like", "attack", "model", "np.array.append", "matplotlib.pyplot.plot", "yp[].cpu().detach().numpy", "numpy.linspace", "yp[].cpu().detach", "yp[].cpu"], "function", ["None"], ["", "def", "visualize_prediction_trajectory", "(", "model", ",", "loader", ",", "eps", ",", "step", ",", "device", ",", "vid", "=", "0", ",", "attack", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "X", ",", "y", "=", "next", "(", "iter", "(", "loader", ")", ")", "\n", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "if", "attack", "is", "None", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ")", "\n", "", "else", ":", "\n", "        ", "delta", "=", "attack", "(", "model", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "", "delta", "=", "delta", ".", "clamp", "(", "-", "eps", ",", "eps", ")", "\n", "delta", "/=", "step", "\n", "vals", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "step", ")", ":", "\n", "        ", "T", "=", "X", "+", "i", "*", "delta", "\n", "yp", "=", "model", "(", "T", ")", "\n", "vals", ".", "append", "(", "yp", "[", "vid", ",", ":", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "vals", "=", "np", ".", "array", "(", "vals", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "plt", ".", "plot", "(", "np", ".", "linspace", "(", "0", ",", "eps", ",", "step", ")", ",", "vals", "[", ":", ",", "i", "]", ",", "'-'", ",", "markersize", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.gen_rand_labels": [[243, 249], ["torch.randint_like", "torch.randint_like", "torch.randint_like", "range", "len", "torch.randint", "torch.randint", "torch.randint"], "function", ["None"], ["", "", "def", "gen_rand_labels", "(", "y", ",", "num_classes", ")", ":", "\n", "    ", "targets", "=", "torch", ".", "randint_like", "(", "y", ",", "low", "=", "0", ",", "high", "=", "num_classes", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "        ", "while", "targets", "[", "i", "]", "==", "y", "[", "i", "]", ":", "\n", "            ", "targets", "[", "i", "]", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "10", ",", "size", "=", "(", "1", ",", ")", ")", "\n", "", "", "return", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.utilities.adversarial_network": [[250, 282], ["copy.deepcopy", "torch.SGD", "copy.deepcopy.to", "range", "numpy.array", "utilities.gen_rand_labels", "copy.deepcopy.parameters", "X.to", "y.to", "copy.deepcopy.", "errs.append", "optim.SGD.zero_grad", "loss.backward", "optim.SGD.step", "losses.append", "np.array.append", "adv_model.max", "loss.item", "adv_model.detach().cpu().numpy", "torch.CrossEntropyLoss", "adv_model.detach().cpu", "adv_model.gather", "adv_model.detach", "adv_model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels"], ["", "def", "adversarial_network", "(", "model", ",", "X", ",", "y", ",", "lr", ",", "step", ",", "device", ",", "attack", "=", "'untarg'", ")", ":", "\n", "    ", "if", "attack", "==", "'targ'", ":", "\n", "        ", "y_targ", "=", "gen_rand_labels", "(", "y", ",", "num_classes", "=", "10", ")", "\n", "\n", "", "adv_model", "=", "copy", ".", "deepcopy", "(", "model", ")", "\n", "predictions", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "errs", "=", "[", "]", "\n", "opt", "=", "optim", ".", "SGD", "(", "adv_model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "0.9", ")", "\n", "\n", "adv_model", ".", "to", "(", "device", ")", "\n", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "step", ")", ":", "\n", "        ", "yp", "=", "adv_model", "(", "X", ")", "\n", "y0", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "c_errs", "=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "X", ".", "shape", "[", "0", "]", "\n", "errs", ".", "append", "(", "c_errs", ")", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "if", "attack", "==", "'untarg'", ":", "\n", "            ", "loss", "=", "-", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "", "elif", "attack", "==", "'targ'", ":", "\n", "            ", "loss", "=", "-", "yp", "[", ":", ",", "y_targ", "]", "+", "yp", ".", "gather", "(", "1", ",", "y", "[", ":", ",", "None", "]", ")", "[", ":", ",", "0", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "losses", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "predictions", ".", "append", "(", "yp", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "predictions", "=", "np", ".", "array", "(", "predictions", ")", "\n", "return", "predictions", ",", "losses", ",", "errs", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.gen_rand_labels": [[8, 14], ["torch.randint_like", "torch.randint_like", "torch.randint_like", "range", "len", "torch.randint", "torch.randint", "torch.randint"], "function", ["None"], ["def", "gen_rand_labels", "(", "y", ",", "num_classes", ")", ":", "\n", "    ", "targets", "=", "torch", ".", "randint_like", "(", "y", ",", "low", "=", "0", ",", "high", "=", "num_classes", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "        ", "while", "targets", "[", "i", "]", "==", "y", "[", "i", "]", ":", "\n", "            ", "targets", "[", "i", "]", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "10", ",", "size", "=", "(", "1", ",", ")", ")", "\n", "", "", "return", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.gen_least_likely_labels": [[16, 19], ["model", "model.min"], "function", ["None"], ["", "def", "gen_least_likely_labels", "(", "model", ",", "X", ")", ":", "\n", "    ", "preds", "=", "model", "(", "X", ")", "\n", "return", "preds", ".", "min", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.fgsm_linf_untargeted": [[20, 26], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "loss.backward", "torch.CrossEntropyLoss", "model", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "fgsm_linf_untargeted", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ")", ":", "\n", "    ", "\"\"\" Construct FGSM adversarial examples on the examples X\"\"\"", "\n", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "return", "epsilon", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.norms": [[28, 31], ["Z.view().norm", "Z.view"], "function", ["None"], ["", "def", "norms", "(", "Z", ")", ":", "\n", "    ", "\"\"\"Compute norms over all but the first dimension\"\"\"", "\n", "return", "Z", ".", "view", "(", "Z", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "1", ")", "[", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_l2_untargeted": [[33, 44], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.detach", "loss.backward", "torch.min", "torch.min", "torch.min", "torch.zeros_like.grad.zero_", "torch.CrossEntropyLoss", "model", "attack.norms", "torch.max", "torch.max", "torch.max", "norms().clamp", "torch.zeros_like.grad.detach", "torch.zeros_like.grad.detach", "torch.zeros_like.detach", "attack.norms", "torch.zeros_like.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms"], ["", "def", "pgd_l2_untargeted", "(", "model", ",", "X", ",", "y", ",", "epsilon", ",", "alpha", ",", "num_iter", ")", ":", "\n", "    ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "+=", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", "/", "norms", "(", "delta", ".", "grad", ".", "detach", "(", ")", ")", "\n", "delta", ".", "data", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "delta", ".", "detach", "(", ")", ",", "-", "X", ")", ",", "1", "-", "X", ")", "# clip X+delta to [0,1]", "\n", "delta", ".", "data", "*=", "epsilon", "/", "norms", "(", "delta", ".", "detach", "(", ")", ")", ".", "clamp", "(", "min", "=", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.random_attack": [[45, 50], ["torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like.data.clamp", "torch.rand_like.detach"], "function", ["None"], ["", "def", "random_attack", "(", "model", ",", "X", ",", "y", ",", "epsilon", ")", ":", "\n", "    ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "delta", ".", "data", "=", "delta", ".", "data", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_untargeted": [[51, 65], ["range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "loss.backward", "torch.zeros_like.grad.zero_", "torch.CrossEntropyLoss", "model", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "pgd_linf_untargeted", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct FGSM adversarial examples on the examples X\"\"\"", "\n", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_untargeted2": [[66, 82], ["range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "loss.sum.sum", "loss.sum.backward", "torch.zeros_like.grad.zero_", "model.gather", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "pgd_linf_untargeted2", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct FGSM adversarial examples on the examples X\"\"\"", "\n", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "-", "yp", ".", "gather", "(", "1", ",", "y", "[", ":", ",", "None", "]", ")", "[", ":", ",", "0", "]", "\n", "loss", "=", "loss", ".", "sum", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_untargeted_mostlikely": [[83, 100], ["model", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model.max", "loss.backward", "torch.zeros_like.grad.zero_", "torch.CrossEntropyLoss", "model", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "pgd_linf_untargeted_mostlikely", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct FGSM adversarial examples on the examples X\"\"\"", "\n", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "yp", "=", "model", "(", "X", ")", "\n", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_untargeted_maxce": [[102, 117], ["model().detach", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "loss.backward", "torch.zeros_like.grad.zero_", "model", "torch.KLDivLoss", "torch.log_softmax", "torch.softmax", "model", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "pgd_linf_untargeted_maxce", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "yp", "=", "model", "(", "X", ")", ".", "detach", "(", ")", "\n", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "KLDivLoss", "(", ")", "(", "F", ".", "log_softmax", "(", "model", "(", "X", "+", "delta", ")", ",", "dim", "=", "1", ")", ",", "F", ".", "softmax", "(", "yp", ",", "dim", "=", "1", ")", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_targ": [[119, 150], ["isinstance", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "loss.sum.sum", "loss.sum.backward", "torch.zeros_like.grad.zero_", "attack.gen_rand_labels", "attack.gen_least_likely_labels", "model.max", "model.gather", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels"], ["", "def", "pgd_linf_targ", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "use_y", "=", "True", ",", "\n", "num_iter", "=", "20", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct targeted adversarial examples on the examples X\"\"\"", "\n", "\n", "if", "isinstance", "(", "y_targ", ",", "str", ")", ":", "\n", "        ", "strlist", "=", "[", "'rand'", ",", "'leastlikely'", "]", "\n", "assert", "(", "y_targ", "in", "strlist", ")", "\n", "if", "y_targ", "==", "'rand'", ":", "\n", "            ", "y_targ", "=", "gen_rand_labels", "(", "y", ",", "num_classes", ")", "\n", "", "elif", "y_targ", "==", "'leastlikely'", ":", "\n", "            ", "y_targ", "=", "gen_least_likely_labels", "(", "model", ",", "X", ")", "\n", "\n", "\n", "", "", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "yp", "[", ":", ",", "y_targ", "]", "\n", "if", "not", "use_y", ":", "\n", "            ", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "", "loss", "=", "loss", "-", "yp", ".", "gather", "(", "1", ",", "y", "[", ":", ",", "None", "]", ")", "[", ":", ",", "0", "]", "\n", "loss", "=", "loss", ".", "sum", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_targ3": [[151, 178], ["isinstance", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "yp[].sum", "yp[].sum.backward", "torch.zeros_like.grad.zero_", "attack.gen_rand_labels", "attack.gen_least_likely_labels", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels"], ["", "def", "pgd_linf_targ3", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "\n", "num_iter", "=", "20", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Without using the label information\"\"\"", "\n", "\n", "if", "isinstance", "(", "y_targ", ",", "str", ")", ":", "\n", "        ", "strlist", "=", "[", "'rand'", ",", "'leastlikely'", "]", "\n", "assert", "(", "y_targ", "in", "strlist", ")", "\n", "if", "y_targ", "==", "'rand'", ":", "\n", "            ", "y_targ", "=", "gen_rand_labels", "(", "y", ",", "num_classes", ")", "\n", "", "elif", "y_targ", "==", "'leastlikely'", ":", "\n", "            ", "y_targ", "=", "gen_least_likely_labels", "(", "model", ",", "X", ")", "\n", "\n", "\n", "", "", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "yp", "[", ":", ",", "y_targ", "]", ".", "sum", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_targ2": [[179, 206], ["isinstance", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "loss.backward", "torch.zeros_like.grad.zero_", "attack.gen_rand_labels", "model.sum", "attack.gen_least_likely_labels", "yp[].sum", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels"], ["", "def", "pgd_linf_targ2", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "\n", "num_iter", "=", "20", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct targeted adversarial examples on the examples X\"\"\"", "\n", "\n", "if", "isinstance", "(", "y_targ", ",", "str", ")", ":", "\n", "        ", "strlist", "=", "[", "'rand'", ",", "'leastlikely'", "]", "\n", "assert", "(", "y_targ", "in", "strlist", ")", "\n", "if", "y_targ", "==", "'rand'", ":", "\n", "            ", "y_targ", "=", "gen_rand_labels", "(", "y", ",", "num_classes", ")", "\n", "", "elif", "y_targ", "==", "'leastlikely'", ":", "\n", "            ", "y_targ", "=", "gen_least_likely_labels", "(", "model", ",", "X", ")", "\n", "\n", "\n", "", "", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "2", "*", "yp", "[", ":", ",", "y_targ", "]", ".", "sum", "(", ")", "-", "yp", ".", "sum", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.pgd_linf_targ4": [[207, 234], ["isinstance", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "loss.backward", "torch.zeros_like.grad.zero_", "attack.gen_rand_labels", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "attack.gen_least_likely_labels", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels"], ["", "def", "pgd_linf_targ4", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "\n", "num_iter", "=", "20", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct targeted adversarial examples on the examples X\"\"\"", "\n", "\n", "if", "isinstance", "(", "y_targ", ",", "str", ")", ":", "\n", "        ", "strlist", "=", "[", "'rand'", ",", "'leastlikely'", "]", "\n", "assert", "(", "y_targ", "in", "strlist", ")", "\n", "if", "y_targ", "==", "'rand'", ":", "\n", "            ", "y_targ", "=", "gen_rand_labels", "(", "y", ",", "num_classes", ")", "\n", "", "elif", "y_targ", "==", "'leastlikely'", ":", "\n", "            ", "y_targ", "=", "gen_least_likely_labels", "(", "model", ",", "X", ")", "\n", "\n", "\n", "", "", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "yp", ",", "y", ")", "-", "nn", ".", "CrossEntropyLoss", "(", "yp", ",", "y_targ", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "+", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.deepfool": [[235, 278], ["model.eval", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "X.clone.clone", "X.clone.requires_grad_", "model", "[].item", "[].item", "delta.clamp.clamp", "delta.clamp.detach", "out[].backward", "X.clone.grad.data.clone", "range", "ri.clone", "X.clone.grad.data.zero_", "model", "[].item", "X.clone.grad.data.zero_", "out[].backward", "X.clone.grad.data.clone", "model.max", "model.max", "numpy.abs", "numpy.linalg.norm", "fi.item", "wi.cpu().numpy().flatten", "model.max", "numpy.linalg.norm", "wi.cpu().numpy", "wi.cpu().numpy().flatten", "wi.cpu", "wi.cpu().numpy", "wi.cpu"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "deepfool", "(", "model", ",", "X", ",", "y", ",", "epsilon", "=", "0.1", ",", "num_iter", "=", "50", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "delta", "=", "torch", ".", "zeros_like", "(", "X", ")", "\n", "X", "=", "X", ".", "clone", "(", ")", "\n", "X", ".", "requires_grad_", "(", ")", "\n", "\n", "out", "=", "model", "(", "X", "+", "delta", ")", "\n", "n_class", "=", "out", ".", "shape", "[", "1", "]", "\n", "py", "=", "out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "ny", "=", "out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "\n", "i_iter", "=", "0", "\n", "\n", "while", "py", "==", "ny", "and", "i_iter", "<", "num_iter", ":", "\n", "        ", "out", "[", "0", ",", "py", "]", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "grad_np", "=", "X", ".", "grad", ".", "data", ".", "clone", "(", ")", "\n", "value_l", "=", "np", ".", "inf", "\n", "ri", "=", "None", "\n", "\n", "for", "i", "in", "range", "(", "n_class", ")", ":", "\n", "            ", "if", "i", "==", "py", ":", "\n", "                ", "continue", "\n", "\n", "", "X", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "out", "[", "0", ",", "i", "]", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "grad_i", "=", "X", ".", "grad", ".", "data", ".", "clone", "(", ")", "\n", "\n", "wi", "=", "grad_i", "-", "grad_np", "\n", "fi", "=", "out", "[", "0", ",", "i", "]", "-", "out", "[", "0", ",", "py", "]", "\n", "value_i", "=", "np", ".", "abs", "(", "fi", ".", "item", "(", ")", ")", "/", "np", ".", "linalg", ".", "norm", "(", "wi", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ")", "\n", "\n", "if", "value_i", "<", "value_l", ":", "\n", "                ", "ri", "=", "value_i", "/", "np", ".", "linalg", ".", "norm", "(", "wi", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ")", "*", "wi", "\n", "\n", "", "", "delta", "+=", "ri", ".", "clone", "(", ")", "\n", "X", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "out", "=", "model", "(", "X", "+", "delta", ")", "\n", "py", "=", "out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "item", "(", ")", "\n", "i_iter", "+=", "1", "\n", "\n", "", "delta", "=", "delta", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "\n", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.one_pixel_perturb": [[282, 284], ["img.size"], "function", ["None"], ["", "def", "one_pixel_perturb", "(", "p", ",", "img", ")", ":", "\n", "    ", "img_size", "=", "img", ".", "size", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.one_pixel_evolve": [[285, 287], ["None"], "function", ["None"], ["", "def", "one_pixel_evolve", "(", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack.one_pixel_attack": [[288, 290], ["None"], "function", ["None"], ["", "def", "one_pixel_attack", "(", "model", ",", "X", ",", "y", ")", ":", "\n", "    ", "raise", "NotImplementedError", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.Flatten.forward": [[7, 9], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.MNIST_CNN.__init__": [[11, 20], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_channels", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "MNIST_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "num_channels", "[", "0", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "0", "]", ",", "num_channels", "[", "1", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "1", "]", ",", "num_channels", "[", "2", "]", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "2", "]", ",", "num_channels", "[", "3", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "7", "*", "7", "*", "num_channels", "[", "3", "]", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.MNIST_CNN.forward": [[21, 23], ["mnist_model.MNIST_CNN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseMNIST_CNN.__init__": [[26, 36], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sp1", ",", "sp2", ",", "func", ",", "num_channels", ",", "hidden_size", "=", "20000", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseMNIST_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "num_channels", "[", "0", "]", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "0", "]", ",", "num_channels", "[", "1", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "bias", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "1", "]", ",", "num_channels", "[", "2", "]", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "2", "]", ",", "num_channels", "[", "3", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "bias", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "7", "*", "7", "*", "num_channels", "[", "3", "]", ",", "hidden_size", ")", ",", "models", ".", "Sparsify1D", "(", "sp2", ")", ",", "\n", "#   nn.Linear(hidden_size, hidden_size), models.Sparsify1D(sp2),", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseMNIST_CNN.forward": [[37, 39], ["mnist_model.SparseMNIST_CNN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseMNIST_CNN_BN.__init__": [[42, 52], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2D", "torch.BatchNorm2D", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2D", "torch.BatchNorm2D", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2D", "torch.BatchNorm2D", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2D", "torch.BatchNorm2D", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sp1", ",", "sp2", ",", "func", ",", "num_channels", ",", "hidden_size", "=", "20000", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseMNIST_CNN_BN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "num_channels", "[", "0", "]", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", ",", "nn", ".", "BatchNorm2D", "(", "channels", "[", "0", "]", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "0", "]", ",", "num_channels", "[", "1", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "bias", ")", ",", "nn", ".", "BatchNorm2D", "(", "channels", "[", "1", "]", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "1", "]", ",", "num_channels", "[", "2", "]", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", ",", "nn", ".", "BatchNorm2D", "(", "channels", "[", "2", "]", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "num_channels", "[", "2", "]", ",", "num_channels", "[", "3", "]", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "bias", ")", ",", "nn", ".", "BatchNorm2D", "(", "channels", "[", "3", "]", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "7", "*", "7", "*", "num_channels", "[", "3", "]", ",", "hidden_size", ")", ",", "models", ".", "Sparsify1D", "(", "sp2", ")", ",", "\n", "#   nn.Linear(hidden_size, hidden_size), models.Sparsify1D(sp),", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseMNIST_CNN_BN.forward": [[53, 55], ["mnist_model.SparseMNIST_CNN_BN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.PartialMNIST_CNN.__init__": [[57, 66], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sp", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "PartialMNIST_CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ",", "models", ".", "sparse_func_dict", "[", "func", "]", "(", "sp1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "7", "*", "7", "*", "64", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.PartialMNIST_CNN.forward": [[67, 69], ["mnist_model.PartialMNIST_CNN.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "cnn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.DNN.__init__": [[72, 83], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "mnist_model.DNN.modules", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "isinstance", "m.weight.data.normal_", "m.bias.data.normal_", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", "=", "20000", ")", ":", "\n", "        ", "super", "(", "DNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nn", "=", "nn", ".", "Sequential", "(", "Flatten", "(", ")", ",", "nn", ".", "Linear", "(", "28", "*", "28", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ")", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "weight", ".", "data", ".", "shape", "[", "1", "]", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "1.", "/", "n", ")", ")", "\n", "m", ".", "bias", ".", "data", ".", "normal_", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.DNN.forward": [[85, 87], ["mnist_model.DNN.nn"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "nn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseDNN.__init__": [[90, 108], ["torch.Module.__init__", "mnist_model.SparseDNN.modules", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D_kactive", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D_kactive", "torch.Linear", "torch.Linear", "mnist_model.Flatten", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D", "torch.Linear", "torch.Linear", "DBA.models.Sparsify1D", "torch.Linear", "torch.Linear", "m.weight.data.normal_", "m.bias.data.zero_", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", "=", "20000", ",", "sp", "=", "0.5", ",", "bias", "=", "True", ",", "norm_factor", "=", "1", ",", "kact", "=", "False", ")", ":", "\n", "        ", "super", "(", "SparseDNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "kact", ":", "\n", "            ", "self", ".", "nn", "=", "nn", ".", "Sequential", "(", "Flatten", "(", ")", ",", "nn", ".", "Linear", "(", "28", "*", "28", ",", "hidden_size", ",", "bias", "=", "bias", ")", ",", "models", ".", "Sparsify1D_kactive", "(", "sp", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ",", "bias", "=", "bias", ")", ",", "models", ".", "Sparsify1D_kactive", "(", "sp", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ",", "bias", "=", "bias", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "nn", "=", "nn", ".", "Sequential", "(", "Flatten", "(", ")", ",", "nn", ".", "Linear", "(", "28", "*", "28", ",", "hidden_size", ",", "bias", "=", "bias", ")", ",", "models", ".", "Sparsify1D", "(", "sp", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ",", "bias", "=", "bias", ")", ",", "models", ".", "Sparsify1D", "(", "sp", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_size", ",", "10", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "weight", ".", "data", ".", "shape", "[", "1", "]", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "norm_factor", "*", "math", ".", "sqrt", "(", "1.", "/", "n", ")", ")", "\n", "# m.bias.data.normal_(0, 1)", "\n", "if", "bias", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.mnist_model.SparseDNN.forward": [[109, 111], ["mnist_model.SparseDNN.nn"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "nn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.AutoEncoder.__init__": [[22, 45], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.ReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AutoEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Input size: [batch, 3, 32, 32]", "\n", "# Output size: [batch, 3, 32, 32]", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "12", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 12, 16, 16]", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "12", ",", "24", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 24, 8, 8]", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "24", ",", "48", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 48, 4, 4]", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "# \t\t\tnn.Conv2d(48, 96, 4, stride=2, padding=1),           # [batch, 96, 2, 2]", "\n", "#             nn.ReLU(),", "\n", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "#             nn.ConvTranspose2d(96, 48, 4, stride=2, padding=1),  # [batch, 48, 4, 4]", "\n", "#             nn.ReLU(),", "\n", "nn", ".", "ConvTranspose2d", "(", "48", ",", "24", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 24, 8, 8]", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "24", ",", "12", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 12, 16, 16]", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "12", ",", "3", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "# [batch, 3, 32, 32]", "\n", "nn", ".", "Sigmoid", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.AutoEncoder.encode": [[47, 49], ["fcn.AutoEncoder.encoder"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.AutoEncoder.forward": [[50, 54], ["fcn.AutoEncoder.encoder", "fcn.AutoEncoder.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "encoded", "=", "self", ".", "encoder", "(", "x", ")", "\n", "decoded", "=", "self", ".", "decoder", "(", "encoded", ")", "\n", "return", "decoded", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.FCN8s.__init__": [[57, 123], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "fcn.FCN8s._initialize_weights", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.FCN8s._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "n_class", "=", "3", ")", ":", "\n", "        ", "super", "(", "FCN8s", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# conv1", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "padding", "=", "100", ")", "\n", "self", ".", "relu1_1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu1_2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "# 1/2", "\n", "\n", "# conv2", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu2_1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu2_2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "# 1/4", "\n", "\n", "# conv3", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu3_1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu3_2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv3_3", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu3_3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "# 1/8", "\n", "\n", "# conv4", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu4_1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv4_2", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu4_2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv4_3", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu4_3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "# 1/16", "\n", "\n", "# conv5", "\n", "self", ".", "conv5_1", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu5_1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv5_2", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu5_2", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv5_3", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu5_3", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "# 1/32", "\n", "\n", "# fc6", "\n", "self", ".", "fc6", "=", "nn", ".", "Conv2d", "(", "512", ",", "4096", ",", "7", ")", "\n", "self", ".", "relu6", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "drop6", "=", "nn", ".", "Dropout2d", "(", ")", "\n", "\n", "# fc7", "\n", "self", ".", "fc7", "=", "nn", ".", "Conv2d", "(", "4096", ",", "4096", ",", "1", ")", "\n", "self", ".", "relu7", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "drop7", "=", "nn", ".", "Dropout2d", "(", ")", "\n", "\n", "self", ".", "score_fr", "=", "nn", ".", "Conv2d", "(", "4096", ",", "n_class", ",", "1", ")", "\n", "self", ".", "score_pool3", "=", "nn", ".", "Conv2d", "(", "256", ",", "n_class", ",", "1", ")", "\n", "self", ".", "score_pool4", "=", "nn", ".", "Conv2d", "(", "512", ",", "n_class", ",", "1", ")", "\n", "\n", "self", ".", "upscore2", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "n_class", ",", "n_class", ",", "4", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "upscore8", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "n_class", ",", "n_class", ",", "16", ",", "stride", "=", "8", ",", "bias", "=", "False", ")", "\n", "self", ".", "upscore_pool4", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "n_class", ",", "n_class", ",", "4", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "self", ".", "sigm", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.FCN8s._initialize_weights": [[124, 135], ["fcn.FCN8s.modules", "isinstance", "isinstance", "m.weight.data.zero_", "fcn.get_upsampling_weight", "m.weight.data.copy_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.get_upsampling_weight"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "if", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "                ", "assert", "m", ".", "kernel_size", "[", "0", "]", "==", "m", ".", "kernel_size", "[", "1", "]", "\n", "initial_weight", "=", "get_upsampling_weight", "(", "\n", "m", ".", "in_channels", ",", "m", ".", "out_channels", ",", "m", ".", "kernel_size", "[", "0", "]", ")", "\n", "m", ".", "weight", ".", "data", ".", "copy_", "(", "initial_weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.FCN8s.forward": [[136, 194], ["fcn.FCN8s.relu1_1", "fcn.FCN8s.relu1_2", "fcn.FCN8s.pool1", "fcn.FCN8s.relu2_1", "fcn.FCN8s.relu2_2", "fcn.FCN8s.pool2", "fcn.FCN8s.relu3_1", "fcn.FCN8s.relu3_2", "fcn.FCN8s.relu3_3", "fcn.FCN8s.pool3", "fcn.FCN8s.relu4_1", "fcn.FCN8s.relu4_2", "fcn.FCN8s.relu4_3", "fcn.FCN8s.pool4", "fcn.FCN8s.relu5_1", "fcn.FCN8s.relu5_2", "fcn.FCN8s.relu5_3", "fcn.FCN8s.pool5", "fcn.FCN8s.relu6", "fcn.FCN8s.drop6", "fcn.FCN8s.relu7", "fcn.FCN8s.drop7", "fcn.FCN8s.score_fr", "fcn.FCN8s.upscore2", "fcn.FCN8s.score_pool4", "fcn.FCN8s.upscore_pool4", "fcn.FCN8s.score_pool3", "fcn.FCN8s.upscore8", "h[].contiguous", "fcn.FCN8s.sigm", "fcn.FCN8s.conv1_1", "fcn.FCN8s.conv1_2", "fcn.FCN8s.conv2_1", "fcn.FCN8s.conv2_2", "fcn.FCN8s.conv3_1", "fcn.FCN8s.conv3_2", "fcn.FCN8s.conv3_3", "fcn.FCN8s.conv4_1", "fcn.FCN8s.conv4_2", "fcn.FCN8s.conv4_3", "fcn.FCN8s.conv5_1", "fcn.FCN8s.conv5_2", "fcn.FCN8s.conv5_3", "fcn.FCN8s.fc6", "fcn.FCN8s.fc7", "upscore2.size", "upscore2.size", "upscore_pool4.size", "upscore_pool4.size", "x.size", "x.size"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "relu1_1", "(", "self", ".", "conv1_1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu1_2", "(", "self", ".", "conv1_2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool1", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu2_1", "(", "self", ".", "conv2_1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu2_2", "(", "self", ".", "conv2_2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool2", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu3_1", "(", "self", ".", "conv3_1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu3_2", "(", "self", ".", "conv3_2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu3_3", "(", "self", ".", "conv3_3", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool3", "(", "h", ")", "\n", "pool3", "=", "h", "# 1/8", "\n", "\n", "h", "=", "self", ".", "relu4_1", "(", "self", ".", "conv4_1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu4_2", "(", "self", ".", "conv4_2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu4_3", "(", "self", ".", "conv4_3", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool4", "(", "h", ")", "\n", "pool4", "=", "h", "# 1/16", "\n", "\n", "h", "=", "self", ".", "relu5_1", "(", "self", ".", "conv5_1", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu5_2", "(", "self", ".", "conv5_2", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "relu5_3", "(", "self", ".", "conv5_3", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "pool5", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu6", "(", "self", ".", "fc6", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "drop6", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "relu7", "(", "self", ".", "fc7", "(", "h", ")", ")", "\n", "h", "=", "self", ".", "drop7", "(", "h", ")", "\n", "\n", "h", "=", "self", ".", "score_fr", "(", "h", ")", "\n", "h", "=", "self", ".", "upscore2", "(", "h", ")", "\n", "upscore2", "=", "h", "# 1/16", "\n", "\n", "h", "=", "self", ".", "score_pool4", "(", "pool4", ")", "\n", "h", "=", "h", "[", ":", ",", ":", ",", "5", ":", "5", "+", "upscore2", ".", "size", "(", ")", "[", "2", "]", ",", "5", ":", "5", "+", "upscore2", ".", "size", "(", ")", "[", "3", "]", "]", "\n", "score_pool4c", "=", "h", "# 1/16", "\n", "\n", "h", "=", "upscore2", "+", "score_pool4c", "# 1/16", "\n", "h", "=", "self", ".", "upscore_pool4", "(", "h", ")", "\n", "upscore_pool4", "=", "h", "# 1/8", "\n", "\n", "h", "=", "self", ".", "score_pool3", "(", "pool3", ")", "\n", "h", "=", "h", "[", ":", ",", ":", ",", "\n", "9", ":", "9", "+", "upscore_pool4", ".", "size", "(", ")", "[", "2", "]", ",", "\n", "9", ":", "9", "+", "upscore_pool4", ".", "size", "(", ")", "[", "3", "]", "]", "\n", "score_pool3c", "=", "h", "# 1/8", "\n", "\n", "h", "=", "upscore_pool4", "+", "score_pool3c", "# 1/8", "\n", "\n", "h", "=", "self", ".", "upscore8", "(", "h", ")", "\n", "h", "=", "h", "[", ":", ",", ":", ",", "31", ":", "31", "+", "x", ".", "size", "(", ")", "[", "2", "]", ",", "31", ":", "31", "+", "x", ".", "size", "(", ")", "[", "3", "]", "]", ".", "contiguous", "(", ")", "\n", "h", "=", "self", ".", "sigm", "(", "h", ")", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.fcn.get_upsampling_weight": [[5, 19], ["numpy.zeros", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy", "torch.from_numpy", "abs", "abs", "range", "range"], "function", ["None"], ["def", "get_upsampling_weight", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ")", ":", "\n", "    ", "\"\"\"Make a 2D bilinear kernel suitable for upsampling\"\"\"", "\n", "factor", "=", "(", "kernel_size", "+", "1", ")", "//", "2", "\n", "if", "kernel_size", "%", "2", "==", "1", ":", "\n", "        ", "center", "=", "factor", "-", "1", "\n", "", "else", ":", "\n", "        ", "center", "=", "factor", "-", "0.5", "\n", "", "og", "=", "np", ".", "ogrid", "[", ":", "kernel_size", ",", ":", "kernel_size", "]", "\n", "filt", "=", "(", "1", "-", "abs", "(", "og", "[", "0", "]", "-", "center", ")", "/", "factor", ")", "*", "(", "1", "-", "abs", "(", "og", "[", "1", "]", "-", "center", ")", "/", "factor", ")", "\n", "weight", "=", "np", ".", "zeros", "(", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "kernel_size", ")", ",", "\n", "dtype", "=", "np", ".", "float64", ")", "\n", "weight", "[", "range", "(", "in_channels", ")", ",", "range", "(", "out_channels", ")", ",", ":", ",", ":", "]", "=", "filt", "\n", "return", "torch", ".", "from_numpy", "(", "weight", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.BasicBlock.__init__": [[13, 24], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.BasicBlock.forward": [[26, 32], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseBasicBlock.__init__": [[35, 51], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "sparsity", "=", "0.5", ",", "use_relu", "=", "True", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "SparseBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "use_relu", "=", "use_relu", "\n", "self", ".", "sparse1", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "self", ".", "sparse2", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseBasicBlock.forward": [[53, 64], ["resnet.SparseBasicBlock.bn1", "resnet.SparseBasicBlock.sparse1", "resnet.SparseBasicBlock.bn2", "resnet.SparseBasicBlock.shortcut", "resnet.SparseBasicBlock.sparse2", "resnet.SparseBasicBlock.conv1", "resnet.SparseBasicBlock.relu", "resnet.SparseBasicBlock.conv2", "resnet.SparseBasicBlock.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "if", "self", ".", "use_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "out", "=", "self", ".", "sparse1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "if", "self", ".", "use_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "out", "=", "self", ".", "sparse2", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.Bottleneck.__init__": [[68, 82], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.Bottleneck.forward": [[84, 91], ["resnet.Bottleneck.relu", "resnet.Bottleneck.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "resnet.Bottleneck.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseBottleneck.__init__": [[95, 116], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "sparsity", "=", "0.5", ",", "use_relu", "=", "True", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "sparse1", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "self", ".", "sparse2", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "self", ".", "sparse3", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "\n", "self", ".", "use_relu", "=", "use_relu", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseBottleneck.forward": [[118, 136], ["resnet.SparseBottleneck.bn1", "resnet.SparseBottleneck.sparse1", "resnet.SparseBottleneck.bn2", "resnet.SparseBottleneck.sparse2", "resnet.SparseBottleneck.bn3", "resnet.SparseBottleneck.shortcut", "resnet.SparseBottleneck.sparse3", "resnet.SparseBottleneck.conv1", "resnet.SparseBottleneck.relu", "resnet.SparseBottleneck.conv2", "resnet.SparseBottleneck.relu", "resnet.SparseBottleneck.conv3", "resnet.SparseBottleneck.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "if", "self", ".", "use_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "out", "=", "self", ".", "sparse1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "if", "self", ".", "use_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "out", "=", "self", ".", "sparse2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "\n", "if", "self", ".", "use_relu", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "out", "=", "self", ".", "sparse3", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet.__init__": [[139, 156], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.SparseResNet._make_layer", "resnet.SparseResNet._make_layer", "resnet.SparseResNet._make_layer", "resnet.SparseResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "sparsities", ",", "num_classes", "=", "10", ",", "use_relu", "=", "True", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "SparseResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "use_relu", "=", "use_relu", "\n", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ",", "sparsity", "=", "sparsities", "[", "0", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "1", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "2", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "3", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "activation", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet.get_activation": [[158, 162], ["output.cpu().detach", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet.register_layer": [[163, 165], ["layer.register_forward_hook", "resnet.SparseResNet.get_activation"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "register_layer", "(", "self", ",", "layer", ",", "name", ")", ":", "\n", "        ", "layer", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet._make_layer": [[166, 173], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ",", "sparsity", "=", "0.5", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ",", "sparsity", ",", "self", ".", "use_relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet.forward": [[174, 184], ["resnet.SparseResNet.relu", "resnet.SparseResNet.layer1", "resnet.SparseResNet.layer2", "resnet.SparseResNet.layer3", "resnet.SparseResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.SparseResNet.view", "resnet.SparseResNet.linear", "resnet.SparseResNet.bn1", "resnet.SparseResNet.size", "resnet.SparseResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet_ImageNet.__init__": [[187, 205], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.SparseResNet_ImageNet._make_layer", "resnet.SparseResNet_ImageNet._make_layer", "resnet.SparseResNet_ImageNet._make_layer", "resnet.SparseResNet_ImageNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "sparsities", ",", "num_classes", "=", "1000", ",", "sparse_func", "=", "'vol'", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "SparseResNet_ImageNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ",", "sparsity", "=", "sparsities", "[", "0", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "1", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "2", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ",", "sparsity", "=", "sparsities", "[", "3", "]", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "sp", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsities", "[", "0", "]", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "activation", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet_ImageNet.get_activation": [[207, 211], ["output.cpu().detach", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet_ImageNet.register_layer": [[212, 214], ["layer.register_forward_hook", "resnet.SparseResNet_ImageNet.get_activation"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "register_layer", "(", "self", ",", "layer", ",", "name", ")", ":", "\n", "        ", "layer", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet_ImageNet._make_layer": [[215, 222], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ",", "sparsity", "=", "0.5", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "True", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ",", "sparsity", ",", "use_relu", "=", "False", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet_ImageNet.forward": [[224, 234], ["resnet.SparseResNet_ImageNet.sp", "resnet.SparseResNet_ImageNet.layer1", "resnet.SparseResNet_ImageNet.layer2", "resnet.SparseResNet_ImageNet.layer3", "resnet.SparseResNet_ImageNet.layer4", "resnet.SparseResNet_ImageNet.avgpool", "resnet.SparseResNet_ImageNet.view", "resnet.SparseResNet_ImageNet.linear", "resnet.SparseResNet_ImageNet.bn1", "resnet.SparseResNet_ImageNet.size", "resnet.SparseResNet_ImageNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "sp", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet.__init__": [[236, 252], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "\n", "self", ".", "activation", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet.get_activation": [[254, 258], ["output.cpu().detach", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet.register_layer": [[259, 261], ["layer.register_forward_hook", "resnet.ResNet.get_activation"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "register_layer", "(", "self", ",", "layer", ",", "name", ")", ":", "\n", "        ", "layer", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet._make_layer": [[262, 269], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet.forward": [[270, 280], ["resnet.ResNet.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI.__init__": [[282, 298], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNetTI._make_layer", "resnet.ResNetTI._make_layer", "resnet.ResNetTI._make_layer", "resnet.ResNetTI._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNetTI", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "\n", "self", ".", "activation", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI.get_activation": [[300, 304], ["output.cpu().detach", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI.register_layer": [[305, 307], ["layer.register_forward_hook", "resnet.ResNetTI.get_activation"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "register_layer", "(", "self", ",", "layer", ",", "name", ")", ":", "\n", "        ", "layer", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI._make_layer": [[308, 315], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNetTI.forward": [[316, 327], ["resnet.ResNetTI.relu", "resnet.ResNetTI.layer1", "resnet.ResNetTI.layer2", "resnet.ResNetTI.layer3", "resnet.ResNetTI.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNetTI.view", "resnet.ResNetTI.linear", "resnet.ResNetTI.bn1", "resnet.ResNetTI.size", "resnet.ResNetTI.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "# print(out.shape)", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet18TI": [[328, 330], ["resnet.ResNetTI"], "function", ["None"], ["", "", "def", "ResNet18TI", "(", ")", ":", "\n", "    ", "return", "ResNetTI", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", "=", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet50TI": [[331, 333], ["resnet.ResNetTI"], "function", ["None"], ["", "def", "ResNet50TI", "(", ")", ":", "\n", "    ", "return", "ResNetTI", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "200", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet18": [[334, 336], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet34": [[337, 339], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet50": [[340, 342], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet101": [[343, 345], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.ResNet152": [[346, 348], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet18": [[349, 351], ["resnet.SparseResNet"], "function", ["None"], ["", "def", "SparseResNet18", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet", "(", "SparseBasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "sparsities", ",", "use_relu", "=", "relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet34": [[352, 354], ["resnet.SparseResNet"], "function", ["None"], ["", "def", "SparseResNet34", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet", "(", "SparseBasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "sparsities", ",", "use_relu", "=", "relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet50": [[355, 357], ["resnet.SparseResNet"], "function", ["None"], ["", "def", "SparseResNet50", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet", "(", "SparseBottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "sparsities", ",", "use_relu", "=", "relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet101": [[358, 360], ["resnet.SparseResNet"], "function", ["None"], ["", "def", "SparseResNet101", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet", "(", "SparseBottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "sparsities", ",", "use_relu", "=", "relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet152": [[361, 363], ["resnet.SparseResNet"], "function", ["None"], ["", "def", "SparseResNet152", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet", "(", "SparseBottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "sparsities", ",", "use_relu", "=", "relu", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.resnet.SparseResNet152_ImageNet": [[364, 366], ["resnet.SparseResNet_ImageNet"], "function", ["None"], ["", "def", "SparseResNet152_ImageNet", "(", "relu", "=", "False", ",", "sparsities", "=", "[", "0.5", ",", "0.4", ",", "0.3", ",", "0.2", "]", ",", "sparse_func", "=", "'reg'", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "SparseResNet_ImageNet", "(", "SparseBottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "sparsities", ",", "sparse_func", "=", "sparse_func", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseBottleneck.__init__": [[14, 23], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "growth_rate", ",", "sparsity", "=", "0.5", ",", "sparse_func", "=", "'reg'", ")", ":", "\n", "        ", "super", "(", "SparseBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "sparse_func", "in", "models", ".", "sparse_func_dict", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "4", "*", "growth_rate", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "growth_rate", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", "*", "growth_rate", ",", "growth_rate", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "sparse1", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "self", ".", "sparse2", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseBottleneck.forward": [[24, 29], ["densenet.SparseBottleneck.conv1", "densenet.SparseBottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet.SparseBottleneck.sparse1", "densenet.SparseBottleneck.sparse2", "densenet.SparseBottleneck.bn1", "densenet.SparseBottleneck.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "self", ".", "sparse1", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "self", ".", "sparse2", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "x", "]", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.Bottleneck.__init__": [[31, 37], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "growth_rate", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "4", "*", "growth_rate", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "growth_rate", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", "*", "growth_rate", ",", "growth_rate", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.Bottleneck.forward": [[38, 43], ["densenet.Bottleneck.conv1", "densenet.Bottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.Bottleneck.bn1", "densenet.Bottleneck.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "x", "]", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseTransition.__init__": [[45, 51], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "sparsity", "=", "0.5", ",", "sparse_func", "=", "'reg'", ")", ":", "\n", "        ", "super", "(", "SparseTransition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "sparse_func", "in", "models", ".", "sparse_func_dict", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "sparse", "=", "models", ".", "sparse_func_dict", "[", "sparse_func", "]", "(", "sparsity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseTransition.forward": [[52, 56], ["densenet.SparseTransition.conv", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.SparseTransition.sparse", "densenet.SparseTransition.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "self", ".", "sparse", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.Transition.__init__": [[59, 63], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.Transition.forward": [[64, 68], ["densenet.Transition.conv", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.Transition.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet.__init__": [[71, 101], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "math.floor", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet._make_dense_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "nblocks", ",", "growth_rate", "=", "12", ",", "reduction", "=", "0.5", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dense1", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "0", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans2", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense4", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "3", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "3", "]", "*", "growth_rate", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet._make_dense_layers": [[102, 108], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_dense_layers", "(", "self", ",", "block", ",", "in_planes", ",", "nblock", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nblock", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", ",", "self", ".", "growth_rate", ")", ")", "\n", "in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet.forward": [[109, 119], ["densenet.DenseNet.conv1", "densenet.DenseNet.trans1", "densenet.DenseNet.trans2", "densenet.DenseNet.trans3", "densenet.DenseNet.dense4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.DenseNet.view", "densenet.DenseNet.linear", "densenet.DenseNet.dense1", "densenet.DenseNet.dense2", "densenet.DenseNet.dense3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.DenseNet.size", "densenet.DenseNet.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet.__init__": [[121, 154], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.SparseDenseNet._make_sparsedense_layers", "int", "densenet.SparseTransition", "densenet.SparseDenseNet._make_sparsedense_layers", "int", "densenet.SparseTransition", "densenet.SparseDenseNet._make_sparsedense_layers", "int", "densenet.SparseTransition", "densenet.SparseDenseNet._make_sparsedense_layers", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "math.floor", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet._make_sparsedense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet._make_sparsedense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet._make_sparsedense_layers", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet._make_sparsedense_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "nblocks", ",", "sparse_func", ",", "sparsities", ",", "growth_rate", "=", "12", ",", "reduction", "=", "0.5", ",", "num_classes", "=", "10", ",", "in_channel", "=", "3", ")", ":", "\n", "        ", "super", "(", "SparseDenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sparse_func", "=", "sparse_func", "\n", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channel", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dense1", "=", "self", ".", "_make_sparsedense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "0", "]", ",", "sparsity", "=", "sparsities", "[", "0", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "SparseTransition", "(", "num_planes", ",", "out_planes", ",", "sparsity", "=", "sparsities", "[", "0", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_sparsedense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ",", "sparsity", "=", "sparsities", "[", "1", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans2", "=", "SparseTransition", "(", "num_planes", ",", "out_planes", ",", "sparsity", "=", "sparsities", "[", "1", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_sparsedense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ",", "sparsity", "=", "sparsities", "[", "2", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "SparseTransition", "(", "num_planes", ",", "out_planes", ",", "sparsity", "=", "sparsities", "[", "2", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense4", "=", "self", ".", "_make_sparsedense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "3", "]", ",", "sparsity", "=", "sparsities", "[", "3", "]", ",", "sparse_func", "=", "sparse_func", ")", "\n", "num_planes", "+=", "nblocks", "[", "3", "]", "*", "growth_rate", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet._make_sparsedense_layers": [[155, 161], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_sparsedense_layers", "(", "self", ",", "block", ",", "in_planes", ",", "nblock", ",", "sparsity", ",", "sparse_func", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nblock", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", ",", "self", ".", "growth_rate", ",", "sparsity", "=", "sparsity", ",", "sparse_func", "=", "sparse_func", ")", ")", "\n", "in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet.forward": [[162, 172], ["densenet.SparseDenseNet.conv1", "densenet.SparseDenseNet.trans1", "densenet.SparseDenseNet.trans2", "densenet.SparseDenseNet.trans3", "densenet.SparseDenseNet.dense4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "densenet.SparseDenseNet.view", "densenet.SparseDenseNet.linear", "densenet.SparseDenseNet.dense1", "densenet.SparseDenseNet.dense2", "densenet.SparseDenseNet.dense3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.SparseDenseNet.size", "densenet.SparseDenseNet.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet121": [[174, 176], ["densenet.DenseNet"], "function", ["None"], ["", "", "def", "DenseNet121", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet169": [[177, 179], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet169", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet201": [[180, 182], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet201", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.DenseNet161": [[183, 185], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet161", "(", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "growth_rate", "=", "48", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet121": [[186, 188], ["densenet.SparseDenseNet"], "function", ["None"], ["", "def", "SparseDenseNet121", "(", "sparse_func", ",", "sparsities", ",", "channel", "=", "3", ")", ":", "\n", "    ", "return", "SparseDenseNet", "(", "SparseBottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "sparse_func", ",", "sparsities", ",", "growth_rate", "=", "32", ",", "in_channel", "=", "channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet169": [[189, 191], ["densenet.SparseDenseNet"], "function", ["None"], ["", "def", "SparseDenseNet169", "(", "sparse_func", ",", "sparsities", ")", ":", "\n", "    ", "return", "SparseDenseNet", "(", "SparseBottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "sparse_func", ",", "sparsities", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet201": [[192, 194], ["densenet.SparseDenseNet"], "function", ["None"], ["", "def", "SparseDenseNet201", "(", "sparse_func", ",", "sparsities", ")", ":", "\n", "    ", "return", "SparseDenseNet", "(", "SparseBottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "sparse_func", ",", "sparsities", ",", "growth_rate", "=", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.densenet.SparseDenseNet161": [[195, 197], ["densenet.SparseDenseNet"], "function", ["None"], ["", "def", "SparseDenseNet161", "(", "sparse_func", ",", "sparsities", ")", ":", "\n", "    ", "return", "SparseDenseNet", "(", "SparseBottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "sparse_func", ",", "sparsities", ",", "growth_rate", "=", "48", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNetEnsemble.__init__": [[154, 164], ["torch.Module.__init__", "len"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "basemodel", ",", "advmodels", ",", "epsilon", ",", "stepsize", ",", "iters", ",", "randomize", ",", "adv_mode", "=", "'adv'", ")", ":", "\n", "        ", "super", "(", "OptNetEnsemble", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "basemodel", "=", "basemodel", "\n", "self", ".", "advmodels", "=", "advmodels", "\n", "assert", "(", "len", "(", "self", ".", "advmodels", ")", ">", "0", ")", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "stepsize", "=", "stepsize", "\n", "self", ".", "iters", "=", "iters", "\n", "self", ".", "randomize", "=", "randomize", "\n", "self", ".", "adv_mode", "=", "adv_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNetEnsemble.train": [[166, 170], ["optdefense.OptNetEnsemble.basemodel.train", "model.train"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "basemodel", ".", "train", "(", ")", "\n", "for", "model", "in", "self", ".", "advmodels", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNetEnsemble.eval": [[171, 175], ["optdefense.OptNetEnsemble.basemodel.eval", "model.eval"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "basemodel", ".", "eval", "(", ")", "\n", "for", "model", "in", "self", ".", "advmodels", ":", "\n", "            ", "model", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNetEnsemble.adversary": [[177, 196], ["random.choice", "optdefense.pgd_linf_untargeted_mostlikely", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "random.choice", "print", "optdefense.pgd_l2_untargeted_mostlikely"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_untargeted_mostlikely", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_l2_untargeted_mostlikely"], ["", "", "def", "adversary", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "adv_mode", "==", "'adv'", ":", "\n", "            ", "rd_model", "=", "random", ".", "choice", "(", "self", ".", "advmodels", ")", "\n", "return", "x", "+", "pgd_linf_untargeted_mostlikely", "(", "rd_model", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "self", ".", "randomize", ")", "\n", "", "elif", "self", ".", "adv_mode", "==", "'noise'", ":", "\n", "            ", "delta", "=", "torch", ".", "rand_like", "(", "x", ",", "requires_grad", "=", "False", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "self", ".", "epsilon", "-", "self", ".", "epsilon", "\n", "return", "x", "+", "delta", "\n", "", "elif", "self", ".", "adv_mode", "==", "'no'", ":", "\n", "            ", "return", "x", "\n", "", "elif", "self", ".", "adv_mode", "==", "'advl2'", ":", "\n", "            ", "rd_model", "=", "random", ".", "choice", "(", "self", ".", "advmodels", ")", "\n", "return", "x", "+", "pgd_l2_untargeted_mostlikely", "(", "rd_model", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "self", ".", "randomize", ")", "\n", "# elif self.adv_mode == 'll':", "\n", "# return x+pgd_linf_targ()", "\n", "\n", "", "else", ":", "\n", "            ", "print", "(", "'no such mode:'", ",", "self", ".", "adv_mode", ")", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNetEnsemble.forward": [[197, 200], ["optdefense.OptNetEnsemble.adversary", "optdefense.OptNetEnsemble.basemodel"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.adversary"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_prime", "=", "self", ".", "adversary", "(", "x", ")", "\n", "return", "self", ".", "basemodel", "(", "x_prime", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__": [[202, 211], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "basemodel", ",", "advmodel", ",", "epsilon", ",", "stepsize", ",", "iters", ",", "randomize", ",", "adv_mode", "=", "'adv'", ")", ":", "\n", "        ", "super", "(", "OptNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "basemodel", "=", "basemodel", "\n", "self", ".", "advmodel", "=", "advmodel", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "stepsize", "=", "stepsize", "\n", "self", ".", "iters", "=", "iters", "\n", "self", ".", "randomize", "=", "randomize", "\n", "self", ".", "adv_mode", "=", "adv_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train": [[213, 216], ["optdefense.OptNet.basemodel.train", "optdefense.OptNet.advmodel.eval"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "self", ".", "basemodel", ".", "train", "(", ")", "\n", "self", ".", "advmodel", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval": [[217, 220], ["optdefense.OptNet.basemodel.eval", "optdefense.OptNet.advmodel.eval"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "basemodel", ".", "eval", "(", ")", "\n", "self", ".", "advmodel", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.adversary": [[222, 243], ["optdefense.pgd_linf_untargeted_mostlikely", "optdefense.pgd_l2_untargeted_mostlikely", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "optdefense.attack_stn", "optdefense.pgd_linf_targ", "print", "optdefense.pgd_linf_targ"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_untargeted_mostlikely", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_l2_untargeted_mostlikely", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.attack_stn", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_targ", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_targ"], ["", "def", "adversary", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "adv_mode", "==", "'adv'", ":", "\n", "            ", "return", "x", "+", "pgd_linf_untargeted_mostlikely", "(", "self", ".", "advmodel", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "self", ".", "randomize", ")", "\n", "", "elif", "self", ".", "adv_mode", "==", "'advl2'", ":", "\n", "            ", "return", "x", "+", "pgd_l2_untargeted_mostlikely", "(", "self", ".", "advmodel", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "self", ".", "randomize", ")", "\n", "", "elif", "self", ".", "adv_mode", "==", "'noise'", ":", "\n", "            ", "delta", "=", "torch", ".", "rand_like", "(", "x", ",", "requires_grad", "=", "False", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "self", ".", "epsilon", "-", "self", ".", "epsilon", "\n", "return", "x", "+", "delta", "\n", "", "elif", "self", ".", "adv_mode", "==", "'stn'", ":", "\n", "            ", "x", ",", "aff", "=", "attack_stn", "(", "self", ".", "advmodel", ",", "x", ",", "self", ".", "epsilon", "[", "0", "]", ",", "self", ".", "epsilon", "[", "1", "]", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ")", "\n", "return", "x", "\n", "", "elif", "self", ".", "adv_mode", "==", "'no'", ":", "\n", "            ", "return", "x", "\n", "", "elif", "self", ".", "adv_mode", "==", "'ll'", ":", "\n", "            ", "return", "x", "+", "pgd_linf_targ", "(", "self", ".", "advmodel", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "y_targ", "=", "'leastlikely'", ",", "num_classes", "=", "10", ",", "randomize", "=", "self", ".", "randomize", ")", "\n", "", "elif", "self", ".", "adv_mode", "==", "'randtarg'", ":", "\n", "            ", "return", "x", "+", "pgd_linf_targ", "(", "self", ".", "advmodel", ",", "x", ",", "self", ".", "epsilon", ",", "self", ".", "stepsize", ",", "self", ".", "iters", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "self", ".", "randomize", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'no such mode:'", ",", "self", ".", "adv_mode", ")", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.forward": [[244, 249], ["optdefense.OptNet.adversary", "optdefense.OptNet.basemodel"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.adversary"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "##construct adversarial samples", "\n", "# delta = pgd_linf_untargeted_mostlikely(self.advmodel, x, self.epsilon, self.stepsize, self.iters, self.randomize)", "\n", "        ", "x_prime", "=", "self", ".", "adversary", "(", "x", ")", "\n", "return", "self", ".", "basemodel", "(", "x_prime", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.BPDA": [[250, 281], ["range", "torch.zeros_like.detach", "torch.zeros_like.detach", "torch.zeros_like.detach", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "x_adv.detach.detach.detach", "loss.backward", "optdefense.OptNet.adversary", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "optdefense.OptNet.basemodel", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "optdefense.OptNet.basemodel", "x_adv.detach.detach.grad.detach().clone", "x_adv.detach.detach.grad.detach().clone", "optdefense.OptNet.max", "x_adv.detach.detach.grad.detach", "x_adv.detach.detach.grad.detach", "x_adv.detach.grad.detach().clone.detach().sign", "x_adv.detach.grad.detach().clone.detach"], "methods", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.adversary"], ["", "def", "BPDA", "(", "self", ",", "x", ",", "stepsize", ",", "epsilon", ",", "samples", "=", "1", ",", "iters", "=", "20", ",", "randomize", "=", "True", ")", ":", "\n", "\n", "        ", "if", "randomize", ":", "\n", "            ", "delta", "=", "torch", ".", "rand_like", "(", "x", ",", "requires_grad", "=", "False", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "            ", "delta", "=", "torch", ".", "zeros_like", "(", "x", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "for", "t", "in", "range", "(", "iters", ")", ":", "\n", "            ", "grad", "=", "None", "\n", "for", "m", "in", "range", "(", "samples", ")", ":", "\n", "                ", "x_adv", "=", "self", ".", "adversary", "(", "x", "+", "delta", ")", "+", "x", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "yp", "=", "self", ".", "basemodel", "(", "x", ")", "\n", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "\n", "", "x_adv", "=", "x_adv", ".", "detach", "(", ")", "\n", "x_adv", ".", "requires_grad", "=", "True", "\n", "# x_adv = torch.tensor(x_adv, requires_grad=True)", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "self", ".", "basemodel", "(", "x_adv", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "grad", "is", "None", ":", "\n", "                    ", "grad", "=", "x_adv", ".", "grad", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "", "else", ":", "\n", "                    ", "grad", "+=", "x_adv", ".", "grad", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "", "", "grad", "=", "grad", "/", "m", "\n", "delta", ".", "data", "=", "(", "delta", "+", "stepsize", "*", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.attack_stn": [[18, 60], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "aff.clone.clone", "X.clone.clone", "aff.clone.retain_grad", "DBA.stn.stn", "loss.backward", "aff[].clamp_", "aff[].data.clamp_", "aff[].data.clamp_", "aff[].data.clamp_", "aff[].data.clamp_", "aff[].data.clamp_", "aff.clone.grad.zero_", "DBA.stn.stn().detach", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "model.max", "torch.CrossEntropyLoss", "model", "print", "print", "model", "model", "print", "print", "print", "loss.item", "model.max", "model.max", "aff.clone.grad.detach", "DBA.stn.stn", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.stn", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.stn"], ["def", "attack_stn", "(", "model", ",", "X", ",", "eps1", ",", "eps2", ",", "stepsize", "=", "0.01", ",", "num_iter", "=", "20", ",", "debug", "=", "False", ")", ":", "\n", "    ", "aff", "=", "torch", ".", "zeros", "(", "X", ".", "shape", "[", "0", "]", ",", "2", ",", "3", ",", "requires_grad", "=", "True", ")", ".", "to", "(", "X", ".", "device", ")", "\n", "aff", "[", ":", ",", "0", ",", "0", "]", "=", "1", "\n", "aff", "[", ":", ",", "1", ",", "1", "]", "=", "1", "\n", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "yp0", "=", "model", "(", "X", ")", "\n", "y0", "=", "yp0", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "aff", "=", "aff", ".", "clone", "(", ")", "\n", "X", "=", "X", ".", "clone", "(", ")", "\n", "aff", ".", "retain_grad", "(", ")", "\n", "affX", "=", "stn", ".", "stn", "(", "aff", ",", "X", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "affX", ")", ",", "y0", ")", "\n", "loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "# gd = torch.autograd.grad(loss, affX)[0]", "\n", "# print(gd)", "\n", "# print(aff.grad)", "\n", "if", "debug", ":", "\n", "            ", "print", "(", "'iter'", ",", "t", ",", "'loss'", ",", "loss", ".", "item", "(", ")", ")", "\n", "print", "(", "'grad'", ",", "aff", ".", "grad", ".", "shape", ")", "\n", "yp", "=", "model", "(", "X", ")", "\n", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "yp2", "=", "model", "(", "affX", ")", "\n", "y2", "=", "yp2", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "print", "(", "'prediction'", ",", "y", ")", "\n", "print", "(", "'prediction adv'", ",", "y2", ")", "\n", "print", "(", "'err'", ",", "(", "yp2", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", ")", "\n", "# print('aff0', aff[0,:,:])", "\n", "\n", "", "aff", ".", "data", "=", "aff", "+", "stepsize", "*", "aff", ".", "grad", ".", "detach", "(", ")", "\n", "aff", "[", ":", ",", "0", ",", "0", "]", ".", "clamp_", "(", "1", "-", "eps1", ",", "1", "+", "eps1", ")", "\n", "aff", "[", ":", ",", "0", ",", "1", "]", ".", "data", ".", "clamp_", "(", "-", "eps1", ",", "eps1", ")", "\n", "aff", "[", ":", ",", "0", ",", "2", "]", ".", "data", ".", "clamp_", "(", "-", "eps2", ",", "eps2", ")", "\n", "aff", "[", ":", ",", "1", ",", "0", "]", ".", "data", ".", "clamp_", "(", "-", "eps1", ",", "eps1", ")", "\n", "aff", "[", ":", ",", "1", ",", "1", "]", ".", "data", ".", "clamp_", "(", "1", "-", "eps1", ",", "1", "+", "eps1", ")", "\n", "aff", "[", ":", ",", "1", ",", "2", "]", ".", "data", ".", "clamp_", "(", "-", "eps2", ",", "eps2", ")", "\n", "# aff = aff.detach()", "\n", "aff", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "stn", ".", "stn", "(", "aff", ",", "X", ")", ".", "detach", "(", ")", ",", "aff", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels": [[62, 69], ["torch.randint_like", "torch.randint_like", "torch.randint_like", "torch.randint_like", "range", "model().min", "len", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "model"], "function", ["None"], ["", "def", "gen_rand_labels", "(", "model", ",", "X", ",", "num_classes", ")", ":", "\n", "    ", "y", "=", "model", "(", "X", ")", ".", "min", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "targets", "=", "torch", ".", "randint_like", "(", "y", ",", "low", "=", "0", ",", "high", "=", "num_classes", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "targets", ")", ")", ":", "\n", "        ", "while", "targets", "[", "i", "]", "==", "y", "[", "i", "]", ":", "\n", "            ", "targets", "[", "i", "]", "=", "torch", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "num_classes", ",", "size", "=", "(", "1", ",", ")", ")", "\n", "", "", "return", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels": [[71, 74], ["model", "model.min"], "function", ["None"], ["", "def", "gen_least_likely_labels", "(", "model", ",", "X", ")", ":", "\n", "    ", "preds", "=", "model", "(", "X", ")", "\n", "return", "preds", ".", "min", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_targ": [[75, 103], ["isinstance", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "model", "loss.backward", "torch.zeros_like.grad.zero_", "optdefense.gen_rand_labels", "torch.CrossEntropyLoss", "optdefense.gen_least_likely_labels", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_rand_labels", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.gen_least_likely_labels"], ["", "def", "pgd_linf_targ", "(", "model", ",", "X", ",", "epsilon", "=", "0.1", ",", "alpha", "=", "0.01", ",", "\n", "num_iter", "=", "20", ",", "y_targ", "=", "'rand'", ",", "num_classes", "=", "10", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct targeted adversarial examples on the examples X\"\"\"", "\n", "\n", "if", "isinstance", "(", "y_targ", ",", "str", ")", ":", "\n", "        ", "strlist", "=", "[", "'rand'", ",", "'leastlikely'", "]", "\n", "assert", "(", "y_targ", "in", "strlist", ")", "\n", "if", "y_targ", "==", "'rand'", ":", "\n", "            ", "y_targ", "=", "gen_rand_labels", "(", "model", ",", "X", ",", "num_classes", ")", "\n", "", "elif", "y_targ", "==", "'leastlikely'", ":", "\n", "            ", "y_targ", "=", "gen_least_likely_labels", "(", "model", ",", "X", ")", "\n", "\n", "\n", "", "", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "\n", "", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y_targ", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "=", "(", "delta", "-", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_untargeted_mostlikely": [[104, 123], ["range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "loss.backward", "torch.zeros_like.grad.zero_", "model.max", "torch.CrossEntropyLoss", "model", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach"], "function", ["None"], ["", "def", "pgd_linf_untargeted_mostlikely", "(", "model", ",", "X", ",", "epsilon", "=", "0.1", ",", "stepsize", "=", "0.01", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "\"\"\" Construct FGSM adversarial examples on the examples X\"\"\"", "\n", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", "*", "2", "*", "epsilon", "-", "epsilon", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", ")", "\n", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "delta", ".", "data", "=", "(", "delta", "+", "stepsize", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", ")", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms": [[124, 127], ["Z.view().norm", "Z.view"], "function", ["None"], ["", "def", "norms", "(", "Z", ")", ":", "\n", "    ", "\"\"\"Compute norms over all but the first dimension\"\"\"", "\n", "return", "Z", ".", "view", "(", "Z", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "1", ")", "[", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_l2_untargeted_mostlikely": [[129, 151], ["torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.zeros_like.detach", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "loss.backward", "torch.min", "torch.min", "torch.min", "torch.min", "torch.zeros_like.grad.zero_", "torch.max", "torch.max", "torch.max", "torch.max", "norms().clamp", "model.max", "torch.CrossEntropyLoss", "model", "optdefense.norms", "torch.max", "torch.max", "torch.max", "torch.max", "norms().clamp", "torch.zeros_like.detach", "torch.zeros_like.grad.detach", "torch.zeros_like.grad.detach", "torch.zeros_like.detach", "optdefense.norms", "optdefense.norms", "torch.zeros_like.detach", "torch.zeros_like.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.norms"], ["", "def", "pgd_l2_untargeted_mostlikely", "(", "model", ",", "X", ",", "epsilon", "=", "1.0", ",", "alpha", "=", "0.05", ",", "num_iter", "=", "20", ",", "randomize", "=", "False", ")", ":", "\n", "    ", "if", "randomize", ":", "\n", "        ", "delta", "=", "torch", ".", "rand_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "delta", ".", "data", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "delta", ".", "detach", "(", ")", ",", "-", "X", ")", ",", "1", "-", "X", ")", "# clip X+delta to [0,1]", "\n", "delta", ".", "data", "*=", "epsilon", "/", "norms", "(", "delta", ".", "detach", "(", ")", ")", ".", "clamp", "(", "min", "=", "epsilon", ")", "\n", "", "else", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "yp", "=", "model", "(", "X", ")", "\n", "y", "=", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "\n", "", "for", "t", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "model", "(", "X", "+", "delta", ")", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "delta", ".", "data", "+=", "alpha", "*", "delta", ".", "grad", ".", "detach", "(", ")", "/", "norms", "(", "delta", ".", "grad", ".", "detach", "(", ")", ")", "\n", "delta", ".", "data", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "delta", ".", "detach", "(", ")", ",", "-", "X", ")", ",", "1", "-", "X", ")", "# clip X+delta to [0,1]", "\n", "delta", ".", "data", "*=", "epsilon", "/", "norms", "(", "delta", ".", "detach", "(", ")", ")", ".", "clamp", "(", "min", "=", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "return", "delta", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.expected_delta": [[282, 299], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "X.repeat", "X.repeat", "int", "torch.cat.append", "optdefense.pgd_linf_untargeted_mostlikely", "pgd_linf_targ.detach().cpu().clone", "optdefense.pgd_linf_targ", "pgd_linf_targ.detach().cpu", "pgd_linf_targ.detach"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_untargeted_mostlikely", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.pgd_linf_targ"], ["", "", "def", "expected_delta", "(", "X", ",", "model", ",", "exp", ",", "batch_size", ",", "epsilon", ",", "stepsize", ",", "num_iter", ",", "attack", "=", "'untarg'", ")", ":", "\n", "    ", "if", "exp", "<", "batch_size", ":", "\n", "        ", "X0", "=", "X", ".", "repeat", "(", "exp", ",", "1", ",", "1", ",", "1", ")", "\n", "iters", "=", "1", "\n", "", "else", ":", "\n", "        ", "X0", "=", "X", ".", "repeat", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", "\n", "iters", "=", "int", "(", "exp", "/", "batch_size", ")", "\n", "\n", "", "adv_imgs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "iters", ")", ":", "\n", "        ", "if", "attack", "==", "'untarg'", ":", "\n", "            ", "delta", "=", "pgd_linf_untargeted_mostlikely", "(", "model", ",", "X0", ",", "epsilon", "=", "epsilon", ",", "stepsize", "=", "stepsize", ",", "num_iter", "=", "num_iter", ",", "randomize", "=", "True", ")", "\n", "", "elif", "attack", "==", "'ll'", ":", "\n", "            ", "delta", "=", "pgd_linf_targ", "(", "model", ",", "X0", ",", "epsilon", "=", "epsilon", ",", "alpha", "=", "stepsize", ",", "num_iter", "=", "num_iter", ",", "y_targ", "=", "'leastlikely'", ",", "num_classes", "=", "10", ",", "randomize", "=", "True", ")", "\n", "", "adv_imgs", ".", "append", "(", "delta", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "clone", "(", ")", ")", "\n", "", "adv_imgs", "=", "torch", ".", "cat", "(", "adv_imgs", ",", "dim", "=", "0", ")", "\n", "return", "adv_imgs", "", "", ""]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.isnotebook": [[17, 28], ["get_ipython"], "function", ["None"], ["def", "isnotebook", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "shell", "=", "get_ipython", "(", ")", ".", "__class__", ".", "__name__", "\n", "if", "shell", "==", "'ZMQInteractiveShell'", ":", "\n", "            ", "return", "True", "# Jupyter notebook or qtconsole", "\n", "", "elif", "shell", "==", "'TerminalInteractiveShell'", ":", "\n", "            ", "return", "False", "# Terminal running IPython", "\n", "", "else", ":", "\n", "            ", "return", "False", "# Other type (?)", "\n", "", "", "except", "NameError", ":", "\n", "        ", "return", "False", "# Probably standard Python interpreter", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch": [[35, 64], ["model.eval", "model.train", "tqdm", "model", "X.to", "y.to", "torch.CrossEntropyLoss", "opt.zero_grad", "loss.backward", "opt.step", "loss.item", "tqdm.update", "len", "len", "len", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "epoch", "(", "loader", ",", "model", ",", "opt", "=", "None", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ")", ":", "\n", "    ", "\"\"\"Standard training/evaluation epoch over the dataset\"\"\"", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "if", "opt", "is", "None", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "\n", "\n", "yp", "=", "model", "(", "X", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "if", "opt", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "total_err", "/", "len", "(", "loader", ".", "dataset", ")", ",", "total_loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_stn": [[65, 94], ["model.eval", "model.train", "tqdm", "DBA.stn.gen_rand_aff().to", "DBA.stn.stn", "model", "stn.stn.to", "y.to", "torch.CrossEntropyLoss", "opt.zero_grad", "loss.backward", "opt.step", "loss.item", "tqdm.update", "len", "len", "len", "DBA.stn.gen_rand_aff", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.stn", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.stn.gen_rand_aff"], ["", "def", "epoch_stn", "(", "loader", ",", "model", ",", "opt", "=", "None", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ",", "max_theta", "=", "0", ",", "max_d", "=", "0", ")", ":", "\n", "    ", "\"\"\"Standard training/evaluation epoch over the dataset\"\"\"", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "if", "opt", "is", "None", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "aff", "=", "stn", ".", "gen_rand_aff", "(", "max_theta", ",", "max_d", ",", "X", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "X", "=", "stn", ".", "stn", "(", "aff", ",", "X", ")", "\n", "yp", "=", "model", "(", "X", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "if", "opt", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "total_err", "/", "len", "(", "loader", ".", "dataset", ")", ",", "total_loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_transfer_train": [[95, 123], ["model_source.eval", "model_target.train", "model_source.to", "model_target.to", "tqdm", "DBA.attack", "model_target", "opt.zero_grad", "loss.backward", "opt.step", "X.to", "y.to", "torch.CrossEntropyLoss", "loss.item", "tqdm.update", "len", "len", "len", "model_target.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "epoch_transfer_train", "(", "loader", ",", "model_source", ",", "model_target", ",", "opt", ",", "attack", ",", "device", ",", "use_tqdm", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "model_source", ".", "eval", "(", ")", "\n", "model_target", ".", "train", "(", ")", "\n", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "", "model_source", ".", "to", "(", "device", ")", "\n", "model_target", ".", "to", "(", "device", ")", "\n", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "delta", "=", "attack", "(", "model_source", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "yp_target", "=", "model_target", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp_target", ",", "y", ")", "\n", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "total_err", "+=", "(", "yp_target", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "total_err", "/", "len", "(", "loader", ".", "dataset", ")", ",", "total_loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_transfer_attack": [[126, 167], ["model_source.eval", "model_target.eval", "model_source.to", "model_target.to", "tqdm", "DBA.attack", "X.to", "y.to", "model_target().detach", "model_source().detach", "tqdm.update", "model_target", "model_source", "model_source().detach.max", "model_target().detach.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "epoch_transfer_attack", "(", "loader", ",", "model_source", ",", "model_target", ",", "attack", ",", "device", ",", "success_only", "=", "False", ",", "use_tqdm", "=", "True", ",", "n_test", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "source_err", "=", "0.", "\n", "target_err", "=", "0.", "\n", "target_err2", "=", "0.", "\n", "\n", "success_total_n", "=", "0", "\n", "\n", "\n", "model_source", ".", "eval", "(", ")", "\n", "model_target", ".", "eval", "(", ")", "\n", "\n", "total_n", "=", "0", "\n", "\n", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "n_test", ")", "\n", "\n", "", "model_source", ".", "to", "(", "device", ")", "\n", "model_target", ".", "to", "(", "device", ")", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "delta", "=", "attack", "(", "model_source", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "\n", "if", "success_only", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "else", ":", "\n", "            ", "yp_target", "=", "model_target", "(", "X", "+", "delta", ")", ".", "detach", "(", ")", "\n", "yp_source", "=", "model_source", "(", "X", "+", "delta", ")", ".", "detach", "(", ")", "\n", "# yp_origin = model_target(X).detach()", "\n", "", "source_err", "+=", "(", "yp_source", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "target_err", "+=", "(", "yp_target", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "# target_err2 += (yp_origin.max(dim=1)[1] != y).sum().item()", "\n", "# success_total_n += (yp_origin.max(dim=1)[1] == y)", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "if", "n_test", "is", "not", "None", ":", "\n", "            ", "if", "total_n", ">=", "n_test", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "source_err", "/", "total_n", ",", "target_err", "/", "total_n", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_BPDA": [[168, 194], ["enumerate", "tqdm", "tqdm", "model.BPDA", "model.eval", "model", "X.to", "y.to", "torch.CrossEntropyLoss", "loss_nn.item", "tqdm.update", "len", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.BPDA", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "epoch_BPDA", "(", "loader", ",", "model", ",", "device", ",", "stepsize", ",", "epsilon", ",", "samples", "=", "1", ",", "iters", "=", "20", ",", "randomize", "=", "True", ",", "use_tqdm", "=", "True", ",", "epoch_test", "=", "None", ")", ":", "\n", "    ", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "total_n", "=", "0", "\n", "\n", "if", "epoch_test", "is", "None", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "", "else", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "epoch_test", ")", "\n", "\n", "", "for", "i", ",", "(", "X", ",", "y", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "delta", "=", "model", ".", "BPDA", "(", "X", ",", "stepsize", ",", "epsilon", ",", "samples", ",", "iters", ",", "randomize", ")", "\n", "model", ".", "eval", "(", ")", "\n", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss_nn", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "\n", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss_nn", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "", "if", "epoch_test", "is", "not", "None", ":", "\n", "            ", "if", "i", ">=", "epoch_test", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "total_err", "/", "total_n", ",", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_free_adversarial": [[196, 230], ["tqdm", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "len", "X.to", "y.to", "model.train", "model", "opt.zero_grad", "loss_nn.backward", "opt.step", "torch.zeros_like.data.clamp", "torch.zeros_like.grad.zero_", "tqdm.update", "torch.CrossEntropyLoss", "loss_nn.item", "torch.zeros_like.grad.detach().sign", "torch.zeros_like.grad.detach", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "epoch_free_adversarial", "(", "loader", ",", "model", ",", "m", ",", "epsilon", ",", "opt", ",", "device", ",", "use_tqdm", "=", "False", ")", ":", "\n", "    ", "\"\"\"free adversarial training\"\"\"", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "total_n", "=", "0", "\n", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "delta", "=", "torch", ".", "zeros_like", "(", "X", ",", "requires_grad", "=", "True", ")", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss_nn", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "\n", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss_nn", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "#update network", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss_nn", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "#update perturbation", "\n", "delta", ".", "data", "=", "delta", "+", "epsilon", "*", "delta", ".", "grad", ".", "detach", "(", ")", ".", "sign", "(", ")", "\n", "delta", ".", "data", "=", "delta", ".", "data", ".", "clamp", "(", "-", "epsilon", ",", "epsilon", ")", "\n", "delta", ".", "grad", ".", "zero_", "(", ")", "\n", "\n", "", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "total_err", "/", "total_n", ",", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_ALP": [[232, 273], ["model.train", "model.eval", "DBA.attack", "model.train", "model", "opt.zero_grad", "loss.backward", "opt.step", "tqdm", "tqdm", "X.to", "y.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "loss.item", "tqdm.update", "torch.CrossEntropyLoss", "len", "torch.MSELoss", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "epoch_ALP", "(", "loader", ",", "model", ",", "attack", ",", "alp_weight", "=", "0.5", ",", "\n", "opt", "=", "None", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ",", "n_test", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Adversarial Logit Pairing epoch over the dataset\"\"\"", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "\n", "# assert(opt is not None)", "\n", "model", ".", "train", "(", ")", "\n", "\n", "if", "use_tqdm", ":", "\n", "        ", "if", "n_test", "is", "None", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ".", "dataset", ")", ")", "\n", "", "else", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "n_test", ")", "\n", "", "", "total_n", "=", "0", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "clean_logit", "=", "model", "(", "X", ")", "\n", "", "delta", "=", "attack", "(", "model", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "+", "alp_weight", "*", "nn", ".", "MSELoss", "(", ")", "(", "yp", ",", "clean_logit", ")", "\n", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "n_test", "is", "not", "None", ":", "\n", "            ", "if", "total_n", ">=", "n_test", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "total_err", "/", "total_n", ",", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_adversarial": [[274, 315], ["model.eval", "model.train", "model.eval", "DBA.attack", "model", "tqdm", "tqdm", "X.to", "y.to", "model.train", "torch.CrossEntropyLoss", "opt.zero_grad", "loss.backward", "opt.step", "loss.item", "tqdm.update", "len", "model.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train"], ["", "def", "epoch_adversarial", "(", "loader", ",", "model", ",", "attack", ",", "\n", "opt", "=", "None", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ",", "n_test", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Adversarial training/evaluation epoch over the dataset\"\"\"", "\n", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "\n", "if", "opt", "is", "None", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "use_tqdm", ":", "\n", "        ", "if", "n_test", "is", "None", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ".", "dataset", ")", ")", "\n", "", "else", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "n_test", ")", "\n", "", "", "total_n", "=", "0", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "delta", "=", "attack", "(", "model", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "if", "opt", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "", "yp", "=", "model", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "if", "opt", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "n_test", "is", "not", "None", ":", "\n", "            ", "if", "total_n", ">=", "n_test", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "total_err", "/", "total_n", ",", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation": [[316, 320], ["output.cpu().detach", "output.cpu"], "function", ["None"], ["", "def", "get_activation", "(", "model", ",", "activation", ",", "name", ")", ":", "\n", "    ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "        ", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.register_layer": [[321, 323], ["layer.register_forward_hook", "training.get_activation"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.get_activation"], ["", "def", "register_layer", "(", "model", ",", "layer", ",", "activation", ",", "name", ")", ":", "\n", "    ", "layer", ".", "register_forward_hook", "(", "get_activation", "(", "model", ",", "activation", ",", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.squared_l2_norm": [[327, 330], ["x.view"], "function", ["None"], ["", "def", "squared_l2_norm", "(", "x", ")", ":", "\n", "    ", "flattened", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "return", "(", "flattened", "**", "2", ")", ".", "sum", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.l2_norm": [[332, 334], ["squared_l2_norm().sqrt", "training.squared_l2_norm"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.squared_l2_norm"], ["", "def", "l2_norm", "(", "x", ")", ":", "\n", "    ", "return", "squared_l2_norm", "(", "x", ")", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.trades_loss": [[336, 393], ["torch.KLDivLoss", "model.eval", "len", "model.train", "torch.autograd.Variable", "optimizer.zero_grad", "model", "torch.cross_entropy", "x_natural.detach", "range", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "nn.KLDivLoss.", "torch.randn_like().detach", "torch.randn_like().detach", "torch.randn_like().detach", "torch.randn_like().detach", "torch.clamp.requires_grad_", "torch.min", "torch.min", "torch.min", "torch.min", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "range", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.log_softmax", "torch.softmax", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "nn.KLDivLoss.", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.clamp.detach", "torch.max", "torch.max", "torch.max", "torch.max", "torch.clamp.requires_grad_", "range", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "model", "model", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.log_softmax", "torch.softmax", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "nn.KLDivLoss.", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "training.l2_norm", "training.l2_norm", "model", "model", "grad.detach", "torch.log_softmax", "torch.softmax", "x_adv[].detach", "model", "model", "training.l2_norm"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.l2_norm", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.l2_norm", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.l2_norm"], ["", "def", "trades_loss", "(", "model", ",", "\n", "x_natural", ",", "\n", "y", ",", "\n", "optimizer", ",", "\n", "step_size", "=", "0.003", ",", "\n", "epsilon", "=", "0.031", ",", "\n", "perturb_steps", "=", "10", ",", "\n", "beta", "=", "1.0", ",", "\n", "distance", "=", "'l_inf'", ")", ":", "\n", "# define KL-loss", "\n", "    ", "criterion_kl", "=", "nn", ".", "KLDivLoss", "(", "size_average", "=", "False", ")", "\n", "model", ".", "eval", "(", ")", "\n", "batch_size", "=", "len", "(", "x_natural", ")", "\n", "# generate adversarial example", "\n", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "0.001", "*", "torch", ".", "randn_like", "(", "x_natural", ")", ".", "detach", "(", ")", "\n", "if", "distance", "==", "'l_inf'", ":", "\n", "        ", "for", "_", "in", "range", "(", "perturb_steps", ")", ":", "\n", "            ", "x_adv", ".", "requires_grad_", "(", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "                ", "loss_kl", "=", "criterion_kl", "(", "F", ".", "log_softmax", "(", "model", "(", "x_adv", ")", ",", "dim", "=", "1", ")", ",", "\n", "F", ".", "softmax", "(", "model", "(", "x_natural", ")", ",", "dim", "=", "1", ")", ")", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_kl", ",", "[", "x_adv", "]", ")", "[", "0", "]", "\n", "x_adv", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "torch", ".", "sign", "(", "grad", ".", "detach", "(", ")", ")", "\n", "x_adv", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv", ",", "x_natural", "-", "epsilon", ")", ",", "x_natural", "+", "epsilon", ")", "\n", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "0.0", ",", "1.0", ")", "\n", "", "", "elif", "distance", "==", "'l_2'", ":", "\n", "        ", "for", "_", "in", "range", "(", "perturb_steps", ")", ":", "\n", "            ", "x_adv", ".", "requires_grad_", "(", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "                ", "loss_kl", "=", "criterion_kl", "(", "F", ".", "log_softmax", "(", "model", "(", "x_adv", ")", ",", "dim", "=", "1", ")", ",", "\n", "F", ".", "softmax", "(", "model", "(", "x_natural", ")", ",", "dim", "=", "1", ")", ")", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_kl", ",", "[", "x_adv", "]", ")", "[", "0", "]", "\n", "for", "idx_batch", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "grad_idx", "=", "grad", "[", "idx_batch", "]", "\n", "grad_idx_norm", "=", "l2_norm", "(", "grad_idx", ")", "\n", "grad_idx", "/=", "(", "grad_idx_norm", "+", "1e-8", ")", "\n", "x_adv", "[", "idx_batch", "]", "=", "x_adv", "[", "idx_batch", "]", ".", "detach", "(", ")", "+", "step_size", "*", "grad_idx", "\n", "eta_x_adv", "=", "x_adv", "[", "idx_batch", "]", "-", "x_natural", "[", "idx_batch", "]", "\n", "norm_eta", "=", "l2_norm", "(", "eta_x_adv", ")", "\n", "if", "norm_eta", ">", "epsilon", ":", "\n", "                    ", "eta_x_adv", "=", "eta_x_adv", "*", "epsilon", "/", "l2_norm", "(", "eta_x_adv", ")", "\n", "", "x_adv", "[", "idx_batch", "]", "=", "x_natural", "[", "idx_batch", "]", "+", "eta_x_adv", "\n", "", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "0.0", ",", "1.0", ")", "\n", "", "", "else", ":", "\n", "        ", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "0.0", ",", "1.0", ")", "\n", "", "model", ".", "train", "(", ")", "\n", "\n", "x_adv", "=", "Variable", "(", "torch", ".", "clamp", "(", "x_adv", ",", "0.0", ",", "1.0", ")", ",", "requires_grad", "=", "False", ")", "\n", "# zero gradient", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "# calculate robust loss", "\n", "logits", "=", "model", "(", "x_natural", ")", "\n", "loss_natural", "=", "F", ".", "cross_entropy", "(", "logits", ",", "y", ")", "\n", "loss_robust", "=", "(", "1.0", "/", "batch_size", ")", "*", "criterion_kl", "(", "F", ".", "log_softmax", "(", "model", "(", "x_adv", ")", ",", "dim", "=", "1", ")", ",", "\n", "F", ".", "softmax", "(", "model", "(", "x_natural", ")", ",", "dim", "=", "1", ")", ")", "\n", "loss", "=", "loss_natural", "+", "beta", "*", "loss_robust", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_trade": [[394, 416], ["model.train", "enumerate", "opt.zero_grad", "training.trades_loss", "trades_loss.backward", "opt.step", "data.to", "target.to"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.trades_loss"], ["", "def", "epoch_trade", "(", "loader", ",", "model", ",", "\n", "opt", ",", "device", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "# calculate robust loss", "\n", "loss", "=", "trades_loss", "(", "model", "=", "model", ",", "\n", "x_natural", "=", "data", ",", "\n", "y", "=", "target", ",", "\n", "optimizer", "=", "opt", ",", "\n", "**", "kwargs", ")", "\n", "#    step_size=args.step_size,", "\n", "#    epsilon=args.epsilon,", "\n", "#    perturb_steps=args.num_steps,", "\n", "#    beta=args.beta)", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "", "return", "0", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_recon": [[418, 446], ["model.to", "enumerate", "model.eval", "model.train", "tqdm", "imgs.to.to", "model", "criterion", "criterion.backward", "opt.zero_grad", "optnet.adversary", "opt.step", "criterion.item", "tqdm.update", "len"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.train", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.adversary"], ["", "def", "epoch_recon", "(", "loader", ",", "model", ",", "optnet", ",", "opt", ",", "criterion", ",", "device", ",", "use_tqdm", "=", "True", ")", ":", "\n", "    ", "total_loss", "=", "0", "\n", "total_n", "=", "0", "\n", "model", ".", "to", "(", "device", ")", "\n", "if", "opt", "is", "None", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "else", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ".", "dataset", ")", ")", "\n", "\n", "\n", "", "for", "i", ",", "(", "imgs", ",", "labels", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "to", "(", "device", ")", "\n", "out", "=", "model", "(", "imgs", ")", "\n", "if", "opt", "is", "not", "None", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "", "adv_img", "=", "optnet", ".", "adversary", "(", "imgs", ")", "+", "imgs", "\n", "loss", "=", "criterion", "(", "out", ",", "adv_img", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "opt", "is", "not", "None", ":", "\n", "            ", "opt", ".", "step", "(", ")", "\n", "", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "imgs", ".", "shape", "[", "0", "]", "\n", "total_n", "+=", "imgs", ".", "shape", "[", "0", "]", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "imgs", ".", "shape", "[", "0", "]", ")", "\n", "", "", "return", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_surrogate": [[447, 485], ["basemodel.eval", "ae.eval", "optnet.eval", "torch.Sequential", "nn.Sequential.eval", "DBA.attack", "optnet", "tqdm", "tqdm", "X.to", "y.to", "torch.CrossEntropyLoss", "loss.item", "tqdm.update", "len", "optnet.max"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval"], ["", "def", "epoch_surrogate", "(", "loader", ",", "basemodel", ",", "ae", ",", "optnet", ",", "attack", ",", "device", ",", "use_tqdm", "=", "True", ",", "n_test", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "total_loss", ",", "total_err", "=", "0.", ",", "0.", "\n", "\n", "basemodel", ".", "eval", "(", ")", "\n", "ae", ".", "eval", "(", ")", "\n", "optnet", ".", "eval", "(", ")", "\n", "\n", "surrogate_model", "=", "nn", ".", "Sequential", "(", "ae", ",", "basemodel", ")", "\n", "surrogate_model", ".", "eval", "(", ")", "\n", "\n", "if", "use_tqdm", ":", "\n", "        ", "if", "n_test", "is", "None", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ".", "dataset", ")", ")", "\n", "", "else", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "n_test", ")", "\n", "", "", "total_n", "=", "0", "\n", "\n", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "\n", "delta", "=", "attack", "(", "surrogate_model", ",", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "\n", "yp", "=", "optnet", "(", "X", "+", "delta", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "(", "yp", ",", "y", ")", "\n", "\n", "\n", "total_err", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "!=", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "X", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "total_n", "+=", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "n_test", "is", "not", "None", ":", "\n", "            ", "if", "total_n", ">=", "n_test", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "return", "total_err", "/", "total_n", ",", "total_loss", "/", "total_n", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.eval_robustness": [[528, 554], ["optnet.eval", "training.epoch", "print", "training.epoch_BPDA", "print", "copy.deepcopy", "training.epoch_transfer_attack", "print", "training.epoch_transfer_attack", "print"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.eval", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_BPDA", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_transfer_attack", "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.training.epoch_transfer_attack"], ["", "def", "eval_robustness", "(", "optnet", ",", "test_loader", ",", "device", ",", "use_tqdm", "=", "True", ",", "evalmethods", "=", "[", "]", ")", ":", "\n", "    ", "optnet", ".", "eval", "(", ")", "\n", "for", "evalmethod", "in", "evalmethods", ":", "\n", "        ", "if", "evalmethod", "[", "'name'", "]", "==", "'std'", ":", "\n", "            ", "test_err", ",", "test_loss", "=", "epoch", "(", "test_loader", ",", "optnet", ",", "device", "=", "device", ",", "use_tqdm", "=", "True", ")", "\n", "print", "(", "'standard acc:'", ",", "1", "-", "test_err", ")", "\n", "", "elif", "evalmethod", "[", "'name'", "]", "==", "'BPDA'", ":", "\n", "            ", "err", ",", "loss", "=", "epoch_BPDA", "(", "test_loader", ",", "optnet", ",", "device", "=", "device", ",", "\n", "stepsize", "=", "0.003", ",", "epsilon", "=", "0.031", ",", "\n", "samples", "=", "evalmethod", "[", "'samples'", "]", ",", "iters", "=", "evalmethod", "[", "'iters'", "]", ",", "randomize", "=", "True", ",", "use_tqdm", "=", "use_tqdm", ",", "epoch_test", "=", "evalmethod", "[", "'epoch_test'", "]", ")", "\n", "print", "(", "'BPDA:'", ",", "1", "-", "err", ")", "\n", "", "elif", "evalmethod", "[", "'name'", "]", "==", "'DA'", ":", "\n", "            ", "danet", "=", "copy", ".", "deepcopy", "(", "optnet", ".", "basemodel", ")", "\n", "source_err", ",", "err1", ",", "err2", "=", "epoch_transfer_attack", "(", "test_loader", ",", "\n", "danet", ",", "optnet", ",", "\n", "attack", "=", "attack", ".", "pgd_linf_untargeted", ",", "device", "=", "device", ",", "n_test", "=", "evalmethod", "[", "'n_test'", "]", ",", "use_tqdm", "=", "True", ",", "\n", "epsilon", "=", "0.031", ",", "alpha", "=", "0.003", ",", "num_iter", "=", "20", ",", "randomize", "=", "True", ")", "\n", "print", "(", "'DA:'", ",", "'source acc:'", ",", "1", "-", "source_err", ",", "'targ acc:'", ",", "1", "-", "err1", ")", "\n", "", "elif", "evalmethod", "[", "'name'", "]", "==", "'transfer'", ":", "\n", "            ", "net", "=", "evalmethod", "[", "'net'", "]", "\n", "name", "=", "evalmethod", "[", "'model_name'", "]", "\n", "source_err", ",", "err1", ",", "err2", "=", "epoch_transfer_attack", "(", "test_loader", ",", "\n", "net", ",", "optnet", ",", "\n", "attack", "=", "attack", ".", "pgd_linf_untargeted", ",", "device", "=", "device", ",", "n_test", "=", "evalmethod", "[", "'n_test'", "]", ",", "use_tqdm", "=", "True", ",", "\n", "epsilon", "=", "0.031", ",", "alpha", "=", "0.003", ",", "num_iter", "=", "20", ",", "randomize", "=", "True", ")", "\n", "print", "(", "'transfer from'", ",", "name", ",", "'source acc:'", ",", "1", "-", "source_err", ",", "'targ acc:'", ",", "1", "-", "err1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack_foolbox.isnotebook": [[7, 18], ["get_ipython"], "function", ["None"], ["def", "isnotebook", "(", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "shell", "=", "get_ipython", "(", ")", ".", "__class__", ".", "__name__", "\n", "if", "shell", "==", "'ZMQInteractiveShell'", ":", "\n", "            ", "return", "True", "# Jupyter notebook or qtconsole", "\n", "", "elif", "shell", "==", "'TerminalInteractiveShell'", ":", "\n", "            ", "return", "False", "# Terminal running IPython", "\n", "", "else", ":", "\n", "            ", "return", "False", "# Other type (?)", "\n", "", "", "except", "NameError", ":", "\n", "        ", "return", "False", "# Probably standard Python interpreter", "\n", "\n"]], "home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.attack_foolbox.epoch_foolbox": [[25, 60], ["tqdm", "attack", "X.numpy", "y.numpy", "tqdm.update", "numpy.argmax", "numpy.array", "fmodel.forward", "dists.append", "numpy.abs().max", "dists.append", "numpy.linalg.norm", "numpy.abs"], "function", ["home.repos.pwc.inspect_result.a554b554_DefenseByAttack.DBA.optdefense.OptNet.forward"], ["", "def", "epoch_foolbox", "(", "loader", ",", "fmodel", ",", "attack", ",", "use_tqdm", "=", "True", ",", "eps", "=", "0.031", ",", "n_test", "=", "1000", ",", "d", "=", "'linf'", ",", "**", "kwargs", ")", ":", "\n", "    ", "n_total", "=", "0", "\n", "n_err", "=", "0", "\n", "dists", "=", "[", "]", "\n", "\n", "ne_record", "=", "0", "\n", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "n_test", ")", "\n", "\n", "", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "numpy", "(", ")", ",", "y", ".", "numpy", "(", ")", "\n", "# X, y = X[0,:].numpy(), y.numpy()", "\n", "# print(X.shape, y)", "\n", "adv", "=", "attack", "(", "X", ",", "y", ",", "**", "kwargs", ")", "\n", "# print(adv.shape)", "\n", "if", "adv", "is", "not", "None", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "fmodel", ".", "forward", "(", "adv", ")", ")", "!=", "y", ":", "\n", "#attack success", "\n", "                ", "ne_record", "+=", "1", "\n", "# print('success', ne_record)", "\n", "if", "d", "==", "'linf'", ":", "\n", "                    ", "dists", ".", "append", "(", "np", ".", "abs", "(", "X", "-", "adv", ")", ".", "max", "(", ")", ")", "\n", "", "elif", "d", "==", "'l2'", ":", "\n", "                    ", "dists", ".", "append", "(", "np", ".", "linalg", ".", "norm", "(", "X", "-", "adv", ",", "ord", "=", "2", ")", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "NotImplementedError", "\n", "\n", "", "", "", "n_total", "+=", "1", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "if", "n_total", ">=", "n_test", ":", "\n", "            ", "break", "\n", "", "", "n_err", "=", "(", "np", ".", "array", "(", "dists", ")", "<=", "eps", "+", "0.001", ")", ".", "sum", "(", ")", "\n", "return", "n_err", "/", "n_total", ",", "dists", "", "", ""]]}