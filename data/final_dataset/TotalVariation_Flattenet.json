{"home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupMultiStepLR.__init__": [[21, 43], ["torch.optim.lr_scheduler._LRScheduler.__init__", "ValueError", "list", "sorted"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ",", "\n", "milestones", ":", "List", "[", "int", "]", ",", "\n", "gamma", ":", "float", "=", "0.1", ",", "\n", "warmup_factor", ":", "float", "=", "0.001", ",", "\n", "warmup_iters", ":", "int", "=", "1000", ",", "\n", "warmup_method", ":", "str", "=", "'linear'", ",", "\n", "last_epoch", ":", "int", "=", "-", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "if", "not", "list", "(", "milestones", ")", "==", "sorted", "(", "milestones", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Milestones should be a list of\"", "\n", "\" increasing integers. Got {}\"", ".", "format", "(", "milestones", ")", "\n", ")", "\n", "\n", "", "self", ".", "milestones", "=", "milestones", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "warmup_factor", "=", "warmup_factor", "\n", "self", ".", "warmup_iters", "=", "warmup_iters", "\n", "self", ".", "warmup_method", "=", "warmup_method", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupMultiStepLR.get_lr": [[44, 53], ["lr_scheduler._get_warmup_factor_at_iter", "bisect.bisect_right"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler._get_warmup_factor_at_iter"], ["", "def", "get_lr", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "        ", "warmup_factor", "=", "_get_warmup_factor_at_iter", "(", "\n", "self", ".", "warmup_method", ",", "self", ".", "last_epoch", ",", "self", ".", "warmup_iters", ",", "self", ".", "warmup_factor", "\n", ")", "\n", "return", "[", "\n", "base_lr", "\n", "*", "warmup_factor", "\n", "*", "self", ".", "gamma", "**", "bisect_right", "(", "self", ".", "milestones", ",", "self", ".", "last_epoch", ")", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupMultiStepLR._compute_values": [[54, 57], ["lr_scheduler.WarmupMultiStepLR.get_lr"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR.get_lr"], ["", "def", "_compute_values", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "# The new interface", "\n", "        ", "return", "self", ".", "get_lr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupPolyLR.__init__": [[60, 78], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ",", "\n", "max_iters", ":", "int", ",", "\n", "eta_min", ":", "float", "=", "1e-6", ",", "\n", "power", ":", "float", "=", "0.9", ",", "\n", "warmup_factor", ":", "float", "=", "0.001", ",", "\n", "warmup_iters", ":", "int", "=", "1000", ",", "\n", "warmup_method", ":", "str", "=", "'linear'", ",", "\n", "last_epoch", ":", "int", "=", "-", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "max_iters", "=", "max_iters", "\n", "self", ".", "eta_min", "=", "eta_min", "\n", "self", ".", "power", "=", "power", "\n", "self", ".", "warmup_factor", "=", "warmup_factor", "\n", "self", ".", "warmup_iters", "=", "warmup_iters", "\n", "self", ".", "warmup_method", "=", "warmup_method", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupPolyLR.get_lr": [[79, 89], ["lr_scheduler._get_warmup_factor_at_iter", "pow"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler._get_warmup_factor_at_iter"], ["", "def", "get_lr", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "        ", "warmup_factor", "=", "_get_warmup_factor_at_iter", "(", "\n", "self", ".", "warmup_method", ",", "self", ".", "last_epoch", ",", "self", ".", "warmup_iters", ",", "self", ".", "warmup_factor", "\n", ")", "\n", "return", "[", "\n", "self", ".", "eta_min", "\n", "+", "(", "base_lr", "-", "self", ".", "eta_min", ")", "\n", "*", "warmup_factor", "\n", "*", "pow", "(", "(", "1", "-", "1.0", "*", "self", ".", "last_epoch", "/", "self", ".", "max_iters", ")", ",", "self", ".", "power", ")", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupPolyLR._compute_values": [[90, 93], ["lr_scheduler.WarmupPolyLR.get_lr"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR.get_lr"], ["", "def", "_compute_values", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "# The new interface", "\n", "        ", "return", "self", ".", "get_lr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR.__init__": [[96, 113], ["torch.optim.lr_scheduler._LRScheduler.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "optimizer", ":", "torch", ".", "optim", ".", "Optimizer", ",", "\n", "max_iters", ":", "int", ",", "\n", "eta_min", ":", "float", "=", "1e-6", ",", "\n", "warmup_factor", ":", "float", "=", "0.001", ",", "\n", "warmup_iters", ":", "int", "=", "1000", ",", "\n", "warmup_method", ":", "str", "=", "\"linear\"", ",", "\n", "last_epoch", ":", "int", "=", "-", "1", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "self", ".", "max_iters", "=", "max_iters", "\n", "self", ".", "eta_min", "=", "eta_min", "\n", "self", ".", "warmup_factor", "=", "warmup_factor", "\n", "self", ".", "warmup_iters", "=", "warmup_iters", "\n", "self", ".", "warmup_method", "=", "warmup_method", "\n", "super", "(", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR.get_lr": [[114, 130], ["lr_scheduler._get_warmup_factor_at_iter", "numpy.cos"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler._get_warmup_factor_at_iter"], ["", "def", "get_lr", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "        ", "warmup_factor", "=", "_get_warmup_factor_at_iter", "(", "\n", "self", ".", "warmup_method", ",", "self", ".", "last_epoch", ",", "self", ".", "warmup_iters", ",", "self", ".", "warmup_factor", "\n", ")", "\n", "# Different definitions of half-cosine with warmup are possible. For", "\n", "# simplicity we multiply the standard half-cosine schedule by the warmup", "\n", "# factor. An alternative is to start the period of the cosine at warmup_iters", "\n", "# instead of at 0. In the case that warmup_iters << max_iters the two are", "\n", "# very close to each other.", "\n", "return", "[", "\n", "self", ".", "eta_min", "\n", "+", "(", "base_lr", "-", "self", ".", "eta_min", ")", "\n", "*", "warmup_factor", "\n", "*", "0.5", "\n", "*", "(", "1.0", "+", "np", ".", "cos", "(", "np", ".", "pi", "*", "self", ".", "last_epoch", "/", "self", ".", "max_iters", ")", ")", "\n", "for", "base_lr", "in", "self", ".", "base_lrs", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR._compute_values": [[132, 135], ["lr_scheduler.WarmupCosineLR.get_lr"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.WarmupCosineLR.get_lr"], ["", "def", "_compute_values", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "# The new interface", "\n", "        ", "return", "self", ".", "get_lr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.get_lr_scheduler": [[10, 18], ["None"], "function", ["None"], ["def", "get_lr_scheduler", "(", "name", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "name", "in", "_lr_scheduler", ",", "f'{name} LR Schuduler is Not implemented!'", "\n", "if", "kwargs", "[", "'last_epoch'", "]", "==", "0", ":", "\n", "        ", "kwargs", "[", "'last_epoch'", "]", "=", "-", "1", "\n", "", "else", ":", "\n", "        ", "kwargs", "[", "'last_epoch'", "]", "=", "kwargs", "[", "'last_epoch'", "]", "*", "kwargs", "[", "'epoch_iters'", "]", "\n", "\n", "", "return", "_lr_scheduler", "[", "name", "]", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler._get_warmup_factor_at_iter": [[144, 169], ["ValueError"], "function", ["None"], ["def", "_get_warmup_factor_at_iter", "(", "\n", "method", ":", "str", ",", "iter", ":", "int", ",", "warmup_iters", ":", "int", ",", "warmup_factor", ":", "float", "\n", ")", "->", "float", ":", "\n", "    ", "\"\"\"\n    Return the learning rate warmup factor at a specific iteration.\n    See https://arxiv.org/abs/1706.02677 for more details.\n    Args:\n        method (str): warmup method; either \"constant\" or \"linear\".\n        iter (int): iteration at which to calculate the warmup factor.\n        warmup_iters (int): the number of warmup iterations.\n        warmup_factor (float): the base warmup factor (the meaning changes according\n            to the method used).\n    Returns:\n        float: the effective warmup factor at the given iteration.\n    \"\"\"", "\n", "if", "iter", ">=", "warmup_iters", ":", "\n", "        ", "return", "1.0", "\n", "\n", "", "if", "method", "==", "\"constant\"", ":", "\n", "        ", "return", "warmup_factor", "\n", "", "elif", "method", "==", "\"linear\"", ":", "\n", "        ", "alpha", "=", "iter", "/", "warmup_iters", "\n", "return", "warmup_factor", "*", "(", "1", "-", "alpha", ")", "+", "alpha", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown warmup method: {}\"", ".", "format", "(", "method", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric._fast_hist": [[8, 18], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "function", ["None"], ["def", "_fast_hist", "(", "label_true", ",", "label_pred", ",", "n_class", ")", ":", "\n", "    ", "\"\"\"\n    compute confusion matrix\n    \"\"\"", "\n", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "n_class", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "n_class", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "label_pred", "[", "mask", "]", ",", "\n", "minlength", "=", "n_class", "**", "2", ",", "\n", ")", ".", "reshape", "(", "n_class", ",", "n_class", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.scores": [[20, 40], ["numpy.zeros", "zip", "numpy.nanmean", "numpy.nanmean", "dict", "metric._fast_hist", "numpy.diag().sum", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "numpy.diag", "np.zeros.sum", "np.zeros.sum", "np.zeros.sum", "zip", "lt.flatten", "lp.flatten", "numpy.diag", "range", "numpy.diag", "np.zeros.sum", "np.zeros.sum"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric._fast_hist"], ["", "def", "scores", "(", "label_trues", ",", "label_preds", ",", "n_class", ")", ":", "\n", "    ", "hist", "=", "np", ".", "zeros", "(", "(", "n_class", ",", "n_class", ")", ")", "\n", "for", "lt", ",", "lp", "in", "zip", "(", "label_trues", ",", "label_preds", ")", ":", "\n", "        ", "hist", "+=", "_fast_hist", "(", "lt", ".", "flatten", "(", ")", ",", "lp", ".", "flatten", "(", ")", ",", "n_class", ")", "\n", "", "acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "np", ".", "diag", "(", "hist", ")", "/", "(", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", ")", "\n", "valid", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", ">", "0", "# added", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", "[", "valid", "]", ")", "\n", "freq", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "cls_iu", "=", "dict", "(", "zip", "(", "range", "(", "n_class", ")", ",", "iu", ")", ")", "\n", "\n", "return", "{", "\n", "\"Overall Acc\"", ":", "acc", ",", "\n", "\"Mean Acc\"", ":", "acc_cls", ",", "\n", "\"FreqW Acc\"", ":", "fwavacc", ",", "\n", "\"Mean IoU\"", ":", "mean_iu", ",", "\n", "\"Class IoU\"", ":", "cls_iu", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.batch_pix_accuracy": [[43, 59], ["torch.max", "numpy.sum", "numpy.sum", "predict.cpu().numpy().astype", "target.cpu().numpy().astype", "predict.cpu().numpy", "target.cpu().numpy", "predict.cpu", "target.cpu"], "function", ["None"], ["", "def", "batch_pix_accuracy", "(", "output", ",", "target", ")", ":", "\n", "    ", "\"\"\"Batch Pixel Accuracy\n    Args:\n        predict: input 4D tensor\n        target: label 3D tensor\n    \"\"\"", "\n", "_", ",", "predict", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "\n", "\n", "predict", "=", "predict", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'int64'", ")", "+", "1", "\n", "target", "=", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'int64'", ")", "+", "1", "\n", "\n", "pixel_labeled", "=", "np", ".", "sum", "(", "target", ">", "0", ")", "\n", "pixel_correct", "=", "np", ".", "sum", "(", "(", "predict", "==", "target", ")", "*", "(", "target", ">", "0", ")", ")", "\n", "assert", "pixel_correct", "<=", "pixel_labeled", ",", "\"Correct area should be smaller than Labeled\"", "\n", "return", "pixel_correct", ",", "pixel_labeled", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.batch_intersection_union": [[61, 85], ["torch.max", "numpy.histogram", "numpy.histogram", "numpy.histogram", "predict.cpu().numpy().astype", "target.cpu().numpy().astype", "predict.cpu().numpy", "target.cpu().numpy", "predict.cpu", "target.cpu"], "function", ["None"], ["", "def", "batch_intersection_union", "(", "output", ",", "target", ",", "nclass", ")", ":", "\n", "    ", "\"\"\"Batch Intersection of Union\n    Args:\n        predict: input 4D tensor\n        target: label 3D tensor\n        nclass: number of categories (int)\n    \"\"\"", "\n", "_", ",", "predict", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "\n", "mini", "=", "1", "\n", "maxi", "=", "nclass", "\n", "nbins", "=", "nclass", "\n", "predict", "=", "predict", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'int64'", ")", "+", "1", "\n", "target", "=", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'int64'", ")", "+", "1", "\n", "\n", "predict", "=", "predict", "*", "(", "target", ">", "0", ")", ".", "astype", "(", "predict", ".", "dtype", ")", "\n", "intersection", "=", "predict", "*", "(", "predict", "==", "target", ")", "\n", "# areas of intersection and union", "\n", "area_inter", ",", "_", "=", "np", ".", "histogram", "(", "intersection", ",", "bins", "=", "nbins", ",", "range", "=", "(", "mini", ",", "maxi", ")", ")", "\n", "area_pred", ",", "_", "=", "np", ".", "histogram", "(", "predict", ",", "bins", "=", "nbins", ",", "range", "=", "(", "mini", ",", "maxi", ")", ")", "\n", "area_lab", ",", "_", "=", "np", ".", "histogram", "(", "target", ",", "bins", "=", "nbins", ",", "range", "=", "(", "mini", ",", "maxi", ")", ")", "\n", "area_union", "=", "area_pred", "+", "area_lab", "-", "area_inter", "\n", "assert", "(", "area_inter", "<=", "area_union", ")", ".", "all", "(", ")", ",", "\"Intersection area should be smaller than Union area\"", "\n", "return", "area_inter", ",", "area_union", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.modelsummary.get_model_summary": [[21, 136], ["collections.namedtuple", "model.eval", "model.apply", "model", "hook.remove", "str", "isinstance", "isinstance", "isinstance", "summary.append", "hooks.append", "str", "module.parameters", "isinstance", "hasattr", "isinstance", "collections.namedtuple.", "isinstance", "isinstance", "module.register_forward_hook", "param_.view().size", "list", "list", "param_.view", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "input[].size", "output.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.prod", "torch.prod", "input.size", "list", "torch.LongTensor", "torch.LongTensor", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "module.weight.data.size", "list", "list", "str", "str", "str", "str", "output.size", "output.size"], "function", ["None"], ["def", "get_model_summary", "(", "model", ",", "input_tensor", ",", "item_length", "=", "26", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    :param model:\n    :param input_tensors:\n    :param item_length:\n    :return:\n    \"\"\"", "\n", "\n", "summary", "=", "[", "]", "\n", "\n", "ModuleDetails", "=", "namedtuple", "(", "\n", "\"Layer\"", ",", "[", "\"name\"", ",", "\"input_size\"", ",", "\"output_size\"", ",", "\"num_parameters\"", ",", "\"multiply_adds\"", "]", ")", "\n", "hooks", "=", "[", "]", "\n", "layer_instances", "=", "{", "}", "\n", "\n", "def", "add_hooks", "(", "module", ")", ":", "\n", "\n", "        ", "def", "hook", "(", "module", ",", "input", ",", "output", ")", ":", "\n", "            ", "class_name", "=", "str", "(", "module", ".", "__class__", ".", "__name__", ")", "\n", "\n", "instance_index", "=", "1", "\n", "if", "class_name", "not", "in", "layer_instances", ":", "\n", "                ", "layer_instances", "[", "class_name", "]", "=", "instance_index", "\n", "", "else", ":", "\n", "                ", "instance_index", "=", "layer_instances", "[", "class_name", "]", "+", "1", "\n", "layer_instances", "[", "class_name", "]", "=", "instance_index", "\n", "\n", "", "layer_name", "=", "class_name", "+", "\"_\"", "+", "str", "(", "instance_index", ")", "\n", "\n", "if", "isinstance", "(", "input", "[", "0", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "input", "=", "input", "[", "0", "]", "\n", "", "if", "isinstance", "(", "output", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "output", "=", "output", "[", "0", "]", "\n", "\n", "", "params", "=", "0", "\n", "if", "isinstance", "(", "module", ",", "(", "_ConvNd", ",", "_BatchNorm", ",", "nn", ".", "Linear", ")", ")", ":", "\n", "                ", "for", "param_", "in", "module", ".", "parameters", "(", ")", ":", "\n", "                    ", "params", "+=", "param_", ".", "view", "(", "-", "1", ")", ".", "size", "(", "0", ")", "\n", "\n", "", "", "flops", "=", "\"Not Available\"", "\n", "if", "isinstance", "(", "module", ",", "_ConvNd", ")", "and", "hasattr", "(", "module", ",", "\"weight\"", ")", ":", "\n", "                ", "flops", "=", "(", "\n", "torch", ".", "prod", "(", "# having considered groups", "\n", "torch", ".", "LongTensor", "(", "list", "(", "module", ".", "weight", ".", "data", ".", "size", "(", ")", ")", ")", ")", "*", "\n", "torch", ".", "prod", "(", "\n", "torch", ".", "LongTensor", "(", "list", "(", "output", ".", "size", "(", ")", ")", "[", "2", ":", "]", ")", ")", ")", ".", "item", "(", ")", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "flops", "=", "(", "torch", ".", "prod", "(", "torch", ".", "LongTensor", "(", "list", "(", "output", ".", "size", "(", ")", ")", ")", ")", "\n", "*", "input", ".", "size", "(", "-", "1", ")", ")", ".", "item", "(", ")", "\n", "\n", "", "summary", ".", "append", "(", "\n", "ModuleDetails", "(", "\n", "name", "=", "layer_name", ",", "\n", "input_size", "=", "list", "(", "input", "[", "0", "]", ".", "size", "(", ")", ")", ",", "\n", "output_size", "=", "list", "(", "output", ".", "size", "(", ")", ")", ",", "\n", "num_parameters", "=", "params", ",", "\n", "multiply_adds", "=", "flops", ")", "\n", ")", "\n", "\n", "", "if", "not", "isinstance", "(", "module", ",", "nn", ".", "ModuleList", ")", "and", "not", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", "and", "module", "!=", "model", ":", "\n", "            ", "hooks", ".", "append", "(", "module", ".", "register_forward_hook", "(", "hook", ")", ")", "\n", "\n", "", "", "model", ".", "eval", "(", ")", "\n", "model", ".", "apply", "(", "add_hooks", ")", "\n", "\n", "space_len", "=", "item_length", "\n", "\n", "model", "(", "input_tensor", ")", "\n", "for", "hook", "in", "hooks", ":", "\n", "        ", "hook", ".", "remove", "(", ")", "\n", "\n", "", "details", "=", "''", "\n", "if", "verbose", ":", "\n", "        ", "details", "=", "\"Model Summary\"", "+", "os", ".", "linesep", "+", "\"Name{}Input Size{}Output Size{}Parameters{}Multiply Adds (Flops){}\"", ".", "format", "(", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "\"Name\"", ")", ")", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "\"Input Size\"", ")", ")", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "\"Output Size\"", ")", ")", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "\"Parameters\"", ")", ")", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "\"Multiply Adds (Flops)\"", ")", ")", ")", "+", "os", ".", "linesep", "+", "'-'", "*", "space_len", "*", "5", "+", "os", ".", "linesep", "\n", "\n", "", "params_sum", "=", "0", "\n", "flops_sum", "=", "0", "\n", "for", "layer", "in", "summary", ":", "\n", "        ", "params_sum", "+=", "layer", ".", "num_parameters", "\n", "if", "layer", ".", "multiply_adds", "!=", "\"Not Available\"", ":", "\n", "            ", "flops_sum", "+=", "layer", ".", "multiply_adds", "\n", "", "if", "verbose", ":", "\n", "            ", "details", "+=", "\"{}{}{}{}{}{}{}{}{}{}\"", ".", "format", "(", "\n", "layer", ".", "name", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "layer", ".", "name", ")", ")", ",", "\n", "layer", ".", "input_size", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "str", "(", "layer", ".", "input_size", ")", ")", ")", ",", "\n", "layer", ".", "output_size", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "str", "(", "layer", ".", "output_size", ")", ")", ")", ",", "\n", "layer", ".", "num_parameters", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "str", "(", "layer", ".", "num_parameters", ")", ")", ")", ",", "\n", "layer", ".", "multiply_adds", ",", "\n", "' '", "*", "(", "space_len", "-", "len", "(", "str", "(", "layer", ".", "multiply_adds", ")", ")", ")", ")", "+", "os", ".", "linesep", "+", "'-'", "*", "space_len", "*", "5", "+", "os", ".", "linesep", "\n", "\n", "", "", "details", "+=", "os", ".", "linesep", "+", "\"Total Parameters: {:,}\"", ".", "format", "(", "params_sum", ")", "+", "os", ".", "linesep", "+", "'-'", "*", "space_len", "*", "5", "+", "os", ".", "linesep", "\n", "details", "+=", "\"Total Multiply Adds (For Convolution and Linear Layers only): {:,} GFLOPs\"", ".", "format", "(", "flops_sum", "/", "(", "1024", "**", "3", ")", ")", "+", "os", ".", "linesep", "+", "'-'", "*", "space_len", "*", "5", "+", "os", ".", "linesep", "\n", "details", "+=", "\"Number of Layers\"", "+", "os", ".", "linesep", "\n", "for", "layer", "in", "layer_instances", ":", "\n", "        ", "details", "+=", "\"{} : {} layers   \"", ".", "format", "(", "layer", ",", "layer_instances", "[", "layer", "]", ")", "\n", "\n", "", "return", "details", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.FullModel.__init__": [[31, 35], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "loss", ")", ":", "\n", "    ", "super", "(", "FullModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "loss", "=", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.FullModel.forward": [[36, 40], ["utils.FullModel.model", "utils.FullModel.loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "labels", ")", ":", "\n", "    ", "outputs", "=", "self", ".", "model", "(", "inputs", ")", "\n", "loss", "=", "self", ".", "loss", "(", "outputs", ",", "labels", ")", "\n", "return", "loss", ",", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.__init__": [[57, 63], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "False", "\n", "self", ".", "val", "=", "None", "\n", "self", ".", "avg", "=", "None", "\n", "self", ".", "sum", "=", "None", "\n", "self", ".", "count", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.initialize": [[64, 70], ["None"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "val", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "avg", "=", "val", "\n", "self", ".", "sum", "=", "val", "*", "weight", "\n", "self", ".", "count", "=", "weight", "\n", "self", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update": [[71, 76], ["utils.AverageMeter.initialize", "utils.AverageMeter.add"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.initialize", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.add"], ["", "def", "update", "(", "self", ",", "val", ",", "weight", "=", "1", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "self", ".", "initialize", "(", "val", ",", "weight", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add", "(", "val", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.add": [[77, 82], ["None"], "methods", ["None"], ["", "", "def", "add", "(", "self", ",", "val", ",", "weight", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "weight", "\n", "self", ".", "count", "+=", "weight", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.value": [[83, 85], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average": [[86, 88], ["None"], "methods", ["None"], ["", "def", "average", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size": [[42, 46], ["torch.distributed.get_world_size", "torch.distributed.get_world_size", "torch.distributed.is_initialized", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size"], ["", "", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "torch", ".", "distributed", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "", "return", "torch", ".", "distributed", ".", "get_world_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_rank": [[48, 52], ["torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.is_initialized", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_rank", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_rank"], ["", "def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "torch", ".", "distributed", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n", "", "return", "torch", ".", "distributed", ".", "get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.create_logger": [[90, 123], ["pathlib.Path", "print", "final_output_dir.mkdir", "time.strftime", "logging.basicConfig", "logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.getLogger().addHandler", "print", "tensorboard_log_dir.mkdir", "pathlib.Path.exists", "print", "pathlib.Path.mkdir", "os.path.basename().split", "str", "str", "str", "logging.getLogger", "os.path.basename", "pathlib.Path"], "function", ["None"], ["", "", "def", "create_logger", "(", "cfg", ",", "cfg_name", ",", "phase", "=", "'train'", ")", ":", "\n", "    ", "root_output_dir", "=", "Path", "(", "cfg", ".", "OUTPUT_DIR", ")", "\n", "# set up logger", "\n", "if", "not", "root_output_dir", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "'=> creating {}'", ".", "format", "(", "root_output_dir", ")", ")", "\n", "root_output_dir", ".", "mkdir", "(", ")", "\n", "\n", "", "dataset", "=", "cfg", ".", "DATASET", ".", "DATASET", "\n", "model", "=", "cfg", ".", "MODEL", ".", "NAME", "\n", "cfg_name", "=", "os", ".", "path", ".", "basename", "(", "cfg_name", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "final_output_dir", "=", "root_output_dir", "/", "dataset", "/", "cfg_name", "\n", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "final_output_dir", ")", ")", "\n", "final_output_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "time_str", "=", "time", ".", "strftime", "(", "'%Y-%m-%d-%H-%M'", ")", "\n", "log_file", "=", "'{}_{}_{}.log'", ".", "format", "(", "cfg_name", ",", "time_str", ",", "phase", ")", "\n", "final_log_file", "=", "final_output_dir", "/", "log_file", "\n", "head", "=", "'%(asctime)-15s %(message)s'", "\n", "logging", ".", "basicConfig", "(", "filename", "=", "str", "(", "final_log_file", ")", ",", "\n", "format", "=", "head", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "\n", "tensorboard_log_dir", "=", "Path", "(", "cfg", ".", "LOG_DIR", ")", "/", "dataset", "/", "model", "/", "(", "cfg_name", "+", "'_'", "+", "time_str", ")", "\n", "print", "(", "'=> creating {}'", ".", "format", "(", "tensorboard_log_dir", ")", ")", "\n", "tensorboard_log_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "return", "logger", ",", "str", "(", "final_output_dir", ")", ",", "str", "(", "tensorboard_log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_confusion_matrix": [[125, 149], ["pred.cpu().numpy().transpose", "numpy.asarray", "numpy.asarray", "numpy.bincount", "numpy.zeros", "range", "numpy.argmax", "range", "pred.cpu().numpy", "label.cpu().numpy", "len", "pred.cpu", "label.cpu"], "function", ["None"], ["", "def", "get_confusion_matrix", "(", "label", ",", "pred", ",", "size", ",", "num_class", ",", "ignore", "=", "-", "1", ")", ":", "\n", "    ", "\"\"\"\n    Calcute the confusion matrix by given label and pred\n    \"\"\"", "\n", "output", "=", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "seg_pred", "=", "np", ".", "asarray", "(", "np", ".", "argmax", "(", "output", ",", "axis", "=", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "seg_gt", "=", "np", ".", "asarray", "(", "\n", "label", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", "size", "[", "-", "2", "]", ",", ":", "size", "[", "-", "1", "]", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "ignore_index", "=", "seg_gt", "!=", "ignore", "\n", "seg_gt", "=", "seg_gt", "[", "ignore_index", "]", "\n", "seg_pred", "=", "seg_pred", "[", "ignore_index", "]", "\n", "\n", "index", "=", "(", "seg_gt", "*", "num_class", "+", "seg_pred", ")", ".", "astype", "(", "'int32'", ")", "\n", "label_count", "=", "np", ".", "bincount", "(", "index", ")", "\n", "confusion_matrix", "=", "np", ".", "zeros", "(", "(", "num_class", ",", "num_class", ")", ")", "\n", "\n", "for", "i_label", "in", "range", "(", "num_class", ")", ":", "\n", "        ", "for", "i_pred", "in", "range", "(", "num_class", ")", ":", "\n", "            ", "cur_index", "=", "i_label", "*", "num_class", "+", "i_pred", "\n", "if", "cur_index", "<", "len", "(", "label_count", ")", ":", "\n", "                ", "confusion_matrix", "[", "i_label", ",", "\n", "i_pred", "]", "=", "label_count", "[", "cur_index", "]", "\n", "", "", "", "return", "confusion_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_optimizer": [[151, 186], ["model.named_parameters", "torch.optim.SGD", "torch.optim.SGD", "any", "logger.info", "torch.optim.Adam", "torch.optim.Adam", "any", "logger.info", "key.find", "key.find"], "function", ["None"], ["", "def", "get_optimizer", "(", "config", ",", "model", ")", ":", "\n", "    ", "_nwd_keys", "=", "(", "'bias'", ",", "'bn'", ",", "'norm'", ",", "'prelu'", ",", "'nwd'", ")", "\n", "params", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "not", "value", ".", "requires_grad", ":", "\n", "            ", "continue", "\n", "", "lr", "=", "config", ".", "TRAIN", ".", "LR", "\n", "weight_decay", "=", "config", ".", "TRAIN", ".", "WD", "\n", "if", "'head'", "in", "key", ":", "\n", "            ", "lr", "*=", "10", "\n", "if", "any", "(", "key", ".", "find", "(", "sub", ")", "!=", "-", "1", "for", "sub", "in", "_nwd_keys", ")", ":", "\n", "                ", "weight_decay", "=", "0", "\n", "", "logger", ".", "info", "(", "f'Params: {key}, LR: {lr}, Weight_Decay: {weight_decay}'", ")", "\n", "", "elif", "'base'", "in", "key", ":", "\n", "            ", "if", "any", "(", "key", ".", "find", "(", "sub", ")", "!=", "-", "1", "for", "sub", "in", "_nwd_keys", ")", ":", "\n", "                ", "weight_decay", "=", "0", "\n", "logger", ".", "info", "(", "f'Params: {key}, LR: {lr}, Weight_Decay: {weight_decay}'", ")", "\n", "", "", "params", "+=", "[", "{", "\"params\"", ":", "[", "value", "]", ",", "\"lr\"", ":", "lr", ",", "\"weight_decay\"", ":", "weight_decay", "}", "]", "\n", "\n", "", "if", "config", ".", "TRAIN", ".", "OPTIMIZER", "==", "'sgd'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "params", ",", "\n", "lr", "=", "config", ".", "TRAIN", ".", "LR", ",", "\n", "momentum", "=", "config", ".", "TRAIN", ".", "MOMENTUM", ",", "\n", "weight_decay", "=", "config", ".", "TRAIN", ".", "WD", ",", "\n", "nesterov", "=", "config", ".", "TRAIN", ".", "NESTEROV", ",", "\n", ")", "\n", "", "elif", "config", ".", "TRAIN", ".", "OPTIMIZER", "==", "'adam'", ":", "\n", "        ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "params", ",", "\n", "lr", "=", "config", ".", "TRAIN", ".", "LR", ",", "\n", "amsgrad", "=", "config", ".", "TRAIN", ".", "AMSGRAD", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_group_gn": [[188, 203], ["None"], "function", ["None"], ["", "def", "get_group_gn", "(", "dim", ",", "dim_per_gp", ",", "num_groups", ")", ":", "\n", "    ", "\"\"\"get number of groups used by GroupNorm, based on number of channels.\"\"\"", "\n", "assert", "dim_per_gp", "==", "-", "1", "or", "num_groups", "==", "-", "1", ",", "\"GroupNorm: can only specify G or C/G.\"", "\n", "\n", "if", "dim_per_gp", ">", "0", ":", "\n", "        ", "assert", "dim", "%", "dim_per_gp", "==", "0", ",", "\"dim: {}, dim_per_gp: {}\"", ".", "format", "(", "dim", ",", "dim_per_gp", ")", "\n", "group_gn", "=", "dim", "//", "dim_per_gp", "\n", "", "else", ":", "\n", "        ", "assert", "dim", "%", "num_groups", "==", "0", ",", "\"dim: {}, num_groups: {}\"", ".", "format", "(", "dim", ",", "num_groups", ")", "\n", "group_gn", "=", "num_groups", "\n", "\n", "", "return", "group_gn", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.__init__": [[19, 53], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "os.path.abspath", "torch.tensor().long", "lip.LIP.read_files", "os.path.join", "os.path.join", "line.strip().split", "torch.tensor", "open", "line.strip", "os.path.join", "list", "range"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.read_files"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "20", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "473", ",", "\n", "crop_size", "=", "(", "473", ",", "473", ")", ",", "\n", "scale_factor", "=", "11", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ":", "\n", "\n", "        ", "super", "(", "LIP", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "crop_size", ",", "\n", "scale_factor", ",", "mean", ",", "std", ")", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "img_dir", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'LIP/images'", ")", ")", "\n", "self", ".", "mask_dir", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'LIP/TrainVal_parsing_annotations'", ")", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "list_path", "=", "list_path", "\n", "self", ".", "class_weights", "=", "None", "\n", "self", ".", "right_idx", "=", "[", "15", ",", "17", ",", "19", "]", "\n", "self", ".", "left_idx", "=", "[", "14", ",", "16", ",", "18", "]", "\n", "self", ".", "flip_idx", "=", "torch", ".", "tensor", "(", "list", "(", "range", "(", "14", ")", ")", "+", "[", "15", ",", "14", ",", "17", ",", "16", ",", "19", ",", "18", "]", ")", ".", "long", "(", ")", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "img_list", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "list_path", ")", ",", "'r'", ")", "]", "\n", "\n", "self", ".", "files", "=", "self", ".", "read_files", "(", ")", "\n", "if", "num_samples", ":", "\n", "            ", "self", ".", "files", "=", "self", ".", "files", "[", ":", "num_samples", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.read_files": [[54, 65], ["files.append", "os.path.splitext", "os.path.basename"], "methods", ["None"], ["", "", "def", "read_files", "(", "self", ")", ":", "\n", "        ", "files", "=", "[", "]", "\n", "for", "item", "in", "self", ".", "img_list", ":", "\n", "            ", "image_path", ",", "label_path", "=", "item", "[", ":", "2", "]", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "label_path", ")", ")", "[", "0", "]", "\n", "sample", "=", "{", "\"img\"", ":", "image_path", ",", "\n", "\"label\"", ":", "label_path", ",", "\n", "\"name\"", ":", "name", ",", "\n", "}", "\n", "files", ".", "append", "(", "sample", ")", "\n", "", "return", "files", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.resize_image": [[66, 70], ["cv2.resize", "cv2.resize"], "methods", ["None"], ["", "def", "resize_image", "(", "self", ",", "image", ",", "label", ",", "size", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "size", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.__getitem__": [[71, 107], ["cv2.imread", "cv2.imread", "numpy.asarray", "os.path.join", "os.path.join", "cv2.resize", "lip.LIP.input_transform", "image.transpose.transpose.transpose", "cv2.resize", "lip.LIP.label_transform", "image.transpose.transpose.copy", "lip.LIP.copy", "numpy.array", "lip.LIP.resize_image", "lip.LIP.gen_sample", "lip.LIP.copy", "range", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.resize_image", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "item", "=", "self", ".", "files", "[", "index", "]", "\n", "name", "=", "item", "[", "\"name\"", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "item", "[", "\"img\"", "]", ")", ",", "\n", "cv2", ".", "IMREAD_COLOR", ")", "\n", "label", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "mask_dir", ",", "item", "[", "\"label\"", "]", ")", ",", "\n", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "label", "=", "np", ".", "asarray", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "size", "=", "label", ".", "shape", "\n", "\n", "if", "'val'", "in", "self", ".", "list_path", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "elif", "'train'", "in", "self", ".", "list_path", ":", "\n", "            ", "if", "self", ".", "flip", ":", "\n", "                ", "flip", "=", "np", ".", "random", ".", "choice", "(", "2", ")", "*", "2", "-", "1", "\n", "image", "=", "image", "[", ":", ",", ":", ":", "flip", ",", ":", "]", "\n", "label", "=", "label", "[", ":", ",", ":", ":", "flip", "]", "\n", "\n", "if", "flip", "==", "-", "1", ":", "\n", "                    ", "tmp", "=", "label", ".", "copy", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "                        ", "label", "[", "tmp", "==", "self", ".", "right_idx", "[", "i", "]", "]", "=", "self", ".", "left_idx", "[", "i", "]", "\n", "label", "[", "tmp", "==", "self", ".", "left_idx", "[", "i", "]", "]", "=", "self", ".", "right_idx", "[", "i", "]", "\n", "\n", "", "", "", "image", ",", "label", "=", "self", ".", "resize_image", "(", "image", ",", "label", ",", "self", ".", "crop_size", ")", "\n", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "\n", "self", ".", "multi_scale", ",", "False", ")", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.lip.LIP.inference": [[108, 128], ["image.size", "model", "isinstance", "torch.nn.functional.interpolate", "torch.nn.functional.softmax", "image.cuda", "torch.flip", "model", "isinstance", "torch.nn.functional.interpolate", "torch.index_select", "torch.flip", "torch.flip.cuda", "lip.LIP.flip_idx.cuda"], "methods", ["None"], ["", "def", "inference", "(", "self", ",", "model", ",", "image", ",", "flip", "=", "True", ")", ":", "\n", "        ", "size", "=", "image", ".", "size", "(", ")", "\n", "pred", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", "\n", "if", "isinstance", "(", "pred", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "pred", "=", "pred", "[", "0", "]", "\n", "", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "size", "=", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "if", "flip", ":", "\n", "            ", "flip_img", "=", "torch", ".", "flip", "(", "image", ",", "[", "3", "]", ")", "\n", "flip_output", "=", "model", "(", "flip_img", ".", "cuda", "(", ")", ")", "\n", "if", "isinstance", "(", "flip_output", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "flip_output", "=", "flip_output", "[", "0", "]", "\n", "", "flip_output", "=", "F", ".", "interpolate", "(", "flip_output", ",", "size", "=", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "flip_pred", "=", "torch", ".", "index_select", "(", "flip_output", ",", "dim", "=", "1", ",", "index", "=", "self", ".", "flip_idx", ".", "cuda", "(", ")", ")", "\n", "flip_pred", "=", "torch", ".", "flip", "(", "flip_pred", ",", "[", "3", "]", ")", "# flip back", "\n", "pred", "+=", "flip_pred", "\n", "pred", "=", "pred", "*", "0.5", "\n", "", "pred", "=", "F", ".", "softmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "return", "pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg.__init__": [[29, 77], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "COCO", "os.path.exists", "logger.info", "os.path.join", "os.path.join", "os.path.join", "torch.load", "list", "mscoco.COCOSeg._preprocess", "os.path.join", "os.path.join", "ValueError", "mscoco.COCOSeg.coco.imgs.keys", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext._preprocess"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "21", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", ")", ":", "\n", "\n", "        ", "super", "(", "COCOSeg", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "crop_size", ",", "\n", "scale_factor", ",", "mean", ",", "std", ")", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'coco'", ")", ")", "\n", "self", ".", "split", "=", "list_path", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "class_weights", "=", "None", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "from", "pycocotools", ".", "coco", "import", "COCO", "\n", "from", "pycocotools", "import", "mask", "\n", "# prepare data", "\n", "if", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "ann_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'annotations/instances_val2017.json'", ")", "\n", "ids_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'annotations/voc_coco_pretrain_val_ids.pth'", ")", "\n", "", "elif", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "ann_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'annotations/instances_train2017.json'", ")", "\n", "ids_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'annotations/voc_coco_pretrain_train_ids.pth'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Only supporting train and val set.'", ")", "\n", "\n", "", "self", ".", "coco", "=", "COCO", "(", "ann_file", ")", "\n", "self", ".", "coco_mask", "=", "mask", "\n", "if", "os", ".", "path", ".", "exists", "(", "ids_file", ")", ":", "\n", "            ", "self", ".", "ids", "=", "torch", ".", "load", "(", "ids_file", ")", "\n", "", "else", ":", "\n", "            ", "ids", "=", "list", "(", "self", ".", "coco", ".", "imgs", ".", "keys", "(", ")", ")", "\n", "self", ".", "ids", "=", "self", ".", "_preprocess", "(", "ids", ",", "ids_file", ")", "\n", "\n", "", "logger", ".", "info", "(", "f'The number of samples of {self.split} set: {len(self.ids)}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg.__len__": [[78, 80], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg.__getitem__": [[81, 115], ["coco.loadImgs", "os.path.join", "cv2.imread", "coco.loadAnns", "PIL.Image.fromarray", "numpy.array", "mscoco.COCOSeg.gen_sample", "image.transpose.transpose.copy", "mscoco.COCOSeg.copy", "numpy.array", "os.path.join", "coco.getAnnIds", "mscoco.COCOSeg._gen_seg_mask", "os.path.join", "cv2.imread", "cv2.resize", "mscoco.COCOSeg.input_transform", "image.transpose.transpose.transpose", "coco.loadAnns", "PIL.Image.fromarray", "numpy.array", "cv2.resize", "mscoco.COCOSeg.label_transform", "os.path.join", "coco.getAnnIds", "mscoco.COCOSeg._gen_seg_mask"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg._gen_seg_mask", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg._gen_seg_mask"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "coco", "=", "self", ".", "coco", "\n", "img_id", "=", "self", ".", "ids", "[", "index", "]", "\n", "img_metadata", "=", "coco", ".", "loadImgs", "(", "img_id", ")", "[", "0", "]", "\n", "img_path", "=", "img_metadata", "[", "'file_name'", "]", "\n", "\n", "if", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'images/train2017'", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_path", ")", ")", "\n", "size", "=", "image", ".", "shape", "\n", "cocotarget", "=", "coco", ".", "loadAnns", "(", "coco", ".", "getAnnIds", "(", "imgIds", "=", "img_id", ")", ")", "\n", "label", "=", "Image", ".", "fromarray", "(", "self", ".", "_gen_seg_mask", "(", "\n", "cocotarget", ",", "img_metadata", "[", "'height'", "]", ",", "img_metadata", "[", "'width'", "]", ")", ")", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "", "elif", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'images/val2017'", ")", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_path", ")", ")", "\n", "size", "=", "image", ".", "shape", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "cocotarget", "=", "coco", ".", "loadAnns", "(", "coco", ".", "getAnnIds", "(", "imgIds", "=", "img_id", ")", ")", "\n", "label", "=", "Image", ".", "fromarray", "(", "self", ".", "_gen_seg_mask", "(", "\n", "cocotarget", ",", "img_metadata", "[", "'height'", "]", ",", "img_metadata", "[", "'width'", "]", ")", ")", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "img_id", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg.label_transform": [[116, 120], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "\n", "label", "[", "label", "==", "255", "]", "=", "-", "1", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg._gen_seg_mask": [[121, 137], ["numpy.zeros", "coco_mask.frPyObjects", "coco_mask.decode", "mscoco.COCOSeg.CAT_LIST.index", "len", "numpy.sum"], "methods", ["None"], ["", "def", "_gen_seg_mask", "(", "self", ",", "target", ",", "h", ",", "w", ")", ":", "\n", "        ", "mask", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "coco_mask", "=", "self", ".", "coco_mask", "\n", "for", "instance", "in", "target", ":", "\n", "            ", "rle", "=", "coco_mask", ".", "frPyObjects", "(", "instance", "[", "'segmentation'", "]", ",", "h", ",", "w", ")", "\n", "m", "=", "coco_mask", ".", "decode", "(", "rle", ")", "\n", "cat", "=", "instance", "[", "'category_id'", "]", "\n", "if", "cat", "in", "self", ".", "CAT_LIST", ":", "\n", "                ", "c", "=", "self", ".", "CAT_LIST", ".", "index", "(", "cat", ")", "\n", "", "else", ":", "\n", "                ", "continue", "\n", "", "if", "len", "(", "m", ".", "shape", ")", "<", "3", ":", "\n", "                ", "mask", "[", ":", ",", ":", "]", "+=", "(", "mask", "==", "0", ")", "*", "(", "m", "*", "c", ")", "\n", "", "else", ":", "\n", "                ", "mask", "[", ":", ",", ":", "]", "+=", "(", "mask", "==", "0", ")", "*", "(", "(", "(", "np", ".", "sum", "(", "m", ",", "axis", "=", "2", ")", ")", ">", "0", ")", "*", "c", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg._preprocess": [[138, 157], ["print", "tqdm.trange", "print", "torch.save", "len", "mscoco.COCOSeg.coco.loadAnns", "mscoco.COCOSeg._gen_seg_mask", "tqdm.trange.set_description", "len", "mscoco.COCOSeg.coco.getAnnIds", "mscoco.COCOSeg.coco.loadImgs", "new_ids.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg._gen_seg_mask"], ["", "def", "_preprocess", "(", "self", ",", "ids", ",", "ids_file", ")", ":", "\n", "        ", "print", "(", "\"Preprocessing mask, this will take a while.\"", "+", "\n", "\"But don't worry, it only run once for each split.\"", ")", "\n", "tbar", "=", "trange", "(", "len", "(", "ids", ")", ")", "\n", "new_ids", "=", "[", "]", "\n", "for", "i", "in", "tbar", ":", "\n", "            ", "img_id", "=", "ids", "[", "i", "]", "\n", "cocotarget", "=", "self", ".", "coco", ".", "loadAnns", "(", "self", ".", "coco", ".", "getAnnIds", "(", "imgIds", "=", "img_id", ")", ")", "\n", "img_metadata", "=", "self", ".", "coco", ".", "loadImgs", "(", "img_id", ")", "[", "0", "]", "\n", "mask", "=", "self", ".", "_gen_seg_mask", "(", "cocotarget", ",", "img_metadata", "[", "'height'", "]", ",", "\n", "img_metadata", "[", "'width'", "]", ")", "\n", "# more than 1k pixels", "\n", "if", "(", "mask", ">", "0", ")", ".", "sum", "(", ")", ">", "1000", ":", "\n", "                ", "new_ids", ".", "append", "(", "img_id", ")", "\n", "", "tbar", ".", "set_description", "(", "'Doing: {}/{}, got {} qualified images'", ".", "\n", "format", "(", "i", ",", "len", "(", "ids", ")", ",", "len", "(", "new_ids", ")", ")", ")", "\n", "", "print", "(", "'Found number of qualified images: '", ",", "len", "(", "new_ids", ")", ")", "\n", "torch", ".", "save", "(", "new_ids", ",", "ids_file", ")", "\n", "return", "new_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.mscoco.COCOSeg.classes": [[158, 165], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "classes", "(", "self", ")", ":", "\n", "        ", "\"\"\"Category names.\"\"\"", "\n", "return", "(", "'background'", ",", "'airplane'", ",", "'bicycle'", ",", "'bird'", ",", "'boat'", ",", "'bottle'", ",", "\n", "'bus'", ",", "'car'", ",", "'cat'", ",", "'chair'", ",", "'cow'", ",", "'diningtable'", ",", "'dog'", ",", "'horse'", ",", "\n", "'motorcycle'", ",", "'person'", ",", "'potted-plant'", ",", "'sheep'", ",", "'sofa'", ",", "'train'", ",", "\n", "'tv'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext.__init__": [[20, 77], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "os.path.join", "os.path.join", "pascal_ctx.PASCALContext.detail.getImgs", "numpy.sort", "numpy.array().astype", "print", "os.path.exists", "os.path.join", "Detail", "os.path.join", "numpy.array", "torch.load", "pascal_ctx.PASCALContext._preprocess", "Detail", "os.path.join", "ValueError", "numpy.array", "range", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext._preprocess"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "59", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", ")", ":", "\n", "\n", "        ", "super", "(", "PASCALContext", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "crop_size", ",", "\n", "scale_factor", ",", "mean", ",", "std", ")", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'pascal_ctx/VOCdevkit/VOC2010'", ")", ")", "\n", "self", ".", "split", "=", "list_path", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "class_weights", "=", "None", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "# prepare data", "\n", "annots", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'trainval_merged.json'", ")", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'JPEGImages'", ")", "\n", "from", "detail", "import", "Detail", "\n", "if", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "self", ".", "detail", "=", "Detail", "(", "annots", ",", "img_path", ",", "'val'", ")", "\n", "mask_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'val.pth'", ")", "\n", "", "elif", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "self", ".", "mode", "=", "'train'", "\n", "self", ".", "detail", "=", "Detail", "(", "annots", ",", "img_path", ",", "'train'", ")", "\n", "mask_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train.pth'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Only supporting train and val set.'", ")", "\n", "", "self", ".", "files", "=", "self", ".", "detail", ".", "getImgs", "(", ")", "\n", "\n", "# generate masks", "\n", "self", ".", "_mapping", "=", "np", ".", "sort", "(", "np", ".", "array", "(", "[", "\n", "0", ",", "2", ",", "259", ",", "260", ",", "415", ",", "324", ",", "9", ",", "258", ",", "144", ",", "18", ",", "19", ",", "22", ",", "\n", "23", ",", "397", ",", "25", ",", "284", ",", "158", ",", "159", ",", "416", ",", "33", ",", "162", ",", "420", ",", "454", ",", "295", ",", "296", ",", "\n", "427", ",", "44", ",", "45", ",", "46", ",", "308", ",", "59", ",", "440", ",", "445", ",", "31", ",", "232", ",", "65", ",", "354", ",", "424", ",", "\n", "68", ",", "326", ",", "72", ",", "458", ",", "34", ",", "207", ",", "80", ",", "355", ",", "85", ",", "347", ",", "220", ",", "349", ",", "360", ",", "\n", "98", ",", "187", ",", "104", ",", "105", ",", "366", ",", "189", ",", "368", ",", "113", ",", "115", "]", ")", ")", "\n", "\n", "self", ".", "_key", "=", "np", ".", "array", "(", "range", "(", "len", "(", "self", ".", "_mapping", ")", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "print", "(", "'mask_file:'", ",", "mask_file", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "mask_file", ")", ":", "\n", "            ", "self", ".", "masks", "=", "torch", ".", "load", "(", "mask_file", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "masks", "=", "self", ".", "_preprocess", "(", "mask_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext._class_to_index": [[78, 85], ["numpy.unique", "range", "numpy.digitize", "pascal_ctx.PASCALContext._key[].reshape", "len", "mask.ravel"], "methods", ["None"], ["", "", "def", "_class_to_index", "(", "self", ",", "mask", ")", ":", "\n", "# assert the values", "\n", "        ", "values", "=", "np", ".", "unique", "(", "mask", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "values", ")", ")", ":", "\n", "            ", "assert", "(", "values", "[", "i", "]", "in", "self", ".", "_mapping", ")", "\n", "", "index", "=", "np", ".", "digitize", "(", "mask", ".", "ravel", "(", ")", ",", "self", ".", "_mapping", ",", "right", "=", "True", ")", "\n", "return", "self", ".", "_key", "[", "index", "]", ".", "reshape", "(", "mask", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext._preprocess": [[86, 97], ["print", "range", "torch.save", "len", "PIL.Image.fromarray", "pascal_ctx.PASCALContext._class_to_index", "pascal_ctx.PASCALContext.detail.getMask"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext._class_to_index"], ["", "def", "_preprocess", "(", "self", ",", "mask_file", ")", ":", "\n", "        ", "masks", "=", "{", "}", "\n", "print", "(", "\"Preprocessing mask, this will take a while.\"", "+", "\n", "\"But don't worry, it only run once for each split.\"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "files", ")", ")", ":", "\n", "            ", "img_id", "=", "self", ".", "files", "[", "i", "]", "\n", "mask", "=", "Image", ".", "fromarray", "(", "self", ".", "_class_to_index", "(", "\n", "self", ".", "detail", ".", "getMask", "(", "img_id", ")", ")", ")", "\n", "masks", "[", "img_id", "[", "'image_id'", "]", "]", "=", "mask", "\n", "", "torch", ".", "save", "(", "masks", ",", "mask_file", ")", "\n", "return", "masks", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext.__getitem__": [[98, 127], ["cv2.imread", "numpy.asarray", "os.path.join", "cv2.resize", "pascal_ctx.PASCALContext.input_transform", "image.transpose.transpose.transpose", "cv2.resize", "pascal_ctx.PASCALContext.label_transform", "image.transpose.transpose.copy", "pascal_ctx.PASCALContext.copy", "numpy.array", "pascal_ctx.PASCALContext.input_transform", "image.transpose.transpose.transpose", "pascal_ctx.PASCALContext.label_transform", "pascal_ctx.PASCALContext.gen_sample"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "item", "=", "self", ".", "files", "[", "index", "]", "\n", "name", "=", "item", "[", "'file_name'", "]", "\n", "img_id", "=", "item", "[", "'image_id'", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "detail", ".", "img_folder", ",", "name", ")", ",", "\n", "cv2", ".", "IMREAD_COLOR", ")", "\n", "label", "=", "np", ".", "asarray", "(", "self", ".", "masks", "[", "img_id", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "size", "=", "image", ".", "shape", "\n", "\n", "if", "self", ".", "split", "==", "'val'", ":", "\n", "# image, label = self.val_transform(image, label)", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "elif", "self", ".", "split", "==", "'testval'", ":", "\n", "# evaluate model on val dataset", "\n", "            ", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "\n", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_ctx.PASCALContext.label_transform": [[128, 136], ["numpy.array().astype", "numpy.array().astype", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "if", "self", ".", "num_classes", "==", "59", ":", "\n", "# background is ignored", "\n", "            ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "-", "1", "\n", "label", "[", "label", "==", "-", "2", "]", "=", "-", "1", "\n", "", "else", ":", "\n", "            ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "\n", "", "return", "label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.__init__": [[23, 73], ["base_dataset.BaseDataset.__init__", "cityscapes.Cityscapes.read_files", "torch.FloatTensor().cuda", "logger.info", "line.strip().split", "open", "torch.FloatTensor", "line.strip", "os.path.join", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.read_files"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "19", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "2048", ",", "\n", "crop_size", "=", "(", "512", ",", "1024", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ":", "\n", "\n", "        ", "super", "(", "Cityscapes", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "crop_size", ",", "\n", "scale_factor", ",", "mean", ",", "std", ",", ")", "\n", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "list_path", "=", "list_path", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "\n", "self", ".", "img_list", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "list_path", ")", ")", "]", "\n", "\n", "self", ".", "files", "=", "self", ".", "read_files", "(", ")", "\n", "if", "num_samples", ":", "\n", "            ", "self", ".", "files", "=", "self", ".", "files", "[", ":", "num_samples", "]", "\n", "\n", "", "self", ".", "label_mapping", "=", "{", "-", "1", ":", "ignore_label", ",", "0", ":", "ignore_label", ",", "\n", "1", ":", "ignore_label", ",", "2", ":", "ignore_label", ",", "\n", "3", ":", "ignore_label", ",", "4", ":", "ignore_label", ",", "\n", "5", ":", "ignore_label", ",", "6", ":", "ignore_label", ",", "\n", "7", ":", "0", ",", "8", ":", "1", ",", "9", ":", "ignore_label", ",", "\n", "10", ":", "ignore_label", ",", "11", ":", "2", ",", "12", ":", "3", ",", "\n", "13", ":", "4", ",", "14", ":", "ignore_label", ",", "15", ":", "ignore_label", ",", "\n", "16", ":", "ignore_label", ",", "17", ":", "5", ",", "18", ":", "ignore_label", ",", "\n", "19", ":", "6", ",", "20", ":", "7", ",", "21", ":", "8", ",", "22", ":", "9", ",", "23", ":", "10", ",", "24", ":", "11", ",", "\n", "25", ":", "12", ",", "26", ":", "13", ",", "27", ":", "14", ",", "28", ":", "15", ",", "\n", "29", ":", "ignore_label", ",", "30", ":", "ignore_label", ",", "\n", "31", ":", "16", ",", "32", ":", "17", ",", "33", ":", "18", "}", "\n", "self", ".", "class_weights", "=", "torch", ".", "FloatTensor", "(", "[", "0.8373", ",", "0.918", ",", "0.866", ",", "1.0345", ",", "\n", "1.0166", ",", "0.9969", ",", "0.9754", ",", "1.0489", ",", "\n", "0.8786", ",", "1.0023", ",", "0.9539", ",", "0.9843", ",", "\n", "1.1116", ",", "0.9037", ",", "1.0865", ",", "1.0955", ",", "\n", "1.0865", ",", "1.1529", ",", "1.0507", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "logger", ".", "info", "(", "f'{len(self.files)} images are loaded!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.read_files": [[74, 95], ["files.append", "files.append", "os.path.splitext", "os.path.splitext", "os.path.basename", "os.path.basename"], "methods", ["None"], ["", "def", "read_files", "(", "self", ")", ":", "\n", "        ", "files", "=", "[", "]", "\n", "if", "'test'", "in", "self", ".", "list_path", ":", "\n", "            ", "for", "item", "in", "self", ".", "img_list", ":", "\n", "                ", "image_path", "=", "item", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "image_path", "[", "0", "]", ")", ")", "[", "0", "]", "\n", "files", ".", "append", "(", "{", "\n", "\"img\"", ":", "image_path", "[", "0", "]", ",", "\n", "\"name\"", ":", "name", ",", "\n", "}", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "item", "in", "self", ".", "img_list", ":", "\n", "                ", "image_path", ",", "label_path", "=", "item", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "label_path", ")", ")", "[", "0", "]", "\n", "files", ".", "append", "(", "{", "\n", "\"img\"", ":", "image_path", ",", "\n", "\"label\"", ":", "label_path", ",", "\n", "\"name\"", ":", "name", ",", "\n", "\"weight\"", ":", "1", "\n", "}", ")", "\n", "", "", "return", "files", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.convert_label": [[96, 105], ["label.copy", "cityscapes.Cityscapes.label_mapping.items", "cityscapes.Cityscapes.label_mapping.items"], "methods", ["None"], ["", "def", "convert_label", "(", "self", ",", "label", ",", "inverse", "=", "False", ")", ":", "\n", "        ", "temp", "=", "label", ".", "copy", "(", ")", "\n", "if", "inverse", ":", "\n", "            ", "for", "v", ",", "k", "in", "self", ".", "label_mapping", ".", "items", "(", ")", ":", "\n", "                ", "label", "[", "temp", "==", "k", "]", "=", "v", "\n", "", "", "else", ":", "\n", "            ", "for", "k", ",", "v", "in", "self", ".", "label_mapping", ".", "items", "(", ")", ":", "\n", "                ", "label", "[", "temp", "==", "k", "]", "=", "v", "\n", "", "", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.__getitem__": [[106, 130], ["cv2.imread", "cv2.imread", "cityscapes.Cityscapes.convert_label", "os.path.join", "cityscapes.Cityscapes.input_transform", "image.transpose.transpose.transpose", "os.path.join", "numpy.asarray", "cityscapes.Cityscapes.val_transform", "cityscapes.Cityscapes.gen_sample", "image.transpose.transpose.copy", "cityscapes.Cityscapes.copy", "numpy.array", "image.transpose.transpose.copy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.convert_label", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.val_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "item", "=", "self", ".", "files", "[", "index", "]", "\n", "name", "=", "item", "[", "\"name\"", "]", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'cityscapes'", ",", "item", "[", "\"img\"", "]", ")", ",", "\n", "cv2", ".", "IMREAD_COLOR", ")", "\n", "size", "=", "image", ".", "shape", "\n", "\n", "if", "'test'", "in", "self", ".", "list_path", ":", "\n", "            ", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "return", "image", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "name", "\n", "\n", "", "label", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'cityscapes'", ",", "item", "[", "\"label\"", "]", ")", ",", "\n", "cv2", ".", "IMREAD_GRAYSCALE", ")", "\n", "label", "=", "self", ".", "convert_label", "(", "np", ".", "asarray", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", ")", "\n", "\n", "if", "'val'", "in", "self", ".", "list_path", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "val_transform", "(", "image", ",", "label", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "\n", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.multi_scale_inference": [[131, 182], ["[].transpose().copy.size", "[].transpose().copy", "numpy.int", "numpy.int", "torch.zeros().cuda", "cityscapes.Cityscapes.multi_scale_aug", "torch.nn.functional.interpolate", "[].transpose", "torch.zeros", "torch.from_numpy.transpose", "numpy.expand_dims", "torch.from_numpy", "cityscapes.Cityscapes.inference", "torch.zeros().cuda", "torch.zeros().cuda", "range", "numpy.int", "numpy.int", "range", "numpy.ceil", "numpy.ceil", "torch.zeros", "torch.zeros", "min", "min", "max", "max", "torch.from_numpy.transpose", "numpy.expand_dims", "torch.from_numpy", "cityscapes.Cityscapes.inference", "[].transpose().copy.numpy", "int", "int"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_aug", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.inference", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.inference"], ["", "def", "multi_scale_inference", "(", "self", ",", "model", ",", "image", ",", "scales", "=", "[", "1", "]", ",", "flip", "=", "False", ")", ":", "\n", "        ", "batch", ",", "_", ",", "ori_height", ",", "ori_width", "=", "image", ".", "size", "(", ")", "\n", "assert", "batch", "==", "1", ",", "\"only supporting batchsize 1.\"", "\n", "image", "=", "image", ".", "numpy", "(", ")", "[", "0", "]", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", ".", "copy", "(", ")", "\n", "stride_h", "=", "np", ".", "int", "(", "self", ".", "crop_size", "[", "0", "]", "*", "1.0", ")", "\n", "stride_w", "=", "np", ".", "int", "(", "self", ".", "crop_size", "[", "1", "]", "*", "1.0", ")", "\n", "final_pred", "=", "torch", ".", "zeros", "(", "[", "1", ",", "self", ".", "num_classes", ",", "\n", "ori_height", ",", "ori_width", "]", ")", ".", "cuda", "(", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "new_img", "=", "self", ".", "multi_scale_aug", "(", "image", "=", "image", ",", "\n", "rand_scale", "=", "scale", ",", "\n", "rand_crop", "=", "False", ")", "\n", "height", ",", "width", "=", "new_img", ".", "shape", "[", ":", "-", "1", "]", "\n", "\n", "if", "scale", "<=", "1.0", ":", "\n", "                ", "new_img", "=", "new_img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "new_img", "=", "np", ".", "expand_dims", "(", "new_img", ",", "axis", "=", "0", ")", "\n", "new_img", "=", "torch", ".", "from_numpy", "(", "new_img", ")", "\n", "preds", "=", "self", ".", "inference", "(", "model", ",", "new_img", ",", "flip", ")", "\n", "preds", "=", "preds", "[", ":", ",", ":", ",", "0", ":", "height", ",", "0", ":", "width", "]", "\n", "", "else", ":", "\n", "                ", "new_h", ",", "new_w", "=", "new_img", ".", "shape", "[", ":", "-", "1", "]", "\n", "rows", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "new_h", "-", "\n", "self", ".", "crop_size", "[", "0", "]", ")", "/", "stride_h", ")", ")", "+", "1", "\n", "cols", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "new_w", "-", "\n", "self", ".", "crop_size", "[", "1", "]", ")", "/", "stride_w", ")", ")", "+", "1", "\n", "preds", "=", "torch", ".", "zeros", "(", "[", "1", ",", "self", ".", "num_classes", ",", "\n", "new_h", ",", "new_w", "]", ")", ".", "cuda", "(", ")", "\n", "count", "=", "torch", ".", "zeros", "(", "[", "1", ",", "1", ",", "new_h", ",", "new_w", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "                    ", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "                        ", "h0", "=", "r", "*", "stride_h", "\n", "w0", "=", "c", "*", "stride_w", "\n", "h1", "=", "min", "(", "h0", "+", "self", ".", "crop_size", "[", "0", "]", ",", "new_h", ")", "\n", "w1", "=", "min", "(", "w0", "+", "self", ".", "crop_size", "[", "1", "]", ",", "new_w", ")", "\n", "h0", "=", "max", "(", "int", "(", "h1", "-", "self", ".", "crop_size", "[", "0", "]", ")", ",", "0", ")", "\n", "w0", "=", "max", "(", "int", "(", "w1", "-", "self", ".", "crop_size", "[", "1", "]", ")", ",", "0", ")", "\n", "crop_img", "=", "new_img", "[", "h0", ":", "h1", ",", "w0", ":", "w1", ",", ":", "]", "\n", "crop_img", "=", "crop_img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "crop_img", "=", "np", ".", "expand_dims", "(", "crop_img", ",", "axis", "=", "0", ")", "\n", "crop_img", "=", "torch", ".", "from_numpy", "(", "crop_img", ")", "\n", "pred", "=", "self", ".", "inference", "(", "model", ",", "crop_img", ",", "flip", ")", "\n", "preds", "[", ":", ",", ":", ",", "h0", ":", "h1", ",", "w0", ":", "w1", "]", "+=", "pred", "[", ":", ",", ":", ",", "0", ":", "h1", "-", "h0", ",", "0", ":", "w1", "-", "w0", "]", "\n", "count", "[", ":", ",", ":", ",", "h0", ":", "h1", ",", "w0", ":", "w1", "]", "+=", "1", "\n", "", "", "preds", "=", "preds", "/", "count", "\n", "preds", "=", "preds", "[", ":", ",", ":", ",", ":", "height", ",", ":", "width", "]", "\n", "", "preds", "=", "F", ".", "interpolate", "(", "preds", ",", "(", "ori_height", ",", "ori_width", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "final_pred", "+=", "preds", "\n", "", "return", "final_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.get_palette": [[183, 198], ["range"], "methods", ["None"], ["", "def", "get_palette", "(", "self", ",", "n", ")", ":", "\n", "        ", "palette", "=", "[", "0", "]", "*", "(", "n", "*", "3", ")", "\n", "for", "j", "in", "range", "(", "0", ",", "n", ")", ":", "\n", "            ", "lab", "=", "j", "\n", "palette", "[", "j", "*", "3", "+", "0", "]", "=", "0", "\n", "palette", "[", "j", "*", "3", "+", "1", "]", "=", "0", "\n", "palette", "[", "j", "*", "3", "+", "2", "]", "=", "0", "\n", "i", "=", "0", "\n", "while", "lab", ":", "\n", "                ", "palette", "[", "j", "*", "3", "+", "0", "]", "|=", "(", "(", "(", "lab", ">>", "0", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "palette", "[", "j", "*", "3", "+", "1", "]", "|=", "(", "(", "(", "lab", ">>", "1", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "palette", "[", "j", "*", "3", "+", "2", "]", "|=", "(", "(", "(", "lab", ">>", "2", ")", "&", "1", ")", "<<", "(", "7", "-", "i", ")", ")", "\n", "i", "+=", "1", "\n", "lab", ">>=", "3", "\n", "", "", "return", "palette", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.save_pred": [[199, 207], ["cityscapes.Cityscapes.get_palette", "numpy.asarray", "range", "numpy.argmax", "cityscapes.Cityscapes.convert_label", "PIL.Image.fromarray", "PIL.Image.fromarray.putpalette", "PIL.Image.fromarray.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.get_palette", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.cityscapes.Cityscapes.convert_label"], ["", "def", "save_pred", "(", "self", ",", "preds", ",", "sv_path", ",", "name", ")", ":", "\n", "        ", "palette", "=", "self", ".", "get_palette", "(", "256", ")", "\n", "preds", "=", "np", ".", "asarray", "(", "np", ".", "argmax", "(", "preds", ",", "axis", "=", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pred", "=", "self", ".", "convert_label", "(", "preds", "[", "i", "]", ",", "inverse", "=", "True", ")", "\n", "save_img", "=", "Image", ".", "fromarray", "(", "pred", ")", "\n", "save_img", ".", "putpalette", "(", "palette", ")", "\n", "save_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "sv_path", ",", "name", "[", "i", "]", "+", "'.png'", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation.__init__": [[25, 58], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "ade20k.ADE20KSegmentation._get_ade20k_pairs", "logger.info", "os.path.join", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation._get_ade20k_pairs"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "150", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "downsample_rate", "=", "1", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", ")", ":", "\n", "\n", "        ", "super", "(", "ADE20KSegmentation", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "\n", "crop_size", ",", "downsample_rate", ",", "\n", "scale_factor", ",", "mean", ",", "std", ")", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'ADEChallengeData2016'", ")", ")", "\n", "self", ".", "split", "=", "list_path", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "class_weights", "=", "None", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "# prepare data and labels", "\n", "self", ".", "images", ",", "self", ".", "masks", "=", "self", ".", "_get_ade20k_pairs", "(", "self", ".", "root", ",", "self", ".", "split", ")", "\n", "\n", "logger", ".", "info", "(", "f'The number of samples of {self.split} set: {len(self.images)}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation.__len__": [[59, 61], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation.__getitem__": [[62, 90], ["cv2.imread", "PIL.Image.open", "numpy.asarray", "os.path.splitext", "cv2.resize", "ade20k.ADE20KSegmentation.input_transform", "image.transpose.transpose.transpose", "cv2.resize", "ade20k.ADE20KSegmentation.label_transform", "image.transpose.transpose.copy", "ade20k.ADE20KSegmentation.copy", "numpy.array", "os.path.basename", "ade20k.ADE20KSegmentation.input_transform", "image.transpose.transpose.transpose", "ade20k.ADE20KSegmentation.label_transform", "ade20k.ADE20KSegmentation.gen_sample"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_pth", "=", "self", ".", "images", "[", "index", "]", "\n", "mask_pth", "=", "self", ".", "masks", "[", "index", "]", "\n", "image", "=", "cv2", ".", "imread", "(", "img_pth", ")", "\n", "label", "=", "Image", ".", "open", "(", "mask_pth", ")", "\n", "label", "=", "np", ".", "asarray", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "size", "=", "image", ".", "shape", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "img_pth", ")", ")", "[", "0", "]", "\n", "\n", "if", "self", ".", "split", "==", "'val'", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "elif", "self", ".", "split", "==", "'testval'", ":", "\n", "# evaluate model on val dataset", "\n", "            ", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "\n", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation.label_transform": [[91, 95], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "-", "1", "\n", "label", "[", "label", "==", "-", "2", "]", "=", "-", "1", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.ade20k.ADE20KSegmentation._get_ade20k_pairs": [[96, 135], ["os.listdir", "os.path.join", "os.path.join", "ade20k.ADE20KSegmentation._get_ade20k_pairs.get_path_pairs"], "methods", ["None"], ["", "def", "_get_ade20k_pairs", "(", "self", ",", "folder", ",", "split", "=", "'train'", ")", ":", "\n", "        ", "def", "get_path_pairs", "(", "img_folder", ",", "mask_folder", ")", ":", "\n", "            ", "img_paths", "=", "[", "]", "\n", "mask_paths", "=", "[", "]", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "img_folder", ")", ":", "\n", "                ", "basename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "if", "filename", ".", "endswith", "(", "\".jpg\"", ")", ":", "\n", "                    ", "imgpath", "=", "os", ".", "path", ".", "join", "(", "img_folder", ",", "filename", ")", "\n", "maskname", "=", "basename", "+", "'.png'", "\n", "maskpath", "=", "os", ".", "path", ".", "join", "(", "mask_folder", ",", "maskname", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "maskpath", ")", ":", "\n", "                        ", "img_paths", ".", "append", "(", "imgpath", ")", "\n", "mask_paths", ".", "append", "(", "maskpath", ")", "\n", "", "else", ":", "\n", "                        ", "logger", ".", "info", "(", "'cannot find the mask:'", ",", "maskpath", ")", "\n", "", "", "", "return", "img_paths", ",", "mask_paths", "\n", "\n", "", "if", "split", "==", "'train'", ":", "\n", "            ", "img_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'images/training'", ")", "\n", "mask_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'annotations/training'", ")", "\n", "img_paths", ",", "mask_paths", "=", "get_path_pairs", "(", "img_folder", ",", "mask_folder", ")", "\n", "assert", "len", "(", "img_paths", ")", "==", "20210", "\n", "", "elif", "split", "==", "'val'", ":", "\n", "            ", "img_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'images/validation'", ")", "\n", "mask_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'annotations/validation'", ")", "\n", "img_paths", ",", "mask_paths", "=", "get_path_pairs", "(", "img_folder", ",", "mask_folder", ")", "\n", "assert", "len", "(", "img_paths", ")", "==", "2000", "\n", "", "else", ":", "\n", "            ", "assert", "split", "==", "'trainval'", "\n", "train_img_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'images/training'", ")", "\n", "train_mask_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'annotations/training'", ")", "\n", "val_img_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'images/validation'", ")", "\n", "val_mask_folder", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'annotations/validation'", ")", "\n", "train_img_paths", ",", "train_mask_paths", "=", "get_path_pairs", "(", "train_img_folder", ",", "train_mask_folder", ")", "\n", "val_img_paths", ",", "val_mask_paths", "=", "get_path_pairs", "(", "val_img_folder", ",", "val_mask_folder", ")", "\n", "img_paths", "=", "train_img_paths", "+", "val_img_paths", "\n", "mask_paths", "=", "train_mask_paths", "+", "val_mask_paths", "\n", "assert", "len", "(", "img_paths", ")", "==", "22210", "\n", "", "return", "img_paths", ",", "mask_paths", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.__init__": [[19, 36], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ":", "\n", "\n", "        ", "self", ".", "base_size", "=", "base_size", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "ignore_label", "=", "ignore_label", "\n", "\n", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n", "self", ".", "files", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform": [[40, 46], ["image.astype"], "methods", ["None"], ["", "def", "input_transform", "(", "self", ",", "image", ")", ":", "\n", "        ", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "image", "=", "image", "/", "255.0", "\n", "image", "-=", "self", ".", "mean", "\n", "image", "/=", "self", ".", "std", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.label_transform": [[47, 49], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image": [[50, 60], ["image.copy", "max", "max", "cv2.copyMakeBorder"], "methods", ["None"], ["", "def", "pad_image", "(", "self", ",", "image", ",", "h", ",", "w", ",", "size", ",", "padvalue", ")", ":", "\n", "        ", "pad_image", "=", "image", ".", "copy", "(", ")", "\n", "pad_h", "=", "max", "(", "size", "[", "0", "]", "-", "h", ",", "0", ")", "\n", "pad_w", "=", "max", "(", "size", "[", "1", "]", "-", "w", ",", "0", ")", "\n", "if", "pad_h", ">", "0", "or", "pad_w", ">", "0", ":", "\n", "            ", "pad_image", "=", "cv2", ".", "copyMakeBorder", "(", "image", ",", "0", ",", "pad_h", ",", "0", ",", "\n", "pad_w", ",", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "value", "=", "padvalue", ")", "\n", "\n", "", "return", "pad_image", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.rand_crop": [[61, 75], ["base_dataset.BaseDataset.pad_image", "base_dataset.BaseDataset.pad_image", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image"], ["", "def", "rand_crop", "(", "self", ",", "image", ",", "label", ")", ":", "\n", "        ", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "-", "1", "]", "\n", "image", "=", "self", ".", "pad_image", "(", "image", ",", "h", ",", "w", ",", "self", ".", "crop_size", ",", "\n", "(", "0.0", ",", "0.0", ",", "0.0", ")", ")", "\n", "label", "=", "self", ".", "pad_image", "(", "label", ",", "h", ",", "w", ",", "self", ".", "crop_size", ",", "\n", "(", "self", ".", "ignore_label", ",", ")", ")", "\n", "\n", "new_h", ",", "new_w", "=", "label", ".", "shape", "\n", "x", "=", "random", ".", "randint", "(", "0", ",", "new_w", "-", "self", ".", "crop_size", "[", "1", "]", ")", "\n", "y", "=", "random", ".", "randint", "(", "0", ",", "new_h", "-", "self", ".", "crop_size", "[", "0", "]", ")", "\n", "image", "=", "image", "[", "y", ":", "y", "+", "self", ".", "crop_size", "[", "0", "]", ",", "x", ":", "x", "+", "self", ".", "crop_size", "[", "1", "]", "]", "\n", "label", "=", "label", "[", "y", ":", "y", "+", "self", ".", "crop_size", "[", "0", "]", ",", "x", ":", "x", "+", "self", ".", "crop_size", "[", "1", "]", "]", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_aug": [[76, 99], ["numpy.int", "cv2.resize", "numpy.int", "numpy.int", "cv2.resize", "base_dataset.BaseDataset.rand_crop"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.rand_crop"], ["", "def", "multi_scale_aug", "(", "self", ",", "image", ",", "label", "=", "None", ",", "\n", "rand_scale", "=", "1", ",", "rand_crop", "=", "True", ")", ":", "\n", "        ", "long_size", "=", "np", ".", "int", "(", "self", ".", "base_size", "*", "rand_scale", "+", "0.5", ")", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "h", ">", "w", ":", "\n", "            ", "new_h", "=", "long_size", "\n", "new_w", "=", "np", ".", "int", "(", "w", "*", "long_size", "/", "h", "+", "0.5", ")", "\n", "", "else", ":", "\n", "            ", "new_w", "=", "long_size", "\n", "new_h", "=", "np", ".", "int", "(", "h", "*", "long_size", "/", "w", "+", "0.5", ")", "\n", "\n", "", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "new_w", ",", "new_h", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "cv2", ".", "resize", "(", "label", ",", "(", "new_w", ",", "new_h", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "else", ":", "\n", "            ", "return", "image", "\n", "\n", "", "if", "rand_crop", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "rand_crop", "(", "image", ",", "label", ")", "\n", "\n", "", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample": [[100, 117], ["base_dataset.BaseDataset.input_transform", "base_dataset.BaseDataset.label_transform", "image.transpose.transpose.transpose", "base_dataset.BaseDataset.multi_scale_aug", "random.randint", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_aug"], ["", "def", "gen_sample", "(", "self", ",", "image", ",", "label", ",", "\n", "multi_scale", "=", "True", ",", "is_flip", "=", "True", ")", ":", "\n", "        ", "if", "multi_scale", ":", "\n", "            ", "rand_scale", "=", "0.5", "+", "random", ".", "randint", "(", "0", ",", "self", ".", "scale_factor", ")", "/", "10.0", "\n", "image", ",", "label", "=", "self", ".", "multi_scale_aug", "(", "image", ",", "label", ",", "rand_scale", "=", "rand_scale", ")", "\n", "\n", "", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "if", "is_flip", ":", "\n", "            ", "flip", "=", "np", ".", "random", ".", "choice", "(", "2", ")", "*", "2", "-", "1", "\n", "image", "=", "image", "[", ":", ",", ":", ",", ":", ":", "flip", "]", "\n", "label", "=", "label", "[", ":", ",", ":", ":", "flip", "]", "\n", "\n", "", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.val_transform": [[118, 145], ["min", "cv2.resize", "int", "int", "base_dataset.BaseDataset.input_transform", "image.transpose.transpose.transpose", "base_dataset.BaseDataset.label_transform", "int", "int", "max", "max", "cv2.resize"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform"], ["", "def", "val_transform", "(", "self", ",", "image", ",", "label", "=", "None", ")", ":", "\n", "        ", "short_size", "=", "min", "(", "self", ".", "crop_size", ")", "\n", "h", ",", "w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "w", ">", "h", ":", "\n", "            ", "new_h", "=", "short_size", "\n", "new_w", "=", "int", "(", "1.0", "*", "w", "*", "short_size", "/", "h", "+", "0.5", ")", "\n", "", "else", ":", "\n", "            ", "new_w", "=", "short_size", "\n", "new_h", "=", "int", "(", "1.0", "*", "h", "*", "short_size", "/", "w", "+", "0.5", ")", "\n", "\n", "", "assert", "max", "(", "new_h", ",", "new_w", ")", ">=", "max", "(", "self", ".", "crop_size", ")", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "new_w", ",", "new_h", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "if", "label", "is", "not", "None", ":", "\n", "            ", "label", "=", "cv2", ".", "resize", "(", "label", ",", "(", "new_w", ",", "new_h", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "# center crop", "\n", "", "x", "=", "int", "(", "(", "new_w", "-", "self", ".", "crop_size", "[", "1", "]", ")", "/", "2.", "+", "0.5", ")", "\n", "y", "=", "int", "(", "(", "new_h", "-", "self", ".", "crop_size", "[", "0", "]", ")", "/", "2.", "+", "0.5", ")", "\n", "image", "=", "image", "[", "y", ":", "y", "+", "self", ".", "crop_size", "[", "0", "]", ",", "x", ":", "x", "+", "self", ".", "crop_size", "[", "1", "]", "]", "\n", "label", "=", "label", "[", "y", ":", "y", "+", "self", ".", "crop_size", "[", "0", "]", ",", "x", ":", "x", "+", "self", ".", "crop_size", "[", "1", "]", "]", "\n", "# final transform", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.inference": [[146, 167], ["image.size", "model", "isinstance", "torch.nn.functional.interpolate", "torch.nn.functional.softmax", "image.cuda", "model", "isinstance", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate.cpu().numpy().copy", "torch.from_numpy().cuda", "image.numpy", "torch.from_numpy().cuda", "torch.nn.functional.interpolate.cpu().numpy", "torch.from_numpy", "torch.from_numpy", "flip_pred[].copy", "flip_img.copy", "torch.nn.functional.interpolate.cpu"], "methods", ["None"], ["", "def", "inference", "(", "self", ",", "model", ",", "image", ",", "flip", "=", "False", ")", ":", "\n", "        ", "size", "=", "image", ".", "size", "(", ")", "\n", "pred", "=", "model", "(", "image", ".", "cuda", "(", ")", ")", "\n", "if", "isinstance", "(", "pred", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "pred", "=", "pred", "[", "0", "]", "\n", "", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "size", "=", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "if", "flip", ":", "\n", "            ", "flip_img", "=", "image", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", "\n", "flip_output", "=", "model", "(", "torch", ".", "from_numpy", "(", "flip_img", ".", "copy", "(", ")", ")", ".", "cuda", "(", ")", ")", "\n", "if", "isinstance", "(", "flip_output", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "                ", "flip_output", "=", "flip_output", "[", "0", "]", "\n", "", "flip_output", "=", "F", ".", "interpolate", "(", "flip_output", ",", "\n", "size", "=", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "flip_pred", "=", "flip_output", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "copy", "(", ")", "\n", "flip_pred", "=", "torch", ".", "from_numpy", "(", "flip_pred", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", ")", ".", "cuda", "(", ")", "\n", "pred", "+=", "flip_pred", "\n", "pred", "=", "pred", "*", "0.5", "\n", "", "pred", "=", "F", ".", "softmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_inference": [[168, 229], ["[].transpose().copy.size", "[].transpose().copy", "numpy.int", "numpy.int", "torch.zeros().cuda", "numpy.array", "base_dataset.BaseDataset.multi_scale_aug", "torch.nn.functional.interpolate", "[].transpose", "torch.zeros", "numpy.array", "base_dataset.BaseDataset.pad_image", "base_dataset.BaseDataset.transpose", "numpy.expand_dims", "torch.from_numpy", "base_dataset.BaseDataset.inference", "torch.zeros().cuda", "torch.zeros().cuda", "range", "base_dataset.BaseDataset.pad_image", "numpy.int", "numpy.int", "range", "numpy.ceil", "numpy.ceil", "torch.zeros", "torch.zeros", "min", "min", "base_dataset.BaseDataset.transpose", "numpy.expand_dims", "torch.from_numpy", "base_dataset.BaseDataset.inference", "[].transpose().copy.numpy", "base_dataset.BaseDataset.pad_image"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_aug", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.inference", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.inference", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.pad_image"], ["", "def", "multi_scale_inference", "(", "self", ",", "model", ",", "image", ",", "scales", "=", "[", "1", "]", ",", "flip", "=", "False", ")", ":", "\n", "        ", "batch", ",", "_", ",", "ori_height", ",", "ori_width", "=", "image", ".", "size", "(", ")", "\n", "assert", "batch", "==", "1", ",", "\"only supporting batchsize 1.\"", "\n", "image", "=", "image", ".", "numpy", "(", ")", "[", "0", "]", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", ".", "copy", "(", ")", "\n", "stride_h", "=", "np", ".", "int", "(", "self", ".", "crop_size", "[", "0", "]", "*", "2.0", "/", "3.0", ")", "\n", "stride_w", "=", "np", ".", "int", "(", "self", ".", "crop_size", "[", "1", "]", "*", "2.0", "/", "3.0", ")", "\n", "final_pred", "=", "torch", ".", "zeros", "(", "[", "1", ",", "self", ".", "num_classes", ",", "\n", "ori_height", ",", "ori_width", "]", ")", ".", "cuda", "(", ")", "\n", "padvalue", "=", "-", "1.0", "*", "np", ".", "array", "(", "self", ".", "mean", ")", "/", "np", ".", "array", "(", "self", ".", "std", ")", "\n", "for", "scale", "in", "scales", ":", "\n", "            ", "new_img", "=", "self", ".", "multi_scale_aug", "(", "image", "=", "image", ",", "\n", "rand_scale", "=", "scale", ",", "\n", "rand_crop", "=", "False", ")", "\n", "height", ",", "width", "=", "new_img", ".", "shape", "[", ":", "-", "1", "]", "\n", "\n", "if", "height", "<", "self", ".", "crop_size", "[", "0", "]", "and", "width", "<", "self", ".", "crop_size", "[", "1", "]", ":", "\n", "                ", "new_img", "=", "self", ".", "pad_image", "(", "new_img", ",", "height", ",", "width", ",", "\n", "self", ".", "crop_size", ",", "padvalue", ")", "\n", "new_img", "=", "new_img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "new_img", "=", "np", ".", "expand_dims", "(", "new_img", ",", "axis", "=", "0", ")", "\n", "new_img", "=", "torch", ".", "from_numpy", "(", "new_img", ")", "\n", "preds", "=", "self", ".", "inference", "(", "model", ",", "new_img", ",", "flip", ")", "\n", "preds", "=", "preds", "[", ":", ",", ":", ",", "0", ":", "height", ",", "0", ":", "width", "]", "\n", "", "else", ":", "\n", "                ", "if", "height", "<", "self", ".", "crop_size", "[", "0", "]", "or", "width", "<", "self", ".", "crop_size", "[", "1", "]", ":", "\n", "                    ", "new_img", "=", "self", ".", "pad_image", "(", "new_img", ",", "height", ",", "width", ",", "\n", "self", ".", "crop_size", ",", "padvalue", ")", "\n", "", "new_h", ",", "new_w", "=", "new_img", ".", "shape", "[", ":", "-", "1", "]", "\n", "rows", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "new_h", "-", "\n", "self", ".", "crop_size", "[", "0", "]", ")", "/", "stride_h", ")", ")", "+", "1", "\n", "cols", "=", "np", ".", "int", "(", "np", ".", "ceil", "(", "1.0", "*", "(", "new_w", "-", "\n", "self", ".", "crop_size", "[", "1", "]", ")", "/", "stride_w", ")", ")", "+", "1", "\n", "preds", "=", "torch", ".", "zeros", "(", "[", "1", ",", "self", ".", "num_classes", ",", "\n", "new_h", ",", "new_w", "]", ")", ".", "cuda", "(", ")", "\n", "count", "=", "torch", ".", "zeros", "(", "[", "1", ",", "1", ",", "new_h", ",", "new_w", "]", ")", ".", "cuda", "(", ")", "\n", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "                    ", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "                        ", "h0", "=", "r", "*", "stride_h", "\n", "w0", "=", "c", "*", "stride_w", "\n", "h1", "=", "min", "(", "h0", "+", "self", ".", "crop_size", "[", "0", "]", ",", "new_h", ")", "\n", "w1", "=", "min", "(", "w0", "+", "self", ".", "crop_size", "[", "1", "]", ",", "new_w", ")", "\n", "crop_img", "=", "new_img", "[", "h0", ":", "h1", ",", "w0", ":", "w1", ",", ":", "]", "\n", "if", "h1", "==", "new_h", "or", "w1", "==", "new_w", ":", "\n", "                            ", "crop_img", "=", "self", ".", "pad_image", "(", "crop_img", ",", "\n", "h1", "-", "h0", ",", "\n", "w1", "-", "w0", ",", "\n", "self", ".", "crop_size", ",", "\n", "padvalue", ")", "\n", "", "crop_img", "=", "crop_img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "crop_img", "=", "np", ".", "expand_dims", "(", "crop_img", ",", "axis", "=", "0", ")", "\n", "crop_img", "=", "torch", ".", "from_numpy", "(", "crop_img", ")", "\n", "pred", "=", "self", ".", "inference", "(", "model", ",", "crop_img", ",", "flip", ")", "\n", "preds", "[", ":", ",", ":", ",", "h0", ":", "h1", ",", "w0", ":", "w1", "]", "+=", "pred", "[", ":", ",", ":", ",", "0", ":", "h1", "-", "h0", ",", "0", ":", "w1", "-", "w0", "]", "\n", "count", "[", ":", ",", ":", ",", "h0", ":", "h1", ",", "w0", ":", "w1", "]", "+=", "1", "\n", "", "", "preds", "=", "preds", "/", "count", "\n", "preds", "=", "preds", "[", ":", ",", ":", ",", ":", "height", ",", ":", "width", "]", "\n", "", "preds", "=", "F", ".", "interpolate", "(", "preds", ",", "(", "ori_height", ",", "ori_width", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "final_pred", "+=", "preds", "\n", "", "return", "final_pred", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_aug.PASCALAug.__init__": [[25, 68], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "logger.info", "os.path.join", "os.path.join", "line.rstrip", "os.path.join", "ValueError", "tuple", "open", "len"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "21", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", ")", ":", "\n", "\n", "        ", "self", ".", "Classes", "=", "[", "\n", "'background'", ",", "'airplane'", ",", "'bicycle'", ",", "'bird'", ",", "'boat'", ",", "'bottle'", ",", "\n", "'bus'", ",", "'car'", ",", "'cat'", ",", "'chair'", ",", "'cow'", ",", "'diningtable'", ",", "'dog'", ",", "'horse'", ",", "\n", "'motorcycle'", ",", "'person'", ",", "'potted-plant'", ",", "'sheep'", ",", "'sofa'", ",", "'train'", ",", "\n", "'tv'", "]", "\n", "super", "(", "PASCALAug", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "crop_size", ",", "\n", "scale_factor", ",", "mean", ",", "std", ")", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'VOCaug/dataset'", ")", ")", "\n", "self", ".", "split", "=", "list_path", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "class_weights", "=", "None", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "# prepare data", "\n", "if", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'val.txt'", ")", "\n", "", "elif", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'trainval.txt'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Only supporting train and val set.'", ")", "\n", "\n", "", "self", ".", "files", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "tuple", "(", "open", "(", "file_path", ",", "'r'", ")", ")", "]", "\n", "\n", "logger", ".", "info", "(", "f'The number of samples of {self.split} set: {len(self.files)}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_aug.PASCALAug.__getitem__": [[69, 99], ["os.path.join", "os.path.join", "cv2.imread", "scipy.io.loadmat", "pascal_aug.PASCALAug.gen_sample", "image.transpose.transpose.copy", "pascal_aug.PASCALAug.copy", "numpy.array", "os.path.join", "os.path.join", "cv2.imread", "cv2.resize", "pascal_aug.PASCALAug.input_transform", "image.transpose.transpose.transpose", "scipy.io.loadmat", "cv2.resize", "pascal_aug.PASCALAug.label_transform", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'img'", ")", "\n", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'cls'", ")", "\n", "\n", "img_id", "=", "self", ".", "files", "[", "index", "]", "\n", "\n", "if", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_id", "+", "'.jpg'", ")", ")", "\n", "mat", "=", "scipy", ".", "io", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "img_id", "+", "'.mat'", ")", ",", "\n", "mat_dtype", "=", "True", ",", "squeeze_me", "=", "True", ",", "struct_as_record", "=", "False", ")", "\n", "label", "=", "mat", "[", "'GTcls'", "]", ".", "Segmentation", "# np.ndarray", "\n", "size", "=", "image", ".", "shape", "\n", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "", "elif", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_id", "+", "'.jpg'", ")", ")", "\n", "size", "=", "image", ".", "shape", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "mat", "=", "scipy", ".", "io", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "img_id", "+", "'.mat'", ")", ",", "\n", "mat_dtype", "=", "True", ",", "squeeze_me", "=", "True", ",", "struct_as_record", "=", "False", ")", "\n", "label", "=", "mat", "[", "'GTcls'", "]", ".", "Segmentation", "# np.ndarray", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "img_id", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_aug.PASCALAug.label_transform": [[100, 104], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "\n", "label", "[", "label", "==", "255", "]", "=", "-", "1", "\n", "return", "label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.__init__": [[25, 71], ["base_dataset.BaseDataset.__init__", "os.path.abspath", "logger.info", "os.path.join", "os.path.join", "line.rstrip", "os.path.join", "tuple", "os.path.abspath", "os.path.join", "ValueError", "open", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "list_path", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "21", ",", "\n", "multi_scale", "=", "True", ",", "\n", "flip", "=", "True", ",", "\n", "ignore_label", "=", "-", "1", ",", "\n", "base_size", "=", "520", ",", "\n", "crop_size", "=", "(", "480", ",", "480", ")", ",", "\n", "scale_factor", "=", "16", ",", "\n", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ",", ")", ":", "\n", "\n", "        ", "self", ".", "Classes", "=", "[", "\n", "'background'", ",", "'airplane'", ",", "'bicycle'", ",", "'bird'", ",", "'boat'", ",", "'bottle'", ",", "\n", "'bus'", ",", "'car'", ",", "'cat'", ",", "'chair'", ",", "'cow'", ",", "'diningtable'", ",", "'dog'", ",", "'horse'", ",", "\n", "'motorcycle'", ",", "'person'", ",", "'potted-plant'", ",", "'sheep'", ",", "'sofa'", ",", "'train'", ",", "\n", "'tv'", "]", "\n", "super", "(", "PASCALVOC", ",", "self", ")", ".", "__init__", "(", "ignore_label", ",", "base_size", ",", "\n", "crop_size", ",", "scale_factor", ",", "mean", ",", "std", ")", "\n", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'pascal_voc/VOCdevkit/VOC2012'", ")", ")", "\n", "self", ".", "split", "=", "list_path", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "class_weights", "=", "None", "\n", "\n", "self", ".", "multi_scale", "=", "multi_scale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "# prepare data", "\n", "if", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'ImageSets/Segmentation'", ",", "'val.txt'", ")", "\n", "", "elif", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'ImageSets/Segmentation'", ",", "'trainval.txt'", ")", "\n", "", "elif", "'test'", "in", "self", ".", "split", ":", "\n", "            ", "self", ".", "root", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'voc2012_test'", ")", ")", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'ImageSets/Segmentation'", ",", "'test.txt'", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown dataset split.'", ")", "\n", "\n", "", "self", ".", "files", "=", "[", "line", ".", "rstrip", "(", "'\\n'", ")", "for", "line", "in", "tuple", "(", "open", "(", "file_path", ",", "'r'", ")", ")", "]", "\n", "\n", "logger", ".", "info", "(", "f'The number of samples of {self.split} set: {len(self.files)}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.__getitem__": [[72, 103], ["os.path.join", "cv2.imread", "os.path.join", "PIL.Image.open", "numpy.array", "os.path.join", "pascal_voc.PASCALVOC.input_transform", "image.transpose.transpose.transpose", "os.path.join", "pascal_voc.PASCALVOC.gen_sample", "image.transpose.transpose.copy", "pascal_voc.PASCALVOC.copy", "numpy.array", "image.transpose.transpose.copy", "numpy.array", "cv2.resize", "pascal_voc.PASCALVOC.input_transform", "image.transpose.transpose.transpose", "cv2.resize", "pascal_voc.PASCALVOC.label_transform"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.gen_sample", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.input_transform", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'JPEGImages'", ")", "\n", "\n", "img_id", "=", "self", ".", "files", "[", "index", "]", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "img_id", "+", "'.jpg'", ")", ")", "\n", "size", "=", "image", ".", "shape", "\n", "\n", "if", "'test'", "in", "self", ".", "split", ":", "\n", "            ", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "return", "image", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "img_id", "\n", "\n", "", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'SegmentationClass'", ")", "\n", "label", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "img_id", "+", "'.png'", ")", ")", "\n", "label", "=", "np", ".", "array", "(", "label", ")", "\n", "\n", "if", "'train'", "in", "self", ".", "split", ":", "\n", "            ", "image", ",", "label", "=", "self", ".", "gen_sample", "(", "image", ",", "label", ",", "self", ".", "multi_scale", ",", "self", ".", "flip", ")", "\n", "", "elif", "'val'", "in", "self", ".", "split", ":", "\n", "            ", "image", "=", "cv2", ".", "resize", "(", "image", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "image", "=", "self", ".", "input_transform", "(", "image", ")", "\n", "image", "=", "image", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "cv2", ".", "resize", "(", "label", ",", "self", ".", "crop_size", "[", ":", ":", "-", "1", "]", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "label", "=", "self", ".", "label_transform", "(", "label", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "image", ".", "copy", "(", ")", ",", "label", ".", "copy", "(", ")", ",", "np", ".", "array", "(", "size", ")", ",", "img_id", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.label_transform": [[104, 108], ["numpy.array().astype", "numpy.array"], "methods", ["None"], ["", "def", "label_transform", "(", "self", ",", "label", ")", ":", "\n", "        ", "label", "=", "np", ".", "array", "(", "label", ")", ".", "astype", "(", "'int32'", ")", "\n", "label", "[", "label", "==", "255", "]", "=", "-", "1", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.save_pred": [[109, 115], ["numpy.asarray.cpu().numpy", "numpy.asarray", "range", "numpy.argmax", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "numpy.asarray.cpu", "os.path.join"], "methods", ["None"], ["", "def", "save_pred", "(", "self", ",", "preds", ",", "sv_path", ",", "name", ")", ":", "\n", "        ", "preds", "=", "preds", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "preds", "=", "np", ".", "asarray", "(", "np", ".", "argmax", "(", "preds", ",", "axis", "=", "1", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "i", "in", "range", "(", "preds", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "save_img", "=", "Image", ".", "fromarray", "(", "preds", "[", "i", "]", ")", "\n", "save_img", ".", "save", "(", "os", ".", "path", ".", "join", "(", "sv_path", ",", "name", "[", "i", "]", "+", "'.png'", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.config.default.update_config": [[111, 118], ["cfg.defrost", "cfg.merge_from_file", "cfg.merge_from_list", "cfg.freeze"], "function", ["None"], ["def", "update_config", "(", "cfg", ",", "args", ")", ":", "\n", "    ", "cfg", ".", "defrost", "(", ")", "\n", "\n", "cfg", ".", "merge_from_file", "(", "args", ".", "cfg", ")", "\n", "cfg", ".", "merge_from_list", "(", "args", ".", "opts", ")", "\n", "\n", "cfg", ".", "freeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.BatchNorm2d.__init__": [[22, 24], ["torch.BatchNorm2d.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BatchNorm2d", ",", "self", ")", ".", "__init__", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.ChannelShuffle.__init__": [[28, 31], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ChannelShuffle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.ChannelShuffle.extra_repr": [[32, 34], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "f'groups={self.groups}'", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.ChannelShuffle.forward": [[35, 46], ["x.view.view.size", "x.view.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view.view", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "self", ".", "groups", "\n", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "self", ".", "groups", ",", "channels_per_group", ",", "height", ",", "width", ")", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.FlattenModule.__init__": [[50, 95], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "segnet.ChannelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "len", "len", "core.self_attention.SelfAttentionBlock", "core.psp.PyramidPooling", "len", "core.conv.conv1x1", "norm_layer", "core.conv.conv1x1", "norm_layer", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "segnet.ChannelShuffle", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "expansions", ",", "groups", ",", "upscale", ",", "pool_sizes", "=", "None", ",", "\n", "norm_layer", "=", "BatchNorm2d", ")", ":", "\n", "        ", "assert", "len", "(", "groups", ")", "==", "len", "(", "expansions", ")", "\n", "super", "(", "FlattenModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "# context strengthening strategy", "\n", "if", "pool_sizes", "is", "None", ":", "\n", "            ", "self", ".", "ctx_module", "=", "SelfAttentionBlock", "(", "\n", "in_channels", "=", "inplanes", ",", "\n", "key_channels", "=", "inplanes", "//", "8", ",", "\n", "value_channels", "=", "inplanes", "//", "4", ",", "\n", "norm_layer", "=", "norm_layer", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "ctx_module", "=", "PyramidPooling", "(", "inplanes", ",", "pool_sizes", ",", "norm_layer", ")", "\n", "", "self", ".", "inp", "=", "inplanes", "*", "2", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "groups", ")", ")", ":", "\n", "            ", "\"\"\"\n            reference:\n                complying with complementary condition proposed in IGCV2\n            \"\"\"", "\n", "conv1", "=", "conv1x1", "(", "self", ".", "inp", ",", "self", ".", "inp", ",", "groups", "=", "groups", "[", "i", "]", ")", "\n", "norm1", "=", "norm_layer", "(", "self", ".", "inp", ")", "\n", "conv2", "=", "conv1x1", "(", "self", ".", "inp", ",", "self", ".", "inp", "*", "expansions", "[", "i", "]", ",", "groups", "=", "self", ".", "inp", "//", "groups", "[", "i", "]", ")", "\n", "norm2", "=", "norm_layer", "(", "self", ".", "inp", "*", "expansions", "[", "i", "]", ")", "\n", "layers", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "conv1", ")", ",", "\n", "(", "'norm1'", ",", "norm1", ")", ",", "\n", "(", "'cs'", ",", "ChannelShuffle", "(", "groups", "[", "i", "]", ")", ")", ",", "\n", "(", "'conv2'", ",", "conv2", ")", ",", "\n", "(", "'norm2'", ",", "norm2", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", ")", "\n", "self", ".", "inp", "*=", "expansions", "[", "i", "]", "\n", "\n", "", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\"\"\"\n        Rearrange pixel-wise visual descriptors\n        from channel domain to spatial domain.\n        \"\"\"", "\n", "self", ".", "cs", "=", "ChannelShuffle", "(", "upscale", "**", "2", ")", "\n", "self", ".", "ps", "=", "nn", ".", "PixelShuffle", "(", "upscale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.FlattenModule.forward": [[96, 104], ["segnet.FlattenModule.ctx_module", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "segnet.FlattenModule.layers", "segnet.FlattenModule.cs", "segnet.FlattenModule.ps"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "context", "=", "self", ".", "ctx_module", "(", "x", ")", "\n", "feat", "=", "torch", ".", "cat", "(", "[", "x", ",", "context", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "layers", "(", "feat", ")", "\n", "out", "=", "self", ".", "cs", "(", "out", ")", "\n", "out", "=", "self", ".", "ps", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.SegNet.__init__": [[108, 154], ["torch.Module.__init__", "backbone.get_backbone", "segnet.FlattenModule", "torch.Sequential", "torch.Sequential", "torch.Sequential", "segnet.FlattenModule", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "segnet.SegNet._init_weights", "collections.OrderedDict", "collections.OrderedDict", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.__init__.get_backbone", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._init_weights"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "SegNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "extra", "=", "config", ".", "MODEL", ".", "EXTRA", "\n", "backbone", "=", "extra", ".", "BACKBONE", "\n", "self", ".", "nclass", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", "\n", "\n", "_backbone_params", "=", "{", "\n", "'num_layers'", ":", "extra", ".", "NUM_LAYERS", ",", "\n", "'pretrained'", ":", "extra", ".", "BASE_PRETRAINED", ",", "\n", "'deep_stem'", ":", "extra", ".", "DEEP_STEM", ",", "\n", "'stem_width'", ":", "extra", ".", "STEM_WIDTH", ",", "\n", "'avg_down'", ":", "extra", ".", "AVG_DOWN", ",", "\n", "}", "\n", "self", ".", "base", "=", "get_backbone", "(", "backbone", ",", "**", "_backbone_params", ")", "\n", "\n", "_flatten_layer", "=", "FlattenModule", "(", "\n", "inplanes", "=", "self", ".", "base", ".", "out_planes", "[", "1", "]", ",", "\n", "expansions", "=", "extra", ".", "EXPS1", ",", "\n", "groups", "=", "extra", ".", "GROUPS1", ",", "\n", "upscale", "=", "extra", ".", "UPSCALE1", ",", "\n", "pool_sizes", "=", "extra", ".", "POOL_SIZES1", ",", "\n", ")", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'flatten'", ",", "_flatten_layer", ")", ",", "\n", "(", "'dropout'", ",", "nn", ".", "Dropout2d", "(", "extra", ".", "DROP1", ")", ")", ",", "\n", "(", "'pred'", ",", "nn", ".", "Conv2d", "(", "_flatten_layer", ".", "inp", "//", "extra", ".", "UPSCALE1", "**", "2", ",", "\n", "self", ".", "nclass", ",", "1", ",", "bias", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "_aux_flatten_layer", "=", "FlattenModule", "(", "\n", "inplanes", "=", "self", ".", "base", ".", "out_planes", "[", "0", "]", ",", "\n", "expansions", "=", "extra", ".", "EXPS2", ",", "\n", "groups", "=", "extra", ".", "GROUPS2", ",", "\n", "upscale", "=", "extra", ".", "UPSCALE2", ",", "\n", "pool_sizes", "=", "extra", ".", "POOL_SIZES2", ",", "\n", ")", "\n", "self", ".", "aux_head", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'flatten'", ",", "_aux_flatten_layer", ")", ",", "\n", "(", "'dropout'", ",", "nn", ".", "Dropout2d", "(", "extra", ".", "DROP2", ")", ")", ",", "\n", "(", "'pred'", ",", "nn", ".", "Conv2d", "(", "_aux_flatten_layer", ".", "inp", "//", "extra", ".", "UPSCALE2", "**", "2", ",", "\n", "self", ".", "nclass", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "self", ".", "head_alpha_nwd", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n", "self", ".", "_init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.SegNet._init_weights": [[155, 165], ["segnet.SegNet.named_modules", "name.find", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "isinstance", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "m", "in", "self", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "name", ".", "find", "(", "'base'", ")", "==", "-", "1", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "std", "=", "1e-3", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                        ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.SegNet.forward": [[166, 171], ["segnet.SegNet.base", "segnet.SegNet.aux_head", "segnet.SegNet.head"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x3", ",", "x4", "=", "self", ".", "base", "(", "x", ")", "\n", "aux", "=", "self", ".", "aux_head", "(", "x3", ")", "\n", "out", "=", "self", ".", "head", "(", "x4", ")", "\n", "return", "out", "+", "self", ".", "head_alpha_nwd", "*", "aux", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.models.segnet.get_seg_model": [[173, 175], ["segnet.SegNet"], "function", ["None"], ["", "", "def", "get_seg_model", "(", "config", ")", ":", "\n", "    ", "return", "SegNet", "(", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.BatchNorm2d.__init__": [[22, 24], ["torch.BatchNorm2d.__init__"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BatchNorm2d", ",", "self", ")", ".", "__init__", "(", "planes", ",", "momentum", "=", "BN_MOMENTUM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.BasicBlock.__init__": [[32, 47], ["torch.Module.__init__", "core.conv.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "core.conv.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "'BasicBlock only supports groups=1 and base_width=64'", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.BasicBlock.forward": [[48, 65], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.Bottleneck.__init__": [[73, 88], ["torch.Module.__init__", "core.conv.conv1x1", "norm_layer", "core.conv.conv3x3", "norm_layer", "core.conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "\n", "base_width", "=", "64", ",", "norm_layer", "=", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.", ")", ")", "*", "groups", "\n", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.Bottleneck.forward": [[89, 110], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet.__init__": [[116, 157], ["torch.Module.__init__", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet.out_planes.append", "resnet.ResNet._make_layer", "resnet.ResNet.out_planes.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet.ResNet._load_pretrained_model", "resnet.ResNet._init_weights", "collections.OrderedDict", "core.conv.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "core.conv.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "core.conv.conv3x3"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._load_pretrained_model", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._init_weights", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3"], ["def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "groups", "=", "1", ",", "width_per_group", "=", "64", ",", "\n", "deep_stem", "=", "False", ",", "stem_width", "=", "32", ",", "avg_down", "=", "False", ",", "\n", "norm_layer", "=", "BatchNorm2d", ",", "pretrained", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_norm_layer", "=", "norm_layer", "\n", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "avg_down", "=", "avg_down", "\n", "self", ".", "out_planes", "=", "[", "]", "\n", "\n", "if", "not", "deep_stem", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "inplanes", "=", "64", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "conv3x3", "(", "3", ",", "stem_width", ",", "2", ")", ")", ",", "\n", "(", "'norm1'", ",", "norm_layer", "(", "stem_width", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'conv2'", ",", "conv3x3", "(", "stem_width", ",", "stem_width", ")", ")", ",", "\n", "(", "'norm2'", ",", "norm_layer", "(", "stem_width", ")", ")", ",", "\n", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'conv3'", ",", "conv3x3", "(", "stem_width", ",", "stem_width", "*", "2", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "inplanes", "=", "stem_width", "*", "2", "\n", "", "self", ".", "bn1", "=", "norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "out_planes", ".", "append", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "out_planes", ".", "append", "(", "self", ".", "inplanes", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "_load_pretrained_model", "(", "pretrained", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._make_layer": [[158, 181], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "collections.OrderedDict", "block", "torch.Sequential.insert", "core.conv.conv1x1", "norm_layer", "core.conv.conv1x1", "norm_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1"], ["", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "self", ".", "avg_down", ":", "\n", "                ", "downsample", "=", "[", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ")", ",", "]", "\n", "if", "stride", "!=", "1", ":", "\n", "                    ", "downsample", ".", "insert", "(", "0", ",", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "stride", ",", "stride", ",", "ceil_mode", "=", "True", ")", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "downsample", "=", "[", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", ")", ",", "]", "\n", "", "downsample", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "downsample", ")", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "\n", "self", ".", "base_width", ",", "norm_layer", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "norm_layer", "=", "norm_layer", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet.forward": [[182, 197], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "feats.append", "resnet.ResNet.layer4", "feats.append", "tuple"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "[", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "feats", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "feats", ".", "append", "(", "x", ")", "\n", "\n", "return", "tuple", "(", "feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._init_weights": [[198, 213], ["logger.info", "resnet.ResNet.modules", "resnet.ResNet.modules", "isinstance", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.zeros_", "torch.init.zeros_", "torch.init.zeros_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'Training from Scratch!'", ")", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.ResNet._load_pretrained_model": [[214, 241], ["os.path.isfile", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "logger.info", "resnet.ResNet.state_dict", "torch.load.items", "torch.load.items", "torch.load.items", "resnet.ResNet.update", "resnet.ResNet.load_state_dict", "ValueError", "logger.info", "logger.info", "torch.load.items", "torch.load.items", "torch.load.items", "logger.info", "resnet.ResNet.keys"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update"], ["", "", "", "def", "_load_pretrained_model", "(", "self", ",", "pretrained", "=", "''", ")", ":", "\n", "        ", "\"\"\"\n        reference: xingyizhou github repo CenterNet\n        \"\"\"", "\n", "if", "os", ".", "path", ".", "isfile", "(", "pretrained", ")", ":", "\n", "            ", "pretrained_dict", "=", "torch", ".", "load", "(", "pretrained", ")", "\n", "logger", ".", "info", "(", "'=> Loading pretrained model {}.'", ".", "format", "(", "pretrained", ")", ")", "\n", "model_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "# check loaded parameters size/shape compatibility", "\n", "for", "k", "in", "pretrained_dict", ":", "\n", "                ", "if", "k", "in", "model_dict", ":", "\n", "                    ", "if", "pretrained_dict", "[", "k", "]", ".", "shape", "!=", "model_dict", "[", "k", "]", ".", "shape", ":", "\n", "                        ", "logger", ".", "info", "(", "'=> Skip loading parameter {}, required shape {}, '", "'loaded shape {}.'", ".", "format", "(", "\n", "k", ",", "model_dict", "[", "k", "]", ".", "shape", ",", "pretrained_dict", "[", "k", "]", ".", "shape", ")", ")", "\n", "pretrained_dict", "[", "k", "]", "=", "model_dict", "[", "k", "]", "\n", "", "", "else", ":", "\n", "                    ", "logger", ".", "info", "(", "'=> Drop parameter {}.'", ".", "format", "(", "k", ")", ")", "\n", "", "", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "in", "model_dict", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "_", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'=> Loading {} from pretrained model {}'", ".", "format", "(", "k", ",", "pretrained", ")", ")", "\n", "", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "self", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Pretrained model {} does not exist!'", ".", "format", "(", "pretrained", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.resnet.get_resnet": [[250, 255], ["resnet.ResNet"], "function", ["None"], ["def", "get_resnet", "(", "num_layers", "=", "50", ",", "**", "kwargs", ")", ":", "\n", "    ", "block_class", ",", "layers", "=", "resnet_spec", "[", "num_layers", "]", "\n", "model", "=", "ResNet", "(", "block_class", ",", "layers", ",", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.backbone.__init__.get_backbone": [[10, 14], ["name.lower.lower", "_backbones.keys"], "function", ["None"], []], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.psp.PyramidPooling.__init__": [[15, 32], ["torch.Module.__init__", "int", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "branches.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "pool_sizes", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "PyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "branches", "=", "[", "]", "\n", "out_channels", "=", "int", "(", "in_channels", "/", "4", ")", "\n", "\n", "for", "s", "in", "pool_sizes", ":", "\n", "            ", "branches", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'pool'", ",", "nn", ".", "AdaptiveAvgPool2d", "(", "s", ")", ")", ",", "\n", "(", "'conv'", ",", "conv1x1", "(", "in_channels", ",", "out_channels", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "out_channels", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", ")", "\n", "", "self", ".", "branches", "=", "nn", ".", "ModuleList", "(", "branches", ")", "\n", "# bilinear interpolation options", "\n", "self", ".", "_up_kwargs", "=", "{", "'mode'", ":", "'bilinear'", ",", "'align_corners'", ":", "False", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.psp.PyramidPooling.forward": [[33, 40], ["x.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.interpolate", "torch.interpolate", "torch.interpolate", "feat.append", "b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "_", ",", "_", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "feat", "=", "[", "]", "\n", "for", "b", "in", "self", ".", "branches", ":", "\n", "            ", "out", "=", "F", ".", "interpolate", "(", "b", "(", "x", ")", ",", "size", "=", "(", "h", ",", "w", ")", ",", "**", "self", ".", "_up_kwargs", ")", "\n", "feat", ".", "append", "(", "out", ")", "\n", "", "return", "torch", ".", "cat", "(", "feat", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv3x3": [[4, 9], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "\n", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1": [[11, 15], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "\n", "groups", "=", "groups", ",", "bias", "=", "False", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.self_attention.SelfAttentionBlock.__init__": [[24, 57], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "conv.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.conv.conv1x1"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "key_channels", ",", "value_channels", ",", "\n", "out_channels", "=", "None", ",", "scale", "=", "1", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "super", "(", "SelfAttentionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "key_channels", "=", "key_channels", "\n", "self", ".", "value_channels", "=", "value_channels", "\n", "if", "out_channels", "is", "None", ":", "\n", "            ", "self", ".", "out_channels", "=", "in_channels", "\n", "", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "scale", ",", "scale", ")", ")", "if", "scale", "!=", "1", "else", "None", "\n", "self", ".", "f_key", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "in_channels", ",", "self", ".", "key_channels", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "self", ".", "key_channels", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "self", ".", "f_query", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "in_channels", ",", "self", ".", "key_channels", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "self", ".", "key_channels", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "self", ".", "f_value", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "in_channels", ",", "self", ".", "value_channels", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "self", ".", "value_channels", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "self", ".", "W", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "conv1x1", "(", "self", ".", "value_channels", ",", "self", ".", "out_channels", ")", ")", ",", "\n", "(", "'norm'", ",", "norm_layer", "(", "self", ".", "out_channels", ")", ")", ",", "\n", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "# bilinear interpolation options", "\n", "self", ".", "_up_kwargs", "=", "{", "'mode'", ":", "'bilinear'", ",", "'align_corners'", ":", "False", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.self_attention.SelfAttentionBlock.forward": [[58, 81], ["self_attention.SelfAttentionBlock.SelfAttentionBlock.f_value().view", "value.permute.permute.permute", "self_attention.SelfAttentionBlock.SelfAttentionBlock.f_query().view", "query.permute.permute.permute", "self_attention.SelfAttentionBlock.SelfAttentionBlock.f_key().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.interpolate.permute().contiguous", "torch.interpolate.view", "self_attention.SelfAttentionBlock.SelfAttentionBlock.W", "self_attention.SelfAttentionBlock.SelfAttentionBlock.size", "self_attention.SelfAttentionBlock.SelfAttentionBlock.size", "self_attention.SelfAttentionBlock.SelfAttentionBlock.size", "self_attention.SelfAttentionBlock.SelfAttentionBlock.pool", "torch.interpolate", "torch.interpolate", "torch.interpolate", "self_attention.SelfAttentionBlock.SelfAttentionBlock.f_value", "self_attention.SelfAttentionBlock.SelfAttentionBlock.f_query", "self_attention.SelfAttentionBlock.SelfAttentionBlock.f_key", "torch.interpolate.permute", "self_attention.SelfAttentionBlock.SelfAttentionBlock.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "h", ",", "w", "=", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", "\n", "if", "self", ".", "pool", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "\n", "", "value", "=", "self", ".", "f_value", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "value_channels", ",", "-", "1", ")", "\n", "value", "=", "value", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "query", "=", "self", ".", "f_query", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "-", "1", ")", "\n", "query", "=", "query", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "key", "=", "self", ".", "f_key", "(", "x", ")", ".", "view", "(", "batch_size", ",", "self", ".", "key_channels", ",", "-", "1", ")", "\n", "\n", "sim_map", "=", "torch", ".", "matmul", "(", "query", ",", "key", ")", "\n", "sim_map", "=", "(", "self", ".", "key_channels", "**", "-", ".5", ")", "*", "sim_map", "\n", "sim_map", "=", "F", ".", "softmax", "(", "sim_map", ",", "dim", "=", "-", "1", ")", "\n", "\n", "context", "=", "torch", ".", "matmul", "(", "sim_map", ",", "value", ")", "\n", "context", "=", "context", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "context", "=", "context", ".", "view", "(", "batch_size", ",", "self", ".", "value_channels", ",", "*", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "context", "=", "self", ".", "W", "(", "context", ")", "\n", "if", "self", ".", "scale", ">", "1", ":", "\n", "            ", "context", "=", "F", ".", "interpolate", "(", "input", "=", "context", ",", "size", "=", "(", "h", ",", "w", ")", ",", "**", "self", ".", "_up_kwargs", ")", "\n", "\n", "", "return", "context", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.reduce_tensor": [[24, 36], ["utils.utils.get_world_size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.reduce"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size"], ["def", "reduce_tensor", "(", "inp", ")", ":", "\n", "    ", "\"\"\"\n    Reduce the loss from all processes so that\n    process with rank 0 has the averaged results.\n    \"\"\"", "\n", "world_size", "=", "get_world_size", "(", ")", "\n", "if", "world_size", "<", "2", ":", "\n", "        ", "return", "inp", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "reduced_inp", "=", "inp", "\n", "dist", ".", "reduce", "(", "reduced_inp", ",", "dst", "=", "0", ")", "\n", "", "return", "reduced_inp", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.train": [[38, 83], ["model.train", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "time.time", "utils.utils.get_rank", "utils.utils.get_world_size", "enumerate", "labels.long().to.long().to", "images.to.to", "model", "function.reduce_tensor", "optimizer.zero_grad", "loss.backward", "optimizer.step", "lr_scheduler.step", "utils.utils.AverageMeter.update", "time.time", "utils.utils.AverageMeter.update", "writer.add_scalar", "reduce_tensor.item", "logging.info", "labels.long().to.long", "time.time", "utils.utils.AverageMeter.average", "utils.utils.AverageMeter.average", "utils.utils.AverageMeter.average"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.train", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_rank", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.reduce_tensor", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average"], ["", "def", "train", "(", "config", ",", "epoch", ",", "num_epoch", ",", "epoch_iters", ",", "trainloader", ",", "\n", "optimizer", ",", "lr_scheduler", ",", "model", ",", "writer_dict", ",", "device", ")", ":", "\n", "# Training", "\n", "    ", "model", ".", "train", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "ave_loss", "=", "AverageMeter", "(", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "rank", "=", "get_rank", "(", ")", "\n", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "for", "i_iter", ",", "batch", "in", "enumerate", "(", "trainloader", ",", "0", ")", ":", "\n", "        ", "images", ",", "labels", ",", "_", ",", "_", "=", "batch", "\n", "labels", "=", "labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "\n", "loss", ",", "_", "=", "model", "(", "images", ",", "labels", ")", "\n", "reduced_loss", "=", "reduce_tensor", "(", "loss", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "tic", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "\n", "# update average loss", "\n", "ave_loss", ".", "update", "(", "reduced_loss", ".", "item", "(", ")", ")", "\n", "\n", "lr", "=", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "\n", "if", "i_iter", "%", "config", ".", "PRINT_FREQ", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "print_loss", "=", "ave_loss", ".", "average", "(", ")", "/", "world_size", "\n", "msg", "=", "'Epoch: [{}/{}] Iter:[{}/{}], Time: {:.2f}, '", "'lr: {:.6f}, Loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "num_epoch", ",", "i_iter", ",", "epoch_iters", ",", "\n", "batch_time", ".", "average", "(", ")", ",", "lr", ",", "print_loss", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "        ", "writer", "=", "writer_dict", "[", "'writer'", "]", "\n", "global_steps", "=", "writer_dict", "[", "'train_global_steps'", "]", "\n", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "ave_loss", ".", "average", "(", ")", "/", "world_size", ",", "global_steps", ")", "\n", "writer_dict", "[", "'train_global_steps'", "]", "=", "global_steps", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.validate": [[85, 131], ["utils.utils.get_rank", "utils.utils.get_world_size", "model.eval", "utils.utils.AverageMeter", "numpy.zeros", "numpy.zeros", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "reduce_tensor().cpu().numpy", "reduce_tensor().cpu().numpy", "IoU.mean", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "utils.utils.AverageMeter.average", "writer.add_scalar", "writer.add_scalar", "label.long().to.size", "label.long().to.long().to", "image.to.to", "model", "function.reduce_tensor", "utils.utils.AverageMeter.update", "utils.metric.batch_intersection_union", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "reduce_tensor().cpu", "reduce_tensor().cpu", "numpy.float64", "numpy.spacing", "torch.nn.functional.interpolate", "reduce_tensor.item", "logging.info", "label.long().to.long", "function.reduce_tensor", "function.reduce_tensor", "F.interpolate.size", "F.interpolate.size", "utils.utils.AverageMeter.average"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_rank", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_world_size", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.reduce_tensor", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.batch_intersection_union", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.reduce_tensor", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.reduce_tensor", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.average"], ["", "", "def", "validate", "(", "config", ",", "testloader", ",", "model", ",", "writer_dict", ",", "device", ")", ":", "\n", "    ", "rank", "=", "get_rank", "(", ")", "\n", "world_size", "=", "get_world_size", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "ave_loss", "=", "AverageMeter", "(", ")", "\n", "tot_inter", "=", "np", ".", "zeros", "(", "config", ".", "DATASET", ".", "NUM_CLASSES", ")", "\n", "tot_union", "=", "np", ".", "zeros", "(", "config", ".", "DATASET", ".", "NUM_CLASSES", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i_iter", ",", "batch", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "image", ",", "label", ",", "_", ",", "_", "=", "batch", "\n", "size", "=", "label", ".", "size", "(", ")", "\n", "label", "=", "label", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "image", "=", "image", ".", "to", "(", "device", ")", "\n", "\n", "loss", ",", "pred", "=", "model", "(", "image", ",", "label", ")", "\n", "if", "pred", ".", "size", "(", ")", "[", "-", "2", "]", "!=", "size", "[", "-", "2", "]", "or", "pred", ".", "size", "(", ")", "[", "-", "1", "]", "!=", "size", "[", "-", "1", "]", ":", "\n", "                ", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "size", "=", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "", "reduced_loss", "=", "reduce_tensor", "(", "loss", ")", "\n", "ave_loss", ".", "update", "(", "reduced_loss", ".", "item", "(", ")", ")", "\n", "\n", "batch_inter", ",", "batch_union", "=", "batch_intersection_union", "(", "pred", ",", "label", ",", "\n", "config", ".", "DATASET", ".", "NUM_CLASSES", ")", "\n", "tot_inter", "+=", "batch_inter", "\n", "tot_union", "+=", "batch_union", "\n", "\n", "if", "i_iter", "%", "config", ".", "PRINT_FREQ", "==", "0", "and", "rank", "==", "0", ":", "\n", "                ", "msg", "=", "f'Iter: {i_iter}, Loss: {ave_loss.average() / world_size:.6f}'", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "", "", "", "tot_inter", "=", "torch", ".", "from_numpy", "(", "tot_inter", ")", ".", "to", "(", "device", ")", "\n", "tot_union", "=", "torch", ".", "from_numpy", "(", "tot_union", ")", ".", "to", "(", "device", ")", "\n", "tot_inter", "=", "reduce_tensor", "(", "tot_inter", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "tot_union", "=", "reduce_tensor", "(", "tot_union", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "IoU", "=", "np", ".", "float64", "(", "1.0", ")", "*", "tot_inter", "/", "(", "np", ".", "spacing", "(", "1", ",", "dtype", "=", "np", ".", "float64", ")", "+", "tot_union", ")", "\n", "mean_IoU", "=", "IoU", ".", "mean", "(", ")", "\n", "print_loss", "=", "ave_loss", ".", "average", "(", ")", "/", "world_size", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "writer", "=", "writer_dict", "[", "'writer'", "]", "\n", "global_steps", "=", "writer_dict", "[", "'valid_global_steps'", "]", "\n", "writer", ".", "add_scalar", "(", "'valid_loss'", ",", "print_loss", ",", "global_steps", ")", "\n", "writer", ".", "add_scalar", "(", "'valid_mIoU'", ",", "mean_IoU", ",", "global_steps", ")", "\n", "writer_dict", "[", "'valid_global_steps'", "]", "=", "global_steps", "+", "1", "\n", "\n", "", "return", "print_loss", ",", "mean_IoU", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.testval": [[133, 176], ["model.eval", "IoU.mean", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "tqdm.tqdm", "label.size", "test_dataset.multi_scale_inference", "utils.metric.batch_pix_accuracy", "utils.metric.batch_intersection_union", "numpy.spacing", "numpy.float64", "numpy.spacing", "torch.nn.functional.interpolate", "os.path.join", "test_dataset.save_pred", "logging.info", "IoU.mean", "logging.info", "os.path.exists", "os.mkdir", "F.interpolate.size", "F.interpolate.size", "numpy.float64", "numpy.spacing", "numpy.spacing"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_inference", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.batch_pix_accuracy", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.metric.batch_intersection_union", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.save_pred"], ["", "def", "testval", "(", "config", ",", "test_dataset", ",", "testloader", ",", "model", ",", "sv_dir", "=", "''", ",", "sv_pred", "=", "False", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "tot_inter", ",", "tot_union", ",", "tot_pix_correct", ",", "tot_pix_labeled", "=", "0", ",", "0", ",", "0", ",", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "index", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "testloader", ")", ")", ":", "\n", "            ", "image", ",", "label", ",", "_", ",", "name", "=", "batch", "\n", "size", "=", "label", ".", "size", "(", ")", "\n", "pred", "=", "test_dataset", ".", "multi_scale_inference", "(", "\n", "model", ",", "\n", "image", ",", "\n", "scales", "=", "config", ".", "TEST", ".", "SCALE_LIST", ",", "\n", "flip", "=", "config", ".", "TEST", ".", "FLIP_TEST", ")", "\n", "\n", "if", "pred", ".", "size", "(", ")", "[", "-", "2", "]", "!=", "size", "[", "-", "2", "]", "or", "pred", ".", "size", "(", ")", "[", "-", "1", "]", "!=", "size", "[", "-", "1", "]", ":", "\n", "                ", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "", "pix_correct", ",", "pix_labeled", "=", "batch_pix_accuracy", "(", "pred", ",", "label", ")", "\n", "tot_pix_correct", "+=", "pix_correct", "\n", "tot_pix_labeled", "+=", "pix_labeled", "\n", "inter", ",", "union", "=", "batch_intersection_union", "(", "pred", ",", "label", ",", "\n", "config", ".", "DATASET", ".", "NUM_CLASSES", ")", "\n", "tot_inter", "+=", "inter", "\n", "tot_union", "+=", "union", "\n", "\n", "if", "sv_pred", ":", "\n", "                ", "sv_path", "=", "os", ".", "path", ".", "join", "(", "sv_dir", ",", "'test_results'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sv_path", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "sv_path", ")", "\n", "", "test_dataset", ".", "save_pred", "(", "pred", ",", "sv_path", ",", "name", ")", "\n", "\n", "", "if", "index", "%", "100", "==", "0", ":", "\n", "                ", "logging", ".", "info", "(", "f'processing: {index} images'", ")", "\n", "IoU", "=", "np", ".", "float64", "(", "1.0", ")", "*", "tot_inter", "/", "(", "np", ".", "spacing", "(", "1", ",", "dtype", "=", "np", ".", "float64", ")", "+", "tot_union", ")", "\n", "mean_IoU", "=", "IoU", ".", "mean", "(", ")", "\n", "pixAcc", "=", "1.0", "*", "tot_pix_correct", "/", "(", "np", ".", "spacing", "(", "1", ",", "dtype", "=", "np", ".", "float64", ")", "+", "tot_pix_labeled", ")", "\n", "logging", ".", "info", "(", "f'mIoU: {mean_IoU:.4f}, pixAcc: {pixAcc:.4f}'", ")", "\n", "\n", "", "", "", "pixel_acc", "=", "1.0", "*", "tot_pix_correct", "/", "(", "np", ".", "spacing", "(", "1", ",", "dtype", "=", "np", ".", "float64", ")", "+", "tot_pix_labeled", ")", "\n", "IoU", "=", "np", ".", "float64", "(", "1.0", ")", "*", "tot_inter", "/", "(", "np", ".", "spacing", "(", "1", ",", "dtype", "=", "np", ".", "float64", ")", "+", "tot_union", ")", "\n", "mean_IoU", "=", "IoU", ".", "mean", "(", ")", "\n", "\n", "return", "mean_IoU", ",", "pixel_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.test": [[178, 199], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "tqdm.tqdm", "test_dataset.multi_scale_inference", "torch.nn.functional.interpolate", "os.path.join", "test_dataset.save_pred", "os.path.exists", "os.mkdir", "F.interpolate.size", "F.interpolate.size"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.multi_scale_inference", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.pascal_voc.PASCALVOC.save_pred"], ["", "def", "test", "(", "config", ",", "test_dataset", ",", "testloader", ",", "model", ",", "sv_dir", "=", "''", ",", "sv_pred", "=", "True", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "_", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "testloader", ")", ")", ":", "\n", "            ", "image", ",", "size", ",", "name", "=", "batch", "\n", "size", "=", "size", "[", "0", "]", "\n", "pred", "=", "test_dataset", ".", "multi_scale_inference", "(", "\n", "model", ",", "\n", "image", ",", "\n", "scales", "=", "config", ".", "TEST", ".", "SCALE_LIST", ",", "\n", "flip", "=", "config", ".", "TEST", ".", "FLIP_TEST", ")", "\n", "\n", "if", "pred", ".", "size", "(", ")", "[", "-", "2", "]", "!=", "size", "[", "0", "]", "or", "pred", ".", "size", "(", ")", "[", "-", "1", "]", "!=", "size", "[", "1", "]", ":", "\n", "                ", "pred", "=", "F", ".", "interpolate", "(", "pred", ",", "(", "size", "[", "-", "2", "]", ",", "size", "[", "-", "1", "]", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "", "if", "sv_pred", ":", "\n", "                ", "sv_path", "=", "os", ".", "path", ".", "join", "(", "sv_dir", ",", "'test_results'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "sv_path", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "sv_path", ")", "\n", "", "test_dataset", ".", "save_pred", "(", "pred", ",", "sv_path", ",", "name", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.CrossEntropy.__init__": [[9, 15], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ignore_label", "=", "-", "1", ",", "weight", "=", "None", ",", "reduction", "=", "'mean'", ")", ":", "\n", "        ", "super", "(", "CrossEntropy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ignore_label", "=", "ignore_label", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "weight", ",", "\n", "ignore_index", "=", "ignore_label", ",", "\n", "reduction", "=", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.CrossEntropy.forward": [[16, 26], ["criterion.CrossEntropy.criterion", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "target.size", "target.size", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "score", ",", "target", ")", ":", "\n", "        ", "ph", ",", "pw", "=", "score", ".", "size", "(", "2", ")", ",", "score", ".", "size", "(", "3", ")", "\n", "h", ",", "w", "=", "target", ".", "size", "(", "1", ")", ",", "target", ".", "size", "(", "2", ")", "\n", "if", "ph", "!=", "h", "or", "pw", "!=", "w", ":", "\n", "            ", "score", "=", "F", ".", "interpolate", "(", "score", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "", "loss", "=", "self", ".", "criterion", "(", "score", ",", "target", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__": [[29, 38], ["torch.Module.__init__", "int", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ignore_label", "=", "-", "1", ",", "thresh", "=", "0.7", ",", "min_kept", "=", "100000", ",", "\n", "weight", "=", "None", ")", ":", "\n", "        ", "super", "(", "OhemCrossEntropy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "min_kept", "=", "int", "(", "min_kept", ")", "\n", "self", ".", "ignore_label", "=", "ignore_label", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "weight", ",", "\n", "ignore_index", "=", "ignore_label", ",", "\n", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.criterion.OhemCrossEntropy.forward": [[39, 59], ["criterion.OhemCrossEntropy.criterion().contiguous().view", "criterion.OhemCrossEntropy.mean", "torch.nn.functional.interpolate.size", "torch.nn.functional.interpolate.size", "target.size", "target.size", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "target.clone().detach", "pred.gather.gather.gather", "[].contiguous().sort", "max", "torch.nn.functional.interpolate.clone().detach", "target.clone().detach.contiguous().view", "target.clone().detach.unsqueeze", "criterion.OhemCrossEntropy.criterion().contiguous", "target.clone", "[].contiguous", "torch.nn.functional.interpolate.clone", "target.clone().detach.contiguous", "min", "criterion.OhemCrossEntropy.criterion", "pred.gather.gather.numel", "pred.gather.gather.contiguous().view", "pred.gather.gather.contiguous"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "score", ",", "target", ",", "**", "kwargs", ")", ":", "\n", "        ", "ph", ",", "pw", "=", "score", ".", "size", "(", "2", ")", ",", "score", ".", "size", "(", "3", ")", "\n", "h", ",", "w", "=", "target", ".", "size", "(", "1", ")", ",", "target", ".", "size", "(", "2", ")", "\n", "if", "ph", "!=", "h", "or", "pw", "!=", "w", ":", "\n", "            ", "score", "=", "F", ".", "interpolate", "(", "score", ",", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "pred", "=", "F", ".", "softmax", "(", "score", ".", "clone", "(", ")", ".", "detach", "(", ")", ",", "dim", "=", "1", ")", "\n", "tmp_target", "=", "target", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "mask", "=", "tmp_target", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "!=", "self", ".", "ignore_label", "\n", "tmp_target", "[", "tmp_target", "==", "self", ".", "ignore_label", "]", "=", "0", "\n", "pred", "=", "pred", ".", "gather", "(", "1", ",", "tmp_target", ".", "unsqueeze", "(", "1", ")", ")", "\n", "pred", ",", "ind", "=", "pred", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", ")", "[", "mask", "]", ".", "contiguous", "(", ")", ".", "sort", "(", ")", "\n", "min_value", "=", "pred", "[", "min", "(", "self", ".", "min_kept", ",", "pred", ".", "numel", "(", ")", ")", "-", "1", "]", "\n", "threshold", "=", "max", "(", "min_value", ",", "self", ".", "thresh", ")", "\n", "\n", "", "pixel_losses", "=", "self", ".", "criterion", "(", "score", ",", "target", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "pixel_losses", "=", "pixel_losses", "[", "mask", "]", "[", "ind", "]", "\n", "pixel_losses", "=", "pixel_losses", "[", "pred", "<", "threshold", "]", "\n", "return", "pixel_losses", ".", "mean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.train_ft.parse_args": [[39, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "config.update_config"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.config.default.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train Segmentation Network'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "\n", "help", "=", "'experiment configure file name'", ",", "\n", "required", "=", "True", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--local_rank\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'opts'", ",", "\n", "help", "=", "\"Modify config options using the command-line\"", ",", "\n", "default", "=", "None", ",", "\n", "nargs", "=", "argparse", ".", "REMAINDER", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "update_config", "(", "config", ",", "args", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.train_ft.main": [[58, 264], ["train_ft.parse_args", "utils.utils.create_logger", "logger.info", "logger.info", "list", "torch.device", "torch.device", "torch.device", "torch.device", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "logger.info", "torch.load", "torch.load", "torch.load", "torch.load", "nn.parallel.DistributedDataParallel.state_dict", "torch.load.items", "model.state_dict.update", "nn.parallel.DistributedDataParallel.load_state_dict", "utils.utils.FullModel", "nn.parallel.DistributedDataParallel.to", "utils.utils.get_optimizer", "numpy.int", "timeit.default_timer", "utils.lr_scheduler.get_lr_scheduler", "range", "pprint.pformat", "tensorboardX.SummaryWriter", "len", "eval", "logger.info", "logger.info", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "logger.info", "os.path.dirname", "os.path.join", "os.path.exists", "shutil.copytree", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "eval", "torch.utils.data.distributed.DistributedSampler", "eval", "torch.utils.data.distributed.DistributedSampler", "core.criterion.OhemCrossEntropy", "core.criterion.CrossEntropy", "logger.info", "torch.SyncBatchNorm.convert_sync_batchnorm", "torch.parallel.DistributedDataParallel", "os.path.join", "os.path.isfile", "core.function.train", "core.function.validate", "sum", "utils.modelsummary.get_model_summary", "shutil.rmtree", "os.path.join", "tuple", "tuple", "torch.load.items", "len", "torch.load", "torch.load", "torch.load", "torch.load", "nn.parallel.DistributedDataParallel.module.load_state_dict", "utils.utils.get_optimizer.load_state_dict", "logger.info", "torch.utils.data.distributed.DistributedSampler.set_epoch", "logger.info", "torch.save", "torch.save", "torch.save", "torch.save", "logger.info", "nn.parallel.DistributedDataParallel.to", "torch.rand.to", "model.state_dict.keys", "train_dataset.__len__", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "writer_dict[].close", "timeit.default_timer", "logger.info", "logger.info", "p.numel", "nn.parallel.DistributedDataParallel.module.state_dict", "utils.utils.get_optimizer.state_dict", "nn.parallel.DistributedDataParallel.module.state_dict", "os.path.join", "nn.parallel.DistributedDataParallel.module.state_dict", "os.path.join", "nn.parallel.DistributedDataParallel.parameters", "numpy.int"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.create_logger", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_optimizer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.get_lr_scheduler", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.train", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.validate", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.modelsummary.get_model_summary", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.__len__"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "logger", ",", "final_output_dir", ",", "tb_log_dir", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'train'", ")", "\n", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "config", ")", "\n", "\n", "writer_dict", "=", "{", "\n", "'writer'", ":", "SummaryWriter", "(", "tb_log_dir", ")", ",", "\n", "'train_global_steps'", ":", "0", ",", "\n", "'valid_global_steps'", ":", "0", ",", "\n", "}", "\n", "\n", "# cudnn related setting", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "gpus", "=", "list", "(", "config", ".", "GPUS", ")", "\n", "distributed", "=", "len", "(", "gpus", ")", ">", "1", "\n", "device", "=", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "args", ".", "local_rank", ")", ")", "\n", "\n", "# build model", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", ".", "NAME", "+", "\n", "'.get_seg_model'", ")", "(", "config", ")", "\n", "\n", "if", "args", ".", "local_rank", "==", "0", ":", "\n", "        ", "logger", ".", "info", "(", "model", ")", "\n", "tot_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", ")", "/", "1000000.0", "\n", "logger", ".", "info", "(", "f\">>> total params: {tot_params:.2f}M\"", ")", "\n", "\n", "# provide the summary of model", "\n", "dump_input", "=", "torch", ".", "rand", "(", "\n", "(", "1", ",", "3", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "0", "]", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "1", "]", ")", "\n", ")", "\n", "logger", ".", "info", "(", "get_model_summary", "(", "model", ".", "to", "(", "device", ")", ",", "dump_input", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "# copy model file", "\n", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "models_dst_dir", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'models'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "models_dst_dir", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "models_dst_dir", ")", "\n", "", "shutil", ".", "copytree", "(", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../lib/models'", ")", ",", "models_dst_dir", ")", "\n", "\n", "", "if", "distributed", ":", "\n", "        ", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "local_rank", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\n", "backend", "=", "\"nccl\"", ",", "init_method", "=", "\"env://\"", ",", "\n", ")", "\n", "\n", "# prepare data", "\n", "", "train_dataset", "=", "eval", "(", "'datasets.'", "+", "config", ".", "DATASET", ".", "DATASET", ")", "(", "\n", "root", "=", "config", ".", "DATASET", ".", "ROOT", ",", "\n", "list_path", "=", "config", ".", "DATASET", ".", "TRAIN_SET", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", ",", "\n", "multi_scale", "=", "config", ".", "TRAIN", ".", "MULTI_SCALE", ",", "\n", "flip", "=", "config", ".", "TRAIN", ".", "FLIP", ",", "\n", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "base_size", "=", "config", ".", "TRAIN", ".", "BASE_SIZE", ",", "\n", "crop_size", "=", "tuple", "(", "config", ".", "TRAIN", ".", "IMAGE_SIZE", ")", ",", "# (height, width)", "\n", "scale_factor", "=", "config", ".", "TRAIN", ".", "SCALE_FACTOR", "\n", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "train_sampler", "=", "DistributedSampler", "(", "train_dataset", ")", "\n", "", "else", ":", "\n", "        ", "train_sampler", "=", "None", "\n", "\n", "", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "config", ".", "TRAIN", ".", "BATCH_SIZE_PER_GPU", ",", "\n", "shuffle", "=", "config", ".", "TRAIN", ".", "SHUFFLE", "and", "train_sampler", "is", "None", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "\n", "drop_last", "=", "True", ",", "\n", "sampler", "=", "train_sampler", "\n", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "'datasets.'", "+", "config", ".", "DATASET", ".", "DATASET", ")", "(", "\n", "root", "=", "config", ".", "DATASET", ".", "ROOT", ",", "\n", "list_path", "=", "config", ".", "DATASET", ".", "TEST_SET", ",", "\n", "num_samples", "=", "config", ".", "TEST", ".", "NUM_SAMPLES", ",", "\n", "num_classes", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", ",", "\n", "multi_scale", "=", "False", ",", "\n", "flip", "=", "False", ",", "\n", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "base_size", "=", "config", ".", "TEST", ".", "BASE_SIZE", ",", "\n", "crop_size", "=", "tuple", "(", "config", ".", "TEST", ".", "IMAGE_SIZE", ")", ",", "# (height, width)", "\n", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "test_sampler", "=", "DistributedSampler", "(", "test_dataset", ")", "\n", "", "else", ":", "\n", "        ", "test_sampler", "=", "None", "\n", "\n", "", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "config", ".", "TEST", ".", "BATCH_SIZE_PER_GPU", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "test_sampler", "\n", ")", "\n", "\n", "# criterion", "\n", "if", "config", ".", "LOSS", ".", "USE_OHEM", ":", "\n", "        ", "criterion", "=", "OhemCrossEntropy", "(", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "weight", "=", "train_dataset", ".", "class_weights", ",", "\n", "thresh", "=", "config", ".", "LOSS", ".", "OHEMTHRESH", ",", "\n", "min_kept", "=", "config", ".", "LOSS", ".", "OHEMKEEP", "\n", ")", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "CrossEntropy", "(", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "weight", "=", "train_dataset", ".", "class_weights", ")", "\n", "\n", "", "model_state_file", "=", "config", ".", "MODEL", ".", "PRETRAINED", "\n", "logger", ".", "info", "(", "'=> Loading model from {}'", ".", "format", "(", "model_state_file", ")", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "model_state_file", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", "[", "6", ":", "]", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "[", "6", ":", "]", "in", "model_dict", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "_", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'=> Loading {} from pretrained model'", ".", "format", "(", "k", ")", ")", "\n", "", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "model", "=", "FullModel", "(", "model", ",", "criterion", ")", "\n", "if", "distributed", ":", "\n", "        ", "model", "=", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "model", ")", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "distributed", ":", "\n", "        ", "model", "=", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "model", ",", "device_ids", "=", "[", "args", ".", "local_rank", "]", ",", "output_device", "=", "args", ".", "local_rank", ")", "\n", "\n", "# optimizer", "\n", "", "optimizer", "=", "get_optimizer", "(", "config", ",", "model", ")", "\n", "\n", "epoch_iters", "=", "np", ".", "int", "(", "train_dataset", ".", "__len__", "(", ")", "/", "\n", "config", ".", "TRAIN", ".", "BATCH_SIZE_PER_GPU", "/", "len", "(", "gpus", ")", ")", "\n", "best_mIoU", "=", "0", "\n", "last_epoch", "=", "0", "\n", "if", "config", ".", "TRAIN", ".", "RESUME", ":", "\n", "        ", "model_state_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "\n", "'checkpoint.pth.tar'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "model_state_file", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "model_state_file", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "best_mIoU", "=", "checkpoint", "[", "'best_mIoU'", "]", "\n", "last_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "logger", ".", "info", "(", "\"=> loaded checkpoint (epoch {})\"", "\n", ".", "format", "(", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "", "start", "=", "timeit", ".", "default_timer", "(", ")", "\n", "end_epoch", "=", "config", ".", "TRAIN", ".", "END_EPOCH", "\n", "num_iters", "=", "config", ".", "TRAIN", ".", "END_EPOCH", "*", "epoch_iters", "\n", "\n", "# learning rate scheduler", "\n", "lr_scheduler_dict", "=", "{", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'milestones'", ":", "[", "s", "*", "epoch_iters", "for", "s", "in", "config", ".", "TRAIN", ".", "LR_STEP", "]", ",", "\n", "'gamma'", ":", "config", ".", "TRAIN", ".", "LR_FACTOR", ",", "\n", "'max_iters'", ":", "num_iters", ",", "\n", "'last_epoch'", ":", "last_epoch", ",", "\n", "'epoch_iters'", ":", "epoch_iters", "\n", "}", "\n", "lr_scheduler", "=", "get_lr_scheduler", "(", "config", ".", "TRAIN", ".", "LR_SCHEDULER", ",", "**", "lr_scheduler_dict", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "last_epoch", ",", "end_epoch", ")", ":", "\n", "        ", "if", "distributed", ":", "\n", "            ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "", "train", "(", "config", ",", "epoch", ",", "end_epoch", ",", "epoch_iters", ",", "trainloader", ",", "optimizer", ",", "\n", "lr_scheduler", ",", "model", ",", "writer_dict", ",", "device", ")", "\n", "\n", "valid_loss", ",", "mean_IoU", "=", "validate", "(", "config", ",", "testloader", ",", "model", ",", "writer_dict", ",", "device", ")", "\n", "\n", "if", "args", ".", "local_rank", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'=> saving checkpoint to {}'", ".", "format", "(", "\n", "final_output_dir", "+", "'/checkpoint.pth.tar'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'best_mIoU'", ":", "best_mIoU", ",", "\n", "'state_dict'", ":", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'checkpoint.pth.tar'", ")", "\n", ")", "\n", "\n", "if", "mean_IoU", ">", "best_mIoU", ":", "\n", "                ", "best_mIoU", "=", "mean_IoU", "\n", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'best.pth'", ")", ")", "\n", "", "msg", "=", "f'Loss: {valid_loss:.4f}, MeanIU: {mean_IoU: 4.4f}, \\\n                        Best_mIoU: {best_mIoU: 4.4f}'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "if", "epoch", "==", "end_epoch", "-", "1", ":", "\n", "                ", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'final_state.pth'", ")", ")", "\n", "\n", "writer_dict", "[", "'writer'", "]", ".", "close", "(", ")", "\n", "end", "=", "timeit", ".", "default_timer", "(", ")", "\n", "logger", ".", "info", "(", "f'Hours: {np.int((end-start)/3600)}'", ")", "\n", "logger", ".", "info", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.train.parse_args": [[39, 56], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "config.update_config"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.config.default.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train Segmentation Network'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "\n", "help", "=", "'experiment configure file name'", ",", "\n", "required", "=", "True", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--local_rank\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'opts'", ",", "\n", "help", "=", "\"Modify config options using the command-line\"", ",", "\n", "default", "=", "None", ",", "\n", "nargs", "=", "argparse", ".", "REMAINDER", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "update_config", "(", "config", ",", "args", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.train.main": [[58, 254], ["train.parse_args", "utils.utils.create_logger", "logger.info", "logger.info", "list", "torch.device", "torch.device", "torch.device", "torch.device", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "utils.utils.FullModel", "nn.parallel.DistributedDataParallel.to", "utils.utils.get_optimizer", "numpy.int", "timeit.default_timer", "utils.lr_scheduler.get_lr_scheduler", "range", "pprint.pformat", "tensorboardX.SummaryWriter", "len", "eval", "logger.info", "logger.info", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "logger.info", "os.path.dirname", "os.path.join", "os.path.exists", "shutil.copytree", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "eval", "torch.utils.data.distributed.DistributedSampler", "eval", "torch.utils.data.distributed.DistributedSampler", "core.criterion.OhemCrossEntropy", "core.criterion.CrossEntropy", "torch.SyncBatchNorm.convert_sync_batchnorm", "torch.parallel.DistributedDataParallel", "os.path.join", "os.path.isfile", "core.function.train", "core.function.validate", "sum", "utils.modelsummary.get_model_summary", "shutil.rmtree", "os.path.join", "tuple", "tuple", "len", "torch.load", "torch.load", "torch.load", "torch.load", "nn.parallel.DistributedDataParallel.module.load_state_dict", "utils.utils.get_optimizer.load_state_dict", "logger.info", "torch.utils.data.distributed.DistributedSampler.set_epoch", "logger.info", "torch.save", "torch.save", "torch.save", "torch.save", "logger.info", "nn.parallel.DistributedDataParallel.to", "torch.rand.to", "train_dataset.__len__", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "writer_dict[].close", "timeit.default_timer", "logger.info", "logger.info", "p.numel", "nn.parallel.DistributedDataParallel.module.state_dict", "utils.utils.get_optimizer.state_dict", "nn.parallel.DistributedDataParallel.module.state_dict", "os.path.join", "nn.parallel.DistributedDataParallel.module.state_dict", "os.path.join", "nn.parallel.DistributedDataParallel.parameters", "numpy.int"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.create_logger", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.get_optimizer", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.lr_scheduler.get_lr_scheduler", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.train", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.validate", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.modelsummary.get_model_summary", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.datasets.base_dataset.BaseDataset.__len__"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "logger", ",", "final_output_dir", ",", "tb_log_dir", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'train'", ")", "\n", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "config", ")", "\n", "\n", "writer_dict", "=", "{", "\n", "'writer'", ":", "SummaryWriter", "(", "tb_log_dir", ")", ",", "\n", "'train_global_steps'", ":", "0", ",", "\n", "'valid_global_steps'", ":", "0", ",", "\n", "}", "\n", "\n", "# cudnn related setting", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "gpus", "=", "list", "(", "config", ".", "GPUS", ")", "\n", "distributed", "=", "len", "(", "gpus", ")", ">", "1", "\n", "device", "=", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "args", ".", "local_rank", ")", ")", "\n", "\n", "# build model", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", ".", "NAME", "+", "\n", "'.get_seg_model'", ")", "(", "config", ")", "\n", "\n", "if", "args", ".", "local_rank", "==", "0", ":", "\n", "        ", "logger", ".", "info", "(", "model", ")", "\n", "tot_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", ")", "/", "1000000.0", "\n", "logger", ".", "info", "(", "f\">>> total params: {tot_params:.2f}M\"", ")", "\n", "# provide the summary of model", "\n", "dump_input", "=", "torch", ".", "rand", "(", "\n", "(", "1", ",", "3", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "0", "]", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "1", "]", ")", "\n", ")", "\n", "logger", ".", "info", "(", "get_model_summary", "(", "model", ".", "to", "(", "device", ")", ",", "dump_input", ".", "to", "(", "device", ")", ")", ")", "\n", "\n", "# copy model file", "\n", "this_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "models_dst_dir", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'models'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "models_dst_dir", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "models_dst_dir", ")", "\n", "", "shutil", ".", "copytree", "(", "os", ".", "path", ".", "join", "(", "this_dir", ",", "'../lib/models'", ")", ",", "\n", "models_dst_dir", ")", "\n", "\n", "", "if", "distributed", ":", "\n", "        ", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "local_rank", ")", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\n", "backend", "=", "\"nccl\"", ",", "init_method", "=", "\"env://\"", ",", "\n", ")", "\n", "\n", "# prepare data", "\n", "", "train_dataset", "=", "eval", "(", "'datasets.'", "+", "config", ".", "DATASET", ".", "DATASET", ")", "(", "\n", "root", "=", "config", ".", "DATASET", ".", "ROOT", ",", "\n", "list_path", "=", "config", ".", "DATASET", ".", "TRAIN_SET", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", ",", "\n", "multi_scale", "=", "config", ".", "TRAIN", ".", "MULTI_SCALE", ",", "\n", "flip", "=", "config", ".", "TRAIN", ".", "FLIP", ",", "\n", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "base_size", "=", "config", ".", "TRAIN", ".", "BASE_SIZE", ",", "\n", "crop_size", "=", "tuple", "(", "config", ".", "TRAIN", ".", "IMAGE_SIZE", ")", ",", "# (height, width)", "\n", "scale_factor", "=", "config", ".", "TRAIN", ".", "SCALE_FACTOR", "\n", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "train_sampler", "=", "DistributedSampler", "(", "train_dataset", ")", "\n", "", "else", ":", "\n", "        ", "train_sampler", "=", "None", "\n", "\n", "", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "batch_size", "=", "config", ".", "TRAIN", ".", "BATCH_SIZE_PER_GPU", ",", "\n", "shuffle", "=", "config", ".", "TRAIN", ".", "SHUFFLE", "and", "train_sampler", "is", "None", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "\n", "drop_last", "=", "True", ",", "\n", "sampler", "=", "train_sampler", "\n", ")", "\n", "\n", "test_dataset", "=", "eval", "(", "'datasets.'", "+", "config", ".", "DATASET", ".", "DATASET", ")", "(", "\n", "root", "=", "config", ".", "DATASET", ".", "ROOT", ",", "\n", "list_path", "=", "config", ".", "DATASET", ".", "TEST_SET", ",", "\n", "num_samples", "=", "config", ".", "TEST", ".", "NUM_SAMPLES", ",", "\n", "num_classes", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", ",", "\n", "multi_scale", "=", "False", ",", "\n", "flip", "=", "False", ",", "\n", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "base_size", "=", "config", ".", "TEST", ".", "BASE_SIZE", ",", "\n", "crop_size", "=", "tuple", "(", "config", ".", "TEST", ".", "IMAGE_SIZE", ")", ",", "# (height, width)", "\n", ")", "\n", "\n", "if", "distributed", ":", "\n", "        ", "test_sampler", "=", "DistributedSampler", "(", "test_dataset", ")", "\n", "", "else", ":", "\n", "        ", "test_sampler", "=", "None", "\n", "\n", "", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "config", ".", "TEST", ".", "BATCH_SIZE_PER_GPU", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ",", "\n", "sampler", "=", "test_sampler", "\n", ")", "\n", "\n", "# criterion", "\n", "if", "config", ".", "LOSS", ".", "USE_OHEM", ":", "\n", "        ", "criterion", "=", "OhemCrossEntropy", "(", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "weight", "=", "train_dataset", ".", "class_weights", ",", "\n", "thresh", "=", "config", ".", "LOSS", ".", "OHEMTHRESH", ",", "\n", "min_kept", "=", "config", ".", "LOSS", ".", "OHEMKEEP", ")", "\n", "", "else", ":", "\n", "        ", "criterion", "=", "CrossEntropy", "(", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "weight", "=", "train_dataset", ".", "class_weights", ")", "\n", "\n", "", "model", "=", "FullModel", "(", "model", ",", "criterion", ")", "\n", "if", "distributed", ":", "\n", "        ", "model", "=", "nn", ".", "SyncBatchNorm", ".", "convert_sync_batchnorm", "(", "model", ")", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "if", "distributed", ":", "\n", "        ", "model", "=", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "model", ",", "device_ids", "=", "[", "args", ".", "local_rank", "]", ",", "output_device", "=", "args", ".", "local_rank", ")", "\n", "\n", "# optimizer", "\n", "", "optimizer", "=", "get_optimizer", "(", "config", ",", "model", ")", "\n", "\n", "epoch_iters", "=", "np", ".", "int", "(", "train_dataset", ".", "__len__", "(", ")", "/", "\n", "config", ".", "TRAIN", ".", "BATCH_SIZE_PER_GPU", "/", "len", "(", "gpus", ")", ")", "\n", "best_mIoU", "=", "0", "\n", "last_epoch", "=", "0", "\n", "if", "config", ".", "TRAIN", ".", "RESUME", ":", "\n", "        ", "model_state_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "\n", "'checkpoint.pth.tar'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "model_state_file", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "model_state_file", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "best_mIoU", "=", "checkpoint", "[", "'best_mIoU'", "]", "\n", "last_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "model", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "logger", ".", "info", "(", "\"=> loaded checkpoint (epoch {})\"", "\n", ".", "format", "(", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "\n", "", "", "start", "=", "timeit", ".", "default_timer", "(", ")", "\n", "end_epoch", "=", "config", ".", "TRAIN", ".", "END_EPOCH", "\n", "num_iters", "=", "config", ".", "TRAIN", ".", "END_EPOCH", "*", "epoch_iters", "\n", "\n", "# learning rate scheduler", "\n", "lr_scheduler_dict", "=", "{", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'milestones'", ":", "[", "s", "*", "epoch_iters", "for", "s", "in", "config", ".", "TRAIN", ".", "LR_STEP", "]", ",", "\n", "'gamma'", ":", "config", ".", "TRAIN", ".", "LR_FACTOR", ",", "\n", "'max_iters'", ":", "num_iters", ",", "\n", "'last_epoch'", ":", "last_epoch", ",", "\n", "'epoch_iters'", ":", "epoch_iters", "\n", "}", "\n", "lr_scheduler", "=", "get_lr_scheduler", "(", "config", ".", "TRAIN", ".", "LR_SCHEDULER", ",", "\n", "**", "lr_scheduler_dict", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "last_epoch", ",", "end_epoch", ")", ":", "\n", "        ", "if", "distributed", ":", "\n", "            ", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "", "train", "(", "config", ",", "epoch", ",", "end_epoch", ",", "epoch_iters", ",", "trainloader", ",", "optimizer", ",", "\n", "lr_scheduler", ",", "model", ",", "writer_dict", ",", "device", ")", "\n", "\n", "valid_loss", ",", "mean_IoU", "=", "validate", "(", "config", ",", "testloader", ",", "model", ",", "\n", "writer_dict", ",", "device", ")", "\n", "\n", "if", "args", ".", "local_rank", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "'=> saving checkpoint to {}'", ".", "format", "(", "\n", "final_output_dir", "+", "'/checkpoint.pth.tar'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "{", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'best_mIoU'", ":", "best_mIoU", ",", "\n", "'state_dict'", ":", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'checkpoint.pth.tar'", ")", "\n", ")", "\n", "\n", "if", "mean_IoU", ">", "best_mIoU", ":", "\n", "                ", "best_mIoU", "=", "mean_IoU", "\n", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'best.pth'", ")", ")", "\n", "", "msg", "=", "f'Loss: {valid_loss:.4f}, MeanIU: {mean_IoU: 4.4f}, \\\n                Best_mIoU: {best_mIoU: 4.4f}'", "\n", "logger", ".", "info", "(", "msg", ")", "\n", "\n", "if", "epoch", "==", "end_epoch", "-", "1", ":", "\n", "                ", "torch", ".", "save", "(", "model", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "'final_state.pth'", ")", ")", "\n", "\n", "writer_dict", "[", "'writer'", "]", ".", "close", "(", ")", "\n", "end", "=", "timeit", ".", "default_timer", "(", ")", "\n", "logger", ".", "info", "(", "f'Hours: {np.int((end-start)/3600)}'", ")", "\n", "logger", ".", "info", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools._init_paths.add_path": [[15, 18], ["sys.path.insert"], "function", ["None"], ["def", "add_path", "(", "path", ")", ":", "\n", "    ", "if", "path", "not", "in", "sys", ".", "path", ":", "\n", "        ", "sys", ".", "path", ".", "insert", "(", "0", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args": [[34, 50], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "config.update_config"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.config.default.update_config"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Train Segmentation Network'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cfg'", ",", "\n", "help", "=", "'experiment configure file name'", ",", "\n", "required", "=", "True", ",", "\n", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'opts'", ",", "\n", "help", "=", "\"Modify config options using the command-line\"", ",", "\n", "default", "=", "None", ",", "\n", "nargs", "=", "argparse", ".", "REMAINDER", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "update_config", "(", "config", ",", "args", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.main": [[52, 130], ["test.parse_args", "utils.utils.create_logger", "logger.info", "logger.info", "torch.rand", "torch.rand", "torch.rand", "logger.info", "logger.info", "torch.load", "torch.load", "torch.load", "model.cuda.state_dict", "torch.load.items", "model.state_dict.update", "model.cuda.load_state_dict", "model.cuda.cuda", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "timeit.default_timer", "timeit.default_timer", "logger.info", "logger.info", "pprint.pformat", "pprint.pformat", "eval", "utils.modelsummary.get_model_summary", "os.path.join", "logger.info", "eval", "core.function.testval", "logging.info", "model.cuda.cuda", "torch.rand.cuda", "torch.load.items", "tuple", "core.function.test", "model.state_dict.keys", "numpy.int"], "function", ["home.repos.pwc.inspect_result.TotalVariation_Flattenet.tools.test.parse_args", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.create_logger", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.utils.modelsummary.get_model_summary", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.testval", "home.repos.pwc.inspect_result.TotalVariation_Flattenet.core.function.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "logger", ",", "final_output_dir", ",", "_", "=", "create_logger", "(", "\n", "config", ",", "args", ".", "cfg", ",", "'test'", ")", "\n", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "args", ")", ")", "\n", "logger", ".", "info", "(", "pprint", ".", "pformat", "(", "config", ")", ")", "\n", "\n", "# cudnn related setting", "\n", "cudnn", ".", "benchmark", "=", "config", ".", "CUDNN", ".", "BENCHMARK", "\n", "cudnn", ".", "deterministic", "=", "config", ".", "CUDNN", ".", "DETERMINISTIC", "\n", "cudnn", ".", "enabled", "=", "config", ".", "CUDNN", ".", "ENABLED", "\n", "\n", "# build model", "\n", "model", "=", "eval", "(", "'models.'", "+", "config", ".", "MODEL", ".", "NAME", "+", "\n", "'.get_seg_model'", ")", "(", "config", ")", "\n", "\n", "dump_input", "=", "torch", ".", "rand", "(", "\n", "(", "1", ",", "3", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "1", "]", ",", "config", ".", "TRAIN", ".", "IMAGE_SIZE", "[", "0", "]", ")", "\n", ")", "\n", "logger", ".", "info", "(", "get_model_summary", "(", "model", ".", "cuda", "(", ")", ",", "dump_input", ".", "cuda", "(", ")", ")", ")", "\n", "\n", "if", "config", ".", "TEST", ".", "MODEL_FILE", ":", "\n", "        ", "model_state_file", "=", "config", ".", "TEST", ".", "MODEL_FILE", "\n", "", "else", ":", "\n", "        ", "model_state_file", "=", "os", ".", "path", ".", "join", "(", "final_output_dir", ",", "\n", "'final_state.pth'", ")", "\n", "", "logger", ".", "info", "(", "'=> Loading model from {}'", ".", "format", "(", "model_state_file", ")", ")", "\n", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "model_state_file", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "{", "k", "[", "6", ":", "]", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "\n", "if", "k", "[", "6", ":", "]", "in", "model_dict", ".", "keys", "(", ")", "}", "\n", "for", "k", ",", "_", "in", "pretrained_dict", ".", "items", "(", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'=> Loading {} from pretrained model'", ".", "format", "(", "k", ")", ")", "\n", "", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "# prepare data", "\n", "test_dataset", "=", "eval", "(", "'datasets.'", "+", "config", ".", "DATASET", ".", "DATASET", ")", "(", "\n", "root", "=", "config", ".", "DATASET", ".", "ROOT", ",", "\n", "list_path", "=", "config", ".", "DATASET", ".", "TEST_SET", ",", "\n", "num_samples", "=", "None", ",", "\n", "num_classes", "=", "config", ".", "DATASET", ".", "NUM_CLASSES", ",", "\n", "multi_scale", "=", "False", ",", "\n", "flip", "=", "False", ",", "\n", "ignore_label", "=", "config", ".", "TRAIN", ".", "IGNORE_LABEL", ",", "\n", "base_size", "=", "config", ".", "TEST", ".", "BASE_SIZE", ",", "\n", "crop_size", "=", "tuple", "(", "config", ".", "TEST", ".", "IMAGE_SIZE", ")", "\n", ")", "\n", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "test_dataset", ",", "\n", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "config", ".", "WORKERS", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "start", "=", "timeit", ".", "default_timer", "(", ")", "\n", "if", "'val'", "in", "config", ".", "DATASET", ".", "TEST_SET", ":", "\n", "        ", "mean_IoU", ",", "pixel_acc", "=", "testval", "(", "config", ",", "test_dataset", ",", "testloader", ",", "model", ")", "\n", "\n", "msg", "=", "f'MeanIoU: {mean_IoU: 4.4f}, Pixel_Acc: {pixel_acc: 4.4f}'", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "", "elif", "'test'", "in", "config", ".", "DATASET", ".", "TEST_SET", ":", "\n", "        ", "test", "(", "config", ",", "\n", "test_dataset", ",", "\n", "testloader", ",", "\n", "model", ",", "\n", "sv_dir", "=", "final_output_dir", "\n", ")", "\n", "\n", "", "end", "=", "timeit", ".", "default_timer", "(", ")", "\n", "logger", ".", "info", "(", "f'Minutes: {np.int((end-start)/60)}'", ")", "\n", "logger", ".", "info", "(", "'Done'", ")", "\n", "\n"]]}