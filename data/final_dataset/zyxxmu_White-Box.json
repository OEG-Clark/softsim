{"home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.build_mobilenetv2_pruned_model": [[44, 151], ["origin_model.state_dict", "importlib.import_module().MobileNetV2().to", "import_module().MobileNetV2().to.state_dict", "origin_model.named_modules", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "[].cpu", "[].cpu", "[].cpu", "[].cpu", "torch.randn", "torch.randn", "torch.randn", "enumerate", "torch.randn.cpu", "importlib.import_module().MobileNetV2().to", "import_module().MobileNetV2().to.load_state_dict", "range", "torch.cat", "torch.cat", "torch.cat", "int", "torch.topk", "torch.topk", "torch.topk", "layer_cfg.append", "random.sample", "torch.LongTensor().to.sort", "index_cfg.append", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "importlib.import_module().MobileNetV2().to", "thop.profile", "isinstance", "fc_weight.size", "len", "score.append", "final_mask.append", "torch.ge", "torch.ge", "torch.ge", "enumerate", "index_cfg.append", "layer_cfg.append", "range", "importlib.import_module().MobileNetV2", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "utils.common.direct_project().cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "torch.index_select", "torch.index_select", "torch.index_select", "importlib.import_module().MobileNetV2", "origin_model.state_dict", "torch.abs", "torch.abs", "torch.abs", "torch.div", "torch.div", "torch.div", "torch.cat.size", "len", "torch.topk", "torch.topk", "torch.topk", "index.cpu().numpy().tolist.cpu().numpy().tolist", "len", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "importlib.import_module().MobileNetV2", "torch.div", "torch.div", "torch.div", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.append", "torch.ge.size", "int", "importlib.import_module", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "utils.common.direct_project", "importlib.import_module", "str", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.cpu().numpy", "importlib.import_module", "torch.ge.size", "index.cpu().numpy().tolist.cpu"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project"], ["def", "build_mobilenetv2_pruned_model", "(", "origin_model", ")", ":", "\n", "    ", "pruning_rate_now", "=", "0", "\n", "channel_prune_rate", "=", "0.9", "\n", "\n", "while", "pruning_rate_now", "<", "args", ".", "pruning_rate", ":", "\n", "        ", "score", "=", "[", "]", "\n", "index_cfg", "=", "[", "]", "\n", "layer_cfg", "=", "[", "]", "\n", "final_mask", "=", "[", "]", "\n", "pruned_state_dict", "=", "{", "}", "\n", "\n", "# Get importance criteria for each channel", "\n", "for", "i", "in", "range", "(", "17", ")", ":", "\n", "            ", "mask", "=", "origin_model", ".", "state_dict", "(", ")", "[", "'mask.'", "+", "str", "(", "i", ")", "]", "\n", "score", ".", "append", "(", "torch", ".", "abs", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", ")", "\n", "final_mask", ".", "append", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", "\n", "\n", "", "all_score", "=", "torch", ".", "cat", "(", "score", ",", "0", ")", "\n", "\n", "preserve_num", "=", "int", "(", "all_score", ".", "size", "(", "0", ")", "*", "channel_prune_rate", ")", "\n", "preserve_channel", ",", "_", "=", "torch", ".", "topk", "(", "all_score", ",", "preserve_num", ")", "\n", "\n", "threshold", "=", "preserve_channel", "[", "preserve_num", "-", "1", "]", "\n", "\n", "# Based on the pruning threshold, the pruning rate of each layer is obtained", "\n", "for", "mini_score", "in", "score", ":", "\n", "            ", "mask", "=", "torch", ".", "ge", "(", "mini_score", ",", "threshold", ")", "\n", "index", "=", "[", "]", "\n", "for", "i", ",", "m", "in", "enumerate", "(", "mask", ")", ":", "\n", "                ", "if", "m", "==", "True", ":", "\n", "                    ", "index", ".", "append", "(", "i", ")", "\n", "", "", "if", "len", "(", "index", ")", "<", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ":", "\n", "                ", "_", ",", "index", "=", "torch", ".", "topk", "(", "mini_score", ",", "int", "(", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ")", ")", "\n", "index", "=", "index", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "index_cfg", ".", "append", "(", "index", ")", "\n", "layer_cfg", ".", "append", "(", "len", "(", "index", ")", ")", "\n", "", "layer_cfg", ".", "append", "(", "640", ")", "\n", "last_index", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "1280", ")", ",", "640", ")", "\n", "last_index", ".", "sort", "(", ")", "\n", "index_cfg", ".", "append", "(", "last_index", ")", "\n", "last_index", "=", "torch", ".", "LongTensor", "(", "last_index", ")", ".", "to", "(", "device", ")", "\n", "\n", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "MobileNetV2", "(", "wm", "=", "1", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "flops", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "pruning_rate_now", "=", "(", "oriflops", "-", "flops", ")", "/", "oriflops", "\n", "channel_prune_rate", "=", "channel_prune_rate", "-", "0.01", "\n", "\n", "", "model_state_dict", "=", "origin_model", ".", "state_dict", "(", ")", "\n", "current_layer", "=", "0", "\n", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "MobileNetV2", "(", "wm", "=", "1", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "pruned_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "module", "in", "origin_model", ".", "named_modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "Block_class", ")", ":", "\n", "# conv1 & bn1", "\n", "            ", "index", "=", "torch", ".", "LongTensor", "(", "index_cfg", "[", "current_layer", "]", ")", ".", "to", "(", "device", ")", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv1.weight'", "]", ",", "0", ",", "index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.conv1.weight'", "]", "=", "pruned_weight", "\n", "mask", "=", "final_mask", "[", "current_layer", "]", "[", "index_cfg", "[", "current_layer", "]", "]", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "\n", "# conv2 & bn2", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv2.weight'", "]", ",", "0", ",", "index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.conv2.weight'", "]", "=", "pruned_weight", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "\n", "# conv3 & bn3 & shortcut", "\n", "pruned_state_dict", "[", "name", "+", "'.conv3.weight'", "]", "=", "direct_project", "(", "model_state_dict", "[", "name", "+", "'.conv3.weight'", "]", ",", "index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.weight'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.bias'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.bias'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.running_var'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.running_mean'", "]", ".", "cpu", "(", ")", "\n", "\n", "current_layer", "+=", "1", "\n", "\n", "\n", "", "", "pruned_state_dict", "[", "'conv1.weight'", "]", "=", "model_state_dict", "[", "'conv1.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.weight'", "]", "=", "model_state_dict", "[", "'bn1.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.bias'", "]", "=", "model_state_dict", "[", "'bn1.bias'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_var'", "]", "=", "model_state_dict", "[", "'bn1.running_var'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_mean'", "]", "=", "model_state_dict", "[", "'bn1.running_mean'", "]", ".", "cpu", "(", ")", "\n", "\n", "pruned_state_dict", "[", "'conv2.weight'", "]", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "'conv2.weight'", "]", ",", "0", ",", "last_index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn2.weight'", "]", "=", "model_state_dict", "[", "'bn2.weight'", "]", "[", "last_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn2.bias'", "]", "=", "model_state_dict", "[", "'bn2.bias'", "]", "[", "last_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn2.running_var'", "]", "=", "model_state_dict", "[", "'bn2.running_var'", "]", "[", "last_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn2.running_mean'", "]", "=", "model_state_dict", "[", "'bn2.running_mean'", "]", "[", "last_index", "]", ".", "cpu", "(", ")", "\n", "\n", "fc_weight", "=", "model_state_dict", "[", "'linear.weight'", "]", "\n", "pr_fc_weight", "=", "torch", ".", "randn", "(", "fc_weight", ".", "size", "(", "0", ")", ",", "len", "(", "last_index", ")", ")", "\n", "for", "i", ",", "ind", "in", "enumerate", "(", "last_index", ")", ":", "\n", "        ", "pr_fc_weight", "[", ":", ",", "i", "]", "=", "fc_weight", "[", ":", ",", "ind", "]", "\n", "", "pruned_state_dict", "[", "'linear.weight'", "]", "=", "pr_fc_weight", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'linear.bias'", "]", "=", "model_state_dict", "[", "'linear.bias'", "]", "\n", "\n", "# load weight", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "MobileNetV2", "(", "wm", "=", "1", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "pruned_state_dict", ")", "\n", "\n", "return", "model", ",", "layer_cfg", ",", "flops", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.build_vgg_pruned_model": [[153, 245], ["origin_model.state_dict", "origin_model.named_modules", "importlib.import_module().VGG().to", "enumerate", "torch.randn", "torch.randn", "torch.randn", "enumerate", "torch.randn.cpu", "importlib.import_module().VGG().to", "import_module().VGG().to.load_state_dict", "range", "torch.cat", "torch.cat", "torch.cat", "int", "torch.topk", "torch.topk", "torch.topk", "int", "random.sample", "random.sample.sort", "index_cfg.append", "layer_cfg.append", "importlib.import_module().VGG().to", "thop.profile", "isinstance", "pruned_state_dict.items", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "fc_weight.size", "len", "score.append", "final_mask.append", "torch.ge", "torch.ge", "torch.ge", "enumerate", "index_cfg.append", "layer_cfg.append", "range", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "[].cpu", "isinstance", "importlib.import_module().VGG", "torch.FloatTensor.dim", "utils.common.direct_project", "importlib.import_module().VGG", "origin_model.state_dict", "torch.abs", "torch.abs", "torch.abs", "torch.div", "torch.div", "torch.div", "torch.cat.size", "len", "torch.topk", "torch.topk", "torch.topk", "index.cpu().numpy().tolist.cpu().numpy().tolist", "len", "importlib.import_module().VGG", "[].cpu", "[].cpu", "torch.div", "torch.div", "torch.div", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.append", "torch.ge.size", "int", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "[].cpu", "[].cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "importlib.import_module", "importlib.import_module", "str", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.cpu().numpy", "importlib.import_module", "torch.ge.size", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "index.cpu().numpy().tolist.cpu"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project"], ["", "def", "build_vgg_pruned_model", "(", "origin_model", ")", ":", "\n", "    ", "pruning_rate_now", "=", "0", "\n", "channel_prune_rate", "=", "0.9", "\n", "\n", "while", "pruning_rate_now", "<", "args", ".", "pruning_rate", ":", "\n", "        ", "score", "=", "[", "]", "\n", "index_cfg", "=", "[", "]", "\n", "layer_cfg", "=", "[", "]", "\n", "final_mask", "=", "[", "]", "\n", "pruned_state_dict", "=", "{", "}", "\n", "\n", "# Get importance criteria for each channel", "\n", "for", "i", "in", "range", "(", "12", ")", ":", "\n", "            ", "mask", "=", "origin_model", ".", "state_dict", "(", ")", "[", "'mask.'", "+", "str", "(", "i", ")", "]", "\n", "score", ".", "append", "(", "torch", ".", "abs", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", ")", "\n", "final_mask", ".", "append", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", "\n", "", "all_score", "=", "torch", ".", "cat", "(", "score", ",", "0", ")", "\n", "preserve_num", "=", "int", "(", "all_score", ".", "size", "(", "0", ")", "*", "channel_prune_rate", ")", "\n", "preserve_channel", ",", "_", "=", "torch", ".", "topk", "(", "all_score", ",", "preserve_num", ")", "\n", "threshold", "=", "preserve_channel", "[", "preserve_num", "-", "1", "]", "\n", "\n", "# Based on the pruning threshold, the pruning rate of each layer is obtained", "\n", "for", "mini_score", "in", "score", ":", "\n", "            ", "mask", "=", "torch", ".", "ge", "(", "mini_score", ",", "threshold", ")", "\n", "index", "=", "[", "]", "\n", "for", "i", ",", "m", "in", "enumerate", "(", "mask", ")", ":", "\n", "                ", "if", "m", "==", "True", ":", "\n", "                    ", "index", ".", "append", "(", "i", ")", "\n", "", "", "if", "len", "(", "index", ")", "<", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ":", "\n", "                ", "_", ",", "index", "=", "torch", ".", "topk", "(", "mini_score", ",", "int", "(", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ")", ")", "\n", "index", "=", "index", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "index_cfg", ".", "append", "(", "index", ")", "\n", "layer_cfg", ".", "append", "(", "len", "(", "index", ")", ")", "\n", "\n", "", "last_layer_cfg", "=", "int", "(", "512", "*", "(", "1", "-", "pruning_rate_now", ")", ")", "\n", "last_index", "=", "random", ".", "sample", "(", "range", "(", "0", ",", "512", ")", ",", "last_layer_cfg", ")", "\n", "last_index", ".", "sort", "(", ")", "\n", "index_cfg", ".", "append", "(", "last_index", ")", "\n", "layer_cfg", ".", "append", "(", "last_layer_cfg", ")", "\n", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "VGG", "(", "args", ".", "cfg", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "\n", "# Update current pruning rate \\alpha", "\n", "flops", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "pruning_rate_now", "=", "(", "oriflops", "-", "flops", ")", "/", "oriflops", "\n", "channel_prune_rate", "=", "channel_prune_rate", "-", "0.01", "\n", "\n", "", "model_state_dict", "=", "origin_model", ".", "state_dict", "(", ")", "\n", "current_layer", "=", "0", "\n", "\n", "for", "name", ",", "module", "in", "origin_model", ".", "named_modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "index", "=", "torch", ".", "LongTensor", "(", "index_cfg", "[", "current_layer", "]", ")", ".", "to", "(", "device", ")", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.weight'", "]", ",", "0", ",", "index", ")", ".", "cpu", "(", ")", "\n", "pruned_bias", "=", "model_state_dict", "[", "name", "+", "'.bias'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.weight'", "]", "=", "pruned_weight", "\n", "pruned_state_dict", "[", "name", "+", "'.bias'", "]", "=", "pruned_bias", "\n", "\n", "", "elif", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "if", "current_layer", "==", "12", ":", "\n", "                ", "pruned_state_dict", "[", "name", "+", "'.weight'", "]", "=", "model_state_dict", "[", "name", "+", "'.weight'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bias'", "]", "=", "model_state_dict", "[", "name", "+", "'.bias'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "                ", "mask", "=", "final_mask", "[", "current_layer", "]", "[", "index_cfg", "[", "current_layer", "]", "]", "\n", "pruned_state_dict", "[", "name", "+", "'.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.weight'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bias'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "", "pruned_state_dict", "[", "name", "+", "'.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.running_var'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.running_mean'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "current_layer", "+=", "1", "\n", "\n", "# load weight", "\n", "", "", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "VGG", "(", "args", ".", "cfg", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "current_layer", "=", "0", "\n", "for", "i", ",", "(", "k", ",", "v", ")", "in", "enumerate", "(", "pruned_state_dict", ".", "items", "(", ")", ")", ":", "\n", "        ", "weight", "=", "torch", ".", "FloatTensor", "(", "pruned_state_dict", "[", "k", "]", ")", "\n", "if", "i", "==", "0", ":", "# first conv need not to prune channel", "\n", "            ", "continue", "\n", "", "if", "weight", ".", "dim", "(", ")", "==", "4", ":", "# conv_layer", "\n", "            ", "pruned_state_dict", "[", "k", "]", "=", "direct_project", "(", "weight", ",", "index_cfg", "[", "current_layer", "]", ")", "\n", "current_layer", "+=", "1", "\n", "\n", "", "", "fc_weight", "=", "model_state_dict", "[", "'classifier.weight'", "]", "\n", "pr_fc_weight", "=", "torch", ".", "randn", "(", "fc_weight", ".", "size", "(", "0", ")", ",", "len", "(", "index", ")", ")", "\n", "for", "i", ",", "ind", "in", "enumerate", "(", "index", ")", ":", "\n", "        ", "pr_fc_weight", "[", ":", ",", "i", "]", "=", "fc_weight", "[", ":", ",", "ind", "]", "\n", "", "pruned_state_dict", "[", "'classifier.weight'", "]", "=", "pr_fc_weight", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'classifier.bias'", "]", "=", "model_state_dict", "[", "'classifier.bias'", "]", "\n", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "VGG", "(", "args", ".", "cfg", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "pruned_state_dict", ")", "\n", "\n", "return", "model", ",", "layer_cfg", ",", "flops", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.build_resnet_pruned_model": [[247, 358], ["origin_model.state_dict", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "origin_model.named_modules", "model_state_dict[].cpu", "torch.randn", "torch.randn", "torch.randn", "enumerate", "torch.randn.cpu", "model_state_dict[].cpu", "importlib.import_module().resnet().to", "import_module().resnet().to.load_state_dict", "range", "torch.cat", "torch.cat", "torch.cat", "int", "torch.topk", "torch.topk", "torch.topk", "enumerate", "range", "importlib.import_module().resnet().to", "thop.profile", "isinstance", "model_state_dict[].cpu.size", "len", "score.append", "final_mask.append", "torch.ge", "torch.ge", "torch.ge", "enumerate", "int", "block_cfg.append", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "utils.common.direct_project", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "utils.common.direct_project", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "importlib.import_module().resnet", "origin_model.state_dict", "torch.abs", "torch.abs", "torch.abs", "torch.div", "torch.div", "torch.div", "torch.cat.size", "len", "torch.topk", "torch.topk", "torch.topk", "index.cpu().numpy().tolist.cpu().numpy().tolist", "index_cfg.append", "layer_cfg.append", "block_score.append", "block_score[].size", "block_index_cfg.append", "int", "importlib.import_module().resnet", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.append", "torch.ge.size", "int", "len", "torch.arange", "torch.arange", "torch.arange", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "importlib.import_module", "str", "index.cpu().numpy().tolist.cpu().numpy", "block_score[].size", "importlib.import_module", "torch.ge.size", "index.cpu().numpy().tolist.cpu"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet"], ["", "def", "build_resnet_pruned_model", "(", "origin_model", ")", ":", "\n", "    ", "pruning_rate_now", "=", "0", "\n", "channel_prune_rate", "=", "0.9", "\n", "num_mask_cfg", "=", "{", "'resnet56'", ":", "55", ",", "'resnet110'", ":", "109", "}", "\n", "while", "pruning_rate_now", "<", "args", ".", "pruning_rate", ":", "\n", "        ", "score", "=", "[", "]", "\n", "index_cfg", "=", "[", "]", "\n", "block_index_cfg", "=", "[", "]", "\n", "layer_cfg", "=", "[", "]", "\n", "block_cfg", "=", "[", "]", "\n", "final_mask", "=", "[", "]", "\n", "pruned_state_dict", "=", "{", "}", "\n", "\n", "# Get importance criteria for each channel", "\n", "for", "i", "in", "range", "(", "num_mask_cfg", "[", "args", ".", "cfg", "]", ")", ":", "\n", "            ", "mask", "=", "origin_model", ".", "state_dict", "(", ")", "[", "'mask.'", "+", "str", "(", "i", ")", "]", "\n", "score", ".", "append", "(", "torch", ".", "abs", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ")", ")", "\n", "final_mask", ".", "append", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", "\n", "\n", "", "all_score", "=", "torch", ".", "cat", "(", "score", ",", "0", ")", "\n", "preserve_num", "=", "int", "(", "all_score", ".", "size", "(", "0", ")", "*", "channel_prune_rate", ")", "\n", "preserve_channel", ",", "_", "=", "torch", ".", "topk", "(", "all_score", ",", "preserve_num", ")", "\n", "\n", "threshold", "=", "preserve_channel", "[", "preserve_num", "-", "1", "]", "\n", "\n", "block_score", "=", "[", "]", "\n", "#Based on the pruning threshold, the pruning rate of each layer is obtained", "\n", "for", "i", ",", "mini_score", "in", "enumerate", "(", "score", ")", ":", "\n", "            ", "mask", "=", "torch", ".", "ge", "(", "mini_score", ",", "threshold", ")", "\n", "index", "=", "[", "]", "\n", "for", "j", ",", "m", "in", "enumerate", "(", "mask", ")", ":", "\n", "                ", "if", "m", "==", "True", ":", "\n", "                    ", "index", ".", "append", "(", "j", ")", "\n", "", "", "if", "len", "(", "index", ")", "<", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ":", "\n", "                ", "_", ",", "index", "=", "torch", ".", "topk", "(", "mini_score", ",", "int", "(", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ")", ")", "\n", "index", "=", "index", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "if", "i", "%", "2", "!=", "0", ":", "# in block", "\n", "                ", "index_cfg", ".", "append", "(", "index", ")", "\n", "layer_cfg", ".", "append", "(", "len", "(", "index", ")", ")", "\n", "", "else", ":", "# out block", "\n", "                ", "block_score", ".", "append", "(", "mini_score", ")", "\n", "\n", "", "", "begin", "=", "0", "\n", "end", "=", "int", "(", "num_mask_cfg", "[", "args", ".", "cfg", "]", "/", "6", ")", "+", "1", "\n", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "block_cfg", ".", "append", "(", "block_score", "[", "begin", "]", ".", "size", "(", "0", ")", ")", "\n", "for", "i", "in", "block_score", "[", "begin", ":", "end", "]", ":", "\n", "                ", "block_index_cfg", ".", "append", "(", "torch", ".", "arange", "(", "block_score", "[", "begin", "]", ".", "size", "(", "0", ")", ")", ")", "\n", "", "begin", "=", "end", "\n", "end", "=", "end", "+", "int", "(", "num_mask_cfg", "[", "args", ".", "cfg", "]", "/", "6", ")", "\n", "\n", "", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "layer_cfg", ",", "block_cfg", ")", ".", "to", "(", "device", ")", "\n", "\n", "flops", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "pruning_rate_now", "=", "(", "oriflops", "-", "flops", ")", "/", "oriflops", "\n", "channel_prune_rate", "=", "channel_prune_rate", "-", "0.01", "\n", "\n", "", "model_state_dict", "=", "origin_model", ".", "state_dict", "(", ")", "\n", "current_block", "=", "0", "\n", "\n", "block_index", "=", "torch", ".", "LongTensor", "(", "block_index_cfg", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "mask", "=", "final_mask", "[", "0", "]", "[", "block_index_cfg", "[", "0", "]", "]", "\n", "pruned_state_dict", "[", "'conv1.weight'", "]", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "'conv1.weight'", "]", ",", "0", ",", "block_index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "'bn1.weight'", "]", "[", "block_index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "'bn1.bias'", "]", "[", "block_index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_var'", "]", "=", "model_state_dict", "[", "'bn1.running_var'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_mean'", "]", "=", "model_state_dict", "[", "'bn1.running_mean'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "\n", "for", "name", ",", "module", "in", "origin_model", ".", "named_modules", "(", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "module", ",", "ResBasicBlock_Class", ")", ":", "\n", "# conv1 & bn1", "\n", "            ", "index", "=", "torch", ".", "LongTensor", "(", "index_cfg", "[", "current_block", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv1.weight'", "]", ",", "0", ",", "index", ")", ".", "cpu", "(", ")", "\n", "pruned_weight", "=", "direct_project", "(", "pruned_weight", ",", "block_index", ")", "\n", "\n", "pruned_state_dict", "[", "name", "+", "'.conv1.weight'", "]", "=", "pruned_weight", "\n", "\n", "mask", "=", "final_mask", "[", "current_block", "*", "2", "+", "1", "]", "[", "index_cfg", "[", "current_block", "]", "]", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "[", "index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "[", "index", "]", ".", "cpu", "(", ")", "\n", "\n", "block_index", "=", "torch", ".", "LongTensor", "(", "block_index_cfg", "[", "current_block", "+", "1", "]", ")", ".", "to", "(", "device", ")", "\n", "mask", "=", "final_mask", "[", "current_block", "*", "2", "+", "2", "]", "[", "block_index_cfg", "[", "current_block", "+", "1", "]", "]", "\n", "# conv2 & bn2 & shortcut", "\n", "pruned_state_dict", "[", "name", "+", "'.conv2.weight'", "]", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv2.weight'", "]", ",", "0", ",", "block_index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.conv2.weight'", "]", "=", "direct_project", "(", "pruned_state_dict", "[", "name", "+", "'.conv2.weight'", "]", ",", "index", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "[", "block_index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "[", "block_index", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "\n", "current_block", "+=", "1", "\n", "\n", "", "", "fc_weight", "=", "model_state_dict", "[", "'fc.weight'", "]", ".", "cpu", "(", ")", "\n", "pr_fc_weight", "=", "torch", ".", "randn", "(", "fc_weight", ".", "size", "(", "0", ")", ",", "len", "(", "block_index", ")", ")", "\n", "for", "i", ",", "ind", "in", "enumerate", "(", "block_index", ")", ":", "\n", "        ", "pr_fc_weight", "[", ":", ",", "i", "]", "=", "fc_weight", "[", ":", ",", "ind", "]", "\n", "", "pruned_state_dict", "[", "'fc.weight'", "]", "=", "pr_fc_weight", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'fc.bias'", "]", "=", "model_state_dict", "[", "'fc.bias'", "]", ".", "cpu", "(", ")", "\n", "\n", "# load weight", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "layer_cfg", ",", "block_cfg", ")", ".", "to", "(", "device", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "pruned_state_dict", ")", "\n", "\n", "return", "model", ",", "[", "layer_cfg", ",", "block_cfg", "]", ",", "flops", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.train_class": [[360, 412], ["model.train", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "time.time", "enumerate", "optimizer.zero_grad", "model", "loss_func", "loss_func.backward", "utils.AverageMeter.update", "optimizer.step", "utils.accuracy", "utils.AverageMeter.update", "len", "inputs.to", "targets.to", "loss_func.item", "inputs.size", "inputs.size", "len", "utils.AverageMeter.update", "time.time", "float", "torch.sum().norm", "torch.sum().norm", "torch.sum().norm", "inputs.size", "len", "logger.info", "logger.info", "torch.sum", "torch.sum", "torch.sum", "len", "float", "float", "len", "float", "float", "float"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.backward", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "def", "train_class", "(", "model", ",", "optimizer", ",", "trainLoader", ",", "epoch", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "':.4e'", ")", "\n", "accurary", "=", "utils", ".", "AverageMeter", "(", "':6.3f'", ")", "\n", "top5_accuracy", "=", "utils", ".", "AverageMeter", "(", "':6.3f'", ")", "\n", "print_freq", "=", "len", "(", "trainLoader", ".", "dataset", ")", "//", "args", ".", "train_batch_size", "//", "10", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "batch", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "trainLoader", ")", ":", "\n", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", ",", "mask", "=", "model", "(", "inputs", ",", "targets", ")", "\n", "loss", "=", "loss_func", "(", "output", ",", "targets", ")", "\n", "\n", "for", "m", "in", "mask", ":", "\n", "            ", "loss", "+=", "float", "(", "args", ".", "sparse_lambda", ")", "*", "torch", ".", "sum", "(", "m", ",", "0", ")", ".", "norm", "(", "2", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "prec1", "=", "utils", ".", "accuracy", "(", "output", ",", "targets", ",", "topk", "=", "topk", ")", "\n", "accurary", ".", "update", "(", "prec1", "[", "0", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "if", "len", "(", "topk", ")", "==", "2", ":", "\n", "            ", "top5_accuracy", ".", "update", "(", "prec1", "[", "1", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "if", "batch", "%", "print_freq", "==", "0", "and", "batch", "!=", "0", ":", "\n", "            ", "current_time", "=", "time", ".", "time", "(", ")", "\n", "cost_time", "=", "current_time", "-", "start_time", "\n", "if", "len", "(", "topk", ")", "==", "1", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'Epoch[{}] ({}/{}):\\t'", "\n", "'Loss {:.4f}\\t'", "\n", "'Accuracy {:.2f}%\\t\\t'", "\n", "'Time {:.2f}s'", ".", "format", "(", "\n", "epoch", ",", "batch", "*", "args", ".", "train_batch_size", ",", "len", "(", "trainLoader", ".", "dataset", ")", ",", "\n", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "cost_time", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'Epoch[{}] ({}/{}):\\t'", "\n", "'Loss {:.4f}\\t'", "\n", "'Top1 {:.2f}%\\t'", "\n", "'Top5 {:.2f}%\\t'", "\n", "'Time {:.2f}s'", ".", "format", "(", "\n", "epoch", ",", "batch", "*", "args", ".", "train_batch_size", ",", "len", "(", "trainLoader", ".", "dataset", ")", ",", "\n", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "float", "(", "top5_accuracy", ".", "avg", ")", ",", "cost_time", "\n", ")", "\n", ")", "\n", "", "start_time", "=", "current_time", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.train": [[414, 462], ["model.train", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "time.time", "enumerate", "optimizer.zero_grad", "model", "loss_func", "loss_func.backward", "utils.AverageMeter.update", "optimizer.step", "utils.accuracy", "utils.AverageMeter.update", "len", "inputs.to", "targets.to", "loss_func.item", "inputs.size", "inputs.size", "len", "utils.AverageMeter.update", "time.time", "inputs.size", "len", "logger.info", "logger.info", "len", "float", "float", "len", "float", "float", "float"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.backward", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "", "", "def", "train", "(", "model", ",", "optimizer", ",", "trainLoader", ",", "epoch", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "':.4e'", ")", "\n", "accurary", "=", "utils", ".", "AverageMeter", "(", "':6.3f'", ")", "\n", "top5_accuracy", "=", "utils", ".", "AverageMeter", "(", "':6.3f'", ")", "\n", "print_freq", "=", "len", "(", "trainLoader", ".", "dataset", ")", "//", "args", ".", "train_batch_size", "//", "10", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "batch", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "trainLoader", ")", ":", "\n", "\n", "        ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "loss_func", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "prec1", "=", "utils", ".", "accuracy", "(", "output", ",", "targets", ",", "topk", "=", "topk", ")", "\n", "accurary", ".", "update", "(", "prec1", "[", "0", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "if", "len", "(", "topk", ")", "==", "2", ":", "\n", "            ", "top5_accuracy", ".", "update", "(", "prec1", "[", "1", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "if", "batch", "%", "print_freq", "==", "0", "and", "batch", "!=", "0", ":", "\n", "            ", "current_time", "=", "time", ".", "time", "(", ")", "\n", "cost_time", "=", "current_time", "-", "start_time", "\n", "if", "len", "(", "topk", ")", "==", "1", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'Epoch[{}] ({}/{}):\\t'", "\n", "'Loss {:.4f}\\t'", "\n", "'Accuracy {:.2f}%\\t\\t'", "\n", "'Time {:.2f}s'", ".", "format", "(", "\n", "epoch", ",", "batch", "*", "args", ".", "train_batch_size", ",", "len", "(", "trainLoader", ".", "dataset", ")", ",", "\n", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "cost_time", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "'Epoch[{}] ({}/{}):\\t'", "\n", "'Loss {:.4f}\\t'", "\n", "'Top1 {:.2f}%\\t'", "\n", "'Top5 {:.2f}%\\t'", "\n", "'Time {:.2f}s'", ".", "format", "(", "\n", "epoch", ",", "batch", "*", "args", ".", "train_batch_size", ",", "len", "(", "trainLoader", ".", "dataset", ")", ",", "\n", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "float", "(", "top5_accuracy", ".", "avg", ")", ",", "cost_time", "\n", ")", "\n", ")", "\n", "", "start_time", "=", "current_time", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.test": [[464, 499], ["model.eval", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "time.time", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "time.time", "len", "model", "loss_func", "utils.AverageMeter.update", "utils.accuracy", "utils.AverageMeter.update", "len", "logger.info", "logger.info", "inputs.to", "targets.to", "loss_func.item", "inputs.size", "inputs.size", "len", "utils.AverageMeter.update", "inputs.size", "float", "float", "float", "float", "float"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "", "", "def", "test", "(", "model", ",", "testLoader", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "accurary", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "top5_accuracy", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testLoader", ")", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "loss_func", "(", "outputs", ",", "targets", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "predicted", "=", "utils", ".", "accuracy", "(", "outputs", ",", "targets", ",", "topk", "=", "topk", ")", "\n", "accurary", ".", "update", "(", "predicted", "[", "0", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "if", "len", "(", "topk", ")", "==", "2", ":", "\n", "                ", "top5_accuracy", ".", "update", "(", "predicted", "[", "1", "]", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "current_time", "=", "time", ".", "time", "(", ")", "\n", "if", "len", "(", "topk", ")", "==", "1", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "'Test Loss {:.4f}\\tAccuracy {:.2f}%\\t\\tTime {:.2f}s\\n'", "\n", ".", "format", "(", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "(", "current_time", "-", "start_time", ")", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "'Test Loss {:.4f}\\tTop1 {:.2f}%\\tTop5 {:.2f}%\\tTime {:.2f}s\\n'", "\n", ".", "format", "(", "float", "(", "losses", ".", "avg", ")", ",", "float", "(", "accurary", ".", "avg", ")", ",", "float", "(", "top5_accuracy", ".", "avg", ")", ",", "(", "current_time", "-", "start_time", ")", ")", "\n", ")", "\n", "", "", "if", "len", "(", "topk", ")", "==", "1", ":", "\n", "        ", "return", "accurary", ".", "avg", "\n", "", "else", ":", "\n", "        ", "return", "top5_accuracy", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.main": [[500, 596], ["print", "print", "torch.SGD", "range", "print", "print", "torch.SGD", "print", "range", "logger.info", "import_module().MobileNetV2_class().to.named_modules", "nn.DataParallel.named_modules", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "importlib.import_module().VGG_Class().to", "import_module().MobileNetV2_class().to.parameters", "cifar.train_class", "cifar.build_vgg_pruned_model", "len", "torch.DataParallel", "nn.DataParallel.parameters", "torch.lr_scheduler.MultiStepLR", "cifar.train", "optim.lr_scheduler.CosineAnnealingLR.step", "cifar.test", "max", "utils.common.checkpoint.save_model", "isinstance", "isinstance", "importlib.import_module().resnet_class().to", "cifar.build_resnet_pruned_model", "torch.lr_scheduler.CosineAnnealingLR", "nn.DataParallel.module.state_dict", "nn.DataParallel.state_dict", "optim.SGD.state_dict", "optim.lr_scheduler.CosineAnnealingLR.state_dict", "float", "[].size", "[].size", "importlib.import_module().VGG_Class", "importlib.import_module().MobileNetV2_class().to", "cifar.build_mobilenetv2_pruned_model", "len", "importlib.import_module().resnet_class", "importlib.import_module", "importlib.import_module().MobileNetV2_class", "import_module().MobileNetV2_class().to.state_dict", "nn.DataParallel.state_dict", "importlib.import_module", "importlib.import_module"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train_class", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.build_vgg_pruned_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.test", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.build_resnet_pruned_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.cifar.build_mobilenetv2_pruned_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet_class"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "start_epoch", "=", "0", "\n", "best_acc", "=", "0.0", "\n", "print", "(", "'==> Building Model..'", ")", "\n", "if", "args", ".", "arch", "==", "'vgg_cifar'", ":", "\n", "        ", "origin_model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "VGG_Class", "(", "args", ".", "cfg", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "arch", "==", "'resnet_cifar'", ":", "\n", "        ", "origin_model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet_class", "(", "args", ".", "cfg", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "arch", "==", "'mobilenet_v2'", ":", "\n", "        ", "origin_model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "MobileNetV2_class", "(", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "raise", "(", "'arch not exist!'", ")", "\n", "", "print", "(", "\"Model Construction Down!\"", ")", "\n", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "origin_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "# Train the class-wise mask ", "\n", "for", "epoch", "in", "range", "(", "args", ".", "classtrain_epochs", ")", ":", "\n", "        ", "train_class", "(", "origin_model", ",", "optimizer", ",", "loader", ".", "trainLoader", ",", "epoch", ",", "topk", "=", "(", "1", ",", "5", ")", "if", "args", ".", "dataset", "==", "'imagenet'", "else", "(", "1", ",", ")", ")", "\n", "", "print", "(", "'Class_mask Traind Down!'", ")", "\n", "\n", "# Global Vote for pruning", "\n", "print", "(", "'==> Building Pruned Model..'", ")", "\n", "if", "args", ".", "arch", "==", "'vgg_cifar'", ":", "\n", "        ", "model", ",", "layer_cfg", ",", "flops", ",", "params", "=", "build_vgg_pruned_model", "(", "origin_model", ")", "\n", "", "elif", "args", ".", "arch", "==", "'resnet_cifar'", ":", "\n", "        ", "model", ",", "layer_cfg", ",", "flops", ",", "params", "=", "build_resnet_pruned_model", "(", "origin_model", ")", "\n", "", "elif", "args", ".", "arch", "==", "'mobilenet_v2'", ":", "\n", "        ", "model", ",", "layer_cfg", ",", "flops", ",", "params", "=", "build_mobilenetv2_pruned_model", "(", "origin_model", ")", "\n", "", "else", ":", "\n", "        ", "raise", "(", "'arch not exist!'", ")", "\n", "\n", "", "if", "len", "(", "args", ".", "gpus", ")", "!=", "1", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "args", ".", "gpus", ")", "\n", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "if", "args", ".", "lr_type", "==", "'step'", ":", "\n", "        ", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer", ",", "milestones", "=", "args", ".", "lr_decay_step", ",", "gamma", "=", "0.1", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'cos'", ":", "\n", "        ", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "optimizer", ",", "args", ".", "num_epochs", ")", "\n", "", "print", "(", "\"Pruned Model Construction Down!\"", ")", "\n", "\n", "# Fine-tuning", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", ".", "num_epochs", ")", ":", "\n", "        ", "train", "(", "model", ",", "optimizer", ",", "loader", ".", "trainLoader", ",", "epoch", ",", "topk", "=", "(", "1", ",", "5", ")", "if", "args", ".", "dataset", "==", "'imagenet'", "else", "(", "1", ",", ")", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "test_acc", "=", "test", "(", "model", ",", "loader", ".", "testLoader", ",", "topk", "=", "(", "1", ",", "5", ")", "if", "args", ".", "dataset", "==", "'imagenet'", "else", "(", "1", ",", ")", ")", "\n", "\n", "is_best", "=", "best_acc", "<", "test_acc", "\n", "best_acc", "=", "max", "(", "best_acc", ",", "test_acc", ")", "\n", "\n", "model_state_dict", "=", "model", ".", "module", ".", "state_dict", "(", ")", "if", "len", "(", "args", ".", "gpus", ")", ">", "1", "else", "model", ".", "state_dict", "(", ")", "\n", "\n", "state", "=", "{", "\n", "'state_dict'", ":", "model_state_dict", ",", "\n", "'best_acc'", ":", "best_acc", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'scheduler'", ":", "scheduler", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "cfg", ",", "\n", "'layer_cfg'", ":", "layer_cfg", "\n", "}", "\n", "\n", "checkpoint", ".", "save_model", "(", "state", ",", "epoch", "+", "1", ",", "is_best", ")", "\n", "\n", "", "logger", ".", "info", "(", "'Pruned Model Accuracy: {:.3f}'", ".", "format", "(", "float", "(", "best_acc", ")", ")", ")", "\n", "\n", "#Calculate Pruning rate", "\n", "orichannel", "=", "0", "\n", "channel", "=", "0", "\n", "for", "name", ",", "module", "in", "origin_model", ".", "named_modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "orichannel", "+=", "origin_model", ".", "state_dict", "(", ")", "[", "name", "+", "'.weight'", "]", ".", "size", "(", "0", ")", "\n", "\n", "", "", "for", "name", ",", "module", "in", "model", ".", "named_modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "channel", "+=", "model", ".", "state_dict", "(", ")", "[", "name", "+", "'.weight'", "]", ".", "size", "(", "0", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "'--------------UnPrune Model--------------'", ")", "\n", "logger", ".", "info", "(", "'Channels: %d'", "%", "(", "orichannel", ")", ")", "\n", "logger", ".", "info", "(", "'Params: %.2f M '", "%", "(", "oriparams", "/", "1000000", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS: %.2f M '", "%", "(", "oriflops", "/", "1000000", ")", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------Prune Model--------------'", ")", "\n", "logger", ".", "info", "(", "'Channels:%d'", "%", "(", "channel", ")", ")", "\n", "logger", ".", "info", "(", "'Params: %.2f M'", "%", "(", "params", "/", "1000000", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS: %.2f M'", "%", "(", "flops", "/", "1000000", ")", ")", "\n", "\n", "\n", "logger", ".", "info", "(", "'--------------Compress Rate--------------'", ")", "\n", "logger", ".", "info", "(", "'Channels Prune Rate: %d/%d (%.2f%%)'", "%", "(", "channel", ",", "orichannel", ",", "100.", "*", "(", "orichannel", "-", "channel", ")", "/", "orichannel", ")", ")", "\n", "logger", ".", "info", "(", "'Params Compress Rate: %.2f M/%.2f M(%.2f%%)'", "%", "(", "params", "/", "1000000", ",", "oriparams", "/", "1000000", ",", "100.", "*", "(", "oriparams", "-", "params", ")", "/", "oriparams", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS Compress Rate: %.2f M/%.2f M(%.2f%%)'", "%", "(", "flops", "/", "1000000", ",", "oriflops", "/", "1000000", ",", "100.", "*", "(", "oriflops", "-", "flops", ")", "/", "oriflops", ")", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------Layer Configuration--------------'", ")", "\n", "logger", ".", "info", "(", "layer_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.build_resnet_pruned_model": [[46, 177], ["origin_model.state_dict", "torch.arange", "torch.arange", "torch.arange", "importlib.import_module().resnet().to", "import_module().resnet().to.state_dict", "origin_model.named_modules", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "model_state_dict[].cpu", "importlib.import_module().resnet().to", "import_module().resnet().to.load_state_dict", "range", "torch.cat", "torch.cat", "torch.cat", "int", "torch.topk", "torch.topk", "torch.topk", "enumerate", "range", "importlib.import_module().resnet().to", "thop.profile", "isinstance", "score.append", "final_mask.append", "torch.ge", "torch.ge", "torch.ge", "enumerate", "len", "block_cfg.append", "range", "importlib.import_module().resnet", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "utils.common.direct_project", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "utils.common.direct_project", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "torch.mul().cpu", "[].cpu", "[].cpu", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.index_select().cpu", "torch.index_select().cpu", "torch.index_select().cpu", "utils.common.direct_project", "model_state_dict[].cpu", "model_state_dict[].cpu", "[].cpu", "[].cpu", "importlib.import_module().resnet", "origin_model.state_dict", "torch.abs", "torch.abs", "torch.abs", "torch.div", "torch.div", "torch.div", "torch.cat.size", "len", "torch.topk", "torch.topk", "torch.topk", "index.cpu().numpy().tolist.cpu().numpy().tolist", "index_cfg.append", "layer_cfg.append", "block_score.append", "int", "block_index_cfg.append", "importlib.import_module().resnet", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "index.cpu().numpy().tolist.append", "torch.ge.size", "int", "len", "torch.arange", "torch.arange", "torch.arange", "importlib.import_module", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.index_select", "torch.index_select", "torch.index_select", "importlib.import_module", "str", "index.cpu().numpy().tolist.cpu().numpy", "block_score[].size", "block_score[].size", "importlib.import_module", "torch.ge.size", "index.cpu().numpy().tolist.cpu"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet"], ["def", "build_resnet_pruned_model", "(", "origin_model", ")", ":", "\n", "\n", "    ", "pruning_rate_now", "=", "0", "\n", "channel_prune_rate", "=", "0.9", "\n", "num_mask_cfg", "=", "{", "'resnet50'", ":", "48", "}", "\n", "\n", "while", "pruning_rate_now", "<", "args", ".", "pruning_rate", ":", "\n", "\n", "        ", "score", "=", "[", "]", "\n", "index_cfg", "=", "[", "]", "\n", "block_index_cfg", "=", "[", "]", "\n", "layer_cfg", "=", "[", "]", "\n", "block_cfg", "=", "[", "]", "\n", "final_mask", "=", "[", "]", "\n", "pruned_state_dict", "=", "{", "}", "\n", "\n", "for", "i", "in", "range", "(", "num_mask_cfg", "[", "args", ".", "cfg", "]", ")", ":", "\n", "            ", "mask", "=", "origin_model", ".", "state_dict", "(", ")", "[", "'mask.'", "+", "str", "(", "i", ")", "]", "\n", "score", ".", "append", "(", "torch", ".", "abs", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ")", ")", "\n", "final_mask", ".", "append", "(", "torch", ".", "div", "(", "torch", ".", "sum", "(", "mask", ",", "0", ")", ",", "2", ")", ")", "\n", "\n", "", "all_score", "=", "torch", ".", "cat", "(", "score", ",", "0", ")", "\n", "\n", "preserve_num", "=", "int", "(", "all_score", ".", "size", "(", "0", ")", "*", "channel_prune_rate", ")", "\n", "preserve_channel", ",", "_", "=", "torch", ".", "topk", "(", "all_score", ",", "preserve_num", ")", "\n", "\n", "threshold", "=", "preserve_channel", "[", "preserve_num", "-", "1", "]", "\n", "\n", "block_score", "=", "[", "]", "\n", "\n", "# Based on the pruning threshold, the prune cfg of each layer is obtained", "\n", "for", "i", ",", "mini_score", "in", "enumerate", "(", "score", ")", ":", "\n", "            ", "mask", "=", "torch", ".", "ge", "(", "mini_score", ",", "threshold", ")", "\n", "index", "=", "[", "]", "\n", "for", "j", ",", "m", "in", "enumerate", "(", "mask", ")", ":", "\n", "                ", "if", "m", "==", "True", ":", "\n", "                    ", "index", ".", "append", "(", "j", ")", "\n", "", "", "if", "len", "(", "index", ")", "<", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ":", "\n", "                ", "_", ",", "index", "=", "torch", ".", "topk", "(", "mini_score", ",", "int", "(", "mask", ".", "size", "(", "0", ")", "*", "args", ".", "min_preserve", ")", ")", "\n", "index", "=", "index", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "", "if", "(", "i", "+", "1", ")", "%", "3", "!=", "0", ":", "#in block", "\n", "                ", "index_cfg", ".", "append", "(", "index", ")", "\n", "layer_cfg", ".", "append", "(", "len", "(", "index", ")", ")", "\n", "", "else", ":", "#out block", "\n", "                ", "block_score", ".", "append", "(", "mini_score", ")", "\n", "\n", "", "", "num_blocks", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "begin", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "num_blocks", ")", ")", ":", "\n", "            ", "block_cfg", ".", "append", "(", "int", "(", "block_score", "[", "begin", "]", ".", "size", "(", "0", ")", "/", "4", ")", ")", "\n", "for", "j", "in", "range", "(", "begin", ",", "begin", "+", "num_blocks", "[", "i", "]", ")", ":", "\n", "                ", "block_index_cfg", ".", "append", "(", "torch", ".", "arange", "(", "block_score", "[", "begin", "]", ".", "size", "(", "0", ")", ")", ")", "\n", "", "begin", "=", "begin", "+", "num_blocks", "[", "i", "]", "\n", "\n", "", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "block_cfg", ",", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "\n", "flops", ",", "params", "=", "profile", "(", "model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "\n", "pruning_rate_now", "=", "(", "oriflops", "-", "flops", ")", "/", "oriflops", "\n", "\n", "channel_prune_rate", "=", "channel_prune_rate", "-", "0.01", "\n", "\n", "", "model_state_dict", "=", "origin_model", ".", "state_dict", "(", ")", "\n", "\n", "current_block", "=", "0", "\n", "\n", "block_index", "=", "torch", ".", "arange", "(", "64", ")", "\n", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "block_cfg", ",", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "\n", "pruned_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "\n", "for", "name", ",", "module", "in", "origin_model", ".", "named_modules", "(", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "module", ",", "Bottleneck_class", ")", ":", "\n", "\n", "# conv1 & bn1", "\n", "            ", "index_1", "=", "torch", ".", "LongTensor", "(", "index_cfg", "[", "current_block", "*", "2", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv1.weight'", "]", ",", "0", ",", "index_1", ")", ".", "cpu", "(", ")", "\n", "pruned_weight", "=", "direct_project", "(", "pruned_weight", ",", "block_index", ")", "\n", "\n", "pruned_state_dict", "[", "name", "+", "'.conv1.weight'", "]", "=", "pruned_weight", "\n", "\n", "mask", "=", "final_mask", "[", "current_block", "*", "3", "]", "[", "index_cfg", "[", "current_block", "*", "2", "]", "]", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.weight'", "]", "[", "index_1", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn1.bias'", "]", "[", "index_1", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_var'", "]", "[", "index_1", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn1.running_mean'", "]", "[", "index_1", "]", ".", "cpu", "(", ")", "\n", "\n", "# conv2 & bn2", "\n", "index_2", "=", "torch", ".", "LongTensor", "(", "index_cfg", "[", "current_block", "*", "2", "+", "1", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "pruned_weight", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv2.weight'", "]", ",", "0", ",", "index_2", ")", ".", "cpu", "(", ")", "\n", "pruned_weight", "=", "direct_project", "(", "pruned_weight", ",", "index_1", ")", "\n", "\n", "pruned_state_dict", "[", "name", "+", "'.conv2.weight'", "]", "=", "pruned_weight", "\n", "\n", "mask", "=", "final_mask", "[", "current_block", "*", "3", "+", "1", "]", "[", "index_cfg", "[", "current_block", "*", "2", "+", "1", "]", "]", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.weight'", "]", "[", "index_2", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "=", "torch", ".", "mul", "(", "mask", ",", "model_state_dict", "[", "name", "+", "'.bn2.bias'", "]", "[", "index_2", "]", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_var'", "]", "[", "index_2", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn2.running_mean'", "]", "[", "index_2", "]", ".", "cpu", "(", ")", "\n", "\n", "block_index", "=", "torch", ".", "LongTensor", "(", "block_index_cfg", "[", "current_block", "]", ")", ".", "to", "(", "device", ")", "\n", "mask", "=", "final_mask", "[", "current_block", "*", "3", "+", "2", "]", "[", "block_index_cfg", "[", "current_block", "]", "]", "\n", "\n", "# conv3 & bn3 & shortcut", "\n", "\n", "pruned_state_dict", "[", "name", "+", "'.conv3.weight'", "]", "=", "torch", ".", "index_select", "(", "model_state_dict", "[", "name", "+", "'.conv3.weight'", "]", ",", "0", ",", "block_index", ")", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.conv3.weight'", "]", "=", "direct_project", "(", "pruned_state_dict", "[", "name", "+", "'.conv3.weight'", "]", ",", "index_2", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.weight'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.bias'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.bias'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.running_var'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.running_var'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "name", "+", "'.bn3.running_mean'", "]", "=", "model_state_dict", "[", "name", "+", "'.bn3.running_mean'", "]", "[", "block_index", "]", ".", "cpu", "(", ")", "\n", "\n", "current_block", "+=", "1", "\n", "\n", "", "", "pruned_state_dict", "[", "'fc.weight'", "]", "=", "model_state_dict", "[", "'fc.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'fc.bias'", "]", "=", "model_state_dict", "[", "'fc.bias'", "]", ".", "cpu", "(", ")", "\n", "\n", "pruned_state_dict", "[", "'conv1.weight'", "]", "=", "model_state_dict", "[", "'conv1.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.weight'", "]", "=", "model_state_dict", "[", "'bn1.weight'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.bias'", "]", "=", "model_state_dict", "[", "'bn1.bias'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_var'", "]", "=", "model_state_dict", "[", "'bn1.running_var'", "]", ".", "cpu", "(", ")", "\n", "pruned_state_dict", "[", "'bn1.running_mean'", "]", "=", "model_state_dict", "[", "'bn1.running_mean'", "]", ".", "cpu", "(", ")", "\n", "\n", "#load weight", "\n", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "load_state_dict", "(", "pruned_state_dict", ")", "\n", "return", "model", ",", "[", "layer_cfg", ",", "block_cfg", "]", ",", "flops", ",", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train_class": [[179, 234], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "model.train", "time.time", "len", "enumerate", "images.to.to", "targets.to.to", "utils.AverageMeter.update", "model", "criterion", "utils.accuracy", "images.to.size", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "utils.AverageMeter.update", "time.time", "criterion.item", "prec1.item", "prec5.item", "logger.info", "time.time", "float", "torch.sum().norm", "torch.sum().norm", "torch.sum().norm", "time.time", "torch.sum", "torch.sum", "torch.sum"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.backward", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "def", "train_class", "(", "epoch", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "    ", "batch_time", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "utils", ".", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "top1", "=", "utils", ".", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", "'Acc@5'", ",", "':6.2f'", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_iter", "=", "len", "(", "train_loader", ")", "\n", "\n", "print_freq", "=", "num_iter", "//", "10", "\n", "i", "=", "0", "\n", "\n", "for", "batch_idx", ",", "(", "images", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "args", ".", "debug", ":", "\n", "            ", "if", "i", ">", "5", ":", "\n", "                ", "break", "\n", "", "i", "+=", "1", "\n", "", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "to", "(", "device", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# compute output", "\n", "logits", ",", "mask", "=", "model", "(", "images", ",", "targets", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "targets", ")", "\n", "for", "m", "in", "mask", ":", "\n", "            ", "loss", "+=", "float", "(", "args", ".", "sparse_lambda", ")", "*", "torch", ".", "sum", "(", "m", ",", "0", ")", ".", "norm", "(", "2", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "targets", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "images", ".", "size", "(", "0", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "n", ")", "# accumulated loss", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "n", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "batch_idx", "%", "print_freq", "==", "0", "and", "batch_idx", "!=", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "'Epoch[{0}]({1}/{2}): '", "\n", "'Loss {loss.avg:.4f} '", "\n", "'Prec@1(1,5) {top1.avg:.2f}, {top5.avg:.2f}'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", ",", "num_iter", ",", "loss", "=", "losses", ",", "\n", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train": [[236, 290], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "model.train", "time.time", "len", "enumerate", "images.cuda.cuda", "targets.cuda.cuda", "utils.AverageMeter.update", "imagenet.adjust_learning_rate", "model", "criterion", "utils.accuracy", "images.cuda.size", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "utils.AverageMeter.update", "time.time", "criterion.item", "prec1.item", "prec5.item", "logger.info", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.adjust_learning_rate", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.backward", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "def", "train", "(", "epoch", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "    ", "batch_time", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "utils", ".", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "top1", "=", "utils", ".", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", "'Acc@5'", ",", "':6.2f'", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "num_iter", "=", "len", "(", "train_loader", ")", "\n", "\n", "print_freq", "=", "num_iter", "//", "10", "\n", "i", "=", "0", "\n", "for", "batch_idx", ",", "(", "images", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "if", "args", ".", "debug", ":", "\n", "            ", "if", "i", ">", "5", ":", "\n", "                ", "break", "\n", "", "i", "+=", "1", "\n", "", "images", "=", "images", ".", "cuda", "(", ")", "\n", "targets", "=", "targets", ".", "cuda", "(", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "batch_idx", ",", "num_iter", ")", "\n", "\n", "# compute output", "\n", "logits", "=", "model", "(", "images", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "targets", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "targets", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "images", ".", "size", "(", "0", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "n", ")", "# accumulated loss", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "n", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "n", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "batch_idx", "%", "print_freq", "==", "0", "and", "batch_idx", "!=", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "'Epoch[{0}]({1}/{2}): '", "\n", "'Loss {loss.avg:.4f} '", "\n", "'Prec@1(1,5) {top1.avg:.2f}, {top5.avg:.2f}'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", ",", "num_iter", ",", "loss", "=", "losses", ",", "\n", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.validate": [[292, 331], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "len", "model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "time.time", "enumerate", "logger.info", "images.cuda.cuda", "targets.cuda.cuda", "model", "criterion", "utils.accuracy", "images.cuda.size", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "time.time", "criterion.item", "time.time", "utils.options.args"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update"], ["", "def", "validate", "(", "val_loader", ",", "model", ",", "criterion", ",", "args", ")", ":", "\n", "    ", "batch_time", "=", "utils", ".", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", "'Loss'", ",", "':.4e'", ")", "\n", "top1", "=", "utils", ".", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", "'Acc@5'", ",", "':6.2f'", ")", "\n", "\n", "num_iter", "=", "len", "(", "val_loader", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "end", "=", "time", ".", "time", "(", ")", "\n", "i", "=", "0", "\n", "for", "batch_idx", ",", "(", "images", ",", "targets", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "if", "args", ".", "debug", ":", "\n", "                ", "if", "i", ">", "5", ":", "\n", "                    ", "break", "\n", "", "i", "+=", "1", "\n", "", "images", "=", "images", ".", "cuda", "(", ")", "\n", "targets", "=", "targets", ".", "cuda", "(", ")", "\n", "\n", "# compute output", "\n", "logits", "=", "model", "(", "images", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "targets", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "pred1", ",", "pred5", "=", "utils", ".", "accuracy", "(", "logits", ",", "targets", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "n", "=", "images", ".", "size", "(", "0", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "n", ")", "\n", "top1", ".", "update", "(", "pred1", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "pred5", "[", "0", "]", ",", "n", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "logger", ".", "info", "(", "' * Acc@1 {top1.avg:.3f} Acc@5 {top5.avg:.3f}'", "\n", ".", "format", "(", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.adjust_learning_rate": [[332, 353], ["print", "math.cos"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "step", ",", "len_epoch", ")", ":", "\n", "#Warmup", "\n", "    ", "if", "args", ".", "lr_type", "==", "'step'", ":", "\n", "        ", "factor", "=", "epoch", "//", "30", "\n", "if", "epoch", ">=", "80", ":", "\n", "            ", "factor", "=", "factor", "+", "1", "\n", "", "lr", "=", "args", ".", "lr", "*", "(", "0.1", "**", "factor", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'cos'", ":", "# cos without warm-up", "\n", "        ", "lr", "=", "0.5", "*", "args", ".", "lr", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "(", "epoch", "-", "5", ")", "/", "(", "args", ".", "num_epochs", "-", "5", ")", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'exp'", ":", "\n", "        ", "step", "=", "1", "\n", "decay", "=", "0.96", "\n", "lr", "=", "args", ".", "lr", "*", "(", "decay", "**", "(", "epoch", "//", "step", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'fixed'", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "if", "step", "==", "0", ":", "\n", "        ", "print", "(", "'current learning rate:{0}'", ".", "format", "(", "lr", ")", ")", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.main": [[354, 445], ["print", "range", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "logger.info", "print", "torch.SGD", "range", "print", "torch.SGD", "torch.load", "torch.load", "torch.load", "torch.SGD", "import_module().resnet().to.load_state_dict", "optim.SGD.load_state_dict", "len", "torch.DataParallel", "imagenet.train", "imagenet.validate", "max", "max", "utils.common.checkpoint.save_model", "importlib.import_module().resnet_class().to", "import_module().resnet().to.parameters", "print", "imagenet.train_class", "import_module().resnet().to.state_dict", "utils.common.checkpoint.save_class_model", "imagenet.build_resnet_pruned_model", "import_module().resnet().to.parameters", "importlib.import_module().resnet().to", "import_module().resnet().to.parameters", "import_module().resnet().to.module.state_dict", "import_module().resnet().to.state_dict", "optim.SGD.state_dict", "float", "float", "optim.SGD.state_dict", "len", "importlib.import_module().resnet_class", "importlib.import_module().resnet", "importlib.import_module", "importlib.import_module"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.validate", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.train_class", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_class_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.None.imagenet.build_resnet_pruned_model", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet_class", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "start_epoch", "=", "0", "\n", "best_top1_acc", "=", "0.0", "\n", "best_top5_acc", "=", "0.0", "\n", "\n", "print", "(", "'==> Building Model..'", ")", "\n", "if", "args", ".", "resume", "==", "False", ":", "\n", "        ", "if", "args", ".", "arch", "==", "'resnet'", ":", "\n", "            ", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet_class", "(", "args", ".", "cfg", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "'arch not exist!'", ")", "\n", "", "print", "(", "\"Model Construction Down!\"", ")", "\n", "\n", "# Train class-wise mask", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "classtrain_epochs", ")", ":", "\n", "            ", "print", "(", "'Epoch:{}'", ".", "format", "(", "epoch", ")", ")", "\n", "train_class", "(", "epoch", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ")", "\n", "model_state_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "state", "=", "{", "\n", "'state_dict'", ":", "model_state_dict", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'arch'", ":", "args", ".", "cfg", ",", "\n", "}", "\n", "checkpoint", ".", "save_class_model", "(", "state", ")", "\n", "\n", "# Global voting to obtain pruned model", "\n", "", "print", "(", "'==> Building Pruned Model..'", ")", "\n", "if", "args", ".", "arch", "==", "'resnet'", ":", "\n", "            ", "model", ",", "layer_cfg", ",", "flops", ",", "params", "=", "build_resnet_pruned_model", "(", "model", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "'arch not exist!'", ")", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "", "else", ":", "\n", "        ", "resumeckpt", "=", "torch", ".", "load", "(", "args", ".", "job_dir", "+", "'/checkpoint/model_last.pt'", ")", "\n", "state_dict", "=", "resumeckpt", "[", "'state_dict'", "]", "\n", "cfg", "=", "resumeckpt", "[", "'cfg'", "]", "\n", "\n", "if", "args", ".", "arch", "==", "'resnet'", ":", "\n", "            ", "model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ",", "block_cfg", "=", "cfg", "[", "1", "]", ",", "layer_cfg", "=", "cfg", "[", "0", "]", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "'arch not exist!'", ")", "\n", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "optimizer", ".", "load_state_dict", "(", "resumeckpt", "[", "'optimizer'", "]", ")", "\n", "start_epoch", "=", "resumeckpt", "[", "'epoch'", "]", "\n", "\n", "", "if", "len", "(", "args", ".", "gpus", ")", "!=", "1", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", "=", "args", ".", "gpus", ")", "\n", "\n", "# fine-tuning", "\n", "", "for", "epoch", "in", "range", "(", "start_epoch", ",", "args", ".", "num_epochs", ")", ":", "\n", "        ", "train_obj", ",", "train_top1_acc", ",", "train_top5_acc", "=", "train", "(", "epoch", ",", "train_loader", ",", "model", ",", "criterion", ",", "optimizer", ")", "\n", "valid_obj", ",", "test_top1_acc", ",", "test_top5_acc", "=", "validate", "(", "val_loader", ",", "model", ",", "criterion", ",", "args", ")", "\n", "\n", "is_best", "=", "best_top5_acc", "<", "test_top5_acc", "\n", "best_top1_acc", "=", "max", "(", "best_top1_acc", ",", "test_top1_acc", ")", "\n", "best_top5_acc", "=", "max", "(", "best_top5_acc", ",", "test_top5_acc", ")", "\n", "\n", "model_state_dict", "=", "model", ".", "module", ".", "state_dict", "(", ")", "if", "len", "(", "args", ".", "gpus", ")", ">", "1", "else", "model", ".", "state_dict", "(", ")", "\n", "\n", "state", "=", "{", "\n", "'state_dict'", ":", "model_state_dict", ",", "\n", "'best_top1_acc'", ":", "best_top1_acc", ",", "\n", "'best_top5_acc'", ":", "best_top5_acc", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'arch'", ":", "args", ".", "cfg", ",", "\n", "'cfg'", ":", "layer_cfg", "\n", "}", "\n", "checkpoint", ".", "save_model", "(", "state", ",", "epoch", "+", "1", ",", "is_best", ")", "\n", "\n", "", "logger", ".", "info", "(", "'Best Top-1 accuracy: {:.3f} Top-5 accuracy: {:.3f}'", ".", "format", "(", "float", "(", "best_top1_acc", ")", ",", "float", "(", "best_top5_acc", ")", ")", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------Layer Configuration--------------'", ")", "\n", "logger", ".", "info", "(", "layer_cfg", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------UnPrune Model--------------'", ")", "\n", "logger", ".", "info", "(", "'Params: %.2f M '", "%", "(", "oriparams", "/", "1000000", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS: %.2f M '", "%", "(", "oriflops", "/", "1000000", ")", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------Prune Model--------------'", ")", "\n", "logger", ".", "info", "(", "'Params: %.2f M'", "%", "(", "params", "/", "1000000", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS: %.2f M'", "%", "(", "flops", "/", "1000000", ")", ")", "\n", "\n", "logger", ".", "info", "(", "'--------------Compress Rate--------------'", ")", "\n", "logger", ".", "info", "(", "'Params Compress Rate: %.2f M/%.2f M(%.2f%%)'", "%", "(", "params", "/", "1000000", ",", "oriparams", "/", "1000000", ",", "100.", "*", "(", "oriparams", "-", "params", ")", "/", "oriparams", ")", ")", "\n", "logger", ".", "info", "(", "'FLOPS Compress Rate: %.2f M/%.2f M(%.2f%%)'", "%", "(", "flops", "/", "1000000", ",", "oriflops", "/", "1000000", ",", "100.", "*", "(", "oriflops", "-", "flops", ")", "/", "oriflops", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.__init__": [[13, 17], ["common.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.reset": [[18, 23], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.update": [[24, 29], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.AverageMeter.__str__": [[30, 33], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.record_config.__init__": [[47, 73], ["datetime.datetime.now().strftime", "datetime.date.today", "pathlib.Path", "common.record_config.__init__._make_dir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "today", "=", "datetime", ".", "date", ".", "today", "(", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "job_dir", "=", "Path", "(", "args", ".", "job_dir", ")", "\n", "\n", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "", "_make_dir", "(", "self", ".", "job_dir", ")", "\n", "\n", "config_dir", "=", "self", ".", "job_dir", "/", "'config.txt'", "\n", "if", "args", ".", "resume", "!=", "None", ":", "\n", "            ", "with", "open", "(", "config_dir", ",", "'a'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                    ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "", "else", ":", "\n", "            ", "with", "open", "(", "config_dir", ",", "'w'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                    ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.__init__": [[75, 92], ["datetime.datetime.now().strftime", "pathlib.Path", "common.checkpoint.__init__._make_dir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "job_dir", "=", "Path", "(", "args", ".", "job_dir", ")", "\n", "self", ".", "ckpt_dir", "=", "self", ".", "job_dir", "/", "'checkpoint'", "\n", "self", ".", "run_dir", "=", "self", ".", "job_dir", "/", "'run'", "\n", "\n", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "", "_make_dir", "(", "self", ".", "job_dir", ")", "\n", "_make_dir", "(", "self", ".", "ckpt_dir", ")", "\n", "_make_dir", "(", "self", ".", "run_dir", ")", "\n", "\n", "record_config", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_model": [[93, 98], ["torch.save", "torch.save", "torch.save", "torch.save", "shutil.copyfile"], "methods", ["None"], ["", "def", "save_model", "(", "self", ",", "state", ",", "epoch", ",", "is_best", ")", ":", "\n", "        ", "save_path", "=", "f'{self.ckpt_dir}/model_last.pt'", "\n", "torch", ".", "save", "(", "state", ",", "save_path", ")", "\n", "if", "is_best", ":", "\n", "            ", "shutil", ".", "copyfile", "(", "save_path", ",", "f'{self.ckpt_dir}/model_best.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_class_model": [[99, 103], ["torch.save", "torch.save", "torch.save", "torch.save"], "methods", ["None"], ["", "", "def", "save_class_model", "(", "self", ",", "state", ")", ":", "\n", "        ", "save_path", "=", "f'{self.ckpt_dir}/class_model.pt'", "\n", "# print('=> Saving model to {}'.format(save_path))", "\n", "torch", ".", "save", "(", "state", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.checkpoint.save_pretrain_model": [[104, 108], ["torch.save", "torch.save", "torch.save", "torch.save"], "methods", ["None"], ["", "def", "save_pretrain_model", "(", "self", ",", "state", ")", ":", "\n", "        ", "save_path", "=", "f'{self.ckpt_dir}/pretrain_model.pt'", "\n", "# print('=> Saving model to {}'.fo_rmat(save_path))", "\n", "torch", ".", "save", "(", "state", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.ensure_path": [[34, 37], ["pathlib.Path", "pathlib.Path.mkdir"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.mkdir"], ["", "", "def", "ensure_path", "(", "directory", ")", ":", "\n", "    ", "directory", "=", "Path", "(", "directory", ")", "\n", "directory", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.mkdir": [[38, 44], ["os.mkdir", "os.path.isdir", "common.mkdir", "os.path.split"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.mkdir", "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.mkdir"], ["", "def", "mkdir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "        ", "mkdir", "(", "os", ".", "path", ".", "split", "(", "path", ")", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "\n", "", "os", ".", "mkdir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.get_logger": [[109, 124], ["logging.getLogger", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.getLogger.setLevel"], "function", ["None"], ["", "", "def", "get_logger", "(", "file_path", ")", ":", "\n", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "'gal'", ")", "\n", "log_format", "=", "'%(asctime)s | %(message)s'", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ",", "datefmt", "=", "'%m/%d %I:%M:%S %p'", ")", "\n", "file_handler", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "stream_handler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "stream_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "logger", ".", "addHandler", "(", "stream_handler", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.accuracy": [[126, 140], ["torch.no_grad", "torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.utils.common.direct_project": [[141, 151], ["torch.randn", "torch.randn", "enumerate", "weight.size", "len", "weight.size", "weight.size"], "function", ["None"], ["", "", "def", "direct_project", "(", "weight", ",", "indices", ")", ":", "\n", "#print(weight.size())", "\n", "\n", "    ", "A", "=", "torch", ".", "randn", "(", "weight", ".", "size", "(", "0", ")", ",", "len", "(", "indices", ")", ",", "weight", ".", "size", "(", "2", ")", ",", "weight", ".", "size", "(", "3", ")", ")", "\n", "#print(A.size())", "\n", "for", "i", ",", "indice", "in", "enumerate", "(", "indices", ")", ":", "\n", "\n", "        ", "A", "[", ":", ",", "i", ",", ":", ",", ":", "]", "=", "weight", "[", ":", ",", "indice", ",", ":", ",", ":", "]", "\n", "\n", "", "return", "A", "\n", "", ""]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.ClassScale.forward": [[20, 40], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "vgg_cifar.ClassScale.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "#pdb.set_trace()", "\n", "guide", "=", "torch", ".", "index_select", "(", "mask", ",", "0", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.ClassScale.backward": [[41, 78], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "grad_guide.reshape.reshape.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.eq", "torch.eq", "torch.eq", "torch.eq"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "squeeze", "(", "grad_guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "grad_guide", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "torch", ".", "eq", "(", "targets", ",", "i", ")", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.ClassScale_Gaussian.forward": [[100, 121], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "vgg_cifar.Gaussian_select", "vgg_cifar.ClassScale_Gaussian.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Gaussian_select"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "guide", ",", "distri", "=", "Gaussian_select", "(", "mask", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "#self.save_for_backward(input_data, scale_vec)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.ClassScale_Gaussian.backward": [[122, 160], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "#distri: N*num_classes", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "guide_1", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "guide_1", "=", "torch", ".", "squeeze", "(", "guide_1", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "guide_1", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "distri", "[", ":", ",", "i", "]", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG_Class.__init__": [[162, 170], ["torch.Module.__init__", "vgg_cifar.VGG_Class._make_layers", "torch.ParameterList", "torch.ParameterList", "torch.Linear", "torch.Linear", "vgg_cifar.VGG_Class._initialize_weights", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "len"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "layer_cfg", "=", "None", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "VGG_Class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "cfg_index", "=", "0", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "mask", "=", "nn", ".", "ParameterList", "(", "[", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "num_classes", ",", "cfg_mask", "[", "vgg_name", "]", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "cfg_mask", "[", "vgg_name", "]", ")", ")", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", "if", "self", ".", "layer_cfg", "is", "None", "else", "self", ".", "layer_cfg", "[", "-", "1", "]", ",", "num_classes", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG_Class.forward": [[171, 182], ["ClassScale_Gaussian.apply.view", "vgg_cifar.VGG_Class.classifier", "feature", "isinstance", "ClassScale_Gaussian.apply.size", "ClassScale_Gaussian.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "targets", ")", ":", "\n", "        ", "out", "=", "x", "\n", "mask_index", "=", "0", "\n", "for", "feature", "in", "self", ".", "features", ":", "\n", "            ", "out", "=", "feature", "(", "out", ")", "\n", "if", "isinstance", "(", "feature", ",", "nn", ".", "ReLU", ")", ":", "\n", "                ", "out", "=", "ClassScale_Gaussian", ".", "apply", "(", "out", ",", "self", ".", "mask", "[", "mask_index", "]", ",", "targets", ")", "\n", "mask_index", "+=", "1", "\n", "", "", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", ",", "self", ".", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG_Class._make_layers": [[183, 202], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "x", "=", "x", "if", "self", ".", "layer_cfg", "is", "None", "else", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "x", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "in_channels", "=", "x", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG_Class._initialize_weights": [[203, 215], ["vgg_cifar.VGG_Class.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG.__init__": [[217, 224], ["torch.Module.__init__", "vgg_cifar.VGG._make_layers", "torch.Linear", "torch.Linear", "vgg_cifar.VGG._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "layer_cfg", "=", "None", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "cfg_index", "=", "0", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", "if", "self", ".", "layer_cfg", "is", "None", "else", "self", ".", "layer_cfg", "[", "-", "1", "]", ",", "num_classes", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG.forward": [[225, 230], ["vgg_cifar.VGG.features", "vgg_cifar.VGG.view", "vgg_cifar.VGG.classifier", "vgg_cifar.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG._make_layers": [[231, 249], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "x", "=", "x", "if", "self", ".", "layer_cfg", "is", "None", "else", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "x", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.VGG._initialize_weights": [[250, 262], ["vgg_cifar.VGG.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.vgg_cifar.Gaussian_select": [[79, 94], ["torch.rand", "torch.rand", "enumerate", "torch.mm", "torch.mm", "targets.size", "mask.size"], "function", ["None"], ["", "", "def", "Gaussian_select", "(", "mask", ",", "targets", ")", ":", "\n", "    ", "'''\n    #output:  distribution:N*num_classes\n    #mask: num_classes x C\n    #guide: N*C\n    '''", "\n", "\n", "distri", "=", "torch", ".", "rand", "(", "targets", ".", "size", "(", "0", ")", ",", "mask", ".", "size", "(", "0", ")", ",", "device", "=", "mask", ".", "device", ")", "\n", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "targets", ")", ":", "\n", "        ", "distri", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "", "guide", "=", "torch", ".", "mm", "(", "distri", ",", "mask", ")", "\n", "\n", "return", "guide", ",", "distri", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ClassScale.forward": [[16, 35], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "resnet_cifar.ClassScale.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "guide", "=", "torch", ".", "index_select", "(", "mask", ",", "0", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ClassScale.backward": [[36, 73], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "grad_guide.reshape.reshape.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.eq"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "squeeze", "(", "grad_guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "grad_guide", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "torch", ".", "eq", "(", "targets", ",", "i", ")", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ClassScale_Gaussian.forward": [[94, 115], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "resnet_cifar.Gaussian_select", "resnet_cifar.ClassScale_Gaussian.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Gaussian_select"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "guide", ",", "distri", "=", "Gaussian_select", "(", "mask", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "#self.save_for_backward(input_data, scale_vec)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ClassScale_Gaussian.backward": [[116, 154], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "#distri: N*num_classes", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "guide_1", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "guide_1", "=", "torch", ".", "squeeze", "(", "guide_1", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "guide_1", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "distri", "[", ":", ",", "i", "]", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.LambdaLayer.__init__": [[156, 159], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "super", "(", "LambdaLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.LambdaLayer.forward": [[160, 162], ["resnet_cifar.LambdaLayer.lambd"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "lambd", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResBasicBlock.__init__": [[166, 186], ["torch.Module.__init__", "resnet_cifar.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_cifar.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet_cifar.LambdaLayer", "resnet_cifar.LambdaLayer", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.conv3x3", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "filter_num", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "planes", "=", "planes", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "filter_num", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "filter_num", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "filter_num", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", ":", "\n", "            ", "if", "stride", "!=", "1", ":", "\n", "                ", "self", ".", "shortcut", "=", "LambdaLayer", "(", "\n", "lambda", "x", ":", "F", ".", "pad", "(", "x", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", ",", "\n", "(", "0", ",", "0", ",", "0", ",", "0", ",", "(", "planes", "-", "inplanes", ")", "//", "2", ",", "planes", "-", "inplanes", "-", "(", "planes", "-", "inplanes", ")", "//", "2", ")", ",", "\"constant\"", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "shortcut", "=", "LambdaLayer", "(", "\n", "lambda", "x", ":", "F", ".", "pad", "(", "x", "[", ":", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "(", "0", ",", "0", ",", "0", ",", "0", ",", "(", "planes", "-", "inplanes", ")", "//", "2", ",", "planes", "-", "inplanes", "-", "(", "planes", "-", "inplanes", ")", "//", "2", ")", ",", "\"constant\"", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResBasicBlock.forward": [[187, 199], ["resnet_cifar.ResBasicBlock.conv1", "resnet_cifar.ResBasicBlock.bn1", "resnet_cifar.ResBasicBlock.relu", "resnet_cifar.ResBasicBlock.conv2", "resnet_cifar.ResBasicBlock.bn2", "resnet_cifar.ResBasicBlock.shortcut", "resnet_cifar.ResBasicBlock.relu"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResBasicBlock_Class.__init__": [[203, 223], ["torch.Module.__init__", "resnet_cifar.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_cifar.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "resnet_cifar.LambdaLayer", "resnet_cifar.LambdaLayer", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad", "torch.pad"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.conv3x3", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "filter_num", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResBasicBlock_Class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "planes", "=", "planes", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "filter_num", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "filter_num", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "filter_num", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", ":", "\n", "            ", "if", "stride", "!=", "1", ":", "\n", "                ", "self", ".", "shortcut", "=", "LambdaLayer", "(", "\n", "lambda", "x", ":", "F", ".", "pad", "(", "x", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ":", "2", "]", ",", "\n", "(", "0", ",", "0", ",", "0", ",", "0", ",", "(", "planes", "-", "inplanes", ")", "//", "2", ",", "planes", "-", "inplanes", "-", "(", "planes", "-", "inplanes", ")", "//", "2", ")", ",", "\"constant\"", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "shortcut", "=", "LambdaLayer", "(", "\n", "lambda", "x", ":", "F", ".", "pad", "(", "x", "[", ":", ",", ":", ",", ":", ",", ":", "]", ",", "\n", "(", "0", ",", "0", ",", "0", ",", "0", ",", "(", "planes", "-", "inplanes", ")", "//", "2", ",", "planes", "-", "inplanes", "-", "(", "planes", "-", "inplanes", ")", "//", "2", ")", ",", "\"constant\"", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResBasicBlock_Class.forward": [[224, 238], ["resnet_cifar.ResBasicBlock_Class.conv1", "ClassScale_Gaussian.apply", "resnet_cifar.ResBasicBlock_Class.bn1", "resnet_cifar.ResBasicBlock_Class.relu", "resnet_cifar.ResBasicBlock_Class.conv2", "resnet_cifar.ResBasicBlock_Class.bn2", "resnet_cifar.ResBasicBlock_Class.shortcut", "resnet_cifar.ResBasicBlock_Class.relu"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "mask_1", ",", "targets", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "ClassScale_Gaussian", ".", "apply", "(", "out", ",", "mask", ",", "targets", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet_class.__init__": [[240, 265], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_cifar.ResNet_class._make_layer", "resnet_cifar.ResNet_class._make_layer", "resnet_cifar.ResNet_class._make_layer", "torch.ParameterList", "torch.ParameterList", "torch.ParameterList", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_cifar.ResNet_class.initialize", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "int"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet.initialize"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_layers", ",", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet_class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block_layers", "=", "num_layers", "-", "2", "\n", "assert", "block_layers", "%", "6", "==", "0", ",", "'depth should be 6n+2'", "\n", "n", "=", "block_layers", "//", "6", "\n", "\n", "block_cfg", "=", "[", "16", ",", "32", ",", "64", "]", "\n", "\n", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "cfg_index", "=", "0", "\n", "self", ".", "inplanes", "=", "block_cfg", "[", "0", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "0", "]", ",", "blocks", "=", "n", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "1", "]", ",", "blocks", "=", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "2", "]", ",", "blocks", "=", "n", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "mask", "=", "nn", ".", "ParameterList", "(", "[", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "num_classes", ",", "block_cfg", "[", "int", "(", "i", "/", "(", "block_layers", "//", "3", ")", ")", "]", ")", ")", "for", "i", "in", "range", "(", "-", "1", ",", "block_layers", ")", "]", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "block", ".", "expansion", "*", "block_cfg", "[", "2", "]", ",", "num_classes", ")", "\n", "\n", "self", ".", "initialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet_class.initialize": [[266, 273], ["resnet_cifar.ResNet_class.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet_class._make_layer": [[274, 289], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "filter_num", "=", "\n", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "if", "self", ".", "layer_cfg", "!=", "None", "else", "planes", ",", "\n", "stride", "=", "stride", ")", ")", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "filter_num", "=", "\n", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "if", "self", ".", "layer_cfg", "!=", "None", "else", "planes", ")", ")", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet_class.forward": [[290, 309], ["resnet_cifar.ResNet_class.conv1", "resnet_cifar.ResNet_class.bn1", "resnet_cifar.ResNet_class.relu", "resnet_cifar.ResNet_class.avgpool", "block.view", "resnet_cifar.ResNet_class.fc", "block", "block", "block", "block.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "targets", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "mask_index", "=", "1", "\n", "for", "block", "in", "self", ".", "layer1", ":", "\n", "            ", "x", "=", "block", "(", "x", ",", "self", ".", "mask", "[", "mask_index", "]", ",", "self", ".", "mask", "[", "mask_index", "+", "1", "]", ",", "targets", ")", "\n", "mask_index", "+=", "2", "\n", "", "for", "block", "in", "self", ".", "layer2", ":", "\n", "            ", "x", "=", "block", "(", "x", ",", "self", ".", "mask", "[", "mask_index", "]", ",", "self", ".", "mask", "[", "mask_index", "+", "1", "]", ",", "targets", ")", "\n", "mask_index", "+=", "2", "\n", "", "for", "block", "in", "self", ".", "layer3", ":", "\n", "            ", "x", "=", "block", "(", "x", ",", "self", ".", "mask", "[", "mask_index", "]", ",", "self", ".", "mask", "[", "mask_index", "+", "1", "]", ",", "targets", ")", "\n", "mask_index", "+=", "2", "\n", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", ",", "self", ".", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet.__init__": [[311, 332], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_cifar.ResNet._make_layer", "resnet_cifar.ResNet._make_layer", "resnet_cifar.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_cifar.ResNet.initialize"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet.initialize"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_layers", ",", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "num_layers", "-", "2", ")", "%", "6", "==", "0", ",", "'depth should be 6n+2'", "\n", "n", "=", "(", "num_layers", "-", "2", ")", "//", "6", "\n", "\n", "if", "block_cfg", "==", "None", ":", "\n", "            ", "block_cfg", "=", "[", "16", ",", "32", ",", "64", "]", "\n", "", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "cfg_index", "=", "0", "\n", "self", ".", "inplanes", "=", "block_cfg", "[", "0", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "0", "]", ",", "blocks", "=", "n", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "1", "]", ",", "blocks", "=", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "block_cfg", "[", "2", "]", ",", "blocks", "=", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "block_cfg", "[", "2", "]", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "initialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet.initialize": [[333, 340], ["resnet_cifar.ResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet._make_layer": [[341, 356], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "filter_num", "=", "\n", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "if", "self", ".", "layer_cfg", "!=", "None", "else", "planes", ",", "\n", "stride", "=", "stride", ")", ")", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "filter_num", "=", "\n", "self", ".", "layer_cfg", "[", "self", ".", "cfg_index", "]", "if", "self", ".", "layer_cfg", "!=", "None", "else", "planes", ")", ")", "\n", "self", ".", "cfg_index", "+=", "1", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.ResNet.forward": [[357, 369], ["resnet_cifar.ResNet.conv1", "resnet_cifar.ResNet.bn1", "resnet_cifar.ResNet.relu", "resnet_cifar.ResNet.layer1", "resnet_cifar.ResNet.layer2", "resnet_cifar.ResNet.layer3", "resnet_cifar.ResNet.avgpool", "resnet_cifar.ResNet.view", "resnet_cifar.ResNet.fc", "resnet_cifar.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.conv3x3": [[8, 11], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.Gaussian_select": [[74, 89], ["torch.rand", "torch.rand", "torch.rand", "enumerate", "torch.mm", "torch.mm", "torch.mm", "targets.size", "mask.size"], "function", ["None"], ["", "", "def", "Gaussian_select", "(", "mask", ",", "targets", ")", ":", "\n", "    ", "'''\n    #output:  distribution:N*num_classes\n    #mask: num_classes x C\n    #guide: N*C\n    '''", "\n", "\n", "distri", "=", "torch", ".", "rand", "(", "targets", ".", "size", "(", "0", ")", ",", "mask", ".", "size", "(", "0", ")", ",", "device", "=", "mask", ".", "device", ")", "\n", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "targets", ")", ":", "\n", "        ", "distri", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "", "guide", "=", "torch", ".", "mm", "(", "distri", ",", "mask", ")", "\n", "\n", "return", "guide", ",", "distri", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet56": [[370, 372], ["resnet_cifar.ResNet"], "function", ["None"], ["", "", "def", "resnet56", "(", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "ResBasicBlock", ",", "56", ",", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet110": [[373, 375], ["resnet_cifar.ResNet"], "function", ["None"], ["", "def", "resnet110", "(", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "ResBasicBlock", ",", "110", ",", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet": [[376, 381], ["resnet_cifar.resnet56", "resnet_cifar.resnet110"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet56", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet110"], ["", "def", "resnet", "(", "arch", ",", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "arch", "==", "'resnet56'", ":", "\n", "        ", "return", "resnet56", "(", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "", "elif", "arch", "==", "'resnet110'", ":", "\n", "        ", "return", "resnet110", "(", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet56_class": [[382, 384], ["resnet_cifar.ResNet_class"], "function", ["None"], ["", "", "def", "resnet56_class", "(", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet_class", "(", "ResBasicBlock_Class", ",", "56", ",", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet110_class": [[385, 387], ["resnet_cifar.ResNet_class"], "function", ["None"], ["", "def", "resnet110_class", "(", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet_class", "(", "ResBasicBlock_Class", ",", "110", ",", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet_class": [[388, 393], ["resnet_cifar.resnet56_class", "resnet_cifar.resnet110_class"], "function", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet56_class", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet_cifar.resnet110_class"], ["", "def", "resnet_class", "(", "arch", ",", "layer_cfg", "=", "None", ",", "block_cfg", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "arch", "==", "'resnet56'", ":", "\n", "        ", "return", "resnet56_class", "(", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "\n", "", "elif", "arch", "==", "'resnet110'", ":", "\n", "        ", "return", "resnet110_class", "(", "layer_cfg", ",", "block_cfg", ",", "**", "kwargs", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.ClassScale_Gaussian.forward": [[32, 53], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "mobilenet_v2.Gaussian_select", "mobilenet_v2.ClassScale_Gaussian.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Gaussian_select"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "guide", ",", "distri", "=", "Gaussian_select", "(", "mask", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "#self.save_for_backward(input_data, scale_vec)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.ClassScale_Gaussian.backward": [[54, 92], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "#distri: N*num_classes", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "guide_1", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "guide_1", "=", "torch", ".", "squeeze", "(", "guide_1", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "guide_1", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "distri", "[", ":", ",", "i", "]", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.Block_class.__init__": [[95, 112], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ":", "\n", "        ", "super", "(", "Block_class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "planes", "=", "expansion", "*", "in_planes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "planes", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "1", "and", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.Block_class.forward": [[114, 121], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ClassScale_Gaussian.apply", "mobilenet_v2.Block_class.bn3", "mobilenet_v2.Block_class.bn1", "mobilenet_v2.Block_class.bn2", "mobilenet_v2.Block_class.conv3", "mobilenet_v2.Block_class.conv1", "mobilenet_v2.Block_class.conv2", "mobilenet_v2.Block_class.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "ClassScale_Gaussian", ".", "apply", "(", "out", ",", "mask", ",", "targets", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "out", "+", "self", ".", "shortcut", "(", "x", ")", "if", "self", ".", "stride", "==", "1", "else", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2_class.__init__": [[147, 159], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenet_v2.MobileNetV2_class._make_layers", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ParameterList", "torch.ParameterList", "torch.ParameterList", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "len"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "layer_cfg", "=", "None", ")", ":", "\n", "        ", "super", "(", "MobileNetV2_class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# NOTE: change conv1 stride 2 -> 1 for CIFAR10", "\n", "mask_cfg", "=", "[", "32", ",", "96", ",", "144", ",", "144", ",", "192", ",", "192", ",", "192", ",", "384", ",", "384", ",", "384", ",", "384", ",", "576", ",", "576", ",", "576", ",", "960", ",", "960", ",", "960", "]", "\n", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "320", ",", "1280", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "1280", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1280", ",", "num_classes", ")", "\n", "self", ".", "mask", "=", "nn", ".", "ParameterList", "(", "[", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "num_classes", ",", "mask_cfg", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "mask_cfg", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2_class._make_layers": [[160, 166], ["enumerate", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "mobilenet_v2.Block_class"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", ",", "(", "expansion", ",", "out_planes", ",", "num_blocks", ",", "stride", ")", "in", "enumerate", "(", "self", ".", "cfg", ")", ":", "\n", "            ", "layers", ".", "append", "(", "Block_class", "(", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2_class.forward": [[167, 180], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "block.view", "mobilenet_v2.MobileNetV2_class.linear", "mobilenet_v2.MobileNetV2_class.bn1", "block", "mobilenet_v2.MobileNetV2_class.bn2", "block.size", "mobilenet_v2.MobileNetV2_class.conv1", "mobilenet_v2.MobileNetV2_class.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "targets", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "#   out = self.layers(out)", "\n", "index", "=", "0", "\n", "for", "block", "in", "self", ".", "layers", ":", "\n", "            ", "out", "=", "block", "(", "out", ",", "self", ".", "mask", "[", "index", "]", ",", "targets", ")", "\n", "index", "+=", "1", "\n", "", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "# NOTE: change pooling kernel_size 7 -> 4 for CIFAR10", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", ",", "self", ".", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.Block.__init__": [[185, 203], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ",", "planes", "=", "None", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "if", "planes", "==", "None", ":", "\n", "            ", "planes", "=", "expansion", "*", "in_planes", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "planes", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "==", "1", "and", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.Block.forward": [[205, 211], ["torch.relu6", "torch.relu6", "torch.relu6", "torch.relu6", "torch.relu6", "torch.relu6", "mobilenet_v2.Block.bn3", "mobilenet_v2.Block.bn1", "mobilenet_v2.Block.bn2", "mobilenet_v2.Block.conv3", "mobilenet_v2.Block.conv1", "mobilenet_v2.Block.conv2", "mobilenet_v2.Block.shortcut"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu6", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu6", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "out", "+", "self", ".", "shortcut", "(", "x", ")", "if", "self", ".", "stride", "==", "1", "else", "out", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2.__init__": [[236, 249], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenet_v2.MobileNetV2._make_layers", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers"], ["def", "__init__", "(", "self", ",", "wm", "=", "1", ",", "num_classes", "=", "10", ",", "layer_cfg", "=", "None", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# NOTE: change conv1 stride 2 -> 1 for CIFAR10", "\n", "self", ".", "wm", "=", "wm", "\n", "if", "layer_cfg", "==", "None", ":", "\n", "            ", "layer_cfg", "=", "[", "32", ",", "96", ",", "144", ",", "144", ",", "192", ",", "192", ",", "192", ",", "384", ",", "384", ",", "384", ",", "384", ",", "576", ",", "576", ",", "576", ",", "960", ",", "960", ",", "960", ",", "1280", "]", "\n", "", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "int", "(", "32", "*", "self", ".", "wm", ")", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "32", "*", "self", ".", "wm", ")", ")", "\n", "self", ".", "layers", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "int", "(", "32", "*", "self", ".", "wm", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "int", "(", "320", "*", "self", ".", "wm", ")", ",", "int", "(", "layer_cfg", "[", "-", "1", "]", "*", "self", ".", "wm", ")", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "layer_cfg", "[", "-", "1", "]", "*", "self", ".", "wm", ")", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "int", "(", "layer_cfg", "[", "-", "1", "]", "*", "self", ".", "wm", ")", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2._make_layers": [[250, 257], ["enumerate", "torch.Sequential", "torch.Sequential", "torch.Sequential", "int", "layers.append", "mobilenet_v2.Block"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", ",", "(", "expansion", ",", "out_planes", ",", "num_blocks", ",", "stride", ")", "in", "enumerate", "(", "self", ".", "cfg", ")", ":", "\n", "            ", "out_planes", "=", "int", "(", "out_planes", "*", "self", ".", "wm", ")", "\n", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "expansion", ",", "stride", ",", "self", ".", "layer_cfg", "[", "i", "]", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.MobileNetV2.forward": [[258, 268], ["torch.relu6", "torch.relu6", "torch.relu6", "mobilenet_v2.MobileNetV2.layers", "torch.relu6", "torch.relu6", "torch.relu6", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "mobilenet_v2.MobileNetV2.view", "mobilenet_v2.MobileNetV2.linear", "mobilenet_v2.MobileNetV2.bn1", "mobilenet_v2.MobileNetV2.bn2", "mobilenet_v2.MobileNetV2.size", "mobilenet_v2.MobileNetV2.conv1", "mobilenet_v2.MobileNetV2.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu6", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "inplace", "=", "True", ")", "\n", "out", "=", "self", ".", "layers", "(", "out", ")", "\n", "out", "=", "F", ".", "relu6", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ",", "inplace", "=", "True", ")", "\n", "# NOTE: change pooling kernel_size 7 -> 4 for CIFAR10", "\n", "#out = F.avg_pool2d(out, 4)", "\n", "out", "=", "F", ".", "adaptive_avg_pool2d", "(", "out", ",", "1", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.Gaussian_select": [[11, 26], ["torch.rand", "torch.rand", "torch.rand", "enumerate", "torch.mm", "torch.mm", "torch.mm", "targets.size", "mask.size"], "function", ["None"], ["def", "Gaussian_select", "(", "mask", ",", "targets", ")", ":", "\n", "    ", "'''\n    #output:  distribution:N*num_classes\n    #mask: num_classes x C\n    #guide: N*C\n    '''", "\n", "\n", "distri", "=", "torch", ".", "rand", "(", "targets", ".", "size", "(", "0", ")", ",", "mask", ".", "size", "(", "0", ")", ",", "device", "=", "mask", ".", "device", ")", "\n", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "targets", ")", ":", "\n", "        ", "distri", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "", "guide", "=", "torch", ".", "mm", "(", "distri", ",", "mask", ")", "\n", "\n", "return", "guide", ",", "distri", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.mobilenet_v2.test": [[270, 281], ["mobilenet_v2.MobileNetV2", "torch.randn", "torch.randn", "torch.randn", "MobileNetV2.", "print", "profile", "print", "print", "print", "net.size"], "function", ["None"], ["", "", "def", "test", "(", ")", ":", "\n", "    ", "import", "thop", "\n", "from", "thop", "import", "profile", "\n", "net", "=", "MobileNetV2", "(", "wm", "=", "1", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "flops", ",", "params", "=", "profile", "(", "net", ",", "inputs", "=", "(", "x", ",", ")", ")", "\n", "print", "(", "'--------------UnPrune Model--------------'", ")", "\n", "print", "(", "'Params: %.2f M '", "%", "(", "params", "/", "1000000", ")", ")", "\n", "print", "(", "'FLOPS: %.2f M '", "%", "(", "flops", "/", "1000000", ")", ")", "\n", "#test()", ""]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.forward": [[33, 53], ["x.size", "x.reshape", "x_1.transpose.transpose.transpose", "resnet.Gaussian_select", "resnet.ClassScale_Gaussian.save_for_backward", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "out.reshape.reshape.transpose", "out.reshape.reshape.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Gaussian_select"], ["@", "staticmethod", "\n", "def", "forward", "(", "self", ",", "x", ",", "mask", ",", "targets", ")", ":", "\n", "#x: N x C x h x w ", "\n", "#mask: num_classes x C", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#output: N x C x h x W", "\n", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_1", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", "\n", "x_1", "=", "x_1", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "guide", ",", "distri", "=", "Gaussian_select", "(", "mask", ",", "targets", ")", "\n", "self", ".", "save_for_backward", "(", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", ")", "\n", "guide", "=", "torch", ".", "squeeze", "(", "guide", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "out", "=", "torch", ".", "mul", "(", "x_1", ",", "guide", ")", "\n", "out", "=", "out", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ClassScale_Gaussian.backward": [[54, 92], ["guide.clone", "grad_output.data.clone", "grad.reshape().transpose.reshape().transpose.size", "grad.reshape().transpose.reshape().transpose.reshape().transpose", "grad.reshape().transpose.reshape().transpose.clone", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "grad_x.reshape.reshape.transpose", "grad_x.reshape.reshape.reshape", "x.reshape().transpose.reshape().transpose.reshape().transpose", "guide.clone", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad_guide.reshape.reshape.reshape", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "range", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.squeeze.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "grad.reshape().transpose.reshape().transpose.reshape", "x.reshape().transpose.reshape().transpose.reshape", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "x", ",", "mask", ",", "guide", ",", "distri", ",", "targets", "=", "self", ".", "saved_tensors", "\n", "#x: N x C x h x w", "\n", "#mask: num_classes x C ", "\n", "#targets: N", "\n", "#guide: N x C", "\n", "#grade_output.data: N x C x h x w", "\n", "#distri: N*num_classes", "\n", "\n", "#grade_x: N x C x h x w", "\n", "#grade_mask: num_classes x C", "\n", "\n", "guide_1", "=", "guide", ".", "clone", "(", ")", "\n", "grad", "=", "grad_output", ".", "data", ".", "clone", "(", ")", "\n", "n", ",", "c", ",", "h", ",", "w", "=", "grad", ".", "size", "(", ")", "\n", "\n", "grad", "=", "grad", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad", ".", "clone", "(", ")", "\n", "guide_1", "=", "torch", ".", "squeeze", "(", "guide_1", ".", "reshape", "(", "-", "1", ")", ")", "\n", "\n", "#grade", "\n", "grad_x", "=", "torch", ".", "mul", "(", "grad", ",", "guide_1", ")", "\n", "grad_x", "=", "grad_x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_x", "=", "grad_x", ".", "reshape", "(", "n", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "#grad_guide ", "\n", "x", "=", "x", ".", "reshape", "(", "n", "*", "c", ",", "h", "*", "w", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "grad_guide", "=", "guide", ".", "clone", "(", ")", "\n", "grad_guide", "=", "torch", ".", "sum", "(", "(", "grad", "*", "x", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "1", ")", "\n", "grad_guide", "=", "grad_guide", ".", "reshape", "(", "n", ",", "c", ")", "\n", "\n", "grad_mask", "=", "torch", ".", "zeros_like", "(", "mask", ")", "\n", "\n", "for", "i", "in", "range", "(", "grad_mask", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "grad_mask", "[", "i", "]", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "torch", ".", "unsqueeze", "(", "distri", "[", ":", ",", "i", "]", ",", "1", ")", ",", "grad_guide", ")", ",", "0", ")", "\n", "\n", "", "return", "grad_x", ",", "grad_mask", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.BasicBlock.__init__": [[95, 108], ["torch.Module.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "ori_planes", ",", "planes", ",", "honey", ",", "index", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "pr_channels", "=", "int", "(", "ori_planes", "*", "honey", "[", "index", "]", "/", "10", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "pr_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "pr_channels", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "pr_channels", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.BasicBlock.forward": [[110, 116], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.downsample", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Bottleneck_class.__init__": [[119, 133], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck_class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Bottleneck_class.forward": [[135, 144], ["torch.relu", "torch.relu", "torch.relu", "ClassScale_Gaussian.apply", "torch.relu", "torch.relu", "torch.relu", "ClassScale_Gaussian.apply", "resnet.Bottleneck_class.bn3", "resnet.Bottleneck_class.downsample", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck_class.bn1", "resnet.Bottleneck_class.bn2", "resnet.Bottleneck_class.conv3", "resnet.Bottleneck_class.conv1", "resnet.Bottleneck_class.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "mask_0", ",", "mask_1", ",", "mask_2", ",", "targets", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "ClassScale_Gaussian", ".", "apply", "(", "out", ",", "mask_0", ",", "targets", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "ClassScale_Gaussian", ".", "apply", "(", "out", ",", "mask_1", ",", "targets", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet_class.__init__": [[146, 176], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet_class._make_layers", "resnet.ResNet_class._make_layers", "resnet.ResNet_class._make_layers", "resnet.ResNet_class._make_layers", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ParameterList", "torch.ParameterList", "torch.ParameterList", "resnet.ResNet_class.modules", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "isinstance", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "len"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "ResNet_class", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "num_blocks", "=", "num_blocks", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layers", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layers", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layers", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layers", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "7", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "mask_cfg", "=", "[", "64", ",", "64", ",", "256", ",", "64", ",", "64", ",", "256", ",", "64", ",", "64", ",", "256", ",", "\n", "128", ",", "128", ",", "512", ",", "128", ",", "128", ",", "512", ",", "128", ",", "128", ",", "512", ",", "128", ",", "128", ",", "512", ",", "\n", "256", ",", "256", ",", "1024", ",", "256", ",", "256", ",", "1024", ",", "256", ",", "256", ",", "1024", ",", "256", ",", "256", ",", "1024", ",", "256", ",", "256", ",", "1024", ",", "256", ",", "256", ",", "1024", ",", "\n", "512", ",", "512", ",", "2048", ",", "512", ",", "512", ",", "2048", ",", "512", ",", "512", ",", "2048", "]", "\n", "\n", "self", ".", "mask", "=", "nn", ".", "ParameterList", "(", "[", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "num_classes", ",", "mask_cfg", "[", "i", "]", ")", ")", "for", "i", "in", "range", "(", "len", "(", "mask_cfg", ")", ")", "]", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet_class._make_layers": [[178, 185], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layers", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet_class.forward": [[186, 206], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet_class.maxpool", "resnet.ResNet_class.avgpool", "feature.view", "resnet.ResNet_class.fc", "resnet.ResNet_class.bn1", "feature", "feature", "feature", "feature", "feature.size", "resnet.ResNet_class.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "targets", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "index", "=", "0", "\n", "for", "feature", "in", "self", ".", "layer1", ":", "\n", "            ", "out", "=", "feature", "(", "out", ",", "self", ".", "mask", "[", "index", "]", ",", "self", ".", "mask", "[", "index", "+", "1", "]", ",", "self", ".", "mask", "[", "index", "+", "2", "]", ",", "targets", ")", "\n", "index", "+=", "3", "\n", "", "for", "feature", "in", "self", ".", "layer2", ":", "\n", "            ", "out", "=", "feature", "(", "out", ",", "self", ".", "mask", "[", "index", "]", ",", "self", ".", "mask", "[", "index", "+", "1", "]", ",", "self", ".", "mask", "[", "index", "+", "2", "]", ",", "targets", ")", "\n", "index", "+=", "3", "\n", "", "for", "feature", "in", "self", ".", "layer3", ":", "\n", "            ", "out", "=", "feature", "(", "out", ",", "self", ".", "mask", "[", "index", "]", ",", "self", ".", "mask", "[", "index", "+", "1", "]", ",", "self", ".", "mask", "[", "index", "+", "2", "]", ",", "targets", ")", "\n", "index", "+=", "3", "\n", "", "for", "feature", "in", "self", ".", "layer4", ":", "\n", "            ", "out", "=", "feature", "(", "out", ",", "self", ".", "mask", "[", "index", "]", ",", "self", ".", "mask", "[", "index", "+", "1", "]", ",", "self", ".", "mask", "[", "index", "+", "2", "]", ",", "targets", ")", "\n", "index", "+=", "3", "\n", "", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc", "(", "out", ")", "\n", "return", "out", ",", "self", ".", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Bottleneck.__init__": [[210, 224], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "pr_channels_1", ",", "pr_channels_2", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "pr_channels_1", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "pr_channels_1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "pr_channels_1", ",", "pr_channels_2", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "pr_channels_2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "pr_channels_2", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Bottleneck.forward": [[226, 233], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.downsample", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "downsample", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet.__init__": [[235, 259], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layers", "resnet.ResNet._make_layers", "resnet.ResNet._make_layers", "resnet.ResNet._make_layers", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers", "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "block_cfg", ",", "layer_cfg", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "layer_cfg", "=", "layer_cfg", "\n", "self", ".", "current_conv", "=", "0", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layers", "(", "block", ",", "block_cfg", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layers", "(", "block", ",", "block_cfg", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layers", "(", "block", ",", "block_cfg", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layers", "(", "block", ",", "block_cfg", "[", "3", "]", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "7", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "block_cfg", "[", "3", "]", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet._make_layers": [[260, 269], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layers", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "\n", "self", ".", "layer_cfg", "[", "self", ".", "current_conv", "]", ",", "self", ".", "layer_cfg", "[", "self", ".", "current_conv", "+", "1", "]", ",", "stride", ")", ")", "\n", "self", ".", "current_conv", "+=", "2", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet.forward": [[270, 281], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.fc", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "maxpool", "(", "out", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "fc", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.Gaussian_select": [[14, 28], ["torch.rand", "torch.rand", "torch.rand", "enumerate", "torch.mm", "torch.mm", "torch.mm", "targets.size", "mask.size"], "function", ["None"], ["def", "Gaussian_select", "(", "mask", ",", "targets", ")", ":", "\n", "    ", "'''\n    #output:  distribution:N*num_classes\n    #mask: num_classes x C\n    #guide: N*C\n    '''", "\n", "distri", "=", "torch", ".", "rand", "(", "targets", ".", "size", "(", "0", ")", ",", "mask", ".", "size", "(", "0", ")", ",", "device", "=", "mask", ".", "device", ")", "\n", "\n", "for", "i", ",", "j", "in", "enumerate", "(", "targets", ")", ":", "\n", "        ", "distri", "[", "i", "]", "[", "j", "]", "=", "1", "\n", "\n", "", "guide", "=", "torch", ".", "mm", "(", "distri", ",", "mask", ")", "\n", "\n", "return", "guide", ",", "distri", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet": [[282, 300], ["resnet.ResNet", "resnet.ResNet", "resnet.ResNet", "resnet.ResNet", "resnet.ResNet"], "function", ["None"], ["", "", "def", "resnet", "(", "cfg", ",", "block_cfg", "=", "None", ",", "layer_cfg", "=", "None", ",", "num_classes", "=", "1000", ")", ":", "\n", "    ", "if", "block_cfg", "==", "None", ":", "\n", "        ", "block_cfg", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "", "if", "layer_cfg", "==", "None", ":", "\n", "        ", "layer_cfg", "=", "[", "64", ",", "64", ",", "64", ",", "64", ",", "64", ",", "64", ",", "\n", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "\n", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "\n", "512", ",", "512", ",", "512", ",", "512", ",", "512", ",", "512", "]", "\n", "", "if", "cfg", "==", "'resnet18'", ":", "\n", "        ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "cfg", "==", "'resnet34'", ":", "\n", "        ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "cfg", "==", "'resnet50'", ":", "\n", "        ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "cfg", "==", "'resnet101'", ":", "\n", "        ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "num_classes", ")", "\n", "", "elif", "cfg", "==", "'resnet152'", ":", "\n", "        ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.resnet_class": [[301, 304], ["resnet.ResNet_class"], "function", ["None"], ["", "", "def", "resnet_class", "(", "cfg", ",", "num_classes", "=", "1000", ")", ":", "\n", "    ", "if", "cfg", "==", "'resnet50'", ":", "\n", "        ", "return", "ResNet_class", "(", "Bottleneck_class", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", "=", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet18": [[305, 307], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet34": [[308, 310], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet50": [[311, 320], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", ")", ":", "\n", "    ", "if", "block_cfg", "==", "None", ":", "\n", "        ", "block_cfg", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "", "if", "layer_cfg", "==", "None", ":", "\n", "        ", "layer_cfg", "=", "[", "64", ",", "64", ",", "64", ",", "64", ",", "64", ",", "64", ",", "\n", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "128", ",", "\n", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "256", ",", "\n", "512", ",", "512", ",", "512", ",", "512", ",", "512", ",", "512", "]", "\n", "", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "block_cfg", "=", "block_cfg", ",", "layer_cfg", "=", "layer_cfg", ",", "num_classes", "=", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet101": [[321, 323], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.model.resnet.ResNet152": [[324, 326], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.data.imagenet.Data.__init__": [[7, 52], ["os.path.join", "os.path.join", "torchvision.Normalize", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Resize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.CenterCrop", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["import", "os", "\n", "import", "time", "\n", "import", "math", "\n", "from", "data", "import", "imagenet", "\n", "from", "importlib", "import", "import_module", "\n", "from", "model", ".", "resnet", "import", "Bottleneck_class", "\n", "\n", "from", "utils", ".", "common", "import", "*", "\n", "\n", "import", "thop", "\n", "from", "thop", "import", "profile", "\n", "\n", "device", "=", "torch", ".", "device", "(", "f\"cuda:{args.gpus[0]}\"", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", "\n", "checkpoint", "=", "utils", ".", "checkpoint", "(", "args", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "logger", "=", "utils", ".", "get_logger", "(", "os", ".", "path", ".", "join", "(", "args", ".", "job_dir", ",", "'logger'", "+", "now", "+", "'.log'", ")", ")", "\n", "if", "args", ".", "criterion", "==", "'Softmax'", ":", "\n", "    ", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion", "=", "criterion", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "    ", "raise", "ValueError", "(", "'invalid criterion : {:}'", ".", "format", "(", "args", ".", "criterion", ")", ")", "\n", "\n", "# Data", "\n", "", "print", "(", "'==> Preparing data..'", ")", "\n", "data_tmp", "=", "imagenet", ".", "Data", "(", "args", ")", "\n", "train_loader", "=", "data_tmp", ".", "trainLoader", "\n", "val_loader", "=", "data_tmp", ".", "testLoader", "\n", "\n", "# Architecture", "\n", "if", "args", ".", "arch", "==", "'resnet'", ":", "\n", "    ", "origin_model", "=", "import_module", "(", "f'model.{args.arch}'", ")", ".", "resnet", "(", "args", ".", "cfg", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "    ", "raise", "(", "'arch not exist!'", ")", "\n", "\n", "# Calculate FLOPs of origin model", "\n", "", "input", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "224", ",", "224", ")", ".", "to", "(", "device", ")", "\n", "oriflops", ",", "oriparams", "=", "profile", "(", "origin_model", ",", "inputs", "=", "(", "input", ",", ")", ")", "\n", "\n", "# Based on the trained class-wise mask, perform global voting to obtain pruned model", "\n", "def", "build_resnet_pruned_model", "(", "origin_model", ")", ":", "\n", "\n", "    ", "pruning_rate_now", "=", "0", "\n", "channel_prune_rate", "=", "0.9", "\n", "num_mask_cfg", "=", "{", "'resnet50'", ":", "48", "}", "\n", "\n", "while", "pruning_rate_now", "<", "args", ".", "pruning_rate", ":", "\n"]], "home.repos.pwc.inspect_result.zyxxmu_White-Box.data.cifar10.Data.__init__": [[6, 32], ["torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "pin_memory", "=", "True", "\n", "\n", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "\n", "trainset", "=", "CIFAR10", "(", "root", "=", "args", ".", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "\n", "self", ".", "trainLoader", "=", "DataLoader", "(", "\n", "trainset", ",", "batch_size", "=", "args", ".", "train_batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "2", ",", "pin_memory", "=", "pin_memory", "\n", ")", "\n", "\n", "testset", "=", "CIFAR10", "(", "root", "=", "args", ".", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "self", ".", "testLoader", "=", "DataLoader", "(", "\n", "testset", ",", "batch_size", "=", "args", ".", "eval_batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "2", ",", "pin_memory", "=", "pin_memory", ")", "", "", "", ""]]}