{"home.repos.pwc.inspect_result.gongsixue_DebFace.None.config.parse_args": [[4, 14], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "imp.load_source"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.config.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config_file'", ",", "\n", "type", "=", "str", ",", "default", "=", "'./args.py'", ",", "\n", "help", "=", "\"The path to the configuration file\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "config", "=", "imp", ".", "load_source", "(", "'config'", ",", "args", ".", "config_file", ")", "\n", "\n", "return", "config", ",", "args", ".", "config_file", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_RFW.Trainer.__init__": [[19, 115], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "plugins.Logger", "train_RFW.Trainer.log_loss.register", "plugins.Monitor", "train_RFW.Trainer.monitor.register", "plugins.Visualizer", "train_RFW.Trainer.visualizer.register", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "getattr", "model[].parameters", "getattr", "torch.ModuleList.parameters", "train_RFW.Trainer.labels.cuda", "train_RFW.Trainer.inputs.cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "getattr"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "model", ",", "criterion", ",", "evaluation", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "evaluation", "=", "evaluation", "\n", "\n", "self", ".", "nepochs", "=", "args", ".", "nepochs", "\n", "\n", "self", ".", "lr", "=", "args", ".", "learning_rate", "\n", "self", ".", "optim_method", "=", "args", ".", "optim_method", "\n", "self", ".", "optim_options", "=", "args", ".", "optim_options", "\n", "self", ".", "scheduler_method", "=", "args", ".", "scheduler_method", "\n", "\n", "self", ".", "optimizer_cnn", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "module_list", "=", "nn", ".", "ModuleList", "(", "[", "criterion", "[", "'id'", "]", ",", "\n", "criterion", "[", "'race'", "]", ",", "model", "[", "'discrim'", "]", "]", ")", "\n", "self", ".", "optimizer_cls", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "module_list", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "if", "self", ".", "scheduler_method", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "scheduler_method", "!=", "'Customer'", ":", "\n", "                ", "self", ".", "scheduler", "=", "getattr", "(", "optim", ".", "lr_scheduler", ",", "self", ".", "scheduler_method", ")", "(", "\n", "self", ".", "optimizer_cnn", ",", "**", "args", ".", "scheduler_options", ")", "\n", "\n", "# for classification", "\n", "", "", "self", ".", "labels", "=", "torch", ".", "zeros", "(", "args", ".", "batch_size", ")", ".", "long", "(", ")", "\n", "self", ".", "inputs", "=", "torch", ".", "zeros", "(", "\n", "args", ".", "batch_size", ",", "\n", "args", ".", "resolution_high", ",", "\n", "args", ".", "resolution_wide", "\n", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "self", ".", "labels", "=", "self", ".", "labels", ".", "cuda", "(", ")", "\n", "self", ".", "inputs", "=", "self", ".", "inputs", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "inputs", "=", "Variable", "(", "self", ".", "inputs", ")", "\n", "self", ".", "labels", "=", "Variable", "(", "self", ".", "labels", ")", "\n", "\n", "# logging training", "\n", "self", ".", "log_loss", "=", "plugins", ".", "Logger", "(", "\n", "args", ".", "logs_dir", ",", "\n", "'TrainLogger.txt'", ",", "\n", "args", ".", "save_results", "\n", ")", "\n", "params_loss", "=", "[", "'LearningRate'", ",", "'Loss_cls_demog'", ",", "'Loss_cls_id'", ",", "'Loss_conf_demog'", ",", "'Loss_conf_id'", ",", "'Loss_cls_mi'", ",", "'Loss_conf_mi'", "]", "\n", "self", ".", "log_loss", ".", "register", "(", "params_loss", ")", "\n", "\n", "# monitor training", "\n", "self", ".", "monitor", "=", "plugins", ".", "Monitor", "(", ")", "\n", "self", ".", "params_monitor", "=", "{", "\n", "'LearningRate'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_demog'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_id'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_mi'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_demog'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_id'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_mi'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "}", "\n", "self", ".", "monitor", ".", "register", "(", "self", ".", "params_monitor", ")", "\n", "\n", "# visualize training", "\n", "self", ".", "visualizer", "=", "plugins", ".", "Visualizer", "(", "args", ".", "port", ",", "args", ".", "env", ",", "'Train'", ")", "\n", "params_visualizer", "=", "{", "\n", "'LearningRate'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'learning_rate'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_demog'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_id'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_mi'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_demog'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_id'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_mi'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Train_Image'", ":", "{", "'dtype'", ":", "'image'", ",", "'vtype'", ":", "'image'", ",", "\n", "'win'", ":", "'train_image'", "}", ",", "\n", "'Train_Images'", ":", "{", "'dtype'", ":", "'images'", ",", "'vtype'", ":", "'images'", ",", "\n", "'win'", ":", "'train_images'", "}", ",", "\n", "}", "\n", "self", ".", "visualizer", ".", "register", "(", "params_visualizer", ")", "\n", "\n", "# display training progress", "\n", "self", ".", "print_formatter", "=", "'Train [%d/%d][%d/%d] '", "\n", "for", "item", "in", "params_loss", ":", "\n", "            ", "self", ".", "print_formatter", "+=", "item", "+", "\" %.4f \"", "\n", "# self.print_formatter += \"Scale %.4f \"", "\n", "\n", "", "self", ".", "losses", "=", "{", "}", "\n", "self", ".", "binage", "=", "torch", ".", "Tensor", "(", "[", "10", ",", "22.5", ",", "27.5", ",", "32.5", ",", "37.5", ",", "42.5", ",", "47.5", ",", "55", ",", "75", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_RFW.Trainer.model_train": [[116, 119], ["train_RFW.Trainer.model[].train", "train_RFW.Trainer.model[].train"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train"], ["", "def", "model_train", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "[", "'feat'", "]", ".", "train", "(", ")", "\n", "self", ".", "model", "[", "'discrim'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_RFW.Trainer.train": [[120, 265], ["train_RFW.Trainer.monitor.reset", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "train_RFW.Trainer.model_train", "time.time", "enumerate", "train_RFW.Trainer.monitor.getvalues", "train_RFW.Trainer.log_loss.update", "train_RFW.Trainer.visualizer.update", "inputs.size", "list", "train_RFW.Trainer.inputs.data.resize_().copy_", "train_RFW.Trainer.labels.data.resize_().copy_", "train_RFW.Trainer.labels.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "list", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "train_RFW.Trainer.optimizer_cls.zero_grad", "train_RFW.Trainer.optimizer_cnn.zero_grad", "loss1.backward", "train_RFW.Trainer.optimizer_cls.step", "loss2.backward", "train_RFW.Trainer.optimizer_cnn.step", "loss_cls_demog.item", "loss_cls_id.item", "loss_conf_demog.item", "loss_conf_id.item", "loss_cls_mi.item", "loss_conf_mi.item", "train_RFW.Trainer.monitor.update", "print", "train_RFW.Trainer.monitor.getvalues", "time.time", "range", "racelabels.cuda.cuda.cuda", "random.sample", "labels_discrim.cuda.cuda.cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "conflabels_id.cuda.cuda.cuda", "conflabels_race.cuda.cuda.cuda", "conflabels_mi.cuda.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "checkpoints.save", "train_RFW.Trainer.scheduler.step", "train_RFW.Trainer.monitor.getvalues", "train_RFW.Trainer.inputs.data.resize_", "train_RFW.Trainer.labels.data.resize_", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "float", "int", "tuple", "train_RFW.Trainer.scheduler.step", "train_RFW.Trainer.monitor.getvalues", "train_RFW.Trainer.monitor.getvalues", "inputs.size", "idlabels.size", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "getattr", "train_RFW.Trainer.model[].parameters", "getattr", "torch.ModuleList.parameters", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.reset", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.model_train", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.save", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues"], ["", "def", "train", "(", "self", ",", "epoch", ",", "dataloader", ",", "checkpoints", ",", "acc_best", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'train'", "]", "\n", "self", ".", "monitor", ".", "reset", "(", ")", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# switch to train mode", "\n", "self", ".", "model_train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "stored_models", "=", "{", "}", "\n", "\n", "for", "i", ",", "(", "inputs", ",", "idlabels", ",", "racelabels", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "# keeps track of data loading time", "\n", "            ", "data_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "\n", "############################", "\n", "# Update network", "\n", "############################", "\n", "\n", "batch_size", "=", "inputs", ".", "size", "(", "0", ")", "\n", "batch_idx", "=", "list", "(", "range", "(", "batch_size", ")", ")", "\n", "\n", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "self", ".", "labels", ".", "data", ".", "resize_", "(", "idlabels", ".", "size", "(", ")", ")", ".", "copy_", "(", "idlabels", ")", "\n", "self", ".", "labels", "=", "self", ".", "labels", ".", "view", "(", "-", "1", ")", "\n", "\n", "racelabels", "=", "racelabels", "[", "1", "]", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "racelabels", "=", "racelabels", ".", "cuda", "(", ")", "\n", "", "racelabels", "=", "Variable", "(", "racelabels", ")", "\n", "\n", "outputs", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "\n", "########### adversarial training for discriminator to reduce MI #################", "\n", "permute_idx", "=", "{", "}", "\n", "keys", "=", "list", "(", "self", ".", "criterion", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "permute_idx", "[", "key", "]", "=", "random", ".", "sample", "(", "batch_idx", ",", "batch_size", ")", "\n", "", "permute_outputs", "=", "torch", ".", "cat", "(", "(", "outputs", "[", "permute_idx", "[", "'race'", "]", ",", "0", ":", "512", "]", ",", "\n", "outputs", "[", "permute_idx", "[", "'id'", "]", ",", "1", "*", "512", ":", "2", "*", "512", "]", ")", ",", "dim", "=", "1", ")", "\n", "inputs_discrim", "=", "torch", ".", "cat", "(", "(", "outputs", ",", "permute_outputs", ")", ",", "dim", "=", "0", ")", "\n", "outputs_discrim", "=", "self", ".", "model", "[", "'discrim'", "]", "(", "inputs_discrim", ")", "\n", "\n", "labels_discrim", "=", "torch", ".", "cat", "(", "(", "torch", ".", "ones", "(", "batch_size", ")", ",", "torch", ".", "zeros", "(", "batch_size", ")", ")", ",", "dim", "=", "0", ")", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "labels_discrim", "=", "labels_discrim", ".", "cuda", "(", ")", "\n", "", "labels_discrim", "=", "Variable", "(", "labels_discrim", ")", "\n", "########### adversarial training for discriminator to reduce MI #################", "\n", "\n", "loss_cls_demog", "=", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "0", ":", "512", "]", ",", "racelabels", ")", "[", "1", "]", "\n", "loss_cls_id", "=", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "1", "*", "512", ":", "2", "*", "512", "]", ",", "self", ".", "labels", ")", "[", "1", "]", "\n", "loss_cls_mi", "=", "self", ".", "criterion", "[", "'mi'", "]", "(", "outputs_discrim", ",", "labels_discrim", ")", "\n", "loss1", "=", "loss_cls_demog", "+", "loss_cls_id", "+", "loss_cls_mi", "\n", "\n", "conflabels_id", "=", "1.0", "/", "float", "(", "self", ".", "args", ".", "nclasses", ")", "*", "torch", ".", "ones", "(", "batch_size", ",", "int", "(", "self", ".", "args", ".", "nclasses", ")", ")", "\n", "conflabels_race", "=", "0.25", "*", "torch", ".", "ones", "(", "batch_size", ",", "4", ")", "\n", "conflabels_mi", "=", "0.5", "*", "torch", ".", "ones", "(", "batch_size", ",", "2", ")", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "conflabels_id", "=", "conflabels_id", ".", "cuda", "(", ")", "\n", "conflabels_race", "=", "conflabels_race", ".", "cuda", "(", ")", "\n", "conflabels_mi", "=", "conflabels_mi", ".", "cuda", "(", ")", "\n", "", "conflabels_id", "=", "Variable", "(", "conflabels_id", ")", "\n", "conflabels_race", "=", "Variable", "(", "conflabels_race", ")", "\n", "conflabels_mi", "=", "Variable", "(", "conflabels_mi", ")", "\n", "\n", "loss_conf_demog", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "0", "*", "512", ":", "1", "*", "512", "]", ",", "self", ".", "labels", ")", "[", "0", "]", ",", "# race confusion", "\n", "conflabels_id", ")", "\n", "\n", "loss_conf_id", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "1", "*", "512", ":", "2", "*", "512", "]", ",", "racelabels", ")", "[", "0", "]", ",", "\n", "conflabels_race", ")", "\n", "loss_conf_mi", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "outputs_discrim", ",", "torch", ".", "cat", "(", "(", "conflabels_mi", ",", "\n", "conflabels_mi", ")", ",", "dim", "=", "0", ")", ")", "\n", "loss2", "=", "loss_conf_demog", "+", "loss_conf_id", "+", "loss_conf_mi", "\n", "\n", "self", ".", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_cnn", ".", "zero_grad", "(", ")", "\n", "\n", "loss1", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "self", ".", "optimizer_cls", ".", "step", "(", ")", "\n", "\n", "loss2", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_cnn", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'Loss_cls_demog'", "]", "=", "loss_cls_demog", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_cls_id'", "]", "=", "loss_cls_id", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_demog'", "]", "=", "loss_conf_demog", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_id'", "]", "=", "loss_conf_id", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_cls_mi'", "]", "=", "loss_cls_mi", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_mi'", "]", "=", "loss_conf_mi", ".", "item", "(", ")", "\n", "for", "param_group", "in", "self", ".", "optimizer_cnn", ".", "param_groups", ":", "\n", "                ", "self", ".", "cur_lr", "=", "param_group", "[", "'lr'", "]", "\n", "", "self", ".", "losses", "[", "'LearningRate'", "]", "=", "self", ".", "cur_lr", "\n", "self", ".", "monitor", ".", "update", "(", "self", ".", "losses", ",", "batch_size", ")", "\n", "\n", "# print batch progress", "\n", "print", "(", "self", ".", "print_formatter", "%", "tuple", "(", "\n", "[", "epoch", "+", "1", ",", "self", ".", "nepochs", ",", "i", "+", "1", ",", "len", "(", "dataloader", ")", "]", "+", "\n", "[", "self", ".", "losses", "[", "key", "]", "for", "key", "in", "self", ".", "params_monitor", "]", ")", ")", "\n", "\n", "if", "i", "%", "10000", "==", "0", ":", "\n", "                ", "stored_models", "[", "'model'", "]", "=", "self", ".", "model", "\n", "stored_models", "[", "'loss'", "]", "=", "self", ".", "criterion", "\n", "checkpoints", ".", "save", "(", "acc_best", ",", "stored_models", ",", "epoch", ",", "i", ",", "True", ")", "\n", "\n", "# update the log file", "\n", "", "", "loss", "=", "self", ".", "monitor", ".", "getvalues", "(", ")", "\n", "self", ".", "log_loss", ".", "update", "(", "loss", ")", "\n", "\n", "# print epoch progress", "\n", "# print(self.print_formatter % tuple(", "\n", "#     [epoch + 1, self.nepochs, i+1, len(dataloader)] +", "\n", "#     [loss[key] for key in self.params_monitor]))", "\n", "\n", "# update the visualization", "\n", "loss", "[", "'Train_Image'", "]", "=", "inputs", "[", "0", "]", "\n", "loss", "[", "'Train_Images'", "]", "=", "inputs", "\n", "self", ".", "visualizer", ".", "update", "(", "loss", ")", "\n", "\n", "# update the learning rate", "\n", "if", "self", ".", "scheduler_method", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "scheduler_method", "==", "'ReduceLROnPlateau'", ":", "\n", "                ", "self", ".", "scheduler", ".", "step", "(", "loss", "[", "'Loss_cls_id'", "]", ")", "\n", "", "elif", "self", ".", "scheduler_method", "==", "'Customer'", ":", "\n", "                ", "if", "epoch", "+", "1", "in", "self", ".", "args", ".", "lr_schedule", ":", "\n", "                    ", "self", ".", "lr", "*=", "0.1", "\n", "self", ".", "optimizer_cnn", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "self", ".", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "module_list", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "criterion", "[", "'id'", "]", ",", "self", ".", "criterion", "[", "'race'", "]", ",", "\n", "self", ".", "model", "[", "'discrim'", "]", "]", ")", "\n", "self", ".", "optimizer_cls", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "module_list", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "total_loss", "=", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_cls_demog'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_cls_id'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_conf_demog'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_conf_id'", ")", "\n", "return", "total_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.bad_grad_viz.iter_graph": [[6, 18], ["set", "queue.pop", "set.add", "callback", "queue.append"], "function", ["None"], ["def", "iter_graph", "(", "root", ",", "callback", ")", ":", "\n", "    ", "queue", "=", "[", "root", "]", "\n", "seen", "=", "set", "(", ")", "\n", "while", "queue", ":", "\n", "        ", "fn", "=", "queue", ".", "pop", "(", ")", "\n", "if", "fn", "in", "seen", ":", "\n", "            ", "continue", "\n", "", "seen", ".", "add", "(", "fn", ")", "\n", "for", "next_fn", ",", "_", "in", "fn", ".", "next_functions", ":", "\n", "            ", "if", "next_fn", "is", "not", "None", ":", "\n", "                ", "queue", ".", "append", "(", "next_fn", ")", "\n", "", "", "callback", "(", "fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.bad_grad_viz.register_hooks": [[20, 66], ["bad_grad_viz.iter_graph", "fn.register_hook", "dict", "graphviz.Digraph", "bad_grad_viz.iter_graph", "grad_output.ne().any", "grad_output.gt().any", "hasattr", "dict", "graphviz.Digraph.node", "any", "graphviz.Digraph.node", "grad_output.ne", "grad_output.gt", "size_to_str"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.bad_grad_viz.iter_graph", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.bad_grad_viz.iter_graph"], ["", "", "def", "register_hooks", "(", "var", ")", ":", "\n", "    ", "fn_dict", "=", "{", "}", "\n", "\n", "def", "hook_cb", "(", "fn", ")", ":", "\n", "        ", "def", "register_grad", "(", "grad_input", ",", "grad_output", ")", ":", "\n", "            ", "fn_dict", "[", "fn", "]", "=", "grad_input", "\n", "", "fn", ".", "register_hook", "(", "register_grad", ")", "\n", "", "iter_graph", "(", "var", ".", "grad_fn", ",", "hook_cb", ")", "\n", "\n", "def", "is_bad_grad", "(", "grad_output", ")", ":", "\n", "        ", "grad_output", "=", "grad_output", ".", "data", "\n", "return", "grad_output", ".", "ne", "(", "grad_output", ")", ".", "any", "(", ")", "or", "grad_output", ".", "gt", "(", "1e6", ")", ".", "any", "(", ")", "\n", "\n", "", "def", "make_dot", "(", ")", ":", "\n", "        ", "node_attr", "=", "dict", "(", "style", "=", "'filled'", ",", "\n", "shape", "=", "'box'", ",", "\n", "align", "=", "'left'", ",", "\n", "fontsize", "=", "'12'", ",", "\n", "ranksep", "=", "'0.1'", ",", "\n", "height", "=", "'0.2'", ")", "\n", "dot", "=", "Digraph", "(", "node_attr", "=", "node_attr", ",", "graph_attr", "=", "dict", "(", "size", "=", "\"12,12\"", ")", ")", "\n", "\n", "def", "size_to_str", "(", "size", ")", ":", "\n", "            ", "return", "'('", "+", "(", "', '", ")", ".", "join", "(", "map", "(", "str", ",", "size", ")", ")", "+", "')'", "\n", "\n", "", "def", "build_graph", "(", "fn", ")", ":", "\n", "            ", "if", "hasattr", "(", "fn", ",", "'variable'", ")", ":", "# if GradAccumulator", "\n", "                ", "u", "=", "fn", ".", "variable", "\n", "node_name", "=", "'Variable\\n '", "+", "size_to_str", "(", "u", ".", "size", "(", ")", ")", "\n", "dot", ".", "node", "(", "str", "(", "id", "(", "u", ")", ")", ",", "node_name", ",", "fillcolor", "=", "'lightblue'", ")", "\n", "", "else", ":", "\n", "                ", "assert", "fn", "in", "fn_dict", ",", "fn", "\n", "fillcolor", "=", "'white'", "\n", "if", "any", "(", "is_bad_grad", "(", "gi", ")", "for", "gi", "in", "fn_dict", "[", "fn", "]", ")", ":", "\n", "                    ", "fillcolor", "=", "'red'", "\n", "", "dot", ".", "node", "(", "str", "(", "id", "(", "fn", ")", ")", ",", "str", "(", "type", "(", "fn", ")", ".", "__name__", ")", ",", "\n", "fillcolor", "=", "fillcolor", ")", "\n", "", "for", "next_fn", ",", "_", "in", "fn", ".", "next_functions", ":", "\n", "                ", "if", "next_fn", "is", "not", "None", ":", "\n", "                    ", "next_id", "=", "id", "(", "getattr", "(", "next_fn", ",", "'variable'", ",", "next_fn", ")", ")", "\n", "dot", ".", "edge", "(", "str", "(", "next_id", ")", ",", "str", "(", "id", "(", "fn", ")", ")", ")", "\n", "", "", "", "iter_graph", "(", "var", ".", "grad_fn", ",", "build_graph", ")", "\n", "\n", "return", "dot", "\n", "\n", "", "return", "make_dot", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.main.main": [[28, 92], ["random.seed", "torch.manual_seed", "checkpoints.Checkpoints", "model.Model", "model.Model.setup", "print", "Trainer", "Tester", "dataloader.Dataloader", "utils.saveargs", "dataloader.Dataloader.create", "Tester.extract_features", "dataloader.Dataloader.create", "Tester.test", "print", "dataloader.Dataloader.create", "range", "print", "Trainer.train", "sum", "Tester.test", "float", "checkpoints.Checkpoints.save", "p.numel", "model[].parameters"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.saveargs", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.create", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.extract_features", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.create", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.test", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.create", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.test", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.save"], ["", "def", "main", "(", ")", ":", "\n", "# parse the arguments", "\n", "    ", "random", ".", "seed", "(", "args", ".", "manual_seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "manual_seed", ")", "\n", "if", "args", ".", "save_results", ":", "\n", "        ", "utils", ".", "saveargs", "(", "args", ",", "config_file", ")", "\n", "\n", "# initialize the checkpoint class", "\n", "", "checkpoints", "=", "Checkpoints", "(", "args", ")", "\n", "\n", "# Create Model", "\n", "models", "=", "Model", "(", "args", ")", "\n", "model", ",", "model_dict", ",", "evaluation", "=", "models", ".", "setup", "(", "checkpoints", ")", "\n", "\n", "print", "(", "'Model:\\n\\t{model}\\nTotal params:\\n\\t{npar:.2f}M'", ".", "format", "(", "\n", "model", "=", "args", ".", "model_type", ",", "\n", "npar", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ")", "/", "1000000.0", ")", ")", "\n", "\n", "# The trainer handles the training loop", "\n", "trainer", "=", "Trainer", "(", "args", ",", "model", ",", "model_dict", "[", "'loss'", "]", ",", "evaluation", ")", "\n", "# The trainer handles the evaluation on validation set", "\n", "tester", "=", "Tester", "(", "args", ",", "model", ",", "model_dict", "[", "'loss'", "]", ",", "evaluation", ")", "\n", "\n", "test_freq", "=", "1", "\n", "\n", "dataloader", "=", "Dataloader", "(", "args", ")", "\n", "\n", "if", "args", ".", "extract_feat", ":", "\n", "        ", "loaders", "=", "dataloader", ".", "create", "(", "flag", "=", "'Test'", ")", "\n", "tester", ".", "extract_features", "(", "loaders", ")", "\n", "# tester.extract_features_h5py(loaders, len(dataloader.dataset_test))", "\n", "", "elif", "args", ".", "just_test", ":", "\n", "        ", "loaders", "=", "dataloader", ".", "create", "(", "flag", "=", "'Test'", ")", "\n", "acc_test", "=", "tester", ".", "test", "(", "args", ".", "epoch_number", ",", "loaders", ")", "\n", "print", "(", "acc_test", ")", "\n", "", "else", ":", "\n", "\n", "        ", "loaders", "=", "dataloader", ".", "create", "(", ")", "\n", "if", "args", ".", "dataset_train", "==", "'ClassSamplesDataLoader'", ":", "\n", "            ", "loaders", "[", "'train'", "]", "=", "dataloader", ".", "dataset_train", "\n", "\n", "# start training !!!", "\n", "", "acc_best", "=", "0", "\n", "loss_best", "=", "999", "\n", "stored_models", "=", "{", "}", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "nepochs", "-", "args", ".", "epoch_number", ")", ":", "\n", "            ", "epoch", "+=", "args", ".", "epoch_number", "\n", "print", "(", "'\\nEpoch %d/%d\\n'", "%", "(", "epoch", "+", "1", ",", "args", ".", "nepochs", ")", ")", "\n", "\n", "# train for a single epoch", "\n", "# loss_train = 3.0", "\n", "loss_train", "=", "trainer", ".", "train", "(", "epoch", ",", "loaders", ",", "checkpoints", ",", "acc_best", ")", "\n", "if", "float", "(", "epoch", ")", "%", "test_freq", "==", "0", ":", "\n", "                ", "acc_test", "=", "tester", ".", "test", "(", "epoch", ",", "loaders", ")", "\n", "\n", "", "if", "loss_best", ">", "loss_train", ":", "\n", "                ", "model_best", "=", "True", "\n", "loss_best", "=", "loss_train", "\n", "acc_best", "=", "acc_test", "\n", "if", "args", ".", "save_results", ":", "\n", "                    ", "stored_models", "[", "'model'", "]", "=", "model", "\n", "stored_models", "[", "'loss'", "]", "=", "trainer", ".", "criterion", "\n", "checkpoints", ".", "save", "(", "acc_best", ",", "stored_models", ",", "epoch", ",", "'final'", ",", "model_best", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.__init__": [[21, 81], ["torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "plugins.Logger", "test_cls.Tester.log_loss.register", "plugins.Monitor", "test_cls.Tester.monitor.register", "plugins.Visualizer", "test_cls.Tester.visualizer.register", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "test_cls.Tester.labels.cuda", "test_cls.Tester.inputs.cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "model", ",", "criterion", ",", "evaluation", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "evaluation", "=", "evaluation", "\n", "\n", "self", ".", "nepochs", "=", "args", ".", "nepochs", "\n", "\n", "# for classification", "\n", "self", ".", "labels", "=", "torch", ".", "zeros", "(", "args", ".", "batch_size", ")", ".", "long", "(", ")", "\n", "self", ".", "inputs", "=", "torch", ".", "zeros", "(", "\n", "args", ".", "batch_size", ",", "\n", "args", ".", "resolution_high", ",", "\n", "args", ".", "resolution_wide", "\n", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "self", ".", "labels", "=", "self", ".", "labels", ".", "cuda", "(", ")", "\n", "self", ".", "inputs", "=", "self", ".", "inputs", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "inputs", "=", "Variable", "(", "self", ".", "inputs", ")", "\n", "self", ".", "labels", "=", "Variable", "(", "self", ".", "labels", ")", "\n", "\n", "# logging testing", "\n", "self", ".", "log_loss", "=", "plugins", ".", "Logger", "(", "\n", "args", ".", "logs_dir", ",", "\n", "'TestLogger.txt'", ",", "\n", "args", ".", "save_results", "\n", ")", "\n", "params_loss", "=", "[", "'ACC'", "]", "\n", "self", ".", "log_loss", ".", "register", "(", "params_loss", ")", "\n", "\n", "# monitor testing", "\n", "self", ".", "monitor", "=", "plugins", ".", "Monitor", "(", ")", "\n", "self", ".", "params_monitor", "=", "{", "\n", "'ACC'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "}", "\n", "self", ".", "monitor", ".", "register", "(", "self", ".", "params_monitor", ")", "\n", "\n", "# visualize testing", "\n", "self", ".", "visualizer", "=", "plugins", ".", "Visualizer", "(", "args", ".", "port", ",", "args", ".", "env", ",", "'Test'", ")", "\n", "params_visualizer", "=", "{", "\n", "'ACC'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'acc'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "1", "}", "}", ",", "\n", "# 'Test_Image': {'dtype': 'image', 'vtype': 'image',", "\n", "#                'win': 'test_image'},", "\n", "# 'Test_Images': {'dtype': 'images', 'vtype': 'images',", "\n", "#                 'win': 'test_images'},", "\n", "}", "\n", "self", ".", "visualizer", ".", "register", "(", "params_visualizer", ")", "\n", "\n", "# display training progress", "\n", "self", ".", "print_formatter", "=", "'Test [%d/%d]] '", "\n", "for", "item", "in", "[", "'ACC'", "]", ":", "\n", "            ", "self", ".", "print_formatter", "+=", "item", "+", "\" %.4f \"", "\n", "\n", "", "self", ".", "losses", "=", "{", "}", "\n", "# self.binage = torch.Tensor([10,22.5,27.5,32.5,37.5,42.5,47.5,55,75])", "\n", "# self.binage = torch.Tensor([10,25,35,45,55,75])", "\n", "self", ".", "binage", "=", "torch", ".", "Tensor", "(", "[", "19", ",", "37.5", ",", "52.5", ",", "77", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.model_eval": [[82, 84], ["test_cls.Tester.model[].eval"], "methods", ["None"], ["", "def", "model_eval", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "[", "'feat'", "]", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.test": [[85, 145], ["test_cls.Tester.monitor.reset", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "test_cls.Tester.model_eval", "time.time", "enumerate", "numpy.concatenate", "numpy.concatenate", "test_cls.Tester.evaluation", "test_cls.Tester.monitor.update", "print", "test_cls.Tester.monitor.getvalues", "test_cls.Tester.log_loss.update", "test_cls.Tester.visualizer.update", "time.time", "test_cls.Tester.inputs.data.resize_().copy_", "test_cls.Tester.labels.data.resize_().copy_", "numpy.concatenate.append", "numpy.concatenate.append", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "time.time", "time.time", "embeddings[].data.cpu().numpy", "input_labels.data.numpy", "tuple", "test_cls.Tester.inputs.data.resize_", "test_cls.Tester.labels.data.resize_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inputs.size", "input_labels.size", "embeddings[].data.cpu"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.reset", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.model_eval", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward"], ["", "def", "test", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'test'", "]", "\n", "self", ".", "monitor", ".", "reset", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# switch to eval mode", "\n", "self", ".", "model_eval", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "features", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "\n", "\n", "# extract query features", "\n", "for", "i", ",", "(", "inputs", ",", "input_labels", ",", "attrs", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "# keeps track of data loading time", "\n", "            ", "data_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "############################", "\n", "# Evaluate Network", "\n", "############################", "\n", "\n", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "self", ".", "labels", ".", "data", ".", "resize_", "(", "input_labels", ".", "size", "(", ")", ")", ".", "copy_", "(", "input_labels", ")", "\n", "\n", "embeddings", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "\n", "feat_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "\n", "features", ".", "append", "(", "embeddings", "[", ":", ",", "1", "*", "512", ":", "2", "*", "512", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels", ".", "append", "(", "input_labels", ".", "data", ".", "numpy", "(", ")", ")", "\n", "\n", "torch", ".", "sum", "(", "embeddings", ")", ".", "backward", "(", ")", "\n", "\n", "", "labels", "=", "np", ".", "concatenate", "(", "labels", ",", "axis", "=", "0", ")", "\n", "features", "=", "np", ".", "concatenate", "(", "features", ",", "axis", "=", "0", ")", "\n", "results", ",", "_", ",", "_", "=", "self", ".", "evaluation", "(", "features", ")", "\n", "\n", "self", ".", "losses", "[", "'ACC'", "]", "=", "results", "\n", "batch_size", "=", "1", "\n", "self", ".", "monitor", ".", "update", "(", "self", ".", "losses", ",", "batch_size", ")", "\n", "\n", "# print batch progress", "\n", "print", "(", "self", ".", "print_formatter", "%", "tuple", "(", "\n", "[", "epoch", "+", "1", ",", "self", ".", "nepochs", "]", "+", "\n", "[", "results", "]", ")", ")", "\n", "\n", "# update the log file", "\n", "loss", "=", "self", ".", "monitor", ".", "getvalues", "(", ")", "\n", "self", ".", "log_loss", ".", "update", "(", "loss", ")", "\n", "\n", "# update the visualization", "\n", "self", ".", "visualizer", ".", "update", "(", "loss", ")", "\n", "\n", "# np.savez('/research/prip-gongsixu/codes/biasface/results/model_analysis/result_agel20.npz',", "\n", "#     preds=preds.cpu().numpy(), labels=labels.cpu().numpy())", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.extract_features": [[146, 180], ["test_cls.Tester.model_eval", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "enumerate", "numpy.concatenate", "numpy.concatenate", "print", "os.path.dirname", "numpy.savez", "test_cls.Tester.inputs.data.resize_().copy_", "test_cls.Tester.model[].zero_grad", "numpy.concatenate.append", "numpy.concatenate.append", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "os.path.isdir", "os.makedirs", "embeddings.data.cpu().numpy", "input_labels.data.numpy", "test_cls.Tester.inputs.data.resize_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inputs.size", "embeddings.data.cpu"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.model_eval", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward"], ["", "def", "extract_features", "(", "self", ",", "dataloader", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'test'", "]", "\n", "self", ".", "model_eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# extract features", "\n", "filenames", "=", "[", "]", "\n", "features", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "i", ",", "(", "inputs", ",", "input_labels", ",", "attrs", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "\n", "self", ".", "model", "[", "'feat'", "]", ".", "zero_grad", "(", ")", "\n", "embeddings", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "\n", "###### feature concatenation ########", "\n", "# temp = torch.cat((embeddings[:,0:512], embeddings[:,2*512:3*512], ", "\n", "#     embeddings[:,3*512:4*512]), 1)", "\n", "\n", "features", ".", "append", "(", "embeddings", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels", ".", "append", "(", "input_labels", ".", "data", ".", "numpy", "(", ")", ")", "\n", "\n", "torch", ".", "sum", "(", "embeddings", ")", ".", "backward", "(", ")", "\n", "\n", "", "labels", "=", "np", ".", "concatenate", "(", "labels", ",", "axis", "=", "0", ")", "\n", "features", "=", "np", ".", "concatenate", "(", "features", ",", "axis", "=", "0", ")", "\n", "print", "(", "features", ".", "shape", ")", "\n", "\n", "# save the features", "\n", "subdir", "=", "os", ".", "path", ".", "dirname", "(", "self", ".", "args", ".", "feat_savepath", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "subdir", ")", "is", "False", ":", "\n", "            ", "os", ".", "makedirs", "(", "subdir", ")", "\n", "", "np", ".", "savez", "(", "self", ".", "args", ".", "feat_savepath", ",", "feat", "=", "features", ",", "label", "=", "labels", ")", "\n", "# with open(os.path.splitext(self.args.feat_savepath)[0]+'_list.txt','w') as f:", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.extract_features_h5py": [[184, 218], ["test_cls.Tester.model_eval", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "h5py.File", "h5py.special_dtype", "h5py.special_dtype", "h5py.File.create_dataset", "h5py.File.create_dataset", "enumerate", "inputs.size", "test_cls.Tester.inputs.data.resize_().copy_", "test_cls.Tester.model[].zero_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.data.cpu().numpy", "torch.cat.data.cpu().numpy", "torch.cat.data.cpu().numpy", "torch.cat.data.cpu().numpy", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "numpy.dtype", "test_cls.Tester.inputs.data.resize_", "torch.cat.data.cpu", "torch.cat.data.cpu", "torch.cat.data.cpu", "torch.cat.data.cpu", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "inputs.size"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.model_eval", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward"], ["", "def", "extract_features_h5py", "(", "self", ",", "dataloader", ",", "num_images", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'test'", "]", "\n", "self", ".", "model_eval", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "filename_save", "=", "'../results/features/msceleb_debface_demog.h5py'", "\n", "f_h5py", "=", "h5py", ".", "File", "(", "filename_save", ",", "'w'", ")", "\n", "dt_feat", "=", "h5py", ".", "special_dtype", "(", "vlen", "=", "np", ".", "dtype", "(", "'float64'", ")", ")", "\n", "dt_path", "=", "h5py", ".", "special_dtype", "(", "vlen", "=", "str", ")", "\n", "\n", "f_h5py", ".", "create_dataset", "(", "'paths'", ",", "shape", "=", "(", "num_images", ",", ")", ",", "dtype", "=", "dt_path", ")", "\n", "\n", "f_h5py", ".", "create_dataset", "(", "'features'", ",", "shape", "=", "(", "num_images", ",", ")", ",", "dtype", "=", "dt_feat", ")", "\n", "\n", "# extract features", "\n", "filenames", "=", "[", "]", "\n", "features", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "i", ",", "(", "inputs", ",", "input_labels", ",", "attrs", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "\n", "            ", "batch_size", "=", "inputs", ".", "size", "(", "0", ")", "\n", "\n", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "\n", "self", ".", "model", "[", "'feat'", "]", ".", "zero_grad", "(", ")", "\n", "embeddings", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "\n", "###### feature concatenation ########", "\n", "temp", "=", "torch", ".", "cat", "(", "(", "embeddings", "[", ":", ",", "0", ":", "512", "]", ",", "embeddings", "[", ":", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "\n", "embeddings", "[", ":", ",", "3", "*", "512", ":", "4", "*", "512", "]", ")", ",", "1", ")", "\n", "f_h5py", "[", "'paths'", "]", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "=", "fmetas", "\n", "f_h5py", "[", "'features'", "]", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "=", "temp", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "torch", ".", "sum", "(", "embeddings", ")", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.test_demog": [[219, 274], ["test_cls.Tester.monitor.reset", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "test_cls.Tester.model_eval", "time.time", "enumerate", "numpy.concatenate", "numpy.concatenate", "numpy.argmax", "float", "time.time", "inputs.size", "test_cls.Tester.inputs.data.resize_().copy_", "test_cls.Tester.labels.data.resize_().copy_", "numpy.concatenate.append", "numpy.concatenate.append", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "torch.sum().backward", "time.time", "time.time", "predict.data.cpu().numpy", "input_labels.data.numpy", "float", "float", "test_cls.Tester.inputs.data.resize_", "test_cls.Tester.labels.data.resize_", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "numpy.sum", "inputs.size", "input_labels.size", "predict.data.cpu"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.reset", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.model_eval", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward"], ["", "", "def", "test_demog", "(", "self", ",", "demog_type", ",", "dataloader", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'test'", "]", "\n", "self", ".", "monitor", ".", "reset", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# switch to eval mode", "\n", "self", ".", "model_eval", "(", ")", "\n", "\n", "demog_target", "=", "{", "'gender'", ":", "1", ",", "'age'", ":", "2", ",", "'race'", ":", "3", "}", "\n", "target_ind", "=", "demog_target", "[", "demog_type", "]", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "predictions", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "\n", "# extract query features", "\n", "nimg_total", "=", "0", "\n", "for", "i", ",", "(", "inputs", ",", "input_labels", ",", "attrs", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "# keeps track of data loading time", "\n", "            ", "data_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "batch_size", "=", "inputs", ".", "size", "(", "0", ")", "\n", "nimg_total", "+=", "batch_size", "\n", "\n", "############################", "\n", "# Evaluate Network", "\n", "############################", "\n", "\n", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "self", ".", "labels", ".", "data", ".", "resize_", "(", "input_labels", ".", "size", "(", ")", ")", ".", "copy_", "(", "input_labels", ")", "\n", "\n", "embeddings", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "features", "=", "embeddings", "[", ":", ",", "(", "target_ind", "-", "1", ")", "*", "512", ":", "target_ind", "*", "512", "]", "\n", "\n", "feat_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "\n", "predict", "=", "self", ".", "criterion", "[", "demog_type", "]", "(", "features", ",", "self", ".", "labels", ")", "[", "0", "]", "\n", "\n", "predictions", ".", "append", "(", "predict", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels", ".", "append", "(", "input_labels", ".", "data", ".", "numpy", "(", ")", ")", "\n", "\n", "torch", ".", "sum", "(", "predict", ")", ".", "backward", "(", ")", "\n", "\n", "", "labels", "=", "np", ".", "concatenate", "(", "labels", ",", "axis", "=", "0", ")", "\n", "predictions", "=", "np", ".", "concatenate", "(", "predictions", ",", "axis", "=", "0", ")", "\n", "\n", "pred", "=", "np", ".", "argmax", "(", "predictions", ",", "axis", "=", "1", ")", "\n", "results", "=", "float", "(", "float", "(", "np", ".", "sum", "(", "(", "pred", "==", "labels", ")", ".", "astype", "(", "int", ")", ")", ")", "/", "float", "(", "nimg_total", ")", ")", "\n", "\n", "# np.savez('/research/prip-gongsixu/codes/biasface/results/model_analysis/result_agel20.npz',", "\n", "#     preds=preds.cpu().numpy(), labels=labels.cpu().numpy())", "\n", "\n", "return", "results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.__init__": [[19, 115], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros().long", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "plugins.Logger", "train_cls.Trainer.log_loss.register", "plugins.Monitor", "train_cls.Trainer.monitor.register", "plugins.Visualizer", "train_cls.Trainer.visualizer.register", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "getattr", "model[].parameters", "getattr", "torch.ModuleList.parameters", "train_cls.Trainer.labels.cuda", "train_cls.Trainer.inputs.cuda", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "getattr"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "model", ",", "criterion", ",", "evaluation", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "evaluation", "=", "evaluation", "\n", "\n", "self", ".", "nepochs", "=", "args", ".", "nepochs", "\n", "\n", "self", ".", "lr", "=", "args", ".", "learning_rate", "\n", "self", ".", "optim_method", "=", "args", ".", "optim_method", "\n", "self", ".", "optim_options", "=", "args", ".", "optim_options", "\n", "self", ".", "scheduler_method", "=", "args", ".", "scheduler_method", "\n", "\n", "self", ".", "optimizer_cnn", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "module_list", "=", "nn", ".", "ModuleList", "(", "[", "criterion", "[", "'id'", "]", ",", "criterion", "[", "'gender'", "]", ",", "criterion", "[", "'age'", "]", ",", "\n", "criterion", "[", "'race'", "]", ",", "model", "[", "'discrim'", "]", "]", ")", "\n", "self", ".", "optimizer_cls", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "module_list", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "if", "self", ".", "scheduler_method", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "scheduler_method", "!=", "'Customer'", ":", "\n", "                ", "self", ".", "scheduler", "=", "getattr", "(", "optim", ".", "lr_scheduler", ",", "self", ".", "scheduler_method", ")", "(", "\n", "self", ".", "optimizer_cnn", ",", "**", "args", ".", "scheduler_options", ")", "\n", "\n", "# for classification", "\n", "", "", "self", ".", "labels", "=", "torch", ".", "zeros", "(", "args", ".", "batch_size", ")", ".", "long", "(", ")", "\n", "self", ".", "inputs", "=", "torch", ".", "zeros", "(", "\n", "args", ".", "batch_size", ",", "\n", "args", ".", "resolution_high", ",", "\n", "args", ".", "resolution_wide", "\n", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "self", ".", "labels", "=", "self", ".", "labels", ".", "cuda", "(", ")", "\n", "self", ".", "inputs", "=", "self", ".", "inputs", ".", "cuda", "(", ")", "\n", "\n", "", "self", ".", "inputs", "=", "Variable", "(", "self", ".", "inputs", ")", "\n", "self", ".", "labels", "=", "Variable", "(", "self", ".", "labels", ")", "\n", "\n", "# logging training", "\n", "self", ".", "log_loss", "=", "plugins", ".", "Logger", "(", "\n", "args", ".", "logs_dir", ",", "\n", "'TrainLogger.txt'", ",", "\n", "args", ".", "save_results", "\n", ")", "\n", "params_loss", "=", "[", "'LearningRate'", ",", "'Loss_cls_demog'", ",", "'Loss_cls_id'", ",", "'Loss_conf_demog'", ",", "'Loss_conf_id'", ",", "'Loss_cls_mi'", ",", "'Loss_conf_mi'", "]", "\n", "self", ".", "log_loss", ".", "register", "(", "params_loss", ")", "\n", "\n", "# monitor training", "\n", "self", ".", "monitor", "=", "plugins", ".", "Monitor", "(", ")", "\n", "self", ".", "params_monitor", "=", "{", "\n", "'LearningRate'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_demog'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_id'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_cls_mi'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_demog'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_id'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "'Loss_conf_mi'", ":", "{", "'dtype'", ":", "'running_mean'", "}", ",", "\n", "}", "\n", "self", ".", "monitor", ".", "register", "(", "self", ".", "params_monitor", ")", "\n", "\n", "# visualize training", "\n", "self", ".", "visualizer", "=", "plugins", ".", "Visualizer", "(", "args", ".", "port", ",", "args", ".", "env", ",", "'Train'", ")", "\n", "params_visualizer", "=", "{", "\n", "'LearningRate'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'learning_rate'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_demog'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_id'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_cls_mi'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_cls'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_demog'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_id'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Loss_conf_mi'", ":", "{", "'dtype'", ":", "'scalar'", ",", "'vtype'", ":", "'plot'", ",", "'win'", ":", "'loss_conf'", ",", "\n", "'layout'", ":", "{", "'windows'", ":", "[", "'train'", ",", "'test'", "]", ",", "'id'", ":", "0", "}", "}", ",", "\n", "'Train_Image'", ":", "{", "'dtype'", ":", "'image'", ",", "'vtype'", ":", "'image'", ",", "\n", "'win'", ":", "'train_image'", "}", ",", "\n", "'Train_Images'", ":", "{", "'dtype'", ":", "'images'", ",", "'vtype'", ":", "'images'", ",", "\n", "'win'", ":", "'train_images'", "}", ",", "\n", "}", "\n", "self", ".", "visualizer", ".", "register", "(", "params_visualizer", ")", "\n", "\n", "# display training progress", "\n", "self", ".", "print_formatter", "=", "'Train [%d/%d][%d/%d] '", "\n", "for", "item", "in", "params_loss", ":", "\n", "            ", "self", ".", "print_formatter", "+=", "item", "+", "\" %.4f \"", "\n", "# self.print_formatter += \"Scale %.4f \"", "\n", "\n", "", "self", ".", "losses", "=", "{", "}", "\n", "self", ".", "binage", "=", "torch", ".", "Tensor", "(", "[", "10", ",", "22.5", ",", "27.5", ",", "32.5", ",", "37.5", ",", "42.5", ",", "47.5", ",", "55", ",", "75", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.model_train": [[116, 119], ["train_cls.Trainer.model[].train", "train_cls.Trainer.model[].train"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train"], ["", "def", "model_train", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", "[", "'feat'", "]", ".", "train", "(", ")", "\n", "self", ".", "model", "[", "'discrim'", "]", ".", "train", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.train": [[120, 292], ["train_cls.Trainer.monitor.reset", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "train_cls.Trainer.model_train", "time.time", "enumerate", "train_cls.Trainer.monitor.getvalues", "train_cls.Trainer.log_loss.update", "train_cls.Trainer.visualizer.update", "inputs.size", "list", "train_cls.Trainer.inputs.data.resize_().copy_", "train_cls.Trainer.labels.data.resize_().copy_", "train_cls.Trainer.labels.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "list", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "train_cls.Trainer.optimizer_cls.zero_grad", "train_cls.Trainer.optimizer_cnn.zero_grad", "loss1.backward", "train_cls.Trainer.optimizer_cls.step", "loss2.backward", "train_cls.Trainer.optimizer_cnn.step", "loss_cls_demog.item", "loss_cls_id.item", "loss_conf_demog.item", "loss_conf_id.item", "loss_cls_mi.item", "loss_conf_mi.item", "train_cls.Trainer.monitor.update", "print", "train_cls.Trainer.monitor.getvalues", "time.time", "range", "genderlabels.cuda.cuda.cuda", "agelabels.cuda.cuda.cuda", "racelabels.cuda.cuda.cuda", "random.sample", "labels_discrim.cuda.cuda.cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "conflabels_id.cuda.cuda.cuda", "conflabels_gender.cuda.cuda.cuda", "conflabels_age.cuda.cuda.cuda", "conflabels_race.cuda.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "checkpoints.save", "train_cls.Trainer.scheduler.step", "train_cls.Trainer.monitor.getvalues", "train_cls.Trainer.inputs.data.resize_", "train_cls.Trainer.labels.data.resize_", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "tuple", "train_cls.Trainer.scheduler.step", "train_cls.Trainer.monitor.getvalues", "train_cls.Trainer.monitor.getvalues", "inputs.size", "idlabels.size", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "getattr", "train_cls.Trainer.model[].parameters", "getattr", "torch.ModuleList.parameters", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.reset", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.train_cls.Trainer.model_train", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.save", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues", "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues"], ["", "def", "train", "(", "self", ",", "epoch", ",", "dataloader", ",", "checkpoints", ",", "acc_best", ")", ":", "\n", "        ", "dataloader", "=", "dataloader", "[", "'train'", "]", "\n", "self", ".", "monitor", ".", "reset", "(", ")", "\n", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# switch to train mode", "\n", "self", ".", "model_train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "stored_models", "=", "{", "}", "\n", "\n", "for", "i", ",", "(", "inputs", ",", "idlabels", ",", "genderlabels", ",", "agelabels", ",", "racelabels", ",", "fmetas", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "# keeps track of data loading time", "\n", "            ", "data_time", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "\n", "############################", "\n", "# Update network", "\n", "############################", "\n", "\n", "batch_size", "=", "inputs", ".", "size", "(", "0", ")", "\n", "batch_idx", "=", "list", "(", "range", "(", "batch_size", ")", ")", "\n", "\n", "self", ".", "inputs", ".", "data", ".", "resize_", "(", "inputs", ".", "size", "(", ")", ")", ".", "copy_", "(", "inputs", ")", "\n", "self", ".", "labels", ".", "data", ".", "resize_", "(", "idlabels", ".", "size", "(", ")", ")", ".", "copy_", "(", "idlabels", ")", "\n", "self", ".", "labels", "=", "self", ".", "labels", ".", "view", "(", "-", "1", ")", "\n", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "genderlabels", "=", "genderlabels", ".", "cuda", "(", ")", "\n", "agelabels", "=", "agelabels", ".", "cuda", "(", ")", "\n", "racelabels", "=", "racelabels", ".", "cuda", "(", ")", "\n", "", "genderlabels", "=", "Variable", "(", "genderlabels", ")", "\n", "agelabels", "=", "Variable", "(", "agelabels", ")", "\n", "racelabels", "=", "Variable", "(", "racelabels", ")", "\n", "\n", "outputs", "=", "self", ".", "model", "[", "'feat'", "]", "(", "self", ".", "inputs", ")", "\n", "\n", "########### adversarial training for discriminator to reduce MI #################", "\n", "permute_idx", "=", "{", "}", "\n", "keys", "=", "list", "(", "self", ".", "criterion", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "permute_idx", "[", "key", "]", "=", "random", ".", "sample", "(", "batch_idx", ",", "batch_size", ")", "\n", "", "permute_outputs", "=", "torch", ".", "cat", "(", "(", "outputs", "[", "permute_idx", "[", "'gender'", "]", ",", "0", ":", "512", "]", ",", "\n", "outputs", "[", "permute_idx", "[", "'age'", "]", ",", "512", ":", "2", "*", "512", "]", ",", "\n", "outputs", "[", "permute_idx", "[", "'race'", "]", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "\n", "outputs", "[", "permute_idx", "[", "'id'", "]", ",", "3", "*", "512", ":", "4", "*", "512", "]", ")", ",", "dim", "=", "1", ")", "\n", "inputs_discrim", "=", "torch", ".", "cat", "(", "(", "outputs", ",", "permute_outputs", ")", ",", "dim", "=", "0", ")", "\n", "outputs_discrim", "=", "self", ".", "model", "[", "'discrim'", "]", "(", "inputs_discrim", ")", "\n", "\n", "labels_discrim", "=", "torch", ".", "cat", "(", "(", "torch", ".", "ones", "(", "batch_size", ")", ",", "torch", ".", "zeros", "(", "batch_size", ")", ")", ",", "dim", "=", "0", ")", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "labels_discrim", "=", "labels_discrim", ".", "cuda", "(", ")", "\n", "", "labels_discrim", "=", "Variable", "(", "labels_discrim", ")", "\n", "########### adversarial training for discriminator to reduce MI #################", "\n", "\n", "loss_cls_demog", "=", "self", ".", "criterion", "[", "'gender'", "]", "(", "outputs", "[", ":", ",", "0", ":", "512", "]", ",", "genderlabels", ")", "[", "1", "]", "+", "self", ".", "criterion", "[", "'age'", "]", "(", "outputs", "[", ":", ",", "512", ":", "2", "*", "512", "]", ",", "agelabels", ")", "[", "1", "]", "+", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "racelabels", ")", "[", "1", "]", "\n", "loss_cls_id", "=", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "3", "*", "512", ":", "4", "*", "512", "]", ",", "self", ".", "labels", ")", "[", "1", "]", "\n", "loss_cls_mi", "=", "self", ".", "criterion", "[", "'mi'", "]", "(", "outputs_discrim", ",", "labels_discrim", ")", "\n", "loss1", "=", "loss_cls_demog", "+", "loss_cls_id", "+", "loss_cls_mi", "\n", "\n", "conflabels_id", "=", "1.0", "/", "85742.0", "*", "torch", ".", "ones", "(", "batch_size", ",", "85742", ")", "\n", "conflabels_gender", "=", "0.5", "*", "torch", ".", "ones", "(", "batch_size", ",", "2", ")", "\n", "conflabels_age", "=", "1.0", "/", "6.0", "*", "torch", ".", "ones", "(", "batch_size", ",", "6", ")", "\n", "conflabels_race", "=", "0.25", "*", "torch", ".", "ones", "(", "batch_size", ",", "4", ")", "\n", "if", "self", ".", "args", ".", "cuda", ":", "\n", "                ", "conflabels_id", "=", "conflabels_id", ".", "cuda", "(", ")", "\n", "conflabels_gender", "=", "conflabels_gender", ".", "cuda", "(", ")", "\n", "conflabels_age", "=", "conflabels_age", ".", "cuda", "(", ")", "\n", "conflabels_race", "=", "conflabels_race", ".", "cuda", "(", ")", "\n", "", "conflabels_id", "=", "Variable", "(", "conflabels_id", ")", "\n", "conflabels_gender", "=", "Variable", "(", "conflabels_gender", ")", "\n", "conflabels_age", "=", "Variable", "(", "conflabels_age", ")", "\n", "conflabels_race", "=", "Variable", "(", "conflabels_race", ")", "\n", "loss_conf_demog", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'age'", "]", "(", "outputs", "[", ":", ",", "0", ":", "512", "]", ",", "agelabels", ")", "[", "0", "]", ",", "\n", "conflabels_age", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "0", ":", "512", "]", ",", "racelabels", ")", "[", "0", "]", ",", "\n", "conflabels_race", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "0", ":", "512", "]", ",", "self", ".", "labels", ")", "[", "0", "]", ",", "# gender confusion", "\n", "conflabels_id", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'gender'", "]", "(", "outputs", "[", ":", ",", "512", ":", "2", "*", "512", "]", ",", "genderlabels", ")", "[", "0", "]", ",", "\n", "conflabels_gender", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "512", ":", "2", "*", "512", "]", ",", "racelabels", ")", "[", "0", "]", ",", "\n", "conflabels_race", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "512", ":", "2", "*", "512", "]", ",", "self", ".", "labels", ")", "[", "0", "]", ",", "# age confusion", "\n", "conflabels_id", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'gender'", "]", "(", "outputs", "[", ":", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "genderlabels", ")", "[", "0", "]", ",", "\n", "conflabels_gender", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'age'", "]", "(", "outputs", "[", ":", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "agelabels", ")", "[", "0", "]", ",", "\n", "conflabels_age", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'id'", "]", "(", "outputs", "[", ":", ",", "2", "*", "512", ":", "3", "*", "512", "]", ",", "self", ".", "labels", ")", "[", "0", "]", ",", "# race confusion", "\n", "conflabels_id", ")", "\n", "\n", "loss_conf_id", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'gender'", "]", "(", "outputs", "[", ":", ",", "3", "*", "512", ":", "4", "*", "512", "]", ",", "genderlabels", ")", "[", "0", "]", ",", "\n", "conflabels_gender", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'age'", "]", "(", "outputs", "[", ":", ",", "3", "*", "512", ":", "4", "*", "512", "]", ",", "agelabels", ")", "[", "0", "]", ",", "\n", "conflabels_age", ")", "+", "self", ".", "criterion", "[", "'conf'", "]", "(", "self", ".", "criterion", "[", "'race'", "]", "(", "outputs", "[", ":", ",", "3", "*", "512", ":", "4", "*", "512", "]", ",", "racelabels", ")", "[", "0", "]", ",", "\n", "conflabels_race", ")", "\n", "loss_conf_mi", "=", "self", ".", "criterion", "[", "'conf'", "]", "(", "outputs_discrim", ",", "torch", ".", "cat", "(", "(", "conflabels_gender", ",", "\n", "conflabels_gender", ")", ",", "dim", "=", "0", ")", ")", "\n", "loss2", "=", "loss_conf_demog", "+", "loss_conf_id", "+", "loss_conf_mi", "\n", "\n", "self", ".", "optimizer_cls", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_cnn", ".", "zero_grad", "(", ")", "\n", "\n", "loss1", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "self", ".", "optimizer_cls", ".", "step", "(", ")", "\n", "\n", "loss2", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_cnn", ".", "step", "(", ")", "\n", "\n", "self", ".", "losses", "[", "'Loss_cls_demog'", "]", "=", "loss_cls_demog", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_cls_id'", "]", "=", "loss_cls_id", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_demog'", "]", "=", "loss_conf_demog", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_id'", "]", "=", "loss_conf_id", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_cls_mi'", "]", "=", "loss_cls_mi", ".", "item", "(", ")", "\n", "self", ".", "losses", "[", "'Loss_conf_mi'", "]", "=", "loss_conf_mi", ".", "item", "(", ")", "\n", "for", "param_group", "in", "self", ".", "optimizer_cnn", ".", "param_groups", ":", "\n", "                ", "self", ".", "cur_lr", "=", "param_group", "[", "'lr'", "]", "\n", "", "self", ".", "losses", "[", "'LearningRate'", "]", "=", "self", ".", "cur_lr", "\n", "self", ".", "monitor", ".", "update", "(", "self", ".", "losses", ",", "batch_size", ")", "\n", "\n", "# print batch progress", "\n", "print", "(", "self", ".", "print_formatter", "%", "tuple", "(", "\n", "[", "epoch", "+", "1", ",", "self", ".", "nepochs", ",", "i", "+", "1", ",", "len", "(", "dataloader", ")", "]", "+", "\n", "[", "self", ".", "losses", "[", "key", "]", "for", "key", "in", "self", ".", "params_monitor", "]", ")", ")", "\n", "\n", "if", "i", "%", "10000", "==", "0", ":", "\n", "                ", "stored_models", "[", "'model'", "]", "=", "self", ".", "model", "\n", "stored_models", "[", "'loss'", "]", "=", "self", ".", "criterion", "\n", "checkpoints", ".", "save", "(", "acc_best", ",", "stored_models", ",", "epoch", ",", "i", ",", "True", ")", "\n", "\n", "# update the log file", "\n", "", "", "loss", "=", "self", ".", "monitor", ".", "getvalues", "(", ")", "\n", "self", ".", "log_loss", ".", "update", "(", "loss", ")", "\n", "\n", "# print epoch progress", "\n", "# print(self.print_formatter % tuple(", "\n", "#     [epoch + 1, self.nepochs, i+1, len(dataloader)] +", "\n", "#     [loss[key] for key in self.params_monitor]))", "\n", "\n", "# update the visualization", "\n", "loss", "[", "'Train_Image'", "]", "=", "inputs", "[", "0", "]", "\n", "loss", "[", "'Train_Images'", "]", "=", "inputs", "\n", "self", ".", "visualizer", ".", "update", "(", "loss", ")", "\n", "\n", "# update the learning rate", "\n", "if", "self", ".", "scheduler_method", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "scheduler_method", "==", "'ReduceLROnPlateau'", ":", "\n", "                ", "self", ".", "scheduler", ".", "step", "(", "loss", "[", "'Loss_cls_id'", "]", ")", "\n", "", "elif", "self", ".", "scheduler_method", "==", "'Customer'", ":", "\n", "                ", "if", "epoch", "+", "1", "in", "self", ".", "args", ".", "lr_schedule", ":", "\n", "                    ", "self", ".", "lr", "*=", "0.1", "\n", "self", ".", "optimizer_cnn", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "self", ".", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "module_list", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "criterion", "[", "'id'", "]", ",", "self", ".", "criterion", "[", "'gender'", "]", ",", "self", ".", "criterion", "[", "'age'", "]", ",", "\n", "self", ".", "criterion", "[", "'race'", "]", ",", "self", ".", "model", "[", "'discrim'", "]", "]", ")", "\n", "self", ".", "optimizer_cls", "=", "getattr", "(", "optim", ",", "self", ".", "optim_method", ")", "(", "\n", "module_list", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ",", "**", "self", ".", "optim_options", ")", "\n", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "total_loss", "=", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_cls_demog'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_cls_id'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_conf_demog'", ")", "+", "self", ".", "monitor", ".", "getvalues", "(", "'Loss_conf_id'", ")", "\n", "return", "total_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.main_eval_demog.get_demog_cohorts": [[20, 33], ["list", "list", "gdemog.sort", "range", "range", "gdemog.append", "str", "str"], "function", ["None"], ["", "def", "get_demog_cohorts", "(", "demog_type", ")", ":", "\n", "    ", "demog_dict", "=", "{", "'gender'", ":", "[", "6", ",", "4", "]", ",", "'age'", ":", "[", "2", ",", "4", "]", ",", "'race'", ":", "[", "2", ",", "6", "]", "}", "\n", "fact1", "=", "demog_dict", "[", "demog_type", "]", "[", "0", "]", "\n", "fact2", "=", "demog_dict", "[", "demog_type", "]", "[", "1", "]", "\n", "demog1", "=", "list", "(", "range", "(", "fact1", ")", ")", "\n", "demog2", "=", "list", "(", "range", "(", "fact2", ")", ")", "\n", "gdemog", "=", "[", "]", "\n", "for", "x", "in", "demog1", ":", "\n", "        ", "for", "y", "in", "demog2", ":", "\n", "            ", "gdemog", ".", "append", "(", "str", "(", "x", ")", "+", "str", "(", "y", ")", ")", "\n", "\n", "", "", "gdemog", ".", "sort", "(", ")", "\n", "return", "gdemog", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.main_eval_demog.main": [[34, 70], ["checkpoints.Checkpoints", "model.Model", "model.Model.setup", "print", "Tester", "dataloader.Dataloader", "main_eval_demog.get_demog_cohorts", "open", "dataloader.Dataloader.create", "Tester.test_demog", "f.write", "print", "sum", "str", "p.numel", "model[].parameters"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.main_eval_demog.get_demog_cohorts", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.create", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.test_cls.Tester.test_demog"], ["", "def", "main", "(", ")", ":", "\n", "    ", "demog_type", "=", "'race'", "\n", "demog_target", "=", "{", "'gender'", ":", "1", ",", "'age'", ":", "2", ",", "'race'", ":", "3", "}", "\n", "demog_refer", "=", "{", "'gender'", ":", "[", "2", ",", "3", "]", ",", "'age'", ":", "[", "1", ",", "3", "]", ",", "'race'", ":", "[", "1", ",", "2", "]", "}", "\n", "\n", "# initialize the checkpoint class", "\n", "checkpoints", "=", "Checkpoints", "(", "args", ")", "\n", "\n", "# Create Model", "\n", "models", "=", "Model", "(", "args", ")", "\n", "model", ",", "model_dict", ",", "evaluation", "=", "models", ".", "setup", "(", "checkpoints", ")", "\n", "\n", "print", "(", "'Model:\\n\\t{model}\\nTotal params:\\n\\t{npar:.2f}M'", ".", "format", "(", "\n", "model", "=", "args", ".", "model_type", ",", "\n", "npar", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", "[", "'feat'", "]", ".", "parameters", "(", ")", ")", "/", "1000000.0", ")", ")", "\n", "\n", "# The trainer handles the evaluation on validation set", "\n", "tester", "=", "Tester", "(", "args", ",", "model", ",", "model_dict", "[", "'loss'", "]", ",", "evaluation", ")", "\n", "\n", "test_freq", "=", "1", "\n", "\n", "dataloader", "=", "Dataloader", "(", "args", ")", "\n", "dataset_options_test", "=", "args", ".", "dataset_options_test", "\n", "\n", "resfilename", "=", "'/research/prip-gongsixu/codes/biasface/results/evaluation/demogbias/race.txt'", "\n", "gdemog", "=", "get_demog_cohorts", "(", "demog_type", ")", "\n", "with", "open", "(", "resfilename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "demog_group", "in", "gdemog", ":", "\n", "            ", "dataset_options_test", "[", "'target_ind'", "]", "=", "demog_target", "[", "demog_type", "]", "\n", "dataset_options_test", "[", "'refer_ind'", "]", "=", "demog_refer", "[", "demog_type", "]", "\n", "dataset_options_test", "[", "'demog_group'", "]", "=", "demog_group", "\n", "args", ".", "dataset_options_test", "=", "dataset_options_test", "\n", "loaders", "=", "dataloader", ".", "create", "(", "flag", "=", "'Test'", ")", "\n", "acc_test", "=", "tester", ".", "test_demog", "(", "demog_type", ",", "loaders", ")", "\n", "f", ".", "write", "(", "demog_group", "+", "'\\t'", "+", "str", "(", "acc_test", ")", "+", "'\\n'", ")", "\n", "print", "(", "acc_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.model.Model.__init__": [[26, 35], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "ngpu", "=", "args", ".", "ngpu", "\n", "self", ".", "cuda", "=", "args", ".", "cuda", "\n", "self", ".", "model_type", "=", "args", ".", "model_type", "\n", "self", ".", "model_options", "=", "args", ".", "model_options", "\n", "self", ".", "loss_type", "=", "args", ".", "loss_type", "\n", "self", ".", "loss_options", "=", "args", ".", "loss_options", "\n", "self", ".", "evaluation_type", "=", "args", ".", "evaluation_type", "\n", "self", ".", "evaluation_options", "=", "args", ".", "evaluation_options", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.model.Model.setup": [[36, 71], ["getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "list", "list", "checkpoints.latest", "checkpoints.load", "torch.nn.DataParallel", "nets[].cuda", "criterion[].cuda", "checkpoints.latest", "list", "range"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.latest", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.latest"], ["", "def", "setup", "(", "self", ",", "checkpoints", ")", ":", "\n", "        ", "nets", "=", "{", "}", "\n", "nets", "[", "'feat'", "]", "=", "getattr", "(", "models", ",", "self", ".", "model_type", "[", "0", "]", ")", "(", "**", "self", ".", "model_options", "[", "0", "]", ")", "\n", "nets", "[", "'discrim'", "]", "=", "getattr", "(", "models", ",", "self", ".", "model_type", "[", "1", "]", ")", "(", "**", "self", ".", "model_options", "[", "1", "]", ")", "\n", "\n", "evaluation", "=", "getattr", "(", "evaluate", ",", "self", ".", "evaluation_type", ")", "(", "\n", "**", "self", ".", "evaluation_options", ")", "\n", "criterion", "=", "{", "}", "\n", "criterion", "[", "'id'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "0", "]", ")", "(", "**", "self", ".", "loss_options", "[", "0", "]", ")", "\n", "criterion", "[", "'gender'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "1", "]", ")", "(", "**", "self", ".", "loss_options", "[", "1", "]", ")", "\n", "criterion", "[", "'age'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "2", "]", ")", "(", "**", "self", ".", "loss_options", "[", "2", "]", ")", "\n", "criterion", "[", "'race'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "3", "]", ")", "(", "**", "self", ".", "loss_options", "[", "3", "]", ")", "\n", "criterion", "[", "'conf'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "4", "]", ")", "(", "**", "self", ".", "loss_options", "[", "4", "]", ")", "\n", "criterion", "[", "'mi'", "]", "=", "getattr", "(", "losses", ",", "self", ".", "loss_type", "[", "5", "]", ")", "(", "**", "self", ".", "loss_options", "[", "5", "]", ")", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "keys", "=", "list", "(", "nets", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "nets", "[", "key", "]", "=", "nn", ".", "DataParallel", "(", "nets", "[", "key", "]", ",", "device_ids", "=", "list", "(", "range", "(", "self", ".", "ngpu", ")", ")", ")", "\n", "nets", "[", "key", "]", "=", "nets", "[", "key", "]", ".", "cuda", "(", ")", "\n", "", "keys", "=", "list", "(", "criterion", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "criterion", "[", "key", "]", "=", "criterion", "[", "key", "]", ".", "cuda", "(", ")", "\n", "\n", "", "", "model_dict", "=", "{", "}", "\n", "model_dict", "[", "'model'", "]", "=", "nets", "\n", "model_dict", "[", "'loss'", "]", "=", "criterion", "\n", "\n", "if", "checkpoints", ".", "latest", "(", "'resume'", ")", "is", "None", ":", "\n", "            ", "pass", "\n", "# model.apply(weights_init)", "\n", "", "else", ":", "\n", "            ", "model_dict", "=", "checkpoints", ".", "load", "(", "model_dict", ",", "checkpoints", ".", "latest", "(", "'resume'", ")", ")", "\n", "\n", "", "return", "nets", ",", "model_dict", ",", "evaluation", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.model.weights_init": [[13, 23], ["isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.__init__": [[17, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "\n", "self", ".", "resolution", "=", "(", "args", ".", "resolution_wide", ",", "args", ".", "resolution_high", ")", "\n", "self", ".", "input_size", "=", "(", "args", ".", "input_wide", ",", "args", ".", "input_high", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup": [[23, 52], ["dataset_options.keys", "torchvision.Compose", "FileListLoader", "dataloader.Dataloader.preprocess", "CSVListLoader", "ClassSamplesDataLoader", "GenderCSVListLoader", "H5pyLoader", "H5pyCSVLoader", "DemogCSVListLoader", "print", "Exception"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.preprocess"], ["", "def", "setup", "(", "self", ",", "dataloader_type", ",", "dataset_options", ")", ":", "\n", "        ", "if", "'transform'", "in", "dataset_options", ".", "keys", "(", ")", ":", "\n", "            ", "temp", "=", "dataset_options", "[", "'transform'", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "self", ".", "preprocess", "(", "dataset_options", "[", "'transform'", "]", ")", ")", "\n", "dataset_options", "[", "'transform'", "]", "=", "transform", "\n", "\n", "", "if", "dataloader_type", "==", "'FileListLoader'", ":", "\n", "            ", "dataset", "=", "FileListLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'CSVListLoader'", ":", "\n", "            ", "dataset", "=", "CSVListLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'ClassSamplesDataLoader'", ":", "\n", "            ", "dataset", "=", "ClassSamplesDataLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'GenderCSVListLoader'", ":", "\n", "            ", "dataset", "=", "GenderCSVListLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'H5pyLoader'", ":", "\n", "            ", "dataset", "=", "H5pyLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'H5pyCSVLoader'", ":", "\n", "            ", "dataset", "=", "H5pyCSVLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "==", "'DemogCSVListLoader'", ":", "\n", "            ", "dataset", "=", "DemogCSVListLoader", "(", "**", "dataset_options", ")", "\n", "", "elif", "dataloader_type", "is", "None", ":", "\n", "            ", "print", "(", "\"No data assigned!\"", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "Exception", "(", "\"Unknown Training Dataset\"", ")", ")", "\n", "\n", "", "dataset_options", "[", "'transform'", "]", "=", "temp", "\n", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.preprocess": [[53, 81], ["preprocess.keys", "process_list.append", "process_list.append", "getattr", "process_list.append", "getattr", "process_list.append", "getattr", "process_list.append", "process_list.append", "getattr", "torchvision.Normalize", "getattr"], "methods", ["None"], ["", "def", "preprocess", "(", "self", ",", "preprocess", ")", ":", "\n", "        ", "process_list", "=", "[", "]", "\n", "keys", "=", "[", "'Resize'", ",", "'CenterCrop'", ",", "'RandomCrop'", ",", "'RandomHorizontalFlip'", ",", "'RandomVerticalFlip'", ",", "'RnadomRotation'", ",", "'ToTensor'", ",", "'Normalize'", ",", "]", "\n", "for", "key", "in", "keys", ":", "\n", "            ", "if", "key", "in", "preprocess", ".", "keys", "(", ")", ":", "\n", "                ", "if", "key", "==", "keys", "[", "0", "]", ":", "\n", "                    ", "process_list", ".", "append", "(", "getattr", "(", "transforms", ",", "key", ")", "(", "self", ".", "input_size", ")", ")", "\n", "", "elif", "key", "==", "keys", "[", "1", "]", "or", "key", "==", "keys", "[", "2", "]", ":", "\n", "                    ", "process_list", ".", "append", "(", "getattr", "(", "transforms", ",", "key", ")", "(", "self", ".", "resolution", ")", ")", "\n", "", "elif", "key", "==", "keys", "[", "3", "]", "or", "key", "==", "keys", "[", "4", "]", ":", "\n", "                    ", "process_list", ".", "append", "(", "getattr", "(", "transforms", ",", "key", ")", "(", ")", ")", "\n", "", "elif", "key", "==", "keys", "[", "5", "]", ":", "\n", "                    ", "process_list", ".", "append", "(", "getattr", "(", "transforms", ",", "key", ")", "(", "preprocess", "[", "key", "]", ")", ")", "\n", "", "elif", "key", "==", "keys", "[", "6", "]", ":", "\n", "                    ", "process_list", ".", "append", "(", "getattr", "(", "transforms", ",", "key", ")", "(", ")", ")", "\n", "", "else", ":", "\n", "                    ", "process_list", ".", "append", "(", "transforms", ".", "Normalize", "(", "preprocess", "[", "key", "]", "[", "0", "]", ",", "\n", "preprocess", "[", "key", "]", "[", "1", "]", ")", ")", "\n", "", "", "", "return", "process_list", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.create": [[82, 130], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataloader.Dataloader.setup", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "int", "dataloader.Dataloader.setup", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "int", "dataloader.Dataloader.setup", "dataloader.Dataloader.setup", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.dataloader.Dataloader.setup"], ["", "def", "create", "(", "self", ",", "dataset", "=", "None", ",", "flag", "=", "None", ")", ":", "\n", "        ", "dataloader", "=", "{", "}", "\n", "if", "dataset", "is", "not", "None", ":", "\n", "            ", "dataloader", "[", "'test'", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "args", ".", "nthreads", ")", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", "\n", ")", "\n", "return", "dataloader", "\n", "\n", "", "else", ":", "\n", "            ", "if", "flag", "==", "\"Train\"", ":", "\n", "                ", "self", ".", "dataset_train", "=", "self", ".", "setup", "(", "self", ".", "args", ".", "dataset_train", ",", "self", ".", "args", ".", "dataset_options_train", ")", "\n", "dataloader", "[", "'train'", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_train", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "args", ".", "nthreads", ")", ",", "\n", "shuffle", "=", "True", ",", "pin_memory", "=", "True", "\n", ")", "\n", "return", "dataloader", "\n", "\n", "", "elif", "flag", "==", "\"Test\"", ":", "\n", "                ", "self", ".", "dataset_test", "=", "self", ".", "setup", "(", "self", ".", "args", ".", "dataset_test", ",", "self", ".", "args", ".", "dataset_options_test", ")", "\n", "dataloader", "[", "'test'", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_test", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "args", ".", "nthreads", ")", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", "\n", ")", "\n", "return", "dataloader", "\n", "\n", "", "elif", "flag", "is", "None", ":", "\n", "                ", "self", ".", "dataset_train", "=", "self", ".", "setup", "(", "self", ".", "args", ".", "dataset_train", ",", "self", ".", "args", ".", "dataset_options_train", ")", "\n", "self", ".", "dataset_test", "=", "self", ".", "setup", "(", "self", ".", "args", ".", "dataset_test", ",", "self", ".", "args", ".", "dataset_options_test", ")", "\n", "dataloader", "[", "'train'", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_train", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "batch_size", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "args", ".", "nthreads", ")", ",", "\n", "shuffle", "=", "True", ",", "pin_memory", "=", "True", "\n", ")", "\n", "dataloader", "[", "'test'", "]", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_test", ",", "\n", "batch_size", "=", "self", ".", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "int", "(", "self", ".", "args", ".", "nthreads", ")", ",", "\n", "shuffle", "=", "False", ",", "pin_memory", "=", "True", "\n", ")", "\n", "return", "dataloader", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.setup_graceful_exit": [[19, 22], ["signal.signal"], "function", ["None"], ["def", "setup_graceful_exit", "(", ")", ":", "\n", "# handle Ctrl-C signal", "\n", "    ", "signal", ".", "signal", "(", "signal", ".", "SIGINT", ",", "ctrl_c_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.cleanup": [[24, 36], ["psutil.Process", "psutil.Process.children", "print", "sys.exit", "os.kill", "int", "Exception"], "function", ["None"], ["", "def", "cleanup", "(", ")", ":", "\n", "# signal.signal(signal.SIGINT, signal.SIG_DFL)", "\n", "    ", "current_process", "=", "psutil", ".", "Process", "(", ")", "\n", "children", "=", "current_process", ".", "children", "(", "recursive", "=", "True", ")", "\n", "for", "child", "in", "children", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "kill", "(", "int", "(", "child", ".", "pid", ")", ",", "signal", ".", "SIGKILL", ")", "\n", "", "except", "OSError", "as", "ex", ":", "\n", "            ", "raise", "Exception", "(", "\"wasn't able to kill the child process (pid:{}).\"", ".", "format", "(", "child", ".", "pid", ")", ")", "\n", "#     # os.waitpid(child.pid, os.P_ALL)", "\n", "", "", "print", "(", "'\\x1b[?25h'", ",", "end", "=", "''", ",", "flush", "=", "True", ")", "# show cursor", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.ctrl_c_handler": [[38, 42], ["utils.cleanup"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.cleanup"], ["", "def", "ctrl_c_handler", "(", "*", "kargs", ")", ":", "\n", "# try to gracefully terminate the program", "\n", "# signal.signal(signal.SIGINT, signal.SIG_DFL)", "\n", "    ", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan": [[44, 46], ["None"], "function", ["None"], ["", "def", "isnan", "(", "x", ")", ":", "\n", "    ", "return", "x", "!=", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils._debuginfo": [[48, 54], ["inspect.getframeinfo", "print", "inspect.stack"], "function", ["None"], ["", "def", "_debuginfo", "(", "self", ",", "*", "message", ")", ":", "\n", "    ", "\"\"\"Prints the current filename and line number in addition to debugging\n    messages.\"\"\"", "\n", "caller", "=", "getframeinfo", "(", "stack", "(", ")", "[", "1", "]", "[", "0", "]", ")", "\n", "print", "(", "'\\033[92m'", ",", "caller", ".", "filename", ",", "'\\033[0m'", ",", "caller", ".", "lineno", ",", "\n", "'\\033[95m'", ",", "self", ".", "__class__", ".", "__name__", ",", "'\\033[94m'", ",", "message", ",", "'\\033[0m'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readcsvfile": [[56, 64], ["f.close", "open", "csv.reader", "content.append"], "function", ["None"], ["", "def", "readcsvfile", "(", "filename", ",", "delimiter", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "content", "=", "[", "]", "\n", "reader", "=", "csv", ".", "reader", "(", "f", ",", "delimiter", "=", "delimiter", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "content", ".", "append", "(", "row", ")", "\n", "", "", "f", ".", "close", "(", ")", "\n", "return", "content", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readtextfile": [[66, 71], ["f.close", "open", "f.readlines"], "function", ["None"], ["", "def", "readtextfile", "(", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "content", "=", "f", ".", "readlines", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "content", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.writetextfile": [[73, 83], ["f.close", "os.path.join", "open", "f.writelines", "os.path.isdir", "os.makedirs"], "function", ["None"], ["", "def", "writetextfile", "(", "data", ",", "filename", ",", "path", "=", "None", ")", ":", "\n", "    ", "\"\"\"If path is provided, it will make sure the path exists before writing\n    the file.\"\"\"", "\n", "if", "path", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "filename", "=", "os", ".", "path", ".", "join", "(", "path", ",", "filename", ")", "\n", "", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "data", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.delete_file": [[85, 88], ["os.path.isfile", "os.remove"], "function", ["None"], ["", "def", "delete_file", "(", "filename", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "isfile", "(", "filename", ")", "is", "True", ":", "\n", "        ", "os", ".", "remove", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.eformat": [[90, 95], ["s.split", "int"], "function", ["None"], ["", "", "def", "eformat", "(", "f", ",", "prec", ",", "exp_digits", ")", ":", "\n", "    ", "s", "=", "\"%.*e\"", "%", "(", "prec", ",", "f", ")", "\n", "mantissa", ",", "exp", "=", "s", ".", "split", "(", "'e'", ")", "\n", "# add 1 to digits as 1 is taken by sign +/-", "\n", "return", "\"%se%+0*d\"", "%", "(", "mantissa", ",", "exp_digits", "+", "1", ",", "int", "(", "exp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.saveargs": [[97, 102], ["shutil.copyfile", "os.path.isdir", "os.makedirs", "os.path.join"], "function", ["None"], ["", "def", "saveargs", "(", "args", ",", "config_file", ")", ":", "\n", "    ", "path", "=", "args", ".", "logs_dir", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", "is", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "shutil", ".", "copyfile", "(", "config_file", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'args.py'", ")", ")", "\n", "# def saveargs(args: object) -> object:", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.file_exists": [[119, 121], ["os.path.isfile"], "function", ["None"], ["", "def", "file_exists", "(", "filename", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.str2bool": [[123, 131], ["v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "\"\"\"A Parser for boolean values with argparse\"\"\"", "\n", "if", "v", ".", "lower", "(", ")", "in", "(", "'yes'", ",", "'true'", ",", "'t'", ",", "'y'", ",", "'1'", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "'no'", ",", "'false'", ",", "'f'", ",", "'n'", ",", "'0'", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "'Boolean value expected.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.gaussian": [[133, 146], ["numpy.meshgrid", "numpy.isnan", "numpy.isnan", "numpy.zeros", "numpy.arange", "numpy.arange", "pow", "numpy.power", "numpy.power", "numpy.exp", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan"], ["", "", "def", "gaussian", "(", "size", ",", "center", ",", "sigma", "=", "1", ")", ":", "\n", "    ", "if", "np", ".", "isnan", "(", "center", "[", "0", "]", ")", "or", "np", ".", "isnan", "(", "center", "[", "1", "]", ")", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "size", ")", "\n", "\n", "", "x", ",", "y", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "size", "[", "0", "]", ")", ",", "np", ".", "arange", "(", "size", "[", "1", "]", ")", ")", "\n", "if", "center", "is", "None", ":", "\n", "        ", "x0", "=", "y0", "=", "size", "//", "2", "\n", "", "else", ":", "\n", "        ", "x0", "=", "center", "[", "0", "]", "\n", "y0", "=", "center", "[", "1", "]", "\n", "", "den", "=", "2", "*", "pow", "(", "sigma", ",", "2", ")", "\n", "num", "=", "np", ".", "power", "(", "x", "-", "x0", ",", "2", ")", "+", "np", ".", "power", "(", "y", "-", "y0", ",", "2", ")", "\n", "return", "np", ".", "exp", "(", "-", "(", "num", "/", "den", ")", ")", "/", "math", ".", "sqrt", "(", "2", "*", "np", ".", "pi", "*", "sigma", "*", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.plotlify": [[148, 154], ["json.loads", "json.loads", "json.dumps", "json.dumps", "fig.keys"], "function", ["None"], ["", "def", "plotlify", "(", "fig", ",", "env", "=", "'main'", ",", "win", "=", "'mywin'", ")", ":", "\n", "    ", "fig", "=", "{", "key", ":", "fig", "[", "key", "]", "for", "key", "in", "fig", ".", "keys", "(", ")", "}", "\n", "fig", "[", "'win'", "]", "=", "win", "\n", "fig", "[", "'eid'", "]", "=", "env", "\n", "\n", "return", "json", ".", "loads", "(", "json", ".", "dumps", "(", "fig", ",", "cls", "=", "plotly", ".", "utils", ".", "PlotlyJSONEncoder", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.normalize": [[155, 165], ["numpy.linalg.norm", "len", "torch.mul().sum().sqrt", "torch.mul().sum", "torch.mul"], "function", ["None"], ["", "def", "normalize", "(", "x", ",", "tool", ",", "axis", "=", "None", ",", "epsilon", "=", "10e-12", ")", ":", "\n", "    ", "''' Devide the vectors in x by their norms.'''", "\n", "if", "axis", "is", "None", ":", "\n", "        ", "axis", "=", "len", "(", "x", ".", "shape", ")", "-", "1", "\n", "", "if", "tool", "==", "'numpy'", ":", "\n", "        ", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "x", ",", "axis", "=", "axis", ",", "keepdims", "=", "True", ")", "\n", "", "elif", "tool", "==", "'torch'", ":", "\n", "        ", "norm", "=", "torch", ".", "mul", "(", "x", ",", "x", ")", ".", "sum", "(", "dim", "=", "axis", ",", "keepdim", "=", "True", ")", ".", "sqrt", "(", ")", "\n", "", "x", "=", "x", "/", "(", "norm", "+", "epsilon", ")", "\n", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.__init__": [[13, 22], ["os.makedirs", "os.path.isdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "dir_save", "=", "args", ".", "save_dir", "\n", "self", ".", "model_filename", "=", "args", ".", "resume", "\n", "self", ".", "save_results", "=", "args", ".", "save_results", "\n", "self", ".", "cuda", "=", "args", ".", "cuda", "\n", "\n", "if", "self", ".", "save_results", "and", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "dir_save", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "dir_save", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.latest": [[23, 26], ["None"], "methods", ["None"], ["", "", "def", "latest", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "name", "==", "'resume'", ":", "\n", "            ", "return", "self", ".", "model_filename", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.save": [[27, 45], ["list", "len", "list", "list", "[].state_dict", "open", "pickle.dump", "[].state_dict", "open", "pickle.dump", "str", "str"], "methods", ["None"], ["", "", "def", "save", "(", "self", ",", "acc", ",", "models", ",", "epoch", ",", "step", ",", "best", ")", ":", "\n", "        ", "keys", "=", "list", "(", "models", ")", "\n", "assert", "(", "len", "(", "keys", ")", "==", "2", ")", "\n", "if", "best", "is", "True", ":", "\n", "            ", "nets", "=", "{", "}", "\n", "keys", "=", "list", "(", "models", "[", "'model'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "nets", "[", "key", "]", "=", "models", "[", "'model'", "]", "[", "key", "]", ".", "state_dict", "(", ")", "\n", "", "filename_model", "=", "'%s/model_epoch_%d_%s_%.2f.pkl'", "%", "(", "self", ".", "dir_save", ",", "epoch", ",", "str", "(", "step", ")", ",", "acc", ")", "\n", "with", "open", "(", "filename_model", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "nets", ",", "f", ")", "\n", "", "loss", "=", "{", "}", "\n", "keys", "=", "list", "(", "models", "[", "'loss'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "loss", "[", "key", "]", "=", "models", "[", "'loss'", "]", "[", "key", "]", ".", "state_dict", "(", ")", "\n", "", "filename_loss", "=", "'%s/loss_epoch_%d_%s_%.2f.pkl'", "%", "(", "self", ".", "dir_save", ",", "epoch", ",", "str", "(", "step", ")", ",", "acc", ")", "\n", "with", "open", "(", "filename_loss", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "loss", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load": [[46, 94], ["os.path.isfile", "Exception", "print", "model.state_dict", "list", "list", "model.load_state_dict", "os.path.isdir", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "list", "list", "open", "pickle.load", "[].load_state_dict", "open", "pickle.load", "[].load_state_dict", "list", "list", "torch.nn.DataParallel", "torch.nn.DataParallel", "[].cuda", "[].cuda", "list", "range"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["", "", "", "def", "load", "(", "self", ",", "models", ",", "filename", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "filename", ")", ":", "\n", "            ", "model", "=", "models", "[", "'model'", "]", "\n", "print", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "filename", ")", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "state_dict", "=", "torch", ".", "load", "(", "filename", ")", "\n", "", "else", ":", "\n", "                ", "state_dict", "=", "torch", ".", "load", "(", "filename", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", "", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "update_dict", "=", "{", "}", "\n", "valid_keys", "=", "list", "(", "model_dict", ")", "\n", "state_keys", "=", "list", "(", "state_dict", ")", "\n", "state_ind", "=", "0", "\n", "for", "key", "in", "valid_keys", ":", "\n", "# if key.endswith('num_batches_tracked'):", "\n", "#     continue", "\n", "                ", "update_dict", "[", "key", "]", "=", "state_dict", "[", "state_keys", "[", "state_ind", "]", "]", "\n", "state_ind", "+=", "1", "\n", "", "model", ".", "load_state_dict", "(", "update_dict", ")", "\n", "models", "[", "'model'", "]", "=", "model", "\n", "return", "models", "\n", "\n", "", "elif", "os", ".", "path", ".", "isdir", "(", "filename", ")", ":", "\n", "            ", "filename_model", "=", "os", ".", "path", ".", "join", "(", "filename", ",", "'model_epoch_31_final_0.997500.pkl'", ")", "\n", "filename_loss", "=", "os", ".", "path", ".", "join", "(", "filename", ",", "'loss_epoch_31_final_0.997500.pkl'", ")", "\n", "with", "open", "(", "filename_model", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "nets", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "keys", "=", "list", "(", "models", "[", "'model'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "models", "[", "'model'", "]", "[", "key", "]", ".", "load_state_dict", "(", "nets", "[", "key", "]", ",", "strict", "=", "False", ")", "\n", "\n", "", "with", "open", "(", "filename_loss", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "loss", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "keys", "=", "list", "(", "models", "[", "'loss'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "models", "[", "'loss'", "]", "[", "key", "]", ".", "load_state_dict", "(", "loss", "[", "key", "]", ",", "strict", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "cuda", ":", "\n", "                ", "keys", "=", "list", "(", "models", "[", "'model'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "models", "[", "'model'", "]", "[", "key", "]", "=", "nn", ".", "DataParallel", "(", "models", "[", "'model'", "]", "[", "key", "]", ",", "device_ids", "=", "list", "(", "range", "(", "self", ".", "args", ".", "ngpu", ")", ")", ")", "\n", "models", "[", "'model'", "]", "[", "key", "]", "=", "models", "[", "'model'", "]", "[", "key", "]", ".", "cuda", "(", ")", "\n", "", "keys", "=", "list", "(", "models", "[", "'loss'", "]", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "models", "[", "'loss'", "]", "[", "key", "]", "=", "models", "[", "'loss'", "]", "[", "key", "]", ".", "cuda", "(", ")", "\n", "\n", "", "", "return", "models", "\n", "", "raise", "(", "Exception", "(", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "filename", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_skimage": [[10, 12], ["skimage.io.imread"], "function", ["None"], ["def", "loader_skimage", "(", "path", ")", ":", "\n", "    ", "return", "io", ".", "imread", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_image": [[14, 16], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "loader_image", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_torch": [[18, 20], ["torch.load"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["", "def", "loader_torch", "(", "path", ")", ":", "\n", "    ", "return", "torch", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_numpy": [[22, 24], ["numpy.load"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["", "def", "loader_numpy", "(", "path", ")", ":", "\n", "    ", "return", "np", ".", "load", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_mat": [[26, 28], ["scipy.loadmat"], "function", ["None"], ["", "def", "loader_mat", "(", "path", ")", ":", "\n", "    ", "return", "sio", ".", "loadmat", "(", "path", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Compose.__init__": [[30, 32], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Compose.__call__": [[33, 38], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "input", "=", "t", "(", "input", ")", "\n", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToTensor.__init__": [[47, 49], ["torchvision.transforms.ToTensor"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "toTensor", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToTensor.__call__": [[50, 71], ["input.keys", "isinstance", "transforms.ToTensor.toTensor", "isinstance", "torch.from_numpy().float", "type", "torch.from_numpy"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            input (a dictionary containing PIL.Image or numpy.ndarray elements): Dict to be converted to tensor.\n\n        Returns:\n            Dict: Tensorized/Converted dictionay.\n        \"\"\"", "\n", "for", "key", "in", "input", ".", "keys", "(", ")", ":", "\n", "            ", "value", "=", "input", "[", "key", "]", "\n", "if", "isinstance", "(", "value", ",", "Image", ".", "Image", ")", ":", "\n", "                ", "input", "[", "key", "]", "=", "self", ".", "toTensor", "(", "value", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "np", ".", "ndarray", ")", ":", "\n", "                ", "input", "[", "key", "]", "=", "torch", ".", "from_numpy", "(", "value", ")", ".", "float", "(", ")", "\n", "", "elif", "type", "(", "input", "[", "key", "]", ".", "__module__", "==", "'torch'", ")", ":", "\n", "# assumed to be a Tensor", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "(", "\"Unsupported input type, please update the ToTensor \"", "\n", "\"class\"", ")", "\n", "", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToPILImage.__call__": [[78, 87], ["isinstance", "PIL.Image.fromarray", "input[].mul().byte().numpy", "numpy.transpose", "PIL.Image.fromarray", "input[].mul().byte", "input[].mul"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "isinstance", "(", "input", "[", "'img'", "]", ",", "np", ".", "ndarray", ")", ":", "\n", "# handle numpy array", "\n", "            ", "input", "[", "'img'", "]", "=", "Image", ".", "fromarray", "(", "input", "[", "'img'", "]", ")", "\n", "", "else", ":", "\n", "            ", "npimg", "=", "input", "[", "'img'", "]", ".", "mul", "(", "255", ")", ".", "byte", "(", ")", ".", "numpy", "(", ")", "\n", "npimg", "=", "np", ".", "transpose", "(", "npimg", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "input", "[", "'img'", "]", "=", "Image", ".", "fromarray", "(", "npimg", ")", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Normalize.__init__": [[94, 97], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Normalize.__call__": [[98, 103], ["zip", "t.sub_().div_", "t.sub_"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "# TODO: make efficient", "\n", "        ", "for", "t", ",", "m", ",", "s", "in", "zip", "(", "input", "[", "'img'", "]", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ":", "\n", "            ", "t", ".", "sub_", "(", "m", ")", ".", "div_", "(", "s", ")", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Scale.__init__": [[113, 116], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Scale.__call__": [[117, 131], ["int", "input[].resize", "int", "input[].resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "w", ",", "h", "=", "input", "[", "'img'", "]", ".", "size", "\n", "if", "(", "w", "<=", "h", "and", "w", "==", "self", ".", "size", ")", "or", "(", "h", "<=", "w", "and", "h", "==", "self", ".", "size", ")", ":", "\n", "            ", "return", "input", "\n", "", "if", "w", "<", "h", ":", "\n", "            ", "ow", "=", "self", ".", "size", "\n", "oh", "=", "int", "(", "self", ".", "size", "*", "h", "/", "w", ")", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "self", ".", "interpolation", ")", "\n", "return", "input", "\n", "", "else", ":", "\n", "            ", "oh", "=", "self", ".", "size", "\n", "ow", "=", "int", "(", "self", ".", "size", "*", "w", "/", "h", ")", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "self", ".", "interpolation", ")", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.CenterCrop.__init__": [[138, 143], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.CenterCrop.__call__": [[144, 151], ["int", "int", "input[].crop", "round", "round"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "w", ",", "h", "=", "input", "[", "'img'", "]", ".", "size", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "tw", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "th", ")", "/", "2.", ")", ")", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "tw", ",", "y1", "+", "th", ")", ")", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Pad.__init__": [[155, 160], ["isinstance", "isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "padding", ",", "fill", "=", "0", ")", ":", "\n", "        ", "assert", "isinstance", "(", "padding", ",", "numbers", ".", "Number", ")", "\n", "assert", "isinstance", "(", "fill", ",", "numbers", ".", "Number", ")", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "fill", "=", "fill", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Pad.__call__": [[161, 164], ["PIL.ImageOps.expand"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "[", "'img'", "]", "=", "ImageOps", ".", "expand", "(", "input", "[", "'img'", "]", ",", "border", "=", "self", ".", "padding", ",", "fill", "=", "self", ".", "fill", ")", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Lambda.__init__": [[168, 171], ["type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "assert", "type", "(", "lambd", ")", "is", "types", ".", "LambdaType", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.Lambda.__call__": [[172, 175], ["transforms.Lambda.lambd"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "[", "'img'", "]", "=", "self", ".", "lambd", "(", "input", "[", "'img'", "]", ")", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.RandomCrop.__init__": [[182, 188], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "padding", "=", "0", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.RandomCrop.__call__": [[189, 202], ["random.randint", "random.randint", "input[].crop", "PIL.ImageOps.expand"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "padding", ">", "0", ":", "\n", "            ", "input", "[", "'img'", "]", "=", "ImageOps", ".", "expand", "(", "input", "[", "'img'", "]", ",", "border", "=", "self", ".", "padding", ",", "fill", "=", "0", ")", "\n", "\n", "", "w", ",", "h", "=", "input", "[", "'img'", "]", ".", "size", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "            ", "return", "input", "\n", "\n", "", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "tw", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "th", ")", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "tw", ",", "y1", "+", "th", ")", ")", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.RandomHorizontalFlip.__call__": [[207, 213], ["random.random", "input[].transpose", "input[].transpose", "math.ceil"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "input", "[", "'tgt'", "]", "=", "input", "[", "'tgt'", "]", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "input", "[", "'loc'", "]", "[", "0", "]", "=", "input", "[", "'loc'", "]", "[", "0", "]", "-", "math", ".", "ceil", "(", "input", "[", "'img'", "]", ".", "size", "[", "0", "]", "/", "2", ")", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.RandomSizedCrop.__init__": [[222, 225], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.RandomSizedCrop.__call__": [[226, 251], ["range", "transforms.Scale", "transforms.CenterCrop", "CenterCrop.", "random.uniform", "int", "int", "Scale.", "random.uniform", "round", "round", "random.random", "random.randint", "random.randint", "input[].crop", "input[].resize", "math.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "for", "attempt", "in", "range", "(", "10", ")", ":", "\n", "            ", "area", "=", "input", "[", "'img'", "]", ".", "size", "[", "0", "]", "*", "input", "[", "'img'", "]", ".", "size", "[", "1", "]", "\n", "target_area", "=", "random", ".", "uniform", "(", "0.08", ",", "1.0", ")", "*", "area", "\n", "aspect_ratio", "=", "random", ".", "uniform", "(", "3.", "/", "4", ",", "4.", "/", "3", ")", "\n", "\n", "w", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "*", "aspect_ratio", ")", ")", ")", "\n", "h", "=", "int", "(", "round", "(", "math", ".", "sqrt", "(", "target_area", "/", "aspect_ratio", ")", ")", ")", "\n", "\n", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "                ", "w", ",", "h", "=", "h", ",", "w", "\n", "\n", "", "if", "w", "<=", "input", "[", "'img'", "]", ".", "size", "[", "0", "]", "and", "h", "<=", "input", "[", "'img'", "]", ".", "size", "[", "1", "]", ":", "\n", "                ", "x1", "=", "random", ".", "randint", "(", "0", ",", "input", "[", "'img'", "]", ".", "size", "[", "0", "]", "-", "w", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "input", "[", "'img'", "]", ".", "size", "[", "1", "]", "-", "h", ")", "\n", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "w", ",", "y1", "+", "h", ")", ")", "\n", "assert", "(", "input", "[", "'img'", "]", ".", "size", "==", "(", "w", ",", "h", ")", ")", "\n", "input", "[", "'img'", "]", "=", "input", "[", "'img'", "]", ".", "resize", "(", "(", "self", ".", "size", ",", "self", ".", "size", ")", ",", "self", ".", "interpolation", ")", "\n", "return", "input", "\n", "\n", "# Fallback", "\n", "", "", "scale", "=", "Scale", "(", "self", ".", "size", ",", "interpolation", "=", "self", ".", "interpolation", ")", "\n", "crop", "=", "CenterCrop", "(", "self", ".", "size", ")", "\n", "return", "crop", "(", "scale", "(", "input", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.NormalizeLandmarks.__init__": [[255, 258], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "xsize", ",", "ysize", ")", ":", "\n", "        ", "self", ".", "xsize", "=", "xsize", "\n", "self", ".", "ysize", "=", "ysize", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.NormalizeLandmarks.__call__": [[259, 267], ["numpy.mean", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "        ", "valid_points", "=", "[", "v", "for", "v", "in", "input", "[", "'loc'", "]", "if", "v", "[", "0", "]", "!=", "0", "and", "v", "[", "1", "]", "!=", "0", "]", "\n", "mean", "=", "np", ".", "mean", "(", "valid_points", ",", "axis", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "input", "[", "'loc'", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "input", "[", "'loc'", "]", "[", "i", "]", "[", "0", "]", "=", "-", "1", "+", "(", "input", "[", "'loc'", "]", "[", "i", "]", "[", "0", "]", "*", "2.", ")", "/", "(", "inputx_res", ")", "\n", "input", "[", "'loc'", "]", "[", "i", "]", "[", "1", "]", "=", "-", "1", "+", "(", "input", "[", "'loc'", "]", "[", "i", "]", "[", "1", "]", "*", "2.", ")", "/", "(", "inputy_res", ")", "\n", "\n", "", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.AffineCrop.__init__": [[270, 281], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "nlandmark", ",", "ix", ",", "iy", ",", "ox", ",", "oy", ",", "rangle", "=", "0", ",", "rscale", "=", "0", ",", "rtrans", "=", "0", ",", "gauss", "=", "1", ")", ":", "\n", "        ", "self", ".", "rangle", "=", "rangle", "\n", "self", ".", "rscale", "=", "rscale", "\n", "self", ".", "rtrans", "=", "rtrans", "\n", "self", ".", "nlandmark", "=", "nlandmark", "\n", "self", ".", "ix", "=", "ix", "\n", "self", ".", "iy", "=", "iy", "\n", "self", ".", "ox", "=", "ox", "\n", "self", ".", "oy", "=", "oy", "\n", "self", ".", "utils", "=", "utils", "\n", "self", ".", "gauss", "=", "gauss", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.AffineCrop.__call__": [[282, 358], ["img.resize.resize.rotate", "img.resize.resize.transform", "img.resize.resize.resize", "int", "int", "img.resize.resize.crop", "numpy.zeros", "range", "transforms.AffineCrop.utils.gaussian", "scipy.misc.imresize", "int", "int", "round", "round", "numpy.sum", "numpy.ones", "numpy.array", "numpy.array", "numpy.array", "numpy.dot", "numpy.dot", "numpy.dot", "range", "numpy.array", "int", "int", "transforms.AffineCrop.utils.gaussian", "scipy.misc.imresize", "numpy.zeros", "min", "max", "min", "math.ceil", "math.ceil", "numpy.isnan", "numpy.isnan", "numpy.array", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten", "torch.rand", "torch.rand", "torch.rand", "math.cos", "math.sin", "math.cos", "min", "max", "min", "torch.rand", "math.sin", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.gaussian", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.gaussian", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "angle", "=", "self", ".", "rangle", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "grad_angle", "=", "angle", "*", "math", ".", "pi", "/", "180", "\n", "scale", "=", "1", "+", "self", ".", "rscale", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "transx", "=", "self", ".", "rtrans", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "transy", "=", "self", ".", "rtrans", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "\n", "img", "=", "input", "[", "'img'", "]", "\n", "size", "=", "img", ".", "size", "\n", "h", ",", "w", "=", "size", "[", "0", "]", ",", "size", "[", "1", "]", "\n", "centerX", ",", "centerY", "=", "int", "(", "w", "/", "2", ")", ",", "int", "(", "h", "/", "2", ")", "\n", "\n", "# perform rotation", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ",", "Image", ".", "BICUBIC", ")", "\n", "# perform translation", "\n", "img", "=", "img", ".", "transform", "(", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "transx", ",", "0", ",", "1", ",", "transy", ")", ")", "\n", "# perform scaling", "\n", "img", "=", "img", ".", "resize", "(", "(", "int", "(", "math", ".", "ceil", "(", "scale", "*", "h", ")", ")", ",", "int", "(", "math", ".", "ceil", "(", "scale", "*", "w", ")", ")", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "self", ".", "ix", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "self", ".", "ix", ")", "/", "2.", ")", ")", "\n", "input", "[", "'img'", "]", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "ix", ",", "y1", "+", "self", ".", "iy", ")", ")", "\n", "\n", "if", "(", "np", ".", "sum", "(", "input", "[", "'loc'", "]", ")", "!=", "0", ")", ":", "\n", "\n", "            ", "occ", "=", "input", "[", "'occ'", "]", "\n", "loc", "=", "input", "[", "'loc'", "]", "\n", "newloc", "=", "np", ".", "ones", "(", "(", "3", ",", "loc", ".", "shape", "[", "1", "]", "+", "1", ")", ")", "\n", "newloc", "[", "0", ":", "2", ",", "0", ":", "loc", ".", "shape", "[", "1", "]", "]", "=", "loc", "\n", "newloc", "[", "0", ",", "loc", ".", "shape", "[", "1", "]", "]", "=", "centerY", "\n", "newloc", "[", "1", ",", "loc", ".", "shape", "[", "1", "]", "]", "=", "centerX", "\n", "\n", "trans_matrix", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "-", "1", "*", "transx", "]", ",", "[", "0", ",", "1", ",", "-", "1", "*", "transy", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "scale_matrix", "=", "np", ".", "array", "(", "[", "[", "scale", ",", "0", ",", "0", "]", ",", "[", "0", ",", "scale", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "angle_matrix", "=", "np", ".", "array", "(", "[", "[", "math", ".", "cos", "(", "grad_angle", ")", ",", "math", ".", "sin", "(", "grad_angle", ")", ",", "0", "]", ",", "[", "-", "math", ".", "sin", "(", "grad_angle", ")", ",", "math", ".", "cos", "(", "grad_angle", ")", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n", "# perform rotation", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "-", "centerY", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "-", "centerX", "\n", "newloc", "=", "np", ".", "dot", "(", "angle_matrix", ",", "newloc", ")", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "+", "centerY", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "+", "centerX", "\n", "# perform translation", "\n", "newloc", "=", "np", ".", "dot", "(", "trans_matrix", ",", "newloc", ")", "\n", "# perform scaling", "\n", "newloc", "=", "np", ".", "dot", "(", "scale_matrix", ",", "newloc", ")", "\n", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "-", "y1", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "-", "x1", "\n", "input", "[", "'loc'", "]", "=", "newloc", "[", "0", ":", "2", ",", ":", "]", "\n", "\n", "for", "i", "in", "range", "(", "input", "[", "'loc'", "]", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "~", "(", "(", "input", "[", "'loc'", "]", "[", "0", ",", "i", "]", "==", "np", ".", "nan", ")", "&", "(", "input", "[", "'loc'", "]", "[", "1", ",", "i", "]", "==", "np", ".", "nan", ")", ")", ":", "\n", "                    ", "if", "(", "(", "input", "[", "'loc'", "]", "[", "0", ",", "i", "]", "<", "0", ")", "|", "(", "input", "[", "'loc'", "]", "[", "0", ",", "i", "]", ">", "self", ".", "iy", ")", "|", "(", "input", "[", "'loc'", "]", "[", "1", ",", "i", "]", "<", "0", ")", "|", "(", "input", "[", "'loc'", "]", "[", "1", ",", "i", "]", ">", "self", ".", "ix", ")", ")", ":", "\n", "                        ", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", "=", "np", ".", "nan", "\n", "input", "[", "'occ'", "]", "[", "i", "]", "=", "0", "\n", "\n", "# generate heatmaps", "\n", "", "", "", "", "input", "[", "'tgt'", "]", "=", "np", ".", "zeros", "(", "(", "self", ".", "nlandmark", "+", "1", ",", "self", ".", "ox", ",", "self", ".", "oy", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "nlandmark", ")", ":", "\n", "            ", "if", "(", "not", "np", ".", "isnan", "(", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", "[", "0", "]", ")", "and", "not", "np", ".", "isnan", "(", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", "[", "1", "]", ")", ")", ":", "\n", "                ", "tmp", "=", "self", ".", "utils", ".", "gaussian", "(", "np", ".", "array", "(", "[", "self", ".", "ix", ",", "self", ".", "iy", "]", ")", ",", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", ",", "self", ".", "gauss", ")", "\n", "scaled_tmp", "=", "sp", ".", "misc", ".", "imresize", "(", "tmp", ",", "[", "self", ".", "ox", ",", "self", ".", "oy", "]", ")", "\n", "scaled_tmp", "=", "(", "scaled_tmp", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "/", "(", "max", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "scaled_tmp", "=", "np", ".", "zeros", "(", "[", "self", ".", "ox", ",", "self", ".", "oy", "]", ")", "\n", "", "input", "[", "'tgt'", "]", "[", "i", "]", "=", "scaled_tmp", "\n", "\n", "", "tmp", "=", "self", ".", "utils", ".", "gaussian", "(", "np", ".", "array", "(", "[", "self", ".", "iy", ",", "self", ".", "ix", "]", ")", ",", "input", "[", "'loc'", "]", "[", ":", ",", "-", "1", "]", ",", "4", "*", "self", ".", "gauss", ")", "\n", "scaled_tmp", "=", "sp", ".", "misc", ".", "imresize", "(", "tmp", ",", "[", "self", ".", "ox", ",", "self", ".", "oy", "]", ")", "\n", "scaled_tmp", "=", "(", "scaled_tmp", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "/", "(", "max", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "\n", "input", "[", "'tgt'", "]", "[", "self", ".", "nlandmark", "]", "=", "scaled_tmp", "\n", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.AffineCropNGenerateHeatmap.__init__": [[361, 376], ["transforms.ToHeatmaps"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_resolution", ",", "heatmap_resolution", ",", "\n", "rangle", "=", "0", ",", "rscale", "=", "0", ",", "rtrans", "=", "0", ",", "gauss", "=", "1", ",", "keep_landmarks_visible", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "rangle", "=", "rangle", "\n", "self", ".", "rscale", "=", "rscale", "\n", "self", ".", "rtrans", "=", "rtrans", "\n", "# self.nlandmark = nlandmark", "\n", "self", ".", "image_resolution", "=", "image_resolution", "\n", "self", ".", "ix", "=", "image_resolution", "[", "0", "]", "\n", "self", ".", "iy", "=", "image_resolution", "[", "1", "]", "\n", "# self.ox = heatmap_resolution[0]", "\n", "# self.oy = heatmap_resolution[1]", "\n", "self", ".", "gauss", "=", "gauss", "\n", "self", ".", "keep_landmarks_visible", "=", "keep_landmarks_visible", "\n", "self", ".", "toHeatmaps", "=", "ToHeatmaps", "(", "heatmap_resolution", ",", "gauss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.AffineCropNGenerateHeatmap.__call__": [[377, 508], ["numpy.hstack", "torch.cat", "torch.cat", "input[].clone", "input[].clone", "transforms.AffineCropNGenerateHeatmap.__call__._transform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "def", "_just_resize", "(", ")", ":", "\n", "            ", "img", "=", "input", "[", "'img'", "]", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "\n", "# perform scaling", "\n", "input", "[", "'img'", "]", "=", "img", ".", "resize", "(", "(", "self", ".", "ix", ",", "self", ".", "iy", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "if", "np", ".", "sum", "(", "input", "[", "'loc'", "]", ")", "!=", "0", ":", "\n", "                ", "loc", "=", "input", "[", "'loc'", "]", "\n", "loc", "[", "0", ",", ":", "]", "=", "loc", "[", "0", ",", ":", "]", "*", "self", ".", "ix", "/", "w", "\n", "loc", "[", "1", ",", ":", "]", "=", "loc", "[", "1", ",", ":", "]", "*", "self", ".", "iy", "/", "h", "\n", "input", "[", "'loc'", "]", "=", "loc", "\n", "\n", "", "", "def", "_transform", "(", ")", ":", "\n", "            ", "angle", "=", "self", ".", "rangle", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "grad_angle", "=", "angle", "*", "math", ".", "pi", "/", "180", "\n", "scale", "=", "1", "+", "self", ".", "rscale", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "transx", "=", "self", ".", "rtrans", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "transy", "=", "self", ".", "rtrans", "*", "(", "2", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", "-", "1", ")", "\n", "\n", "img", "=", "input", "[", "'img'", "]", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "centerX", ",", "centerY", "=", "w", "//", "2", ",", "h", "//", "2", "\n", "\n", "# perform rotation", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ",", "Image", ".", "BICUBIC", ")", "\n", "# perform translation", "\n", "img", "=", "img", ".", "transform", "(", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "\n", "(", "1", ",", "0", ",", "transx", ",", "0", ",", "1", ",", "transy", ")", ")", "\n", "# perform scaling", "\n", "img", "=", "img", ".", "resize", "(", "(", "int", "(", "math", ".", "ceil", "(", "scale", "*", "h", ")", ")", ",", "\n", "int", "(", "math", ".", "ceil", "(", "scale", "*", "w", ")", ")", ")", ",", "\n", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "round", "(", "(", "w", "-", "self", ".", "ix", ")", "//", "2", ")", "\n", "y1", "=", "round", "(", "(", "h", "-", "self", ".", "iy", ")", "//", "2", ")", "\n", "input", "[", "'img'", "]", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "ix", ",", "y1", "+", "self", ".", "iy", ")", ")", "\n", "\n", "if", "np", ".", "sum", "(", "input", "[", "'loc'", "]", ")", "!=", "0", ":", "\n", "                ", "loc", "=", "input", "[", "'loc'", "]", "\n", "\n", "newloc", "=", "np", ".", "ones", "(", "(", "3", ",", "loc", ".", "shape", "[", "1", "]", ")", ")", "\n", "newloc", "[", "0", ":", "2", ",", ":", "]", "=", "loc", "\n", "# newloc = np.ones((3, loc.shape[1]+1))", "\n", "# newloc[0:2, 0:loc.shape[1]] = loc", "\n", "# newloc[0, loc.shape[1]] = centerY", "\n", "# newloc[1, loc.shape[1]] = centerX", "\n", "\n", "trans_matrix", "=", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "-", "1", "*", "transx", "]", ",", "[", "0", ",", "1", ",", "-", "1", "*", "transy", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "scale_matrix", "=", "np", ".", "array", "(", "[", "[", "scale", ",", "0", ",", "0", "]", ",", "[", "0", ",", "scale", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "angle_matrix", "=", "np", ".", "array", "(", "[", "\n", "[", "math", ".", "cos", "(", "grad_angle", ")", ",", "math", ".", "sin", "(", "grad_angle", ")", ",", "0", "]", ",", "\n", "[", "-", "math", ".", "sin", "(", "grad_angle", ")", ",", "math", ".", "cos", "(", "grad_angle", ")", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n", "# perform rotation", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "-", "centerY", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "-", "centerX", "\n", "newloc", "=", "np", ".", "dot", "(", "angle_matrix", ",", "newloc", ")", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "+", "centerY", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "+", "centerX", "\n", "# perform translation", "\n", "newloc", "=", "np", ".", "dot", "(", "trans_matrix", ",", "newloc", ")", "\n", "# perform scaling", "\n", "newloc", "=", "np", ".", "dot", "(", "scale_matrix", ",", "newloc", ")", "\n", "\n", "newloc", "[", "0", ",", ":", "]", "=", "newloc", "[", "0", ",", ":", "]", "-", "y1", "\n", "newloc", "[", "1", ",", ":", "]", "=", "newloc", "[", "1", ",", ":", "]", "-", "x1", "\n", "input", "[", "'loc'", "]", "=", "newloc", "[", "0", ":", "2", ",", ":", "]", "\n", "\n", "for", "i", "in", "range", "(", "input", "[", "'loc'", "]", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "if", "not", "np", ".", "isnan", "(", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", ")", ".", "any", "(", ")", ":", "\n", "                        ", "if", "np", ".", "any", "(", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", "<", "0", ")", "or", "input", "[", "'loc'", "]", "[", "0", ",", "i", "]", ">", "self", ".", "iy", "or", "input", "[", "'loc'", "]", "[", "1", ",", "i", "]", ">", "self", ".", "ix", ":", "\n", "                            ", "input", "[", "'loc'", "]", "[", ":", ",", "i", "]", "=", "np", ".", "nan", "\n", "# TODO: fill the surrounding with normal noise", "\n", "input", "[", "'occ'", "]", "[", "0", ",", "i", "]", "=", "0", "\n", "\n", "# FIXME: create multiple images for the same sample with different occluded blocks for testing purposes", "\n", "# input['im'][:, 10:40, 22:50] = 0", "\n", "\n", "# adding one more at the end for the center landmark", "\n", "# add the center of image as the last landmark", "\n", "", "", "", "", "", "h", ",", "w", "=", "input", "[", "'img'", "]", ".", "size", "\n", "input", "[", "'loc'", "]", "=", "np", ".", "hstack", "(", "(", "input", "[", "'loc'", "]", ",", "np", ".", "array", "(", "[", "[", "w", "//", "2", "]", ",", "[", "h", "//", "2", "]", "]", ")", ")", ")", "\n", "\n", "input", "[", "'occ'", "]", "=", "torch", ".", "cat", "(", "(", "input", "[", "'occ'", "]", ",", "torch", ".", "ByteTensor", "(", "[", "[", "1", "]", "]", ")", ")", ",", "1", ")", "\n", "input", "[", "'mask'", "]", "=", "torch", ".", "cat", "(", "(", "input", "[", "'mask'", "]", ",", "torch", ".", "ByteTensor", "(", "[", "[", "1", "]", "]", ")", ")", ",", "1", ")", "\n", "orig_img", "=", "input", "[", "'img'", "]", "\n", "orig_loc", "=", "input", "[", "'loc'", "]", "\n", "orig_occ", "=", "input", "[", "'occ'", "]", ".", "clone", "(", ")", "\n", "orig_mask", "=", "input", "[", "'mask'", "]", ".", "clone", "(", ")", "\n", "\n", "_transform", "(", ")", "\n", "\n", "if", "self", ".", "keep_landmarks_visible", ":", "\n", "# train: making sure all landmarks are still visible, if not perform", "\n", "#        another transformation", "\n", "            ", "mask", "=", "input", "[", "'mask'", "]", "\n", "mask2D", "=", "torch", ".", "cat", "(", "(", "mask", ",", "mask", ")", ",", "dim", "=", "0", ")", "\n", "landmarks", "=", "torch", ".", "from_numpy", "(", "input", "[", "'loc'", "]", ")", "\n", "limit", "=", "100", "\n", "while", "not", "(", "mask", "==", "mask", "*", "input", "[", "'occ'", "]", ")", ".", "all", "(", ")", "or", "utils", ".", "isnan", "(", "landmarks", "[", "mask2D", "]", ")", ".", "any", "(", ")", ":", "\n", "                ", "input", "[", "'img'", "]", "=", "orig_img", "\n", "input", "[", "'loc'", "]", "=", "orig_loc", "\n", "input", "[", "'occ'", "]", "=", "orig_occ", ".", "clone", "(", ")", "\n", "input", "[", "'mask'", "]", "=", "orig_mask", ".", "clone", "(", ")", "\n", "\n", "_transform", "(", ")", "\n", "\n", "mask", "=", "input", "[", "'mask'", "]", "\n", "mask2D", "=", "torch", ".", "cat", "(", "(", "mask", ",", "mask", ")", ",", "dim", "=", "0", ")", "\n", "landmarks", "=", "torch", ".", "from_numpy", "(", "input", "[", "'loc'", "]", ")", "\n", "\n", "limit", "-=", "1", "\n", "if", "limit", "==", "0", ":", "\n", "                    ", "input", "[", "'img'", "]", "=", "orig_img", "\n", "input", "[", "'loc'", "]", "=", "orig_loc", "\n", "input", "[", "'occ'", "]", "=", "orig_occ", ".", "clone", "(", ")", "\n", "input", "[", "'mask'", "]", "=", "orig_mask", ".", "clone", "(", ")", "\n", "_just_resize", "(", ")", "\n", "print", "(", "'using the orignal data because even after 100 transformation, there are still occluded landmarks!!!'", ")", "\n", "break", "\n", "\n", "", "", "", "input", "[", "'tgt'", "]", "=", "self", ".", "toHeatmaps", "(", "input", "[", "'loc'", "]", ",", "self", ".", "image_resolution", ")", "\n", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.MakePartialBlockage.__init__": [[512, 518], ["torchvision.transforms.ToTensor", "x.rstrip", "len", "utils.readtextfile"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readtextfile"], ["    ", "def", "__init__", "(", "self", ",", "filler_images", ",", "block_sizes", "=", "[", "25", ",", "35", ",", "45", ",", "55", ",", "65", ",", "75", ",", "85", ",", "95", ",", "105", ",", "115", "]", ")", ":", "\n", "\n", "        ", "self", ".", "block_sizes", "=", "block_sizes", "\n", "self", ".", "toTensor", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "self", ".", "filler_image_list", "=", "[", "x", ".", "rstrip", "(", "'\\n'", ")", "for", "x", "in", "utils", ".", "readtextfile", "(", "filler_images", ")", "]", "\n", "assert", "(", "len", "(", "self", ".", "filler_image_list", ")", ">", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.MakePartialBlockage._make_copy": [[519, 524], ["sample.keys", "sample[].clone"], "methods", ["None"], ["", "def", "_make_copy", "(", "self", ",", "sample", ")", ":", "\n", "        ", "newSample", "=", "{", "}", "\n", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "newSample", "[", "key", "]", "=", "sample", "[", "key", "]", ".", "clone", "(", ")", "\n", "", "return", "newSample", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.MakePartialBlockage.__call__": [[525, 586], ["torch.is_tensor", "range", "sample.keys", "[].max", "[].min", "[].max", "[].min", "transforms.MakePartialBlockage.toTensor", "int", "int", "int", "int", "range", "len", "new_sample_list.append", "range", "torch.stack", "datasets.loaders.loader_image", "slice", "slice", "min", "min", "slice", "slice", "transforms.MakePartialBlockage.__call__._transform"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.loaders.loader_image"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "assert", "(", "torch", ".", "is_tensor", "(", "sample", "[", "'img'", "]", ")", ")", "\n", "\n", "def", "_transform", "(", "newSample", ")", ":", "\n", "            ", "occ", "=", "newSample", "[", "'occ'", "]", "\n", "loc", "=", "newSample", "[", "'loc'", "]", "\n", "img_size_h", "=", "newSample", "[", "'img'", "]", ".", "shape", "[", "1", "]", "\n", "img_size_w", "=", "newSample", "[", "'img'", "]", ".", "shape", "[", "2", "]", "\n", "\n", "x_max", "=", "loc", "[", "0", "]", "[", "occ", "]", ".", "max", "(", ")", "\n", "x_min", "=", "loc", "[", "0", "]", "[", "occ", "]", ".", "min", "(", ")", "\n", "y_max", "=", "loc", "[", "1", "]", "[", "occ", "]", ".", "max", "(", ")", "\n", "y_min", "=", "loc", "[", "1", "]", "[", "occ", "]", ".", "min", "(", ")", "\n", "\n", "# pick a random filler image", "\n", "filler_image", "=", "self", ".", "toTensor", "(", "loaders", ".", "loader_image", "(", "\n", "self", ".", "filler_image_list", "[", "\n", "int", "(", "len", "(", "self", ".", "filler_image_list", ")", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", ")", "]", ")", ")", "\n", "filler_image_slice_y", "=", "int", "(", "\n", "(", "filler_image", ".", "shape", "[", "1", "]", "-", "block_size", "[", "0", "]", ")", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", ")", "\n", "filler_image_slice_x", "=", "int", "(", "\n", "(", "filler_image", ".", "shape", "[", "2", "]", "-", "block_size", "[", "1", "]", ")", "*", "torch", ".", "rand", "(", "1", ")", "[", "0", "]", ")", "\n", "\n", "filler_slices", "=", "[", "slice", "(", "filler_image_slice_y", ",", "\n", "filler_image_slice_y", "+", "block_size", "[", "0", "]", ")", ",", "\n", "slice", "(", "filler_image_slice_x", ",", "\n", "filler_image_slice_x", "+", "block_size", "[", "1", "]", ")", "]", "\n", "\n", "loc_idx", "=", "2", "\n", "block_pos_x", "=", "int", "(", "min", "(", "max", "(", "0", ",", "loc", "[", "0", "]", "[", "occ", "]", "[", "loc_idx", "]", "-", "block_size", "[", "1", "]", "/", "2", ")", ",", "(", "img_size_w", "-", "block_size", "[", "1", "]", ")", ")", ")", "\n", "block_pos_y", "=", "int", "(", "min", "(", "max", "(", "0", ",", "loc", "[", "1", "]", "[", "occ", "]", "[", "loc_idx", "]", "-", "block_size", "[", "0", "]", "/", "2", ")", ",", "(", "img_size_h", "-", "block_size", "[", "0", "]", ")", ")", ")", "\n", "slices", "=", "[", "slice", "(", "block_pos_y", ",", "block_pos_y", "+", "block_size", "[", "0", "]", ")", ",", "\n", "slice", "(", "block_pos_x", ",", "block_pos_x", "+", "block_size", "[", "1", "]", ")", "]", "\n", "\n", "newSample", "[", "'img'", "]", "[", ":", ",", "slices", "[", "0", "]", ",", "slices", "[", "1", "]", "]", "=", "filler_image", "[", ":", ",", "\n", "filler_slices", "[", "0", "]", ",", "\n", "filler_slices", "[", "1", "]", "]", "\n", "\n", "for", "i", "in", "range", "(", "newSample", "[", "'loc'", "]", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "block_pos_x", "<=", "newSample", "[", "'loc'", "]", "[", "0", ",", "i", "]", "<=", "block_pos_x", "+", "block_size", "[", "1", "]", "and", "block_pos_y", "<=", "newSample", "[", "'loc'", "]", "[", "\n", "1", ",", "i", "]", "<=", "block_pos_y", "+", "block_size", "[", "0", "]", ":", "\n", "                    ", "newSample", "[", "'loc'", "]", "[", ":", ",", "i", "]", "=", "np", ".", "nan", "\n", "newSample", "[", "'occ'", "]", "[", "0", ",", "i", "]", "=", "0", "\n", "newSample", "[", "'tgt'", "]", "[", "i", ",", ":", ",", ":", "]", "=", "0", "\n", "", "", "return", "newSample", "\n", "\n", "", "new_sample_list", "=", "[", "sample", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "block_sizes", ")", ")", ":", "\n", "            ", "block_size", "=", "[", "self", ".", "block_sizes", "[", "i", "]", ",", "self", ".", "block_sizes", "[", "i", "]", "]", "# (h, w)", "\n", "new_sample_list", ".", "append", "(", "_transform", "(", "self", ".", "_make_copy", "(", "sample", ")", ")", ")", "\n", "\n", "", "new_sample", "=", "{", "}", "\n", "for", "key", "in", "sample", ".", "keys", "(", ")", ":", "\n", "            ", "values", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "new_sample_list", ")", ")", ":", "\n", "                ", "values", ".", "append", "(", "new_sample_list", "[", "i", "]", "[", "key", "]", ")", "\n", "", "new_sample", "[", "key", "]", "=", "torch", ".", "stack", "(", "values", ")", "\n", "\n", "", "return", "new_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToHeatmaps.__init__": [[597, 604], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "resolution", ",", "gauss", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n            Args:\n                resolution: The resoultion ( H x W ) of generated heatmap.\n        \"\"\"", "\n", "self", ".", "resolution", "=", "resolution", "\n", "self", ".", "gauss", "=", "gauss", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToHeatmaps.__call__": [[605, 643], ["numpy.zeros", "range", "utils.gaussian", "scipy.misc.imresize", "torch.from_numpy", "numpy.array", "numpy.isnan().any", "utils.gaussian", "scipy.misc.imresize", "numpy.zeros", "min", "max", "min", "numpy.array", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.isnan", "min", "max", "min", "numpy.zeros.flatten", "numpy.zeros.flatten", "numpy.zeros.flatten"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.gaussian", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.gaussian", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.isnan"], ["", "def", "__call__", "(", "self", ",", "landmarks", ",", "input_resolution", ")", ":", "\n", "        ", "\"\"\"\n            Returns a Tensor which contains the generated heatmaps\n            of all elements in the :attr:`landmarks` tensor.\n\n        Args:\n            landmarks (ndarray): ndarray ( 2 x N ) contains N two dimensional\n            landmarks.\n            input_resolution: resolution ( H x W ) is the resoultion/dimension\n            in which the landmarks are given.\n\n        Returns:\n            Tensor: The generated heatmaps ( N x outputH x outputW ).\n        \"\"\"", "\n", "self", ".", "inputH", "=", "input_resolution", "[", "0", "]", "\n", "self", ".", "inputW", "=", "input_resolution", "[", "1", "]", "\n", "self", ".", "outputH", "=", "self", ".", "resolution", "[", "0", "]", "\n", "self", ".", "outputW", "=", "self", ".", "resolution", "[", "1", "]", "\n", "heatmaps", "=", "np", ".", "zeros", "(", "(", "landmarks", ".", "shape", "[", "1", "]", ",", "self", ".", "outputH", ",", "self", ".", "outputW", ")", ")", "\n", "for", "i", "in", "range", "(", "landmarks", ".", "shape", "[", "1", "]", "-", "1", ")", ":", "\n", "            ", "if", "not", "np", ".", "isnan", "(", "landmarks", "[", ":", ",", "i", "]", ")", ".", "any", "(", ")", ":", "\n", "                ", "tmp", "=", "utils", ".", "gaussian", "(", "np", ".", "array", "(", "[", "self", ".", "inputH", ",", "self", ".", "inputW", "]", ")", ",", "\n", "landmarks", "[", ":", ",", "i", "]", ",", "self", ".", "gauss", ")", "\n", "scaled_tmp", "=", "sp", ".", "misc", ".", "imresize", "(", "tmp", ",", "[", "self", ".", "outputH", ",", "self", ".", "outputW", "]", ")", "\n", "scaled_tmp", "=", "(", "scaled_tmp", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "/", "(", "\n", "max", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "scaled_tmp", "=", "np", ".", "zeros", "(", "[", "self", ".", "outputH", ",", "self", ".", "outputW", "]", ")", "\n", "", "heatmaps", "[", "i", "]", "=", "scaled_tmp", "\n", "\n", "", "tmp", "=", "utils", ".", "gaussian", "(", "np", ".", "array", "(", "[", "self", ".", "inputH", ",", "self", ".", "inputW", "]", ")", ",", "\n", "landmarks", "[", ":", ",", "-", "1", "]", ",", "4", "*", "self", ".", "gauss", ")", "\n", "scaled_tmp", "=", "sp", ".", "misc", ".", "imresize", "(", "tmp", ",", "[", "self", ".", "outputH", ",", "self", ".", "outputW", "]", ")", "\n", "scaled_tmp", "=", "(", "scaled_tmp", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "/", "(", "\n", "max", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", "-", "min", "(", "scaled_tmp", ".", "flatten", "(", ")", ")", ")", "\n", "heatmaps", "[", "landmarks", ".", "shape", "[", "1", "]", "-", "1", "]", "=", "scaled_tmp", "\n", "\n", "return", "torch", ".", "from_numpy", "(", "heatmaps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.__init__": [[648, 651], ["torchvision.transforms.ToPILImage", "torchvision.transforms.ToTensor"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "toPILImage", "=", "torchvision", ".", "transforms", ".", "ToPILImage", "(", ")", "\n", "self", ".", "toTensor", "=", "torchvision", ".", "transforms", ".", "ToTensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss": [[703, 706], ["numpy.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "gauss", "(", "x", ",", "a", ",", "b", ",", "c", ",", "d", "=", "0", ")", ":", "\n", "        ", "return", "a", "*", "np", ".", "exp", "(", "-", "(", "x", "-", "b", ")", "**", "2", "/", "(", "2", "*", "c", "**", "2", ")", ")", "+", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.__call__": [[656, 683], ["torch.zeros", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.gauss", "input.size", "input.size", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.toTensor", "input.gt", "input.gt", "transforms.ToColorHeatmap.gt", "transforms.ToColorHeatmap.toPILImage().resize", "transforms.ToColorHeatmap.toPILImage"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss"], ["", "def", "__call__", "(", "self", ",", "input", ",", "resolution", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n            Returns a Tensor which contains landmarks for every elements in the\n            :attr:`heatmaps` tensor.\n\n        Args:\n            input (Tensor): input one-channel grayscale heatmap Tensor ( H x W )\n            resolution ( H_new , W_new ): desired output size of colored heatmap\n                                          Tensor ( 3 x H_new x W_new )\n\n        Returns:\n            Tensor: The color heatmap image Tensor ( 3 x H x W ).\n        \"\"\"", "\n", "colored_heatmap", "=", "torch", ".", "zeros", "(", "3", ",", "input", ".", "size", "(", "0", ")", ",", "input", ".", "size", "(", "1", ")", ")", "\n", "# colored_heatmap[1] = self.gauss(input, .5, .6, .2) + self.gauss(input, 1, .8, .3)", "\n", "# colored_heatmap[0] = self.gauss(input, 1, .5, .3)", "\n", "# colored_heatmap[2] = self.gauss(input, 1, .2, .3)", "\n", "colored_heatmap", "[", "1", "]", "=", "self", ".", "gauss", "(", "input", ",", "0.7", ",", "1", ",", "0.4", ")", "\n", "colored_heatmap", "[", "0", "]", "=", "self", ".", "gauss", "(", "input", ",", "1", ",", "1", ",", "0.001", ")", "+", "self", ".", "gauss", "(", "input", ",", "0.7", ",", "1", ",", "0.4", ")", "\n", "colored_heatmap", "[", "2", "]", "=", "self", ".", "gauss", "(", "input", ",", "0.3", ",", "1", ",", "0.4", ")", "\n", "colored_heatmap", "[", "1", "]", "[", "input", ".", "gt", "(", "0.99", ")", "]", "=", "0", "\n", "colored_heatmap", "[", "2", "]", "[", "input", ".", "gt", "(", "0.99", ")", "]", "=", "0", "\n", "colored_heatmap", "[", "colored_heatmap", ".", "gt", "(", "1", ")", "]", "=", "1", "\n", "if", "resolution", ":", "\n", "            ", "colored_heatmap", "=", "self", ".", "toTensor", "(", "\n", "self", ".", "toPILImage", "(", "colored_heatmap", ")", ".", "resize", "(", "resolution", ")", ")", "\n", "", "return", "colored_heatmap", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy": [[685, 693], ["torch.is_tensor", "tensor.cpu().numpy", "ValueError", "tensor.cpu", "type", "type"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "to_numpy", "(", "tensor", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "tensor", ")", ":", "\n", "            ", "return", "tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "elif", "type", "(", "tensor", ")", ".", "__module__", "!=", "'numpy'", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot convert {} to numpy array\"", "\n", ".", "format", "(", "type", "(", "tensor", ")", ")", ")", "\n", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_torch": [[694, 702], ["torch.from_numpy", "type", "torch.is_tensor", "ValueError", "type"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "to_torch", "(", "ndarray", ")", ":", "\n", "        ", "if", "type", "(", "ndarray", ")", ".", "__module__", "==", "'numpy'", ":", "\n", "            ", "return", "torch", ".", "from_numpy", "(", "ndarray", ")", "\n", "", "elif", "not", "torch", ".", "is_tensor", "(", "ndarray", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot convert {} to torch tensor\"", "\n", ".", "format", "(", "type", "(", "ndarray", ")", ")", ")", "\n", "", "return", "ndarray", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.color_heatmap": [[707, 717], ["transforms.ToColorHeatmap.to_numpy", "numpy.zeros", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.gauss", "transforms.ToColorHeatmap.gauss"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.gauss"], ["", "@", "staticmethod", "\n", "def", "color_heatmap", "(", "x", ")", ":", "\n", "        ", "x", "=", "ToColorHeatmap", ".", "to_numpy", "(", "x", ")", "\n", "color", "=", "np", ".", "zeros", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "3", ")", ")", "\n", "color", "[", ":", ",", ":", ",", "0", "]", "=", "ToColorHeatmap", ".", "gauss", "(", "x", ",", ".5", ",", ".6", ",", ".2", ")", "+", "ToColorHeatmap", ".", "gauss", "(", "x", ",", "1", ",", ".8", ",", ".3", ")", "\n", "color", "[", ":", ",", ":", ",", "1", "]", "=", "ToColorHeatmap", ".", "gauss", "(", "x", ",", "1", ",", ".5", ",", ".3", ")", "\n", "color", "[", ":", ",", ":", ",", "2", "]", "=", "ToColorHeatmap", ".", "gauss", "(", "x", ",", "1", ",", ".2", ",", ".3", ")", "\n", "color", "[", "color", ">", "1", "]", "=", "1", "\n", "color", "=", "(", "color", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.sample_with_heatmap": [[718, 755], ["transforms.ToColorHeatmap.to_numpy", "transforms.ToColorHeatmap.to_numpy", "numpy.zeros", "range", "int", "numpy.zeros", "scipy.misc.imresize", "enumerate", "numpy.arange", "numpy.ceil", "scipy.misc.imresize", "transforms.ToColorHeatmap.color_heatmap", "scipy.misc.imresize.astype", "scipy.misc.imresize.copy", "float", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.color_heatmap"], ["", "@", "staticmethod", "\n", "def", "sample_with_heatmap", "(", "inp", ",", "out", ",", "num_rows", "=", "2", ",", "parts_to_show", "=", "None", ")", ":", "\n", "        ", "inp", "=", "ToColorHeatmap", ".", "to_numpy", "(", "inp", "*", "255", ")", "\n", "out", "=", "ToColorHeatmap", ".", "to_numpy", "(", "out", ")", "\n", "\n", "img", "=", "np", ".", "zeros", "(", "(", "inp", ".", "shape", "[", "1", "]", ",", "inp", ".", "shape", "[", "2", "]", ",", "inp", ".", "shape", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "            ", "img", "[", ":", ",", ":", ",", "i", "]", "=", "inp", "[", "i", ",", ":", ",", ":", "]", "\n", "\n", "", "if", "parts_to_show", "is", "None", ":", "\n", "            ", "parts_to_show", "=", "np", ".", "arange", "(", "out", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Generate a single image to display input/output pair", "\n", "", "num_cols", "=", "int", "(", "np", ".", "ceil", "(", "float", "(", "len", "(", "parts_to_show", ")", ")", "/", "num_rows", ")", ")", "\n", "size", "=", "img", ".", "shape", "[", "0", "]", "//", "num_rows", "\n", "\n", "full_img", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "size", "*", "(", "num_cols", "+", "num_rows", ")", ",", "3", ")", ",", "\n", "np", ".", "uint8", ")", "\n", "full_img", "[", ":", "img", ".", "shape", "[", "0", "]", ",", ":", "img", ".", "shape", "[", "1", "]", "]", "=", "img", "\n", "\n", "inp_small", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "size", ",", "size", "]", ")", "\n", "\n", "# Set up heatmap display for each part", "\n", "for", "i", ",", "part", "in", "enumerate", "(", "parts_to_show", ")", ":", "\n", "            ", "part_idx", "=", "part", "\n", "out_resized", "=", "scipy", ".", "misc", ".", "imresize", "(", "out", "[", "part_idx", "]", ",", "[", "size", ",", "size", "]", ")", "\n", "out_resized", "=", "out_resized", ".", "astype", "(", "float", ")", "/", "255", "\n", "out_img", "=", "inp_small", ".", "copy", "(", ")", "*", ".3", "\n", "color_hm", "=", "ToColorHeatmap", ".", "color_heatmap", "(", "out_resized", ")", "\n", "out_img", "+=", "color_hm", "*", ".7", "\n", "\n", "col_offset", "=", "(", "i", "%", "num_cols", "+", "num_rows", ")", "*", "size", "\n", "row_offset", "=", "(", "i", "//", "num_cols", ")", "*", "size", "\n", "full_img", "[", "row_offset", ":", "row_offset", "+", "size", ",", "\n", "col_offset", ":", "col_offset", "+", "size", "]", "=", "out_img", "\n", "\n", "", "return", "full_img", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.sample_with_heatmap_and_blockage": [[756, 799], ["transforms.ToColorHeatmap.to_numpy", "transforms.ToColorHeatmap.to_numpy", "transforms.ToColorHeatmap.to_numpy", "range", "numpy.zeros", "range", "int", "numpy.zeros", "scipy.misc.imresize", "enumerate", "numpy.arange", "numpy.ceil", "scipy.misc.imresize", "transforms.ToColorHeatmap.color_heatmap", "scipy.misc.imresize.astype", "scipy.misc.imresize.copy", "float", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.to_numpy", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToColorHeatmap.color_heatmap"], ["", "@", "staticmethod", "\n", "def", "sample_with_heatmap_and_blockage", "(", "inputs", ",", "targets", ",", "predictions", ",", "num_rows", "=", "1", ",", "parts_to_show", "=", "None", ")", ":", "\n", "        ", "inputs", "=", "ToColorHeatmap", ".", "to_numpy", "(", "inputs", "*", "255", ")", "\n", "targets", "=", "ToColorHeatmap", ".", "to_numpy", "(", "targets", ")", "\n", "predictions", "=", "ToColorHeatmap", ".", "to_numpy", "(", "predictions", ")", "\n", "\n", "number_of_blocks", "=", "inputs", ".", "shape", "[", "0", "]", "\n", "for", "block_idx", "in", "range", "(", "number_of_blocks", ")", ":", "\n", "            ", "inp", "=", "inputs", "[", "block_idx", ",", "]", "\n", "out", "=", "predictions", "[", "block_idx", ",", "]", "\n", "\n", "img", "=", "np", ".", "zeros", "(", "(", "inp", ".", "shape", "[", "1", "]", ",", "inp", ".", "shape", "[", "2", "]", ",", "inp", ".", "shape", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "                ", "img", "[", ":", ",", ":", ",", "i", "]", "=", "inp", "[", "i", ",", ":", ",", ":", "]", "\n", "\n", "", "if", "parts_to_show", "is", "None", ":", "\n", "                ", "parts_to_show", "=", "np", ".", "arange", "(", "out", ".", "shape", "[", "0", "]", ")", "\n", "\n", "# Generate a single image to display input/output pair", "\n", "", "num_cols", "=", "int", "(", "np", ".", "ceil", "(", "float", "(", "len", "(", "parts_to_show", ")", ")", "/", "num_rows", ")", ")", "\n", "size", "=", "img", ".", "shape", "[", "0", "]", "//", "num_rows", "\n", "\n", "full_img", "=", "np", ".", "zeros", "(", "(", "img", ".", "shape", "[", "0", "]", ",", "size", "*", "(", "num_cols", "+", "num_rows", ")", ",", "3", ")", ",", "\n", "np", ".", "uint8", ")", "\n", "full_img", "[", ":", "img", ".", "shape", "[", "0", "]", ",", ":", "img", ".", "shape", "[", "1", "]", "]", "=", "img", "\n", "\n", "inp_small", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "[", "size", ",", "size", "]", ")", "\n", "\n", "# Set up heatmap display for each part", "\n", "for", "i", ",", "part", "in", "enumerate", "(", "parts_to_show", ")", ":", "\n", "                ", "part_idx", "=", "part", "\n", "out_resized", "=", "scipy", ".", "misc", ".", "imresize", "(", "out", "[", "part_idx", "]", ",", "[", "size", ",", "size", "]", ")", "\n", "out_resized", "=", "out_resized", ".", "astype", "(", "float", ")", "/", "255", "\n", "out_img", "=", "inp_small", ".", "copy", "(", ")", "*", ".3", "\n", "color_hm", "=", "ToColorHeatmap", ".", "color_heatmap", "(", "out_resized", ")", "\n", "out_img", "+=", "color_hm", "*", ".7", "\n", "\n", "col_offset", "=", "(", "i", "%", "num_cols", "+", "num_rows", ")", "*", "size", "\n", "row_offset", "=", "(", "i", "//", "num_cols", ")", "*", "size", "\n", "full_img", "[", "row_offset", ":", "row_offset", "+", "size", ",", "\n", "col_offset", ":", "col_offset", "+", "size", "]", "=", "out_img", "\n", "\n", "", "", "return", "full_img", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToLandmarks.__init__": [[811, 819], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "resolution", "=", "None", ",", "threshold", "=", "0.1", ",", "gauss", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n            Args:\n                resolution: landmarks will be provided in this resoultion ( H x W ). If None, the\n                            heatmap resolution will be used.\n                threshold: threshold for selecting a peak\n                gauss: the width of gaussian\n        \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToLandmarks.__call__": [[820, 835], ["transforms.ToLandmarks._get_preds"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToLandmarks._get_preds"], ["", "def", "__call__", "(", "self", ",", "heatmaps", ")", ":", "\n", "        ", "\"\"\"\n            Returns a Tensor which contains landmarks for every elements in the\n            :attr:`heatmaps` tensor.\n\n        Args:\n            heatmaps (Tensor): Tensor ( N x H x W ) contains N heatmaps of size\n            ( H x W ).\n\n        Returns:\n            Tensor: The N landmarks ( 3 x N ) where where\n            the first two elements are x and y position and last element is the\n            confidence.\n        \"\"\"", "\n", "return", "self", ".", "_get_preds", "(", "heatmaps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.transforms.ToLandmarks._get_preds": [[837, 856], ["torch.max", "maxval.view.view.view", "idx.repeat().float", "maxval.view.view.gt().repeat().float", "scores.dim", "scores.view", "scores.size", "scores.size", "idx.view", "torch.floor", "scores.size", "scores.size", "scores.size", "scores.size", "idx.repeat", "scores.size", "maxval.view.view.gt().repeat", "scores.size", "maxval.view.view.gt"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_preds", "(", "scores", ")", ":", "\n", "        ", "''' get predictions from score maps in torch Tensor\n            return type: torch.LongTensor\n        '''", "\n", "assert", "scores", ".", "dim", "(", ")", "==", "4", ",", "'Score maps should be 4-dim'", "\n", "maxval", ",", "idx", "=", "torch", ".", "max", "(", "scores", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "-", "1", ")", ",", "2", ")", "\n", "\n", "maxval", "=", "maxval", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "1", ")", "\n", "idx", "=", "idx", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "scores", ".", "size", "(", "1", ")", ",", "1", ")", "+", "1", "\n", "\n", "preds", "=", "idx", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "\n", "preds", "[", ":", ",", ":", ",", "0", "]", "=", "(", "preds", "[", ":", ",", ":", ",", "0", "]", "-", "1", ")", "%", "scores", ".", "size", "(", "3", ")", "+", "1", "\n", "preds", "[", ":", ",", ":", ",", "1", "]", "=", "torch", ".", "floor", "(", "(", "preds", "[", ":", ",", ":", ",", "1", "]", "-", "1", ")", "/", "scores", ".", "size", "(", "3", ")", ")", "+", "1", "\n", "\n", "pred_mask", "=", "maxval", ".", "gt", "(", "0", ")", ".", "repeat", "(", "1", ",", "1", ",", "2", ")", ".", "float", "(", ")", "\n", "preds", "*=", "pred_mask", "\n", "return", "preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.FolderListLoader.__init__": [[47, 150], ["folderlist.make_dataset", "len", "RuntimeError", "len", "RuntimeError", "len", "len", "sklearn.utils.shuffle", "sklearn.utils.shuffle", "sklearn.utils.shuffle", "print", "range", "range", "len", "len", "len", "len", "len", "math.floor", "len", "math.floor", "len", "math.floor", "len", "math.floor", "len", "folderlist.FolderListLoader.loader_input", "len", "folderlist.FolderListLoader.loader_input", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "split_train", "=", "1.0", ",", "split_test", "=", "0.0", ",", "train", "=", "True", ",", "\n", "transform_train", "=", "None", ",", "transform_test", "=", "None", ",", "\n", "loader_input", "=", "'image'", ",", "loader_label", "=", "'torch'", ",", "prefetch", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "train", "=", "train", "\n", "self", ".", "prefetch", "=", "prefetch", "\n", "\n", "imagelist", ",", "labellist", "=", "make_dataset", "(", "ifile", ")", "\n", "if", "len", "(", "imagelist", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"No images found\"", ")", ")", "\n", "", "if", "len", "(", "labellist", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"No labels found\"", ")", ")", "\n", "\n", "", "if", "loader_input", "==", "'image'", ":", "\n", "            ", "self", ".", "loader_input", "=", "loaders", ".", "loader_image", "\n", "", "if", "loader_input", "==", "'torch'", ":", "\n", "            ", "self", ".", "loader_input", "=", "loaders", ".", "loader_torch", "\n", "", "if", "loader_input", "==", "'numpy'", ":", "\n", "            ", "self", ".", "loader_input", "=", "loaders", ".", "loader_numpy", "\n", "\n", "", "if", "loader_label", "==", "'image'", ":", "\n", "            ", "self", ".", "loader_label", "=", "loaders", ".", "loader_image", "\n", "", "if", "loader_label", "==", "'torch'", ":", "\n", "            ", "self", ".", "loader_label", "=", "loaders", ".", "loader_torch", "\n", "", "if", "loader_label", "==", "'numpy'", ":", "\n", "            ", "self", ".", "loader_label", "=", "loaders", ".", "loader_numpy", "\n", "\n", "", "self", ".", "transform_test", "=", "transform_test", "\n", "self", ".", "transform_train", "=", "transform_train", "\n", "\n", "self", ".", "split_test", "=", "split_test", "\n", "self", ".", "split_train", "=", "split_train", "\n", "\n", "if", "len", "(", "imagelist", ")", "==", "len", "(", "labellist", ")", ":", "\n", "            ", "shuffle", "(", "imagelist", ",", "labellist", ")", "\n", "\n", "", "if", "len", "(", "imagelist", ")", ">", "0", "and", "len", "(", "labellist", ")", "==", "0", ":", "\n", "            ", "shuffle", "(", "imagelist", ")", "\n", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", "and", "len", "(", "imagelist", ")", "==", "0", ":", "\n", "            ", "shuffle", "(", "labellist", ")", "\n", "\n", "", "if", "(", "self", ".", "split_train", "<", "1.0", ")", "&", "(", "self", ".", "split_train", ">", "0.0", ")", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "num", "=", "math", ".", "floor", "(", "self", ".", "split_train", "*", "len", "(", "imagelist", ")", ")", "\n", "self", ".", "images_train", "=", "imagelist", "[", "0", ":", "num", "]", "\n", "self", ".", "images_test", "=", "imagelist", "[", "num", "+", "1", ":", "len", "(", "imagelist", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "images_test", "=", "[", "]", "\n", "self", ".", "images_train", "=", "[", "]", "\n", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", ":", "\n", "                ", "num", "=", "math", ".", "floor", "(", "self", ".", "split_train", "*", "len", "(", "labellist", ")", ")", "\n", "self", ".", "labels_train", "=", "labellist", "[", "0", ":", "num", "]", "\n", "self", ".", "labels_test", "=", "labellist", "[", "num", "+", "1", ":", "len", "(", "labellist", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "labels_test", "=", "[", "]", "\n", "self", ".", "labels_train", "=", "[", "]", "\n", "\n", "", "", "if", "(", "self", ".", "split_test", "<", "1.0", ")", "&", "(", "self", ".", "split_test", ">", "0.0", ")", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "num", "=", "math", ".", "floor", "(", "self", ".", "split_test", "*", "len", "(", "imagelist", ")", ")", "\n", "self", ".", "images_train", "=", "imagelist", "[", "0", ":", "num", "]", "\n", "self", ".", "images_test", "=", "imagelist", "[", "num", "+", "1", ":", "len", "(", "imagelist", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "images_test", "=", "[", "]", "\n", "self", ".", "images_train", "=", "[", "]", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", ":", "\n", "                ", "num", "=", "math", ".", "floor", "(", "self", ".", "split_test", "*", "len", "(", "labellist", ")", ")", "\n", "self", ".", "labels_train", "=", "labellist", "[", "0", ":", "num", "]", "\n", "self", ".", "labels_test", "=", "labellist", "[", "num", "+", "1", ":", "len", "(", "labellist", ")", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "labels_test", "=", "[", "]", "\n", "self", ".", "labels_train", "=", "[", "]", "\n", "\n", "", "", "elif", "self", ".", "split_train", "==", "1.0", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "self", ".", "images_train", "=", "imagelist", "\n", "", "else", ":", "\n", "                ", "self", ".", "images_train", "=", "[", "]", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", ":", "\n", "                ", "self", ".", "labels_train", "=", "labellist", "\n", "", "else", ":", "\n", "                ", "self", ".", "labels_train", "=", "[", "]", "\n", "\n", "", "", "elif", "self", ".", "split_test", "==", "1.0", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "self", ".", "images_test", "=", "imagelist", "\n", "", "else", ":", "\n", "                ", "self", ".", "images_test", "=", "[", "]", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", ":", "\n", "                ", "self", ".", "labels_test", "=", "labellist", "\n", "", "else", ":", "\n", "                ", "self", ".", "labels_test", "=", "[", "]", "\n", "\n", "", "", "if", "self", ".", "prefetch", "is", "True", ":", "\n", "            ", "print", "(", "\"Prefetching is on, loading all data to memory\"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "images_test", ")", ")", ":", "\n", "                ", "path", "=", "self", ".", "images_test", "[", "i", "]", "\n", "self", ".", "images_test", "[", "i", "]", "=", "self", ".", "loader_input", "(", "path", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "images_train", ")", ")", ":", "\n", "                ", "path", "=", "self", ".", "images_train", "[", "i", "]", "\n", "self", ".", "images_train", "[", "i", "]", "=", "self", ".", "loader_input", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.FolderListLoader.__len__": [[151, 156], ["len", "len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", "is", "True", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_train", ")", "\n", "", "if", "self", ".", "train", "is", "False", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_test", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.FolderListLoader.__getitem__": [[157, 197], ["len", "len", "folderlist.FolderListLoader.transform_train", "len", "len", "folderlist.FolderListLoader.transform_test", "folderlist.FolderListLoader.loader_input", "folderlist.FolderListLoader.loader_input"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "train", "is", "True", ":", "\n", "            ", "if", "len", "(", "self", ".", "images_train", ")", ">", "0", ":", "\n", "                ", "if", "self", ".", "prefetch", "is", "True", ":", "\n", "                    ", "image", "=", "self", ".", "images_train", "[", "index", "]", "\n", "", "else", ":", "\n", "                    ", "path", "=", "self", ".", "images_train", "[", "index", "]", "\n", "image", "=", "self", ".", "loader_input", "(", "path", ")", "\n", "", "", "else", ":", "\n", "                ", "image", "=", "[", "]", "\n", "\n", "", "if", "len", "(", "self", ".", "labels_train", ")", ">", "0", ":", "\n", "                ", "label", "=", "self", ".", "labels_train", "[", "index", "]", "\n", "", "else", ":", "\n", "                ", "label", "=", "[", "]", "\n", "\n", "", "if", "self", ".", "transform_train", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transform_train", "(", "image", ")", "\n", "\n", "", "", "if", "self", ".", "train", "is", "False", ":", "\n", "            ", "if", "len", "(", "self", ".", "images_test", ")", ">", "0", ":", "\n", "                ", "if", "self", ".", "prefetch", "is", "True", ":", "\n", "                    ", "image", "=", "self", ".", "images_test", "[", "index", "]", "\n", "", "else", ":", "\n", "                    ", "path", "=", "self", ".", "images_test", "[", "index", "]", "\n", "image", "=", "self", ".", "loader_input", "(", "path", ")", "\n", "", "", "else", ":", "\n", "                ", "image", "=", "[", "]", "\n", "\n", "", "if", "len", "(", "self", ".", "labels_test", ")", ">", "0", ":", "\n", "                ", "label", "=", "self", ".", "labels_test", "[", "index", "]", "\n", "", "else", ":", "\n", "                ", "label", "=", "[", "]", "\n", "\n", "", "if", "self", ".", "transform_test", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transform_test", "(", "image", ")", "\n", "", "else", ":", "\n", "                ", "image", "=", "[", "]", "\n", "\n", "", "", "return", "image", ",", "label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.is_image_file": [[15, 17], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.make_dataset": [[19, 44], ["utils.file_exists", "print", "pickle.load", "print", "utils.readtextfile", "utils.readtextfile.sort", "range", "pickle.dump", "open", "x.rstrip", "len", "os.listdir", "os.listdir", "open", "folderlist.is_image_file", "os.path.join", "os.path.join", "images.append", "labels.append"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.file_exists", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readtextfile", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.folderlist.is_image_file"], ["", "def", "make_dataset", "(", "classlist", ")", ":", "\n", "    ", "filename", "=", "'/tmp/folderlist.pkl'", "\n", "if", "utils", ".", "file_exists", "(", "filename", ")", ":", "\n", "        ", "print", "(", "\"loading from cache\"", ")", "\n", "pickle_load", "=", "pickle", ".", "load", "(", "open", "(", "filename", ",", "\"rb\"", ")", ")", "\n", "images", "=", "pickle_load", "[", "\"images\"", "]", "\n", "labels", "=", "pickle_load", "[", "\"labels\"", "]", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"cache not found, generating cache, this will take a while\"", ")", "\n", "images", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "classes", "=", "utils", ".", "readtextfile", "(", "classlist", ")", "\n", "classes", "=", "[", "x", ".", "rstrip", "(", "'\\n'", ")", "for", "x", "in", "classes", "]", "\n", "classes", ".", "sort", "(", ")", "\n", "\n", "for", "index", "in", "range", "(", "len", "(", "classes", ")", ")", ":", "\n", "            ", "for", "fname", "in", "os", ".", "listdir", "(", "classes", "[", "index", "]", ")", ":", "\n", "                ", "if", "is_image_file", "(", "fname", ")", ":", "\n", "                    ", "fname", "=", "os", ".", "path", ".", "join", "(", "classes", "[", "index", "]", ",", "fname", ")", "\n", "images", ".", "append", "(", "fname", ")", "\n", "labels", ".", "append", "(", "index", ")", "\n", "\n", "", "", "", "pickle_save", "=", "{", "\"images\"", ":", "images", ",", "\"labels\"", ":", "labels", "}", "\n", "pickle", ".", "dump", "(", "pickle_save", ",", "open", "(", "filename", ",", "\"wb\"", ")", ")", "\n", "", "return", "images", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist_demog.DemogCSVListLoader.__init__": [[15, 53], ["list", "getattr", "csvfile.close", "set", "open", "csvfile.readlines", "enumerate", "x.rstrip().split", "len", "len", "datalist.append", "classname.append", "x.rstrip", "enumerate"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ",", "\n", "target_ind", "=", "None", ",", "refer_ind", "=", "None", ",", "demog_group", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "ifile", "=", "ifile", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "target_ind", "=", "target_ind", "\n", "\n", "self", ".", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "# , encoding='utf-8', errors='ignore'", "\n", "# reader = csv.reader(csvfile, delimiter='\\t')", "\n", "                ", "lines", "=", "csvfile", ".", "readlines", "(", ")", "\n", "reader", "=", "[", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "'\\t'", ")", "for", "x", "in", "lines", "]", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                    ", "if", "self", ".", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                        ", "self", ".", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                        ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                            ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "demog_label", "=", "row", "[", "refer_ind", "[", "0", "]", "]", "+", "row", "[", "refer_ind", "[", "1", "]", "]", "\n", "if", "demog_label", "==", "demog_group", ":", "\n", "                        ", "datalist", ".", "append", "(", "row", ")", "\n", "############## ID!!!! ##############", "\n", "classname", ".", "append", "(", "row", "[", "target_ind", "]", ")", "# ID!", "\n", "############## ID!!!! ##############", "\n", "\n", "", "", "", "csvfile", ".", "close", "(", ")", "\n", "\n", "", "self", ".", "data", "=", "datalist", "\n", "self", ".", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist_demog.DemogCSVListLoader.__len__": [[54, 56], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist_demog.DemogCSVListLoader.__getitem__": [[57, 83], ["len", "csvlist_demog.DemogCSVListLoader.loader", "csvlist_demog.DemogCSVListLoader.classname.index", "csvlist_demog.DemogCSVListLoader.transform", "os.path.join", "len", "range", "len", "attributes.append"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "data", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "data", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "data", "[", "index", "]", "[", "0", "]", "\n", "", "image", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "attributes", "=", "self", ".", "data", "[", "index", "]", "\n", "fmetas", "=", "attributes", "[", "0", "]", "\n", "attributes", "=", "attributes", "[", "1", ":", "]", "\n", "############## ID!!!! ##############", "\n", "label", "=", "self", ".", "classname", ".", "index", "(", "attributes", "[", "self", ".", "target_ind", "-", "1", "]", ")", "\n", "############## ID!!!! ##############", "\n", "\n", "# attributes = [int(x) for x in attributes]", "\n", "if", "len", "(", "attributes", ")", "<", "self", ".", "nattributes", ":", "\n", "                ", "length", "=", "self", ".", "nattributes", "-", "len", "(", "attributes", ")", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "                    ", "attributes", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "# attributes = torch.Tensor(attributes)", "\n", "", "return", "image", ",", "label", ",", "attributes", ",", "fmetas", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist.CSVListLoader.__init__": [[15, 49], ["list", "getattr", "csvfile.close", "set", "open", "csvfile.readlines", "enumerate", "x.rstrip().split", "datalist.append", "classname.append", "len", "len", "x.rstrip", "enumerate"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ",", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "ifile", "=", "ifile", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "# , encoding='utf-8', errors='ignore'", "\n", "# reader = csv.reader(csvfile, delimiter='\\t')", "\n", "                ", "lines", "=", "csvfile", ".", "readlines", "(", ")", "\n", "reader", "=", "[", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "'\\t'", ")", "for", "x", "in", "lines", "]", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                    ", "if", "self", ".", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                        ", "self", ".", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                        ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                            ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "datalist", ".", "append", "(", "row", ")", "\n", "############## ID!!!! ##############", "\n", "classname", ".", "append", "(", "row", "[", "4", "]", ")", "# ID!", "\n", "############## ID!!!! ##############", "\n", "\n", "", "", "csvfile", ".", "close", "(", ")", "\n", "\n", "", "self", ".", "data", "=", "datalist", "\n", "self", ".", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist.CSVListLoader.__len__": [[50, 52], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.csvlist.CSVListLoader.__getitem__": [[53, 79], ["len", "csvlist.CSVListLoader.loader", "csvlist.CSVListLoader.classname.index", "csvlist.CSVListLoader.transform", "os.path.join", "len", "range", "len", "attributes.append"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "data", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "data", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "data", "[", "index", "]", "[", "0", "]", "\n", "", "image", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "attributes", "=", "self", ".", "data", "[", "index", "]", "\n", "fmetas", "=", "attributes", "[", "0", "]", "\n", "attributes", "=", "attributes", "[", "1", ":", "]", "\n", "############## ID!!!! ##############", "\n", "label", "=", "self", ".", "classname", ".", "index", "(", "attributes", "[", "3", "]", ")", "\n", "############## ID!!!! ##############", "\n", "\n", "# attributes = [int(x) for x in attributes]", "\n", "if", "len", "(", "attributes", ")", "<", "self", ".", "nattributes", ":", "\n", "                ", "length", "=", "self", ".", "nattributes", "-", "len", "(", "attributes", ")", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "                    ", "attributes", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "# attributes = torch.Tensor(attributes)", "\n", "", "return", "image", ",", "label", ",", "attributes", ",", "fmetas", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pydataloader.H5pyLoader.__init__": [[18, 45], ["h5py.File", "ifile[].endswith", "list", "h5pydataloader.H5pyLoader.classname.sort", "getattr", "utils.readtextfile", "set", "x.rstrip.rstrip.rstrip", "os.path.basename", "temp.append", "imagelist.append", "os.path.splitext", "os.path.dirname", "os.path.join", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readtextfile"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "split", "=", "1.0", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "f_h5py", "=", "h5py", ".", "File", "(", "ifile", "[", "0", "]", ",", "'r'", ")", "\n", "\n", "if", "ifile", "[", "1", "]", ".", "endswith", "(", "'txt'", ")", ":", "\n", "            ", "lines", "=", "utils", ".", "readtextfile", "(", "ifile", "[", "1", "]", ")", "\n", "imagelist", "=", "[", "]", "\n", "for", "x", "in", "lines", ":", "\n", "                ", "x", "=", "x", ".", "rstrip", "(", "'\\n'", ")", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "x", ")", ")", "[", "0", "]", "\n", "labelname", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "dirname", "(", "x", ")", ")", "\n", "temp", "=", "[", "os", ".", "path", ".", "join", "(", "labelname", ",", "filename", "+", "'.jpg'", ")", "]", "\n", "temp", ".", "append", "(", "labelname", ")", "\n", "imagelist", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "labellist", "=", "[", "x", "[", "1", "]", "for", "x", "in", "imagelist", "]", "\n", "\n", "self", ".", "images", "=", "imagelist", "\n", "self", ".", "classname", "=", "labellist", "\n", "self", ".", "classname", "=", "list", "(", "set", "(", "self", ".", "classname", ")", ")", "\n", "self", ".", "classname", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pydataloader.H5pyLoader.__len__": [[47, 49], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pydataloader.H5pyLoader.__getitem__": [[50, 68], ["len", "h5pydataloader.H5pyLoader.classname.index", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "images", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "images", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "images", "[", "index", "]", "[", "0", "]", "\n", "\n", "", "label", "=", "self", ".", "classname", ".", "index", "(", "self", ".", "images", "[", "index", "]", "[", "1", "]", ")", "\n", "fmeta", "=", "path", "\n", "\n", "feature", "=", "self", ".", "f_h5py", "[", "'features'", "]", "[", "index", "]", "\n", "\n", "", "else", ":", "\n", "            ", "image", "=", "[", "]", "\n", "label", "=", "None", "\n", "fmeta", "=", "None", "\n", "\n", "", "return", "feature", ",", "label", ",", "label", ",", "fmeta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.gender_csvlist.GenderCSVListLoader.__init__": [[15, 49], ["list", "getattr", "set", "open", "csv.reader", "enumerate", "int", "len", "len", "datalist.append", "classname.append", "enumerate"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ",", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "ifile", "=", "ifile", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "                ", "reader", "=", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                    ", "if", "self", ".", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                        ", "self", ".", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                        ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                            ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "gender", "=", "int", "(", "row", "[", "1", "]", ")", "# gender!", "\n", "if", "gender", "!=", "-", "1", ":", "\n", "                        ", "path", "=", "row", "[", "0", "]", "\n", "datalist", ".", "append", "(", "row", ")", "\n", "############## Gender!!!! ##############", "\n", "classname", ".", "append", "(", "gender", ")", "# gender!", "\n", "############## Gender!!!! ##############", "\n", "\n", "", "", "", "", "self", ".", "data", "=", "datalist", "\n", "\n", "self", ".", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.gender_csvlist.GenderCSVListLoader.__len__": [[50, 52], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.gender_csvlist.GenderCSVListLoader.__getitem__": [[53, 78], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "len", "gender_csvlist.GenderCSVListLoader.loader", "gender_csvlist.GenderCSVListLoader.classname.index", "gender_csvlist.GenderCSVListLoader.transform", "os.path.join", "int", "len", "range", "len", "torch.Tensor.append", "torch.Tensor.append"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "data", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "data", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "data", "[", "index", "]", "[", "0", "]", "\n", "", "image", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "attributes", "=", "self", ".", "data", "[", "index", "]", "\n", "fmetas", "=", "attributes", "[", "0", "]", "\n", "attributes", "=", "attributes", "[", "1", ":", "]", "\n", "attributes", "=", "[", "int", "(", "x", ")", "for", "x", "in", "attributes", "]", "\n", "############## Gender!!!! ##############", "\n", "label", "=", "self", ".", "classname", ".", "index", "(", "attributes", "[", "0", "]", ")", "\n", "############## Gender!!!! ##############", "\n", "if", "len", "(", "attributes", ")", "<", "self", ".", "nattributes", ":", "\n", "                ", "length", "=", "self", ".", "nattributes", "-", "len", "(", "attributes", ")", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "                    ", "attributes", ".", "append", "(", "-", "1", ")", "\n", "\n", "", "", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "attributes", "=", "torch", ".", "Tensor", "(", "attributes", ")", "\n", "return", "image", ",", "label", ",", "attributes", ",", "fmetas", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.Iterator.__init__": [[165, 169], ["len", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "imagelist", ")", ":", "\n", "        ", "self", ".", "length", "=", "len", "(", "imagelist", ")", "\n", "self", ".", "temp", "=", "torch", ".", "randperm", "(", "self", ".", "length", ")", "\n", "self", ".", "current", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.Iterator.__iter__": [[170, 172], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.Iterator.next": [[173, 180], ["torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["None"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "value", "=", "self", ".", "temp", "[", "self", ".", "current", "]", "\n", "self", ".", "current", "+=", "1", "\n", "if", "self", ".", "current", "==", "self", ".", "length", ":", "\n", "            ", "self", ".", "current", "=", "0", "\n", "self", ".", "temp", "=", "torch", ".", "randperm", "(", "self", ".", "length", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.ClassSamplesDataLoader.__init__": [[183, 215], ["len", "range", "random_class.make_dataset_age_bicsvlist", "len", "RuntimeError", "getattr", "len", "list", "random_class.Iterator", "random_class.make_dataset_age_csvlist", "random_class.make_dataset_gender_csvlist"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_age_bicsvlist", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_age_csvlist", "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_gender_csvlist"], ["    ", "def", "__init__", "(", "\n", "self", ",", "root", ",", "ifile", ",", "num_images", ",", "transform", "=", "None", ",", "\n", "loader", "=", "'loader_image'", ",", "train_type", "=", "'age_cls'", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "num_images", "=", "num_images", "\n", "if", "train_type", "==", "'age_bcls'", ":", "\n", "            ", "nattributes", ",", "label_dict", ",", "datalist", "=", "make_dataset_age_bicsvlist", "(", "ifile", ")", "\n", "", "elif", "train_type", "==", "'age_cls'", ":", "\n", "            ", "nattributes", ",", "label_dict", ",", "datalist", "=", "make_dataset_age_csvlist", "(", "ifile", ")", "\n", "", "elif", "train_type", "==", "'gender_cls'", ":", "\n", "            ", "nattributes", ",", "label_dict", ",", "datalist", "=", "make_dataset_gender_csvlist", "(", "ifile", ")", "\n", "\n", "", "self", ".", "train_type", "=", "train_type", "\n", "\n", "if", "len", "(", "datalist", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"No images found\"", ")", ")", "\n", "\n", "", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader_input", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "transform", "=", "transform", "\n", "if", "len", "(", "datalist", ")", ">", "0", ":", "\n", "            ", "self", ".", "classes", "=", "label_dict", "\n", "self", ".", "datalist", "=", "datalist", "\n", "self", ".", "nattributes", "=", "nattributes", "\n", "\n", "", "self", ".", "num_classes", "=", "len", "(", "list", "(", "self", ".", "datalist", ")", ")", "\n", "self", ".", "class_iter", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "num_classes", ")", ":", "\n", "            ", "self", ".", "class_iter", "[", "i", "]", "=", "Iterator", "(", "self", ".", "datalist", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.ClassSamplesDataLoader.__len__": [[216, 218], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.ClassSamplesDataLoader.__getitem__": [[219, 244], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "random_class.ClassSamplesDataLoader.class_iter[].next", "os.path.join", "random_class.ClassSamplesDataLoader.loader_input", "torch.stack.append", "torch.stack.append", "fmetas.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "random_class.ClassSamplesDataLoader.transform", "int", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "int", "int"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.Iterator.next"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "images", "=", "[", "]", "\n", "fmetas", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "attributes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_images", ")", ":", "\n", "            ", "ind", "=", "self", ".", "class_iter", "[", "index", "]", ".", "next", "(", ")", "\n", "name", "=", "self", ".", "datalist", "[", "index", "]", "[", "ind", "]", "[", "0", "]", "\n", "name", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "name", ")", "\n", "image", "=", "self", ".", "loader_input", "(", "name", ")", "\n", "images", ".", "append", "(", "self", ".", "transform", "(", "image", ")", ")", "\n", "fmetas", ".", "append", "(", "self", ".", "datalist", "[", "index", "]", "[", "ind", "]", "[", "0", "]", ")", "\n", "row", "=", "[", "int", "(", "x", ")", "for", "x", "in", "self", ".", "datalist", "[", "index", "]", "[", "ind", "]", "[", "1", ":", "]", "]", "\n", "# row.insert(0, self.classes.index(self.datalist[index][ind][1]))", "\n", "attributes", ".", "append", "(", "torch", ".", "Tensor", "(", "row", ")", ")", "\n", "if", "self", ".", "train_type", "==", "'age_cls'", "or", "self", ".", "train_type", "==", "'age_bcls'", ":", "\n", "                ", "label", "=", "self", ".", "classes", "[", "int", "(", "self", ".", "datalist", "[", "index", "]", "[", "ind", "]", "[", "2", "]", ")", "]", "\n", "", "elif", "self", ".", "train_type", "==", "'gender_cls'", ":", "\n", "                ", "label", "=", "self", ".", "classes", "[", "int", "(", "self", ".", "datalist", "[", "index", "]", "[", "ind", "]", "[", "1", "]", ")", "]", "\n", "", "labels", ".", "append", "(", "torch", ".", "Tensor", "(", "[", "label", "]", ")", ")", "\n", "\n", "", "images", "=", "torch", ".", "stack", "(", "images", ")", "\n", "labels", "=", "torch", ".", "stack", "(", "labels", ")", "\n", "attributes", "=", "torch", ".", "stack", "(", "attributes", ")", "\n", "return", "images", ",", "labels", ",", "attributes", ",", "fmetas", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_classfolders": [[15, 32], ["utils.readcsvfile", "range", "list", "list.sort", "range", "range", "len", "list.append", "set", "len", "len", "datalist[].append", "list.index"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readcsvfile"], ["def", "make_dataset_classfolders", "(", "ifile", ")", ":", "\n", "    ", "tmpdata", "=", "utils", ".", "readcsvfile", "(", "ifile", ",", "\"\\t\"", ")", "\n", "classes", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "tmpdata", ")", ")", ":", "\n", "        ", "classes", ".", "append", "(", "tmpdata", "[", "i", "]", "[", "1", "]", ")", "\n", "", "classes", "=", "list", "(", "set", "(", "classes", ")", ")", "\n", "classes", ".", "sort", "(", ")", "\n", "\n", "datalist", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", ":", "\n", "        ", "datalist", "[", "i", "]", "=", "[", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "tmpdata", ")", ")", ":", "\n", "        ", "row", "=", "tmpdata", "[", "i", "]", "\n", "datalist", "[", "classes", ".", "index", "(", "row", "[", "1", "]", ")", "]", ".", "append", "(", "row", ")", "\n", "\n", "", "return", "datalist", ",", "classes", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_age_csvlist": [[33, 74], ["list", "range", "set", "len", "len", "int", "open", "csv.reader", "enumerate", "numpy.digitize", "data_dict[].append", "datalist.append", "list.append", "len", "len", "int", "enumerate"], "function", ["None"], ["", "def", "make_dataset_age_csvlist", "(", "ifile", ")", ":", "\n", "    ", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                ", "if", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                    ", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                    ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                        ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "path", "=", "row", "[", "0", "]", "\n", "datalist", ".", "append", "(", "row", ")", "\n", "############## Age!!!! ##############", "\n", "classname", ".", "append", "(", "int", "(", "row", "[", "2", "]", ")", ")", "# age!", "\n", "############## Age!!!! ##############", "\n", "\n", "", "", "", "label_dict", "=", "{", "}", "\n", "# agebins = [0,20,25,30,35,40,45,50,60,120]", "\n", "# agebins = [0,20,30,40,50,60,120]", "\n", "agebins", "=", "[", "0", ",", "30", ",", "45", ",", "60", ",", "200", "]", "\n", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "for", "item", "in", "classname", ":", "\n", "        ", "idx", "=", "np", ".", "digitize", "(", "item", ",", "agebins", ")", "-", "1", "\n", "label_dict", "[", "item", "]", "=", "idx", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "nclasses", "=", "len", "(", "agebins", ")", "-", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "datalist", ")", ")", ":", "\n", "        ", "age", "=", "int", "(", "datalist", "[", "i", "]", "[", "2", "]", ")", "\n", "idx", "=", "label_dict", "[", "age", "]", "\n", "if", "idx", "not", "in", "data_dict", ":", "\n", "            ", "data_dict", "[", "idx", "]", "=", "[", "datalist", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "            ", "data_dict", "[", "idx", "]", ".", "append", "(", "datalist", "[", "i", "]", ")", "\n", "\n", "", "", "return", "nattributes", ",", "label_dict", ",", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_age_bicsvlist": [[75, 121], ["list", "len", "range", "set", "int", "label_dict[].extend", "list", "len", "int", "numpy.sum", "open", "csv.reader", "enumerate", "numpy.digitize", "data_dict[].append", "datalist.append", "list.append", "len", "len", "int", "len", "enumerate"], "function", ["None"], ["", "def", "make_dataset_age_bicsvlist", "(", "ifile", ")", ":", "\n", "    ", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                ", "if", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                    ", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                    ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                        ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "path", "=", "row", "[", "0", "]", "\n", "datalist", ".", "append", "(", "row", ")", "\n", "############## Age!!!! ##############", "\n", "classname", ".", "append", "(", "int", "(", "row", "[", "2", "]", ")", ")", "# age!", "\n", "############## Age!!!! ##############", "\n", "\n", "", "", "", "label_dict", "=", "{", "}", "\n", "# agebins = [0,20,25,30,35,40,45,50,60,120]", "\n", "agebins", "=", "[", "0", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "120", "]", "\n", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "label2int", "=", "{", "}", "\n", "for", "item", "in", "classname", ":", "\n", "        ", "idx", "=", "int", "(", "np", ".", "digitize", "(", "item", ",", "agebins", ")", ")", "\n", "label_dict", "[", "item", "]", "=", "[", "1", "]", "*", "idx", "\n", "label_dict", "[", "item", "]", ".", "extend", "(", "[", "0", "]", "*", "(", "len", "(", "agebins", ")", "-", "1", "-", "idx", ")", ")", "\n", "label_dict", "[", "item", "]", "=", "label_dict", "[", "item", "]", "[", "1", ":", "]", "\n", "if", "idx", "-", "1", "not", "in", "label2int", ":", "\n", "            ", "label2int", "[", "idx", "-", "1", "]", "=", "label_dict", "[", "item", "]", "\n", "\n", "", "", "data_dict", "=", "{", "}", "\n", "nclasses", "=", "len", "(", "list", "(", "label2int", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "datalist", ")", ")", ":", "\n", "        ", "age", "=", "int", "(", "datalist", "[", "i", "]", "[", "2", "]", ")", "\n", "label", "=", "label_dict", "[", "age", "]", "\n", "idx", "=", "np", ".", "sum", "(", "label", ")", "\n", "if", "idx", "not", "in", "data_dict", ":", "\n", "            ", "data_dict", "[", "idx", "]", "=", "[", "datalist", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "            ", "data_dict", "[", "idx", "]", ".", "append", "(", "datalist", "[", "i", "]", ")", "\n", "\n", "", "", "return", "nattributes", ",", "label_dict", ",", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.random_class.make_dataset_gender_csvlist": [[123, 162], ["list", "enumerate", "len", "range", "set", "len", "int", "open", "csv.reader", "enumerate", "data_dict[].append", "int", "len", "len", "datalist.append", "list.append", "enumerate"], "function", ["None"], ["", "def", "make_dataset_gender_csvlist", "(", "ifile", ")", ":", "\n", "    ", "nattributes", "=", "0", "\n", "datalist", "=", "[", "]", "\n", "classname", "=", "[", "]", "\n", "\n", "if", "ifile", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "ifile", ",", "'r'", ")", "as", "csvfile", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "reader", ")", ":", "\n", "                ", "if", "nattributes", "<=", "len", "(", "row", ")", ":", "\n", "                    ", "nattributes", "=", "len", "(", "row", ")", "\n", "", "if", "'NaN'", "in", "row", ":", "\n", "                    ", "idx", "=", "[", "x", "[", "0", "]", "for", "x", "in", "enumerate", "(", "row", ")", "if", "x", "[", "1", "]", "==", "'NaN'", "]", "\n", "for", "j", "in", "idx", ":", "\n", "                        ", "row", "[", "j", "]", "=", "-", "1", "\n", "", "", "gender", "=", "int", "(", "row", "[", "1", "]", ")", "# gender!", "\n", "if", "gender", "!=", "-", "1", ":", "\n", "                    ", "path", "=", "row", "[", "0", "]", "\n", "datalist", ".", "append", "(", "row", ")", "\n", "############## Gender!!!! ##############", "\n", "classname", ".", "append", "(", "gender", ")", "# gender!", "\n", "############## Gender!!!! ##############", "\n", "\n", "", "", "", "", "label_dict", "=", "{", "}", "\n", "classname", "=", "list", "(", "set", "(", "classname", ")", ")", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "classname", ")", ":", "\n", "        ", "label_dict", "[", "item", "]", "=", "i", "\n", "\n", "", "data_dict", "=", "{", "}", "\n", "nclasses", "=", "len", "(", "classname", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "datalist", ")", ")", ":", "\n", "        ", "gender", "=", "int", "(", "datalist", "[", "i", "]", "[", "1", "]", ")", "\n", "idx", "=", "label_dict", "[", "gender", "]", "\n", "if", "idx", "not", "in", "data_dict", ":", "\n", "            ", "data_dict", "[", "idx", "]", "=", "[", "datalist", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "            ", "data_dict", "[", "idx", "]", ".", "append", "(", "datalist", "[", "i", "]", ")", "\n", "\n", "", "", "return", "nattributes", ",", "label_dict", ",", "data_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.filelist.FileListLoader.__init__": [[15, 63], ["list", "filelist.FileListLoader.classname.sort", "getattr", "ifile.endswith", "set", "utils.readtextfile", "len", "shuffle", "math.floor", "x.rstrip.rstrip.rstrip", "os.path.basename", "temp.append", "shuffle.append", "len", "len", "os.path.splitext", "os.path.splitext", "os.path.dirname", "os.path.join", "len", "os.path.basename", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.readtextfile"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "split", "=", "1.0", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ")", ":", "\n", "\n", "        ", "self", ".", "ifile", "=", "ifile", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "if", "ifile", "is", "not", "None", ":", "\n", "            ", "if", "ifile", ".", "endswith", "(", "'txt'", ")", ":", "\n", "                ", "lines", "=", "utils", ".", "readtextfile", "(", "ifile", ")", "\n", "imagelist", "=", "[", "]", "\n", "for", "x", "in", "lines", ":", "\n", "                    ", "x", "=", "x", ".", "rstrip", "(", "'\\n'", ")", "\n", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "x", ")", ")", "[", "0", "]", "\n", "file_ext", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "x", ")", ")", "[", "1", "]", "\n", "labelname", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "dirname", "(", "x", ")", ")", "\n", "temp", "=", "[", "os", ".", "path", ".", "join", "(", "labelname", ",", "filename", "+", "file_ext", ")", "]", "\n", "temp", ".", "append", "(", "labelname", ")", "\n", "imagelist", ".", "append", "(", "temp", ")", "\n", "\n", "", "labellist", "=", "[", "x", "[", "1", "]", "for", "x", "in", "imagelist", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "imagelist", "=", "[", "]", "\n", "\n", "", "if", "(", "self", ".", "split", "<", "1.0", ")", "&", "(", "self", ".", "split", ">", "0.0", ")", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "imagelist", "=", "shuffle", "(", "imagelist", ",", "labellist", ")", "\n", "num", "=", "math", ".", "floor", "(", "self", ".", "split", "*", "len", "(", "imagelist", ")", ")", "\n", "self", ".", "images", "=", "imagelist", "[", "0", ":", "num", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "images", "=", "[", "]", "\n", "\n", "", "", "elif", "self", ".", "split", "==", "1.0", ":", "\n", "            ", "if", "len", "(", "imagelist", ")", ">", "0", ":", "\n", "                ", "self", ".", "images", "=", "imagelist", "\n", "", "else", ":", "\n", "                ", "self", ".", "images", "=", "[", "]", "\n", "", "if", "len", "(", "labellist", ")", ">", "0", ":", "\n", "                ", "self", ".", "classname", "=", "labellist", "\n", "", "else", ":", "\n", "                ", "self", ".", "classname", "=", "[", "]", "\n", "\n", "", "", "self", ".", "classname", "=", "list", "(", "set", "(", "self", ".", "classname", ")", ")", "\n", "self", ".", "classname", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.filelist.FileListLoader.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.filelist.FileListLoader.__getitem__": [[67, 87], ["len", "filelist.FileListLoader.loader", "filelist.FileListLoader.classname.index", "os.path.join", "filelist.FileListLoader.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "images", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "images", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "images", "[", "index", "]", "[", "0", "]", "\n", "", "image", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "label", "=", "self", ".", "classname", ".", "index", "(", "self", ".", "images", "[", "index", "]", "[", "1", "]", ")", "\n", "fmeta", "=", "path", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "               ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "image", "=", "[", "]", "\n", "label", "=", "None", "\n", "fmeta", "=", "None", "\n", "\n", "", "return", "image", ",", "label", ",", "label", ",", "fmeta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pyCSVlistloader.H5pyCSVLoader.__init__": [[19, 61], ["h5py.File", "list", "list", "list", "list", "h5pyCSVlistloader.H5pyCSVLoader.idclass.sort", "h5pyCSVlistloader.H5pyCSVLoader.genderclass.sort", "h5pyCSVlistloader.H5pyCSVLoader.ageclass.sort", "h5pyCSVlistloader.H5pyCSVLoader.raceclass.sort", "getattr", "open", "csv.reader", "enumerate", "set", "set", "set", "set", "attrs.append", "attrs.append", "attrs.append", "attrs.append", "attrs.append", "datalist.append", "idlist.append", "genderlist.append", "agelist.append", "racelist.append", "os.path.dirname", "int", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ifile", ",", "root", "=", "None", ",", "split", "=", "1.0", ",", "\n", "transform", "=", "None", ",", "loader", "=", "'loader_image'", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "transform", "=", "transform", "\n", "if", "loader", "is", "not", "None", ":", "\n", "            ", "self", ".", "loader", "=", "getattr", "(", "loaders", ",", "loader", ")", "\n", "\n", "", "self", ".", "f_h5py", "=", "h5py", ".", "File", "(", "ifile", "[", "0", "]", ",", "'r'", ")", "\n", "\n", "datalist", "=", "[", "]", "\n", "idlist", "=", "[", "]", "\n", "genderlist", "=", "[", "]", "\n", "agelist", "=", "[", "]", "\n", "racelist", "=", "[", "]", "\n", "\n", "with", "open", "(", "ifile", "[", "1", "]", ",", "'r'", ")", "as", "csvfile", ":", "\n", "            ", "rows", "=", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "i", ",", "row", "in", "enumerate", "(", "rows", ")", ":", "\n", "                ", "attrs", "=", "[", "]", "\n", "attrs", ".", "append", "(", "row", "[", "0", "]", ")", "\n", "attrs", ".", "append", "(", "os", ".", "path", ".", "dirname", "(", "row", "[", "0", "]", ")", ")", "\n", "attrs", ".", "append", "(", "int", "(", "row", "[", "1", "]", ")", ")", "\n", "attrs", ".", "append", "(", "int", "(", "row", "[", "2", "]", ")", ")", "\n", "attrs", ".", "append", "(", "int", "(", "row", "[", "3", "]", ")", ")", "\n", "\n", "datalist", ".", "append", "(", "attrs", ")", "\n", "idlist", ".", "append", "(", "attrs", "[", "1", "]", ")", "\n", "genderlist", ".", "append", "(", "attrs", "[", "2", "]", ")", "\n", "agelist", ".", "append", "(", "attrs", "[", "3", "]", ")", "\n", "racelist", ".", "append", "(", "attrs", "[", "4", "]", ")", "\n", "\n", "", "", "self", ".", "data", "=", "datalist", "\n", "self", ".", "idclass", "=", "list", "(", "set", "(", "idlist", ")", ")", "\n", "self", ".", "genderclass", "=", "list", "(", "set", "(", "genderlist", ")", ")", "\n", "self", ".", "ageclass", "=", "list", "(", "set", "(", "agelist", ")", ")", "\n", "self", ".", "raceclass", "=", "list", "(", "set", "(", "racelist", ")", ")", "\n", "\n", "self", ".", "idclass", ".", "sort", "(", ")", "\n", "self", ".", "genderclass", ".", "sort", "(", ")", "\n", "self", ".", "ageclass", ".", "sort", "(", ")", "\n", "self", ".", "raceclass", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pyCSVlistloader.H5pyCSVLoader.__len__": [[63, 65], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.datasets.h5pyCSVlistloader.H5pyCSVLoader.__getitem__": [[66, 94], ["len", "h5pyCSVlistloader.H5pyCSVLoader.idclass.index", "h5pyCSVlistloader.H5pyCSVLoader.genderclass.index", "h5pyCSVlistloader.H5pyCSVLoader.ageclass.index", "h5pyCSVlistloader.H5pyCSVLoader.raceclass.index", "PIL.Image.open", "os.path.join", "io.BytesIO", "h5pyCSVlistloader.H5pyCSVLoader.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "data", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "root", "is", "not", "None", ":", "\n", "                ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "data", "[", "index", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "path", "=", "self", ".", "data", "[", "index", "]", "[", "0", "]", "\n", "\n", "", "idlabel", "=", "self", ".", "idclass", ".", "index", "(", "self", ".", "data", "[", "index", "]", "[", "1", "]", ")", "\n", "genderlabel", "=", "self", ".", "genderclass", ".", "index", "(", "self", ".", "data", "[", "index", "]", "[", "2", "]", ")", "\n", "agelabel", "=", "self", ".", "ageclass", ".", "index", "(", "self", ".", "data", "[", "index", "]", "[", "3", "]", ")", "\n", "racelabel", "=", "self", ".", "raceclass", ".", "index", "(", "self", ".", "data", "[", "index", "]", "[", "4", "]", ")", "\n", "fmeta", "=", "path", "\n", "\n", "im_bytes", "=", "self", ".", "f_h5py", "[", "'images'", "]", "[", "index", "]", "\n", "image", "=", "Image", ".", "open", "(", "io", ".", "BytesIO", "(", "im_bytes", ")", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "image", "=", "[", "]", "\n", "idlabel", "=", "None", "\n", "genderlabel", "=", "None", "\n", "agelabel", "=", "None", "\n", "racelabel", "=", "None", "\n", "fmeta", "=", "None", "\n", "\n", "", "return", "image", ",", "idlabel", ",", "genderlabel", ",", "agelabel", ",", "racelabel", ",", "fmeta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.cosineSimilarity": [[11, 21], ["x2.transpose.transpose", "numpy.sqrt", "numpy.sqrt", "numpy.dot", "numpy.sum", "numpy.sum", "numpy.square", "numpy.square"], "function", ["None"], ["def", "cosineSimilarity", "(", "x1", ",", "x2", ")", ":", "\n", "    ", "assert", "x1", ".", "shape", "[", "1", "]", "==", "x2", ".", "shape", "[", "1", "]", "\n", "epsilon", "=", "1e-10", "\n", "x2", "=", "x2", ".", "transpose", "(", ")", "\n", "x1_norm", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "x1", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "x2_norm", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "np", ".", "square", "(", "x2", ")", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", ")", "\n", "x1", "=", "x1", "/", "(", "x1_norm", "+", "epsilon", ")", "\n", "x2", "=", "x2", "/", "(", "x2_norm", "+", "epsilon", ")", "\n", "dist", "=", "np", ".", "dot", "(", "x1", ",", "x2", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.identification": [[22, 44], ["eval_utils.get_labels_from_txt", "labels[].reshape", "labels[].reshape", "identification.cosineSimilarity", "identification.DIR_FAR", "identification.DIR_FAR"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_labels_from_txt", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.cosineSimilarity", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.DIR_FAR", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.DIR_FAR"], ["", "def", "identification", "(", "label_filename", ",", "feat_probe", ",", "feat_gallery", ",", "\n", "idx_probe", ",", "idx_gallery", ",", "get_retrievals", "=", "False", ")", ":", "\n", "    ", "labels", "=", "get_labels_from_txt", "(", "label_filename", ")", "\n", "label_probe", "=", "labels", "[", "idx_probe", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "label_gallery", "=", "labels", "[", "idx_gallery", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "\n", "feature_probe", "=", "feat_probe", "[", "idx_probe", ",", ":", "]", "\n", "feature_gallery", "=", "feat_gallery", "[", "idx_gallery", ",", ":", "]", "\n", "\n", "# Close-set", "\n", "scores", "=", "cosineSimilarity", "(", "feature_probe", ",", "feature_gallery", ")", "\n", "DIRs", ",", "_", ",", "_", "=", "DIR_FAR", "(", "scores", ",", "label_probe", "==", "label_gallery", ".", "T", ",", "ranks", "=", "[", "1", ",", "5", ",", "10", "]", ")", "\n", "\n", "if", "get_retrievals", ":", "\n", "        ", "_", ",", "_", ",", "_", ",", "mate_indices", ",", "success", ",", "sort_idx_mat_m", ",", "sorted_score_mat_m", "=", "DIR_FAR", "(", "scores", ",", "\n", "label_probe", "==", "label_gallery", ".", "T", ",", "ranks", "=", "[", "1", "]", ",", "get_retrievals", "=", "True", ")", "\n", "\n", "return", "feature_probe", ",", "feature_gallery", ",", "mate_indices", ",", "success", ",", "sort_idx_mat_m", ",", "sorted_score_mat_m", "\n", "\n", "", "else", ":", "\n", "\n", "        ", "return", "DIRs", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.identification.DIR_FAR": [[45, 121], ["numpy.all", "label_mat.astype().any", "numpy.argwhere().flatten", "print", "numpy.max", "numpy.zeros", "numpy.ndarray", "score_mat_m.copy", "range", "numpy.zeros", "numpy.zeros", "numpy.ndarray", "enumerate", "find_thresholds_by_FAR", "numpy.argsort", "enumerate", "DIRs.flatten.flatten", "success.flatten.flatten", "label_mat.astype().sum", "label_mat.astype", "numpy.argwhere", "len", "len", "len", "len", "len", "len", "sorted_label_mat_m[].any", "numpy.logical_not", "numpy.logical_not", "numpy.min", "label_mat.astype"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.find_thresholds_by_FAR"], ["", "", "def", "DIR_FAR", "(", "score_mat", ",", "label_mat", ",", "ranks", "=", "[", "1", "]", ",", "FARs", "=", "[", "1.0", "]", ",", "get_retrievals", "=", "False", ")", ":", "\n", "    ", "''' Closed/Open-set Identification. \n        A general case of Cummulative Match Characteristic (CMC) \n        where thresholding is allowed for open-set identification.\n    args:\n        score_mat:            a P x G matrix, P is number of probes, G is size of gallery\n        label_mat:            a P x G matrix, bool\n        ranks:                a list of integers\n        FARs:                 false alarm rates, if 1.0, closed-set identification (CMC)\n        get_retrievals:       not implemented yet\n    return:\n        DIRs:                 an F x R matrix, F is the number of FARs, R is the number of ranks, \n                              flatten into a vector if F=1 or R=1.\n        FARs:                 an vector of length = F.\n        thredholds:           an vector of length = F.\n    '''", "\n", "assert", "score_mat", ".", "shape", "==", "label_mat", ".", "shape", "\n", "assert", "np", ".", "all", "(", "label_mat", ".", "astype", "(", "np", ".", "float32", ")", ".", "sum", "(", "axis", "=", "1", ")", "<=", "1", ")", "\n", "# Split the matrix for match probes and non-match probes", "\n", "# subfix _m: match, _nm: non-match", "\n", "# For closed set, we only use the match probes", "\n", "mate_indices", "=", "label_mat", ".", "astype", "(", "np", ".", "bool", ")", ".", "any", "(", "axis", "=", "1", ")", "\n", "score_mat_m", "=", "score_mat", "[", "mate_indices", ",", ":", "]", "\n", "label_mat_m", "=", "label_mat", "[", "mate_indices", ",", ":", "]", "\n", "score_mat_nm", "=", "score_mat", "[", "np", ".", "logical_not", "(", "mate_indices", ")", ",", ":", "]", "\n", "label_mat_nm", "=", "label_mat", "[", "np", ".", "logical_not", "(", "mate_indices", ")", ",", ":", "]", "\n", "mate_indices", "=", "np", ".", "argwhere", "(", "mate_indices", ")", ".", "flatten", "(", ")", "\n", "\n", "print", "(", "'mate probes: %d, non mate probes: %d'", "%", "(", "score_mat_m", ".", "shape", "[", "0", "]", ",", "score_mat_nm", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "# Find the thresholds for different FARs", "\n", "max_score_nm", "=", "np", ".", "max", "(", "score_mat_nm", ",", "axis", "=", "1", ")", "\n", "label_temp", "=", "np", ".", "zeros", "(", "max_score_nm", ".", "shape", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "if", "len", "(", "FARs", ")", "==", "1", "and", "FARs", "[", "0", "]", ">=", "1.0", ":", "\n", "# If only testing closed-set identification, use the minimum score as thrnp.vstack((eshold", "\n", "# in case there is no non-mate probes", "\n", "        ", "thresholds", "=", "[", "np", ".", "min", "(", "score_mat", ")", "-", "1e-10", "]", "\n", "", "else", ":", "\n", "# If there is open-set identification, find the thresholds by FARs.", "\n", "        ", "assert", "score_mat_nm", ".", "shape", "[", "0", "]", ">", "0", ",", "\"For open-set identification (FAR<1.0), there should be at least one non-mate probe!\"", "\n", "thresholds", "=", "find_thresholds_by_FAR", "(", "max_score_nm", ",", "label_temp", ",", "FARs", "=", "FARs", ")", "\n", "\n", "# Sort the labels row by row according to scores", "\n", "", "sort_idx_mat_m", "=", "np", ".", "argsort", "(", "score_mat_m", ",", "axis", "=", "1", ")", "[", ":", ",", ":", ":", "-", "1", "]", "\n", "sorted_label_mat_m", "=", "np", ".", "ndarray", "(", "label_mat_m", ".", "shape", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "sorted_score_mat_m", "=", "score_mat_m", ".", "copy", "(", ")", "\n", "for", "row", "in", "range", "(", "label_mat_m", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "sort_idx", "=", "(", "sort_idx_mat_m", "[", "row", ",", ":", "]", ")", "\n", "sorted_label_mat_m", "[", "row", ",", ":", "]", "=", "label_mat_m", "[", "row", ",", "sort_idx", "]", "\n", "sorted_score_mat_m", "[", "row", ",", ":", "]", "=", "score_mat_m", "[", "row", ",", "sort_idx", "]", "\n", "\n", "# Calculate DIRs for different FARs and ranks", "\n", "", "gt_score_m", "=", "score_mat_m", "[", "label_mat_m", "]", "\n", "assert", "gt_score_m", ".", "size", "==", "score_mat_m", ".", "shape", "[", "0", "]", "\n", "\n", "DIRs", "=", "np", ".", "zeros", "(", "[", "len", "(", "FARs", ")", ",", "len", "(", "ranks", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "FARs", "=", "np", ".", "zeros", "(", "[", "len", "(", "FARs", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "success", "=", "np", ".", "ndarray", "(", "(", "len", "(", "FARs", ")", ",", "len", "(", "ranks", ")", ")", ",", "dtype", "=", "np", ".", "object", ")", "\n", "for", "i", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "        ", "for", "j", ",", "rank", "in", "enumerate", "(", "ranks", ")", ":", "\n", "            ", "score_rank", "=", "gt_score_m", ">=", "threshold", "\n", "retrieval_rank", "=", "sorted_label_mat_m", "[", ":", ",", "0", ":", "rank", "]", ".", "any", "(", "axis", "=", "1", ")", "\n", "DIRs", "[", "i", ",", "j", "]", "=", "(", "score_rank", "&", "retrieval_rank", ")", ".", "astype", "(", "np", ".", "float32", ")", ".", "mean", "(", ")", "\n", "if", "get_retrievals", ":", "\n", "                ", "success", "[", "i", ",", "j", "]", "=", "(", "score_rank", "&", "retrieval_rank", ")", "\n", "", "", "if", "score_mat_nm", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "FARs", "[", "i", "]", "=", "(", "max_score_nm", ">=", "threshold", ")", ".", "astype", "(", "np", ".", "float32", ")", ".", "mean", "(", ")", "\n", "\n", "", "", "if", "DIRs", ".", "shape", "[", "0", "]", "==", "1", "or", "DIRs", ".", "shape", "[", "1", "]", "==", "1", ":", "\n", "        ", "DIRs", "=", "DIRs", ".", "flatten", "(", ")", "\n", "success", "=", "success", ".", "flatten", "(", ")", "\n", "\n", "", "if", "get_retrievals", ":", "\n", "        ", "return", "DIRs", ",", "FARs", ",", "thresholds", ",", "mate_indices", ",", "success", ",", "sort_idx_mat_m", ",", "sorted_score_mat_m", "\n", "\n", "", "return", "DIRs", ",", "FARs", ",", "thresholds", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Classification.__init__": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "self", ".", "topk", "=", "topk", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Classification.__call__": [[15, 29], ["max", "target.size", "output.topk", "pred.t.t.t", "pred.t.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "self", ".", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "self", ".", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Top1Classification.__init__": [[32, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Top1Classification.__call__": [[35, 43], ["target.long.long.long", "target.long.long.size", "output.data.max", "float", "float", "pred.eq().cpu().sum", "pred.eq().cpu", "pred.eq"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "target", "=", "target", ".", "long", "(", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "res", "=", "float", "(", "pred", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.BiOrdinalClassify.__init__": [[45, 47], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.BiOrdinalClassify.__call__": [[47, 56], ["torch.sum().long.size", "torch.gt", "torch.sum().long", "torch.sum().long", "float", "float", "torch.sum", "torch.sum", "torch.sum().long.eq().cpu().sum", "torch.sum().long.eq().cpu", "torch.sum().long.eq"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "output", "=", "torch", ".", "gt", "(", "output", ",", "0.5", ")", "\n", "pred", "=", "torch", ".", "sum", "(", "output", ",", "dim", "=", "1", ")", ".", "long", "(", ")", "\n", "target", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "1", ")", ".", "long", "(", ")", "\n", "res", "=", "float", "(", "pred", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Agergs_classification.__init__": [[58, 60], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "agebins", "=", "[", "0", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", ",", "50", ",", "60", ",", "120", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.classification.Agergs_classification.__call__": [[61, 72], ["target.size", "torch.LongTensor", "numpy.digitize", "torch.LongTensor.append", "float", "float", "int", "int", "torch.LongTensor.eq().sum", "torch.LongTensor.eq", "target.data.cpu"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "preds", "=", "[", "]", "\n", "for", "age", "in", "output", ":", "\n", "            ", "idx", "=", "np", ".", "digitize", "(", "int", "(", "age", ")", ",", "self", ".", "agebins", ")", "\n", "preds", ".", "append", "(", "int", "(", "idx", ")", ")", "\n", "", "preds", "=", "torch", ".", "LongTensor", "(", "preds", ")", "\n", "res", "=", "float", "(", "preds", ".", "eq", "(", "target", ".", "data", ".", "cpu", "(", ")", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n", "return", "res", "", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize": [[14, 21], ["numpy.linalg.norm", "len"], "function", ["None"], ["def", "normalize", "(", "x", ",", "ord", "=", "None", ",", "axis", "=", "None", ",", "epsilon", "=", "10e-12", ")", ":", "\n", "    ", "''' Devide the vectors in x by their norms.'''", "\n", "if", "axis", "is", "None", ":", "\n", "        ", "axis", "=", "len", "(", "x", ".", "shape", ")", "-", "1", "\n", "", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "x", ",", "ord", "=", "None", ",", "axis", "=", "axis", ",", "keepdims", "=", "True", ")", "\n", "x", "=", "x", "/", "(", "norm", "+", "epsilon", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_FARs": [[22, 34], ["list", "numpy.kron", "numpy.insert", "numpy.insert", "range", "torch.Tensor", "range", "FARs.cuda.cuda"], "function", ["None"], ["", "def", "get_FARs", "(", "tool", "=", "'numpy'", ",", "cuda", "=", "False", ")", ":", "\n", "    ", "tmp1", "=", "[", "10", "**", "x", "for", "x", "in", "range", "(", "-", "8", ",", "0", ",", "1", ")", "]", "\n", "tmp2", "=", "list", "(", "range", "(", "1", ",", "10", ",", "1", ")", ")", "\n", "tmp", "=", "np", ".", "kron", "(", "tmp1", ",", "tmp2", ")", "\n", "tmp", "=", "np", ".", "insert", "(", "tmp", ",", "0", ",", "0.0", ")", "\n", "tmp", "=", "np", ".", "insert", "(", "tmp", ",", "tmp", ".", "size", ",", "1.0", ")", "\n", "FARs", "=", "tmp", "\n", "if", "tool", "==", "'torch'", ":", "\n", "        ", "FARs", "=", "torch", ".", "Tensor", "(", "tmp", ")", "\n", "if", "cuda", ":", "\n", "            ", "FARs", "=", "FARs", ".", "cuda", "(", ")", "\n", "", "", "return", "FARs", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.ROC_plot": [[35, 60], ["range", "matplotlib.FontProperties", "matplotlib.figure", "range", "matplotlib.xlim", "matplotlib.xticks", "matplotlib.ylim", "matplotlib.yticks", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.grid", "matplotlib.savefig", "matplotlib.show", "matplotlib.clf", "len", "len", "len", "len", "matplotlib.semilogx", "os.path.join"], "function", ["None"], ["", "def", "ROC_plot", "(", "TARs", ",", "FARs", ",", "legends", ",", "savedir", ",", "legend_loc", "=", "'lower right'", ")", ":", "\n", "# Both TARs and FARs are type 'list'", "\n", "    ", "assert", "(", "len", "(", "TARs", ")", "==", "len", "(", "FARs", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "FARs", ")", ")", ":", "\n", "        ", "FARs", "[", "i", "]", "=", "0.1", "*", "FARs", "[", "i", "]", "\n", "\n", "", "font_prop", "=", "font_manager", ".", "FontProperties", "(", "size", "=", "13", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "colors", "=", "[", "'C0'", ",", "'C1'", ",", "'C2'", ",", "'C3'", ",", "'C4'", ",", "'C5'", ",", "'C6'", ",", "'C7'", ",", "'C8'", ",", "'C9'", "]", "\n", "lw", "=", "2", "\n", "for", "i", "in", "range", "(", "len", "(", "TARs", ")", ")", ":", "\n", "        ", "plt", ".", "semilogx", "(", "100", "*", "FARs", "[", "i", "]", ",", "100", "*", "TARs", "[", "i", "]", ",", "color", "=", "colors", "[", "i", "]", ",", "\n", "lw", "=", "lw", ",", "label", "=", "legends", "[", "i", "]", ")", "\n", "", "plt", ".", "xlim", "(", "[", "10e-4", ",", "1", "]", ")", "\n", "plt", ".", "xticks", "(", "fontsize", "=", "13", ")", "\n", "plt", ".", "ylim", "(", "[", "0.0", ",", "100", "]", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "13", ")", "\n", "plt", ".", "xlabel", "(", "'False Accept Rate (%)'", ",", "fontproperties", "=", "font_prop", ")", "\n", "plt", ".", "ylabel", "(", "'Verification Rate (%)'", ",", "fontproperties", "=", "font_prop", ")", "\n", "plt", ".", "legend", "(", "loc", "=", "legend_loc", ",", "prop", "=", "font_prop", ")", "\n", "# plt.legend(loc=legend_loc)", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "os", ".", "path", ".", "join", "(", "savedir", ",", "'ROC_11lh.pdf'", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_index_dict": [[61, 69], ["enumerate", "open", "list", "x.split", "os.path.splitext", "os.path.basename"], "function", ["None"], ["", "def", "get_index_dict", "(", "imagepaths_filename", ")", ":", "\n", "    ", "index_dict", "=", "{", "}", "\n", "with", "open", "(", "imagepaths_filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "list", "(", "f", ")", "\n", "imagepaths", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "for", "x", "in", "lines", "]", "\n", "", "for", "i", ",", "path", "in", "enumerate", "(", "imagepaths", ")", ":", "\n", "        ", "index_dict", "[", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "path", ")", ")", "[", "0", "]", "]", "=", "i", "\n", "", "return", "index_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_index_dict_rfw": [[70, 80], ["enumerate", "open", "list", "[].split", "path.split", "os.path.splitext", "x.split"], "function", ["None"], ["", "def", "get_index_dict_rfw", "(", "imagepaths_filename", ")", ":", "\n", "    ", "index_dict", "=", "{", "}", "\n", "with", "open", "(", "imagepaths_filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "list", "(", "f", ")", "\n", "imagepaths", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "for", "x", "in", "lines", "]", "\n", "", "for", "i", ",", "path", "in", "enumerate", "(", "imagepaths", ")", ":", "\n", "        ", "sub_name", "=", "[", "d", "for", "d", "in", "path", ".", "split", "(", "'/'", ")", "if", "d", "!=", "''", "]", "\n", "sub_name", "=", "'/'", ".", "join", "(", "sub_name", "[", "-", "3", ":", "]", ")", "\n", "index_dict", "[", "os", ".", "path", ".", "splitext", "(", "sub_name", ")", "[", "0", "]", "]", "=", "i", "\n", "", "return", "index_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.read_pairfile": [[81, 93], ["open", "f.readlines", "line.strip().split", "pairs.append", "f.readlines", "line.strip().split", "pairs.append", "line.strip", "line.strip"], "function", ["None"], ["", "def", "read_pairfile", "(", "pairs_filename", ",", "dataset", ")", ":", "\n", "    ", "pairs", "=", "[", "]", "\n", "with", "open", "(", "pairs_filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "if", "dataset", "==", "'LFW'", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", "[", "0", ":", "]", ":", "\n", "                ", "pair", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "pairs", ".", "append", "(", "pair", ")", "\n", "", "", "elif", "dataset", "==", "'RFW'", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", "[", "0", ":", "]", ":", "\n", "                ", "pair", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "pairs", ".", "append", "(", "pair", ")", "\n", "", "", "", "return", "pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pair_and_label": [[94, 113], ["numpy.array", "numpy.array", "np.array.append", "np.array.append", "len", "len", "int", "int", "int", "int"], "function", ["None"], ["", "def", "get_pair_and_label", "(", "pairfiles", ",", "index_dict", ")", ":", "\n", "    ", "nrof_skipped_pairs", "=", "0", "\n", "pair_indices", "=", "[", "]", "\n", "issame_label", "=", "[", "]", "\n", "for", "pair", "in", "pairfiles", ":", "\n", "        ", "if", "len", "(", "pair", ")", "==", "3", ":", "\n", "            ", "path0", "=", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "1", "]", ")", "\n", "path1", "=", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "2", "]", ")", "\n", "issame", "=", "True", "\n", "", "elif", "len", "(", "pair", ")", "==", "4", ":", "\n", "            ", "path0", "=", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "1", "]", ")", "\n", "path1", "=", "pair", "[", "2", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "3", "]", ")", "\n", "issame", "=", "False", "\n", "", "pair_indices", ".", "append", "(", "(", "index_dict", "[", "path0", "]", ",", "index_dict", "[", "path1", "]", ")", ")", "\n", "issame_label", ".", "append", "(", "issame", ")", "\n", "", "pair_indices", "=", "np", ".", "array", "(", "pair_indices", ")", "\n", "issame_label", "=", "np", ".", "array", "(", "issame_label", ")", "\n", "\n", "return", "issame_label", ",", "pair_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pair_and_label_rfw": [[114, 133], ["numpy.array", "numpy.array", "np.array.append", "np.array.append", "len", "os.path.join", "os.path.join", "len", "os.path.join", "os.path.join", "int", "int", "int", "int"], "function", ["None"], ["", "def", "get_pair_and_label_rfw", "(", "pairfiles", ",", "index_dict", ",", "race", ")", ":", "\n", "    ", "nrof_skipped_pairs", "=", "0", "\n", "pair_indices", "=", "[", "]", "\n", "issame_label", "=", "[", "]", "\n", "for", "pair", "in", "pairfiles", ":", "\n", "        ", "if", "len", "(", "pair", ")", "==", "3", ":", "\n", "            ", "path0", "=", "os", ".", "path", ".", "join", "(", "race", ",", "pair", "[", "0", "]", ",", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "1", "]", ")", ")", "\n", "path1", "=", "os", ".", "path", ".", "join", "(", "race", ",", "pair", "[", "0", "]", ",", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "2", "]", ")", ")", "\n", "issame", "=", "True", "\n", "", "elif", "len", "(", "pair", ")", "==", "4", ":", "\n", "            ", "path0", "=", "os", ".", "path", ".", "join", "(", "race", ",", "pair", "[", "0", "]", ",", "pair", "[", "0", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "1", "]", ")", ")", "\n", "path1", "=", "os", ".", "path", ".", "join", "(", "race", ",", "pair", "[", "2", "]", ",", "pair", "[", "2", "]", "+", "'_'", "+", "'%04d'", "%", "int", "(", "pair", "[", "3", "]", ")", ")", "\n", "issame", "=", "False", "\n", "", "pair_indices", ".", "append", "(", "(", "index_dict", "[", "path0", "]", ",", "index_dict", "[", "path1", "]", ")", ")", "\n", "issame_label", ".", "append", "(", "issame", ")", "\n", "", "pair_indices", "=", "np", ".", "array", "(", "pair_indices", ")", "\n", "issame_label", "=", "np", ".", "array", "(", "issame_label", ")", "\n", "\n", "return", "issame_label", ",", "pair_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_labels_from_txt": [[134, 144], ["numpy.array", "open", "f.readlines", "class_sorted.sort", "int", "class_sorted.index", "[].split", "x.split"], "function", ["None"], ["", "def", "get_labels_from_txt", "(", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "class_sorted", "=", "[", "x", ".", "split", "(", "'\\t'", ")", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "for", "x", "in", "lines", "]", "\n", "classname", "=", "[", "]", "\n", "classname", "[", ":", "]", "=", "class_sorted", "[", ":", "]", "\n", "class_sorted", ".", "sort", "(", ")", "\n", "", "labels", "=", "[", "int", "(", "class_sorted", ".", "index", "(", "x", ")", ")", "for", "x", "in", "classname", "]", "\n", "labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "return", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pairwise_score_label": [[145, 155], ["numpy.triu_indices", "len"], "function", ["None"], ["", "def", "get_pairwise_score_label", "(", "score_mat", ",", "label", ")", ":", "\n", "    ", "n", "=", "label", ".", "size", "\n", "assert", "score_mat", ".", "shape", "[", "0", "]", "==", "score_mat", ".", "shape", "[", "1", "]", "==", "n", "\n", "triu_indices", "=", "np", ".", "triu_indices", "(", "n", ",", "1", ")", "\n", "if", "len", "(", "label", ".", "shape", ")", "==", "1", ":", "\n", "        ", "label", "=", "label", "[", ":", ",", "None", "]", "\n", "", "label_mat", "=", "label", "==", "label", ".", "T", "\n", "score_vec", "=", "score_mat", "[", "triu_indices", "]", "\n", "label_vec", "=", "label_mat", "[", "triu_indices", "]", "\n", "return", "score_vec", ",", "label_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_genpairs_imppairs": [[156, 176], ["numpy.triu_indices", "numpy.zeros", "numpy.where", "numpy.ones", "numpy.where", "len"], "function", ["None"], ["", "def", "get_genpairs_imppairs", "(", "label", ")", ":", "\n", "# the returned genid and impid are tuple with lengh of 2", "\n", "# if convert to the numpy, shape = (2*N)", "\n", "# N is the number of pairs", "\n", "    ", "n", "=", "label", ".", "size", "\n", "triu_indices", "=", "np", ".", "triu_indices", "(", "n", ",", "1", ")", "\n", "if", "len", "(", "label", ".", "shape", ")", "==", "1", ":", "\n", "        ", "label", "=", "label", "[", ":", ",", "None", "]", "\n", "\n", "", "label_mat", "=", "label", "==", "label", ".", "T", "\n", "temp", "=", "np", ".", "zeros", "(", "label_mat", ".", "shape", ",", "dtype", "=", "bool", ")", "\n", "temp", "[", "triu_indices", "]", "=", "True", "\n", "genlab", "=", "label_mat", "&", "temp", "\n", "genid", "=", "np", ".", "where", "(", "genlab", "==", "True", ")", "\n", "\n", "temp", "=", "np", ".", "ones", "(", "label_mat", ".", "shape", ",", "dtype", "=", "bool", ")", "\n", "temp", "[", "triu_indices", "]", "=", "False", "\n", "implab", "=", "label_mat", "|", "temp", "\n", "impid", "=", "np", ".", "where", "(", "implab", "==", "False", ")", "\n", "return", "genid", ",", "impid", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.curve_plot": [[177, 196], ["numpy.array", "numpy.array", "matplotlib.FontProperties", "matplotlib.figure", "matplotlib.plot", "matplotlib.xticks", "matplotlib.ylim", "matplotlib.yticks", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.savefig", "matplotlib.show", "matplotlib.clf"], "function", ["None"], ["", "def", "curve_plot", "(", "x_axis", ",", "y_axis", ",", "savepath", ",", "font_size", "=", "13", ")", ":", "\n", "    ", "x_axis", "=", "np", ".", "array", "(", "x_axis", ")", "\n", "y_axis", "=", "np", ".", "array", "(", "y_axis", ")", "\n", "font_prop", "=", "font_manager", ".", "FontProperties", "(", "size", "=", "font_size", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "colors", "=", "[", "'C0'", ",", "'C1'", ",", "'C2'", ",", "'C3'", ",", "'C4'", ",", "'C5'", ",", "'C6'", ",", "'C7'", ",", "'C8'", ",", "'C9'", "]", "\n", "lw", "=", "2", "\n", "plt", ".", "plot", "(", "x_axis", ",", "y_axis", ",", "color", "=", "colors", "[", "0", "]", ",", "lw", "=", "lw", ")", "\n", "legends", "=", "[", "'112x112'", ",", "'100x100'", ",", "'90x90'", ",", "'75x75'", ",", "'56x56'", ",", "'28x28'", ",", "'14x14'", ",", "'7x7'", "]", "\n", "plt", ".", "xticks", "(", "x_axis", ",", "legends", ",", "rotation", "=", "45", ",", "fontsize", "=", "font_size", ")", "\n", "plt", ".", "ylim", "(", "[", "50", ",", "100", "]", ")", "\n", "plt", ".", "yticks", "(", "fontsize", "=", "font_size", ")", "\n", "plt", ".", "xlabel", "(", "'Image Size'", ",", "fontproperties", "=", "font_prop", ")", "\n", "plt", ".", "ylabel", "(", "'Gender Accuracy'", ",", "fontproperties", "=", "font_prop", ")", "\n", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "savepath", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "clf", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.FaceVerification.__init__": [[14, 54], ["label_filename.endswith", "numpy.load", "eval_utils.read_pairfile", "eval_utils.get_index_dict", "eval_utils.get_pair_and_label", "eval_utils.get_index_dict_rfw", "list", "label_filename.endswith", "label_filename.endswith", "eval_utils.get_labels_from_txt", "RuntimeError", "eval_utils.read_pairfile", "eval_utils.get_pair_and_label_rfw"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.read_pairfile", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_index_dict", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pair_and_label", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_index_dict_rfw", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_labels_from_txt", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.read_pairfile", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pair_and_label_rfw"], ["    ", "def", "__init__", "(", "self", ",", "label_filename", ",", "\n", "protocol", "=", "'BLUFR'", ",", "metric", "=", "'cosine'", ",", "\n", "nthreads", "=", "8", ",", "multiprocess", "=", "True", ",", "\n", "pair_index_filename", "=", "None", ",", "template_filename", "=", "None", ",", "\n", "pairs_filename", "=", "None", ",", "nfolds", "=", "10", ",", "\n", "nimgs", "=", "None", ",", "ndim", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "protocol", "=", "protocol", "\n", "self", ".", "metric", "=", "metric", "\n", "self", ".", "nthreads", "=", "nthreads", "\n", "self", ".", "multiprocess", "=", "multiprocess", "\n", "self", ".", "pair_index_filename", "=", "pair_index_filename", "\n", "self", ".", "template_filename", "=", "template_filename", "\n", "self", ".", "nfolds", "=", "nfolds", "\n", "\n", "if", "label_filename", ".", "endswith", "(", "'npy'", ")", ":", "\n", "            ", "self", ".", "label", "=", "np", ".", "load", "(", "label_filename", ")", "\n", "", "elif", "label_filename", ".", "endswith", "(", "'txt'", ")", "or", "label_filename", ".", "endswith", "(", "'csv'", ")", ":", "\n", "            ", "self", ".", "label", "=", "get_labels_from_txt", "(", "label_filename", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "'Format doest not support!'", ")", ")", "\n", "\n", "", "if", "self", ".", "protocol", "==", "'LFW'", ":", "\n", "            ", "assert", "(", "pairs_filename", "is", "not", "None", ")", "\n", "pairfiles", "=", "read_pairfile", "(", "pairs_filename", ",", "self", ".", "protocol", ")", "\n", "index_dict", "=", "get_index_dict", "(", "label_filename", ")", "\n", "self", ".", "issame_label", ",", "self", ".", "pair_indices", "=", "get_pair_and_label", "(", "pairfiles", ",", "index_dict", ")", "\n", "\n", "", "if", "self", ".", "protocol", "==", "'RFW'", ":", "\n", "            ", "assert", "(", "pairs_filename", "is", "not", "None", ")", "\n", "index_dict", "=", "get_index_dict_rfw", "(", "label_filename", ")", "\n", "self", ".", "issame_label", "=", "{", "}", "\n", "self", ".", "pair_indices", "=", "{", "}", "\n", "keys", "=", "list", "(", "pairs_filename", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "pair_file", "=", "pairs_filename", "[", "key", "]", "\n", "pairfiles", "=", "read_pairfile", "(", "pair_file", ",", "self", ".", "protocol", ")", "\n", "issame", ",", "pair_indices", "=", "get_pair_and_label_rfw", "(", "pairfiles", ",", "index_dict", ",", "key", ")", "\n", "self", ".", "issame_label", "[", "key", "]", "=", "issame", "\n", "self", ".", "pair_indices", "[", "key", "]", "=", "pair_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.FaceVerification.__call__": [[55, 242], ["verification.find_tar", "print", "eval_utils.normalize", "numpy.load", "eval_utils.normalize", "eval_utils.get_pairwise_score_label", "verification.ROC", "numpy.dot", "verification.cross_valid_accuracy", "print", "numpy.zeros", "range", "RuntimeError", "numpy.sum", "list", "numpy.std", "numpy.sum", "RuntimeError", "numpy.sum", "verification.accuracy", "print", "numpy.load", "eval_utils.normalize", "range", "numpy.mean", "numpy.std", "print", "numpy.square", "numpy.sum", "os.path.join", "numpy.concatenate.astype", "numpy.array().astype", "numpy.array().astype", "verification.accuracy", "accs.append", "range", "numpy.mean().reshape", "numpy.mean().reshape", "numpy.mean().reshape", "numpy.square", "open", "f.readlines", "numpy.zeros", "open", "f.readlines", "numpy.array().astype.extend", "numpy.array().astype.extend", "numpy.concatenate", "numpy.sum", "type", "str", "print", "os.path.join", "pairs.extend", "numpy.array().astype", "numpy.array().reshape", "verification.ROC", "numpy.mean().reshape.append", "numpy.mean().reshape.append", "numpy.mean().reshape.append", "len", "pairs.extend", "numpy.array().astype", "numpy.array().reshape", "verification.ROC", "RuntimeError", "os.path.join", "len", "os.path.join", "numpy.array", "numpy.array", "RuntimeError", "open", "f.readlines", "open", "f.readlines", "open", "pickle.load", "time.time", "multiprocessing.Pool", "functools.partial", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "time.time", "enumerate", "print", "numpy.mean", "numpy.mean", "numpy.mean", "type", "open", "f.readlines", "open", "f.readlines", "open", "pickle.load", "time.time", "multiprocessing.Pool", "functools.partial", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "print", "time.time", "enumerate", "print", "int", "int", "numpy.ones", "numpy.sum", "os.path.join", "os.path.join", "os.path.join", "verification.score_per_pair", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "verification.score_per_pair", "numpy.array", "numpy.array", "int", "int", "len", "numpy.square", "x.split", "x.split", "numpy.array().astype.append", "numpy.array().reshape.append", "x.split", "x.split", "numpy.array().astype.append", "numpy.array().reshape.append", "x.rstrip().split", "x.rstrip().split", "time.time", "time.time", "time.time", "time.time", "x.rstrip().split", "x.rstrip().split", "x.rstrip", "x.rstrip", "x.rstrip", "x.rstrip"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.find_tar", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_pairwise_score_label", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.ROC", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.cross_valid_accuracy", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.accuracy", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.accuracy", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.ROC", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.ROC", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.score_per_pair", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.score_per_pair"], ["", "", "", "def", "__call__", "(", "self", ",", "feat", ")", ":", "\n", "# print('Face Verification on {}'.format(self.protocol))", "\n", "\n", "        ", "if", "self", ".", "metric", "==", "'cosine'", ":", "\n", "            ", "feat", "=", "normalize", "(", "feat", ")", "\n", "\n", "", "if", "self", ".", "protocol", "==", "'BLUFR'", ":", "\n", "            ", "feat_ori", "=", "np", ".", "load", "(", "'/scratch/gongsixue/face_resolution/feats/feat_cfp_112x112.npz'", ")", "\n", "feat_ori", "=", "feat_ori", "[", "'feat'", "]", "\n", "feat_ori", "=", "normalize", "(", "feat_ori", ")", "\n", "\n", "if", "self", ".", "metric", "==", "'cosine'", ":", "\n", "                ", "score_mat", "=", "np", ".", "dot", "(", "feat_ori", ",", "feat", ".", "T", ")", "\n", "", "elif", "self", ".", "metric", "==", "'Euclidean'", ":", "\n", "                ", "score_mat", "=", "np", ".", "zeros", "(", "(", "feat", ".", "shape", "[", "0", "]", ",", "feat", ".", "shape", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "feat", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "temp", "=", "feat", "[", "i", ",", ":", "]", "\n", "temp", "=", "temp", "[", "None", ",", ":", "]", "\n", "temp1", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "feat", "-", "temp", ")", ",", "axis", "=", "1", ")", "\n", "score_mat", "[", "i", ",", ":", "]", "=", "-", "1", "*", "temp1", "[", ":", "]", "\n", "", "", "else", ":", "\n", "                ", "raise", "(", "RuntimeError", "(", "'Metric doest not support!'", ")", ")", "\n", "", "score_vec", ",", "label_vec", "=", "get_pairwise_score_label", "(", "score_mat", ",", "self", ".", "label", ")", "\n", "TARs", ",", "FARs", ",", "thresholds", "=", "ROC", "(", "score_vec", ",", "label_vec", ")", "\n", "\n", "", "elif", "self", ".", "protocol", "==", "'LFW'", ":", "\n", "            ", "feat1", "=", "feat", "[", "self", ".", "pair_indices", "[", ":", ",", "0", "]", "]", "\n", "feat2", "=", "feat", "[", "self", ".", "pair_indices", "[", ":", ",", "1", "]", "]", "\n", "if", "self", ".", "metric", "==", "'cosine'", ":", "\n", "                ", "score_vec", "=", "np", ".", "sum", "(", "feat1", "*", "feat2", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "metric", "==", "'Euclidean'", ":", "\n", "                ", "score_vec", "=", "-", "1", "*", "np", ".", "sum", "(", "np", ".", "square", "(", "feat1", "-", "feat2", ")", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "raise", "(", "RuntimeError", "(", "'The disctnace metric does not support!'", ")", ")", "\n", "", "avg", ",", "std", ",", "thd", "=", "cross_valid_accuracy", "(", "score_vec", ",", "self", ".", "issame_label", ",", "\n", "self", ".", "pair_indices", ",", "self", ".", "nfolds", ")", "\n", "print", "(", "\"Accuracy is {}\"", ".", "format", "(", "avg", ")", ")", "\n", "return", "avg", ",", "std", ",", "thd", "\n", "\n", "", "elif", "self", ".", "protocol", "==", "'RFW'", ":", "\n", "            ", "acc_dict", "=", "{", "}", "\n", "keys", "=", "list", "(", "self", ".", "issame_label", ")", "\n", "for", "key", "in", "keys", ":", "\n", "                ", "feat1", "=", "feat", "[", "self", ".", "pair_indices", "[", "key", "]", "[", ":", ",", "0", "]", "]", "\n", "feat2", "=", "feat", "[", "self", ".", "pair_indices", "[", "key", "]", "[", ":", ",", "1", "]", "]", "\n", "score_vec", "=", "np", ".", "sum", "(", "feat1", "*", "feat2", ",", "axis", "=", "1", ")", "\n", "acc", ",", "thd", "=", "accuracy", "(", "score_vec", ",", "self", ".", "issame_label", "[", "key", "]", ")", "\n", "print", "(", "\"Accuracy of {} is {}\"", ".", "format", "(", "key", ",", "acc", ")", ")", "\n", "acc_dict", "[", "key", "]", "=", "acc", "\n", "", "std", "=", "np", ".", "std", "(", "[", "100.0", "*", "acc_dict", "[", "x", "]", "for", "x", "in", "keys", "]", ")", "\n", "return", "std", ",", "acc_dict", ",", "thd", "\n", "\n", "", "elif", "self", ".", "protocol", "==", "'CFP'", ":", "\n", "            ", "feat_ori", "=", "np", ".", "load", "(", "'/scratch/gongsixue/face_resolution/feats/feat_cfp_112x112.npz'", ")", "\n", "feat_ori", "=", "feat_ori", "[", "'feat'", "]", "\n", "feat_ori", "=", "normalize", "(", "feat_ori", ")", "\n", "\n", "folds", "=", "[", "'01'", ",", "'02'", ",", "'03'", ",", "'04'", ",", "'05'", ",", "'06'", ",", "'07'", ",", "'08'", ",", "'09'", ",", "'10'", "]", "\n", "accs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "                ", "splitfolder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "pair_index_filename", ",", "folds", "[", "i", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitfolder", ",", "'diff.txt'", ")", ")", "as", "f", ":", "\n", "                    ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "pair1", "=", "[", "int", "(", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "','", ")", "[", "0", "]", ")", "-", "1", "for", "x", "in", "lines", "]", "\n", "pair2", "=", "[", "int", "(", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "','", ")", "[", "1", "]", ")", "-", "1", "for", "x", "in", "lines", "]", "\n", "labels", "=", "np", ".", "zeros", "(", "(", "len", "(", "lines", ")", ")", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitfolder", ",", "'same.txt'", ")", ")", "as", "f", ":", "\n", "                    ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "pair1", ".", "extend", "(", "[", "int", "(", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "','", ")", "[", "0", "]", ")", "-", "1", "for", "x", "in", "lines", "]", ")", "\n", "pair2", ".", "extend", "(", "[", "int", "(", "x", ".", "rstrip", "(", "'\\n'", ")", ".", "split", "(", "','", ")", "[", "1", "]", ")", "-", "1", "for", "x", "in", "lines", "]", ")", "\n", "labels", "=", "np", ".", "concatenate", "(", "(", "labels", ",", "np", ".", "ones", "(", "(", "len", "(", "lines", ")", ")", ")", ")", ",", "axis", "=", "0", ")", "\n", "", "label_vec", "=", "labels", ".", "astype", "(", "'bool'", ")", "\n", "pair1", "=", "np", ".", "array", "(", "pair1", ")", ".", "astype", "(", "'int'", ")", "\n", "pair2", "=", "np", ".", "array", "(", "pair2", ")", ".", "astype", "(", "'int'", ")", "\n", "feat1", "=", "feat", "[", "pair1", ",", ":", "]", "\n", "feat2", "=", "feat_ori", "[", "pair2", ",", ":", "]", "\n", "if", "self", ".", "metric", "==", "'cosine'", ":", "\n", "                    ", "score_vec", "=", "np", ".", "sum", "(", "feat1", "*", "feat2", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "metric", "==", "'Euclidean'", ":", "\n", "                    ", "score_vec", "=", "-", "1", "*", "np", ".", "sum", "(", "np", ".", "square", "(", "feat1", "-", "feat2", ")", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "(", "RuntimeError", "(", "'The disctnace metric does not support!'", ")", ")", "\n", "", "acc", ",", "thd", "=", "accuracy", "(", "score_vec", ",", "label_vec", ")", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "", "avg", "=", "np", ".", "mean", "(", "accs", ")", "\n", "std", "=", "np", ".", "std", "(", "accs", ")", "\n", "print", "(", "\"Accuracy is {}, STD is {}\"", ".", "format", "(", "avg", ",", "std", ")", ")", "\n", "return", "avg", ",", "std", "\n", "\n", "", "elif", "self", ".", "protocol", "==", "'IJBA'", ":", "\n", "            ", "assert", "(", "self", ".", "pair_index_filename", "is", "not", "None", ")", "\n", "assert", "(", "type", "(", "self", ".", "pair_index_filename", ")", "==", "str", ")", "\n", "TARs", "=", "[", "]", "\n", "FARs", "=", "[", "]", "\n", "thresholds", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "                ", "sidx", "=", "str", "(", "i", "+", "1", ")", "\n", "print", "(", "'split:[{}\\{}]'", ".", "format", "(", "i", "+", "1", ",", "10", ")", ")", "\n", "splitfolder", "=", "os", ".", "path", ".", "join", "(", "self", ".", "pair_index_filename", ",", "'split'", "+", "sidx", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitfolder", ",", "'gen_pairs.csv'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "gen_pairs", "=", "f", ".", "readlines", "(", ")", "\n", "gen_pairs", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "for", "x", "in", "gen_pairs", "]", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitfolder", ",", "'imp_pairs.csv'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "imp_pairs", "=", "f", ".", "readlines", "(", ")", "\n", "imp_pairs", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "for", "x", "in", "imp_pairs", "]", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "splitfolder", ",", "'temp_dict.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "                    ", "template", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "pairs", "=", "[", "(", "0", ",", "x", ")", "for", "x", "in", "imp_pairs", "]", "\n", "pairs", ".", "extend", "(", "[", "(", "1", ",", "x", ")", "for", "x", "in", "gen_pairs", "]", ")", "\n", "\n", "if", "self", ".", "multiprocess", ":", "\n", "                    ", "begin", "=", "time", ".", "time", "(", ")", "\n", "pool", "=", "multiprocessing", ".", "Pool", "(", "self", ".", "nthreads", ")", "\n", "score_parfunc", "=", "partial", "(", "score_per_pair", ",", "self", ".", "metric", ",", "feat", ",", "template", ")", "\n", "results", "=", "pool", ".", "map", "(", "score_parfunc", ",", "pairs", ")", "\n", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "label_vec", "=", "[", "x", "[", "0", "]", "for", "x", "in", "results", "if", "x", "is", "not", "None", "]", "\n", "score_vec", "=", "[", "x", "[", "1", "]", "for", "x", "in", "results", "if", "x", "is", "not", "None", "]", "\n", "print", "(", "'Time of multiple threads is {}'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "begin", ")", ")", "\n", "", "else", ":", "\n", "                    ", "label_vec", "=", "[", "]", "\n", "score_vec", "=", "[", "]", "\n", "begin", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "pair", "in", "enumerate", "(", "pairs", ")", ":", "\n", "                        ", "r", "=", "score_per_pair", "(", "self", ".", "metric", ",", "feat", ",", "template", ",", "pair", ")", "\n", "if", "r", "is", "not", "None", ":", "\n", "                            ", "label_vec", ".", "append", "(", "r", "[", "0", "]", ")", "\n", "score_vec", ".", "append", "(", "r", "[", "1", "]", ")", "\n", "", "", "print", "(", "'Time of Single thread is {}'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "begin", ")", ")", "\n", "", "label_vec", "=", "np", ".", "array", "(", "label_vec", ")", ".", "astype", "(", "bool", ")", "\n", "score_vec", "=", "np", ".", "array", "(", "score_vec", ")", ".", "reshape", "(", "-", "1", ")", "\n", "TAR", ",", "FAR", ",", "threshold", "=", "ROC", "(", "score_vec", ",", "label_vec", ")", "\n", "TARs", ".", "append", "(", "TAR", ")", "\n", "FARs", ".", "append", "(", "FAR", ")", "\n", "thresholds", ".", "append", "(", "threshold", ")", "\n", "", "TARs", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "TARs", ")", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ")", "\n", "FARs", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "FARs", ")", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ")", "\n", "thresholds", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "thresholds", ")", ",", "axis", "=", "0", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "", "elif", "self", ".", "protocol", "==", "'IJBB'", ":", "\n", "            ", "assert", "(", "type", "(", "self", ".", "pair_index_filename", ")", "==", "dict", ")", "\n", "assert", "(", "self", ".", "template_filename", "is", "not", "None", ")", "\n", "with", "open", "(", "self", ".", "pair_index_filename", "[", "'genuine'", "]", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "gen_pairs", "=", "f", ".", "readlines", "(", ")", "\n", "gen_pairs", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "for", "x", "in", "gen_pairs", "]", "\n", "", "size", "=", "len", "(", "gen_pairs", ")", "\n", "with", "open", "(", "self", ".", "pair_index_filename", "[", "'imposter'", "]", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "imp_pairs", "=", "f", ".", "readlines", "(", ")", "\n", "imp_pairs", "=", "[", "x", ".", "split", "(", "'\\n'", ")", "[", "0", "]", "for", "x", "in", "imp_pairs", "[", ":", "15", "*", "size", "]", "]", "\n", "", "with", "open", "(", "self", ".", "template_filename", ",", "'rb'", ")", "as", "fp", ":", "\n", "                ", "template", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "pairs", "=", "[", "(", "0", ",", "x", ")", "for", "x", "in", "imp_pairs", "]", "\n", "pairs", ".", "extend", "(", "[", "(", "1", ",", "x", ")", "for", "x", "in", "gen_pairs", "]", ")", "\n", "\n", "if", "self", ".", "multiprocess", ":", "\n", "                ", "begin", "=", "time", ".", "time", "(", ")", "\n", "pool", "=", "multiprocessing", ".", "Pool", "(", "self", ".", "nthreads", ")", "\n", "score_parfunc", "=", "partial", "(", "score_per_pair", ",", "self", ".", "metric", ",", "feat", ",", "template", ")", "\n", "results", "=", "pool", ".", "map", "(", "score_parfunc", ",", "pairs", ")", "\n", "pool", ".", "close", "(", ")", "\n", "pool", ".", "join", "(", ")", "\n", "label_vec", "=", "[", "x", "[", "0", "]", "for", "x", "in", "results", "if", "x", "is", "not", "None", "]", "\n", "score_vec", "=", "[", "x", "[", "1", "]", "for", "x", "in", "results", "if", "x", "is", "not", "None", "]", "\n", "print", "(", "'Time of multiple threads is {}'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "begin", ")", ")", "\n", "", "else", ":", "\n", "                ", "label_vec", "=", "[", "]", "\n", "score_vec", "=", "[", "]", "\n", "begin", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "pair", "in", "enumerate", "(", "pairs", ")", ":", "\n", "                    ", "r", "=", "score_per_pair", "(", "self", ".", "metric", ",", "feat", ",", "template", ",", "pair", ")", "\n", "if", "r", "is", "not", "None", ":", "\n", "                        ", "label_vec", ".", "append", "(", "r", "[", "0", "]", ")", "\n", "score_vec", ".", "append", "(", "r", "[", "1", "]", ")", "\n", "", "", "print", "(", "'Time of Single thread is {}'", ".", "format", "(", "time", ".", "time", "(", ")", "-", "begin", ")", ")", "\n", "", "label_vec", "=", "np", ".", "array", "(", "label_vec", ")", ".", "astype", "(", "bool", ")", "\n", "score_vec", "=", "np", ".", "array", "(", "score_vec", ")", ".", "reshape", "(", "-", "1", ")", "\n", "TARs", ",", "FARs", ",", "thresholds", "=", "ROC", "(", "score_vec", ",", "label_vec", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "'Protocol doest not support!'", ")", ")", "\n", "\n", "", "tar", "=", "find_tar", "(", "FARs", ",", "TARs", ",", "0.01", ")", "\n", "print", "(", "\"TAR is {} at FAR 0.1%\"", ".", "format", "(", "tar", ")", ")", "\n", "\n", "return", "TARs", ",", "FARs", ",", "thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.find_tar": [[243, 249], ["None"], "function", ["None"], ["", "", "def", "find_tar", "(", "FAR", ",", "TAR", ",", "far", ")", ":", "\n", "    ", "i", "=", "0", "\n", "while", "FAR", "[", "i", "]", "<", "far", ":", "\n", "        ", "i", "+=", "1", "\n", "", "tar", "=", "TAR", "[", "i", "]", "\n", "return", "tar", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.ROC": [[250, 288], ["eval_utils.get_FARs", "numpy.arange", "len", "len", "numpy.zeros", "numpy.zeros", "enumerate", "len", "verification.find_thresholds_by_FAR", "len", "numpy.size", "print", "len", "numpy.mean", "numpy.mean", "false_accept_indices.append", "false_reject_indices.append", "numpy.size"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.get_FARs", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.find_thresholds_by_FAR"], ["", "def", "ROC", "(", "score_vec", ",", "label_vec", ",", "thresholds", "=", "None", ",", "FARs", "=", "None", ",", "get_false_indices", "=", "False", ")", ":", "\n", "    ", "assert", "len", "(", "score_vec", ".", "shape", ")", "==", "1", "\n", "assert", "score_vec", ".", "shape", "==", "label_vec", ".", "shape", "\n", "assert", "label_vec", ".", "dtype", "==", "np", ".", "bool", "\n", "FARs", "=", "get_FARs", "(", ")", "\n", "if", "thresholds", "is", "None", ":", "\n", "        ", "thresholds", "=", "find_thresholds_by_FAR", "(", "score_vec", ",", "label_vec", ",", "FARs", "=", "FARs", ")", "\n", "\n", "", "assert", "len", "(", "thresholds", ".", "shape", ")", "==", "1", "\n", "if", "np", ".", "size", "(", "thresholds", ")", ">", "10000", ":", "\n", "        ", "print", "(", "'number of thresholds (%d) very large, computation may take a long time!'", "%", "np", ".", "size", "(", "thresholds", ")", ")", "\n", "\n", "", "score_pos", "=", "score_vec", "[", "label_vec", "]", "\n", "score_neg", "=", "score_vec", "[", "~", "label_vec", "]", "\n", "index_vec", "=", "np", ".", "arange", "(", "len", "(", "score_vec", ")", ")", "\n", "index_pos", "=", "index_vec", "[", "label_vec", "]", "\n", "index_neg", "=", "index_vec", "[", "~", "label_vec", "]", "\n", "num_pos", "=", "len", "(", "score_pos", ")", "\n", "num_neg", "=", "len", "(", "score_neg", ")", "\n", "\n", "# FARs would be check again", "\n", "TARs", "=", "np", ".", "zeros", "(", "thresholds", ".", "shape", "[", "0", "]", ")", "\n", "FARs", "=", "np", ".", "zeros", "(", "thresholds", ".", "shape", "[", "0", "]", ")", "\n", "false_accept_indices", "=", "[", "]", "\n", "false_reject_indices", "=", "[", "]", "\n", "for", "i", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "        ", "correct_pos", "=", "score_pos", ">=", "threshold", "\n", "correct_neg", "=", "score_neg", "<", "threshold", "\n", "TARs", "[", "i", "]", "=", "np", ".", "mean", "(", "correct_pos", ")", "\n", "FARs", "[", "i", "]", "=", "np", ".", "mean", "(", "~", "correct_neg", ")", "\n", "if", "get_false_indices", ":", "\n", "            ", "false_accept_indices", ".", "append", "(", "index_pos", "[", "~", "correct_pos", "]", ")", "\n", "false_reject_indices", ".", "append", "(", "index_neg", "[", "~", "correct_neg", "]", ")", "\n", "\n", "", "", "if", "get_false_indices", ":", "\n", "        ", "return", "TARs", ",", "FARs", ",", "thresholds", ",", "false_accept_indices", ",", "false_reject_indices", "\n", "", "else", ":", "\n", "        ", "return", "TARs", ",", "FARs", ",", "thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.cross_valid_accuracy": [[289, 306], ["sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.mean", "numpy.std", "numpy.mean", "sklearn.model_selection.KFold.split", "verification.accuracy", "verification.accuracy"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.accuracy", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.accuracy"], ["", "", "def", "cross_valid_accuracy", "(", "score_vec", ",", "label_vec", ",", "indices", ",", "nfolds", ")", ":", "\n", "    ", "kfold", "=", "KFold", "(", "n_splits", "=", "nfolds", ",", "shuffle", "=", "False", ")", "\n", "\n", "accuracies", "=", "np", ".", "zeros", "(", "nfolds", ")", "\n", "thresholds", "=", "np", ".", "zeros", "(", "nfolds", ")", "\n", "\n", "for", "fold_idx", ",", "(", "train_set", ",", "test_set", ")", "in", "enumerate", "(", "kfold", ".", "split", "(", "indices", ")", ")", ":", "\n", "        ", "_", ",", "threshold", "=", "accuracy", "(", "score_vec", "[", "train_set", "]", ",", "label_vec", "[", "train_set", "]", ")", "\n", "acc", ",", "_", "=", "accuracy", "(", "score_vec", "[", "test_set", "]", ",", "label_vec", "[", "test_set", "]", ",", "threshold", ")", "\n", "accuracies", "[", "fold_idx", "]", "=", "acc", "\n", "thresholds", "[", "fold_idx", "]", "=", "threshold", "\n", "\n", "", "avg", "=", "np", ".", "mean", "(", "accuracies", ")", "\n", "std", "=", "np", ".", "std", "(", "accuracies", ")", "\n", "thd", "=", "np", ".", "mean", "(", "thresholds", ")", "\n", "\n", "return", "avg", ",", "std", ",", "thd", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.score_per_pair": [[307, 336], ["feat[].view", "feat[].view", "index.split", "index.split", "numpy.mean", "numpy.mean", "numpy.dot", "template.keys", "template.keys", "RuntimeError", "numpy.sum", "numpy.square"], "function", ["None"], ["", "def", "score_per_pair", "(", "metric", ",", "feat", ",", "template", ",", "pair", ")", ":", "\n", "    ", "label", "=", "pair", "[", "0", "]", "\n", "index", "=", "pair", "[", "1", "]", "\n", "if", "template", "is", "None", ":", "\n", "        ", "feat1", "=", "feat", "[", "index", "[", "0", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "feat2", "=", "feat", "[", "index", "[", "1", "]", "]", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "", "else", ":", "\n", "        ", "temp1", "=", "index", ".", "split", "(", "','", ")", "[", "0", "]", "\n", "temp2", "=", "index", ".", "split", "(", "','", ")", "[", "1", "]", "\n", "if", "temp1", "in", "template", ".", "keys", "(", ")", "and", "temp2", "in", "template", ".", "keys", "(", ")", ":", "\n", "            ", "idA", "=", "template", "[", "temp1", "]", "[", "1", "]", "\n", "feat1", "=", "np", ".", "mean", "(", "feat", "[", "idA", ",", ":", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "idB", "=", "template", "[", "temp2", "]", "[", "1", "]", "\n", "feat2", "=", "np", ".", "mean", "(", "feat", "[", "idB", ",", ":", "]", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "feat1", "=", "None", "\n", "feat2", "=", "None", "\n", "\n", "", "", "if", "feat1", "is", "not", "None", "and", "feat2", "is", "not", "None", ":", "\n", "        ", "if", "metric", "==", "'cosine'", ":", "\n", "            ", "score", "=", "np", ".", "dot", "(", "feat1", ",", "feat2", ".", "T", ")", "\n", "", "elif", "metric", "==", "'Euclidean'", ":", "\n", "            ", "score", "=", "-", "1", "*", "np", ".", "sum", "(", "np", ".", "square", "(", "feat1", "-", "feat2", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "'The disctnace metric does not support!'", ")", ")", "\n", "", "return", "label", ",", "score", "\n", "", "else", ":", "\n", "        ", "return", "label", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.find_thresholds_by_FAR": [[337, 366], ["len", "len", "numpy.sort", "numpy.unique", "numpy.insert", "numpy.insert", "numpy.array", "numpy.array", "np.array.append"], "function", ["None"], ["", "", "def", "find_thresholds_by_FAR", "(", "score_vec", ",", "label_vec", ",", "FARs", "=", "None", ",", "epsilon", "=", "10e-8", ")", ":", "\n", "    ", "assert", "len", "(", "score_vec", ".", "shape", ")", "==", "1", "\n", "assert", "score_vec", ".", "shape", "==", "label_vec", ".", "shape", "\n", "assert", "label_vec", ".", "dtype", "==", "np", ".", "bool", "\n", "score_neg", "=", "score_vec", "[", "~", "label_vec", "]", "\n", "score_neg", "=", "np", ".", "sort", "(", "score_neg", ")", "[", ":", ":", "-", "1", "]", "# score from high to low", "\n", "num_neg", "=", "len", "(", "score_neg", ")", "\n", "\n", "assert", "num_neg", ">=", "1", "\n", "\n", "if", "FARs", "is", "None", ":", "\n", "        ", "epsilon", "=", "10e-5", "\n", "thresholds", "=", "np", ".", "unique", "(", "score_neg", ")", "\n", "thresholds", "=", "np", ".", "insert", "(", "thresholds", ",", "0", ",", "thresholds", "[", "0", "]", "+", "epsilon", ")", "\n", "thresholds", "=", "np", ".", "insert", "(", "thresholds", ",", "thresholds", ".", "size", ",", "thresholds", "[", "-", "1", "]", "-", "epsilon", ")", "\n", "", "else", ":", "\n", "        ", "FARs", "=", "np", ".", "array", "(", "FARs", ")", "\n", "num_false_alarms", "=", "(", "num_neg", "*", "FARs", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "thresholds", "=", "[", "]", "\n", "for", "num_false_alarm", "in", "num_false_alarms", ":", "\n", "            ", "if", "num_false_alarm", "==", "0", ":", "\n", "                ", "threshold", "=", "score_neg", "[", "0", "]", "+", "epsilon", "\n", "", "else", ":", "\n", "                ", "threshold", "=", "score_neg", "[", "num_false_alarm", "-", "1", "]", "\n", "", "thresholds", ".", "append", "(", "threshold", ")", "\n", "", "thresholds", "=", "np", ".", "array", "(", "thresholds", ")", "\n", "\n", "", "return", "thresholds", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.verification.accuracy": [[367, 393], ["len", "len", "numpy.zeros", "enumerate", "numpy.argmax", "numpy.mean", "numpy.mean", "numpy.sort", "numpy.size", "print", "numpy.size", "numpy.mean", "numpy.size"], "function", ["None"], ["", "def", "accuracy", "(", "score_vec", ",", "label_vec", ",", "threshold", "=", "None", ")", ":", "\n", "    ", "assert", "len", "(", "score_vec", ".", "shape", ")", "==", "1", "\n", "assert", "len", "(", "label_vec", ".", "shape", ")", "==", "1", "\n", "assert", "score_vec", ".", "shape", "==", "label_vec", ".", "shape", "\n", "assert", "label_vec", ".", "dtype", "==", "np", ".", "bool", "\n", "\n", "# find thresholds by TAR", "\n", "if", "threshold", "is", "None", ":", "\n", "        ", "score_pos", "=", "score_vec", "[", "label_vec", "==", "True", "]", "\n", "thresholds", "=", "np", ".", "sort", "(", "score_pos", ")", "[", ":", ":", "1", "]", "\n", "if", "np", ".", "size", "(", "thresholds", ")", ">", "10000", ":", "\n", "            ", "print", "(", "'number of thresholds (%d) very large, computation may take a long time!'", "%", "np", ".", "size", "(", "thresholds", ")", ")", "\n", "# Loop Computation", "\n", "", "accuracies", "=", "np", ".", "zeros", "(", "np", ".", "size", "(", "thresholds", ")", ")", "\n", "for", "i", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "pred_vec", "=", "score_vec", ">=", "threshold", "\n", "accuracies", "[", "i", "]", "=", "np", ".", "mean", "(", "pred_vec", "==", "label_vec", ")", "\n", "# Matrix Computation, Each column is a threshold", "\n", "", "argmax", "=", "np", ".", "argmax", "(", "accuracies", ")", "\n", "accuracy", "=", "accuracies", "[", "argmax", "]", "\n", "threshold", "=", "np", ".", "mean", "(", "thresholds", "[", "accuracies", "==", "accuracy", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_vec", "=", "score_vec", ">=", "threshold", "\n", "accuracy", "=", "np", ".", "mean", "(", "pred_vec", "==", "label_vec", ")", "\n", "\n", "", "return", "accuracy", ",", "threshold", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.AngleLinear.__init__": [[31, 46], ["torch.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "age_rgs.AngleLinear.weight.data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "age_rgs.AngleLinear.weight.data.uniform_().renorm_", "age_rgs.AngleLinear.weight.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "4", ",", "phiflag", "=", "True", ")", ":", "\n", "        ", "super", "(", "AngleLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "phiflag", "=", "phiflag", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "mlambda", "=", "[", "\n", "lambda", "x", ":", "x", "**", "0", ",", "\n", "lambda", "x", ":", "x", "**", "1", ",", "\n", "lambda", "x", ":", "2", "*", "x", "**", "2", "-", "1", ",", "\n", "lambda", "x", ":", "4", "*", "x", "**", "3", "-", "3", "*", "x", ",", "\n", "lambda", "x", ":", "8", "*", "x", "**", "4", "-", "8", "*", "x", "**", "2", "+", "1", ",", "\n", "lambda", "x", ":", "16", "*", "x", "**", "5", "-", "20", "*", "x", "**", "3", "+", "5", "*", "x", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.AngleLinear.forward": [[48, 78], ["w.renorm().mul", "x.pow().sum().pow", "w.renorm().mul.pow().sum().pow", "x.mm", "cos_theta.clamp.clamp.clamp", "w.renorm().mul.pow().sum().pow.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cos_theta.clamp.clamp.acos", "age_rgs.myphi", "phi_theta.clamp.clamp.clamp", "x.pow().sum().pow.view", "x.pow().sum().pow.view", "w.renorm", "x.pow().sum", "w.renorm().mul.pow().sum", "x.pow().sum().pow.view", "cos_theta.clamp.clamp.data.acos", "x.pow", "w.renorm().mul.pow"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.myphi"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# size=(B,F)    F is feature len", "\n", "        ", "x", "=", "input", "\n", "\n", "# size=(F,Classnum) F=in_features Classnum=out_features", "\n", "w", "=", "self", ".", "weight", "\n", "\n", "ww", "=", "w", ".", "renorm", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul", "(", "1e5", ")", "\n", "xlen", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "pow", "(", "0.5", ")", "# size=B", "\n", "wlen", "=", "ww", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", ".", "pow", "(", "0.5", ")", "# size=Classnum", "\n", "\n", "cos_theta", "=", "x", ".", "mm", "(", "ww", ")", "# size=(B,Classnum)", "\n", "cos_theta", "=", "cos_theta", "/", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "/", "wlen", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "phiflag", ":", "\n", "            ", "cos_m_theta", "=", "self", ".", "mlambda", "[", "self", ".", "m", "]", "(", "cos_theta", ")", "\n", "theta", "=", "Variable", "(", "cos_theta", ".", "data", ".", "acos", "(", ")", ")", "\n", "k", "=", "(", "self", ".", "m", "*", "theta", "/", "3.14159265", ")", ".", "floor", "(", ")", "\n", "n_one", "=", "k", "*", "0.0", "-", "1", "\n", "phi_theta", "=", "(", "n_one", "**", "k", ")", "*", "cos_m_theta", "-", "2", "*", "k", "\n", "", "else", ":", "\n", "            ", "theta", "=", "cos_theta", ".", "acos", "(", ")", "\n", "phi_theta", "=", "myphi", "(", "theta", ",", "self", ".", "m", ")", "\n", "phi_theta", "=", "phi_theta", ".", "clamp", "(", "-", "1", "*", "self", ".", "m", ",", "1", ")", "\n", "\n", "", "cos_theta", "=", "cos_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "phi_theta", "=", "phi_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "output", "=", "(", "cos_theta", ",", "phi_theta", ")", "\n", "return", "output", "# size=(B,Classnum,2)", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.BasicUnit.__init__": [[81, 93], ["torch.Module.__init__", "age_rgs.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "age_rgs.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BasicUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "planes", "=", "planes", "\n", "conv1", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv1", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "conv2", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv2", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "conv1", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", ",", "\n", "conv2", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.BasicUnit.forward": [[95, 99], ["age_rgs.BasicUnit.main"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "main", "(", "x", ")", "\n", "y", "+=", "x", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.BasicBlock.__init__": [[102, 116], ["torch.Module.__init__", "age_rgs.conv3x3", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.PReLU", "torch.PReLU", "torch.PReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "age_rgs.BasicUnit"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "nlayers", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "outplanes", "=", "outplanes", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "outplanes", ",", "stride", "=", "2", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "PReLU", "(", "outplanes", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nlayers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "BasicUnit", "(", "self", ".", "outplanes", ")", ")", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.BasicBlock.forward": [[117, 121], ["age_rgs.BasicBlock.relu1", "age_rgs.BasicBlock.main", "age_rgs.BasicBlock.conv1"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.SphereFace.__init__": [[124, 145], ["torch.Module.__init__", "age_rgs.BasicBlock", "age_rgs.BasicBlock", "age_rgs.BasicBlock", "age_rgs.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "nchannels", "=", "3", ",", "nfilters", "=", "64", ",", "\n", "ndim", "=", "512", ",", "nclasses", "=", "0", ",", "dropout_prob", "=", "0.0", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "SphereFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nclasses", "=", "nclasses", "\n", "self", ".", "nfilters", "=", "nfilters", "\n", "self", ".", "nchannels", "=", "nchannels", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "features", "=", "features", "\n", "\n", "self", ".", "layer1", "=", "BasicBlock", "(", "self", ".", "nchannels", ",", "1", "*", "nfilters", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "BasicBlock", "(", "1", "*", "nfilters", ",", "2", "*", "nfilters", ",", "layers", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "BasicBlock", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "layers", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "BasicBlock", "(", "4", "*", "nfilters", ",", "8", "*", "nfilters", ",", "layers", "[", "3", "]", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "8", "*", "nfilters", "*", "7", "*", "7", ",", "ndim", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "ndim", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", "[", "0", "]", ".", "weight", ")", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "            ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "ndim", ",", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.SphereFace.forward": [[150, 173], ["age_rgs.SphereFace.layer1", "age_rgs.SphereFace.layer2", "age_rgs.SphereFace.layer3", "age_rgs.SphereFace.layer4", "torch.dropout.view", "torch.dropout", "torch.dropout", "torch.dropout", "age_rgs.SphereFace.fc", "torch.dropout.size", "age_rgs.SphereFace.fc2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "# x = self.relu(self.bn(self.conv(x)))", "\n", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_prob", ")", "\n", "feat", "=", "self", ".", "fc", "(", "x", ")", "\n", "# conf = self.conf(x)", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "            ", "if", "self", ".", "features", "is", "True", ":", "\n", "                ", "return", "[", "feat", "]", "\n", "", "else", ":", "\n", "                ", "y", "=", "self", ".", "fc2", "(", "feat", ")", "\n", "y", "=", "torch", ".", "sigmoid", "(", "y", ")", "\n", "return", "[", "feat", ",", "y", "]", "\n", "", "", "else", ":", "\n", "            ", "return", "[", "feat", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.conv3x3": [[16, 20], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.myphi": [[22, 28], ["math.factorial", "math.factorial", "math.factorial", "math.factorial", "math.factorial"], "function", ["None"], ["", "def", "myphi", "(", "x", ",", "m", ")", ":", "\n", "    ", "x", "=", "x", "*", "m", "\n", "output", "=", "1", "-", "x", "**", "2", "/", "math", ".", "factorial", "(", "2", ")", "+", "x", "**", "4", "/", "math", ".", "factorial", "(", "4", ")", "-", "x", "**", "6", "/", "math", ".", "factorial", "(", "6", ")", "+", "x", "**", "8", "/", "math", ".", "factorial", "(", "8", ")", "-", "x", "**", "9", "/", "math", ".", "factorial", "(", "9", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.rgsage4": [[175, 179], ["age_rgs.SphereFace"], "function", ["None"], ["", "", "", "def", "rgsage4", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-04 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.rgsage10": [[181, 185], ["age_rgs.SphereFace"], "function", ["None"], ["", "def", "rgsage10", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-10 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "1", ",", "2", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.rgsage20": [[187, 191], ["age_rgs.SphereFace"], "function", ["None"], ["", "def", "rgsage20", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-20 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "1", ",", "2", ",", "4", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.rgsage36": [[193, 197], ["age_rgs.SphereFace"], "function", ["None"], ["", "def", "rgsage36", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-36 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "2", ",", "4", ",", "8", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_rgs.rgsage64": [[199, 203], ["age_rgs.SphereFace"], "function", ["None"], ["", "def", "rgsage64", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-64 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "3", ",", "8", ",", "16", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.BasicBlock.__init__": [[36, 45], ["torch.Module.__init__", "arcface.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "arcface.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.BasicBlock.forward": [[46, 63], ["arcface.BasicBlock.conv1", "arcface.BasicBlock.bn1", "arcface.BasicBlock.relu", "arcface.BasicBlock.conv2", "arcface.BasicBlock.bn2", "arcface.BasicBlock.relu", "arcface.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.IRBlock.__init__": [[68, 82], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "arcface.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "arcface.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "arcface.SEBlock"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "use_se", "=", "True", ")", ":", "\n", "        ", "super", "(", "IRBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "prelu1", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "prelu2", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "use_se", "=", "use_se", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "self", ".", "se", "=", "SEBlock", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.IRBlock.forward": [[83, 102], ["arcface.IRBlock.bn0", "arcface.IRBlock.conv1", "arcface.IRBlock.bn1", "arcface.IRBlock.prelu1", "arcface.IRBlock.conv2", "arcface.IRBlock.bn2", "arcface.IRBlock.prelu2", "arcface.IRBlock.se", "arcface.IRBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "bn0", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "prelu1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "prelu2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.Bottleneck.__init__": [[107, 119], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.Bottleneck.forward": [[120, 141], ["arcface.Bottleneck.conv1", "arcface.Bottleneck.bn1", "arcface.Bottleneck.relu", "arcface.Bottleneck.conv2", "arcface.Bottleneck.bn2", "arcface.Bottleneck.relu", "arcface.Bottleneck.conv3", "arcface.Bottleneck.bn3", "arcface.Bottleneck.relu", "arcface.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.SEBlock.__init__": [[144, 152], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SEBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.SEBlock.forward": [[154, 159], ["x.size", "arcface.SEBlock.avg_pool().view", "arcface.SEBlock.fc().view", "arcface.SEBlock.avg_pool", "arcface.SEBlock.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNetFace.__init__": [[162, 191], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "arcface.ResNetFace._make_layer", "arcface.ResNetFace._make_layer", "arcface.ResNetFace._make_layer", "arcface.ResNetFace._make_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "arcface.ResNetFace.modules", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "use_se", "=", "False", ",", "nfeatures", "=", "512", ",", "nclasses", "=", "2", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "use_se", "=", "use_se", "\n", "super", "(", "ResNetFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "prelu", "=", "nn", ".", "PReLU", "(", "64", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "512", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.4", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "nfeatures", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "nfeatures", ")", "\n", "\n", "# self.fc6 = nn.Linear(512,nclasses)", "\n", "# torch.nn.init.xavier_normal_(self.fc6.weight)", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNetFace._make_layer": [[192, 207], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "use_se", "=", "self", ".", "use_se", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "use_se", "=", "self", ".", "use_se", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNetFace.forward": [[208, 225], ["arcface.ResNetFace.conv1", "arcface.ResNetFace.bn1", "arcface.ResNetFace.prelu", "arcface.ResNetFace.maxpool", "arcface.ResNetFace.layer1", "arcface.ResNetFace.layer2", "arcface.ResNetFace.layer3", "arcface.ResNetFace.layer4", "arcface.ResNetFace.bn4", "arcface.ResNetFace.dropout", "arcface.ResNetFace.view", "arcface.ResNetFace.fc5", "arcface.ResNetFace.bn5", "arcface.ResNetFace.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNet.__init__": [[229, 253], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "arcface.ResNet._make_layer", "arcface.ResNet._make_layer", "arcface.ResNet._make_layer", "arcface.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "arcface.ResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.conv1 = nn.Conv2d(3, 64, kernel_size=7, stride=2, padding=3,", "\n", "#                        bias=False)", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# self.maxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1)", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "# self.avgpool = nn.AvgPool2d(8, stride=1)", "\n", "# self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "512", "*", "8", "*", "8", ",", "512", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNet._make_layer": [[254, 270], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.ResNet.forward": [[271, 287], ["arcface.ResNet.conv1", "arcface.ResNet.bn1", "arcface.ResNet.relu", "arcface.ResNet.layer1", "arcface.ResNet.layer2", "arcface.ResNet.layer3", "arcface.ResNet.layer4", "arcface.ResNet.view", "arcface.ResNet.fc5", "arcface.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "# x = self.maxpool(x)", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "# x = nn.AvgPool2d(kernel_size=x.size()[2:])(x)", "\n", "# x = self.avgpool(x)", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc5", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet_face18": [[289, 292], ["arcface.ResNetFace"], "function", ["None"], ["", "", "def", "resnet_face18", "(", "use_se", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet_face34": [[293, 296], ["arcface.ResNetFace"], "function", ["None"], ["", "def", "resnet_face34", "(", "use_se", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet_face50": [[297, 300], ["arcface.ResNetFace"], "function", ["None"], ["", "def", "resnet_face50", "(", "use_se", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "3", ",", "4", ",", "14", ",", "3", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet_face100": [[301, 304], ["arcface.ResNetFace"], "function", ["None"], ["", "def", "resnet_face100", "(", "use_se", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "3", ",", "13", ",", "30", ",", "3", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet_face152": [[305, 308], ["arcface.ResNetFace"], "function", ["None"], ["", "def", "resnet_face152", "(", "use_se", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet18": [[309, 318], ["arcface.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet34": [[320, 329], ["arcface.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet50": [[331, 340], ["arcface.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet101": [[342, 351], ["arcface.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.arcface.resnet152": [[353, 362], ["arcface.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block35.__init__": [[16, 35], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block35.layer1.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block35.layer2.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block35.layer3.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "inception_resnet_v1.Block35._make_layers", "inception_resnet_v1.Block35._make_layers", "inception_resnet_v1.Block35._make_layers"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "scale", "=", "1.0", ",", "if_activate", "=", "True", ")", ":", "\n", "        ", "super", "(", "Block35", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "if_activate", "=", "if_activate", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer1", ".", "add_module", "(", "'Branch_0'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", "]", ")", ")", "\n", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer2", ".", "add_module", "(", "'Branch_1'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "3", "]", ")", ")", "\n", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer3", ".", "add_module", "(", "'Branch_2'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "3", ",", "3", "]", ")", ")", "\n", "\n", "self", ".", "layer", "=", "nn", ".", "Conv2d", "(", "planes", "*", "3", ",", "in_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block35._make_layers": [[36, 45], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "layers.append", "layers.append", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ",", "planes", ",", "kSizes", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "kSizes", ")", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSizes", "[", "i", "]", ",", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "padding", "=", "math", ".", "floor", "(", "kSizes", "[", "i", "]", "/", "2", ")", ")", ")", "\n", "in_planes", "=", "planes", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block35.forward": [[46, 59], ["inception_resnet_v1.Block35.layer1", "inception_resnet_v1.Block35.layer2", "inception_resnet_v1.Block35.layer3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception_resnet_v1.Block35.layer", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "tower1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tower2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tower3", "=", "self", ".", "layer3", "(", "x", ")", "\n", "mixed", "=", "torch", ".", "cat", "(", "[", "tower1", ",", "tower2", ",", "tower3", "]", ",", "1", ")", "\n", "y", "=", "self", ".", "layer", "(", "mixed", ")", "\n", "z", "=", "x", "+", "y", "*", "self", ".", "scale", "\n", "\n", "if", "self", ".", "if_activate", ":", "\n", "            ", "z", "=", "F", ".", "relu", "(", "z", ")", "\n", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block17.__init__": [[62, 81], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block17.layer1.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block17.layer2.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "inception_resnet_v1.Block17._make_layers", "inception_resnet_v1.Block17._make_layers", "inception_resnet_v1.Block17._make_layers", "inception_resnet_v1.Block17._make_layers"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "scale", "=", "1.0", ",", "if_activate", "=", "True", ")", ":", "\n", "        ", "super", "(", "Block17", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "if_activate", "=", "if_activate", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer1", ".", "add_module", "(", "'Branch_0'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "\n", "tmp_layer", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "self", ".", "_make_layers", "(", "planes", ",", "planes", ",", "[", "1", ",", "7", "]", ")", ",", "\n", "self", ".", "_make_layers", "(", "planes", ",", "planes", ",", "[", "7", ",", "1", "]", ")", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer2", ".", "add_module", "(", "'Branch_1'", ",", "\n", "tmp_layer", ")", "\n", "\n", "self", ".", "layer", "=", "nn", ".", "Conv2d", "(", "planes", "*", "2", ",", "in_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block17._make_layers": [[82, 89], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "math.floor"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ",", "planes", ",", "kSize", ")", ":", "\n", "        ", "mylayer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSize", ",", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "padding", "=", "(", "math", ".", "floor", "(", "kSize", "[", "0", "]", "/", "2", ")", ",", "math", ".", "floor", "(", "kSize", "[", "1", "]", "/", "2", ")", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "return", "mylayer", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block17.forward": [[90, 101], ["inception_resnet_v1.Block17.layer1", "inception_resnet_v1.Block17.layer2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception_resnet_v1.Block17.layer", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tower1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tower2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "mixed", "=", "torch", ".", "cat", "(", "[", "tower1", ",", "tower2", "]", ",", "1", ")", "\n", "y", "=", "self", ".", "layer", "(", "mixed", ")", "\n", "z", "=", "x", "+", "y", "*", "self", ".", "scale", "\n", "\n", "if", "self", ".", "if_activate", ":", "\n", "            ", "z", "=", "F", ".", "relu", "(", "z", ")", "\n", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block8.__init__": [[104, 123], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block8.layer1.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Block8.layer2.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "inception_resnet_v1.Block8._make_layers", "inception_resnet_v1.Block8._make_layers", "inception_resnet_v1.Block8._make_layers", "inception_resnet_v1.Block8._make_layers"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "scale", "=", "1.0", ",", "if_activate", "=", "True", ")", ":", "\n", "        ", "super", "(", "Block8", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "if_activate", "=", "if_activate", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer1", ".", "add_module", "(", "'Branch_0'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "\n", "tmp_layer", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "planes", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "self", ".", "_make_layers", "(", "planes", ",", "planes", ",", "[", "1", ",", "3", "]", ")", ",", "\n", "self", ".", "_make_layers", "(", "planes", ",", "planes", ",", "[", "3", ",", "1", "]", ")", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer2", ".", "add_module", "(", "'Branch_1'", ",", "\n", "tmp_layer", ")", "\n", "\n", "self", ".", "layer", "=", "nn", ".", "Conv2d", "(", "planes", "*", "2", ",", "in_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block8._make_layers": [[124, 131], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "math.floor", "math.floor"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ",", "planes", ",", "kSize", ")", ":", "\n", "        ", "mylayer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSize", ",", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "padding", "=", "(", "math", ".", "floor", "(", "kSize", "[", "0", "]", "/", "2", ")", ",", "math", ".", "floor", "(", "kSize", "[", "1", "]", "/", "2", ")", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "return", "mylayer", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Block8.forward": [[132, 143], ["inception_resnet_v1.Block8.layer1", "inception_resnet_v1.Block8.layer2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception_resnet_v1.Block8.layer", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tower1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tower2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "mixed", "=", "torch", ".", "cat", "(", "[", "tower1", ",", "tower2", "]", ",", "1", ")", "\n", "y", "=", "self", ".", "layer", "(", "mixed", ")", "\n", "z", "=", "x", "+", "y", "*", "self", ".", "scale", "\n", "\n", "if", "self", ".", "if_activate", ":", "\n", "            ", "z", "=", "F", ".", "relu", "(", "z", ")", "\n", "\n", "", "return", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_a.__init__": [[145, 162], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_a.layer1.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_a.layer2.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_a.layer3.add_module", "inception_resnet_v1.Reduction_a._make_convlayer", "inception_resnet_v1.Reduction_a._make_convlayer", "inception_resnet_v1.Reduction_a._make_convlayer", "inception_resnet_v1.Reduction_a._make_convlayer", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ")", ":", "\n", "        ", "super", "(", "Reduction_a", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer1", ".", "add_module", "(", "'Branch_0'", ",", "\n", "self", ".", "_make_convlayer", "(", "in_planes", ",", "planes", "[", "0", "]", ",", "3", ",", "2", ",", "0", ")", ")", "\n", "\n", "tmp_layer", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "_make_convlayer", "(", "in_planes", ",", "planes", "[", "1", "]", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "self", ".", "_make_convlayer", "(", "planes", "[", "1", "]", ",", "planes", "[", "2", "]", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "self", ".", "_make_convlayer", "(", "planes", "[", "2", "]", ",", "planes", "[", "3", "]", ",", "3", ",", "2", ",", "0", ")", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer2", ".", "add_module", "(", "'Branch_1'", ",", "\n", "tmp_layer", ")", "\n", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer3", ".", "add_module", "(", "'Branch_2'", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_a._make_convlayer": [[163, 170], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_convlayer", "(", "self", ",", "in_planes", ",", "planes", ",", "kSize", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "mylayer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSize", ",", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "return", "mylayer", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_a.forward": [[171, 178], ["inception_resnet_v1.Reduction_a.layer1", "inception_resnet_v1.Reduction_a.layer2", "inception_resnet_v1.Reduction_a.layer3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tower1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tower2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tower3", "=", "self", ".", "layer3", "(", "x", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "tower1", ",", "tower2", ",", "tower3", "]", ",", "1", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b.__init__": [[180, 198], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_b.layer1.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_b.layer2.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_b.layer3.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v1.Reduction_b.layer4.add_module", "inception_resnet_v1.Reduction_b._make_layers", "inception_resnet_v1.Reduction_b._make_layers", "inception_resnet_v1.Reduction_b._make_layers", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "super", "(", "Reduction_b", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer1", ".", "add_module", "(", "'Branch_0'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "[", "256", ",", "384", "]", ",", "[", "1", ",", "3", "]", ",", "[", "1", ",", "2", "]", ")", ")", "\n", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer2", ".", "add_module", "(", "'Branch_1'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "[", "256", ",", "256", "]", ",", "[", "1", ",", "3", "]", ",", "[", "1", ",", "2", "]", ")", ")", "\n", "\n", "self", ".", "layer3", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer3", ".", "add_module", "(", "'Branch_2'", ",", "\n", "self", ".", "_make_layers", "(", "in_planes", ",", "[", "256", ",", "256", ",", "256", "]", ",", "[", "1", ",", "3", ",", "3", "]", ",", "[", "1", ",", "1", ",", "2", "]", ")", ")", "\n", "\n", "self", ".", "layer4", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "layer4", ".", "add_module", "(", "'Branch_3'", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_convlayer": [[199, 206], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_convlayer", "(", "self", ",", "in_planes", ",", "planes", ",", "kSize", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "mylayer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSize", ",", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "return", "mylayer", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b._make_layers": [[207, 216], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "len", "layers.append", "layers.append", "len", "inception_resnet_v1.Reduction_b._make_convlayer", "inception_resnet_v1.Reduction_b._make_convlayer", "math.floor"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer"], ["", "def", "_make_layers", "(", "self", ",", "in_planes", ",", "planes", ",", "kSizes", ",", "strides", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "kSizes", ")", ")", ":", "\n", "            ", "if", "i", "==", "len", "(", "kSizes", ")", "-", "1", ":", "\n", "                ", "layers", ".", "append", "(", "self", ".", "_make_convlayer", "(", "in_planes", ",", "planes", "[", "i", "]", ",", "kSizes", "[", "i", "]", ",", "strides", "[", "i", "]", ",", "0", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "self", ".", "_make_convlayer", "(", "in_planes", ",", "planes", "[", "i", "]", ",", "kSizes", "[", "i", "]", ",", "strides", "[", "i", "]", ",", "math", ".", "floor", "(", "kSizes", "[", "i", "]", "/", "2", ")", ")", ")", "\n", "", "in_planes", "=", "planes", "[", "i", "]", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Reduction_b.forward": [[217, 225], ["inception_resnet_v1.Reduction_b.layer1", "inception_resnet_v1.Reduction_b.layer2", "inception_resnet_v1.Reduction_b.layer3", "inception_resnet_v1.Reduction_b.layer4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "tower1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "tower2", "=", "self", ".", "layer2", "(", "x", ")", "\n", "tower3", "=", "self", ".", "layer3", "(", "x", ")", "\n", "tower4", "=", "self", ".", "layer4", "(", "x", ")", "\n", "y", "=", "torch", ".", "cat", "(", "[", "tower1", ",", "tower2", ",", "tower3", ",", "tower4", "]", ",", "1", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1.__init__": [[227, 293], ["torch.Module.__init__", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "inception_resnet_v1.Inception_resnet_v1._make_convlayer", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential.append", "torch.Sequential.append", "torch.Sequential.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "collections.OrderedDict", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "blocks", ",", "nfeatures", "=", "128", ",", "dropout_prob", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "Inception_resnet_v1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "nfeatures", "=", "nfeatures", "\n", "\n", "layer1", "=", "self", ".", "_make_convlayer", "(", "in_planes", ",", "32", ",", "3", ",", "2", ",", "0", ")", "\n", "layer2", "=", "self", ".", "_make_convlayer", "(", "32", ",", "32", ",", "3", ",", "1", ",", "0", ")", "\n", "layer3", "=", "self", ".", "_make_convlayer", "(", "32", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "layer4", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", "\n", "layer5", "=", "self", ".", "_make_convlayer", "(", "64", ",", "80", ",", "1", ",", "1", ",", "0", ")", "\n", "layer6", "=", "self", ".", "_make_convlayer", "(", "80", ",", "192", ",", "3", ",", "1", ",", "0", ")", "\n", "layer7", "=", "self", ".", "_make_convlayer", "(", "192", ",", "256", ",", "3", ",", "2", ",", "0", ")", "\n", "\n", "# block35", "\n", "layer8", "=", "[", "]", "\n", "in_planes", "=", "256", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "layer8", ".", "append", "(", "blocks", "[", "0", "]", "(", "in_planes", ",", "32", ",", "scale", "=", "0.17", ")", ")", "\n", "", "layer8", "=", "nn", ".", "Sequential", "(", "*", "layer8", ")", "\n", "\n", "# reduction-A", "\n", "in_planes", "=", "256", "\n", "layer9", "=", "blocks", "[", "1", "]", "(", "in_planes", ",", "[", "384", ",", "192", ",", "192", ",", "256", "]", ")", "\n", "\n", "# block17", "\n", "layer10", "=", "[", "]", "\n", "in_planes", "=", "896", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "layer10", ".", "append", "(", "blocks", "[", "2", "]", "(", "in_planes", ",", "128", ",", "scale", "=", "0.10", ")", ")", "\n", "", "layer10", "=", "nn", ".", "Sequential", "(", "*", "layer10", ")", "\n", "\n", "# reduction-B", "\n", "in_planes", "=", "896", "\n", "layer11", "=", "blocks", "[", "3", "]", "(", "in_planes", ")", "\n", "\n", "# block8", "\n", "layer12", "=", "[", "]", "\n", "in_planes", "=", "1792", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "layer12", ".", "append", "(", "blocks", "[", "4", "]", "(", "in_planes", ",", "192", ",", "scale", "=", "0.20", ")", ")", "\n", "", "layer12", "=", "nn", ".", "Sequential", "(", "*", "layer12", ")", "\n", "\n", "# Block8", "\n", "in_planes", "=", "1792", "\n", "layer13", "=", "blocks", "[", "4", "]", "(", "in_planes", ",", "192", ",", "if_activate", "=", "False", ")", "\n", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_planes", ",", "self", ".", "nfeatures", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "self", ".", "nfeatures", ")", ",", ")", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1a_3x3'", ",", "layer1", ")", ",", "\n", "(", "'Conv2d_2a_3x3'", ",", "layer2", ")", ",", "\n", "(", "'Conv2d_2b_3x3'", ",", "layer3", ")", ",", "\n", "(", "'MaxPool_3a_3x3'", ",", "layer4", ")", ",", "\n", "(", "'Conv2d_3b_1x1'", ",", "layer5", ")", ",", "\n", "(", "'Conv2d_4a_3x3'", ",", "layer6", ")", ",", "\n", "(", "'Conv2d_4b_3x3'", ",", "layer7", ")", ",", "\n", "(", "'Block35'", ",", "layer8", ")", ",", "\n", "(", "'Mixed_6a'", ",", "layer9", ")", ",", "\n", "(", "'Block17'", ",", "layer10", ")", ",", "\n", "(", "'Mixed_7a'", ",", "layer11", ")", ",", "\n", "(", "'Block8_1'", ",", "layer12", ")", ",", "\n", "(", "'Block8_2'", ",", "layer13", ")", ",", "\n", "(", "'AvgPool_1a_8x8'", ",", "nn", ".", "AvgPool2d", "(", "3", ")", ")", ",", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1._make_convlayer": [[297, 305], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_convlayer", "(", "self", ",", "in_planes", ",", "planes", ",", "kSize", ",", "stride", ",", "padding", ")", ":", "\n", "        ", "mylayer", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "kSize", ",", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ",", "affine", "=", "True", ",", "eps", "=", "1e-03", ",", "momentum", "=", "0.995", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "return", "mylayer", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1.forward": [[306, 313], ["inception_resnet_v1.Inception_resnet_v1.model", "inception_resnet_v1.Inception_resnet_v1.view", "torch.dropout", "torch.dropout", "torch.dropout", "inception_resnet_v1.Inception_resnet_v1.bottleneck", "inception_resnet_v1.Inception_resnet_v1.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_prob", ")", "\n", "x", "=", "self", ".", "bottleneck", "(", "x", ")", "\n", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1_multigpu.__init__": [[315, 319], ["torch.Module.__init__", "network"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "network", ",", "in_planes", ",", "blocks", ",", "nfeatures", "=", "128", ",", "dropout_prob", "=", "0.0", ",", "ngpu", "=", "1", ")", ":", "\n", "        ", "super", "(", "Inception_resnet_v1_multigpu", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "network", "(", "in_planes", ",", "blocks", ",", "nfeatures", ",", "dropout_prob", ")", "\n", "self", ".", "ngpu", "=", "ngpu", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.Inception_resnet_v1_multigpu.forward": [[320, 323], ["torch.parallel.data_parallel", "torch.parallel.data_parallel", "torch.parallel.data_parallel", "range"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "nn", ".", "parallel", ".", "data_parallel", "(", "self", ".", "main", ",", "input", ",", "range", "(", "self", ".", "ngpu", ")", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.conv3x3": [[11, 13], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.inception_resnet_v1.incep_resnetV1": [[325, 328], ["inception_resnet_v1.Inception_resnet_v1"], "function", ["None"], ["", "", "def", "incep_resnetV1", "(", "nchannels", ",", "nfeatures", ",", "drop_prob", "=", "0.0", ")", ":", "\n", "    ", "return", "Inception_resnet_v1", "(", "nchannels", ",", "[", "Block35", ",", "Reduction_a", ",", "\n", "Block17", ",", "Reduction_b", ",", "Block8", "]", ",", "nfeatures", ",", "dropout_prob", "=", "0.0", ")", "\n", "# def incep_resnetV1(nchannels, nfeatures, drop_prob=0.0, ngpu=1):", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.fcnet.BasicBlock.__init__": [[8, 21], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dims", ",", "out_dims", ",", "shortcut", "=", "None", ",", "if_activate", "=", "True", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "if_activate", "=", "if_activate", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_dims", ",", "out_dims", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_dims", ")", ",", "\n", "# nn.LeakyReLU(0.2, True),", "\n", "nn", ".", "PReLU", "(", "out_dims", ")", ",", "\n", "nn", ".", "Linear", "(", "out_dims", ",", "out_dims", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_dims", ")", ",", "\n", ")", "\n", "self", ".", "shortcut", "=", "shortcut", "\n", "self", ".", "prelu", "=", "nn", ".", "PReLU", "(", "out_dims", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.fcnet.BasicBlock.forward": [[22, 32], ["fcnet.BasicBlock.layers", "fcnet.BasicBlock.shortcut", "fcnet.BasicBlock.prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "y", "=", "self", ".", "layers", "(", "x", ")", "\n", "if", "self", ".", "shortcut", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "", "y", "+=", "residual", "\n", "if", "self", ".", "if_activate", ":", "\n", "# y = F.leaky_relu(y, 0.2, True)", "\n", "            ", "y", "=", "self", ".", "prelu", "(", "y", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.fcnet.FCnet.__init__": [[34, 44], ["torch.Module.__init__", "fcnet.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dims", ",", "out_dims", ")", ":", "\n", "        ", "super", "(", "FCnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_dims", "=", "in_dims", "\n", "self", ".", "out_dims", "=", "out_dims", "\n", "\n", "self", ".", "layer1", "=", "BasicBlock", "(", "in_dims", ",", "in_dims", ")", "\n", "self", ".", "layer2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_dims", ",", "out_dims", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "out_dims", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.fcnet.FCnet.forward": [[46, 50], ["fcnet.FCnet.layer1", "fcnet.FCnet.layer2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.AngleLinear.__init__": [[31, 46], ["torch.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "age_bcls.AngleLinear.weight.data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "age_bcls.AngleLinear.weight.data.uniform_().renorm_", "age_bcls.AngleLinear.weight.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "4", ",", "phiflag", "=", "True", ")", ":", "\n", "        ", "super", "(", "AngleLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "phiflag", "=", "phiflag", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "mlambda", "=", "[", "\n", "lambda", "x", ":", "x", "**", "0", ",", "\n", "lambda", "x", ":", "x", "**", "1", ",", "\n", "lambda", "x", ":", "2", "*", "x", "**", "2", "-", "1", ",", "\n", "lambda", "x", ":", "4", "*", "x", "**", "3", "-", "3", "*", "x", ",", "\n", "lambda", "x", ":", "8", "*", "x", "**", "4", "-", "8", "*", "x", "**", "2", "+", "1", ",", "\n", "lambda", "x", ":", "16", "*", "x", "**", "5", "-", "20", "*", "x", "**", "3", "+", "5", "*", "x", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.AngleLinear.forward": [[48, 78], ["w.renorm().mul", "x.pow().sum().pow", "w.renorm().mul.pow().sum().pow", "x.mm", "cos_theta.clamp.clamp.clamp", "w.renorm().mul.pow().sum().pow.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cos_theta.clamp.clamp.acos", "age_bcls.myphi", "phi_theta.clamp.clamp.clamp", "x.pow().sum().pow.view", "x.pow().sum().pow.view", "w.renorm", "x.pow().sum", "w.renorm().mul.pow().sum", "x.pow().sum().pow.view", "cos_theta.clamp.clamp.data.acos", "x.pow", "w.renorm().mul.pow"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.myphi"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# size=(B,F)    F is feature len", "\n", "        ", "x", "=", "input", "\n", "\n", "# size=(F,Classnum) F=in_features Classnum=out_features", "\n", "w", "=", "self", ".", "weight", "\n", "\n", "ww", "=", "w", ".", "renorm", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul", "(", "1e5", ")", "\n", "xlen", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "pow", "(", "0.5", ")", "# size=B", "\n", "wlen", "=", "ww", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", ".", "pow", "(", "0.5", ")", "# size=Classnum", "\n", "\n", "cos_theta", "=", "x", ".", "mm", "(", "ww", ")", "# size=(B,Classnum)", "\n", "cos_theta", "=", "cos_theta", "/", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "/", "wlen", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "phiflag", ":", "\n", "            ", "cos_m_theta", "=", "self", ".", "mlambda", "[", "self", ".", "m", "]", "(", "cos_theta", ")", "\n", "theta", "=", "Variable", "(", "cos_theta", ".", "data", ".", "acos", "(", ")", ")", "\n", "k", "=", "(", "self", ".", "m", "*", "theta", "/", "3.14159265", ")", ".", "floor", "(", ")", "\n", "n_one", "=", "k", "*", "0.0", "-", "1", "\n", "phi_theta", "=", "(", "n_one", "**", "k", ")", "*", "cos_m_theta", "-", "2", "*", "k", "\n", "", "else", ":", "\n", "            ", "theta", "=", "cos_theta", ".", "acos", "(", ")", "\n", "phi_theta", "=", "myphi", "(", "theta", ",", "self", ".", "m", ")", "\n", "phi_theta", "=", "phi_theta", ".", "clamp", "(", "-", "1", "*", "self", ".", "m", ",", "1", ")", "\n", "\n", "", "cos_theta", "=", "cos_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "phi_theta", "=", "phi_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "output", "=", "(", "cos_theta", ",", "phi_theta", ")", "\n", "return", "output", "# size=(B,Classnum,2)", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.BasicUnit.__init__": [[81, 93], ["torch.Module.__init__", "age_bcls.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "age_bcls.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BasicUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "planes", "=", "planes", "\n", "conv1", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv1", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "conv2", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv2", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "conv1", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", ",", "\n", "conv2", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.BasicUnit.forward": [[95, 99], ["age_bcls.BasicUnit.main"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "main", "(", "x", ")", "\n", "y", "+=", "x", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.BasicBlock.__init__": [[102, 116], ["torch.Module.__init__", "age_bcls.conv3x3", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.PReLU", "torch.PReLU", "torch.PReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "age_bcls.BasicUnit"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "nlayers", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "outplanes", "=", "outplanes", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "outplanes", ",", "stride", "=", "2", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "PReLU", "(", "outplanes", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nlayers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "BasicUnit", "(", "self", ".", "outplanes", ")", ")", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.BasicBlock.forward": [[117, 121], ["age_bcls.BasicBlock.relu1", "age_bcls.BasicBlock.main", "age_bcls.BasicBlock.conv1"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.SphereFace.__init__": [[124, 155], ["torch.Module.__init__", "age_bcls.BasicBlock", "age_bcls.BasicBlock", "age_bcls.BasicBlock", "age_bcls.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.parameter.Parameter", "torch.parameter.Parameter", "torch.parameter.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "nchannels", "=", "3", ",", "nfilters", "=", "64", ",", "\n", "ndim", "=", "512", ",", "nclasses", "=", "0", ",", "dropout_prob", "=", "0.0", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "SphereFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nclasses", "=", "nclasses", "\n", "self", ".", "nfilters", "=", "nfilters", "\n", "self", ".", "nchannels", "=", "nchannels", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "features", "=", "features", "\n", "\n", "# self.conv = nn.Conv2d(self.nchannels, self.nfilters, kernel_size=5,", "\n", "#                       stride=2, padding=2, bias=False)", "\n", "# self.bn = nn.BatchNorm2d(self.nfilters)", "\n", "# self.relu = nn.PReLU(self.nfilters)", "\n", "\n", "self", ".", "layer1", "=", "BasicBlock", "(", "self", ".", "nchannels", ",", "1", "*", "nfilters", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "BasicBlock", "(", "1", "*", "nfilters", ",", "2", "*", "nfilters", ",", "layers", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "BasicBlock", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "layers", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "BasicBlock", "(", "4", "*", "nfilters", ",", "8", "*", "nfilters", ",", "layers", "[", "3", "]", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "8", "*", "nfilters", "*", "7", "*", "7", ",", "ndim", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "ndim", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", "[", "0", "]", ".", "weight", ")", "\n", "# self.conf = nn.Linear(8 * nfilters * 3 * 4, ndim)", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "# self.fc2 = nn.Linear(ndim,nclasses-1, bias=False)", "\n", "            ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "ndim", ",", "1", ",", "bias", "=", "False", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2", ".", "weight", ")", "\n", "\n", "temp", "=", "0.5", "+", "torch", ".", "Tensor", "(", "np", ".", "arange", "(", "nclasses", "-", "1", ")", ")", "*", "torch", ".", "ones", "(", "nclasses", "-", "1", ")", "\n", "self", ".", "scale", "=", "nn", ".", "parameter", ".", "Parameter", "(", "temp", ")", "\n", "# torch.nn.init.constant_(self.scale.data, 1.0)", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.SphereFace.forward": [[157, 180], ["age_bcls.SphereFace.layer1", "age_bcls.SphereFace.layer2", "age_bcls.SphereFace.layer3", "age_bcls.SphereFace.layer4", "torch.dropout.view", "torch.dropout", "torch.dropout", "torch.dropout", "age_bcls.SphereFace.fc", "torch.dropout.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "age_bcls.SphereFace.fc2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "# x = self.relu(self.bn(self.conv(x)))", "\n", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_prob", ")", "\n", "feat", "=", "self", ".", "fc", "(", "x", ")", "\n", "# conf = self.conf(x)", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "            ", "if", "self", ".", "features", "is", "True", ":", "\n", "                ", "return", "[", "feat", "]", "\n", "", "else", ":", "\n", "                ", "y", "=", "self", ".", "fc2", "(", "feat", ")", "+", "self", ".", "scale", "\n", "y", "=", "torch", ".", "sigmoid", "(", "y", ")", "\n", "return", "[", "feat", ",", "y", "]", "\n", "", "", "else", ":", "\n", "            ", "return", "[", "feat", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.conv3x3": [[16, 20], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.myphi": [[22, 28], ["math.factorial", "math.factorial", "math.factorial", "math.factorial", "math.factorial"], "function", ["None"], ["", "def", "myphi", "(", "x", ",", "m", ")", ":", "\n", "    ", "x", "=", "x", "*", "m", "\n", "output", "=", "1", "-", "x", "**", "2", "/", "math", ".", "factorial", "(", "2", ")", "+", "x", "**", "4", "/", "math", ".", "factorial", "(", "4", ")", "-", "x", "**", "6", "/", "math", ".", "factorial", "(", "6", ")", "+", "x", "**", "8", "/", "math", ".", "factorial", "(", "8", ")", "-", "x", "**", "9", "/", "math", ".", "factorial", "(", "9", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.sphereage4": [[182, 186], ["age_bcls.SphereFace"], "function", ["None"], ["", "", "", "def", "sphereage4", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-04 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.sphereage10": [[188, 192], ["age_bcls.SphereFace"], "function", ["None"], ["", "def", "sphereage10", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-10 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "1", ",", "2", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.sphereage20": [[194, 198], ["age_bcls.SphereFace"], "function", ["None"], ["", "def", "sphereage20", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-20 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "1", ",", "2", ",", "4", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.sphereage36": [[200, 204], ["age_bcls.SphereFace"], "function", ["None"], ["", "def", "sphereage36", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-36 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "2", ",", "4", ",", "8", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_bcls.sphereage64": [[206, 210], ["age_bcls.SphereFace"], "function", ["None"], ["", "def", "sphereage64", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-64 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "3", ",", "8", ",", "16", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.BasicBlock.__init__": [[30, 39], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.BasicBlock.forward": [[40, 57], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.Bottleneck.__init__": [[62, 74], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.Bottleneck.forward": [[75, 96], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet.__init__": [[100, 140], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet.modules", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "nchannels", "=", "3", ",", "nfilters", "=", "64", ",", "\n", "ndim", "=", "256", ",", "nclasses", "=", "0", ",", "dropout_prob", "=", "0.0", ",", "\n", "bilinear", "=", "\"False\"", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nchannels", "=", "nchannels", "\n", "self", ".", "nfilters", "=", "nfilters", "\n", "self", ".", "inplanes", "=", "nfilters", "\n", "self", ".", "ndim", "=", "ndim", "\n", "self", ".", "nclasses", "=", "nclasses", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "bilinear", "=", "bilinear", "\n", "self", ".", "features", "=", "features", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "self", ".", "nchannels", ",", "self", ".", "nfilters", ",", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "nfilters", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "1", "*", "self", ".", "nfilters", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "2", "*", "self", ".", "nfilters", ",", "layers", "[", "1", "]", ",", "\n", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "4", "*", "self", ".", "nfilters", ",", "layers", "[", "2", "]", ",", "\n", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "8", "*", "self", ".", "nfilters", ",", "layers", "[", "3", "]", ",", "\n", "stride", "=", "2", ")", "\n", "if", "bilinear", "==", "\"True\"", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "(", "8", "*", "self", ".", "nfilters", "*", "block", ".", "expansion", ")", "**", "2", ",", "ndim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "8", "*", "self", ".", "nfilters", "*", "block", ".", "expansion", ",", "ndim", ")", "\n", "\n", "", "if", "nclasses", ">", "0", ":", "\n", "            ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "ndim", ",", "nclasses", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet._make_layer": [[141, 157], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.ResNet.forward": [[158, 190], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "resnet.ResNet.fc", "x.view.view.view", "x.view.view.view", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "x.view.view.view", "x.view.view.size", "x.view.view.size", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "float", "x.view.view.size", "x.view.view.size", "resnet.ResNet.fc2", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "x.view.view.size", "x.view.view.size"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "if", "self", ".", "bilinear", "==", "\"True\"", ":", "\n", "            ", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "bmm", "(", "x", ",", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ")", "/", "float", "(", "x", ".", "size", "(", "2", ")", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "sqrt", "(", "x", "+", "1e-5", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_prob", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "            ", "if", "self", ".", "features", "is", "True", ":", "\n", "                ", "return", "[", "x", "]", "\n", "", "else", ":", "\n", "                ", "y", "=", "self", ".", "fc2", "(", "x", ")", "\n", "return", "[", "x", ",", "y", "]", "\n", "", "", "else", ":", "\n", "            ", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.conv3x3": [[21, 25], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.resnet18": [[192, 202], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.resnet34": [[204, 214], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.resnet50": [[216, 226], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.resnet101": [[228, 238], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.resnet.resnet152": [[240, 250], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.AngleLinear.__init__": [[30, 45], ["torch.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "sphereface.AngleLinear.weight.data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "sphereface.AngleLinear.weight.data.uniform_().renorm_", "sphereface.AngleLinear.weight.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "4", ",", "phiflag", "=", "True", ")", ":", "\n", "        ", "super", "(", "AngleLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "phiflag", "=", "phiflag", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "mlambda", "=", "[", "\n", "lambda", "x", ":", "x", "**", "0", ",", "\n", "lambda", "x", ":", "x", "**", "1", ",", "\n", "lambda", "x", ":", "2", "*", "x", "**", "2", "-", "1", ",", "\n", "lambda", "x", ":", "4", "*", "x", "**", "3", "-", "3", "*", "x", ",", "\n", "lambda", "x", ":", "8", "*", "x", "**", "4", "-", "8", "*", "x", "**", "2", "+", "1", ",", "\n", "lambda", "x", ":", "16", "*", "x", "**", "5", "-", "20", "*", "x", "**", "3", "+", "5", "*", "x", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.AngleLinear.forward": [[47, 77], ["w.renorm().mul", "x.pow().sum().pow", "w.renorm().mul.pow().sum().pow", "x.mm", "cos_theta.clamp.clamp.clamp", "w.renorm().mul.pow().sum().pow.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cos_theta.clamp.clamp.acos", "sphereface.myphi", "phi_theta.clamp.clamp.clamp", "x.pow().sum().pow.view", "x.pow().sum().pow.view", "w.renorm", "x.pow().sum", "w.renorm().mul.pow().sum", "x.pow().sum().pow.view", "cos_theta.clamp.clamp.data.acos", "x.pow", "w.renorm().mul.pow"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.myphi"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# size=(B,F)    F is feature len", "\n", "        ", "x", "=", "input", "\n", "\n", "# size=(F,Classnum) F=in_features Classnum=out_features", "\n", "w", "=", "self", ".", "weight", "\n", "\n", "ww", "=", "w", ".", "renorm", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul", "(", "1e5", ")", "\n", "xlen", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "pow", "(", "0.5", ")", "# size=B", "\n", "wlen", "=", "ww", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", ".", "pow", "(", "0.5", ")", "# size=Classnum", "\n", "\n", "cos_theta", "=", "x", ".", "mm", "(", "ww", ")", "# size=(B,Classnum)", "\n", "cos_theta", "=", "cos_theta", "/", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "/", "wlen", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "phiflag", ":", "\n", "            ", "cos_m_theta", "=", "self", ".", "mlambda", "[", "self", ".", "m", "]", "(", "cos_theta", ")", "\n", "theta", "=", "Variable", "(", "cos_theta", ".", "data", ".", "acos", "(", ")", ")", "\n", "k", "=", "(", "self", ".", "m", "*", "theta", "/", "3.14159265", ")", ".", "floor", "(", ")", "\n", "n_one", "=", "k", "*", "0.0", "-", "1", "\n", "phi_theta", "=", "(", "n_one", "**", "k", ")", "*", "cos_m_theta", "-", "2", "*", "k", "\n", "", "else", ":", "\n", "            ", "theta", "=", "cos_theta", ".", "acos", "(", ")", "\n", "phi_theta", "=", "myphi", "(", "theta", ",", "self", ".", "m", ")", "\n", "phi_theta", "=", "phi_theta", ".", "clamp", "(", "-", "1", "*", "self", ".", "m", ",", "1", ")", "\n", "\n", "", "cos_theta", "=", "cos_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "phi_theta", "=", "phi_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "output", "=", "(", "cos_theta", ",", "phi_theta", ")", "\n", "return", "output", "# size=(B,Classnum,2)", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.BasicUnit.__init__": [[80, 92], ["torch.Module.__init__", "sphereface.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "sphereface.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BasicUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "planes", "=", "planes", "\n", "conv1", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv1", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "conv2", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv2", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "conv1", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", ",", "\n", "conv2", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.BasicUnit.forward": [[94, 98], ["sphereface.BasicUnit.main"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "main", "(", "x", ")", "\n", "y", "+=", "x", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.BasicBlock.__init__": [[101, 115], ["torch.Module.__init__", "sphereface.conv3x3", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.PReLU", "torch.PReLU", "torch.PReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "sphereface.BasicUnit"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "nlayers", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "outplanes", "=", "outplanes", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "outplanes", ",", "stride", "=", "2", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "PReLU", "(", "outplanes", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nlayers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "BasicUnit", "(", "self", ".", "outplanes", ")", ")", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.BasicBlock.forward": [[116, 120], ["sphereface.BasicBlock.relu1", "sphereface.BasicBlock.main", "sphereface.BasicBlock.conv1"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.SphereFace.__init__": [[123, 151], ["torch.Module.__init__", "sphereface.BasicBlock", "sphereface.BasicBlock", "sphereface.BasicBlock", "sphereface.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "nchannels", "=", "3", ",", "nfilters", "=", "64", ",", "\n", "ndim", "=", "512", ",", "nclasses", "=", "0", ",", "dropout_prob", "=", "0.0", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "SphereFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nclasses", "=", "nclasses", "\n", "self", ".", "nfilters", "=", "nfilters", "\n", "self", ".", "nchannels", "=", "nchannels", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "features", "=", "features", "\n", "\n", "# self.conv = nn.Conv2d(self.nchannels, self.nfilters, kernel_size=5,", "\n", "#                       stride=2, padding=2, bias=False)", "\n", "# self.bn = nn.BatchNorm2d(self.nfilters)", "\n", "# self.relu = nn.PReLU(self.nfilters)", "\n", "\n", "self", ".", "layer1", "=", "BasicBlock", "(", "self", ".", "nchannels", ",", "1", "*", "nfilters", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "BasicBlock", "(", "1", "*", "nfilters", ",", "2", "*", "nfilters", ",", "layers", "[", "1", "]", ")", "\n", "self", ".", "layer3", "=", "BasicBlock", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "layers", "[", "2", "]", ")", "\n", "self", ".", "layer4", "=", "BasicBlock", "(", "4", "*", "nfilters", ",", "8", "*", "nfilters", ",", "layers", "[", "3", "]", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "8", "*", "nfilters", "*", "7", "*", "7", ",", "ndim", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "ndim", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", "[", "0", "]", ".", "weight", ")", "\n", "# self.conf = nn.Linear(8 * nfilters * 3 * 4, ndim)", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "# self.fc2 = AngleLinear(ndim, nclasses)", "\n", "            ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "ndim", ",", "nclasses", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.SphereFace.forward": [[152, 174], ["sphereface.SphereFace.layer1", "sphereface.SphereFace.layer2", "sphereface.SphereFace.layer3", "sphereface.SphereFace.layer4", "torch.dropout.view", "torch.dropout", "torch.dropout", "torch.dropout", "sphereface.SphereFace.fc", "torch.dropout.size", "sphereface.SphereFace.fc2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "# x = self.relu(self.bn(self.conv(x)))", "\n", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_prob", ")", "\n", "feat", "=", "self", ".", "fc", "(", "x", ")", "\n", "# conf = self.conf(x)", "\n", "\n", "if", "self", ".", "nclasses", ">", "0", ":", "\n", "            ", "if", "self", ".", "features", "is", "True", ":", "\n", "                ", "return", "[", "feat", "]", "\n", "", "else", ":", "\n", "                ", "y", "=", "self", ".", "fc2", "(", "feat", ")", "\n", "return", "[", "feat", ",", "y", "]", "\n", "", "", "else", ":", "\n", "            ", "return", "[", "feat", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphere20a.__init__": [[206, 262], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.Linear", "sphereface.AngleLinear"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "classnum", "=", "10574", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "sphere20a", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "features", "=", "features", "\n", "#input = B*3*112*96", "\n", "self", ".", "conv1_1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "2", ",", "1", ")", "#=>B*64*56*48", "\n", "self", ".", "relu1_1", "=", "nn", ".", "PReLU", "(", "64", ")", "\n", "self", ".", "conv1_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu1_2", "=", "nn", ".", "PReLU", "(", "64", ")", "\n", "self", ".", "conv1_3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu1_3", "=", "nn", ".", "PReLU", "(", "64", ")", "\n", "\n", "self", ".", "conv2_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "2", ",", "1", ")", "#=>B*128*28*24", "\n", "self", ".", "relu2_1", "=", "nn", ".", "PReLU", "(", "128", ")", "\n", "self", ".", "conv2_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu2_2", "=", "nn", ".", "PReLU", "(", "128", ")", "\n", "self", ".", "conv2_3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu2_3", "=", "nn", ".", "PReLU", "(", "128", ")", "\n", "\n", "self", ".", "conv2_4", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", "#=>B*128*28*24", "\n", "self", ".", "relu2_4", "=", "nn", ".", "PReLU", "(", "128", ")", "\n", "self", ".", "conv2_5", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu2_5", "=", "nn", ".", "PReLU", "(", "128", ")", "\n", "\n", "\n", "self", ".", "conv3_1", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "2", ",", "1", ")", "#=>B*256*14*12", "\n", "self", ".", "relu3_1", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "self", ".", "conv3_2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu3_2", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "self", ".", "conv3_3", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu3_3", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "\n", "self", ".", "conv3_4", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "#=>B*256*14*12", "\n", "self", ".", "relu3_4", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "self", ".", "conv3_5", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu3_5", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "\n", "self", ".", "conv3_6", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "#=>B*256*14*12", "\n", "self", ".", "relu3_6", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "self", ".", "conv3_7", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu3_7", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "\n", "self", ".", "conv3_8", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "#=>B*256*14*12", "\n", "self", ".", "relu3_8", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "self", ".", "conv3_9", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu3_9", "=", "nn", ".", "PReLU", "(", "256", ")", "\n", "\n", "self", ".", "conv4_1", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "2", ",", "1", ")", "#=>B*512*7*6", "\n", "self", ".", "relu4_1", "=", "nn", ".", "PReLU", "(", "512", ")", "\n", "self", ".", "conv4_2", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu4_2", "=", "nn", ".", "PReLU", "(", "512", ")", "\n", "self", ".", "conv4_3", "=", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "relu4_3", "=", "nn", ".", "PReLU", "(", "512", ")", "\n", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "512", "*", "7", "*", "6", ",", "512", ")", "\n", "self", ".", "fc6", "=", "AngleLinear", "(", "512", ",", "self", ".", "classnum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphere20a.forward": [[264, 287], ["sphereface.sphere20a.relu1_1", "sphereface.sphere20a.relu2_1", "sphereface.sphere20a.relu3_1", "sphereface.sphere20a.relu4_1", "sphereface.sphere20a.view", "sphereface.sphere20a.fc5", "sphereface.sphere20a.fc6", "sphereface.sphere20a.conv1_1", "sphereface.sphere20a.relu1_3", "sphereface.sphere20a.conv2_1", "sphereface.sphere20a.relu2_3", "sphereface.sphere20a.relu2_5", "sphereface.sphere20a.conv3_1", "sphereface.sphere20a.relu3_3", "sphereface.sphere20a.relu3_5", "sphereface.sphere20a.relu3_7", "sphereface.sphere20a.relu3_9", "sphereface.sphere20a.conv4_1", "sphereface.sphere20a.relu4_3", "sphereface.sphere20a.size", "sphereface.sphere20a.conv1_3", "sphereface.sphere20a.conv2_3", "sphereface.sphere20a.conv2_5", "sphereface.sphere20a.conv3_3", "sphereface.sphere20a.conv3_5", "sphereface.sphere20a.conv3_7", "sphereface.sphere20a.conv3_9", "sphereface.sphere20a.conv4_3", "sphereface.sphere20a.relu1_2", "sphereface.sphere20a.relu2_2", "sphereface.sphere20a.relu2_4", "sphereface.sphere20a.relu3_2", "sphereface.sphere20a.relu3_4", "sphereface.sphere20a.relu3_6", "sphereface.sphere20a.relu3_8", "sphereface.sphere20a.relu4_2", "sphereface.sphere20a.conv1_2", "sphereface.sphere20a.conv2_2", "sphereface.sphere20a.conv2_4", "sphereface.sphere20a.conv3_2", "sphereface.sphere20a.conv3_4", "sphereface.sphere20a.conv3_6", "sphereface.sphere20a.conv3_8", "sphereface.sphere20a.conv4_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu1_1", "(", "self", ".", "conv1_1", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu1_3", "(", "self", ".", "conv1_3", "(", "self", ".", "relu1_2", "(", "self", ".", "conv1_2", "(", "x", ")", ")", ")", ")", "\n", "\n", "x", "=", "self", ".", "relu2_1", "(", "self", ".", "conv2_1", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu2_3", "(", "self", ".", "conv2_3", "(", "self", ".", "relu2_2", "(", "self", ".", "conv2_2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu2_5", "(", "self", ".", "conv2_5", "(", "self", ".", "relu2_4", "(", "self", ".", "conv2_4", "(", "x", ")", ")", ")", ")", "\n", "\n", "x", "=", "self", ".", "relu3_1", "(", "self", ".", "conv3_1", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu3_3", "(", "self", ".", "conv3_3", "(", "self", ".", "relu3_2", "(", "self", ".", "conv3_2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu3_5", "(", "self", ".", "conv3_5", "(", "self", ".", "relu3_4", "(", "self", ".", "conv3_4", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu3_7", "(", "self", ".", "conv3_7", "(", "self", ".", "relu3_6", "(", "self", ".", "conv3_6", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu3_9", "(", "self", ".", "conv3_9", "(", "self", ".", "relu3_8", "(", "self", ".", "conv3_8", "(", "x", ")", ")", ")", ")", "\n", "\n", "x", "=", "self", ".", "relu4_1", "(", "self", ".", "conv4_1", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "relu4_3", "(", "self", ".", "conv4_3", "(", "self", ".", "relu4_2", "(", "self", ".", "conv4_2", "(", "x", ")", ")", ")", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc5", "(", "x", ")", "\n", "if", "self", ".", "features", ":", "return", "[", "x", "]", "\n", "\n", "y", "=", "self", ".", "fc6", "(", "x", ")", "\n", "return", "[", "x", ",", "y", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.conv3x3": [[15, 19], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.myphi": [[21, 27], ["math.factorial", "math.factorial", "math.factorial", "math.factorial", "math.factorial"], "function", ["None"], ["", "def", "myphi", "(", "x", ",", "m", ")", ":", "\n", "    ", "x", "=", "x", "*", "m", "\n", "output", "=", "1", "-", "x", "**", "2", "/", "math", ".", "factorial", "(", "2", ")", "+", "x", "**", "4", "/", "math", ".", "factorial", "(", "4", ")", "-", "x", "**", "6", "/", "math", ".", "factorial", "(", "6", ")", "+", "x", "**", "8", "/", "math", ".", "factorial", "(", "8", ")", "-", "x", "**", "9", "/", "math", ".", "factorial", "(", "9", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphereface4": [[176, 180], ["sphereface.SphereFace"], "function", ["None"], ["", "", "", "def", "sphereface4", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-04 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphereface10": [[182, 186], ["sphereface.SphereFace"], "function", ["None"], ["", "def", "sphereface10", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-10 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "1", ",", "2", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphereface20": [[188, 192], ["sphereface.SphereFace"], "function", ["None"], ["", "def", "sphereface20", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-20 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "1", ",", "2", ",", "4", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphereface36": [[194, 198], ["sphereface.SphereFace"], "function", ["None"], ["", "def", "sphereface36", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-36 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "2", ",", "4", ",", "8", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.sphereface.sphereface64": [[200, 204], ["sphereface.SphereFace"], "function", ["None"], ["", "def", "sphereface64", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-64 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "3", ",", "8", ",", "16", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.__init__": [[11, 18], ["torch.autograd.function.InplaceFunction.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", "Dropout", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "p", "<", "0", "or", "p", ">", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"dropout probability has to be between 0 and 1, \"", "\n", "\"but got {}\"", ".", "format", "(", "p", ")", ")", "\n", "", "self", ".", "p", "=", "p", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout._make_noise": [[19, 21], ["input.new().resize_as_", "input.new"], "methods", ["None"], ["", "def", "_make_noise", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "new", "(", ")", ".", "resize_as_", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.forward": [[22, 38], ["dropout.Dropout.mark_dirty", "input.clone", "dropout.Dropout._make_noise", "dropout.Dropout.noise.bernoulli_().div_", "dropout.Dropout.noise.expand_as", "input.clone.mul_", "dropout.Dropout.noise.fill_", "dropout.Dropout.noise.bernoulli_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout._make_noise"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "inplace", ":", "\n", "            ", "self", ".", "mark_dirty", "(", "input", ")", "\n", "output", "=", "input", "\n", "", "else", ":", "\n", "            ", "output", "=", "input", ".", "clone", "(", ")", "\n", "\n", "", "if", "self", ".", "p", ">", "0", ":", "\n", "            ", "self", ".", "noise", "=", "self", ".", "_make_noise", "(", "input", ")", "\n", "self", ".", "noise", ".", "bernoulli_", "(", "1", "-", "self", ".", "p", ")", ".", "div_", "(", "1", "-", "self", ".", "p", ")", "\n", "if", "self", ".", "p", "==", "1", ":", "\n", "                ", "self", ".", "noise", ".", "fill_", "(", "0", ")", "\n", "", "self", ".", "noise", "=", "self", ".", "noise", ".", "expand_as", "(", "input", ")", "\n", "output", ".", "mul_", "(", "self", ".", "noise", ")", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.Dropout.backward": [[39, 44], ["grad_output.mul"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "        ", "if", "self", ".", "p", ">", "0", ":", "\n", "            ", "return", "grad_output", ".", "mul", "(", "self", ".", "noise", ")", "\n", "", "else", ":", "\n", "            ", "return", "grad_output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.CustomDropout.__init__": [[51, 59], ["torch.nn.modules.Module.__init__", "dropout.Dropout", "ValueError"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", "CustomDropout", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "p", "<", "0", "or", "p", ">", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"dropout probability has to be between 0 and 1, \"", "\n", "\"but got {}\"", ".", "format", "(", "p", ")", ")", "\n", "", "self", ".", "p", "=", "p", "\n", "self", ".", "inplace", "=", "inplace", "\n", "self", ".", "dropout", "=", "Dropout", "(", "self", ".", "p", ",", "self", ".", "inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.CustomDropout.forward": [[60, 62], ["dropout.f_dropout"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.f_dropout"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "f_dropout", "(", "input", ",", "self", ".", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.CustomDropout.__repr__": [[63, 68], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "inplace_str", "=", "', inplace'", "if", "self", ".", "inplace", "else", "''", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "'p = '", "+", "str", "(", "self", ".", "p", ")", "+", "inplace_str", "+", "')'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.dropout.f_dropout": [[46, 48], ["dropout.Dropout"], "function", ["None"], ["", "", "", "def", "f_dropout", "(", "input", ",", "p", ")", ":", "\n", "    ", "return", "Dropout", "(", "p", ")", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Flatten.forward": [[14, 16], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.SEModule.__init__": [[23, 32], ["torch.nn.Module.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc1", "=", "Conv2d", "(", "\n", "channels", ",", "channels", "//", "reduction", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc2", "=", "Conv2d", "(", "\n", "channels", "//", "reduction", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.SEModule.forward": [[33, 41], ["insightface.SEModule.avg_pool", "insightface.SEModule.fc1", "insightface.SEModule.relu", "insightface.SEModule.fc2", "insightface.SEModule.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.bottleneck_IR.__init__": [[43, 54], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "BatchNorm2d", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.bottleneck_IR.forward": [[55, 59], ["insightface.bottleneck_IR.shortcut_layer", "insightface.bottleneck_IR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.bottleneck_IR_SE.__init__": [[61, 76], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "insightface.SEModule", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ",", "\n", "SEModule", "(", "depth", ",", "16", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.bottleneck_IR_SE.forward": [[77, 81], ["insightface.bottleneck_IR_SE.shortcut_layer", "insightface.bottleneck_IR_SE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Backbone.__init__": [[113, 138], ["torch.nn.Module.__init__", "insightface.get_blocks", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout", "torch.nn.Dropout", "insightface.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_blocks"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "drop_ratio", ",", "mode", "=", "'ir'", ")", ":", "\n", "        ", "super", "(", "Backbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_layers", "in", "[", "50", ",", "100", ",", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE", "\n", "", "self", ".", "input_layer", "=", "Sequential", "(", "Conv2d", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "64", ")", ",", "\n", "PReLU", "(", "64", ")", ")", "\n", "self", ".", "output_layer", "=", "Sequential", "(", "BatchNorm2d", "(", "512", ")", ",", "\n", "Dropout", "(", "drop_ratio", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "\n", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Backbone.forward": [[139, 144], ["insightface.Backbone.input_layer", "insightface.Backbone.body", "insightface.Backbone.output_layer", "insightface.l2_norm"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "return", "l2_norm", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Conv_block.__init__": [[148, 153], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Conv_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "self", ".", "prelu", "=", "PReLU", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Conv_block.forward": [[153, 158], ["insightface.Conv_block.conv", "insightface.Conv_block.bn", "insightface.Conv_block.prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Linear_block.__init__": [[160, 164], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Linear_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Linear_block.forward": [[164, 168], ["insightface.Linear_block.conv", "insightface.Linear_block.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Depth_Wise.__init__": [[170, 176], ["torch.nn.Module.__init__", "insightface.Conv_block", "insightface.Conv_block", "insightface.Linear_block"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["     ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "residual", "=", "False", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Depth_Wise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv_block", "(", "in_c", ",", "out_c", "=", "groups", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_dw", "=", "Conv_block", "(", "groups", ",", "groups", ",", "groups", "=", "groups", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ")", "\n", "self", ".", "project", "=", "Linear_block", "(", "groups", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Depth_Wise.forward": [[176, 187], ["insightface.Depth_Wise.conv", "insightface.Depth_Wise.conv_dw", "insightface.Depth_Wise.project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "residual", ":", "\n", "            ", "short_cut", "=", "x", "\n", "", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "project", "(", "x", ")", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "output", "=", "short_cut", "+", "x", "\n", "", "else", ":", "\n", "            ", "output", "=", "x", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Residual.__init__": [[189, 195], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "modules.append", "insightface.Depth_Wise"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ",", "num_block", ",", "groups", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_block", ")", ":", "\n", "            ", "modules", ".", "append", "(", "Depth_Wise", "(", "c", ",", "c", ",", "residual", "=", "True", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", ")", "\n", "", "self", ".", "model", "=", "Sequential", "(", "*", "modules", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Residual.forward": [[195, 197], ["insightface.Residual.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.MobileFaceNet.__init__": [[199, 214], ["torch.nn.Module.__init__", "insightface.Conv_block", "insightface.Conv_block", "insightface.Depth_Wise", "insightface.Residual", "insightface.Depth_Wise", "insightface.Residual", "insightface.Depth_Wise", "insightface.Residual", "insightface.Conv_block", "insightface.Linear_block", "insightface.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "MobileFaceNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "Conv_block", "(", "3", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_dw", "=", "Conv_block", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "64", ")", "\n", "self", ".", "conv_23", "=", "Depth_Wise", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "128", ")", "\n", "self", ".", "conv_3", "=", "Residual", "(", "64", ",", "num_block", "=", "4", ",", "groups", "=", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_34", "=", "Depth_Wise", "(", "64", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "256", ")", "\n", "self", ".", "conv_4", "=", "Residual", "(", "128", ",", "num_block", "=", "6", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_45", "=", "Depth_Wise", "(", "128", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "512", ")", "\n", "self", ".", "conv_5", "=", "Residual", "(", "128", ",", "num_block", "=", "2", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_6_sep", "=", "Conv_block", "(", "128", ",", "512", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_dw", "=", "Linear_block", "(", "512", ",", "512", ",", "groups", "=", "512", ",", "kernel", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "linear", "=", "Linear", "(", "512", ",", "embedding_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "embedding_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.MobileFaceNet.forward": [[215, 242], ["insightface.MobileFaceNet.conv1", "insightface.MobileFaceNet.conv2_dw", "insightface.MobileFaceNet.conv_23", "insightface.MobileFaceNet.conv_3", "insightface.MobileFaceNet.conv_34", "insightface.MobileFaceNet.conv_4", "insightface.MobileFaceNet.conv_45", "insightface.MobileFaceNet.conv_5", "insightface.MobileFaceNet.conv_6_sep", "insightface.MobileFaceNet.conv_6_dw", "insightface.MobileFaceNet.conv_6_flatten", "insightface.MobileFaceNet.linear", "insightface.MobileFaceNet.bn", "insightface.l2_norm"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "conv2_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_23", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_34", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_45", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_sep", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_flatten", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "l2_norm", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Arcface.__init__": [[247, 259], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "insightface.Arcface.kernel.data.uniform_().renorm_().mul_", "math.cos", "math.sin", "math.cos", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "insightface.Arcface.kernel.data.uniform_().renorm_", "insightface.Arcface.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "s", "=", "64.", ",", "m", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Arcface", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "# initial kernel", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "m", "=", "m", "# the margin value, default is 0.5", "\n", "self", ".", "s", "=", "s", "# scalar value default is 64, see normface https://arxiv.org/abs/1704.06369", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "mm", "=", "self", ".", "sin_m", "*", "m", "# issue 1", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Arcface.forward": [[259, 283], ["len", "insightface.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "# weights norm", "\n", "        ", "nB", "=", "len", "(", "embbedings", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "# cos(theta+m)", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "#         output = torch.mm(embbedings,kernel_norm)", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "cos_theta_2", "=", "torch", ".", "pow", "(", "cos_theta", ",", "2", ")", "\n", "sin_theta_2", "=", "1", "-", "cos_theta_2", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "sin_theta_2", ")", "\n", "cos_theta_m", "=", "(", "cos_theta", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", ")", "\n", "# this condition controls the theta+m should in range [0, pi]", "\n", "#      0<=theta+m<=pi", "\n", "#     -m<=theta<=pi-m", "\n", "cond_v", "=", "cos_theta", "-", "self", ".", "threshold", "\n", "cond_mask", "=", "cond_v", "<=", "0", "\n", "keep_val", "=", "(", "cos_theta", "-", "self", ".", "mm", ")", "# when theta not in [0,pi], use cosface instead", "\n", "cos_theta_m", "[", "cond_mask", "]", "=", "keep_val", "[", "cond_mask", "]", "\n", "output", "=", "cos_theta", "*", "1.0", "# a little bit hacky way to prevent in_place operation on cos_theta", "\n", "idx_", "=", "torch", ".", "arange", "(", "0", ",", "nB", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "output", "[", "idx_", ",", "label", "]", "=", "cos_theta_m", "[", "idx_", ",", "label", "]", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Am_softmax.__init__": [[288, 296], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "insightface.Am_softmax.kernel.data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "insightface.Am_softmax.kernel.data.uniform_().renorm_", "insightface.Am_softmax.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ")", ":", "\n", "        ", "super", "(", "Am_softmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "# initial kernel", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "m", "=", "0.35", "# additive margin recommended by the paper", "\n", "self", ".", "s", "=", "30.", "# see normface https://arxiv.org/abs/1704.06369", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.Am_softmax.forward": [[296, 309], ["insightface.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "label.view.view.view", "index.byte.byte.scatter_", "index.byte.byte.byte", "label.view.view.data.view"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "phi", "=", "cos_theta", "-", "self", ".", "m", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", "#size=(B,1)", "\n", "index", "=", "cos_theta", ".", "data", "*", "0.0", "#size=(B,Classnum)", "\n", "index", ".", "scatter_", "(", "1", ",", "label", ".", "data", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "index", "=", "index", ".", "byte", "(", ")", "\n", "output", "=", "cos_theta", "*", "1.0", "\n", "output", "[", "index", "]", "=", "phi", "[", "index", "]", "#only change the correct predicted output", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.l2_norm": [[17, 21], ["torch.norm", "torch.norm", "torch.div", "torch.div"], "function", ["None"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block": [[85, 87], ["insightface.Bottleneck", "insightface.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "stride", "=", "2", ")", ":", "\n", "  ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ")", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_blocks": [[88, 111], ["insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block", "insightface.get_block"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.insightface.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.AngleLinear.__init__": [[30, 45], ["torch.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "age_gender_cls.AngleLinear.weight.data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "age_gender_cls.AngleLinear.weight.data.uniform_().renorm_", "age_gender_cls.AngleLinear.weight.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "m", "=", "4", ",", "phiflag", "=", "True", ")", ":", "\n", "        ", "super", "(", "AngleLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "phiflag", "=", "phiflag", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "mlambda", "=", "[", "\n", "lambda", "x", ":", "x", "**", "0", ",", "\n", "lambda", "x", ":", "x", "**", "1", ",", "\n", "lambda", "x", ":", "2", "*", "x", "**", "2", "-", "1", ",", "\n", "lambda", "x", ":", "4", "*", "x", "**", "3", "-", "3", "*", "x", ",", "\n", "lambda", "x", ":", "8", "*", "x", "**", "4", "-", "8", "*", "x", "**", "2", "+", "1", ",", "\n", "lambda", "x", ":", "16", "*", "x", "**", "5", "-", "20", "*", "x", "**", "3", "+", "5", "*", "x", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.AngleLinear.forward": [[47, 77], ["w.renorm().mul", "x.pow().sum().pow", "w.renorm().mul.pow().sum().pow", "x.mm", "cos_theta.clamp.clamp.clamp", "w.renorm().mul.pow().sum().pow.view", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cos_theta.clamp.clamp.acos", "age_gender_cls.myphi", "phi_theta.clamp.clamp.clamp", "x.pow().sum().pow.view", "x.pow().sum().pow.view", "w.renorm", "x.pow().sum", "w.renorm().mul.pow().sum", "x.pow().sum().pow.view", "cos_theta.clamp.clamp.data.acos", "x.pow", "w.renorm().mul.pow"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.myphi"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# size=(B,F)    F is feature len", "\n", "        ", "x", "=", "input", "\n", "\n", "# size=(F,Classnum) F=in_features Classnum=out_features", "\n", "w", "=", "self", ".", "weight", "\n", "\n", "ww", "=", "w", ".", "renorm", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul", "(", "1e5", ")", "\n", "xlen", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "pow", "(", "0.5", ")", "# size=B", "\n", "wlen", "=", "ww", ".", "pow", "(", "2", ")", ".", "sum", "(", "0", ")", ".", "pow", "(", "0.5", ")", "# size=Classnum", "\n", "\n", "cos_theta", "=", "x", ".", "mm", "(", "ww", ")", "# size=(B,Classnum)", "\n", "cos_theta", "=", "cos_theta", "/", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "/", "wlen", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "phiflag", ":", "\n", "            ", "cos_m_theta", "=", "self", ".", "mlambda", "[", "self", ".", "m", "]", "(", "cos_theta", ")", "\n", "theta", "=", "Variable", "(", "cos_theta", ".", "data", ".", "acos", "(", ")", ")", "\n", "k", "=", "(", "self", ".", "m", "*", "theta", "/", "3.14159265", ")", ".", "floor", "(", ")", "\n", "n_one", "=", "k", "*", "0.0", "-", "1", "\n", "phi_theta", "=", "(", "n_one", "**", "k", ")", "*", "cos_m_theta", "-", "2", "*", "k", "\n", "", "else", ":", "\n", "            ", "theta", "=", "cos_theta", ".", "acos", "(", ")", "\n", "phi_theta", "=", "myphi", "(", "theta", ",", "self", ".", "m", ")", "\n", "phi_theta", "=", "phi_theta", ".", "clamp", "(", "-", "1", "*", "self", ".", "m", ",", "1", ")", "\n", "\n", "", "cos_theta", "=", "cos_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "phi_theta", "=", "phi_theta", "*", "xlen", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "output", "=", "(", "cos_theta", ",", "phi_theta", ")", "\n", "return", "output", "# size=(B,Classnum,2)", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.BasicUnit.__init__": [[80, 92], ["torch.Module.__init__", "age_gender_cls.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "age_gender_cls.conv3x3", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "BasicUnit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "planes", "=", "planes", "\n", "conv1", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv1", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "conv2", "=", "conv3x3", "(", "self", ".", "planes", ",", "self", ".", "planes", ",", "stride", "=", "1", ")", "\n", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "conv2", ".", "weight", ",", "std", "=", "0.01", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "conv1", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", ",", "\n", "conv2", ",", "\n", "nn", ".", "PReLU", "(", "self", ".", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.BasicUnit.forward": [[94, 98], ["age_gender_cls.BasicUnit.main"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "main", "(", "x", ")", "\n", "y", "+=", "x", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.BasicBlock.__init__": [[101, 115], ["torch.Module.__init__", "age_gender_cls.conv3x3", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.PReLU", "torch.PReLU", "torch.PReLU", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "age_gender_cls.BasicUnit"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "outplanes", ",", "nlayers", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "outplanes", "=", "outplanes", "\n", "self", ".", "nlayers", "=", "nlayers", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "outplanes", ",", "stride", "=", "2", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "conv1", ".", "weight", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "PReLU", "(", "outplanes", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nlayers", ")", ":", "\n", "            ", "layers", ".", "append", "(", "BasicUnit", "(", "self", ".", "outplanes", ")", ")", "\n", "", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.BasicBlock.forward": [[116, 120], ["age_gender_cls.BasicBlock.relu1", "age_gender_cls.BasicBlock.main", "age_gender_cls.BasicBlock.conv1"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "main", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.SphereFace.__init__": [[123, 161], ["torch.Module.__init__", "age_gender_cls.BasicBlock", "age_gender_cls.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "age_gender_cls.BasicBlock", "age_gender_cls.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "age_gender_cls.BasicBlock", "age_gender_cls.BasicBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "nchannels", "=", "3", ",", "nfilters", "=", "64", ",", "\n", "ndim_age", "=", "128", ",", "ndim_gender", "=", "64", ",", "nages", "=", "6", ",", "ngenders", "=", "2", ",", "\n", "dropout_prob", "=", "0.0", ",", "features", "=", "False", ")", ":", "\n", "        ", "super", "(", "SphereFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout_prob", "=", "dropout_prob", "\n", "self", ".", "features", "=", "features", "\n", "\n", "# self.conv = nn.Conv2d(self.nchannels, self.nfilters, kernel_size=5,", "\n", "#                       stride=2, padding=2, bias=False)", "\n", "# self.bn = nn.BatchNorm2d(self.nfilters)", "\n", "# self.relu = nn.PReLU(self.nfilters)", "\n", "\n", "layer1", "=", "BasicBlock", "(", "nchannels", ",", "1", "*", "nfilters", ",", "layers", "[", "0", "]", ")", "\n", "layer2", "=", "BasicBlock", "(", "1", "*", "nfilters", ",", "2", "*", "nfilters", ",", "layers", "[", "1", "]", ")", "\n", "self", ".", "base", "=", "nn", ".", "Sequential", "(", "layer1", ",", "layer2", ")", "\n", "\n", "layer3", "=", "BasicBlock", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "layers", "[", "2", "]", ")", "\n", "layer4", "=", "BasicBlock", "(", "4", "*", "nfilters", ",", "8", "*", "nfilters", ",", "layers", "[", "3", "]", ")", "\n", "self", ".", "age", "=", "nn", ".", "Sequential", "(", "layer3", ",", "layer4", ")", "\n", "\n", "layer5", "=", "BasicBlock", "(", "2", "*", "nfilters", ",", "4", "*", "nfilters", ",", "layers", "[", "4", "]", ")", "\n", "layer6", "=", "BasicBlock", "(", "4", "*", "nfilters", ",", "8", "*", "nfilters", ",", "layers", "[", "5", "]", ")", "\n", "self", ".", "gender", "=", "nn", ".", "Sequential", "(", "layer5", ",", "layer6", ")", "\n", "\n", "self", ".", "fc_age", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "8", "*", "nfilters", "*", "7", "*", "7", ",", "ndim_age", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "ndim_age", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc_age", "[", "0", "]", ".", "weight", ")", "\n", "# self.conf = nn.Linear(8 * nfilters * 3 * 4, ndim)", "\n", "\n", "self", ".", "fc_gender", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "8", "*", "nfilters", "*", "7", "*", "7", ",", "ndim_gender", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "ndim_gender", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc_gender", "[", "0", "]", ".", "weight", ")", "\n", "\n", "# self.fc2 = AngleLinear(ndim, nclasses)", "\n", "self", ".", "fc2_age", "=", "nn", ".", "Linear", "(", "ndim_age", ",", "nages", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2_age", ".", "weight", ")", "\n", "self", ".", "fc2_gender", "=", "nn", ".", "Linear", "(", "ndim_gender", ",", "ngenders", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc2_gender", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.SphereFace.forward": [[162, 184], ["age_gender_cls.SphereFace.age", "age_gender_cls.SphereFace.gender", "age_gender_cls.SphereFace.view", "torch.dropout", "torch.dropout", "torch.dropout", "age_gender_cls.SphereFace.fc_age", "age_gender_cls.SphereFace.view", "torch.dropout", "torch.dropout", "torch.dropout", "age_gender_cls.SphereFace.fc_gender", "age_gender_cls.SphereFace.base", "age_gender_cls.SphereFace.base", "age_gender_cls.SphereFace.size", "age_gender_cls.SphereFace.size", "age_gender_cls.SphereFace.fc2_age", "age_gender_cls.SphereFace.fc2_gender"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_age", ",", "input_gender", ")", ":", "\n", "\n", "# x = self.relu(self.bn(self.conv(x)))", "\n", "\n", "        ", "y_age", "=", "self", ".", "age", "(", "self", ".", "base", "(", "input_age", ")", ")", "\n", "y_gender", "=", "self", ".", "gender", "(", "self", ".", "base", "(", "input_gender", ")", ")", "\n", "\n", "y_age", "=", "y_age", ".", "view", "(", "y_age", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_age", "=", "F", ".", "dropout", "(", "y_age", ",", "self", ".", "dropout_prob", ")", "\n", "feat_age", "=", "self", ".", "fc_age", "(", "y_age", ")", "\n", "\n", "y_gender", "=", "y_gender", ".", "view", "(", "y_gender", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "y_gender", "=", "F", ".", "dropout", "(", "y_gender", ",", "self", ".", "dropout_prob", ")", "\n", "feat_gender", "=", "self", ".", "fc_gender", "(", "y_gender", ")", "\n", "# conf = self.conf(x)", "\n", "\n", "if", "self", ".", "features", "is", "True", ":", "\n", "            ", "return", "[", "feat_age", ",", "feat_gender", "]", "\n", "", "else", ":", "\n", "            ", "y_age", "=", "self", ".", "fc2_age", "(", "feat_age", ")", "\n", "y_gender", "=", "self", ".", "fc2_gender", "(", "feat_gender", ")", "\n", "return", "[", "feat_age", ",", "y_age", ",", "feat_gender", ",", "y_gender", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.conv3x3": [[15, 19], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.myphi": [[21, 27], ["math.factorial", "math.factorial", "math.factorial", "math.factorial", "math.factorial"], "function", ["None"], ["", "def", "myphi", "(", "x", ",", "m", ")", ":", "\n", "    ", "x", "=", "x", "*", "m", "\n", "output", "=", "1", "-", "x", "**", "2", "/", "math", ".", "factorial", "(", "2", ")", "+", "x", "**", "4", "/", "math", ".", "factorial", "(", "4", ")", "-", "x", "**", "6", "/", "math", ".", "factorial", "(", "6", ")", "+", "x", "**", "8", "/", "math", ".", "factorial", "(", "8", ")", "-", "x", "**", "9", "/", "math", ".", "factorial", "(", "9", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.demog4": [[186, 190], ["age_gender_cls.SphereFace"], "function", ["None"], ["", "", "", "def", "demog4", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-04 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.demog10": [[192, 196], ["age_gender_cls.SphereFace"], "function", ["None"], ["", "def", "demog10", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-10 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "0", ",", "1", ",", "2", ",", "0", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.demog20": [[198, 202], ["age_gender_cls.SphereFace"], "function", ["None"], ["", "def", "demog20", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-20 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "1", ",", "2", ",", "8", ",", "2", ",", "4", ",", "1", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.demog36": [[204, 208], ["age_gender_cls.SphereFace"], "function", ["None"], ["", "def", "demog36", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-36 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "2", ",", "4", ",", "8", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.models.age_gender_cls.demog64": [[210, 214], ["age_gender_cls.SphereFace"], "function", ["None"], ["", "def", "demog64", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a SphereFace-64 model.\"\"\"", "\n", "model", "=", "SphereFace", "(", "[", "3", ",", "8", ",", "16", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.acc_per_class_1offset": [[10, 36], ["numpy.load", "list", "enumerate", "print", "set", "numpy.tile", "numpy.concatenate", "len", "float", "float", "numpy.where", "numpy.array", "numpy.array", "len", "len", "zip", "numpy.digitize", "numpy.digitize"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["def", "acc_per_class_1offset", "(", "filename_result", ")", ":", "\n", "    ", "agebins", "=", "[", "0", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "120", "]", "\n", "\n", "results", "=", "np", ".", "load", "(", "filename_result", ")", "\n", "preds", "=", "results", "[", "'preds'", "]", "\n", "labels", "=", "results", "[", "'labels'", "]", "\n", "ages", "=", "results", "[", "'ages'", "]", "\n", "\n", "classname", "=", "list", "(", "set", "(", "labels", ")", ")", "\n", "num_hits", "=", "0", "\n", "for", "i", ",", "clas", "in", "enumerate", "(", "classname", ")", ":", "\n", "        ", "idx", "=", "np", ".", "where", "(", "labels", "==", "clas", ")", "[", "0", "]", "\n", "pred_clas", "=", "preds", "[", "idx", "]", "\n", "age_clas", "=", "ages", "[", "idx", "]", "\n", "\n", "gt_off1", "=", "np", ".", "array", "(", "[", "np", ".", "digitize", "(", "item", "-", "5", ",", "agebins", ")", "-", "1", "for", "item", "in", "age_clas", "]", ")", "[", ":", ",", "None", "]", "\n", "gt_up1", "=", "np", ".", "array", "(", "[", "np", ".", "digitize", "(", "item", "+", "5", ",", "agebins", ")", "-", "1", "for", "item", "in", "age_clas", "]", ")", "[", ":", ",", "None", "]", "\n", "gt", "=", "np", ".", "tile", "(", "clas", ",", "(", "len", "(", "idx", ")", ",", "1", ")", ")", "\n", "newgt", "=", "np", ".", "concatenate", "(", "(", "gt_off1", ",", "gt_up1", ",", "gt", ")", ",", "axis", "=", "1", ")", "\n", "\n", "hits_class", "=", "[", "1", "for", "x", ",", "y", "in", "zip", "(", "pred_clas", ",", "newgt", ")", "if", "x", "in", "y", "]", "\n", "# rate = float(len(num_hits)) / float(len(idx))", "\n", "# print('Class {} -- {}'.format(i, rate))", "\n", "num_hits", "+=", "len", "(", "hits_class", ")", "\n", "", "rate", "=", "float", "(", "num_hits", ")", "/", "float", "(", "len", "(", "preds", ")", ")", "\n", "print", "(", "'Average Acc -- {}'", ".", "format", "(", "rate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.acc_distr_per_class": [[37, 74], ["numpy.load", "list", "pdb.set_trace", "enumerate", "set", "range", "matplotlib.bar", "matplotlib.savefig", "matplotlib.show", "numpy.where", "len", "rates.append", "numpy.where", "print", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["", "def", "acc_distr_per_class", "(", "filename_result", ")", ":", "\n", "    ", "results", "=", "np", ".", "load", "(", "filename_result", ")", "\n", "preds", "=", "results", "[", "'preds'", "]", "\n", "labels", "=", "results", "[", "'labels'", "]", "\n", "\n", "classname", "=", "list", "(", "set", "(", "labels", ")", ")", "\n", "pdb", ".", "set_trace", "(", ")", "\n", "for", "i", ",", "clas", "in", "enumerate", "(", "classname", ")", ":", "\n", "        ", "idx", "=", "np", ".", "where", "(", "labels", "==", "clas", ")", "[", "0", "]", "\n", "pred_clas", "=", "preds", "[", "idx", "]", "\n", "rates", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "classname", ")", ")", ":", "\n", "            ", "pred_idx", "=", "np", ".", "where", "(", "pred_clas", "==", "classname", "[", "j", "]", ")", "[", "0", "]", "\n", "if", "j", "==", "0", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "1", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "2", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "3", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "4", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "5", ":", "\n", "                ", "rate", "=", "float", "(", "len", "(", "pred_idx", ")", ")", "/", "float", "(", "len", "(", "idx", ")", ")", "\n", "", "if", "j", "==", "i", ":", "\n", "                ", "print", "(", "'Class {} vs {} -- {}'", ".", "format", "(", "i", ",", "j", ",", "rate", ")", ")", "\n", "", "rates", ".", "append", "(", "rate", ")", "\n", "\n", "", "opacity", "=", "1.0", "\n", "binWidth", "=", "0.5", "\n", "colors", "=", "[", "'C0'", ",", "'C1'", ",", "'C2'", ",", "'C3'", ",", "'C4'", ",", "'C5'", ",", "'C6'", ",", "'C7'", ",", "'C8'", ",", "'C9'", "]", "\n", "plt", ".", "bar", "(", "classname", ",", "rates", ",", "binWidth", ",", "\n", "alpha", "=", "opacity", ",", "color", "=", "colors", "[", "0", "]", ")", "\n", "\n", "plt", ".", "savefig", "(", "'/research/prip-gongsixu/codes/biasface/results/model_analysis/age0_hist_{}.png'", ".", "format", "(", "i", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.main": [[75, 78], ["age_acc_analysis.acc_per_class_1offset"], "function", ["home.repos.pwc.inspect_result.gongsixue_DebFace.result_analysis.age_acc_analysis.acc_per_class_1offset"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "filename_result", "=", "'/research/prip-gongsixu/codes/biasface/results/model_analysis/result_agel20.npz'", "\n", "acc_per_class_1offset", "(", "filename_result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.visualizer.Visualizer.__init__": [[10, 17], ["visdom.Visdom"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "port", ",", "env", ",", "title", ")", ":", "\n", "        ", "self", ".", "keys", "=", "[", "]", "\n", "self", ".", "values", "=", "{", "}", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "viz", "=", "visdom", ".", "Visdom", "(", "port", "=", "port", ",", "env", "=", "env", ")", "\n", "self", ".", "iteration", "=", "0", "\n", "self", ".", "title", "=", "title", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.visualizer.Visualizer.register": [[18, 55], ["visualizer.Visualizer.keys.append", "dict", "dict", "visualizer.Visualizer.viz._send", "modules[].keys", "plotly.Scatter", "utils.plotlify", "modules[].keys", "range", "dict", "dict", "Exception", "len"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.plotlify"], ["", "def", "register", "(", "self", ",", "modules", ")", ":", "\n", "# here modules are assumed to be a dictionary", "\n", "        ", "for", "key", "in", "modules", ":", "\n", "            ", "self", ".", "keys", ".", "append", "(", "key", ")", "\n", "self", ".", "values", "[", "key", "]", "=", "{", "}", "\n", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "=", "modules", "[", "key", "]", "[", "'dtype'", "]", "\n", "self", ".", "values", "[", "key", "]", "[", "'vtype'", "]", "=", "modules", "[", "key", "]", "[", "'vtype'", "]", "\n", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", "=", "modules", "[", "key", "]", "[", "'win'", "]", "if", "'win'", "in", "modules", "[", "key", "]", ".", "keys", "(", ")", "else", "None", "\n", "if", "modules", "[", "key", "]", "[", "'vtype'", "]", "==", "'plot'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'layout'", "]", "=", "modules", "[", "key", "]", "[", "'layout'", "]", "if", "'layout'", "in", "modules", "[", "key", "]", ".", "keys", "(", ")", "else", "{", "'windows'", ":", "[", "key", "]", ",", "'id'", ":", "0", "}", "\n", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "[", "]", "\n", "# Create traces", "\n", "data", "=", "[", "go", ".", "Scatter", "(", "\n", "x", "=", "[", "]", ",", "\n", "y", "=", "[", "]", ",", "\n", "mode", "=", "'lines'", ",", "\n", "name", "=", "self", ".", "values", "[", "key", "]", "[", "'layout'", "]", "[", "'windows'", "]", "[", "i", "]", "\n", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "values", "[", "key", "]", "[", "'layout'", "]", "[", "'windows'", "]", ")", ")", "]", "\n", "# Edit the layout", "\n", "layout", "=", "dict", "(", "\n", "title", "=", "key", ",", "\n", "xaxis", "=", "dict", "(", "title", "=", "'Epoch'", ")", ",", "\n", "yaxis", "=", "dict", "(", "title", "=", "key", ")", ",", "\n", ")", "\n", "fig", "=", "dict", "(", "data", "=", "data", ",", "layout", "=", "layout", ")", "\n", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", "=", "self", ".", "viz", ".", "_send", "(", "\n", "plotlify", "(", "fig", ",", "env", "=", "self", ".", "env", ",", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", ")", ")", "\n", "", "elif", "modules", "[", "key", "]", "[", "'vtype'", "]", "==", "'image'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "None", "\n", "", "elif", "modules", "[", "key", "]", "[", "'vtype'", "]", "==", "'images'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "None", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Data type not supported, please update the '", "\n", "'visualizer plugin and rerun !!'", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.visualizer.Visualizer.update": [[57, 126], ["[].append", "plotly.Scatter", "dict", "visualizer.Visualizer.viz._send", "plotly.Scatter", "utils.plotlify", "[].numpy", "range", "Exception", "range", "numpy.array().tolist", "numpy.array().tolist", "visualizer.Visualizer.viz.image", "visualizer.Visualizer.viz.image", "[].numpy", "range", "Exception", "len", "temp[].min", "temp[].max", "range", "visualizer.Visualizer.viz.images", "visualizer.Visualizer.viz.images", "numpy.array", "numpy.array", "dict", "dict", "[].min", "[].max", "dict", "dict"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.None.utils.plotlify"], ["", "", "", "def", "update", "(", "self", ",", "modules", ")", ":", "\n", "        ", "for", "key", "in", "modules", ":", "\n", "            ", "if", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "==", "'scalar'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", ".", "append", "(", "modules", "[", "key", "]", ")", "\n", "", "elif", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "==", "'image'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "modules", "[", "key", "]", "\n", "", "elif", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "==", "'images'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "modules", "[", "key", "]", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Data type not supported, please update the '", "\n", "'visualizer plugin and rerun !!'", ")", "\n", "\n", "", "", "for", "key", "in", "self", ".", "keys", ":", "\n", "            ", "if", "self", ".", "values", "[", "key", "]", "[", "'vtype'", "]", "==", "'plot'", ":", "\n", "# Create traces", "\n", "                ", "data", "=", "[", "go", ".", "Scatter", "(", "\n", "x", "=", "[", "]", ",", "\n", "y", "=", "[", "]", ",", "\n", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "values", "[", "key", "]", "[", "'layout'", "]", "[", "'windows'", "]", ")", ")", "]", "\n", "data", "[", "self", ".", "values", "[", "key", "]", "[", "'layout'", "]", "[", "'id'", "]", "]", "=", "go", ".", "Scatter", "(", "\n", "x", "=", "np", ".", "array", "(", "[", "self", ".", "iteration", "]", ")", ".", "tolist", "(", ")", ",", "\n", "y", "=", "np", ".", "array", "(", "[", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "[", "-", "1", "]", "]", ")", ".", "tolist", "(", ")", ",", "\n", ")", "\n", "fig", "=", "dict", "(", "data", "=", "data", ",", "append", "=", "True", ")", "\n", "self", ".", "viz", ".", "_send", "(", "\n", "plotlify", "(", "fig", ",", "env", "=", "self", ".", "env", ",", "\n", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", ")", ",", "endpoint", "=", "'update'", ")", "\n", "", "elif", "self", ".", "values", "[", "key", "]", "[", "'vtype'", "]", "==", "'image'", ":", "\n", "                ", "temp", "=", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "temp", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "temp", "[", "i", "]", "=", "temp", "[", "i", "]", "-", "temp", "[", "i", "]", ".", "min", "(", ")", "\n", "temp", "[", "i", "]", "=", "temp", "[", "i", "]", "/", "temp", "[", "i", "]", ".", "max", "(", ")", "\n", "", "if", "self", ".", "iteration", "==", "0", ":", "\n", "                    ", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", "=", "self", ".", "viz", ".", "image", "(", "\n", "temp", ",", "\n", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", ",", "\n", "opts", "=", "dict", "(", "title", "=", "key", ",", "caption", "=", "self", ".", "iteration", ")", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "viz", ".", "image", "(", "\n", "temp", ",", "\n", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", ",", "\n", "opts", "=", "dict", "(", "title", "=", "key", ",", "caption", "=", "self", ".", "iteration", ")", "\n", ")", "\n", "", "", "elif", "self", ".", "values", "[", "key", "]", "[", "'vtype'", "]", "==", "'images'", ":", "\n", "                ", "temp", "=", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "temp", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "temp", ".", "shape", "[", "1", "]", ")", ":", "\n", "                        ", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "]", "[", "j", "]", "-", "temp", "[", "i", "]", "[", "j", "]", ".", "min", "(", ")", "\n", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "]", "[", "j", "]", "/", "temp", "[", "i", "]", "[", "j", "]", ".", "max", "(", ")", "\n", "", "", "if", "self", ".", "iteration", "==", "0", ":", "\n", "                    ", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", "=", "self", ".", "viz", ".", "images", "(", "\n", "temp", ",", "\n", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", ",", "\n", "opts", "=", "dict", "(", "title", "=", "key", ",", "caption", "=", "self", ".", "iteration", ")", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "viz", ".", "images", "(", "\n", "temp", ",", "\n", "opts", "=", "dict", "(", "\n", "title", "=", "key", ",", "\n", "caption", "=", "self", ".", "iteration", "\n", ")", ",", "\n", "win", "=", "self", ".", "values", "[", "key", "]", "[", "'win'", "]", "\n", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Visualization type not supported, please '", "\n", "'update the visualizer plugin and rerun !!'", ")", "\n", "", "", "self", ".", "iteration", "=", "self", ".", "iteration", "+", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.logger.Logger.__init__": [[7, 17], ["os.path.join", "open", "logger.Logger.fid.close", "os.path.isdir", "os.makedirs"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "filename", ",", "enabled", "=", "True", ")", ":", "\n", "        ", "self", ".", "enabled", "=", "enabled", "\n", "if", "not", "self", ".", "enabled", ":", "\n", "            ", "return", "\n", "", "self", ".", "num", "=", "0", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "self", ".", "filename", "=", "os", ".", "path", ".", "join", "(", "path", ",", "filename", ")", "\n", "self", ".", "fid", "=", "open", "(", "self", ".", "filename", ",", "'w'", ")", "\n", "self", ".", "fid", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.logger.Logger.register": [[18, 29], ["open", "logger.Logger.fid.write", "logger.Logger.fid.close", "len"], "methods", ["None"], ["", "def", "register", "(", "self", ",", "modules", ")", ":", "\n", "        ", "if", "not", "self", ".", "enabled", ":", "\n", "            ", "return", "\n", "", "self", ".", "num", "=", "self", ".", "num", "+", "len", "(", "modules", ")", "\n", "tmpstr", "=", "''", "\n", "for", "tmp", "in", "modules", ":", "\n", "            ", "tmpstr", "=", "tmpstr", "+", "tmp", "+", "'\\t'", "\n", "", "tmpstr", "=", "tmpstr", "+", "'\\n'", "\n", "self", ".", "fid", "=", "open", "(", "self", ".", "filename", ",", "'a'", ")", "\n", "self", ".", "fid", ".", "write", "(", "tmpstr", ")", "\n", "self", ".", "fid", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.logger.Logger.update": [[30, 40], ["open", "logger.Logger.fid.write", "logger.Logger.fid.close"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "modules", ")", ":", "\n", "        ", "if", "not", "self", ".", "enabled", ":", "\n", "            ", "return", "\n", "", "tmpstr", "=", "''", "\n", "for", "tmp", "in", "modules", ":", "\n", "            ", "tmpstr", "=", "tmpstr", "+", "'%.6f'", "%", "(", "modules", "[", "tmp", "]", ")", "+", "'\\t'", "\n", "", "tmpstr", "=", "tmpstr", "+", "'\\n'", "\n", "self", ".", "fid", "=", "open", "(", "self", ".", "filename", ",", "'a'", ")", "\n", "self", ".", "fid", ".", "write", "(", "tmpstr", ")", "\n", "self", ".", "fid", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.__init__": [[7, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "smoothing", "=", "False", ",", "smoothness", "=", "0.7", ")", ":", "\n", "        ", "self", ".", "keys", "=", "[", "]", "\n", "self", ".", "values", "=", "{", "}", "\n", "self", ".", "smoothing", "=", "smoothing", "\n", "self", ".", "smoothness", "=", "smoothness", "\n", "self", ".", "num", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.register": [[14, 25], ["monitor.Monitor.keys.append", "Exception"], "methods", ["None"], ["", "def", "register", "(", "self", ",", "modules", ")", ":", "\n", "# here modules are assumed to be a dictionary", "\n", "        ", "for", "key", "in", "modules", ":", "\n", "            ", "self", ".", "keys", ".", "append", "(", "key", ")", "\n", "self", ".", "values", "[", "key", "]", "=", "{", "}", "\n", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "=", "modules", "[", "key", "]", "[", "'dtype'", "]", "\n", "\n", "if", "modules", "[", "key", "]", "[", "'dtype'", "]", "==", "'running_mean'", ":", "\n", "                ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "0", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Data type not supported, please update the '", "\n", "'monitor plugin and rerun !!'", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.reset": [[27, 31], ["None"], "methods", ["None"], ["", "", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "num", "=", "0", "\n", "for", "key", "in", "self", ".", "keys", ":", "\n", "            ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.update": [[32, 49], ["Exception"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "modules", ",", "batch_size", ")", ":", "\n", "        ", "for", "key", "in", "modules", ":", "\n", "            ", "if", "self", ".", "values", "[", "key", "]", "[", "'dtype'", "]", "==", "'running_mean'", ":", "\n", "                ", "if", "not", "self", ".", "smoothing", ":", "\n", "                    ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "(", "self", ".", "values", "[", "key", "]", "[", "\n", "'value'", "]", "*", "self", ".", "num", "+", "\n", "modules", "[", "key", "]", "*", "batch_size", "\n", ")", "/", "(", "self", ".", "num", "+", "batch_size", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "=", "self", ".", "values", "[", "key", "]", "[", "\n", "'value'", "]", "*", "self", ".", "smoothness", "+", "modules", "[", "key", "]", "*", "(", "1", "-", "self", ".", "smoothness", ")", "\n", "", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Data type not supported, please update the '", "\n", "'monitor plugin and rerun !!'", ")", "\n", "\n", "", "", "self", ".", "num", "+=", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.monitor.Monitor.getvalues": [[50, 56], ["collections.OrderedDict"], "methods", ["None"], ["", "def", "getvalues", "(", "self", ",", "key", "=", "None", ")", ":", "\n", "        ", "if", "key", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", "\n", "", "else", ":", "\n", "            ", "return", "OrderedDict", "(", "\n", "[", "(", "key", ",", "self", ".", "values", "[", "key", "]", "[", "'value'", "]", ")", "for", "key", "in", "self", ".", "keys", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.__init__": [[8, 16], ["os.path.isdir", "os.makedirs"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "ext", "=", "'png'", ")", ":", "\n", "        ", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", "is", "False", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "self", ".", "path", "=", "path", "\n", "self", ".", "names", "=", "[", "]", "\n", "self", ".", "ext", "=", "ext", "\n", "self", ".", "iteration", "=", "1", "\n", "self", ".", "num", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.register": [[17, 22], ["len", "image.Image.names.append"], "methods", ["None"], ["", "def", "register", "(", "self", ",", "modules", ")", ":", "\n", "# here modules is assumed to be a list", "\n", "        ", "self", ".", "num", "=", "self", ".", "num", "+", "len", "(", "modules", ")", "\n", "for", "tmp", "in", "modules", ":", "\n", "            ", "self", ".", "names", ".", "append", "(", "tmp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.plugins.image.Image.update": [[23, 30], ["range", "os.path.join", "torchvision.save_image"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "modules", ")", ":", "\n", "# here modules is assumed to be a list", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "            ", "name", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'%s_%03d.png'", "%", "\n", "(", "self", ".", "names", "[", "i", "]", ",", "self", ".", "iteration", ")", ")", "\n", "vutils", ".", "save_image", "(", "modules", "[", "i", "]", ",", "name", ")", "\n", "", "self", ".", "iteration", "=", "self", ".", "iteration", "+", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.uncertainty.Uncertainty.__init__": [[11, 14], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "wsigma", ")", ":", "\n", "        ", "super", "(", "Uncertainty", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "wsigma", "=", "wsigma", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.uncertainty.Uncertainty.__call__": [[15, 31], ["torch.mul", "torch.mul", "torch.exp", "torch.norm", "torch.exp", "torch.mul.mean", "tmp5.mean"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "\n", "        ", "mu", "=", "input", "[", "0", "]", "\n", "cov", "=", "input", "[", "1", "]", "# log (sigma^2)", "\n", "\n", "tmp1", "=", "target", "-", "mu", "\n", "tmp2", "=", "torch", ".", "mul", "(", "tmp1", ",", "tmp1", ")", "\n", "\n", "tmp4", "=", "torch", ".", "mul", "(", "tmp2", ",", "torch", ".", "exp", "(", "-", "cov", ")", ")", "\n", "tmp5", "=", "cov", "\n", "\n", "# regularizing the norm of the covariance.", "\n", "tmp6", "=", "self", ".", "wsigma", "*", "torch", ".", "norm", "(", "torch", ".", "exp", "(", "cov", ")", ")", "\n", "loss", "=", "tmp4", ".", "mean", "(", ")", "+", "tmp5", ".", "mean", "(", ")", "+", "tmp6", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.regression.Regression.__init__": [[10, 13], ["torch.nn.Module.__init__", "torch.nn.MSELoss"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Regression", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.regression.Regression.__call__": [[14, 18], ["regression.Regression.loss.forward"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.forward"], ["", "def", "__call__", "(", "self", ",", "inputs", ",", "target", ")", ":", "\n", "        ", "loss", "=", "self", ".", "loss", ".", "forward", "(", "inputs", ",", "target", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.angular_softmax.AngleLoss.__init__": [[11, 19], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gamma", "=", "0", ",", "if_cuda", "=", "False", ")", ":", "\n", "        ", "super", "(", "AngleLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "it", "=", "0", "\n", "self", ".", "LambdaMin", "=", "5.0", "\n", "self", ".", "LambdaMax", "=", "1500.0", "\n", "self", ".", "lamb", "=", "1500.0", "\n", "self", ".", "if_cuda", "=", "if_cuda", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.angular_softmax.AngleLoss.forward": [[20, 46], ["target.view.view.view", "index.cuda.cuda.scatter_", "index.cuda.cuda.byte", "torch.autograd.Variable", "torch.autograd.Variable", "max", "torch.log_softmax", "torch.log_softmax", "logpt.view.view.gather", "logpt.view.view.view", "torch.autograd.Variable", "torch.autograd.Variable", "loss.mean.mean.mean", "target.view.view.data.view", "index.cuda.cuda.cuda", "logpt.view.view.data.exp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "self", ".", "it", "+=", "1", "\n", "cos_theta", ",", "phi_theta", "=", "input", "\n", "target", "=", "target", ".", "view", "(", "-", "1", ",", "1", ")", "# size=(B,1)", "\n", "\n", "index", "=", "cos_theta", ".", "data", "*", "0.0", "# size=(B,Classnum)", "\n", "index", ".", "scatter_", "(", "1", ",", "target", ".", "data", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "index", "=", "index", ".", "byte", "(", ")", "\n", "if", "self", ".", "if_cuda", ":", "\n", "            ", "index", "=", "index", ".", "cuda", "(", ")", "\n", "", "index", "=", "Variable", "(", "index", ")", "\n", "\n", "self", ".", "lamb", "=", "max", "(", "self", ".", "LambdaMin", ",", "self", ".", "LambdaMax", "/", "(", "1", "+", "0.1", "*", "self", ".", "it", ")", ")", "\n", "output", "=", "cos_theta", "*", "1.0", "# size=(B,Classnum)", "\n", "output", "[", "index", "]", "-=", "cos_theta", "[", "index", "]", "*", "(", "1.0", "+", "0", ")", "/", "(", "1", "+", "self", ".", "lamb", ")", "\n", "output", "[", "index", "]", "+=", "phi_theta", "[", "index", "]", "*", "(", "1.0", "+", "0", ")", "/", "(", "1", "+", "self", ".", "lamb", ")", "\n", "\n", "logpt", "=", "F", ".", "log_softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "logpt", "=", "logpt", ".", "gather", "(", "1", ",", "target", ")", "\n", "logpt", "=", "logpt", ".", "view", "(", "-", "1", ")", "\n", "pt", "=", "Variable", "(", "logpt", ".", "data", ".", "exp", "(", ")", ")", "\n", "\n", "loss", "=", "-", "1", "*", "(", "1", "-", "pt", ")", "**", "self", ".", "gamma", "*", "logpt", "\n", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.BatchHardTripletLoss.__init__": [[11, 41], ["torch.Module.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.autograd.Variable", "torch.autograd.Variable", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.Softplus", "torch.Softplus", "triplet.BatchHardTripletLoss.pos_mask[].fill_", "triplet.BatchHardTripletLoss.pos_mask.cuda", "triplet.BatchHardTripletLoss.neg_mask.cuda", "triplet.BatchHardTripletLoss.pos_dist_diag.cuda", "triplet.BatchHardTripletLoss.activation.cuda"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "batch_size_class", ",", "batch_size_image", ",", "\n", "margin", "=", "0.0", ",", "cuda", "=", "False", ")", ":", "\n", "        ", "super", "(", "BatchHardTripletLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cuda", "=", "cuda", "\n", "self", ".", "margin", "=", "margin", "\n", "\n", "if", "self", ".", "margin", "==", "0", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Softplus", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "\n", "", "self", ".", "batch_size_class", "=", "batch_size_class", "\n", "self", ".", "batch_size_image", "=", "batch_size_image", "\n", "self", ".", "batch_size", "=", "self", ".", "batch_size_class", "*", "self", ".", "batch_size_image", "\n", "\n", "self", ".", "pos_mask", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "batch_size", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size_class", ")", ":", "\n", "            ", "start", "=", "i", "*", "self", ".", "batch_size_image", "\n", "stop", "=", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size_image", "\n", "self", ".", "pos_mask", "[", "start", ":", "stop", ",", "start", ":", "stop", "]", ".", "fill_", "(", "1", ")", "\n", "", "self", ".", "pos_mask", "=", "Variable", "(", "self", ".", "pos_mask", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "neg_mask", "=", "torch", ".", "add", "(", "-", "self", ".", "pos_mask", ",", "1", ")", "\n", "self", ".", "pos_dist_diag", "=", "torch", ".", "mul", "(", "self", ".", "pos_mask", ",", "1e25", ")", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "pos_mask", "=", "self", ".", "pos_mask", ".", "cuda", "(", ")", "\n", "self", ".", "neg_mask", "=", "self", ".", "neg_mask", ".", "cuda", "(", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "activation", "=", "self", ".", "activation", ".", "cuda", "(", ")", "\n", "", "self", ".", "pos_dist_diag", "=", "self", ".", "pos_dist_diag", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.BatchHardTripletLoss.forward": [[42, 87], ["features.size", "int", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.add", "torch.add", "torch.add", "torch.add", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "features.norm().mean", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "dist_pos[].sqrt().mean", "dist_neg[].sqrt().mean", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul.max", "torch.mul.max", "torch.add.min", "torch.add.min", "score_pos.sqrt.sqrt.sqrt", "score_neg.sqrt.sqrt.sqrt", "triplet.BatchHardTripletLoss.pos_mask.data.resize_().fill_", "int", "range", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "features.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "triplet.BatchHardTripletLoss.activation", "triplet.BatchHardTripletLoss.pos_mask[].data.fill_", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum().repeat.transpose", "torch.mul().sum().repeat.transpose", "features.norm", "dist_pos[].sqrt", "dist_neg[].sqrt", "triplet.BatchHardTripletLoss.pos_mask.data.resize_", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "\n", "        ", "batch_size", "=", "features", ".", "size", "(", "0", ")", "\n", "batch_size_class", "=", "int", "(", "batch_size", "/", "self", ".", "batch_size_image", ")", "\n", "\n", "if", "batch_size_class", "!=", "self", ".", "batch_size_class", ":", "\n", "            ", "self", ".", "pos_mask", ".", "data", ".", "resize_", "(", "batch_size", ",", "batch_size", ")", ".", "fill_", "(", "0", ")", "\n", "self", ".", "batch_size_class", "=", "int", "(", "batch_size", "/", "self", ".", "batch_size_image", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size_class", ")", ":", "\n", "                ", "start", "=", "i", "*", "self", ".", "batch_size_image", "\n", "stop", "=", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size_image", "\n", "self", ".", "pos_mask", "[", "start", ":", "stop", ",", "start", ":", "stop", "]", ".", "data", ".", "fill_", "(", "1", ")", "\n", "", "self", ".", "neg_mask", ".", "data", "=", "torch", ".", "add", "(", "-", "self", ".", "pos_mask", ".", "data", ",", "1", ")", "\n", "self", ".", "pos_dist_diag", "=", "torch", ".", "mul", "(", "self", ".", "pos_mask", ",", "1e25", ")", "\n", "\n", "", "feat_norm", "=", "torch", ".", "mul", "(", "\n", "features", ",", "features", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "batch_size", ")", "\n", "r", "=", "torch", ".", "mm", "(", "features", ",", "features", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "distance", "=", "torch", ".", "add", "(", "\n", "feat_norm", ",", "torch", ".", "add", "(", "feat_norm", ".", "transpose", "(", "1", ",", "0", ")", ",", "-", "torch", ".", "mul", "(", "r", ",", "2", ")", ")", ")", "\n", "distance", "=", "torch", ".", "clamp", "(", "distance", ",", "min", "=", "1e-12", ")", "\n", "avg_feat_norm", "=", "features", ".", "norm", "(", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "\n", "dist_pos", "=", "torch", ".", "mul", "(", "distance", ",", "self", ".", "pos_mask", ")", "\n", "dist_neg", "=", "torch", ".", "mul", "(", "distance", ",", "self", ".", "neg_mask", ")", "\n", "avg_pos_dist", "=", "dist_pos", "[", "self", ".", "pos_mask", "==", "1", "]", ".", "sqrt", "(", ")", ".", "mean", "(", ")", "\n", "avg_neg_dist", "=", "dist_neg", "[", "self", ".", "neg_mask", "==", "1", "]", ".", "sqrt", "(", ")", ".", "mean", "(", ")", "\n", "dist_neg", "=", "torch", ".", "add", "(", "dist_neg", ",", "self", ".", "pos_dist_diag", ")", "\n", "\n", "score_pos", ",", "_", "=", "dist_pos", ".", "max", "(", "dim", "=", "1", ")", "\n", "score_neg", ",", "_", "=", "dist_neg", ".", "min", "(", "dim", "=", "1", ")", "\n", "\n", "score_pos", "=", "score_pos", ".", "sqrt", "(", ")", "\n", "score_neg", "=", "score_neg", ".", "sqrt", "(", ")", "\n", "\n", "if", "self", ".", "margin", ">", "0", ":", "\n", "            ", "diff", "=", "self", ".", "margin", "+", "score_pos", "-", "score_neg", "\n", "avg_active", "=", "(", "diff", ">", "0", ")", ".", "sum", "(", ")", "/", "batch_size", "\n", "loss", "=", "torch", ".", "clamp", "(", "diff", ",", "min", "=", "0.0", ")", "\n", "", "else", ":", "\n", "            ", "diff", "=", "1e-6", "+", "score_pos", "-", "score_neg", "\n", "avg_active", "=", "(", "diff", ">", "0", ")", ".", "sum", "(", ")", "/", "batch_size", "\n", "loss", "=", "self", ".", "activation", "(", "score_pos", "-", "score_neg", ")", "\n", "\n", "", "return", "loss", ",", "avg_feat_norm", ",", "avg_active", ",", "avg_pos_dist", ",", "avg_neg_dist", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.RandomBatchTripletLoss.__init__": [[90, 124], ["torch.Module.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.add", "torch.add", "torch.add", "torch.add", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Softplus", "torch.Softplus", "triplet.RandomBatchTripletLoss.pos_mask[].fill_", "triplet.RandomBatchTripletLoss.pos_mask.cuda", "triplet.RandomBatchTripletLoss.neg_mask.cuda", "triplet.RandomBatchTripletLoss.pos_dist_diag.cuda", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "triplet.RandomBatchTripletLoss.activation.cuda"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["    ", "def", "__init__", "(", "self", ",", "batch_size_class", ",", "batch_size_image", ",", "\n", "margin", "=", "0.0", ",", "cuda", "=", "False", ")", ":", "\n", "        ", "super", "(", "RandomBatchTripletLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cuda", "=", "cuda", "\n", "self", ".", "margin", "=", "margin", "\n", "\n", "if", "self", ".", "margin", "==", "0", ":", "\n", "            ", "self", ".", "activation", "=", "nn", ".", "Softplus", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activation", "=", "None", "\n", "\n", "", "self", ".", "batch_size_class", "=", "batch_size_class", "\n", "self", ".", "batch_size_image", "=", "batch_size_image", "\n", "self", ".", "batch_size", "=", "self", ".", "batch_size_class", "*", "self", ".", "batch_size_image", "\n", "\n", "self", ".", "pos_mask", "=", "torch", ".", "zeros", "(", "self", ".", "batch_size", ",", "self", ".", "batch_size", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size_class", ")", ":", "\n", "            ", "start", "=", "i", "*", "self", ".", "batch_size_image", "\n", "stop", "=", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size_image", "\n", "self", ".", "pos_mask", "[", "start", ":", "stop", ",", "start", ":", "stop", "]", ".", "fill_", "(", "1", ")", "\n", "", "self", ".", "neg_mask", "=", "torch", ".", "add", "(", "-", "self", ".", "pos_mask", ",", "1", ")", "\n", "self", ".", "pos_dist_diag", "=", "torch", ".", "mul", "(", "self", ".", "pos_mask", ",", "1e25", ")", "\n", "self", ".", "pos_mask", "=", "torch", ".", "add", "(", "self", ".", "pos_mask", ",", "\n", "-", "torch", ".", "eye", "(", "self", ".", "batch_size", ",", "self", ".", "batch_size", ")", ")", "\n", "self", ".", "pos_mask", "=", "Variable", "(", "self", ".", "pos_mask", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "neg_mask", "=", "Variable", "(", "self", ".", "neg_mask", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "pos_dist_diag", "=", "Variable", "(", "self", ".", "pos_dist_diag", ",", "requires_grad", "=", "False", ")", "\n", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "self", ".", "pos_mask", "=", "self", ".", "pos_mask", ".", "cuda", "(", ")", "\n", "self", ".", "neg_mask", "=", "self", ".", "neg_mask", ".", "cuda", "(", ")", "\n", "self", ".", "pos_dist_diag", "=", "self", ".", "pos_dist_diag", ".", "cuda", "(", ")", "\n", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "activation", "=", "self", ".", "activation", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.RandomBatchTripletLoss.sample_from_dist": [[125, 151], ["range", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "dist_pos.size", "dist_pos[].nonzero().squeeze", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "pos_ids.cuda.cuda.append", "neg_ids.cuda.cuda.append", "pos_ids.cuda.cuda.cuda", "neg_ids.cuda.cuda.cuda", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "id2.numel", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.multinomial", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "dist_pos[].nonzero", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select"], "methods", ["None"], ["", "", "", "def", "sample_from_dist", "(", "self", ",", "dist_pos", ",", "dist_neg", ")", ":", "\n", "        ", "pos_ids", "=", "[", "]", "\n", "neg_ids", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "dist_pos", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "id1", "=", "dist_pos", "[", "i", ",", ":", "]", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "sample1", "=", "torch", ".", "multinomial", "(", "\n", "torch", ".", "index_select", "(", "dist_pos", "[", "i", "]", ",", "0", ",", "id1", ")", ",", "1", ")", "\n", "pscore", "=", "torch", ".", "index_select", "(", "dist_pos", "[", "i", "]", ",", "0", ",", "id1", "[", "sample1", "]", ")", "\n", "sample1", "=", "id1", "[", "sample1", "]", "[", "0", "]", "\n", "id2", "=", "(", "dist_neg", "[", "i", ",", ":", "]", "<", "pscore", "+", "1e-4", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "\n", "if", "id2", ".", "numel", "(", ")", "==", "0", ":", "\n", "                ", "sample2", "=", "(", "dist_neg", "[", "i", ",", ":", "]", ">", "0.0", ")", ".", "nonzero", "(", ")", ".", "squeeze", "(", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "sample2", "=", "torch", ".", "multinomial", "(", "\n", "torch", ".", "exp", "(", "-", "torch", ".", "index_select", "(", "dist_neg", "[", "i", "]", ",", "0", ",", "id2", ")", ")", ",", "1", ")", "\n", "sample2", "=", "id2", "[", "sample2", "]", "[", "0", "]", "\n", "\n", "", "pos_ids", ".", "append", "(", "sample1", ")", "\n", "neg_ids", ".", "append", "(", "sample2", ")", "\n", "\n", "", "pos_ids", "=", "torch", ".", "Tensor", "(", "pos_ids", ")", ".", "long", "(", ")", "\n", "neg_ids", "=", "torch", ".", "Tensor", "(", "neg_ids", ")", ".", "long", "(", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "pos_ids", "=", "pos_ids", ".", "cuda", "(", ")", "\n", "neg_ids", "=", "neg_ids", ".", "cuda", "(", ")", "\n", "", "return", "pos_ids", ",", "neg_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.RandomBatchTripletLoss.forward": [[152, 214], ["features.size", "int", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mul().sum().repeat", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.add", "torch.add", "torch.add", "torch.add", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul.data.max", "torch.mul.data.max", "torch.add.data.min", "torch.add.data.min", "score_pos1.sqrt.sqrt.sqrt", "score_neg1.sqrt.sqrt.sqrt", "triplet.RandomBatchTripletLoss.sample_from_dist", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "score_pos.sqrt.sqrt.sqrt", "score_neg.sqrt.sqrt.sqrt", "triplet.RandomBatchTripletLoss.pos_mask.data.resize_().fill_", "int", "range", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "features.transpose", "torch.add", "torch.add", "torch.add", "torch.add", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "triplet.RandomBatchTripletLoss.activation", "triplet.RandomBatchTripletLoss.pos_mask[].data.fill_", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum", "torch.mul().sum().repeat.transpose", "torch.mul().sum().repeat.transpose", "triplet.RandomBatchTripletLoss.pos_mask.data.resize_", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.triplet.RandomBatchTripletLoss.sample_from_dist"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "batch_size", "=", "features", ".", "size", "(", "0", ")", "\n", "batch_size_class", "=", "int", "(", "batch_size", "/", "self", ".", "batch_size_image", ")", "\n", "\n", "if", "batch_size_class", "!=", "self", ".", "batch_size_class", ":", "\n", "            ", "self", ".", "pos_mask", ".", "data", ".", "resize_", "(", "batch_size", ",", "batch_size", ")", ".", "fill_", "(", "0", ")", "\n", "self", ".", "batch_size_class", "=", "int", "(", "batch_size", "/", "self", ".", "batch_size_image", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size_class", ")", ":", "\n", "                ", "start", "=", "i", "*", "self", ".", "batch_size_image", "\n", "stop", "=", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size_image", "\n", "self", ".", "pos_mask", "[", "start", ":", "stop", ",", "start", ":", "stop", "]", ".", "data", ".", "fill_", "(", "1", ")", "\n", "", "self", ".", "neg_mask", ".", "data", "=", "torch", ".", "add", "(", "-", "self", ".", "pos_mask", ".", "data", ",", "1", ")", "\n", "self", ".", "pos_dist_diag", "=", "torch", ".", "mul", "(", "self", ".", "pos_mask", ",", "1e25", ")", "\n", "self", ".", "pos_dist_diag", ".", "requires_grad", "=", "False", "\n", "if", "self", ".", "cuda", ":", "\n", "                ", "self", ".", "pos_mask", ".", "data", "=", "torch", ".", "add", "(", "\n", "self", ".", "pos_mask", ".", "data", ",", "\n", "-", "torch", ".", "eye", "(", "batch_size", ",", "batch_size", ")", ".", "cuda", "(", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "pos_mask", "=", "torch", ".", "add", "(", "\n", "self", ".", "pos_mask", ",", "-", "torch", ".", "eye", "(", "batch_size", ",", "batch_size", ")", "\n", ")", "\n", "\n", "", "", "feat_norm", "=", "torch", ".", "mul", "(", "\n", "features", ",", "features", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "batch_size", ")", "\n", "r", "=", "torch", ".", "mm", "(", "features", ",", "features", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "distance", "=", "torch", ".", "add", "(", "feat_norm", ",", "torch", ".", "add", "(", "feat_norm", ".", "transpose", "(", "1", ",", "0", ")", ",", "\n", "-", "torch", ".", "mul", "(", "r", ",", "2", ")", ")", ")", "\n", "distance", "=", "torch", ".", "clamp", "(", "distance", ",", "min", "=", "1e-8", ")", "\n", "\n", "dist_pos", "=", "torch", ".", "mul", "(", "distance", ",", "self", ".", "pos_mask", ")", "\n", "dist_neg", "=", "torch", ".", "mul", "(", "distance", ",", "self", ".", "neg_mask", ")", "\n", "dist_neg", "=", "torch", ".", "add", "(", "dist_neg", ",", "self", ".", "pos_dist_diag", ")", "\n", "\n", "score_pos1", ",", "_", "=", "dist_pos", ".", "data", ".", "max", "(", "dim", "=", "1", ")", "\n", "score_neg1", ",", "_", "=", "dist_neg", ".", "data", ".", "min", "(", "dim", "=", "1", ")", "\n", "\n", "score_pos1", "=", "score_pos1", ".", "sqrt", "(", ")", "\n", "score_neg1", "=", "score_neg1", ".", "sqrt", "(", ")", "\n", "accuracy", "=", "100", "*", "(", "score_pos1", "<", "score_neg1", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "batch_size", "\n", "\n", "pos_ids", ",", "neg_ids", "=", "self", ".", "sample_from_dist", "(", "dist_pos", ".", "data", ",", "dist_neg", ".", "data", ")", "\n", "pos_ids", "=", "Variable", "(", "pos_ids", ",", "requires_grad", "=", "False", ")", "\n", "neg_ids", "=", "Variable", "(", "neg_ids", ",", "requires_grad", "=", "False", ")", "\n", "\n", "score_pos", "=", "torch", ".", "gather", "(", "dist_pos", ",", "1", ",", "pos_ids", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "score_neg", "=", "torch", ".", "gather", "(", "dist_neg", ",", "1", ",", "neg_ids", ".", "view", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "score_pos", "=", "score_pos", ".", "sqrt", "(", ")", "\n", "score_neg", "=", "score_neg", ".", "sqrt", "(", ")", "\n", "\n", "if", "self", ".", "margin", ">", "0", ":", "\n", "            ", "diff", "=", "self", ".", "margin", "+", "score_pos", "-", "score_neg", "\n", "avg_active", "=", "(", "diff", ">", "0.0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "batch_size", "\n", "loss", "=", "torch", ".", "clamp", "(", "diff", ",", "min", "=", "0.0", ")", "\n", "", "else", ":", "\n", "            ", "diff", "=", "1e-4", "+", "score_pos", "-", "score_neg", "\n", "avg_active", "=", "(", "diff", ">", "0.0", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "batch_size", "\n", "loss", "=", "self", ".", "activation", "(", "diff", ")", "\n", "\n", "", "return", "[", "loss", ",", "avg_active", ".", "data", "[", "0", "]", ",", "accuracy", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.Classification.__init__": [[15, 18], ["torch.nn.Module.__init__", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "self", ".", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.Classification.__call__": [[19, 23], ["targets.long.long.long", "classification.Classification.loss"], "methods", ["None"], ["\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.BinaryClassify.__init__": [[25, 29], ["torch.nn.Module.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.nn.BCELoss", "torch.nn.BCELoss", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__", "home.repos.pwc.inspect_result.gongsixue_DebFace.None.checkpoints.Checkpoints.load"], ["for", "k", "in", "self", ".", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.BinaryClassify.__call__": [[30, 33], ["classification.BinaryClassify.loss"], "methods", ["None"], ["\n", "", "", "class", "Top1Classification", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.Softmax.__init__": [[36, 41], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["        ", "target", "=", "target", ".", "long", "(", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "pred", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "res", "=", "float", "(", "pred", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.Softmax.forward": [[42, 47], ["targets.long.long.long", "classification.Softmax.fc", "classification.Softmax.loss"], "methods", ["None"], ["return", "res", "\n", "\n", "", "", "class", "BiOrdinalClassify", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.CrossEntropy.__init__": [[49, 52], ["torch.nn.Module.__init__", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax", "torch.nn.LogSoftmax"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["\n", "output", "=", "torch", ".", "gt", "(", "output", ",", "0.5", ")", "\n", "pred", "=", "torch", ".", "sum", "(", "output", ",", "dim", "=", "1", ")", ".", "long", "(", ")", "\n", "target", "=", "torch", ".", "sum", "(", "target", ",", "dim", "=", "1", ")", ".", "long", "(", ")", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.CrossEntropy.forward": [[53, 57], ["classification.CrossEntropy.logsoftmax", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["res", "=", "float", "(", "pred", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n", "return", "res", "\n", "\n", "", "", "class", "Agergs_classification", ":", "\n"]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax_old.__init__": [[60, 72], ["torch.nn.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], ["\n", "", "def", "__call__", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "preds", "=", "[", "]", "\n", "for", "age", "in", "output", ":", "\n", "            ", "idx", "=", "np", ".", "digitize", "(", "int", "(", "age", ")", ",", "self", ".", "agebins", ")", "\n", "preds", ".", "append", "(", "int", "(", "idx", ")", ")", "\n", "", "preds", "=", "torch", ".", "LongTensor", "(", "preds", ")", "\n", "res", "=", "float", "(", "preds", ".", "eq", "(", "target", ".", "data", ".", "cpu", "(", ")", ")", ".", "sum", "(", ")", ")", "/", "float", "(", "batch_size", ")", "\n", "\n", "return", "res", "", "", "", ""]], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax_old.reset_parameters": [[75, 79], ["classification.AM_Softmax_old.parameters", "math.sqrt", "weight.data.uniform_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax_old.forward": [[80, 115], ["labels.long.long.size", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "torch.FloatTensor().zero_", "labels.long.long.long", "label_one_hot.cuda.cuda.scatter_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.mul.view", "torch.mul.view", "torch.mul.view", "torch.mul.view", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.normalize.transpose", "label_one_hot.cuda.cuda.cuda", "len", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "labels.long.long.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.softplus", "torch.softplus", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.add", "torch.add", "torch.add", "torch.add", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize"], []], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__": [[125, 137], ["torch.nn.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.__init__"], []], "home.repos.pwc.inspect_result.gongsixue_DebFace.losses.classification.AM_Softmax.forward": [[138, 154], ["label.long.long.long", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_", "torch.zeros_like.scatter_", "classification.AM_Softmax.loss", "torch.normalize.t", "label.long.long.view"], "methods", ["home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize", "home.repos.pwc.inspect_result.gongsixue_DebFace.evaluate.eval_utils.normalize"], []]}