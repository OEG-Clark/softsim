{"home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.parse_res": [[4, 16], ["open", "f.readlines", "len", "int", "eval", "f.readlines.pop", "f.readlines.pop().strip", "f.readlines.pop"], "function", ["None"], ["def", "parse_res", "(", "res_file", ")", ":", "\n", "    ", "with", "open", "(", "res_file", ")", "as", "f", ":", "\n", "        ", "res_dict", "=", "{", "}", "\n", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "while", "len", "(", "lines", ")", ":", "\n", "            ", "seed", "=", "int", "(", "lines", ".", "pop", "(", "0", ")", ")", "\n", "s", "=", "''", "\n", "while", "']'", "not", "in", "s", ":", "\n", "                ", "s", "+=", "lines", ".", "pop", "(", "0", ")", ".", "strip", "(", "'\\n'", ")", "\n", "", "res_dict", "[", "seed", "]", "=", "eval", "(", "s", ")", "\n", "\n", "", "return", "res_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.plot_res": [[18, 44], ["parse_res.create_std_plot", "enumerate", "parse_res.parse_res", "np.zeros", "np.zeros", "parse_res.keys", "parse_res.keys", "plt.errorbar", "plt.legend", "plt.xticks", "plt.yticks", "plt.xlabel", "plt.ylabel", "plt.savefig", "np.arange", "enumerate", "enumerate", "len", "len", "parse_res.keys", "parse_res.keys"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.create_std_plot", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.parse_res"], ["", "", "def", "plot_res", "(", "exp_set", ",", "lbl_set", ",", "prefix", "=", "''", ",", "postfix", "=", "''", ",", "fig_name", "=", "'compare.png'", ")", ":", "\n", "    ", "create_std_plot", "(", ")", "\n", "for", "t", ",", "res_file", "in", "enumerate", "(", "exp_set", ")", ":", "\n", "        ", "res_dict", "=", "parse_res", "(", "prefix", "+", "res_file", "+", "postfix", ")", "\n", "x", "=", "np", ".", "arange", "(", "11", ")", "*", "10", "\n", "y", "=", "np", ".", "zeros", "(", "11", ")", "\n", "err", "=", "np", ".", "zeros", "(", "11", ")", "\n", "for", "seed", "in", "res_dict", ".", "keys", "(", ")", ":", "\n", "            ", "for", "i", ",", "item", "in", "enumerate", "(", "res_dict", "[", "seed", "]", ")", ":", "\n", "                ", "y", "[", "i", "]", "+=", "item", "[", "'rmse'", "]", "/", "len", "(", "res_dict", ".", "keys", "(", ")", ")", "\n", "\n", "", "", "for", "seed", "in", "res_dict", ".", "keys", "(", ")", ":", "\n", "            ", "for", "i", ",", "item", "in", "enumerate", "(", "res_dict", "[", "seed", "]", ")", ":", "\n", "                ", "err", "[", "i", "]", "+=", "(", "item", "[", "'rmse'", "]", "-", "y", "[", "i", "]", ")", "**", "2", "/", "len", "(", "res_dict", ".", "keys", "(", ")", ")", "\n", "\n", "", "", "plt", ".", "errorbar", "(", "\n", "x", ",", "y", ",", "yerr", "=", "err", "**", "0.5", ",", "\n", "linestyle", "=", "'--'", ",", "marker", "=", "'^'", ",", "\n", "linewidth", "=", "2", ",", "markersize", "=", "12", ",", "label", "=", "lbl_set", "[", "t", "]", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xticks", "(", "x", ")", "\n", "plt", ".", "yticks", "(", "[", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.9", ",", "1.0", ",", "1.1", ",", "1.2", ",", "1.3", "]", ")", "\n", "plt", ".", "xlabel", "(", "'No. Iterations'", ")", "\n", "plt", ".", "ylabel", "(", "'RMSE of CO concentration (ppm)'", ")", "\n", "plt", ".", "savefig", "(", "\n", "prefix", "+", "fig_name", ",", "dpi", "=", "300", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.create_std_plot": [[47, 58], ["plt.figure", "plt.rc", "plt.rc", "plt.rc", "plt.rc", "plt.rc", "plt.rc", "plt.rc"], "function", ["None"], ["", "", "def", "create_std_plot", "(", ")", ":", "\n", "    ", "plt", ".", "figure", "(", ")", "\n", "MEDIUM_SIZE", "=", "14", "\n", "BIGGER_SIZE", "=", "18", "\n", "plt", ".", "rc", "(", "'font'", ",", "size", "=", "BIGGER_SIZE", ")", "# controls default text sizes", "\n", "plt", ".", "rc", "(", "'axes'", ",", "titlesize", "=", "BIGGER_SIZE", ")", "# fontsize of the axes title", "\n", "plt", ".", "rc", "(", "'axes'", ",", "labelsize", "=", "BIGGER_SIZE", ")", "# fontsize of the x and y labels", "\n", "plt", ".", "rc", "(", "'xtick'", ",", "labelsize", "=", "MEDIUM_SIZE", ")", "# fontsize of the tick labels", "\n", "plt", ".", "rc", "(", "'ytick'", ",", "labelsize", "=", "MEDIUM_SIZE", ")", "# fontsize of the tick labels", "\n", "plt", ".", "rc", "(", "'legend'", ",", "fontsize", "=", "BIGGER_SIZE", ")", "# legend fontsize", "\n", "plt", ".", "rc", "(", "'figure'", ",", "titlesize", "=", "BIGGER_SIZE", ")", "# fontsize of the figure title", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.main": [[60, 72], ["parse_res.plot_res", "parse_res.plot_res", "parse_res.plot_res"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.plot_res", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.plot_res", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.parse_res.plot_res"], ["", "def", "main", "(", ")", ":", "\n", "    ", "prefix", "=", "'./results/gas_full/'", "\n", "postfix", "=", "'.res'", "\n", "exp_set_1", "=", "[", "'vaegp_16'", ",", "'ssgp_16'", "]", "\n", "lbl_set_1", "=", "[", "'Revisited SSGP ($p=16$)'", ",", "'SSGP ($p=16$)'", "]", "\n", "exp_set_2", "=", "[", "'vaegp_32'", ",", "'ssgp_32'", "]", "\n", "lbl_set_2", "=", "[", "'Revisited SSGP ($p=32$)'", ",", "'SSGP ($p=32$)'", "]", "\n", "exp_set_3", "=", "[", "'vaegp_64'", ",", "'ssgp_64'", "]", "\n", "lbl_set_3", "=", "[", "'Revisited SSGP ($p=64$)'", ",", "'SSGP ($p=64$)'", "]", "\n", "plot_res", "(", "exp_set_1", ",", "lbl_set_1", ",", "prefix", ",", "postfix", ",", "'compare_16.png'", ")", "\n", "plot_res", "(", "exp_set_2", ",", "lbl_set_2", ",", "prefix", ",", "postfix", ",", "'compare_32.png'", ")", "\n", "plot_res", "(", "exp_set_3", ",", "lbl_set_3", ",", "prefix", ",", "postfix", ",", "'compare_64.png'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.GaussianNet.__init__": [[8, 22], ["nn.Module.__init__", "utils.utility.get_cuda_device", "nn.Linear().to", "nn.Linear().to", "nn.Linear().to", "nn.BatchNorm1d().to", "torch.zeros().to", "nn.Linear", "nn.Linear", "nn.Linear", "nn.BatchNorm1d", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "output_dim", ",", "hidden_dim", "=", "10", ",", "norm", "=", "True", ",", "bias", "=", "None", ")", ":", "\n", "        ", "super", "(", "GaussianNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "fc21", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "output_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "fc22", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "output_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "hidden_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "if", "bias", "is", "None", ":", "\n", "            ", "self", ".", "bias", "=", "torch", ".", "zeros", "(", "1", ",", "output_dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.GaussianNet.forward": [[23, 34], ["mvae.GaussianNet.fc1", "F.relu.view", "F.relu.view", "F.relu().view", "F.relu", "mvae.GaussianNet.fc21", "F.tanh", "mvae.GaussianNet.fc22", "F.relu", "mvae.GaussianNet.bn"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x_reshape", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "fc1", ".", "out_features", ")", "\n", "if", "(", "x_reshape", ".", "shape", "[", "0", "]", ">", "1", ")", "and", "(", "self", ".", "norm", "is", "True", ")", ":", "\n", "            ", "shape", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "fc1", ".", "out_features", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ".", "view", "(", "shape", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "mu", ",", "log_var", "=", "self", ".", "fc21", "(", "x", ")", ",", "F", ".", "tanh", "(", "self", ".", "fc22", "(", "x", ")", ")", "# mu: n_data by output_dim; log_var: n_data by output_dim", "\n", "return", "(", "mu", "+", "self", ".", "bias", ")", ",", "log_var", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.GaussianNet.sample": [[35, 48], ["mvae.GaussianNet.fc1", "F.relu.view", "torch.exp", "torch.empty().normal_().to", "F.relu.view", "F.relu().view", "F.relu", "mvae.GaussianNet.fc21", "F.tanh", "mvae.GaussianNet.fc22", "torch.empty().normal_", "F.relu", "mvae.GaussianNet.bn", "torch.empty"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "x", ",", "n_sample", "=", "10", ")", ":", "# previously, 100", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x_reshape", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "fc1", ".", "out_features", ")", "\n", "if", "(", "x_reshape", ".", "shape", "[", "0", "]", ">", "1", ")", "and", "(", "self", ".", "norm", "is", "True", ")", ":", "\n", "            ", "shape", "=", "x", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "fc1", ".", "out_features", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ".", "view", "(", "shape", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "mu", ",", "log_var", "=", "self", ".", "fc21", "(", "x", ")", ",", "F", ".", "tanh", "(", "self", ".", "fc22", "(", "x", ")", ")", "# mu: n_data by output_dim; log_var: n_data by output_dim", "\n", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "log_var", ")", "\n", "eps", "=", "torch", ".", "empty", "(", "n_sample", ",", "mu", ".", "shape", "[", "0", "]", ",", "self", ".", "output_dim", ")", ".", "normal_", "(", "0", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "return", "(", "mu", "+", "self", ".", "bias", ")", "+", "eps", "*", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureGaussianNet.__init__": [[51, 65], ["nn.Module.__init__", "utils.utility.get_cuda_device", "nn.ModuleList", "range", "nn.Linear().to", "mvae.MixtureGaussianNet.components.append", "torch.empty().uniform_().to", "mvae.GaussianNet", "nn.Linear", "torch.norm", "torch.empty().uniform_", "torch.empty"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "output_dim", ",", "n_component", ",", "prior_bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "MixtureGaussianNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "n_component", "=", "n_component", "\n", "self", ".", "components", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_component", ")", ":", "\n", "            ", "bias", "=", "None", "\n", "if", "prior_bias", ":", "\n", "                ", "bias", "=", "torch", ".", "empty", "(", "1", ",", "self", ".", "output_dim", ")", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "bias", "=", "10.0", "*", "bias", "/", "torch", ".", "norm", "(", "bias", ")", "\n", "", "self", ".", "components", ".", "append", "(", "GaussianNet", "(", "input_dim", ",", "output_dim", ",", "bias", "=", "bias", ")", ")", "\n", "", "self", ".", "weights", "=", "nn", ".", "Linear", "(", "input_dim", ",", "n_component", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureGaussianNet.forward": [[66, 85], ["torch.zeros().to", "range", "F.softmax", "torch.log", "torch.logsumexp", "mvae.MixtureGaussianNet.forward._forward"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "Z", ",", "X", "=", "None", ",", "grad", "=", "True", ")", ":", "# return log p(z|x) for each pair (z, x) or log p(z) for each z if X is None", "\n", "        ", "def", "_forward", "(", "X", ")", ":", "\n", "            ", "if", "X", "is", "None", ":", "\n", "                ", "X", "=", "torch", ".", "zeros", "(", "(", "Z", ".", "shape", "[", "0", "]", ",", "self", ".", "input_dim", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "res", "=", "torch", ".", "zeros", "(", "(", "Z", ".", "shape", "[", "0", "]", ",", "self", ".", "n_component", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_component", ")", ":", "\n", "                ", "mean", ",", "logvar", "=", "self", ".", "components", "[", "i", "]", "(", "X", ")", "# mean, logvar: Z.shape[0] by Z.shape[1]", "\n", "res", "[", ":", ",", "i", "]", "-=", "0.5", "*", "torch", ".", "sum", "(", "(", "(", "mean", "-", "Z", ")", "**", "2", ")", "*", "torch", ".", "exp", "(", "-", "2.0", "*", "logvar", ")", ",", "dim", "=", "1", ")", "\n", "res", "[", ":", ",", "i", "]", "-=", "0.5", "*", "torch", ".", "sum", "(", "logvar", ",", "dim", "=", "1", ")", "\n", "\n", "", "w", "=", "F", ".", "softmax", "(", "self", ".", "weights", "(", "torch", ".", "ones", "(", "1", ",", "self", ".", "input_dim", ")", ".", "to", "(", "self", ".", "device", ")", ")", ")", "\n", "res", "+=", "torch", ".", "log", "(", "w", ")", "\n", "return", "torch", ".", "logsumexp", "(", "res", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# output has shape Z.shape[0] by 1", "\n", "\n", "", "if", "not", "grad", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "return", "_forward", "(", "X", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "_forward", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureGaussianNet.sample": [[86, 96], ["torch.empty().uniform_().to", "F.softmax", "torch.argmax", "torch.cat", "torch.zeros().to", "mvae.MixtureGaussianNet.weights", "torch.empty().uniform_", "torch.ones().to", "torch.log", "torch.log", "c.sample", "torch.zeros", "torch.empty", "torch.ones", "torch.log"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureGaussianNet.sample"], ["", "", "def", "sample", "(", "self", ",", "X", "=", "None", ",", "n_sample", "=", "10", ")", ":", "# return n_sample from p(.|x) or p(.) if X is None", "\n", "        ", "if", "X", "is", "None", ":", "\n", "            ", "X", "=", "torch", ".", "zeros", "(", "(", "1", ",", "self", ".", "input_dim", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "U", "=", "torch", ".", "empty", "(", "n_sample", ",", "self", ".", "n_component", ")", ".", "uniform_", "(", "0", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "w", "=", "F", ".", "softmax", "(", "self", ".", "weights", "(", "torch", ".", "ones", "(", "1", ",", "self", ".", "input_dim", ")", ".", "to", "(", "self", ".", "device", ")", ")", ")", "\n", "chosen", "=", "torch", ".", "argmax", "(", "torch", ".", "log", "(", "w", "[", ":", ",", ":", "]", "/", "(", "1.0", "-", "w", "[", ":", ",", ":", "]", ")", ")", "-", "torch", ".", "log", "(", "-", "torch", ".", "log", "(", "U", ")", ")", ",", "dim", "=", "1", ")", "\n", "c_sample", "=", "torch", ".", "cat", "(", "[", "c", ".", "sample", "(", "X", ",", "n_sample", "=", "1", ")", "for", "c", "in", "self", ".", "components", "]", ",", "dim", "=", "0", ")", "\n", "res", "=", "c_sample", "[", "chosen", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.__init__": [[99, 110], ["nn.Module.__init__", "utils.utility.get_cuda_device", "mvae.MixtureGaussianNet", "mvae.GaussianNet", "mvae.MixtureGaussianNet"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "input_dim", ",", "output_dim", ",", "n_component", ",", "n_sample", "=", "10", ")", ":", "# previously, 100", "\n", "        ", "super", "(", "MixtureVAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "n_component", "=", "n_component", "\n", "self", ".", "n_sample", "=", "n_sample", "\n", "self", ".", "qz_x", "=", "MixtureGaussianNet", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "self", ".", "n_component", ",", "prior_bias", "=", "True", ")", "\n", "self", ".", "px_z", "=", "GaussianNet", "(", "self", ".", "output_dim", ",", "self", ".", "input_dim", ",", "bias", "=", "None", ")", "\n", "self", ".", "pz", "=", "MixtureGaussianNet", "(", "self", ".", "input_dim", ",", "self", ".", "output_dim", ",", "self", ".", "n_component", ",", "prior_bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.dsELBO": [[111, 146], ["mvae.MixtureVAE.qz_x.sample", "Z.reshape.reshape.reshape", "X.repeat", "mvae.MixtureVAE.qz_x", "mvae.MixtureVAE.px_z", "range", "torch.mean", "torch.mean", "torch.zeros().to", "range", "torch.sum", "np.log", "torch.sum", "qizx_mu.append", "qizx_log_var.append", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "print", "torch.logsumexp", "mvae.MixtureVAE.pz", "torch.sum", "mu.view", "var.view", "torch.zeros", "torch.sum", "torch.sum", "torch.exp", "torch.min", "elbo.item", "elbo_alpha.item", "elbo_beta.item", "elbo_gamma.item", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureGaussianNet.sample"], ["", "def", "dsELBO", "(", "self", ",", "X", ",", "alpha", "=", "8.0", ",", "beta", "=", "1.2", ",", "gamma", "=", "1.0", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "Z", "=", "self", ".", "qz_x", ".", "sample", "(", "X", ",", "n_sample", "=", "self", ".", "n_sample", ")", "# n_sample by X.shape[0] by output_dim", "\n", "Z", "=", "Z", ".", "reshape", "(", "self", ".", "n_sample", "*", "X", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "Xr", "=", "X", ".", "repeat", "(", "self", ".", "n_sample", ",", "1", ")", "\n", "\n", "qzx", "=", "self", ".", "qz_x", "(", "Z", ",", "Xr", ")", "\n", "log_qzx", "=", "torch", ".", "sum", "(", "qzx", ")", "/", "Xr", ".", "shape", "[", "0", "]", "\n", "log_qz", "=", "torch", ".", "logsumexp", "(", "qzx", ",", "dim", "=", "0", ")", "[", "0", "]", "-", "np", ".", "log", "(", "Xr", ".", "shape", "[", "0", "]", ")", "\n", "log_pz", "=", "torch", ".", "sum", "(", "self", ".", "pz", "(", "Z", ")", ")", "/", "Xr", ".", "shape", "[", "0", "]", "\n", "mu_pxz", ",", "var_pxz", "=", "self", ".", "px_z", "(", "Z", ")", "\n", "log_pxz", "=", "(", "-", "0.5", "*", "(", "torch", ".", "sum", "(", "(", "Xr", "-", "mu_pxz", ")", "**", "2", "*", "torch", ".", "exp", "(", "-", "2.0", "*", "var_pxz", ")", "+", "var_pxz", ")", ")", ")", "/", "Xr", ".", "shape", "[", "0", "]", "\n", "\n", "qizx_mu", "=", "[", "]", "\n", "qizx_log_var", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "self", ".", "n_component", ")", ":", "\n", "            ", "mu", ",", "var", "=", "self", ".", "qz_x", ".", "components", "[", "j", "]", "(", "X", ")", "\n", "qizx_mu", ".", "append", "(", "mu", ".", "view", "(", "1", ",", "mu", ".", "shape", "[", "0", "]", ",", "mu", ".", "shape", "[", "1", "]", ")", ")", "\n", "qizx_log_var", ".", "append", "(", "var", ".", "view", "(", "1", ",", "var", ".", "shape", "[", "0", "]", ",", "var", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n", "", "qczx_mu", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "qizx_mu", ")", ",", "dim", "=", "0", ")", "\n", "qczx_log_var", "=", "torch", ".", "mean", "(", "torch", ".", "cat", "(", "qizx_log_var", ")", ",", "dim", "=", "0", ")", "\n", "kl_separation", "=", "torch", ".", "zeros", "(", "self", ".", "n_component", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "n_component", ")", ":", "\n", "            ", "ld", "=", "torch", ".", "sum", "(", "qizx_log_var", "[", "j", "]", ")", "-", "torch", ".", "sum", "(", "qczx_log_var", ")", "\n", "tr", "=", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "qczx_log_var", "-", "qizx_log_var", "[", "j", "]", ")", ")", "\n", "qd", "=", "torch", ".", "sum", "(", "(", "qczx_mu", "-", "qizx_mu", "[", "j", "]", ")", "**", "2", "/", "torch", ".", "exp", "(", "-", "1.0", "*", "qczx_log_var", ")", ")", "\n", "kl_separation", "[", "j", "]", "=", "ld", "+", "tr", "+", "qd", "\n", "\n", "# ELBO components", "\n", "", "elbo", "=", "log_pxz", "\n", "elbo_alpha", "=", "log_qz", "-", "log_pz", "\n", "elbo_beta", "=", "log_qzx", "-", "log_pz", "\n", "elbo_gamma", "=", "0.5", "*", "torch", ".", "min", "(", "kl_separation", ")", "/", "X", ".", "shape", "[", "0", "]", "\n", "if", "verbose", ":", "print", "(", "elbo", ".", "item", "(", ")", ",", "elbo_alpha", ".", "item", "(", ")", ",", "elbo_beta", ".", "item", "(", ")", ",", "elbo_gamma", ".", "item", "(", ")", ")", "\n", "return", "elbo", "-", "beta", "*", "elbo_beta", "-", "alpha", "*", "elbo_alpha", "+", "gamma", "*", "elbo_gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.forward": [[147, 161], ["mvae.MixtureVAE.forward._forward"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ",", "encode", "=", "True", ",", "grad", "=", "True", ")", ":", "\n", "        ", "def", "_forward", "(", ")", ":", "\n", "            ", "if", "encode", "is", "True", ":", "\n", "                ", "res", "=", "self", ".", "qz_x", ".", "sample", "(", "data", ")", "\n", "return", "torch", ".", "mean", "(", "res", ",", "dim", "=", "0", ")", "# data.shape[0] by output_dim", "\n", "", "else", ":", "\n", "                ", "res", ",", "_", "=", "self", ".", "px_z", "(", "data", ")", "# data.shape[0] by input_dim", "\n", "return", "res", "\n", "\n", "", "", "if", "not", "grad", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "return", "_forward", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "_forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.train_dsvae": [[162, 176], ["opt.Adam", "range", "mvae.MixtureVAE.model.parameters", "print", "mvae.MixtureVAE.model.train", "opt.Adam.zero_grad", "mvae.MixtureVAE.dsELBO", "loss.backward", "opt.Adam.step", "torch.cuda.empty_cache", "X.to"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.dsELBO"], ["", "", "def", "train_dsvae", "(", "self", ",", "n_iter", "=", "100", ",", "alpha", "=", "8.0", ",", "beta", "=", "1.2", ",", "gamma", "=", "1.0", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "optimizer", "=", "opt", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "ave_loss", "=", "0.0", "\n", "for", "(", "X", ",", "_", ")", "in", "self", ".", "dataset", ":", "\n", "                ", "self", ".", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "delbo", "=", "self", ".", "dsELBO", "(", "X", ".", "to", "(", "self", ".", "device", ")", ",", "alpha", ",", "beta", ",", "gamma", ",", "verbose", "=", "verbose", ")", "\n", "loss", "=", "-", "delbo", "\n", "ave_loss", "+=", "loss", "/", "X", ".", "shape", "[", "0", "]", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "print", "(", "'Ave Loss='", ",", "ave_loss", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.VAEGP.__init__": [[9, 25], ["nn.Module.__init__", "get_cuda_device", "TensorDataset", "TensorDataset", "DataLoader", "DataLoader", "MixtureVAE", "experiments.Experiment.create_gp_object", "nn.ModuleList", "sum", "sum", "print", "vaegp.VAEGP.vae", "p.numel", "p.numel", "vaegp.VAEGP.vae.parameters", "vaegp.VAEGP.gp.parameters"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.create_gp_object"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "vae_cluster", "=", "8", ",", "embed_dim", "=", "4", ",", "gp_method", "=", "'vaegp_32'", ",", "batch_size", "=", "200", ")", ":", "\n", "        ", "super", "(", "VAEGP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "dataset", "=", "TensorDataset", "(", "train", "[", "'X'", "]", ",", "train", "[", "'Y'", "]", ")", "\n", "self", ".", "testset", "=", "TensorDataset", "(", "test", "[", "'X'", "]", ",", "test", "[", "'Y'", "]", ")", "\n", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "test", "=", "DataLoader", "(", "self", ".", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "vae", "=", "MixtureVAE", "(", "self", ".", "data", ",", "train", "[", "'X'", "]", ".", "shape", "[", "1", "]", ",", "embed_dim", ",", "vae_cluster", ",", "n_sample", "=", "5", ")", "\n", "self", ".", "original", "=", "train", "\n", "self", ".", "train", "=", "{", "'X'", ":", "self", ".", "vae", "(", "train", "[", "'X'", "]", ",", "grad", "=", "False", ")", ",", "'Y'", ":", "train", "[", "'Y'", "]", "}", "\n", "self", ".", "gp", "=", "Experiment", ".", "create_gp_object", "(", "self", ".", "original", ",", "gp_method", ")", "\n", "self", ".", "model", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "vae", ",", "self", ".", "gp", "]", ")", "\n", "self", ".", "history", "=", "[", "]", "\n", "self", ".", "vae_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "vae", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "self", ".", "gp_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "gp", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "print", "(", "'No. of parameters: VAE = {} -- GP = {}'", ".", "format", "(", "self", ".", "vae_params", ",", "self", ".", "gp_params", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.VAEGP.train_gp": [[26, 94], ["set_seed", "print", "opt.Adam", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event.record", "range", "vaegp.VAEGP.model.parameters", "X.to", "Y.to", "vaegp.VAEGP.vae", "vaegp.VAEGP.model.train", "opt.Adam.zero_grad", "vaegp.VAEGP.vae.dsELBO", "vaegp.VAEGP.gp.NLL", "loss.backward", "torch.nn.utils.clip_grad.clip_grad_value_", "opt.Adam.step", "torch.cuda.empty_cache", "torch.cuda.synchronize", "torch.cuda.Event.record", "torch.cuda.synchronize", "vaegp.VAEGP.history.append", "vaegp.VAEGP.vae", "vaegp.VAEGP.model.parameters", "torch.cuda.Event.record", "vaegp.VAEGP.vae", "torch.cat", "torch.cat", "rmse().item", "torch.cuda.Event.record", "torch.cuda.synchronize", "torch.cuda.Event.elapsed_time", "torch.cuda.empty_cache", "torch.cuda.Event.elapsed_time", "print", "batch_nll.item", "batch_elbo.item", "batch_loss.item", "vaegp.VAEGP.vae", "vaegp.VAEGP.vae", "vaegp.VAEGP.gp", "torch.cat.append", "torch.cat.append", "torch.cuda.empty_cache", "vaegp.VAEGP.vae", "rmse"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.set_seed", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.mvae.MixtureVAE.dsELBO", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.NLL", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.rmse"], ["", "def", "train_gp", "(", "self", ",", "seed", "=", "0", ",", "n_iter", "=", "100", ",", "n_epoch", "=", "50", ",", "lmbda", "=", "1.0", ",", "pred_interval", "=", "5", ",", "test", "=", "False", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "set_seed", "(", "seed", ")", "\n", "print", "(", "'SEED='", ",", "seed", ")", "\n", "optimizer", "=", "opt", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", "\n", "start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_time", "=", "0.0", "\n", "start", ".", "record", "(", ")", "\n", "for", "i", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "batch_nll", "=", "0.0", "\n", "batch_elbo", "=", "0.0", "\n", "batch_loss", "=", "0.0", "\n", "epoch", "=", "0", "\n", "for", "(", "X", ",", "Y", ")", "in", "self", ".", "data", ":", "\n", "                ", "if", "epoch", ">", "n_epoch", ":", "\n", "                    ", "break", "\n", "", "epoch", "+=", "1", "\n", "X", ".", "to", "(", "self", ".", "device", ")", "\n", "Y", ".", "to", "(", "self", ".", "device", ")", "\n", "Xa", "=", "self", ".", "vae", "(", "self", ".", "vae", "(", "X", ")", ",", "encode", "=", "False", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "delbo", "=", "self", ".", "vae", ".", "dsELBO", "(", "X", ",", "alpha", "=", "1.0", ",", "beta", "=", "1.0", ",", "gamma", "=", "1.0", ",", "verbose", "=", "False", ")", "\n", "nll", "=", "self", ".", "gp", ".", "NLL", "(", "Xa", ",", "Y", ")", "\n", "loss", "=", "-", "0.01", "*", "delbo", "+", "lmbda", "*", "nll", "\n", "batch_nll", "+=", "nll", "*", "X", ".", "shape", "[", "0", "]", "\n", "batch_elbo", "+=", "delbo", "*", "X", ".", "shape", "[", "0", "]", "\n", "batch_loss", "+=", "loss", "*", "X", ".", "shape", "[", "0", "]", "\n", "loss", ".", "backward", "(", ")", "\n", "clip_grad_value_", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "10", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "if", "i", "%", "pred_interval", "==", "0", ":", "\n", "                ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "record", "=", "{", "'iter'", ":", "i", ",", "\n", "'nll'", ":", "batch_nll", ".", "item", "(", ")", "/", "self", ".", "train", "[", "'X'", "]", ".", "shape", "[", "0", "]", ",", "\n", "'elbo'", ":", "batch_elbo", ".", "item", "(", ")", "/", "self", ".", "train", "[", "'X'", "]", ".", "shape", "[", "0", "]", ",", "\n", "'loss'", ":", "batch_loss", ".", "item", "(", ")", "/", "self", ".", "train", "[", "'X'", "]", ".", "shape", "[", "0", "]", ",", "\n", "}", "\n", "if", "test", ":", "\n", "                    ", "pred_start", ".", "record", "(", ")", "\n", "Ypred_full", "=", "[", "]", "\n", "Yt_full", "=", "[", "]", "\n", "Xr", "=", "self", ".", "vae", "(", "self", ".", "vae", "(", "self", ".", "original", "[", "'X'", "]", ",", "grad", "=", "False", ")", ",", "encode", "=", "False", ",", "grad", "=", "False", ")", "\n", "for", "(", "Xt", ",", "Yt", ")", "in", "self", ".", "test", ":", "\n", "                        ", "Xtr", "=", "self", ".", "vae", "(", "self", ".", "vae", "(", "Xt", ",", "grad", "=", "False", ")", ",", "encode", "=", "False", ",", "grad", "=", "False", ")", "\n", "Ypred", "=", "self", ".", "gp", "(", "Xtr", ",", "Xr", ",", "self", ".", "original", "[", "'Y'", "]", ",", "var", "=", "False", ")", "\n", "Ypred_full", ".", "append", "(", "Ypred", ")", "\n", "Yt_full", ".", "append", "(", "Yt", ")", "\n", "del", "Xtr", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "Ypred_full", "=", "torch", ".", "cat", "(", "Ypred_full", ")", "\n", "Yt_full", "=", "torch", ".", "cat", "(", "Yt_full", ")", "\n", "record", "[", "'rmse'", "]", "=", "rmse", "(", "Ypred_full", ",", "Yt_full", ")", ".", "item", "(", ")", "\n", "pred_end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "pred_time", "+=", "pred_start", ".", "elapsed_time", "(", "pred_end", ")", "\n", "del", "Xr", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "record", "[", "'time'", "]", "=", "start", ".", "elapsed_time", "(", "end", ")", "-", "pred_time", "\n", "if", "verbose", ":", "\n", "                    ", "print", "(", "record", ")", "\n", "", "self", ".", "history", ".", "append", "(", "record", ")", "\n", "", "", "return", "self", ".", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.VAEGP.forward": [[95, 97], ["vaegp.VAEGP.gp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "return", "self", ".", "gp", "(", "X", ",", "self", ".", "original", "[", "'X'", "]", ",", "self", ".", "original", "[", "'Y'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.GP_wrapper.__init__": [[99, 111], ["nn.Module.__init__", "get_cuda_device", "experiments.Experiment.create_gp_object", "TensorDataset", "TensorDataset", "DataLoader", "DataLoader", "nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.create_gp_object"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "test", ",", "gp_method", "=", "'ssgp_32'", ",", "batch_size", "=", "200", ")", ":", "\n", "        ", "super", "(", "GP_wrapper", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "gp_method", "=", "gp_method", "\n", "self", ".", "gp", "=", "Experiment", ".", "create_gp_object", "(", "self", ".", "train", ",", "self", ".", "gp_method", ")", "\n", "self", ".", "dataset", "=", "TensorDataset", "(", "self", ".", "train", "[", "'X'", "]", ",", "self", ".", "train", "[", "'Y'", "]", ")", "\n", "self", ".", "testset", "=", "TensorDataset", "(", "test", "[", "'X'", "]", ",", "test", "[", "'Y'", "]", ")", "\n", "self", ".", "data", "=", "DataLoader", "(", "self", ".", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "test", "=", "DataLoader", "(", "self", ".", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "self", ".", "model", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "gp", ".", "cov", ",", "self", ".", "gp", ".", "mean", "]", ")", "\n", "self", ".", "history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.GP_wrapper.train_gp": [[112, 164], ["set_seed", "print", "opt.Adam", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event.record", "range", "vaegp.GP_wrapper.model.parameters", "vaegp.GP_wrapper.model.train", "opt.Adam.zero_grad", "vaegp.GP_wrapper.gp.NLL", "vaegp.GP_wrapper.backward", "torch.nn.utils.clip_grad.clip_grad_value_", "opt.Adam.step", "torch.cuda.empty_cache", "torch.cuda.Event.record", "torch.cuda.synchronize", "vaegp.GP_wrapper.history.append", "vaegp.GP_wrapper.model.parameters", "torch.cuda.Event.record", "torch.cat", "torch.cat", "rmse().item", "torch.cuda.Event.record", "torch.cuda.synchronize", "torch.cuda.Event.elapsed_time", "torch.cuda.Event.elapsed_time", "print", "batch_nll.item", "torch.cat.append", "vaegp.GP_wrapper.gp", "torch.cat.append", "rmse"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.set_seed", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.NLL", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.rmse"], ["", "def", "train_gp", "(", "self", ",", "seed", "=", "0", ",", "n_iter", "=", "300", ",", "pred_interval", "=", "5", ",", "test", "=", "False", ",", "verbose", "=", "True", ",", "n_epoch", "=", "20", ")", ":", "\n", "        ", "set_seed", "(", "seed", ")", "\n", "print", "(", "'SEED='", ",", "seed", ")", "\n", "optimizer", "=", "opt", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", "\n", "start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "pred_time", "=", "0.0", "\n", "start", ".", "record", "(", ")", "\n", "for", "i", "in", "range", "(", "n_iter", ")", ":", "\n", "            ", "batch_nll", "=", "0.0", "\n", "epoch", "=", "0", "\n", "for", "(", "X", ",", "Y", ")", "in", "self", ".", "data", ":", "\n", "                ", "if", "epoch", ">", "n_epoch", ":", "\n", "                    ", "break", "\n", "", "epoch", "+=", "1", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "nll", "=", "self", ".", "gp", ".", "NLL", "(", "X", ",", "Y", ")", "\n", "batch_nll", "+=", "nll", "*", "X", ".", "shape", "[", "0", "]", "\n", "nll", ".", "backward", "(", ")", "\n", "clip_grad_value_", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "10", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "if", "i", "%", "pred_interval", "==", "0", ":", "\n", "                ", "record", "=", "{", "'nll'", ":", "batch_nll", ".", "item", "(", ")", "/", "self", ".", "train", "[", "'X'", "]", ".", "shape", "[", "0", "]", ",", "\n", "'iter'", ":", "i", "}", "\n", "if", "test", ":", "\n", "                    ", "pred_start", ".", "record", "(", ")", "\n", "Ypred_full", "=", "[", "]", "\n", "Yt_full", "=", "[", "]", "\n", "count", "=", "0", "\n", "for", "(", "Xt", ",", "Yt", ")", "in", "self", ".", "test", ":", "\n", "                        ", "count", "+=", "1", "\n", "Yt_full", ".", "append", "(", "Yt", ")", "\n", "Ypred", "=", "self", ".", "gp", "(", "Xt", ",", "self", ".", "train", "[", "'X'", "]", ",", "self", ".", "train", "[", "'Y'", "]", ",", "var", "=", "False", ")", "\n", "Ypred_full", ".", "append", "(", "Ypred", ")", "\n", "\n", "", "Ypred_full", "=", "torch", ".", "cat", "(", "Ypred_full", ")", "\n", "Yt_full", "=", "torch", ".", "cat", "(", "Yt_full", ")", "\n", "record", "[", "'rmse'", "]", "=", "rmse", "(", "Ypred_full", ",", "Yt_full", ")", ".", "item", "(", ")", "\n", "pred_end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "pred_time", "+=", "pred_start", ".", "elapsed_time", "(", "pred_end", ")", "\n", "", "end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "record", "[", "'time'", "]", "=", "start", ".", "elapsed_time", "(", "end", ")", "-", "pred_time", "\n", "if", "verbose", ":", "\n", "                    ", "print", "(", "record", ")", "\n", "", "self", ".", "history", ".", "append", "(", "record", ")", "\n", "", "", "return", "self", ".", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.vaegp.deploy": [[166, 197], ["os.path.isdir", "os.mkdir", "open", "experiments.Experiment.load_data", "dict", "np.random.randint", "pprint.pprint", "pprint.pprint", "f.flush", "range", "vaegp.VAEGP", "vaegp.VAEGP.train_gp", "torch.save", "vaegp.GP_wrapper", "vaegp.GP_wrapper.train_gp", "torch.save", "print", "traceback.print_exc", "torch.save", "print", "traceback.print_exc", "torch.save", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.load_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.train_gp", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.train_gp"], ["", "", "def", "deploy", "(", "num_seed", ",", "prefix", ",", "method", ",", "dataset", ",", "batch_size", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isdir", "(", "prefix", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "prefix", ")", "\n", "", "with", "open", "(", "prefix", "+", "method", "+", "'.res'", ",", "'w+'", ")", "as", "f", ":", "\n", "        ", "train", ",", "test", "=", "Experiment", ".", "load_data", "(", "dataset", ")", "\n", "seed", "=", "[", "np", ".", "random", ".", "randint", "(", "10000", ")", "for", "_", "in", "range", "(", "num_seed", ")", "]", "\n", "res", "=", "dict", "(", ")", "\n", "for", "s", "in", "seed", ":", "\n", "            ", "if", "'vaegp'", "in", "method", ":", "\n", "                ", "vaegp", "=", "VAEGP", "(", "train", ",", "test", ",", "gp_method", "=", "method", ",", "batch_size", "=", "batch_size", ")", "\n", "try", ":", "\n", "                    ", "res", "[", "s", "]", "=", "vaegp", ".", "train_gp", "(", "seed", "=", "s", ",", "n_iter", "=", "101", ",", "lmbda", "=", "1.0", ",", "pred_interval", "=", "10", ",", "test", "=", "True", ",", "verbose", "=", "True", ")", "\n", "torch", ".", "save", "(", "vaegp", ",", "prefix", "+", "str", "(", "s", ")", "+", "'_'", "+", "method", "+", "'.pth'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "print", "(", "e", ")", "\n", "traceback", ".", "print_exc", "(", ")", "\n", "res", "[", "s", "]", "=", "vaegp", ".", "history", "\n", "torch", ".", "save", "(", "vaegp", ",", "prefix", "+", "str", "(", "s", ")", "+", "'_'", "+", "method", "+", "'.pth'", ")", "\n", "", "", "else", ":", "\n", "                ", "try", ":", "\n", "                    ", "gp", "=", "GP_wrapper", "(", "train", ",", "test", ",", "gp_method", "=", "method", ",", "batch_size", "=", "batch_size", ")", "\n", "res", "[", "s", "]", "=", "gp", ".", "train_gp", "(", "seed", "=", "s", ",", "n_iter", "=", "101", ",", "pred_interval", "=", "10", ",", "test", "=", "True", ",", "verbose", "=", "True", ")", "\n", "torch", ".", "save", "(", "gp", ",", "prefix", "+", "str", "(", "s", ")", "+", "'_'", "+", "method", "+", "'.pth'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "print", "(", "e", ")", "\n", "traceback", ".", "print_exc", "(", ")", "\n", "res", "[", "s", "]", "=", "gp", ".", "history", "\n", "torch", ".", "save", "(", "gp", ",", "prefix", "+", "str", "(", "s", ")", "+", "'_'", "+", "method", "+", "'.pth'", ")", "\n", "", "", "pprint", "(", "s", ",", "f", ")", "\n", "pprint", "(", "res", "[", "s", "]", ",", "f", ")", "\n", "f", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.__init__": [[6, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", "=", "'abalone'", ",", "method", "=", "'full'", ",", "embedding", "=", "True", ",", "vae_model", "=", "None", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "method", "=", "method", "\n", "self", ".", "embedding", "=", "embedding", "\n", "self", ".", "vae", "=", "vae_model", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.train_gp": [[12, 45], ["nn.ModuleList", "opt.Adam", "range", "nn.ModuleList.parameters", "nn.ModuleList.train", "opt.Adam.zero_grad", "gp_obj.NLL", "gp_obj", "rmse", "gp_obj.NLL.backward", "opt.Adam.step", "torch.cuda.empty_cache", "gp_obj.cov", "gp_obj", "error.append", "nll.append", "idx.append", "print", "rmse", "gp_obj.NLL.item"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.NLL", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.rmse", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.rmse"], ["", "@", "staticmethod", "\n", "def", "train_gp", "(", "gp_obj", ",", "test", ",", "n_iter", "=", "500", ",", "record_interval", "=", "10", ")", ":", "\n", "        ", "idx", "=", "[", "]", "\n", "nll", "=", "[", "]", "\n", "error", "=", "[", "]", "\n", "model", "=", "nn", ".", "ModuleList", "(", "[", "gp_obj", ".", "cov", ",", "gp_obj", ".", "mean", "]", ")", "\n", "optimizer", "=", "opt", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "n_iter", "+", "1", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "gp_obj", ".", "NLL", "(", ")", "\n", "if", "i", "<", "n_iter", "+", "1", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "if", "record_interval", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "\n", "", "elif", "(", "i", "+", "1", ")", "%", "record_interval", "==", "0", ":", "\n", "                ", "ypred", ",", "yvar", "=", "gp_obj", "(", "test", "[", "'X'", "]", ")", "\n", "error", ".", "append", "(", "rmse", "(", "ypred", ",", "test", "[", "'Y'", "]", ")", ")", "\n", "nll", ".", "append", "(", "loss", ".", "item", "(", ")", ")", "\n", "idx", ".", "append", "(", "i", "+", "1", ")", "\n", "print", "(", "'Training Iteration'", ",", "i", "+", "1", ",", "'rmse:'", ",", "error", "[", "-", "1", "]", ",", "'nll:'", ",", "nll", "[", "-", "1", "]", ")", "\n", "\n", "", "", "if", "record_interval", "==", "-", "1", ":", "\n", "            ", "ypred", ",", "yvar", "=", "gp_obj", "(", "test", "[", "'X'", "]", ")", "\n", "return", "rmse", "(", "ypred", ",", "test", "[", "'Y'", "]", ")", "\n", "", "if", "record_interval", "==", "-", "2", ":", "\n", "            ", "return", "gp_obj", ".", "cov", "(", "gp_obj", ".", "data", "[", "'X'", "]", ")", ",", "gp_obj", ".", "cov", ".", "weights", "\n", "", "else", ":", "\n", "            ", "return", "error", ",", "nll", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.load_data": [[46, 81], ["abalone_data", "abalone_data", "gas_sensor_data", "torch.randperm", "torch.randperm", "full_test[].size", "full_train[].size", "gas_sensor_data", "torch.randperm", "torch.randperm", "full_test[].size", "full_train[].size", "gas_sensor_data"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.abalone_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.abalone_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.gas_sensor_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.gas_sensor_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.gas_sensor_data"], ["", "", "@", "staticmethod", "\n", "def", "load_data", "(", "dataset", ")", ":", "\n", "        ", "train", "=", "None", "\n", "test", "=", "None", "\n", "if", "dataset", "==", "'abalone'", ":", "\n", "            ", "train", ",", "n_train", "=", "abalone_data", "(", "is_train", "=", "True", ")", "\n", "test", ",", "n_test", "=", "abalone_data", "(", "is_train", "=", "False", ")", "\n", "\n", "", "elif", "dataset", "==", "'gas500'", ":", "\n", "            ", "full_train", ",", "full_test", "=", "gas_sensor_data", "(", "is_preload", "=", "True", ")", "\n", "p1", "=", "torch", ".", "randperm", "(", "full_test", "[", "'X'", "]", ".", "size", "(", "0", ")", ")", "\n", "idx_test", "=", "p1", "[", ":", "25000", "]", "\n", "test", "=", "{", "'X'", ":", "full_test", "[", "'X'", "]", "[", "idx_test", "]", ",", "\n", "'Y'", ":", "full_test", "[", "'Y'", "]", "[", "idx_test", "]", "\n", "}", "\n", "p2", "=", "torch", ".", "randperm", "(", "full_train", "[", "'X'", "]", ".", "size", "(", "0", ")", ")", "\n", "idx_train", "=", "p2", "[", ":", "500000", "]", "\n", "train", "=", "{", "'X'", ":", "full_train", "[", "'X'", "]", "[", "idx_train", "]", ",", "\n", "'Y'", ":", "full_train", "[", "'Y'", "]", "[", "idx_train", "]", "\n", "}", "\n", "", "elif", "dataset", "==", "'gas10'", ":", "\n", "            ", "full_train", ",", "full_test", "=", "gas_sensor_data", "(", "is_preload", "=", "True", ")", "\n", "p1", "=", "torch", ".", "randperm", "(", "full_test", "[", "'X'", "]", ".", "size", "(", "0", ")", ")", "\n", "idx_test", "=", "p1", "[", ":", "500", "]", "\n", "test", "=", "{", "'X'", ":", "full_test", "[", "'X'", "]", "[", "idx_test", "]", ",", "\n", "'Y'", ":", "full_test", "[", "'Y'", "]", "[", "idx_test", "]", "\n", "}", "\n", "p2", "=", "torch", ".", "randperm", "(", "full_train", "[", "'X'", "]", ".", "size", "(", "0", ")", ")", "\n", "idx_train", "=", "p2", "[", ":", "10000", "]", "\n", "train", "=", "{", "'X'", ":", "full_train", "[", "'X'", "]", "[", "idx_train", "]", ",", "\n", "'Y'", ":", "full_train", "[", "'Y'", "]", "[", "idx_train", "]", "\n", "}", "\n", "", "elif", "dataset", "==", "'gas'", ":", "\n", "            ", "train", ",", "test", "=", "gas_sensor_data", "(", "is_preload", "=", "True", ")", "\n", "", "return", "train", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.cluster_data": [[82, 102], ["dt", "KMeans().fit", "range", "range", "range", "[].append", "KMeans"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.dt"], ["", "@", "staticmethod", "\n", "def", "cluster_data", "(", "data", ",", "k", "=", "10", ")", ":", "\n", "        ", "X", "=", "dt", "(", "data", "[", "'X'", "]", ")", "\n", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "k", ",", "random_state", "=", "0", ")", ".", "fit", "(", "X", ")", "\n", "cluster", "=", "{", "'k'", ":", "k", ",", "\n", "'label'", ":", "kmeans", ".", "labels_", ",", "\n", "'centroids'", ":", "kmeans", ".", "cluster_centers_", ",", "\n", "}", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "            ", "cluster", "[", "i", "]", "=", "{", "'idx'", ":", "[", "]", "}", "\n", "\n", "", "for", "i", "in", "range", "(", "X", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cid", "=", "cluster", "[", "'label'", "]", "[", "i", "]", "\n", "cluster", "[", "cid", "]", "[", "'idx'", "]", ".", "append", "(", "i", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "            ", "cluster", "[", "i", "]", "[", "'X'", "]", "=", "data", "[", "'X'", "]", "[", "cluster", "[", "i", "]", "[", "'idx'", "]", "]", "\n", "cluster", "[", "i", "]", "[", "'Y'", "]", "=", "data", "[", "'Y'", "]", "[", "cluster", "[", "i", "]", "[", "'idx'", "]", "]", "\n", "\n", "", "return", "cluster", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.create_gp_object": [[103, 113], ["int", "gps.ssgp.SSGP", "gps.fgp.FGP", "method.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "create_gp_object", "(", "train", ",", "method", ")", ":", "\n", "        ", "if", "(", "'ssgp'", "in", "method", ")", "or", "(", "'vaegp'", "in", "method", ")", ":", "\n", "            ", "n_eps", "=", "int", "(", "method", ".", "split", "(", "'_'", ")", "[", "1", "]", ")", "\n", "ssgp", "=", "SSGP", "(", "train", "[", "'X'", "]", ".", "shape", "[", "1", "]", ",", "n_eps", ")", "\n", "return", "ssgp", "\n", "\n", "", "elif", "'full'", "in", "method", ":", "\n", "            ", "fgp", "=", "FGP", "(", "train", "[", "'X'", "]", ".", "shape", "[", "1", "]", ")", "\n", "return", "fgp", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.embedding_plot.cluster_coloring": [[7, 24], ["KMeans().fit", "range", "range", "plt.figure", "range", "plt.savefig", "clusters_x.append", "clusters_y.append", "clusters_x[].append", "clusters_y[].append", "plt.scatter", "KMeans"], "function", ["None"], ["def", "cluster_coloring", "(", "X", ",", "savename", ",", "k", "=", "8", ")", ":", "\n", "    ", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "k", ",", "random_state", "=", "0", ")", ".", "fit", "(", "X", ")", "\n", "clusters_x", "=", "[", "]", "\n", "clusters_y", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "clusters_x", ".", "append", "(", "[", "]", ")", "\n", "clusters_y", ".", "append", "(", "[", "]", ")", "\n", "", "for", "i", "in", "range", "(", "X", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "clusters_x", "[", "kmeans", ".", "labels_", "[", "i", "]", "]", ".", "append", "(", "X", "[", "i", "]", "[", "0", "]", ")", "\n", "clusters_y", "[", "kmeans", ".", "labels_", "[", "i", "]", "]", ".", "append", "(", "X", "[", "i", "]", "[", "1", "]", ")", "\n", "\n", "", "color", "=", "[", "'red'", ",", "'blue'", ",", "'green'", ",", "'navy'", ",", "'turquoise'", ",", "'darkorange'", ",", "'black'", ",", "'purple'", "]", "\n", "\n", "plt", ".", "figure", "(", ")", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "plt", ".", "scatter", "(", "clusters_x", "[", "i", "]", ",", "clusters_y", "[", "i", "]", ",", "color", "=", "color", "[", "i", "]", ")", "\n", "", "plt", ".", "savefig", "(", "savename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.embedding_plot.main": [[26, 43], ["torch.load", "experiments.Experiment.load_data", "utils.utility.dt", "utils.utility.dt", "sklearn.manifold.TSNE().fit_transform", "sklearn.manifold.TSNE().fit_transform", "embedding_plot.cluster_coloring", "embedding_plot.cluster_coloring", "torch.load.vae", "print", "utils.utility.get_cuda_device", "torch.load.vae", "sklearn.manifold.TSNE", "sklearn.manifold.TSNE"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.experiments.Experiment.load_data", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.dt", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.dt", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.embedding_plot.cluster_coloring", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.None.embedding_plot.cluster_coloring", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["", "def", "main", "(", ")", ":", "\n", "    ", "prefix", "=", "'./results_to_be_processed/gas10/'", "\n", "seed", "=", "[", "'108'", ",", "'263'", ",", "'411'", ",", "'807'", ",", "'2010'", "]", "\n", "samp", "=", "[", "'16'", ",", "'64'", ",", "'128'", "]", "\n", "for", "s", "in", "seed", ":", "\n", "        ", "for", "p", "in", "samp", ":", "\n", "            ", "try", ":", "\n", "                ", "vaegp", "=", "torch", ".", "load", "(", "prefix", "+", "s", "+", "'_vaegp_'", "+", "p", "+", "'.pth'", ",", "map_location", "=", "get_cuda_device", "(", ")", ")", "\n", "train", ",", "test", "=", "Experiment", ".", "load_data", "(", "'gas10'", ")", "\n", "Xr", "=", "dt", "(", "vaegp", ".", "vae", "(", "vaegp", ".", "vae", "(", "train", "[", "'X'", "]", ",", "grad", "=", "False", ")", ",", "encode", "=", "False", ",", "grad", "=", "False", ")", ")", "\n", "X", "=", "dt", "(", "train", "[", "'X'", "]", ")", "\n", "Xre", "=", "TSNE", "(", "n_components", "=", "2", ")", ".", "fit_transform", "(", "Xr", ")", "\n", "Xe", "=", "TSNE", "(", "n_components", "=", "2", ")", ".", "fit_transform", "(", "X", ")", "\n", "cluster_coloring", "(", "Xe", ",", "'./cluster_visualization/'", "+", "s", "+", "'_'", "+", "p", "+", "'embed_visual_original.png'", ")", "\n", "cluster_coloring", "(", "Xre", ",", "'./cluster_visualization/'", "+", "s", "+", "'_'", "+", "p", "+", "'embed_visual_reconstruct.png'", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "print", "(", "e", ",", "s", ",", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.generate_data": [[22, 32], ["utility.get_cuda_device", "dict", "dict", "ts().to", "ts().to", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "ts().to", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "utility.ts", "utility.ts", "utility.ts", "numpy.random.random", "numpy.random.random", "numpy.random.random"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts"], ["def", "generate_data", "(", "n_data", ",", "n_test", ",", "n_dim", ")", ":", "\n", "    ", "device", "=", "get_cuda_device", "(", ")", "\n", "data", "=", "dict", "(", ")", "\n", "test", "=", "dict", "(", ")", "\n", "A", "=", "ts", "(", "np", ".", "random", ".", "random", "(", "(", "n_dim", ",", "1", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "data", "[", "'X'", "]", "=", "ts", "(", "np", ".", "random", ".", "random", "(", "(", "n_data", ",", "n_dim", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "data", "[", "'Y'", "]", "=", "torch", ".", "mm", "(", "data", "[", "'X'", "]", ",", "A", ")", "\n", "test", "[", "'X'", "]", "=", "ts", "(", "np", ".", "random", ".", "random", "(", "(", "n_test", ",", "n_dim", ")", ")", ")", ".", "to", "(", "device", ")", "\n", "test", "[", "'Y'", "]", "=", "torch", ".", "mm", "(", "test", "[", "'X'", "]", ",", "A", ")", "\n", "return", "data", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.abalone_data": [[34, 63], ["utility.get_cuda_device", "numpy.array", "numpy.array", "y.reshape.reshape", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.std", "torch.std", "torch.std", "torch.std", "open", "len", "len", "line.strip().split.strip().split", "float", "np.array.append", "y.reshape.append", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().to.float", "torch.from_numpy().to.float", "float", "line.strip().split.strip"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["", "def", "abalone_data", "(", "is_train", "=", "True", ")", ":", "\n", "    ", "tail", "=", "'train'", "if", "is_train", "else", "'test'", "\n", "datapath", "=", "'./data/abalone/abalone.{}'", ".", "format", "(", "tail", ")", "\n", "device", "=", "get_cuda_device", "(", ")", "\n", "X", ",", "y", "=", "[", "]", ",", "[", "]", "\n", "\n", "with", "open", "(", "datapath", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "# convert a line to numbers", "\n", "if", "line", "[", "0", "]", "==", "'M'", ":", "line", "[", "0", "]", "=", "1", "\n", "elif", "line", "[", "0", "]", "==", "'F'", ":", "line", "[", "0", "]", "=", "2", "\n", "else", ":", "line", "[", "0", "]", "=", "3", "\n", "data", "=", "[", "float", "(", "x", ")", "for", "x", "in", "line", "[", ":", "-", "1", "]", "]", "\n", "target", "=", "float", "(", "line", "[", "-", "1", "]", ")", "\n", "target", "=", "target", "-", "1", "if", "target", "!=", "29", "else", "(", "target", "-", "2", ")", "# index form 0", "\n", "X", ".", "append", "(", "data", ")", "\n", "y", ".", "append", "(", "target", ")", "\n", "\n", "", "", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "y", "=", "np", ".", "array", "(", "y", ")", "\n", "y", "=", "y", ".", "reshape", "(", "len", "(", "y", ")", ",", "1", ")", "\n", "\n", "x_tensor", "=", "torch", ".", "from_numpy", "(", "X", ")", ".", "to", "(", "device", ")", "\n", "y_tensor", "=", "torch", ".", "from_numpy", "(", "y", ")", ".", "to", "(", "device", ")", "\n", "xmean", "=", "torch", ".", "mean", "(", "x_tensor", ",", "dim", "=", "0", ")", "\n", "xstd", "=", "torch", ".", "std", "(", "x_tensor", ",", "dim", "=", "0", ")", "\n", "x_tensor", "=", "(", "x_tensor", "-", "xmean", ")", "/", "xstd", "\n", "return", "{", "'X'", ":", "x_tensor", ".", "float", "(", ")", ",", "'Y'", ":", "y_tensor", ".", "float", "(", ")", "}", ",", "len", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.diabetes_data": [[65, 81], ["utility.get_cuda_device", "sklearn.datasets.load_diabetes", "numpy.split", "numpy.split", "dict", "ts().float().to", "ts().float().to", "ts().float().to", "ts().float().to", "ts().float", "ts().float", "ts().float", "ts().float", "utility.ts", "utility.ts", "utility.ts", "utility.ts", "y[].reshape", "y[].reshape"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts"], ["", "def", "diabetes_data", "(", "is_train", "=", "True", ",", "n_train", "=", "392", ",", "n_test", "=", "50", ")", ":", "\n", "    ", "device", "=", "get_cuda_device", "(", ")", "\n", "x", ",", "y", "=", "datasets", ".", "load_diabetes", "(", "return_X_y", "=", "True", ")", "\n", "\n", "x", "=", "np", ".", "split", "(", "x", ",", "[", "n_train", ",", "n_train", "+", "n_test", "]", ")", "\n", "y", "=", "np", ".", "split", "(", "y", ",", "[", "n_train", ",", "n_train", "+", "n_test", "]", ")", "\n", "\n", "data", "=", "dict", "(", ")", "\n", "data", "[", "'dim'", "]", "=", "x", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "data", "[", "'train'", "]", "=", "{", "'X'", ":", "ts", "(", "x", "[", "0", "]", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", ",", "'Y'", ":", "ts", "(", "y", "[", "0", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "}", "\n", "data", "[", "'test'", "]", "=", "{", "'X'", ":", "ts", "(", "x", "[", "1", "]", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", ",", "'Y'", ":", "ts", "(", "y", "[", "1", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "}", "\n", "\n", "if", "is_train", ":", "\n", "        ", "return", "data", "[", "'train'", "]", ",", "n_train", "\n", "", "else", ":", "\n", "        ", "return", "data", "[", "'test'", "]", ",", "n_test", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.gas_sensor_data": [[83, 116], ["utility.get_cuda_device", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "torch.from_numpy().reshape().to().float", "print", "numpy.vstack", "len", "int", "numpy.save", "numpy.save", "numpy.load", "numpy.load", "os.path.join", "numpy.genfromtxt", "numpy.std", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "torch.from_numpy().reshape().to", "os.listdir", "numpy.mean", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy().reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["", "", "def", "gas_sensor_data", "(", "datapath", "=", "'./data/gas-sensor'", ",", "pct_train", "=", "0.8", ",", "is_preload", "=", "True", ")", ":", "\n", "    ", "if", "not", "is_preload", ":", "\n", "        ", "file_list", "=", "[", "os", ".", "path", ".", "join", "(", "datapath", ",", "x", ")", "\n", "for", "x", "in", "os", ".", "listdir", "(", "datapath", ")", "if", "x", "!=", "'README.txt'", "]", "\n", "print", "(", "file_list", ")", "\n", "data_list", "=", "[", "genfromtxt", "(", "l", ",", "skip_header", "=", "1", ",", "delimiter", "=", "','", ")", "for", "l", "in", "file_list", "]", "\n", "normed_data", "=", "np", ".", "vstack", "(", "data_list", ")", "\n", "# skip first col", "\n", "normed_data", "=", "normed_data", "[", ":", ",", "1", ":", "]", "\n", "# normalization - column based", "\n", "normed_data", "=", "(", "normed_data", "-", "mean", "(", "normed_data", ",", "0", ")", ")", "/", "std", "(", "normed_data", ",", "0", ")", "\n", "\n", "# split train and test", "\n", "len_data", "=", "len", "(", "normed_data", ")", "\n", "test_idx", "=", "int", "(", "len_data", "*", "pct_train", ")", "\n", "\n", "data_np", "=", "normed_data", "[", ":", "test_idx", "]", "\n", "test_np", "=", "normed_data", "[", "test_idx", ":", "]", "\n", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datapath", ",", "'data_np.npy'", ")", ",", "data_np", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datapath", ",", "'test_np.npy'", ")", ",", "test_np", ")", "\n", "", "else", ":", "\n", "        ", "data_np", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "datapath", ",", "'data_np.npy'", ")", ")", "\n", "test_np", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "datapath", ",", "'test_np.npy'", ")", ")", "\n", "\n", "", "data", ",", "test", "=", "{", "}", ",", "{", "}", "\n", "device", "=", "get_cuda_device", "(", ")", "\n", "data", "[", "'X'", "]", "=", "torch", ".", "from_numpy", "(", "data_np", "[", ":", ",", "1", ":", "]", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "data", "[", "'Y'", "]", "=", "torch", ".", "from_numpy", "(", "data_np", "[", ":", ",", "0", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "test", "[", "'X'", "]", "=", "torch", ".", "from_numpy", "(", "test_np", "[", ":", ",", "1", ":", "]", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "test", "[", "'Y'", "]", "=", "torch", ".", "from_numpy", "(", "test_np", "[", ":", ",", "0", "]", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", ".", "to", "(", "device", ")", ".", "float", "(", ")", "\n", "\n", "return", "data", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.sample_rows": [[118, 125], ["range", "numpy.random.random", "selected.append"], "function", ["None"], ["", "def", "sample_rows", "(", "prob", ",", "n_rows", ")", ":", "\n", "    ", "selected", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_rows", ")", ":", "\n", "        ", "p", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "if", "p", "<", "prob", "[", "i", "]", ":", "\n", "            ", "selected", ".", "append", "(", "i", ")", "\n", "", "", "return", "selected", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.rmse": [[127, 130], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "Y1.float", "Y2.float", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "diff.view", "diff.view"], "function", ["None"], ["", "def", "rmse", "(", "Y1", ",", "Y2", ")", ":", "\n", "    ", "diff", "=", "Y1", ".", "float", "(", ")", "-", "Y2", ".", "float", "(", ")", "\n", "return", "torch", ".", "sqrt", "(", "torch", ".", "dot", "(", "diff", ".", "view", "(", "-", "1", ")", ",", "diff", ".", "view", "(", "-", "1", ")", ")", "/", "diff", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.nll_test": [[132, 135], ["torch.distributions.MultivariateNormal", "torch.distributions.MultivariateNormal", "torch.distributions.MultivariateNormal", "torch.distributions.MultivariateNormal", "pred.view", "torch.distributions.MultivariateNormal.log_prob", "truth.view"], "function", ["None"], ["", "def", "nll_test", "(", "pred", ",", "var", ",", "truth", ")", ":", "\n", "    ", "m", "=", "torch", ".", "distributions", ".", "MultivariateNormal", "(", "pred", ".", "view", "(", "-", "1", ")", ",", "var", ")", "\n", "return", "-", "1.0", "*", "m", ".", "log_prob", "(", "truth", ".", "view", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.ts": [[137, 139], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "ts", "(", "X", ")", ":", "\n", "    ", "return", "torch", ".", "tensor", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.dt": [[141, 143], ["X.detach().cpu().numpy", "X.detach().cpu", "X.detach"], "function", ["None"], ["", "def", "dt", "(", "X", ")", ":", "\n", "    ", "return", "X", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device": [[145, 147], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "function", ["None"], ["", "def", "get_cuda_device", "(", ")", ":", "\n", "    ", "return", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "# set device", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.set_seed": [[149, 156], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch_seed", "=", "seed", "\n", "np_seed", "=", "seed", "\n", "np", ".", "random", ".", "seed", "(", "np_seed", ")", "\n", "torch", ".", "manual_seed", "(", "torch_seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_gpu_memory_map": [[158, 176], ["subprocess.check_output", "dict", "pprint.pprint", "int", "zip", "subprocess.check_output.strip().split", "range", "len", "subprocess.check_output.strip"], "function", ["None"], ["", "def", "get_gpu_memory_map", "(", ")", ":", "\n", "    ", "\"\"\"Get the current gpu usage.\n\n    Returns\n    -------\n    usage: dict\n        Keys are device ids as integers.\n        Values are memory usage as integers in MB.\n    \"\"\"", "\n", "result", "=", "subprocess", ".", "check_output", "(", "\n", "[", "\n", "'nvidia-smi'", ",", "'--query-gpu=memory.used'", ",", "\n", "'--format=csv,nounits,noheader'", "\n", "]", ",", "encoding", "=", "'utf-8'", ")", "\n", "# Convert lines into a dictionary", "\n", "gpu_memory", "=", "[", "int", "(", "x", ")", "for", "x", "in", "result", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "]", "\n", "gpu_memory_map", "=", "dict", "(", "zip", "(", "range", "(", "len", "(", "gpu_memory", ")", ")", ",", "gpu_memory", ")", ")", "\n", "pprint", "(", "gpu_memory_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.CovFunction.__init__": [[5, 18], ["nn.Module.__init__", "get_cuda_device", "nn.Parameter", "nn.Parameter", "nn.Parameter", "nn.Parameter", "torch.tensor().to", "torch.tensor().to", "torch.tensor", "torch.tensor", "np.random.randn"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "n_dim", ",", "c", "=", "None", ",", "ls", "=", "None", ",", "sig_opt", "=", "False", ",", "scale_opt", "=", "True", ")", ":", "\n", "        ", "super", "(", "CovFunction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_dim", "=", "n_dim", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "if", "ls", "is", "None", ":", "\n", "            ", "self", ".", "weights", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "np", ".", "random", ".", "randn", "(", "self", ".", "n_dim", ",", "1", ")", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "requires_grad", "=", "scale_opt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weights", "=", "nn", ".", "Parameter", "(", "ls", ",", "requires_grad", "=", "scale_opt", ")", "\n", "", "if", "c", "is", "None", ":", "\n", "            ", "self", ".", "sn", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "self", ".", "device", ")", ",", "requires_grad", "=", "sig_opt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sn", "=", "nn", ".", "Parameter", "(", "c", ",", "requires_grad", "=", "sig_opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.CovFunction.forward": [[19, 29], ["torch.exp().float().view", "torch.sum().reshape", "U.size", "V.size", "torch.sum", "torch.exp", "torch.exp", "len", "len", "torch.exp().float", "torch.sum", "torch.mm", "U.size", "V.size", "torch.exp", "torch.sum().reshape.float", "b.float"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "U", ",", "V", "=", "None", ")", ":", "\n", "        ", "if", "V", "is", "None", ":", "\n", "            ", "V", "=", "U", "\n", "", "assert", "(", "len", "(", "U", ".", "size", "(", ")", ")", "==", "2", ")", "and", "(", "len", "(", "V", ".", "size", "(", ")", ")", "==", "2", ")", ",", "\"Input matrices must be 2D\"", "\n", "assert", "U", ".", "size", "(", "1", ")", "==", "V", ".", "size", "(", "1", ")", ",", "\"Input matrices must agree on the second dimension\"", "\n", "scales", "=", "torch", ".", "exp", "(", "-", "1.0", "*", "self", ".", "weights", ")", ".", "float", "(", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "a", "=", "torch", ".", "sum", "(", "(", "U", "*", "scales", ")", "**", "2", ",", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "b", "=", "torch", ".", "sum", "(", "(", "V", "*", "scales", ")", "**", "2", ",", "1", ")", "-", "2", "*", "torch", ".", "mm", "(", "(", "U", "*", "scales", ")", ",", "(", "V", "*", "scales", ")", ".", "t", "(", ")", ")", "\n", "res", "=", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "sn", ")", "*", "torch", ".", "exp", "(", "-", "0.5", "*", "(", "a", ".", "float", "(", ")", "+", "b", ".", "float", "(", ")", ")", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.__init__": [[32, 42], ["kernel.CovFunction.__init__", "torch.rand().to", "torch.rand", "int"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_dim", ",", "eps", "=", "None", ",", "n_eps", "=", "100", ",", "c", "=", "None", ",", "ls", "=", "None", ")", ":", "\n", "        ", "super", "(", "SpectralCov", ",", "self", ")", ".", "__init__", "(", "n_dim", ",", "c", ",", "ls", ")", "\n", "if", "eps", "is", "None", ":", "\n", "            ", "if", "n_eps", "==", "0", ":", "\n", "                ", "n_eps", "=", "100", "\n", "", "self", ".", "n_eps", "=", "n_eps", "\n", "self", ".", "eps", "=", "torch", ".", "rand", "(", "(", "n_dim", ",", "int", "(", "n_eps", ")", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "n_eps", "=", "eps", ".", "shape", "[", "1", "]", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi": [[43, 50], ["torch.exp", "np.sqrt", "kernel.SpectralCov.weights.view", "torch.cat", "torch.exp", "torch.cos", "torch.sin", "torch.mm", "torch.mm", "torch.exp.float", "torch.exp.float"], "methods", ["None"], ["", "", "def", "phi", "(", "self", ",", "X", ")", ":", "\n", "        ", "diag", "=", "torch", ".", "exp", "(", "-", "0.5", "*", "self", ".", "weights", ".", "view", "(", "1", ",", "-", "1", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "torch", ".", "cos", "(", "torch", ".", "mm", "(", "X", "*", "diag", ".", "float", "(", ")", ",", "self", ".", "eps", ")", ")", ",", "\n", "torch", ".", "sin", "(", "torch", ".", "mm", "(", "X", "*", "diag", ".", "float", "(", ")", ",", "self", ".", "eps", ")", ")", "]", ",", "\n", "dim", "=", "1", "\n", ")", "*", "torch", ".", "exp", "(", "self", ".", "sn", ")", "/", "np", ".", "sqrt", "(", "self", ".", "n_eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.forward": [[51, 58], ["kernel.SpectralCov.phi", "torch.mm", "kernel.SpectralCov.phi", "torch.mm", "kernel.SpectralCov.t", "kernel.SpectralCov.t"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi"], ["", "def", "forward", "(", "self", ",", "U", ",", "V", "=", "None", ")", ":", "\n", "        ", "pu", "=", "self", ".", "phi", "(", "U", ")", "\n", "if", "V", "is", "None", ":", "\n", "            ", "return", "torch", ".", "mm", "(", "pu", ",", "pu", ".", "t", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "pv", "=", "self", ".", "phi", "(", "V", ")", "\n", "return", "torch", ".", "mm", "(", "pu", ",", "pv", ".", "t", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.MeanFunction.__init__": [[61, 68], ["nn.Module.__init__", "get_cuda_device", "nn.Parameter", "nn.Parameter", "torch.tensor().to", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "None", ",", "mean_opt", "=", "True", ")", ":", "\n", "        ", "super", "(", "MeanFunction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "if", "c", "is", "None", ":", "\n", "            ", "self", ".", "mean", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "self", ".", "device", ")", ",", "requires_grad", "=", "mean_opt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mean", "=", "nn", ".", "Parameter", "(", "c", ",", "requires_grad", "=", "mean_opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.MeanFunction.forward": [[69, 73], ["U.size", "len", "torch.ones().to", "U.size", "torch.ones"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "U", ")", ":", "\n", "        ", "assert", "len", "(", "U", ".", "size", "(", ")", ")", "==", "2", ",", "\"Input matrix must be 2D\"", "\n", "n", "=", "U", ".", "size", "(", "0", ")", "\n", "return", "torch", ".", "ones", "(", "n", ",", "1", ")", ".", "to", "(", "self", ".", "device", ")", "*", "self", ".", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.LikFunction.__init__": [[76, 83], ["nn.Module.__init__", "get_cuda_device", "nn.Parameter", "nn.Parameter", "torch.tensor().to", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "None", ",", "noise_opt", "=", "True", ")", ":", "\n", "        ", "super", "(", "LikFunction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "if", "c", "is", "None", ":", "\n", "            ", "self", ".", "noise", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "0.0", ")", ".", "to", "(", "self", ".", "device", ")", ",", "requires_grad", "=", "noise_opt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "noise", "=", "nn", ".", "Parameter", "(", "c", ",", "requires_grad", "=", "noise_opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.LikFunction.forward": [[84, 92], ["o.size", "o.size", "len", "len", "o.size", "x.size", "o.size", "x.size", "torch.trace", "o.size", "o.size", "torch.log", "torch.exp", "torch.mm", "torch.tensor().to", "diff.t", "torch.tensor"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "o", ",", "x", ")", ":", "\n", "        ", "assert", "(", "len", "(", "o", ".", "size", "(", ")", ")", "==", "2", ")", "and", "(", "len", "(", "o", ".", "size", "(", ")", ")", "==", "2", ")", ",", "\"Input matrices must be 2D\"", "\n", "assert", "(", "o", ".", "size", "(", "0", ")", "==", "x", ".", "size", "(", "0", ")", ")", "and", "(", "o", ".", "size", "(", "1", ")", "==", "x", ".", "size", "(", "1", ")", ")", ",", "\"Input matrices are supposed to be of the same size\"", "\n", "diff", "=", "o", "-", "x", "\n", "n", ",", "d", "=", "o", ".", "size", "(", "0", ")", ",", "o", ".", "size", "(", "1", ")", "\n", "res", "=", "-", "0.5", "*", "n", "*", "d", "*", "torch", ".", "log", "(", "torch", ".", "tensor", "(", "2", "*", "np", ".", "pi", ")", ".", "to", "(", "self", ".", "device", ")", ")", "-", "0.5", "*", "n", "*", "self", ".", "noise", "-", "0.5", "*", "torch", ".", "exp", "(", "-", "2.0", "*", "self", ".", "noise", ")", "*", "torch", ".", "trace", "(", "torch", ".", "mm", "(", "diff", ".", "t", "(", ")", ",", "diff", ")", ")", "\n", "return", "res", "", "", "", ""]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.ssgp.SSGP.__init__": [[5, 13], ["nn.Module.__init__", "get_cuda_device", "SpectralCov().to", "MeanFunction().to", "LikFunction().to", "SpectralCov", "MeanFunction", "LikFunction"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "n_dim", ",", "n_eps", ",", "ls", "=", "None", ")", ":", "\n", "        ", "super", "(", "SSGP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "n_dim", "=", "n_dim", "\n", "self", ".", "n_eps", "=", "n_eps", "\n", "self", ".", "cov", "=", "SpectralCov", "(", "self", ".", "n_dim", ",", "n_eps", "=", "self", ".", "n_eps", ",", "ls", "=", "ls", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "mean", "=", "MeanFunction", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "lik", "=", "LikFunction", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.ssgp.SSGP.NLL": [[14, 23], ["ssgp.SSGP.cov.phi", "torch.inverse", "torch.mm", "Y.float", "ssgp.SSGP.mean.mean.float", "torch.mm", "torch.mm", "ssgp.SSGP.t", "ssgp.SSGP.t", "torch.exp", "torch.eye().to", "np.log", "torch.exp", "torch.norm", "torch.eye", "torch.mm"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi"], ["", "def", "NLL", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "        ", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Phi", "=", "self", ".", "cov", ".", "phi", "(", "X", ")", "\n", "w", "=", "torch", ".", "inverse", "(", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Phi", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "\n", "torch", ".", "eye", "(", "2", "*", "self", ".", "n_eps", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "w", "=", "torch", ".", "mm", "(", "w", ",", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Yc", ")", ")", "\n", "res", "=", "0.5", "*", "X", ".", "shape", "[", "0", "]", "*", "np", ".", "log", "(", "2.0", "*", "np", ".", "pi", ")", "+", "X", ".", "shape", "[", "0", "]", "*", "self", ".", "lik", ".", "noise", "+", "0.5", "*", "torch", ".", "exp", "(", "-", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "(", "torch", ".", "norm", "(", "Yc", "-", "torch", ".", "mm", "(", "Phi", ",", "w", ")", ")", "**", "2", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.ssgp.SSGP.predict": [[24, 45], ["torch.no_grad", "ssgp.SSGP.cov.phi", "ssgp.SSGP.cov.phi", "torch.inverse", "torch.mm", "torch.mm", "torch.cuda.empty_cache", "Y.float", "ssgp.SSGP.mean.mean.float", "torch.mm", "torch.mm", "ssgp.SSGP.mean.mean.float", "torch.cuda.empty_cache", "torch.mm", "ssgp.SSGP.t", "ssgp.SSGP.cov.phi", "torch.mm", "torch.mm", "torch.exp", "torch.eye().to", "ssgp.SSGP.t", "torch.exp", "torch.eye().to", "ssgp.SSGP.t", "ssgp.SSGP.t", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi"], ["", "def", "predict", "(", "self", ",", "Xt", ",", "X", ",", "Y", ",", "var", "=", "False", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Phi", "=", "self", ".", "cov", ".", "phi", "(", "X", ")", "\n", "pt", "=", "self", ".", "cov", ".", "phi", "(", "Xt", ")", "\n", "w", "=", "torch", ".", "inverse", "(", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Phi", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "\n", "torch", ".", "eye", "(", "2", "*", "self", ".", "n_eps", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "ptw", "=", "torch", ".", "mm", "(", "pt", ",", "w", ")", "\n", "w", "=", "torch", ".", "mm", "(", "w", ",", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Yc", ")", ")", "\n", "Yt", "=", "torch", ".", "mm", "(", "self", ".", "cov", ".", "phi", "(", "Xt", ")", ",", "w", ")", "+", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "if", "var", "is", "False", ":", "\n", "                ", "del", "Yc", ",", "Phi", ",", "pt", ",", "w", ",", "ptw", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "return", "Yt", "\n", "\n", "", "Yv", "=", "torch", ".", "mm", "(", "pt", ",", "pt", ".", "t", "(", ")", ")", "-", "torch", ".", "mm", "(", "ptw", ",", "pt", ".", "t", "(", ")", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "torch", ".", "eye", "(", "pt", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "del", "Yc", ",", "Phi", ",", "pt", ",", "w", ",", "ptw", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "return", "Yt", ",", "Yv", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.ssgp.SSGP.forward": [[46, 63], ["ssgp.SSGP.cov.phi", "ssgp.SSGP.cov.phi", "torch.inverse", "torch.mm", "torch.mm", "ssgp.SSGP.predict", "Y.float", "ssgp.SSGP.mean.mean.float", "torch.mm", "torch.mm", "ssgp.SSGP.mean.mean.float", "torch.mm", "torch.mm", "torch.mm", "torch.exp", "torch.eye().to", "ssgp.SSGP.t", "ssgp.SSGP.t", "torch.exp", "torch.eye().to", "ssgp.SSGP.t", "ssgp.SSGP.t", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.covs.kernel.SpectralCov.phi", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.predict"], ["", "", "def", "forward", "(", "self", ",", "Xt", ",", "X", ",", "Y", ",", "grad", "=", "False", ",", "var", "=", "False", ")", ":", "\n", "        ", "if", "grad", "is", "False", ":", "\n", "            ", "return", "self", ".", "predict", "(", "Xt", ",", "X", ",", "Y", ",", "var", "=", "var", ")", "\n", "", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Phi", "=", "self", ".", "cov", ".", "phi", "(", "X", ")", "\n", "pt", "=", "self", ".", "cov", ".", "phi", "(", "Xt", ")", "\n", "w", "=", "torch", ".", "inverse", "(", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Phi", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "\n", "torch", ".", "eye", "(", "2", "*", "self", ".", "n_eps", ")", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "ptw", "=", "torch", ".", "mm", "(", "pt", ",", "w", ")", "\n", "Yv", "=", "torch", ".", "mm", "(", "pt", ",", "pt", ".", "t", "(", ")", ")", "-", "torch", ".", "mm", "(", "ptw", ",", "pt", ".", "t", "(", ")", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "torch", ".", "eye", "(", "pt", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "w", "=", "torch", ".", "mm", "(", "w", ",", "torch", ".", "mm", "(", "Phi", ".", "t", "(", ")", ",", "Yc", ")", ")", "\n", "Yt", "=", "torch", ".", "mm", "(", "pt", ",", "w", ")", "+", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "\n", "if", "var", "is", "False", ":", "\n", "            ", "return", "Yt", "\n", "", "return", "Yt", ",", "Yv", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__": [[4, 11], ["nn.Module.__init__", "get_cuda_device", "CovFunction().to", "MeanFunction().to", "LikFunction().to", "CovFunction", "MeanFunction", "LikFunction"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.__init__", "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.utils.utility.get_cuda_device"], ["    ", "def", "__init__", "(", "self", ",", "n_dim", ",", "ls", "=", "None", ")", ":", "\n", "        ", "super", "(", "FGP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "get_cuda_device", "(", ")", "\n", "self", ".", "n_dim", "=", "n_dim", "\n", "self", ".", "cov", "=", "CovFunction", "(", "self", ".", "n_dim", ",", "ls", "=", "ls", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "mean", "=", "MeanFunction", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "lik", "=", "LikFunction", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.NLL": [[12, 20], ["fgp.FGP.cov", "torch.diagonal().fill_", "torch.cholesky", "torch.mm", "Y.float", "fgp.FGP.mean.mean.float", "torch.inverse", "torch.diagonal", "torch.exp", "torch.exp", "torch.sum", "torch.mm", "torch.log", "torch.mm.t", "torch.cholesky.diag"], "methods", ["None"], ["", "def", "NLL", "(", "self", ",", "X", ",", "Y", ")", ":", "\n", "        ", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Kxx", "=", "self", ".", "cov", "(", "X", ")", "\n", "torch", ".", "diagonal", "(", "Kxx", ")", ".", "fill_", "(", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "cov", ".", "sn", ")", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", ")", "\n", "L", "=", "torch", ".", "cholesky", "(", "Kxx", ",", "upper", "=", "False", ")", "\n", "Linv", "=", "torch", ".", "mm", "(", "torch", ".", "inverse", "(", "L", ")", ",", "Yc", ")", "\n", "res", "=", "0.5", "*", "torch", ".", "sum", "(", "torch", ".", "log", "(", "L", ".", "diag", "(", ")", ")", ")", "+", "0.5", "*", "torch", ".", "mm", "(", "Linv", ".", "t", "(", ")", ",", "Linv", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.predict": [[21, 33], ["torch.no_grad", "fgp.FGP.cov", "fgp.FGP.cov", "torch.inverse().float", "fgp.FGP.cov", "Y.float", "fgp.FGP.mean.mean.float", "torch.mm", "fgp.FGP.mean.mean.float", "torch.mm", "torch.inverse", "torch.mm", "torch.mm", "fgp.FGP.t", "torch.exp", "torch.eye().to", "torch.eye"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "Xt", ",", "X", ",", "Y", ",", "var", "=", "False", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Ktx", "=", "self", ".", "cov", "(", "Xt", ",", "X", ")", "\n", "Kxx", "=", "self", ".", "cov", "(", "X", ")", "\n", "Q_inv", "=", "torch", ".", "inverse", "(", "Kxx", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "torch", ".", "eye", "(", "X", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", ")", ".", "float", "(", ")", "\n", "Yt", "=", "torch", ".", "mm", "(", "Ktx", ",", "torch", ".", "mm", "(", "Q_inv", ",", "Yc", ")", ")", "+", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "if", "var", "is", "False", ":", "\n", "                ", "return", "Yt", "\n", "", "Ktt", "=", "self", ".", "cov", "(", "Xt", ")", "\n", "Vt", "=", "Ktt", "-", "torch", ".", "mm", "(", "Ktx", ",", "torch", ".", "mm", "(", "Q_inv", ",", "Ktx", ".", "t", "(", ")", ")", ")", "\n", "return", "Yt", ",", "Vt", "\n", "\n"]], "home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.forward": [[34, 47], ["fgp.FGP.cov", "fgp.FGP.cov", "torch.inverse().float", "fgp.FGP.cov", "fgp.FGP.predict", "Y.float", "fgp.FGP.mean.mean.float", "torch.mm", "fgp.FGP.mean.mean.float", "torch.mm", "torch.inverse", "torch.mm", "torch.mm", "fgp.FGP.t", "torch.exp", "torch.eye().to", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.hqminh_gp_sketch_nips.gps.fgp.FGP.predict"], ["", "", "def", "forward", "(", "self", ",", "Xt", ",", "X", ",", "Y", ",", "grad", "=", "False", ",", "var", "=", "False", ")", ":", "\n", "        ", "if", "grad", "is", "False", ":", "\n", "            ", "return", "self", ".", "predict", "(", "Xt", ",", "X", ",", "Y", ",", "var", "=", "var", ")", "\n", "", "Yc", "=", "Y", ".", "float", "(", ")", "-", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "Ktx", "=", "self", ".", "cov", "(", "Xt", ",", "X", ")", "\n", "Kxx", "=", "self", ".", "cov", "(", "X", ")", "\n", "Q_inv", "=", "torch", ".", "inverse", "(", "Kxx", "+", "torch", ".", "exp", "(", "2.0", "*", "self", ".", "lik", ".", "noise", ")", "*", "torch", ".", "eye", "(", "X", ".", "shape", "[", "0", "]", ")", ".", "to", "(", "self", ".", "device", ")", ")", ".", "float", "(", ")", "\n", "Yt", "=", "torch", ".", "mm", "(", "Ktx", ",", "torch", ".", "mm", "(", "Q_inv", ",", "Yc", ")", ")", "+", "self", ".", "mean", ".", "mean", ".", "float", "(", ")", "\n", "if", "var", "is", "False", ":", "\n", "            ", "return", "Yt", "\n", "", "Ktt", "=", "self", ".", "cov", "(", "Xt", ")", "\n", "Vt", "=", "Ktt", "-", "torch", ".", "mm", "(", "Ktx", ",", "torch", ".", "mm", "(", "Q_inv", ",", "Ktx", ".", "t", "(", ")", ")", ")", "\n", "return", "Yt", ",", "Vt", "\n", "\n"]]}