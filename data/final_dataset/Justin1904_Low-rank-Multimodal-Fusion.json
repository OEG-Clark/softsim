{"home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_mosi.display": [[17, 23], ["print", "print", "print", "print", "print"], "function", ["None"], ["def", "display", "(", "mae", ",", "corr", ",", "multi_acc", ",", "bi_acc", ",", "f1", ")", ":", "\n", "    ", "print", "(", "\"MAE on test set is {}\"", ".", "format", "(", "mae", ")", ")", "\n", "print", "(", "\"Correlation w.r.t human evaluation on test set is {}\"", ".", "format", "(", "corr", ")", ")", "\n", "print", "(", "\"Multiclass accuracy on test set is {}\"", ".", "format", "(", "multi_acc", ")", ")", "\n", "print", "(", "\"Binary accuracy on test set is {}\"", ".", "format", "(", "bi_acc", ")", ")", "\n", "print", "(", "\"F1-score on test set is {}\"", ".", "format", "(", "f1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_mosi.main": [[24, 227], ["print", "os.path.join", "os.path.join", "print", "print", "os.makedirs", "os.makedirs", "utils.load_mosi", "dict", "utils.total", "print", "set", "range", "os.path.dirname", "os.path.dirname", "open", "csv.writer", "csv.writer.writerow", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "model.LMF", "print", "torch.L1Loss", "torch.Adam", "float", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "set.add", "model.cuda.cuda", "list", "list", "model.cuda.train", "model.cuda.zero_grad", "print", "numpy.isnan", "model.cuda.eval", "torch.autograd.Variable.cpu().data.numpy().reshape", "numpy.isnan", "print", "print", "model.cuda.eval", "best_model.cpu().data.numpy().reshape", "torch.autograd.Variable.cpu().data.numpy().reshape", "best_model.reshape", "torch.autograd.Variable.reshape", "numpy.mean", "torch.load", "torch.load", "torch.load", "torch.load.eval", "best_model.cpu().data.numpy().reshape", "torch.autograd.Variable.cpu().data.numpy().reshape", "best_model.reshape", "torch.autograd.Variable.reshape", "numpy.mean", "round", "round", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "train_mosi.display", "model.cuda.parameters", "model.cuda.parameters", "len", "len", "model.cuda.zero_grad", "torch.autograd.Variable().squeeze", "torch.autograd.Variable().squeeze", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.L1Loss.", "criterion.backward", "optim.Adam.step", "print", "torch.autograd.Variable().squeeze", "torch.autograd.Variable().squeeze", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.L1Loss.", "print", "len", "torch.save", "torch.save", "torch.save", "print", "torch.autograd.Variable().squeeze", "torch.autograd.Variable().squeeze", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.L1Loss.", "numpy.absolute", "torch.autograd.Variable().squeeze", "torch.autograd.Variable().squeeze", "torch.autograd.Variable", "torch.autograd.Variable", "torch.load.", "nn.L1Loss.", "numpy.absolute", "open", "csv.writer", "csv.writer.writerow", "x[].float().type", "batch[].view().float().type", "len", "x[].float().type", "batch[].view().float().type", "torch.autograd.Variable.cpu().data.numpy", "x[].float().type", "batch[].view().float().type", "len", "best_model.cpu().data.numpy", "torch.autograd.Variable.cpu().data.numpy", "len", "len", "x[].float().type", "batch[].view().float().type", "best_model.cpu().data.numpy", "torch.autograd.Variable.cpu().data.numpy", "len", "len", "sum", "float", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "numpy.corrcoef", "len", "float.cpu().data.numpy", "x[].float().type", "x[].float().type", "x[].float", "batch[].view().float", "x[].float().type", "x[].float().type", "x[].float", "batch[].view().float", "x[].float().type", "x[].float().type", "x[].float", "batch[].view().float", "x[].float().type", "x[].float().type", "x[].float", "batch[].view().float", "numpy.round", "numpy.round", "torch.autograd.Variable.cpu", "best_model.cpu", "torch.autograd.Variable.cpu", "best_model.cpu", "torch.autograd.Variable.cpu", "x[].float", "x[].float", "batch[].view", "x[].float", "x[].float", "batch[].view", "x[].float", "x[].float", "batch[].view", "x[].float", "x[].float", "batch[].view", "float.cpu"], "function", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_mosi", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.total", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_pom.display"], ["", "def", "main", "(", "options", ")", ":", "\n", "    ", "DTYPE", "=", "torch", ".", "FloatTensor", "\n", "\n", "# parse the input args", "\n", "run_id", "=", "options", "[", "'run_id'", "]", "\n", "epochs", "=", "options", "[", "'epochs'", "]", "\n", "data_path", "=", "options", "[", "'data_path'", "]", "\n", "model_path", "=", "options", "[", "'model_path'", "]", "\n", "output_path", "=", "options", "[", "'output_path'", "]", "\n", "signiture", "=", "options", "[", "'signiture'", "]", "\n", "patience", "=", "options", "[", "'patience'", "]", "\n", "output_dim", "=", "options", "[", "'output_dim'", "]", "\n", "\n", "print", "(", "\"Training initializing... Setup ID is: {}\"", ".", "format", "(", "run_id", ")", ")", "\n", "\n", "# prepare the paths for storing models and outputs", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "\n", "model_path", ",", "\"model_{}_{}.pt\"", ".", "format", "(", "signiture", ",", "run_id", ")", ")", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "\n", "output_path", ",", "\"results_{}_{}.csv\"", ".", "format", "(", "signiture", ",", "run_id", ")", ")", "\n", "print", "(", "\"Temp location for models: {}\"", ".", "format", "(", "model_path", ")", ")", "\n", "print", "(", "\"Grid search results are in: {}\"", ".", "format", "(", "output_path", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "output_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "model_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "=", "load_mosi", "(", "data_path", ")", "\n", "\n", "params", "=", "dict", "(", ")", "\n", "params", "[", "'audio_hidden'", "]", "=", "[", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'video_hidden'", "]", "=", "[", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'text_hidden'", "]", "=", "[", "64", ",", "128", ",", "256", "]", "\n", "params", "[", "'audio_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'video_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'text_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'factor_learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'rank'", "]", "=", "[", "1", ",", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'batch_size'", "]", "=", "[", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",", "128", "]", "\n", "params", "[", "'weight_decay'", "]", "=", "[", "0", ",", "0.001", ",", "0.002", ",", "0.01", "]", "\n", "\n", "total_settings", "=", "total", "(", "params", ")", "\n", "\n", "print", "(", "\"There are {} different hyper-parameter settings in total.\"", ".", "format", "(", "total_settings", ")", ")", "\n", "\n", "seen_settings", "=", "set", "(", ")", "\n", "\n", "with", "open", "(", "output_path", ",", "'w+'", ")", "as", "out", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "[", "\"audio_hidden\"", ",", "\"video_hidden\"", ",", "'text_hidden'", ",", "'audio_dropout'", ",", "'video_dropout'", ",", "'text_dropout'", ",", "\n", "'factor_learning_rate'", ",", "'learning_rate'", ",", "'rank'", ",", "'batch_size'", ",", "'weight_decay'", ",", "\n", "'Best Validation MAE'", ",", "'Test MAE'", ",", "'Test Corr'", ",", "'Test multiclass accuracy'", ",", "'Test binary accuracy'", ",", "'Test f1_score'", "]", ")", "\n", "\n", "\n", "", "for", "i", "in", "range", "(", "total_settings", ")", ":", "\n", "\n", "        ", "ahid", "=", "random", ".", "choice", "(", "params", "[", "'audio_hidden'", "]", ")", "\n", "vhid", "=", "random", ".", "choice", "(", "params", "[", "'video_hidden'", "]", ")", "\n", "thid", "=", "random", ".", "choice", "(", "params", "[", "'text_hidden'", "]", ")", "\n", "thid_2", "=", "thid", "//", "2", "\n", "adr", "=", "random", ".", "choice", "(", "params", "[", "'audio_dropout'", "]", ")", "\n", "vdr", "=", "random", ".", "choice", "(", "params", "[", "'video_dropout'", "]", ")", "\n", "tdr", "=", "random", ".", "choice", "(", "params", "[", "'text_dropout'", "]", ")", "\n", "factor_lr", "=", "random", ".", "choice", "(", "params", "[", "'factor_learning_rate'", "]", ")", "\n", "lr", "=", "random", ".", "choice", "(", "params", "[", "'learning_rate'", "]", ")", "\n", "r", "=", "random", ".", "choice", "(", "params", "[", "'rank'", "]", ")", "\n", "batch_sz", "=", "random", ".", "choice", "(", "params", "[", "'batch_size'", "]", ")", "\n", "decay", "=", "random", ".", "choice", "(", "params", "[", "'weight_decay'", "]", ")", "\n", "\n", "# reject the setting if it has been tried", "\n", "current_setting", "=", "(", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ")", "\n", "if", "current_setting", "in", "seen_settings", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "seen_settings", ".", "add", "(", "current_setting", ")", "\n", "\n", "", "model", "=", "LMF", "(", "input_dims", ",", "(", "ahid", ",", "vhid", ",", "thid", ")", ",", "thid_2", ",", "(", "adr", ",", "vdr", ",", "tdr", ",", "0.5", ")", ",", "output_dim", ",", "r", ")", "\n", "if", "options", "[", "'cuda'", "]", ":", "\n", "            ", "model", "=", "model", ".", "cuda", "(", ")", "\n", "DTYPE", "=", "torch", ".", "cuda", ".", "FloatTensor", "\n", "", "print", "(", "\"Model initialized\"", ")", "\n", "criterion", "=", "nn", ".", "L1Loss", "(", "size_average", "=", "False", ")", "\n", "factors", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", ":", "3", "]", "\n", "other", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "3", ":", "]", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "[", "{", "\"params\"", ":", "factors", ",", "\"lr\"", ":", "factor_lr", "}", ",", "{", "\"params\"", ":", "other", ",", "\"lr\"", ":", "lr", "}", "]", ",", "weight_decay", "=", "decay", ")", "\n", "\n", "# setup training", "\n", "complete", "=", "True", "\n", "min_valid_loss", "=", "float", "(", "'Inf'", ")", "\n", "train_iterator", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "batch_sz", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "valid_iterator", "=", "DataLoader", "(", "valid_set", ",", "batch_size", "=", "len", "(", "valid_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "test_iterator", "=", "DataLoader", "(", "test_set", ",", "batch_size", "=", "len", "(", "test_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "curr_patience", "=", "patience", "\n", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "avg_train_loss", "=", "0.0", "\n", "for", "batch", "in", "train_iterator", ":", "\n", "                ", "model", ".", "zero_grad", "(", ")", "\n", "\n", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "avg_loss", "=", "loss", ".", "data", "[", "0", "]", "\n", "avg_train_loss", "+=", "avg_loss", "/", "len", "(", "train_set", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "\"Epoch {} complete! Average Training loss: {}\"", ".", "format", "(", "e", ",", "avg_train_loss", ")", ")", "\n", "\n", "# Terminate the training process if run into NaN", "\n", "if", "np", ".", "isnan", "(", "avg_train_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "valid_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "valid_loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "avg_valid_loss", "=", "valid_loss", ".", "data", "[", "0", "]", "\n", "", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "if", "np", ".", "isnan", "(", "avg_valid_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "", "avg_valid_loss", "=", "avg_valid_loss", "/", "len", "(", "valid_set", ")", "\n", "print", "(", "\"Validation loss is: {}\"", ".", "format", "(", "avg_valid_loss", ")", ")", "\n", "\n", "if", "(", "avg_valid_loss", "<", "min_valid_loss", ")", ":", "\n", "                ", "curr_patience", "=", "patience", "\n", "min_valid_loss", "=", "avg_valid_loss", "\n", "torch", ".", "save", "(", "model", ",", "model_path", ")", "\n", "print", "(", "\"Found new best model, saving to disk...\"", ")", "\n", "", "else", ":", "\n", "                ", "curr_patience", "-=", "1", "\n", "\n", "", "if", "curr_patience", "<=", "0", ":", "\n", "                ", "break", "\n", "", "print", "(", "\"\\n\\n\"", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "test_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output_test", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss_test", "=", "criterion", "(", "output_test", ",", "y", ")", "\n", "avg_test_loss", "=", "loss_test", ".", "data", "[", "0", "]", "/", "len", "(", "test_set", ")", "\n", "\n", "", "output_test", "=", "output_test", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "# these are the needed metrics", "\n", "output_test", "=", "output_test", ".", "reshape", "(", "(", "len", "(", "output_test", ")", ",", ")", ")", "\n", "y", "=", "y", ".", "reshape", "(", "(", "len", "(", "y", ")", ",", ")", ")", "\n", "mae", "=", "np", ".", "mean", "(", "np", ".", "absolute", "(", "output_test", "-", "y", ")", ")", "\n", "\n", "", "if", "complete", ":", "\n", "\n", "            ", "best_model", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "best_model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "test_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output_test", "=", "best_model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss_test", "=", "criterion", "(", "output_test", ",", "y", ")", "\n", "\n", "", "output_test", "=", "output_test", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "# these are the needed metrics", "\n", "output_test", "=", "output_test", ".", "reshape", "(", "(", "len", "(", "output_test", ")", ",", ")", ")", "\n", "y", "=", "y", ".", "reshape", "(", "(", "len", "(", "y", ")", ",", ")", ")", "\n", "mae", "=", "np", ".", "mean", "(", "np", ".", "absolute", "(", "output_test", "-", "y", ")", ")", "\n", "corr", "=", "round", "(", "np", ".", "corrcoef", "(", "output_test", ",", "y", ")", "[", "0", "]", "[", "1", "]", ",", "5", ")", "\n", "multi_acc", "=", "round", "(", "sum", "(", "np", ".", "round", "(", "output_test", ")", "==", "np", ".", "round", "(", "y", ")", ")", "/", "float", "(", "len", "(", "y", ")", ")", ",", "5", ")", "\n", "true_label", "=", "(", "y", ">=", "0", ")", "\n", "predicted_label", "=", "(", "output_test", ">=", "0", ")", "\n", "bi_acc", "=", "accuracy_score", "(", "true_label", ",", "predicted_label", ")", "\n", "f1", "=", "f1_score", "(", "true_label", ",", "predicted_label", ",", "average", "=", "'weighted'", ")", "\n", "display", "(", "mae", ",", "corr", ",", "multi_acc", ",", "bi_acc", ",", "f1", ")", "\n", "\n", "with", "open", "(", "output_path", ",", "'a+'", ")", "as", "out", ":", "\n", "                ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "[", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ",", "\n", "min_valid_loss", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "mae", ",", "corr", ",", "multi_acc", ",", "bi_acc", ",", "f1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.SubNet.__init__": [[15, 30], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.LMF.__init__"], ["def", "__init__", "(", "self", ",", "in_size", ",", "hidden_size", ",", "dropout", ")", ":", "\n", "        ", "'''\n        Args:\n            in_size: input dimension\n            hidden_size: hidden layer dimension\n            dropout: dropout probability\n        Output:\n            (return value in forward) a tensor of shape (batch_size, hidden_size)\n        '''", "\n", "super", "(", "SubNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm", "=", "nn", ".", "BatchNorm1d", "(", "in_size", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "in_size", ",", "hidden_size", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "linear_3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.SubNet.forward": [[31, 43], ["model.SubNet.norm", "model.SubNet.drop", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "model.SubNet.linear_1", "model.SubNet.linear_2", "model.SubNet.linear_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        Args:\n            x: tensor of shape (batch_size, in_size)\n        '''", "\n", "normed", "=", "self", ".", "norm", "(", "x", ")", "\n", "dropped", "=", "self", ".", "drop", "(", "normed", ")", "\n", "y_1", "=", "F", ".", "relu", "(", "self", ".", "linear_1", "(", "dropped", ")", ")", "\n", "y_2", "=", "F", ".", "relu", "(", "self", ".", "linear_2", "(", "y_1", ")", ")", "\n", "y_3", "=", "F", ".", "relu", "(", "self", ".", "linear_3", "(", "y_2", ")", ")", "\n", "\n", "return", "y_3", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.TextSubNet.__init__": [[50, 65], ["torch.Module.__init__", "torch.LSTM", "torch.LSTM", "torch.LSTM", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.LMF.__init__"], ["def", "__init__", "(", "self", ",", "in_size", ",", "hidden_size", ",", "out_size", ",", "num_layers", "=", "1", ",", "dropout", "=", "0.2", ",", "bidirectional", "=", "False", ")", ":", "\n", "        ", "'''\n        Args:\n            in_size: input dimension\n            hidden_size: hidden layer dimension\n            num_layers: specify the number of layers of LSTMs.\n            dropout: dropout probability\n            bidirectional: specify usage of bidirectional LSTM\n        Output:\n            (return value in forward) a tensor of shape (batch_size, out_size)\n        '''", "\n", "super", "(", "TextSubNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rnn", "=", "nn", ".", "LSTM", "(", "in_size", ",", "hidden_size", ",", "num_layers", "=", "num_layers", ",", "dropout", "=", "dropout", ",", "bidirectional", "=", "bidirectional", ",", "batch_first", "=", "True", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "out_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.TextSubNet.forward": [[66, 75], ["model.TextSubNet.rnn", "model.TextSubNet.dropout", "model.TextSubNet.linear_1", "final_states[].squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        Args:\n            x: tensor of shape (batch_size, sequence_len, in_size)\n        '''", "\n", "_", ",", "final_states", "=", "self", ".", "rnn", "(", "x", ")", "\n", "h", "=", "self", ".", "dropout", "(", "final_states", "[", "0", "]", ".", "squeeze", "(", ")", ")", "\n", "y_1", "=", "self", ".", "linear_1", "(", "h", ")", "\n", "return", "y_1", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.LMF.__init__": [[82, 134], ["torch.Module.__init__", "model.SubNet", "model.SubNet", "model.TextSubNet", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "torch.nn.init.xavier_normal", "model.LMF.fusion_bias.data.fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.LMF.__init__"], ["def", "__init__", "(", "self", ",", "input_dims", ",", "hidden_dims", ",", "text_out", ",", "dropouts", ",", "output_dim", ",", "rank", ",", "use_softmax", "=", "False", ")", ":", "\n", "        ", "'''\n        Args:\n            input_dims - a length-3 tuple, contains (audio_dim, video_dim, text_dim)\n            hidden_dims - another length-3 tuple, hidden dims of the sub-networks\n            text_out - int, specifying the resulting dimensions of the text subnetwork\n            dropouts - a length-4 tuple, contains (audio_dropout, video_dropout, text_dropout, post_fusion_dropout)\n            output_dim - int, specifying the size of output\n            rank - int, specifying the size of rank in LMF\n        Output:\n            (return value in forward) a scalar value between -3 and 3\n        '''", "\n", "super", "(", "LMF", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# dimensions are specified in the order of audio, video and text", "\n", "self", ".", "audio_in", "=", "input_dims", "[", "0", "]", "\n", "self", ".", "video_in", "=", "input_dims", "[", "1", "]", "\n", "self", ".", "text_in", "=", "input_dims", "[", "2", "]", "\n", "\n", "self", ".", "audio_hidden", "=", "hidden_dims", "[", "0", "]", "\n", "self", ".", "video_hidden", "=", "hidden_dims", "[", "1", "]", "\n", "self", ".", "text_hidden", "=", "hidden_dims", "[", "2", "]", "\n", "self", ".", "text_out", "=", "text_out", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "use_softmax", "=", "use_softmax", "\n", "\n", "self", ".", "audio_prob", "=", "dropouts", "[", "0", "]", "\n", "self", ".", "video_prob", "=", "dropouts", "[", "1", "]", "\n", "self", ".", "text_prob", "=", "dropouts", "[", "2", "]", "\n", "self", ".", "post_fusion_prob", "=", "dropouts", "[", "3", "]", "\n", "\n", "# define the pre-fusion subnetworks", "\n", "self", ".", "audio_subnet", "=", "SubNet", "(", "self", ".", "audio_in", ",", "self", ".", "audio_hidden", ",", "self", ".", "audio_prob", ")", "\n", "self", ".", "video_subnet", "=", "SubNet", "(", "self", ".", "video_in", ",", "self", ".", "video_hidden", ",", "self", ".", "video_prob", ")", "\n", "self", ".", "text_subnet", "=", "TextSubNet", "(", "self", ".", "text_in", ",", "self", ".", "text_hidden", ",", "self", ".", "text_out", ",", "dropout", "=", "self", ".", "text_prob", ")", "\n", "\n", "# define the post_fusion layers", "\n", "self", ".", "post_fusion_dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "self", ".", "post_fusion_prob", ")", "\n", "# self.post_fusion_layer_1 = nn.Linear((self.text_out + 1) * (self.video_hidden + 1) * (self.audio_hidden + 1), self.post_fusion_dim)", "\n", "self", ".", "audio_factor", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "rank", ",", "self", ".", "audio_hidden", "+", "1", ",", "self", ".", "output_dim", ")", ")", "\n", "self", ".", "video_factor", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "rank", ",", "self", ".", "video_hidden", "+", "1", ",", "self", ".", "output_dim", ")", ")", "\n", "self", ".", "text_factor", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "rank", ",", "self", ".", "text_out", "+", "1", ",", "self", ".", "output_dim", ")", ")", "\n", "self", ".", "fusion_weights", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "self", ".", "rank", ")", ")", "\n", "self", ".", "fusion_bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "self", ".", "output_dim", ")", ")", "\n", "\n", "# init teh factors", "\n", "xavier_normal", "(", "self", ".", "audio_factor", ")", "\n", "xavier_normal", "(", "self", ".", "video_factor", ")", "\n", "xavier_normal", "(", "self", ".", "text_factor", ")", "\n", "xavier_normal", "(", "self", ".", "fusion_weights", ")", "\n", "self", ".", "fusion_bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.model.LMF.forward": [[135, 171], ["model.LMF.audio_subnet", "model.LMF.video_subnet", "model.LMF.text_subnet", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.softmax.view", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.ones().type", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "fusion_zy.permute", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "audio_x", ",", "video_x", ",", "text_x", ")", ":", "\n", "        ", "'''\n        Args:\n            audio_x: tensor of shape (batch_size, audio_in)\n            video_x: tensor of shape (batch_size, video_in)\n            text_x: tensor of shape (batch_size, sequence_len, text_in)\n        '''", "\n", "audio_h", "=", "self", ".", "audio_subnet", "(", "audio_x", ")", "\n", "video_h", "=", "self", ".", "video_subnet", "(", "video_x", ")", "\n", "text_h", "=", "self", ".", "text_subnet", "(", "text_x", ")", "\n", "batch_size", "=", "audio_h", ".", "data", ".", "shape", "[", "0", "]", "\n", "\n", "# next we perform low-rank multimodal fusion", "\n", "# here is a more efficient implementation than the one the paper describes", "\n", "# basically swapping the order of summation and elementwise product", "\n", "if", "audio_h", ".", "is_cuda", ":", "\n", "            ", "DTYPE", "=", "torch", ".", "cuda", ".", "FloatTensor", "\n", "", "else", ":", "\n", "            ", "DTYPE", "=", "torch", ".", "FloatTensor", "\n", "\n", "", "_audio_h", "=", "torch", ".", "cat", "(", "(", "Variable", "(", "torch", ".", "ones", "(", "batch_size", ",", "1", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ",", "audio_h", ")", ",", "dim", "=", "1", ")", "\n", "_video_h", "=", "torch", ".", "cat", "(", "(", "Variable", "(", "torch", ".", "ones", "(", "batch_size", ",", "1", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ",", "video_h", ")", ",", "dim", "=", "1", ")", "\n", "_text_h", "=", "torch", ".", "cat", "(", "(", "Variable", "(", "torch", ".", "ones", "(", "batch_size", ",", "1", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", ",", "text_h", ")", ",", "dim", "=", "1", ")", "\n", "\n", "fusion_audio", "=", "torch", ".", "matmul", "(", "_audio_h", ",", "self", ".", "audio_factor", ")", "\n", "fusion_video", "=", "torch", ".", "matmul", "(", "_video_h", ",", "self", ".", "video_factor", ")", "\n", "fusion_text", "=", "torch", ".", "matmul", "(", "_text_h", ",", "self", ".", "text_factor", ")", "\n", "fusion_zy", "=", "fusion_audio", "*", "fusion_video", "*", "fusion_text", "\n", "\n", "# output = torch.sum(fusion_zy, dim=0).squeeze()", "\n", "# use linear transformation instead of simple summation, more flexibility", "\n", "output", "=", "torch", ".", "matmul", "(", "self", ".", "fusion_weights", ",", "fusion_zy", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ")", ".", "squeeze", "(", ")", "+", "self", ".", "fusion_bias", "\n", "output", "=", "output", ".", "view", "(", "-", "1", ",", "self", ".", "output_dim", ")", "\n", "if", "self", ".", "use_softmax", ":", "\n", "            ", "output", "=", "F", ".", "softmax", "(", "output", ")", "\n", "", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_iemocap.display": [[16, 19], ["print", "print"], "function", ["None"], ["def", "display", "(", "f1_score", ",", "accuracy_score", ")", ":", "\n", "    ", "print", "(", "\"F1-score on test set is {}\"", ".", "format", "(", "f1_score", ")", ")", "\n", "print", "(", "\"Accuracy score on test set is {}\"", ".", "format", "(", "accuracy_score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_iemocap.main": [[20, 209], ["os.path.join", "os.path.join", "print", "print", "os.makedirs", "os.makedirs", "utils.load_iemocap", "dict", "utils.total", "print", "set", "range", "os.path.dirname", "os.path.dirname", "os.path.isfile", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "model.LMF", "print", "torch.CrossEntropyLoss", "torch.Adam", "float", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "open", "csv.writer", "csv.writer.writerow", "set.add", "model.cuda.cuda", "list", "list", "model.cuda.train", "model.cuda.zero_grad", "print", "numpy.isnan", "model.cuda.eval", "torch.autograd.Variable.cpu().data.numpy().reshape", "numpy.isnan", "print", "print", "torch.load", "torch.load", "torch.load", "torch.load.eval", "model.cpu().data.numpy().reshape", "torch.autograd.Variable.cpu().data.numpy().reshape", "numpy.argmax", "numpy.argmax", "sklearn.metrics.f1_score", "sklearn.metrics.accuracy_score", "train_iemocap.display", "model.cuda.parameters", "model.cuda.parameters", "len", "len", "model.cuda.zero_grad", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "nn.CrossEntropyLoss.", "criterion.backward", "optim.Adam.step", "print", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.CrossEntropyLoss.", "print", "len", "torch.save", "torch.save", "torch.save", "print", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.CrossEntropyLoss.", "len", "open", "csv.writer", "csv.writer.writerow", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "model.cuda.", "len", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "torch.autograd.Variable.cpu().data.numpy", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "model.cpu().data.numpy", "torch.autograd.Variable.cpu().data.numpy", "print", "print", "print", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "float.cpu().data.numpy", "test_loss.cpu().data.numpy", "x[].float", "x[].float", "x[].float", "batch[].view().float", "x[].float", "x[].float", "x[].float", "batch[].view().float", "x[].float", "x[].float", "x[].float", "batch[].view().float", "torch.autograd.Variable.cpu", "model.cpu", "torch.autograd.Variable.cpu", "batch[].view", "batch[].view", "batch[].view", "float.cpu", "test_loss.cpu"], "function", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_iemocap", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.total", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_pom.display"], ["", "def", "main", "(", "options", ")", ":", "\n", "    ", "DTYPE", "=", "torch", ".", "FloatTensor", "\n", "LONG", "=", "torch", ".", "LongTensor", "\n", "\n", "# parse the input args", "\n", "epochs", "=", "options", "[", "'epochs'", "]", "\n", "data_path", "=", "options", "[", "'data_path'", "]", "\n", "model_path", "=", "options", "[", "'model_path'", "]", "\n", "output_path", "=", "options", "[", "'output_path'", "]", "\n", "signiture", "=", "options", "[", "'signiture'", "]", "\n", "patience", "=", "options", "[", "'patience'", "]", "\n", "emotion", "=", "options", "[", "'emotion'", "]", "\n", "output_dim", "=", "options", "[", "'output_dim'", "]", "\n", "\n", "\n", "# prepare the paths for storing models and outputs", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "\n", "model_path", ",", "\"model_{}_{}.pt\"", ".", "format", "(", "signiture", ",", "emotion", ")", ")", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "\n", "output_path", ",", "\"results_{}_{}.csv\"", ".", "format", "(", "signiture", ",", "emotion", ")", ")", "\n", "print", "(", "\"Temp location for models: {}\"", ".", "format", "(", "model_path", ")", ")", "\n", "print", "(", "\"Grid search results are in: {}\"", ".", "format", "(", "output_path", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "output_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "model_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "=", "load_iemocap", "(", "data_path", ",", "emotion", ")", "\n", "\n", "params", "=", "dict", "(", ")", "\n", "params", "[", "'audio_hidden'", "]", "=", "[", "8", ",", "16", ",", "32", "]", "\n", "params", "[", "'video_hidden'", "]", "=", "[", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'text_hidden'", "]", "=", "[", "64", ",", "128", ",", "256", "]", "\n", "params", "[", "'audio_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'video_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'text_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'factor_learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'rank'", "]", "=", "[", "1", ",", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'batch_size'", "]", "=", "[", "8", ",", "16", ",", "32", ",", "64", ",", "128", "]", "\n", "params", "[", "'weight_decay'", "]", "=", "[", "0", ",", "0.001", ",", "0.002", ",", "0.01", "]", "\n", "\n", "total_settings", "=", "total", "(", "params", ")", "\n", "\n", "print", "(", "\"There are {} different hyper-parameter settings in total.\"", ".", "format", "(", "total_settings", ")", ")", "\n", "\n", "seen_settings", "=", "set", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "output_path", ")", ":", "\n", "        ", "with", "open", "(", "output_path", ",", "'w+'", ")", "as", "out", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "[", "\"audio_hidden\"", ",", "\"video_hidden\"", ",", "'text_hidden'", ",", "'audio_dropout'", ",", "'video_dropout'", ",", "'text_dropout'", ",", "\n", "'factor_learning_rate'", ",", "'learning_rate'", ",", "'rank'", ",", "'batch_size'", ",", "'weight_decay'", ",", "\n", "'Best Validation CrossEntropyLoss'", ",", "'Test CrossEntropyLoss'", ",", "'Test F1-score'", ",", "'Test Accuracy Score'", "]", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "total_settings", ")", ":", "\n", "\n", "        ", "ahid", "=", "random", ".", "choice", "(", "params", "[", "'audio_hidden'", "]", ")", "\n", "vhid", "=", "random", ".", "choice", "(", "params", "[", "'video_hidden'", "]", ")", "\n", "thid", "=", "random", ".", "choice", "(", "params", "[", "'text_hidden'", "]", ")", "\n", "thid_2", "=", "thid", "//", "2", "\n", "adr", "=", "random", ".", "choice", "(", "params", "[", "'audio_dropout'", "]", ")", "\n", "vdr", "=", "random", ".", "choice", "(", "params", "[", "'video_dropout'", "]", ")", "\n", "tdr", "=", "random", ".", "choice", "(", "params", "[", "'text_dropout'", "]", ")", "\n", "factor_lr", "=", "random", ".", "choice", "(", "params", "[", "'factor_learning_rate'", "]", ")", "\n", "lr", "=", "random", ".", "choice", "(", "params", "[", "'learning_rate'", "]", ")", "\n", "r", "=", "random", ".", "choice", "(", "params", "[", "'rank'", "]", ")", "\n", "batch_sz", "=", "random", ".", "choice", "(", "params", "[", "'batch_size'", "]", ")", "\n", "decay", "=", "random", ".", "choice", "(", "params", "[", "'weight_decay'", "]", ")", "\n", "\n", "# reject the setting if it has been tried", "\n", "current_setting", "=", "(", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ")", "\n", "if", "current_setting", "in", "seen_settings", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "seen_settings", ".", "add", "(", "current_setting", ")", "\n", "\n", "", "model", "=", "LMF", "(", "input_dims", ",", "(", "ahid", ",", "vhid", ",", "thid", ")", ",", "thid_2", ",", "(", "adr", ",", "vdr", ",", "tdr", ",", "0.5", ")", ",", "output_dim", ",", "r", ")", "\n", "if", "options", "[", "'cuda'", "]", ":", "\n", "            ", "model", "=", "model", ".", "cuda", "(", ")", "\n", "DTYPE", "=", "torch", ".", "cuda", ".", "FloatTensor", "\n", "LONG", "=", "torch", ".", "cuda", ".", "LongTensor", "\n", "", "print", "(", "\"Model initialized\"", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "size_average", "=", "False", ")", "\n", "factors", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", ":", "3", "]", "\n", "other", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "3", ":", "]", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "[", "{", "\"params\"", ":", "factors", ",", "\"lr\"", ":", "factor_lr", "}", ",", "{", "\"params\"", ":", "other", ",", "\"lr\"", ":", "lr", "}", "]", ",", "weight_decay", "=", "decay", ")", "\n", "\n", "# setup training", "\n", "complete", "=", "True", "\n", "min_valid_loss", "=", "float", "(", "'Inf'", ")", "\n", "train_iterator", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "batch_sz", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "valid_iterator", "=", "DataLoader", "(", "valid_set", ",", "batch_size", "=", "len", "(", "valid_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "test_iterator", "=", "DataLoader", "(", "test_set", ",", "batch_size", "=", "len", "(", "test_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "curr_patience", "=", "patience", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "avg_train_loss", "=", "0.0", "\n", "for", "batch", "in", "train_iterator", ":", "\n", "                ", "model", ".", "zero_grad", "(", ")", "\n", "\n", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "LONG", ")", ",", "requires_grad", "=", "False", ")", "\n", "try", ":", "\n", "                    ", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "                    ", "print", "(", "x_a", ".", "data", ".", "shape", ")", "\n", "print", "(", "x_v", ".", "data", ".", "shape", ")", "\n", "print", "(", "x_t", ".", "data", ".", "shape", ")", "\n", "raise", "e", "\n", "", "loss", "=", "criterion", "(", "output", ",", "torch", ".", "max", "(", "y", ",", "1", ")", "[", "1", "]", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "avg_loss", "=", "loss", ".", "data", "[", "0", "]", "\n", "avg_train_loss", "+=", "avg_loss", "/", "len", "(", "train_set", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "\n", "", "print", "(", "\"Epoch {} complete! Average Training loss: {}\"", ".", "format", "(", "e", ",", "avg_train_loss", ")", ")", "\n", "\n", "# Terminate the training process if run into NaN", "\n", "if", "np", ".", "isnan", "(", "avg_train_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "valid_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "LONG", ")", ",", "requires_grad", "=", "False", ")", "\n", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "valid_loss", "=", "criterion", "(", "output", ",", "torch", ".", "max", "(", "y", ",", "1", ")", "[", "1", "]", ")", "\n", "avg_valid_loss", "=", "valid_loss", ".", "data", "[", "0", "]", "\n", "", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "if", "np", ".", "isnan", "(", "avg_valid_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "", "avg_valid_loss", "=", "avg_valid_loss", "/", "len", "(", "valid_set", ")", "\n", "print", "(", "\"Validation loss is: {}\"", ".", "format", "(", "avg_valid_loss", ")", ")", "\n", "\n", "if", "(", "avg_valid_loss", "<", "min_valid_loss", ")", ":", "\n", "                ", "curr_patience", "=", "patience", "\n", "min_valid_loss", "=", "avg_valid_loss", "\n", "torch", ".", "save", "(", "model", ",", "model_path", ")", "\n", "print", "(", "\"Found new best model, saving to disk...\"", ")", "\n", "", "else", ":", "\n", "                ", "curr_patience", "-=", "1", "\n", "\n", "", "if", "curr_patience", "<=", "0", ":", "\n", "                ", "break", "\n", "", "print", "(", "\"\\n\\n\"", ")", "\n", "\n", "", "if", "complete", ":", "\n", "\n", "            ", "best_model", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "best_model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "test_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "LONG", ")", ",", "requires_grad", "=", "False", ")", "\n", "output_test", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss_test", "=", "criterion", "(", "output_test", ",", "torch", ".", "max", "(", "y", ",", "1", ")", "[", "1", "]", ")", "\n", "test_loss", "=", "loss_test", ".", "data", "[", "0", "]", "\n", "", "output_test", "=", "output_test", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "test_loss", "=", "test_loss", "/", "len", "(", "test_set", ")", "\n", "\n", "# these are the needed metrics", "\n", "all_true_label", "=", "np", ".", "argmax", "(", "y", ",", "axis", "=", "1", ")", "\n", "all_predicted_label", "=", "np", ".", "argmax", "(", "output_test", ",", "axis", "=", "1", ")", "\n", "\n", "f1", "=", "f1_score", "(", "all_true_label", ",", "all_predicted_label", ",", "average", "=", "'weighted'", ")", "\n", "acc_score", "=", "accuracy_score", "(", "all_true_label", ",", "all_predicted_label", ")", "\n", "\n", "display", "(", "f1", ",", "acc_score", ")", "\n", "\n", "with", "open", "(", "output_path", ",", "'a+'", ")", "as", "out", ":", "\n", "                ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "[", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ",", "\n", "min_valid_loss", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "test_loss", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "f1", ",", "acc_score", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.total": [[19, 27], ["params.items", "len"], "function", ["None"], ["def", "total", "(", "params", ")", ":", "\n", "    ", "'''\n    count the total number of hyperparameter settings\n    '''", "\n", "settings", "=", "1", "\n", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "settings", "*=", "len", "(", "v", ")", "\n", "", "return", "settings", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_pom": [[28, 83], ["POM", "POM", "POM", "print", "print", "print", "pickle.load", "pickle.load", "open", "open"], "function", ["None"], ["", "def", "load_pom", "(", "data_path", ")", ":", "\n", "# parse the input args", "\n", "    ", "class", "POM", "(", "Dataset", ")", ":", "\n", "        ", "'''\n        PyTorch Dataset for POM, don't need to change this\n        '''", "\n", "def", "__init__", "(", "self", ",", "audio", ",", "visual", ",", "text", ",", "labels", ")", ":", "\n", "            ", "self", ".", "audio", "=", "audio", "\n", "self", ".", "visual", "=", "visual", "\n", "self", ".", "text", "=", "text", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "return", "[", "self", ".", "audio", "[", "idx", ",", ":", "]", ",", "self", ".", "visual", "[", "idx", ",", ":", "]", ",", "self", ".", "text", "[", "idx", ",", ":", ",", ":", "]", ",", "self", ".", "labels", "[", "idx", "]", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "audio", ".", "shape", "[", "0", "]", "\n", "\n", "", "", "if", "sys", ".", "version_info", ".", "major", "==", "2", ":", "\n", "        ", "pom_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"pom.pkl\"", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "pom_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"pom.pkl\"", ",", "'rb'", ")", ",", "encoding", "=", "'bytes'", ")", "\n", "", "pom_train", ",", "pom_valid", ",", "pom_test", "=", "pom_data", "[", "TRAIN", "]", ",", "pom_data", "[", "VALID", "]", ",", "pom_data", "[", "TEST", "]", "\n", "\n", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", "=", "pom_train", "[", "AUDIO", "]", ",", "pom_train", "[", "VISUAL", "]", ",", "pom_train", "[", "TEXT", "]", ",", "pom_train", "[", "LABEL", "]", "\n", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", "=", "pom_valid", "[", "AUDIO", "]", ",", "pom_valid", "[", "VISUAL", "]", ",", "pom_valid", "[", "TEXT", "]", ",", "pom_valid", "[", "LABEL", "]", "\n", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", "=", "pom_test", "[", "AUDIO", "]", ",", "pom_test", "[", "VISUAL", "]", ",", "pom_test", "[", "TEXT", "]", ",", "pom_test", "[", "LABEL", "]", "\n", "\n", "# code that instantiates the Dataset objects", "\n", "train_set", "=", "POM", "(", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", ")", "\n", "valid_set", "=", "POM", "(", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", ")", "\n", "test_set", "=", "POM", "(", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", ")", "\n", "\n", "\n", "audio_dim", "=", "train_set", "[", "0", "]", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Audio feature dimension is: {}\"", ".", "format", "(", "audio_dim", ")", ")", "\n", "visual_dim", "=", "train_set", "[", "0", "]", "[", "1", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Visual feature dimension is: {}\"", ".", "format", "(", "visual_dim", ")", ")", "\n", "text_dim", "=", "train_set", "[", "0", "]", "[", "2", "]", ".", "shape", "[", "1", "]", "\n", "print", "(", "\"Text feature dimension is: {}\"", ".", "format", "(", "text_dim", ")", ")", "\n", "input_dims", "=", "(", "audio_dim", ",", "visual_dim", ",", "text_dim", ")", "\n", "\n", "# remove possible NaN values", "\n", "train_set", ".", "visual", "[", "train_set", ".", "visual", "!=", "train_set", ".", "visual", "]", "=", "0", "\n", "valid_set", ".", "visual", "[", "valid_set", ".", "visual", "!=", "valid_set", ".", "visual", "]", "=", "0", "\n", "test_set", ".", "visual", "[", "test_set", ".", "visual", "!=", "test_set", ".", "visual", "]", "=", "0", "\n", "\n", "train_set", ".", "audio", "[", "train_set", ".", "audio", "!=", "train_set", ".", "audio", "]", "=", "0", "\n", "valid_set", ".", "audio", "[", "valid_set", ".", "audio", "!=", "valid_set", ".", "audio", "]", "=", "0", "\n", "test_set", ".", "audio", "[", "test_set", ".", "audio", "!=", "test_set", ".", "audio", "]", "=", "0", "\n", "\n", "return", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_iemocap": [[84, 139], ["IEMOCAP", "IEMOCAP", "IEMOCAP", "print", "print", "print", "pickle.load", "pickle.load", "open", "open"], "function", ["None"], ["", "def", "load_iemocap", "(", "data_path", ",", "emotion", ")", ":", "\n", "# parse the input args", "\n", "    ", "class", "IEMOCAP", "(", "Dataset", ")", ":", "\n", "        ", "'''\n        PyTorch Dataset for IEMOCAP, don't need to change this\n        '''", "\n", "def", "__init__", "(", "self", ",", "audio", ",", "visual", ",", "text", ",", "labels", ")", ":", "\n", "            ", "self", ".", "audio", "=", "audio", "\n", "self", ".", "visual", "=", "visual", "\n", "self", ".", "text", "=", "text", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "return", "[", "self", ".", "audio", "[", "idx", ",", ":", "]", ",", "self", ".", "visual", "[", "idx", ",", ":", "]", ",", "self", ".", "text", "[", "idx", ",", ":", ",", ":", "]", ",", "self", ".", "labels", "[", "idx", "]", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "audio", ".", "shape", "[", "0", "]", "\n", "\n", "", "", "if", "sys", ".", "version_info", ".", "major", "==", "2", ":", "\n", "        ", "iemocap_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"iemocap.pkl\"", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "iemocap_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"iemocap.pkl\"", ",", "'rb'", ")", ",", "encoding", "=", "'bytes'", ")", "\n", "", "iemocap_train", ",", "iemocap_valid", ",", "iemocap_test", "=", "iemocap_data", "[", "emotion", "]", "[", "TRAIN", "]", ",", "iemocap_data", "[", "emotion", "]", "[", "VALID", "]", ",", "iemocap_data", "[", "emotion", "]", "[", "TEST", "]", "\n", "\n", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", "=", "iemocap_train", "[", "AUDIO", "]", ",", "iemocap_train", "[", "VISUAL", "]", ",", "iemocap_train", "[", "TEXT", "]", ",", "iemocap_train", "[", "LABEL", "]", "\n", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", "=", "iemocap_valid", "[", "AUDIO", "]", ",", "iemocap_valid", "[", "VISUAL", "]", ",", "iemocap_valid", "[", "TEXT", "]", ",", "iemocap_valid", "[", "LABEL", "]", "\n", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", "=", "iemocap_test", "[", "AUDIO", "]", ",", "iemocap_test", "[", "VISUAL", "]", ",", "iemocap_test", "[", "TEXT", "]", ",", "iemocap_test", "[", "LABEL", "]", "\n", "\n", "# code that instantiates the Dataset objects", "\n", "train_set", "=", "IEMOCAP", "(", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", ")", "\n", "valid_set", "=", "IEMOCAP", "(", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", ")", "\n", "test_set", "=", "IEMOCAP", "(", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", ")", "\n", "\n", "\n", "audio_dim", "=", "train_set", "[", "0", "]", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Audio feature dimension is: {}\"", ".", "format", "(", "audio_dim", ")", ")", "\n", "visual_dim", "=", "train_set", "[", "0", "]", "[", "1", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Visual feature dimension is: {}\"", ".", "format", "(", "visual_dim", ")", ")", "\n", "text_dim", "=", "train_set", "[", "0", "]", "[", "2", "]", ".", "shape", "[", "1", "]", "\n", "print", "(", "\"Text feature dimension is: {}\"", ".", "format", "(", "text_dim", ")", ")", "\n", "input_dims", "=", "(", "audio_dim", ",", "visual_dim", ",", "text_dim", ")", "\n", "\n", "# remove possible NaN values", "\n", "train_set", ".", "visual", "[", "train_set", ".", "visual", "!=", "train_set", ".", "visual", "]", "=", "0", "\n", "valid_set", ".", "visual", "[", "valid_set", ".", "visual", "!=", "valid_set", ".", "visual", "]", "=", "0", "\n", "test_set", ".", "visual", "[", "test_set", ".", "visual", "!=", "test_set", ".", "visual", "]", "=", "0", "\n", "\n", "train_set", ".", "audio", "[", "train_set", ".", "audio", "!=", "train_set", ".", "audio", "]", "=", "0", "\n", "valid_set", ".", "audio", "[", "valid_set", ".", "audio", "!=", "valid_set", ".", "audio", "]", "=", "0", "\n", "test_set", ".", "audio", "[", "test_set", ".", "audio", "!=", "test_set", ".", "audio", "]", "=", "0", "\n", "\n", "return", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_mosi": [[140, 203], ["print", "print", "print", "print", "MOSI", "MOSI", "MOSI", "print", "print", "print", "pickle.load", "pickle.load", "open", "open"], "function", ["None"], ["", "def", "load_mosi", "(", "data_path", ")", ":", "\n", "\n", "# parse the input args", "\n", "    ", "class", "MOSI", "(", "Dataset", ")", ":", "\n", "        ", "'''\n        PyTorch Dataset for MOSI, don't need to change this\n        '''", "\n", "\n", "def", "__init__", "(", "self", ",", "audio", ",", "visual", ",", "text", ",", "labels", ")", ":", "\n", "            ", "self", ".", "audio", "=", "audio", "\n", "self", ".", "visual", "=", "visual", "\n", "self", ".", "text", "=", "text", "\n", "self", ".", "labels", "=", "labels", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "            ", "return", "[", "self", ".", "audio", "[", "idx", ",", ":", "]", ",", "self", ".", "visual", "[", "idx", ",", ":", "]", ",", "self", ".", "text", "[", "idx", ",", ":", ",", ":", "]", ",", "self", ".", "labels", "[", "idx", "]", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "            ", "return", "self", ".", "audio", ".", "shape", "[", "0", "]", "\n", "\n", "", "", "if", "sys", ".", "version_info", ".", "major", "==", "2", ":", "\n", "        ", "mosi_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"mosi.pkl\"", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "mosi_data", "=", "pickle", ".", "load", "(", "open", "(", "data_path", "+", "\"mosi.pkl\"", ",", "'rb'", ")", ",", "encoding", "=", "'bytes'", ")", "\n", "", "mosi_train", ",", "mosi_valid", ",", "mosi_test", "=", "mosi_data", "[", "TRAIN", "]", ",", "mosi_data", "[", "VALID", "]", ",", "mosi_data", "[", "TEST", "]", "\n", "\n", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", "=", "mosi_train", "[", "AUDIO", "]", ",", "mosi_train", "[", "VISUAL", "]", ",", "mosi_train", "[", "TEXT", "]", ",", "mosi_train", "[", "LABEL", "]", "\n", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", "=", "mosi_valid", "[", "AUDIO", "]", ",", "mosi_valid", "[", "VISUAL", "]", ",", "mosi_valid", "[", "TEXT", "]", ",", "mosi_valid", "[", "LABEL", "]", "\n", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", "=", "mosi_test", "[", "AUDIO", "]", ",", "mosi_test", "[", "VISUAL", "]", ",", "mosi_test", "[", "TEXT", "]", ",", "mosi_test", "[", "LABEL", "]", "\n", "\n", "print", "(", "train_audio", ".", "shape", ")", "\n", "print", "(", "train_visual", ".", "shape", ")", "\n", "print", "(", "train_text", ".", "shape", ")", "\n", "print", "(", "train_labels", ".", "shape", ")", "\n", "\n", "# code that instantiates the Dataset objects", "\n", "train_set", "=", "MOSI", "(", "train_audio", ",", "train_visual", ",", "train_text", ",", "train_labels", ")", "\n", "valid_set", "=", "MOSI", "(", "valid_audio", ",", "valid_visual", ",", "valid_text", ",", "valid_labels", ")", "\n", "test_set", "=", "MOSI", "(", "test_audio", ",", "test_visual", ",", "test_text", ",", "test_labels", ")", "\n", "\n", "\n", "audio_dim", "=", "train_set", "[", "0", "]", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Audio feature dimension is: {}\"", ".", "format", "(", "audio_dim", ")", ")", "\n", "visual_dim", "=", "train_set", "[", "0", "]", "[", "1", "]", ".", "shape", "[", "0", "]", "\n", "print", "(", "\"Visual feature dimension is: {}\"", ".", "format", "(", "visual_dim", ")", ")", "\n", "text_dim", "=", "train_set", "[", "0", "]", "[", "2", "]", ".", "shape", "[", "1", "]", "\n", "print", "(", "\"Text feature dimension is: {}\"", ".", "format", "(", "text_dim", ")", ")", "\n", "input_dims", "=", "(", "audio_dim", ",", "visual_dim", ",", "text_dim", ")", "\n", "\n", "# remove possible NaN values", "\n", "train_set", ".", "visual", "[", "train_set", ".", "visual", "!=", "train_set", ".", "visual", "]", "=", "0", "\n", "valid_set", ".", "visual", "[", "valid_set", ".", "visual", "!=", "valid_set", ".", "visual", "]", "=", "0", "\n", "test_set", ".", "visual", "[", "test_set", ".", "visual", "!=", "test_set", ".", "visual", "]", "=", "0", "\n", "\n", "train_set", ".", "audio", "[", "train_set", ".", "audio", "!=", "train_set", ".", "audio", "]", "=", "0", "\n", "valid_set", ".", "audio", "[", "valid_set", ".", "audio", "!=", "valid_set", ".", "audio", "]", "=", "0", "\n", "test_set", ".", "audio", "[", "test_set", ".", "audio", "!=", "test_set", ".", "audio", "]", "=", "0", "\n", "\n", "\n", "return", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "\n", "", ""]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_pom.display": [[17, 21], ["print", "print", "print"], "function", ["None"], ["def", "display", "(", "mae", ",", "corr", ",", "mult_acc", ")", ":", "\n", "    ", "print", "(", "\"MAE on test set is {}\"", ".", "format", "(", "mae", ")", ")", "\n", "print", "(", "\"Correlation w.r.t human evaluation on test set is {}\"", ".", "format", "(", "corr", ")", ")", "\n", "print", "(", "\"Multiclass accuracy on test set is {}\"", ".", "format", "(", "mult_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_pom.main": [[22, 257], ["print", "os.path.join", "os.path.join", "print", "print", "os.makedirs", "os.makedirs", "utils.load_pom", "dict", "utils.total", "print", "set", "range", "os.path.dirname", "os.path.dirname", "open", "csv.writer", "csv.writer.writerow", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "model.LMF", "print", "torch.L1Loss", "torch.Adam", "float", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "set.add", "model.cuda.cuda", "list", "list", "model.cuda.train", "model.cuda.zero_grad", "print", "numpy.isnan", "model.cuda.eval", "torch.autograd.Variable.cpu().data.numpy().reshape", "numpy.isnan", "print", "print", "torch.load", "torch.load", "torch.load", "torch.load.eval", "best_model.cpu().data.numpy().reshape", "torch.autograd.Variable.cpu().data.numpy().reshape", "numpy.mean", "train_pom.display", "results.extend", "results.extend", "results.extend", "model.cuda.parameters", "model.cuda.parameters", "len", "len", "model.cuda.zero_grad", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.L1Loss.", "criterion.backward", "optim.Adam.step", "print", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "model.cuda.", "nn.L1Loss.", "print", "len", "torch.save", "torch.save", "torch.save", "print", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.load.", "nn.L1Loss.", "numpy.absolute", "round", "round", "round", "float.cpu().data.numpy", "open", "csv.writer", "csv.writer.writerow", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "float", "len", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "float", "torch.autograd.Variable.cpu().data.numpy", "x[].float().type", "x[].float().type", "x[].float().type", "batch[].view().float().type", "float", "best_model.cpu().data.numpy", "torch.autograd.Variable.cpu().data.numpy", "xrange", "xrange", "sum", "float", "x[].float", "x[].float", "x[].float", "batch[].view().float", "x[].float", "x[].float", "x[].float", "batch[].view().float", "x[].float", "x[].float", "x[].float", "batch[].view().float", "numpy.corrcoef", "len", "float.cpu", "torch.autograd.Variable.cpu", "best_model.cpu", "torch.autograd.Variable.cpu", "numpy.round", "numpy.round", "batch[].view", "batch[].view", "batch[].view"], "function", ["home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.load_pom", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.utils.total", "home.repos.pwc.inspect_result.Justin1904_Low-rank-Multimodal-Fusion.None.train_pom.display"], ["", "def", "main", "(", "options", ")", ":", "\n", "    ", "DTYPE", "=", "torch", ".", "FloatTensor", "\n", "\n", "# parse the input args", "\n", "run_id", "=", "options", "[", "'run_id'", "]", "\n", "epochs", "=", "options", "[", "'epochs'", "]", "\n", "data_path", "=", "options", "[", "'data_path'", "]", "\n", "model_path", "=", "options", "[", "'model_path'", "]", "\n", "output_path", "=", "options", "[", "'output_path'", "]", "\n", "signiture", "=", "options", "[", "'signiture'", "]", "\n", "patience", "=", "options", "[", "'patience'", "]", "\n", "output_dim", "=", "options", "[", "'output_dim'", "]", "\n", "\n", "print", "(", "\"Training initializing... Setup ID is: {}\"", ".", "format", "(", "run_id", ")", ")", "\n", "\n", "# prepare the paths for storing models and outputs", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "\n", "model_path", ",", "\"model_{}_{}.pt\"", ".", "format", "(", "signiture", ",", "run_id", ")", ")", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "\n", "output_path", ",", "\"results_{}_{}.csv\"", ".", "format", "(", "signiture", ",", "run_id", ")", ")", "\n", "print", "(", "\"Temp location for models: {}\"", ".", "format", "(", "model_path", ")", ")", "\n", "print", "(", "\"Grid search results are in: {}\"", ".", "format", "(", "output_path", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "output_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "model_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "\n", "train_set", ",", "valid_set", ",", "test_set", ",", "input_dims", "=", "load_pom", "(", "data_path", ")", "\n", "\n", "params", "=", "dict", "(", ")", "\n", "params", "[", "'audio_hidden'", "]", "=", "[", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'video_hidden'", "]", "=", "[", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'text_hidden'", "]", "=", "[", "64", ",", "128", ",", "256", "]", "\n", "params", "[", "'audio_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'video_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'text_dropout'", "]", "=", "[", "0", ",", "0.1", ",", "0.15", ",", "0.2", ",", "0.3", ",", "0.5", "]", "\n", "params", "[", "'factor_learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'learning_rate'", "]", "=", "[", "0.0003", ",", "0.0005", ",", "0.001", ",", "0.003", "]", "\n", "params", "[", "'rank'", "]", "=", "[", "1", ",", "4", ",", "8", ",", "16", "]", "\n", "params", "[", "'batch_size'", "]", "=", "[", "4", ",", "8", ",", "16", ",", "32", ",", "64", ",", "128", "]", "\n", "params", "[", "'weight_decay'", "]", "=", "[", "0", ",", "0.001", ",", "0.002", ",", "0.01", "]", "\n", "\n", "total_settings", "=", "total", "(", "params", ")", "\n", "\n", "print", "(", "\"There are {} different hyper-parameter settings in total.\"", ".", "format", "(", "total_settings", ")", ")", "\n", "\n", "seen_settings", "=", "set", "(", ")", "\n", "\n", "with", "open", "(", "output_path", ",", "'w+'", ")", "as", "out", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "[", "\"audio_hidden\"", ",", "\"video_hidden\"", ",", "'text_hidden'", ",", "'audio_dropout'", ",", "'video_dropout'", ",", "'text_dropout'", ",", "\n", "'factor_learning_rate'", ",", "'learning_rate'", ",", "'rank'", ",", "'batch_size'", ",", "'weight_decay'", ",", "'Best Validation MAE'", ",", "\n", "\n", "'Confidence accuracy'", ",", "\n", "'Passionate accuracy'", ",", "\n", "'Pleasant accuracy'", ",", "\n", "'Dominant accuracy'", ",", "\n", "'Credible accuracy'", ",", "\n", "'Vivid accuracy'", ",", "\n", "'Expertise accuracy'", ",", "\n", "'Entertaining accuracy'", ",", "\n", "'Reserved accuracy'", ",", "\n", "'Trusting accuracy'", ",", "\n", "'Relaxed accuracy'", ",", "\n", "'Outgoing accuracy'", ",", "\n", "'Thorough accuracy'", ",", "\n", "'Nervous accuracy'", ",", "\n", "'Persuasive accuracy'", ",", "\n", "'Humorous accuracy'", ",", "\n", "\n", "'Confidence MAE'", ",", "\n", "'Passionate MAE'", ",", "\n", "'Pleasant MAE'", ",", "\n", "'Dominant MAE'", ",", "\n", "'Credible MAE'", ",", "\n", "'Vivid MAE'", ",", "\n", "'Expertise MAE'", ",", "\n", "'Entertaining MAE'", ",", "\n", "'Reserved MAE'", ",", "\n", "'Trusting MAE'", ",", "\n", "'Relaxed MAE'", ",", "\n", "'Outgoing MAE'", ",", "\n", "'Thorough MAE'", ",", "\n", "'Nervous MAE'", ",", "\n", "'Persuasive MAE'", ",", "\n", "'Humorous MAE'", ",", "\n", "\n", "'Confidence corr'", ",", "\n", "'Passionate corr'", ",", "\n", "'Pleasant corr'", ",", "\n", "'Dominant corr'", ",", "\n", "'Credible corr'", ",", "\n", "'Vivid corr'", ",", "\n", "'Expertise corr'", ",", "\n", "'Entertaining corr'", ",", "\n", "'Reserved corr'", ",", "\n", "'Trusting corr'", ",", "\n", "'Relaxed corr'", ",", "\n", "'Outgoing corr'", ",", "\n", "'Thorough corr'", ",", "\n", "'Nervous corr'", ",", "\n", "'Persuasive corr'", ",", "\n", "'Humorous corr'", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "total_settings", ")", ":", "\n", "\n", "        ", "ahid", "=", "random", ".", "choice", "(", "params", "[", "'audio_hidden'", "]", ")", "\n", "vhid", "=", "random", ".", "choice", "(", "params", "[", "'video_hidden'", "]", ")", "\n", "thid", "=", "random", ".", "choice", "(", "params", "[", "'text_hidden'", "]", ")", "\n", "thid_2", "=", "thid", "//", "2", "\n", "adr", "=", "random", ".", "choice", "(", "params", "[", "'audio_dropout'", "]", ")", "\n", "vdr", "=", "random", ".", "choice", "(", "params", "[", "'video_dropout'", "]", ")", "\n", "tdr", "=", "random", ".", "choice", "(", "params", "[", "'text_dropout'", "]", ")", "\n", "factor_lr", "=", "random", ".", "choice", "(", "params", "[", "'factor_learning_rate'", "]", ")", "\n", "lr", "=", "random", ".", "choice", "(", "params", "[", "'learning_rate'", "]", ")", "\n", "r", "=", "random", ".", "choice", "(", "params", "[", "'rank'", "]", ")", "\n", "batch_sz", "=", "random", ".", "choice", "(", "params", "[", "'batch_size'", "]", ")", "\n", "decay", "=", "random", ".", "choice", "(", "params", "[", "'weight_decay'", "]", ")", "\n", "\n", "# reject the setting if it has been tried", "\n", "current_setting", "=", "(", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ")", "\n", "if", "current_setting", "in", "seen_settings", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "seen_settings", ".", "add", "(", "current_setting", ")", "\n", "\n", "", "model", "=", "LMF", "(", "input_dims", ",", "(", "ahid", ",", "vhid", ",", "thid", ")", ",", "thid_2", ",", "(", "adr", ",", "vdr", ",", "tdr", ",", "0.5", ")", ",", "output_dim", ",", "r", ")", "\n", "if", "options", "[", "'cuda'", "]", ":", "\n", "            ", "model", "=", "model", ".", "cuda", "(", ")", "\n", "DTYPE", "=", "torch", ".", "cuda", ".", "FloatTensor", "\n", "", "print", "(", "\"Model initialized\"", ")", "\n", "criterion", "=", "nn", ".", "L1Loss", "(", "size_average", "=", "False", ")", "\n", "factors", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", ":", "3", "]", "\n", "other", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "[", "3", ":", "]", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "[", "{", "\"params\"", ":", "factors", ",", "\"lr\"", ":", "factor_lr", "}", ",", "{", "\"params\"", ":", "other", ",", "\"lr\"", ":", "lr", "}", "]", ",", "weight_decay", "=", "decay", ")", "# don't optimize the first 2 params, they should be fixed (output_range and shift)", "\n", "\n", "# setup training", "\n", "complete", "=", "True", "\n", "min_valid_loss", "=", "float", "(", "'Inf'", ")", "\n", "train_iterator", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "batch_sz", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "valid_iterator", "=", "DataLoader", "(", "valid_set", ",", "batch_size", "=", "len", "(", "valid_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "test_iterator", "=", "DataLoader", "(", "test_set", ",", "batch_size", "=", "len", "(", "test_set", ")", ",", "num_workers", "=", "4", ",", "shuffle", "=", "True", ")", "\n", "curr_patience", "=", "patience", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "model", ".", "train", "(", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "avg_train_loss", "=", "0.0", "\n", "for", "batch", "in", "train_iterator", ":", "\n", "                ", "model", ".", "zero_grad", "(", ")", "\n", "\n", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "avg_loss", "=", "loss", ".", "data", "[", "0", "]", "/", "float", "(", "output_dim", ")", "\n", "avg_train_loss", "+=", "avg_loss", "/", "len", "(", "train_set", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "\"Epoch {} complete! Average Training loss: {}\"", ".", "format", "(", "e", ",", "avg_train_loss", ")", ")", "\n", "\n", "# Terminate the training process if run into NaN", "\n", "if", "np", ".", "isnan", "(", "avg_train_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "valid_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output", "=", "model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "valid_loss", "=", "criterion", "(", "output", ",", "y", ")", "\n", "avg_valid_loss", "=", "valid_loss", ".", "data", "[", "0", "]", "/", "float", "(", "output_dim", ")", "\n", "", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "if", "np", ".", "isnan", "(", "avg_valid_loss", ")", ":", "\n", "                ", "print", "(", "\"Training got into NaN values...\\n\\n\"", ")", "\n", "complete", "=", "False", "\n", "break", "\n", "\n", "\n", "", "avg_valid_loss", "=", "avg_valid_loss", "/", "len", "(", "valid_set", ")", "\n", "print", "(", "\"Validation loss is: {}\"", ".", "format", "(", "avg_valid_loss", ")", ")", "\n", "\n", "if", "(", "avg_valid_loss", "<", "min_valid_loss", ")", ":", "\n", "                ", "curr_patience", "=", "patience", "\n", "min_valid_loss", "=", "avg_valid_loss", "\n", "torch", ".", "save", "(", "model", ",", "model_path", ")", "\n", "print", "(", "\"Found new best model, saving to disk...\"", ")", "\n", "", "else", ":", "\n", "                ", "curr_patience", "-=", "1", "\n", "\n", "", "if", "curr_patience", "<=", "0", ":", "\n", "                ", "break", "\n", "", "print", "(", "\"\\n\\n\"", ")", "\n", "\n", "", "if", "complete", ":", "\n", "\n", "            ", "best_model", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "best_model", ".", "eval", "(", ")", "\n", "for", "batch", "in", "test_iterator", ":", "\n", "                ", "x", "=", "batch", "[", ":", "-", "1", "]", "\n", "x_a", "=", "Variable", "(", "x", "[", "0", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_v", "=", "Variable", "(", "x", "[", "1", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "x_t", "=", "Variable", "(", "x", "[", "2", "]", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "y", "=", "Variable", "(", "batch", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "output_dim", ")", ".", "float", "(", ")", ".", "type", "(", "DTYPE", ")", ",", "requires_grad", "=", "False", ")", "\n", "output_test", "=", "best_model", "(", "x_a", ",", "x_v", ",", "x_t", ")", "\n", "loss_test", "=", "criterion", "(", "output_test", ",", "y", ")", "\n", "test_loss", "=", "loss_test", ".", "data", "[", "0", "]", "\n", "avg_test_loss", "=", "test_loss", "/", "float", "(", "output_dim", ")", "\n", "", "output_test", "=", "output_test", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "y", "=", "y", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "output_dim", ")", "\n", "\n", "# these are the needed metrics", "\n", "mae", "=", "np", ".", "mean", "(", "np", ".", "absolute", "(", "output_test", "-", "y", ")", ",", "axis", "=", "0", ")", "\n", "mae", "=", "[", "round", "(", "a", ",", "3", ")", "for", "a", "in", "mae", "]", "\n", "corr", "=", "[", "round", "(", "np", ".", "corrcoef", "(", "output_test", "[", ":", ",", "i", "]", ",", "y", "[", ":", ",", "i", "]", ")", "[", "0", "]", "[", "1", "]", ",", "3", ")", "for", "i", "in", "xrange", "(", "y", ".", "shape", "[", "1", "]", ")", "]", "\n", "mult_acc", "=", "[", "round", "(", "sum", "(", "np", ".", "round", "(", "output_test", "[", ":", ",", "i", "]", ")", "==", "np", ".", "round", "(", "y", "[", ":", ",", "i", "]", ")", ")", "/", "float", "(", "len", "(", "y", ")", ")", ",", "3", ")", "for", "i", "in", "xrange", "(", "y", ".", "shape", "[", "1", "]", ")", "]", "\n", "\n", "display", "(", "mae", ",", "corr", ",", "mult_acc", ")", "\n", "\n", "results", "=", "[", "ahid", ",", "vhid", ",", "thid", ",", "adr", ",", "vdr", ",", "tdr", ",", "factor_lr", ",", "lr", ",", "r", ",", "batch_sz", ",", "decay", ",", "min_valid_loss", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "]", "\n", "\n", "results", ".", "extend", "(", "mult_acc", ")", "\n", "results", ".", "extend", "(", "mae", ")", "\n", "results", ".", "extend", "(", "corr", ")", "\n", "\n", "with", "open", "(", "output_path", ",", "'a+'", ")", "as", "out", ":", "\n", "                ", "writer", "=", "csv", ".", "writer", "(", "out", ")", "\n", "writer", ".", "writerow", "(", "results", ")", "\n", "\n"]]}