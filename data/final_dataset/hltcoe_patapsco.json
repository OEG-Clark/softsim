{"home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.pre_giza.main": [[6, 14], ["args.output_dir.mkdir", "util.pbar", "zip", "args.filea.open", "args.fileb.open", "fwa.write", "fwb.write", "linea.strip", "lineb.strip"], "function", ["None"], ["def", "main", "(", "args", ")", ":", "\n", "    ", "args", ".", "output_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "with", "(", "args", ".", "output_dir", "/", "f\"tok{args.filea.suffix}\"", ")", ".", "open", "(", "'w'", ")", "as", "fwa", ",", "(", "args", ".", "output_dir", "/", "f\"tok{args.fileb.suffix}\"", ")", ".", "open", "(", "'w'", ")", "as", "fwb", ":", "\n", "        ", "for", "linea", ",", "lineb", "in", "pbar", "(", "zip", "(", "args", ".", "filea", ".", "open", "(", ")", ",", "args", ".", "fileb", ".", "open", "(", ")", ")", ",", "total", "=", "args", ".", "n_lines", ")", ":", "\n", "            ", "if", "linea", ".", "strip", "(", ")", "!=", "\"\"", "and", "lineb", ".", "strip", "(", ")", "!=", "\"\"", ":", "\n", "                ", "fwa", ".", "write", "(", "linea", ")", "\n", "fwb", ".", "write", "(", "lineb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.postprocessing.work": [[9, 18], ["s.assign.sort_values", "s.assign.assign", "s.assign.prob.cumsum", "s.assign.prob.sum", "s.assign.prob.sum"], "function", ["None"], ["def", "work", "(", "s", ",", "prob_cutoff", ",", "cdf_cutoff", ",", "max_translation", ",", "no_normalize", ")", ":", "\n", "    ", "s", "=", "s", ".", "sort_values", "(", "'prob'", ")", "[", ":", ":", "-", "1", "]", "\n", "s", "=", "s", "[", "s", ".", "prob", ">=", "prob_cutoff", "]", "\n", "s", "=", "s", "[", "s", ".", "prob", ".", "cumsum", "(", ")", "/", "s", ".", "prob", ".", "sum", "(", ")", "<=", "cdf_cutoff", "]", "\n", "if", "max_translation", ">", "0", ":", "\n", "        ", "s", "=", "s", "[", ":", "max_translation", "]", "\n", "", "if", "not", "no_normalize", ":", "\n", "        ", "s", "=", "s", ".", "assign", "(", "prob", "=", "s", ".", "prob", "/", "s", ".", "prob", ".", "sum", "(", ")", ")", "\n", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.postprocessing.main": [[19, 44], ["args.output_file.exists", "collections.defaultdict", "util.pbar", "util.pbar", "print", "json.dump", "print", "args.lex_file.open", "line.strip().split.strip().split", "float", "s.to_dict", "args.output_file.open", "FileExistsError", "pandas.Series().sort_values", "line.strip().split.strip", "s.sum", "pandas.Series", "s.cumsum", "s.sum"], "function", ["None"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "output_file", ".", "exists", "(", ")", ":", "\n", "        ", "if", "not", "args", ".", "overwrite", ":", "\n", "            ", "raise", "FileExistsError", "(", "args", ".", "output_file", ")", "\n", "", "print", "(", "f\"Will overwrite output file `{args.output_file}`.\"", ")", "\n", "\n", "", "table", "=", "defaultdict", "(", "dict", ")", "\n", "for", "line", "in", "pbar", "(", "args", ".", "lex_file", ".", "open", "(", ")", ",", "desc", "=", "'loading'", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\" \"", ")", "\n", "table", "[", "line", "[", "0", "]", "]", "[", "line", "[", "1", "]", "]", "=", "float", "(", "line", "[", "2", "]", ")", "\n", "\n", "", "for", "eng", "in", "pbar", "(", "table", ",", "desc", "=", "'trimming'", ")", ":", "\n", "        ", "s", "=", "pd", ".", "Series", "(", "table", "[", "eng", "]", ")", ".", "sort_values", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "if", "args", ".", "min_prob", ">", "0.", ":", "\n", "            ", "s", "=", "s", "[", "s", ">=", "args", ".", "min_prob", "]", "\n", "", "if", "args", ".", "cdf_cutoff", "<", "1.0", ":", "\n", "            ", "s", "=", "s", "[", "s", ".", "cumsum", "(", ")", "/", "s", ".", "sum", "(", ")", "<=", "args", ".", "cdf_cutoff", "]", "\n", "", "if", "args", ".", "max_translation", ">", "0", ":", "\n", "            ", "s", "=", "s", "[", ":", "args", ".", "max_translation", "]", "\n", "", "if", "not", "args", ".", "no_normalize", ":", "\n", "            ", "s", "=", "s", "/", "s", ".", "sum", "(", ")", "\n", "", "table", "[", "eng", "]", "=", "s", ".", "to_dict", "(", ")", "\n", "\n", "", "print", "(", "f\"Writing table to file `{args.output_file}`...\"", ")", "\n", "json", ".", "dump", "(", "table", ",", "args", ".", "output_file", ".", "open", "(", "'w'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.RawBitextProcessor.__init__": [[24, 26], ["patapsco.text.TextProcessor.__init__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "None", ",", "config", ",", "lang_map", "[", "config", ".", "lang", "]", ")", "# omit the path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.RawBitextProcessor.process": [[27, 36], ["preprocess.RawBitextProcessor.replace", "preprocess.RawBitextProcessor.pre_normalize", "preprocess.RawBitextProcessor.tokenize", "preprocess.RawBitextProcessor.identify_stop_words", "preprocess.RawBitextProcessor.stem", "preprocess.RawBitextProcessor.remove_stop_words", "preprocess.RawBitextProcessor.post_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "process", "(", "self", ",", "text", ")", ":", "\n", "        ", "text", "=", "text", ".", "replace", "(", "'\\t'", ",", "' '", ")", "\n", "text", "=", "self", ".", "pre_normalize", "(", "text", ")", "\n", "tokens", "=", "self", ".", "tokenize", "(", "text", ")", "\n", "stopword_indices", "=", "self", ".", "identify_stop_words", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "stem", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "remove_stop_words", "(", "tokens", ",", "stopword_indices", ")", "\n", "\n", "return", "self", ".", "post_normalize", "(", "' '", ".", "join", "(", "tokens", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.get_flags": [[37, 39], ["None"], "function", ["None"], ["", "", "def", "get_flags", "(", "args", ")", ":", "\n", "    ", "return", "f\"{args.tokenize}-{args.stem if args.stem else 'nostem'}\"", "f\"{'-lower' if args.lowercase else ''}\""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.worker": [[42, 59], ["preprocess.RawBitextProcessor", "RawBitextProcessor.begin", "temp_file.exists", "print", "temp_file.open", "util.pbar", "sum", "len", "fw.write", "preprocess.RawBitextProcessor.process", "temp_file.open"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "worker", "(", "args", ",", "info", ")", ":", "\n", "    ", "wid", ",", "temp_file", ",", "raw_text", "=", "info", "\n", "# wid, temp_file, start, end = info", "\n", "\n", "processor", "=", "RawBitextProcessor", "(", "args", ")", "\n", "processor", ".", "begin", "(", ")", "\n", "main_proc", "=", "(", "wid", "<", "1", ")", "\n", "\n", "# fast forward", "\n", "if", "args", ".", "resume", "and", "temp_file", ".", "exists", "(", ")", "and", "sum", "(", "1", "for", "_", "in", "temp_file", ".", "open", "(", ")", ")", "==", "len", "(", "raw_text", ")", ":", "\n", "        ", "print", "(", "f\"Skipping task {wid}.\"", ")", "\n", "return", "\n", "\n", "", "with", "temp_file", ".", "open", "(", "'a'", "if", "wid", "==", "-", "1", "else", "'w'", ")", "as", "fw", ":", "\n", "        ", "for", "line", "in", "pbar", "(", "raw_text", ",", "desc", "=", "'Worker 0'", ",", "disable", "=", "not", "(", "main_proc", ")", ")", ":", "\n", "            ", "fw", ".", "write", "(", "processor", ".", "process", "(", "line", ")", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.main": [[62, 109], ["argparse.Namespace", "args.output_path.mkdir", "output_file.exists", "len", "print", "functools.partial", "shutil.copy", "temp_file.unlink", "args.raw_text.exists", "FileNotFoundError", "FileExistsError", "l.strip", "functools.partial.", "list", "util.pbar", "temp_file.parent.glob", "multiprocessing.Pool", "pool.map", "temp_file.open", "util.pbar", "preprocess.get_flags", "args.raw_text.open", "len", "len", "range", "util.pbar", "fw.write", "range"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.map", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.preprocess.get_flags"], ["", "", "", "def", "main", "(", "args", ")", ":", "\n", "    ", "args", ".", "normalize", "=", "argparse", ".", "Namespace", "(", "lowercase", "=", "args", ".", "lowercase", ")", "\n", "args", ".", "stopwords", "=", "'lucene'", "if", "args", ".", "rm_stopwords", "else", "False", "\n", "args", ".", "model_path", "=", "None", "\n", "\n", "if", "not", "args", ".", "raw_text", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "f\"Raw text file {args.raw_text} does not exists.\"", ")", "\n", "\n", "", "args", ".", "output_path", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "output_file", "=", "args", ".", "output_path", "/", "f\"{args.raw_text.stem}.tok.{get_flags(args)}.{args.lang}\"", "\n", "\n", "if", "output_file", ".", "exists", "(", ")", ":", "\n", "        ", "raise", "FileExistsError", "(", "f\"Output file {output_file} exists. The run have already finished.\"", ")", "\n", "\n", "", "temp_file", "=", "output_file", ".", "parent", "/", "f\"{output_file.name}.writing\"", "\n", "\n", "all_raw_text", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "pbar", "(", "args", ".", "raw_text", ".", "open", "(", "newline", "=", "'\\n'", ")", ",", "desc", "=", "'reading text'", ")", "]", "\n", "end", "=", "len", "(", "all_raw_text", ")", "\n", "print", "(", "f\"Total {end} lines\"", ")", "\n", "\n", "worker_", "=", "partial", "(", "worker", ",", "args", ")", "\n", "if", "args", ".", "nworker", "==", "1", ":", "\n", "        ", "worker_", "(", "(", "-", "1", ",", "temp_file", ",", "all_raw_text", ")", ")", "\n", "", "else", ":", "\n", "# sanity check for number of workers when resuming", "\n", "        ", "existing_temps", "=", "list", "(", "temp_file", ".", "parent", ".", "glob", "(", "f\"{temp_file.name}.*\"", ")", ")", "\n", "if", "args", ".", "resume", "and", "len", "(", "existing_temps", ")", ">", "0", ":", "\n", "            ", "assert", "len", "(", "existing_temps", ")", "==", "args", ".", "nworker", ",", "\"Number of workers does not align with the temp files being resumed. \"", "\"This will create misalignment of the bitext. \"", "\n", "\n", "", "line_per_worker", "=", "end", "//", "args", ".", "nworker", "+", "1", "\n", "with", "Pool", "(", "args", ".", "nworker", ")", "as", "pool", ":", "\n", "            ", "pool", ".", "map", "(", "worker_", ",", "[", "\n", "(", "wid", ",", "temp_file", ".", "parent", "/", "f\"{temp_file.name}.{wid}\"", ",", "\n", "all_raw_text", "[", "wid", "*", "line_per_worker", ":", "(", "wid", "+", "1", ")", "*", "line_per_worker", "]", ")", "\n", "for", "wid", "in", "range", "(", "args", ".", "nworker", ")", "\n", "]", ")", "\n", "# combining ", "\n", "", "with", "temp_file", ".", "open", "(", "'a'", ")", "as", "fw", ":", "\n", "            ", "for", "wid", "in", "pbar", "(", "range", "(", "args", ".", "nworker", ")", ",", "desc", "=", "'Combining files'", ")", ":", "\n", "                ", "for", "rl", "in", "pbar", "(", "(", "temp_file", ".", "parent", "/", "f\"{temp_file.name}.{wid}\"", ")", ".", "open", "(", ")", ",", "total", "=", "line_per_worker", ")", ":", "\n", "                    ", "fw", ".", "write", "(", "rl", ")", "\n", "", "(", "temp_file", ".", "parent", "/", "f\"{temp_file.name}.{wid}\"", ")", ".", "unlink", "(", ")", "\n", "\n", "", "", "", "shutil", ".", "copy", "(", "temp_file", ",", "output_file", ")", "\n", "temp_file", ".", "unlink", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._avg_speed_str": [[9, 15], ["time.time"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time"], ["", "def", "_avg_speed_str", "(", "start", ",", "i", ")", ":", "\n", "    ", "speed", "=", "(", "time", ".", "time", "(", ")", "-", "start", ")", "/", "(", "i", "+", "1", ")", "\n", "if", "speed", ">", "1", ":", "\n", "        ", "return", "f\"{speed:.4f}s/it\"", "\n", "", "else", ":", "\n", "        ", "return", "f\"{1/speed:.2f}it/s\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._interval": [[16, 23], ["int"], "function", ["None"], ["", "", "def", "_interval", "(", "delta_sec", ")", ":", "\n", "    ", "hours", ",", "mins", ",", "secs", "=", "0", ",", "0", ",", "int", "(", "delta_sec", ")", "\n", "if", "secs", ">", "60", ":", "\n", "        ", "mins", ",", "secs", "=", "secs", "//", "60", ",", "secs", "%", "60", "\n", "", "if", "mins", ">", "60", ":", "\n", "        ", "hours", ",", "mins", "=", "mins", "//", "60", ",", "mins", "%", "60", "\n", "", "return", "f\"{hours:d}:{mins:02d}:{secs:02d}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._eta": [[24, 31], ["time.time", "util._interval", "util._interval", "util._interval"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._interval", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._interval", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._interval"], ["", "def", "_eta", "(", "start", ",", "i", ",", "total", "=", "None", ")", ":", "\n", "    ", "since", "=", "time", ".", "time", "(", ")", "-", "start", "\n", "if", "total", "is", "None", ":", "\n", "        ", "return", "_interval", "(", "since", ")", "\n", "\n", "", "remain", "=", "(", "total", "-", "i", "-", "1", ")", "*", "since", "/", "(", "i", "+", "1", ")", "\n", "return", "f\"{_interval(since)}<{_interval(remain)}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._pbar": [[32, 56], ["hasattr", "len", "enumerate", "print", "str", "time.time", "len", "print", "time.time", "str", "time.time", "util._eta", "util._avg_speed_str"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._eta", "home.repos.pwc.inspect_result.hltcoe_patapsco.translation-table.util._avg_speed_str"], ["", "def", "_pbar", "(", "it", ",", "desc", "=", "None", ",", "total", "=", "None", ",", "disable", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "total", "is", "None", "and", "hasattr", "(", "it", ",", "'__len__'", ")", ":", "\n", "        ", "total", "=", "len", "(", "it", ")", "\n", "", "format", "=", "f\"%{len(str(total)) if total else ''}d\"", "\n", "if", "desc", ":", "\n", "        ", "format", "=", "f\"{desc}: \"", "+", "format", "\n", "", "if", "total", ":", "\n", "        ", "format", "=", "format", "+", "\"/\"", "+", "str", "(", "total", ")", "\n", "\n", "", "start", "=", "None", "\n", "try", ":", "\n", "        ", "for", "i", ",", "e", "in", "enumerate", "(", "it", ")", ":", "\n", "            ", "now", "=", "time", ".", "time", "(", ")", "\n", "if", "start", "is", "None", ":", "\n", "                ", "start", "=", "now", "\n", "last_displayed", "=", "start", "\n", "", "yield", "e", "\n", "if", "not", "disable", "and", "(", "time", ".", "time", "(", ")", "-", "last_displayed", ">", "0.5", "or", "i", "==", "0", ")", ":", "\n", "                ", "print", "(", "'\\r'", "+", "format", "%", "(", "i", "+", "1", ")", "+", "\n", "f\" [{_eta(start, i, total)}, {_avg_speed_str(start, i)}]\"", ",", "\n", "end", "=", "''", ")", "\n", "last_displayed", "=", "time", ".", "time", "(", ")", "\n", "", "", "", "finally", ":", "\n", "        ", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.setup_method": [[16, 23], ["pathlib.Path", "next", "patapsco.results.JsonResultsReader", "tempfile.mkdtemp", "patapsco.util.formats.parse_qrels"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_qrels"], ["def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "self", ".", "scores_path", "=", "self", ".", "temp_dir", "/", "'scores.txt'", "\n", "self", ".", "qrels_path", "=", "self", ".", "directory", "/", "'qrels.txt'", "\n", "self", ".", "results_path", "=", "self", ".", "directory", "/", "'results.txt'", "\n", "self", ".", "qrels_data", "=", "next", "(", "parse_qrels", "(", "self", ".", "qrels_path", ")", ")", "\n", "self", ".", "results_iter", "=", "JsonResultsReader", "(", "self", ".", "results_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.teardown_method": [[24, 26], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer": [[27, 30], ["patapsco.schema.ScoreInputConfig", "Scorer", "str"], "methods", ["None"], ["", "def", "create_scorer", "(", "self", ",", "metrics", ")", ":", "\n", "        ", "config", "=", "ScoreInputConfig", "(", "path", "=", "str", "(", "self", ".", "qrels_path", ")", ")", "\n", "return", "Scorer", "(", "config", ",", "metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_at_symbol_mapping": [[31, 35], ["test_scorer.TestScorer.create_scorer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer"], ["", "def", "test_at_symbol_mapping", "(", "self", ")", ":", "\n", "        ", "scorer", "=", "self", ".", "create_scorer", "(", "[", "'map'", ",", "'P@20'", "]", ")", "\n", "assert", "scorer", ".", "metrics", "[", "0", "]", "==", "\"map\"", "\n", "assert", "scorer", ".", "metrics", "[", "1", "]", "==", "\"P_20\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_ndcg_prime_standardization": [[36, 40], ["test_scorer.TestScorer.create_scorer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer"], ["", "def", "test_ndcg_prime_standardization", "(", "self", ")", ":", "\n", "        ", "scorer", "=", "self", ".", "create_scorer", "(", "[", "'map'", ",", "\"ndcg'\"", "]", ")", "\n", "assert", "scorer", ".", "metrics", "[", "0", "]", "==", "\"map\"", "\n", "assert", "scorer", ".", "metrics", "[", "1", "]", "==", "\"ndcg_prime\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_unknown_metric": [[41, 44], ["pytest.raises", "test_scorer.TestScorer.create_scorer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer"], ["", "def", "test_unknown_metric", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "self", ".", "create_scorer", "(", "[", "\"ndcgg\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_pytrec_eval": [[45, 55], ["test_scorer.TestScorer.create_scorer", "test_scorer.TestScorer.score", "test_scorer.TestScorer.scores_path.read_text().split", "test_scorer.TestScorer.scores_path.read_text", "data[].split", "data[].split", "data[].split"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer.score"], ["", "", "def", "test_pytrec_eval", "(", "self", ")", ":", "\n", "# score the results", "\n", "        ", "scorer", "=", "self", ".", "create_scorer", "(", "[", "'map'", ",", "'ndcg'", ",", "'recall@100'", "]", ")", "\n", "scorer", ".", "score", "(", "self", ".", "results_path", ",", "self", ".", "scores_path", ")", "\n", "\n", "# check that the scores.txt file is correct", "\n", "data", "=", "self", ".", "scores_path", ".", "read_text", "(", ")", ".", "split", "(", "\"\\n\"", ")", "\n", "assert", "data", "[", "0", "]", ".", "split", "(", ")", "[", "0", "]", "==", "'map'", "\n", "assert", "data", "[", "1", "]", ".", "split", "(", ")", "[", "0", "]", "==", "'ndcg'", "\n", "assert", "data", "[", "2", "]", ".", "split", "(", ")", "[", "0", "]", "==", "'recall_100'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_ndcg_prime": [[56, 62], ["test_scorer.TestScorer.create_scorer", "test_scorer.TestScorer._calc_ndcg_prime", "open", "pytrec_eval.parse_run"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.create_scorer", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._calc_ndcg_prime"], ["", "def", "test_ndcg_prime", "(", "self", ")", ":", "\n", "        ", "scorer", "=", "self", ".", "create_scorer", "(", "[", "\"ndcg'\"", "]", ")", "\n", "with", "open", "(", "self", ".", "results_path", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "system_output", "=", "pytrec_eval", ".", "parse_run", "(", "fp", ")", "\n", "", "results", "=", "scorer", ".", "_calc_ndcg_prime", "(", "system_output", ")", "\n", "assert", "results", "[", "'2'", "]", "[", "\"ndcg_prime\"", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_scorer.TestScorer.test_ndcg_prime_mixed": [[63, 74], ["test_scorer.TestScorer.test_ndcg_prime_mixed.inner_create_scorer"], "methods", ["None"], ["", "def", "test_ndcg_prime_mixed", "(", "self", ")", ":", "\n", "        ", "modified_qrels", "=", "self", ".", "directory", "/", "'qrels_missing_doc.txt'", "\n", "\n", "def", "inner_create_scorer", "(", "metrics", ")", ":", "\n", "            ", "config", "=", "ScoreInputConfig", "(", "path", "=", "str", "(", "modified_qrels", ")", ")", "\n", "return", "Scorer", "(", "config", ",", "metrics", ")", "\n", "", "scorer", "=", "inner_create_scorer", "(", "[", "\"ndcg'\"", "]", ")", "\n", "with", "open", "(", "self", ".", "results_path", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "system_output", "=", "pytrec_eval", ".", "parse_run", "(", "fp", ")", "\n", "", "results", "=", "scorer", ".", "_calc_ndcg_prime", "(", "system_output", ")", "\n", "assert", "results", "[", "'2'", "]", "[", "\"ndcg_prime\"", "]", "==", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_validate_dict_with_no_run_name": [[8, 12], ["pytest.raises", "ConfigHelper._validate_dict"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_dict"], ["    ", "def", "test_validate_dict_with_no_run_name", "(", "self", ")", ":", "\n", "        ", "conf", "=", "{", "}", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "'run.name is not set'", ")", ":", "\n", "            ", "ConfigHelper", ".", "_validate_dict", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_validate_obj_with_mismatch_boolean_query_parsing": [[13, 30], ["RunnerConfig", "pytest.raises", "ConfigHelper._validate_obj", "RunConfig", "QueriesConfig", "RetrieveConfig", "TextProcessorConfig", "RetrieveInputConfig", "PathConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_obj"], ["", "", "def", "test_validate_obj_with_mismatch_boolean_query_parsing", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'run name'", ",", "path", "=", "'test'", ")", ",", "\n", "queries", "=", "QueriesConfig", "(", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", ",", "\n", "output", "=", "False", ",", "\n", "parse", "=", "True", "\n", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "\"index\"", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"retrieve\"", ",", "\n", "parse", "=", "False", "\n", ")", ",", "\n", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "'Config for queries and retrieve do not match for parse parameter'", ")", ":", "\n", "            ", "ConfigHelper", ".", "_validate_obj", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_run_path": [[31, 41], ["test_cases.items", "ConfigHelper._set_run_path", "str", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_run_path"], ["", "", "def", "test_set_run_path", "(", "self", ")", ":", "\n", "        ", "test_cases", "=", "{", "\n", "'test'", ":", "'test'", ",", "\n", "'test space'", ":", "'test-space'", ",", "\n", "\"test's\"", ":", "'tests'", ",", "\n", "}", "\n", "for", "arg", ",", "ans", "in", "test_cases", ".", "items", "(", ")", ":", "\n", "            ", "conf", "=", "{", "'run'", ":", "{", "'name'", ":", "arg", "}", "}", "\n", "ConfigHelper", ".", "_set_run_path", "(", "conf", ")", "\n", "assert", "conf", "[", "'run'", "]", "[", "'path'", "]", "==", "str", "(", "pathlib", ".", "Path", "(", "'runs'", ")", "/", "ans", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_output_paths": [[42, 56], ["RunnerConfig", "ConfigHelper._set_output_paths", "RunConfig", "DocumentsConfig", "DatabaseConfig", "IndexConfig", "DocumentsInputConfig", "TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_output_paths"], ["", "", "def", "test_set_output_paths", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "documents", "=", "DocumentsConfig", "(", "\n", "input", "=", "DocumentsInputConfig", "(", "format", "=", "'jsonl'", ",", "lang", "=", "'eng'", ",", "path", "=", "'test'", ")", ",", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "'whitespace'", ")", ",", "\n", ")", ",", "\n", "database", "=", "DatabaseConfig", "(", "name", "=", "'sqlite'", ")", ",", "\n", "index", "=", "IndexConfig", "(", "name", "=", "'mock'", ")", "\n", ")", "\n", "ConfigHelper", ".", "_set_output_paths", "(", "conf", ")", "\n", "assert", "conf", ".", "documents", ".", "output", "is", "False", "\n", "assert", "conf", ".", "database", ".", "output", "==", "'database'", "\n", "assert", "conf", ".", "index", ".", "output", "==", "'index'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_retrieve_input_path_with_input_set": [[57, 67], ["RunnerConfig", "ConfigHelper._set_retrieve_input_path", "RunConfig", "RetrieveConfig", "RetrieveInputConfig", "PathConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_retrieve_input_path"], ["", "def", "test_set_retrieve_input_path_with_input_set", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "'path_to_index'", ")", ")", ",", "\n", "name", "=", "'mock'", "\n", ")", "\n", ")", "\n", "ConfigHelper", ".", "_set_retrieve_input_path", "(", "conf", ")", "\n", "assert", "conf", ".", "retrieve", ".", "input", ".", "index", ".", "path", "==", "'path_to_index'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_retrieve_input_path_with_input_not_set": [[68, 81], ["RunnerConfig", "ConfigHelper._set_retrieve_input_path", "RunConfig", "IndexConfig", "RetrieveConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_retrieve_input_path"], ["", "def", "test_set_retrieve_input_path_with_input_not_set", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "index", "=", "IndexConfig", "(", "\n", "name", "=", "'mock'", ",", "\n", "output", "=", "'index'", "\n", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "name", "=", "'mock'", "\n", ")", "\n", ")", "\n", "ConfigHelper", ".", "_set_retrieve_input_path", "(", "conf", ")", "\n", "assert", "conf", ".", "retrieve", ".", "input", ".", "index", ".", "path", "==", "'index'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_retrieve_input_path_with_missing_index": [[82, 91], ["RunnerConfig", "pytest.raises", "ConfigHelper._set_retrieve_input_path", "RunConfig", "RetrieveConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_retrieve_input_path"], ["", "def", "test_set_retrieve_input_path_with_missing_index", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "name", "=", "'mock'", "\n", ")", "\n", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "'retrieve.input.index.path needs to be set'", ")", ":", "\n", "            ", "ConfigHelper", ".", "_set_retrieve_input_path", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_rerank_db_path_with_input_set": [[92, 102], ["RunnerConfig", "ConfigHelper._set_rerank_db_path", "RunConfig", "RerankConfig", "RerankInputConfig", "PathConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_rerank_db_path"], ["", "", "def", "test_set_rerank_db_path_with_input_set", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "rerank", "=", "RerankConfig", "(", "\n", "input", "=", "RerankInputConfig", "(", "database", "=", "PathConfig", "(", "path", "=", "'path_to_db'", ")", ")", ",", "\n", "name", "=", "'mock'", "\n", ")", "\n", ")", "\n", "ConfigHelper", ".", "_set_rerank_db_path", "(", "conf", ")", "\n", "assert", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "==", "'path_to_db'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestConfigHelper.test_set_rerank_db_path_with_index": [[103, 113], ["RunnerConfig", "ConfigHelper._set_rerank_db_path", "RunConfig", "DatabaseConfig", "RerankConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_rerank_db_path"], ["", "def", "test_set_rerank_db_path_with_index", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'test'", ")", ",", "\n", "database", "=", "DatabaseConfig", "(", "output", "=", "'db_path'", ")", ",", "\n", "rerank", "=", "RerankConfig", "(", "\n", "name", "=", "'mock'", "\n", ")", "\n", ")", "\n", "ConfigHelper", ".", "_set_rerank_db_path", "(", "conf", ")", "\n", "assert", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "==", "'db_path'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.create_config": [[116, 145], ["RunnerConfig", "RunConfig", "DatabaseConfig", "DocumentsConfig", "IndexConfig", "TopicsConfig", "QueriesConfig", "RetrieveConfig", "RerankConfig", "ScoreConfig", "DocumentsInputConfig", "TextProcessorConfig", "TopicsInputConfig", "TextProcessorConfig", "RetrieveInputConfig", "RerankInputConfig", "ScoreInputConfig", "PathConfig", "PathConfig"], "methods", ["None"], ["    ", "def", "create_config", "(", "self", ")", ":", "\n", "        ", "return", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'run name'", ",", "path", "=", "'test'", ")", ",", "\n", "database", "=", "DatabaseConfig", "(", "output", "=", "\"database\"", ")", ",", "\n", "documents", "=", "DocumentsConfig", "(", "\n", "input", "=", "DocumentsInputConfig", "(", "format", "=", "\"jsonl\"", ",", "lang", "=", "\"eng\"", ",", "path", "=", "\"test/docs.jsonl\"", ")", ",", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", ",", "\n", "output", "=", "\"docs\"", "\n", ")", ",", "\n", "index", "=", "IndexConfig", "(", "name", "=", "\"mock\"", ",", "output", "=", "\"index\"", ")", ",", "\n", "topics", "=", "TopicsConfig", "(", "\n", "input", "=", "TopicsInputConfig", "(", "format", "=", "\"jsonl\"", ",", "lang", "=", "\"eng\"", ",", "source", "=", "\"original\"", ",", "path", "=", "\"test/topics.jsonl\"", ")", ",", "\n", "output", "=", "\"topics\"", "\n", ")", ",", "\n", "queries", "=", "QueriesConfig", "(", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", ",", "\n", "output", "=", "\"queries\"", "\n", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "\"index\"", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"retrieve\"", "\n", ")", ",", "\n", "rerank", "=", "RerankConfig", "(", "\n", "input", "=", "RerankInputConfig", "(", "database", "=", "PathConfig", "(", "path", "=", "\"test\"", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"rerank\"", "\n", ")", ",", "\n", "score", "=", "ScoreConfig", "(", "input", "=", "ScoreInputConfig", "(", "format", "=", "'trec'", ",", "path", "=", "'qrels'", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_documents": [[147, 154], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_documents", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "DOCUMENTS", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'database'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_database": [[155, 162], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_database", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "DATABASE", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'database'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_index": [[163, 170], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_index", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "INDEX", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'topics'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_topics": [[171, 179], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr", "hasattr", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_topics", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "TOPICS", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'topics'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'queries'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_queries": [[180, 189], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr", "hasattr", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_queries", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "QUERIES", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'topics'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'queries'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'retrieve'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_retrieve": [[190, 200], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config", "hasattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_retrieve", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "RETRIEVE", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'topics'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'queries'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'retrieve'", ")", "\n", "assert", "not", "hasattr", "(", "conf", ",", "'rerank'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_helpers.TestArtifactHelper.test_get_config_rerank": [[201, 211], ["ArtifactHelper", "ArtifactHelper.get_config", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "hasattr", "test_helpers.TestArtifactHelper.create_config"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "def", "test_get_config_rerank", "(", "self", ")", ":", "\n", "        ", "helper", "=", "ArtifactHelper", "(", ")", "\n", "conf", "=", "helper", ".", "get_config", "(", "self", ".", "create_config", "(", ")", ",", "Tasks", ".", "RERANK", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'run'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'documents'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'index'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'topics'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'queries'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'retrieve'", ")", "\n", "assert", "hasattr", "(", "conf", ",", "'rerank'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_docs.test_parse_json_documents": [[8, 24], ["Hc4JsonDocumentReader", "next", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["None"], ["def", "test_parse_json_documents", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'docs.jsonl'", "\n", "doc_iter", "=", "Hc4JsonDocumentReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ")", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", ".", "id", "==", "'abcdef'", "\n", "assert", "doc", ".", "lang", "==", "'eng'", "\n", "assert", "doc", ".", "text", "==", "'title1 text1'", "\n", "assert", "doc", ".", "date", "==", "'2020-12-31'", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", ".", "id", "==", "'tuvwxy'", "\n", "assert", "doc", ".", "text", "==", "'title2 text2'", "\n", "assert", "doc", ".", "date", "==", "'2020-12-31'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "", "assert", "doc_iter", ".", "fp", ".", "closed", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_docs.test_parse_json_documents_with_bad_format": [[26, 32], ["Hc4JsonDocumentReader", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["None"], ["", "def", "test_parse_json_documents_with_bad_format", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'bad_format.jsonl'", "\n", "doc_iter", "=", "Hc4JsonDocumentReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ")", "\n", "with", "pytest", ".", "raises", "(", "ParseError", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_docs.test_parse_json_documents_with_missing_field": [[34, 40], ["Hc4JsonDocumentReader", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["None"], ["", "", "def", "test_parse_json_documents_with_missing_field", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'missing_field.jsonl'", "\n", "doc_iter", "=", "Hc4JsonDocumentReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ")", "\n", "with", "pytest", ".", "raises", "(", "ParseError", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_docs.test_parse_msmarco_documents": [[42, 55], ["TsvDocumentReader", "next", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["None"], ["", "", "def", "test_parse_msmarco_documents", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'msmarco_files'", "\n", "path", "=", "directory", "/", "'collection.tsv'", "\n", "doc_iter", "=", "TsvDocumentReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ")", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", ".", "id", "==", "'1'", "\n", "assert", "doc", ".", "text", "==", "'mary had a little lamb'", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", ".", "id", "==", "'2'", "\n", "assert", "doc", ".", "text", "==", "'four score and seven years ago'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "", "assert", "doc_iter", ".", "fp", ".", "closed", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.setup_method": [[14, 16], ["pathlib.Path", "tempfile.mkdtemp"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.teardown_method": [[17, 19], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.test_lang": [[20, 27], ["lang_path.write_text", "RetrieveConfig", "PyseriniRetriever", "PyseriniRetriever.begin", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "test_lang", "(", "self", ")", ":", "\n", "        ", "lang_path", "=", "self", ".", "temp_dir", "/", "\".lang\"", "\n", "lang_path", ".", "write_text", "(", "\"rus\"", ")", "\n", "conf", "=", "RetrieveConfig", "(", "name", "=", "\"bm25\"", ",", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", ")", ")", ")", ")", "\n", "pr", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "pr", ".", "begin", "(", ")", "\n", "assert", "pr", ".", "lang", "==", "\"rus\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.test_no_lang": [[28, 33], ["RetrieveConfig", "PyseriniRetriever", "pytest.raises", "PyseriniRetriever.begin", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "test_no_lang", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RetrieveConfig", "(", "name", "=", "\"bm25\"", ",", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", ")", ")", ")", ")", "\n", "pr", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "PatapscoError", ")", ":", "\n", "            ", "pr", ".", "begin", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever._prepare_cacm_index": [[34, 48], ["str", "urlretrieve", "tarfile.open", "tarfile.open.extractall", "tarfile.open.close", "lang_path.write_text"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "", "def", "_prepare_cacm_index", "(", "self", ")", ":", "\n", "# downloads an index from anserini to test against", "\n", "        ", "import", "tarfile", "\n", "from", "urllib", ".", "request", "import", "urlretrieve", "\n", "url", "=", "'https://github.com/castorini/anserini-data/raw/master/CACM/lucene-index.cacm.tar.gz'", "\n", "tarball_path", "=", "str", "(", "self", ".", "temp_dir", "/", "'lucene-index.cacm.tar.gz'", ")", "\n", "_", ",", "_", "=", "urlretrieve", "(", "url", ",", "tarball_path", ")", "\n", "tarball", "=", "tarfile", ".", "open", "(", "tarball_path", ")", "\n", "tarball", ".", "extractall", "(", "self", ".", "temp_dir", ")", "\n", "tarball", ".", "close", "(", ")", "\n", "index_path", "=", "self", ".", "temp_dir", "/", "'lucene-index.cacm'", "\n", "lang_path", "=", "index_path", "/", "\".lang\"", "\n", "lang_path", ".", "write_text", "(", "\"eng\"", ")", "\n", "return", "index_path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.test_sparse_retrieval": [[49, 76], ["pytest.mark.slow", "test_retrieve.TestPyseriniRetriever._prepare_cacm_index", "patapsco.topics.Query", "RetrieveConfig", "PyseriniRetriever", "PyseriniRetriever.process", "pytest.approx", "PyseriniRetriever", "PyseriniRetriever.process", "pytest.approx", "PyseriniRetriever", "PyseriniRetriever.process", "pytest.approx", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever._prepare_cacm_index", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"downloads pre-built index to validate against pyserini\"", ")", "\n", "def", "test_sparse_retrieval", "(", "self", ")", ":", "\n", "# check equivalence against pyserini results up to 5 digits", "\n", "# see https://github.com/castorini/pyserini/blob/3cd6b7ee8e77d699726756938fac0714c10ad0a9/tests/test_index_reader.py#L33", "\n", "        ", "index_path", "=", "self", ".", "_prepare_cacm_index", "(", ")", "\n", "query", "=", "Query", "(", "\"123\"", ",", "\"eng\"", ",", "query", "=", "\"inform retriev\"", ",", "text", "=", "\"\"", ",", "report", "=", "None", ")", "\n", "conf", "=", "RetrieveConfig", "(", "name", "=", "\"bm25\"", ",", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "index_path", ")", ")", ")", ")", "\n", "\n", "conf", ".", "name", "=", "\"bm25\"", "\n", "bm25", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "results", "=", "bm25", ".", "process", "(", "query", ")", "\n", "assert", "'CACM-3134'", "==", "results", ".", "results", "[", "0", "]", ".", "doc_id", "\n", "assert", "pytest", ".", "approx", "(", "4.76550", ",", "results", ".", "results", "[", "0", "]", ".", "score", ",", "1e-5", ")", "\n", "\n", "conf", ".", "name", "=", "\"bm25\"", "\n", "conf", ".", "rm3", "=", "True", "\n", "rm3", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "results", "=", "rm3", ".", "process", "(", "query", ")", "\n", "assert", "'CACM-3134'", "==", "results", ".", "results", "[", "0", "]", ".", "doc_id", "\n", "assert", "pytest", ".", "approx", "(", "2.18010", ",", "results", ".", "results", "[", "0", "]", ".", "score", ",", "1e-5", ")", "\n", "\n", "conf", ".", "name", "=", "\"qld\"", "\n", "conf", ".", "rm3", "=", "False", "\n", "qld", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "results", "=", "qld", ".", "process", "(", "query", ")", "\n", "assert", "'CACM-3134'", "==", "results", ".", "results", "[", "0", "]", ".", "doc_id", "\n", "assert", "pytest", ".", "approx", "(", "3.68030", ",", "results", ".", "results", "[", "0", "]", ".", "score", ",", "1e-5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.test_psq_rm3": [[77, 88], ["test_retrieve.TestPyseriniRetriever.create_small_index", "lang_path.write_text", "RetrieveConfig", "PyseriniRetriever", "pytest.raises", "PyseriniRetriever.begin", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.create_small_index", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "test_psq_rm3", "(", "self", ")", ":", "\n", "        ", "self", ".", "create_small_index", "(", ")", "\n", "lang_path", "=", "self", ".", "temp_dir", "/", "\".lang\"", "\n", "lang_path", ".", "write_text", "(", "\"eng\"", ")", "\n", "conf", "=", "RetrieveConfig", "(", "name", "=", "\"bm25\"", ",", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", "/", "'index'", ")", ")", ")", ")", "\n", "conf", ".", "rm3", "=", "True", "\n", "conf", ".", "psq", "=", "True", "\n", "pr", "=", "PyseriniRetriever", "(", "run_path", "=", "self", ".", "temp_dir", ",", "config", "=", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "pr", ".", "begin", "(", ")", "\n", "a", "=", "pr", ".", "searcher", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_retrieve.TestPyseriniRetriever.create_small_index": [[89, 98], ["patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.end", "patapsco.docs.Doc"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "", "def", "create_small_index", "(", "self", ")", ":", "\n", "        ", "run_directory", "=", "self", ".", "temp_dir", "\n", "output_directory", "=", "'index'", "\n", "lucene_directory", "=", "run_directory", "/", "output_directory", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "output_directory", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"1234\"", ",", "\"eng\"", ",", "\"this is a test\"", ",", "None", ")", ")", "\n", "li", ".", "end", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.MockIterator.__init__": [[35, 39], ["open", "iter", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "with", "open", "(", "path", ")", "as", "fp", ":", "\n", "            ", "self", ".", "values", "=", "iter", "(", "[", "line", ".", "strip", "(", ")", "for", "line", "in", "fp", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.MockIterator.__iter__": [[40, 42], ["None"], "methods", ["None"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.MockIterator.__next__": [[43, 45], ["next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "next", "(", "self", ".", "values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.MockIterator.__len__": [[46, 48], ["file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "file", ".", "count_lines", "(", "self", ".", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_absolute": [[51, 59], ["GlobIterator", "str", "next", "next", "pytest.raises", "next", "pathlib.Path", "glob.absolute"], "methods", ["None"], ["    ", "def", "test_with_absolute", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob", "=", "directory", "/", "'other_file.txt'", "\n", "iterator", "=", "GlobIterator", "(", "str", "(", "glob", ".", "absolute", "(", ")", ")", ",", "MockIterator", ")", "\n", "assert", "next", "(", "iterator", ")", "==", "'4'", "\n", "assert", "next", "(", "iterator", ")", "==", "'5'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "iterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_relative": [[60, 65], ["GlobIterator", "str", "next", "pathlib.Path"], "methods", ["None"], ["", "", "def", "test_with_relative", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob", "=", "directory", "/", "'other_file.txt'", "\n", "iterator", "=", "GlobIterator", "(", "str", "(", "glob", ")", ",", "MockIterator", ")", "\n", "assert", "next", "(", "iterator", ")", "==", "'4'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_bad_path": [[66, 71], ["pytest.raises", "GlobIterator", "pathlib.Path", "str", "glob.absolute"], "methods", ["None"], ["", "def", "test_with_bad_path", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob", "=", "directory", "/", "'nothing.txt'", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "GlobIterator", "(", "str", "(", "glob", ".", "absolute", "(", ")", ")", ",", "MockIterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_bad_path_not_first": [[72, 78], ["pytest.raises", "GlobIterator", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "", "def", "test_with_bad_path_not_first", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'nothing.txt'", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_multiple_patterns": [[79, 91], ["GlobIterator", "next", "next", "next", "next", "next", "pytest.raises", "next", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "", "def", "test_with_multiple_patterns", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "iterator", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "assert", "next", "(", "iterator", ")", "==", "'1'", "\n", "assert", "next", "(", "iterator", ")", "==", "'2'", "\n", "assert", "next", "(", "iterator", ")", "==", "'3'", "\n", "assert", "next", "(", "iterator", ")", "==", "'4'", "\n", "assert", "next", "(", "iterator", ")", "==", "'5'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "iterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_with_bad_input_file": [[92, 103], ["GlobIterator", "str", "pytest.raises", "next", "pathlib.Path", "glob.absolute"], "methods", ["None"], ["", "", "def", "test_with_bad_input_file", "(", "self", ")", ":", "\n", "# bad input results in immediate StopIteration", "\n", "        ", "def", "bad_input", "(", "path", ")", ":", "\n", "            ", "if", "False", ":", "\n", "                ", "yield", "'1'", ",", "'text'", "\n", "\n", "", "", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob", "=", "directory", "/", "'file1.txt'", "\n", "iterator", "=", "GlobIterator", "(", "str", "(", "glob", ".", "absolute", "(", ")", ")", ",", "bad_input", ")", "\n", "with", "pytest", ".", "raises", "(", "BadDataError", ")", ":", "\n", "            ", "next", "(", "iterator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestGlobIterator.test_len": [[104, 109], ["GlobIterator", "str", "len", "pathlib.Path"], "methods", ["None"], ["", "", "def", "test_len", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob", "=", "directory", "/", "'file?.txt'", "\n", "iterator", "=", "GlobIterator", "(", "str", "(", "glob", ")", ",", "MockIterator", ")", "\n", "assert", "len", "(", "iterator", ")", "==", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestSlicedIterator.test_len": [[112, 126], ["GlobIterator", "SlicedIterator", "SlicedIterator", "SlicedIterator", "SlicedIterator", "len", "len", "len", "len", "len", "pathlib.Path", "str", "str"], "methods", ["None"], ["    ", "def", "test_len", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "it1", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "0", ",", "5", ")", "\n", "assert", "len", "(", "it1", ")", "==", "5", "\n", "assert", "len", "(", "it2", ")", "==", "5", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "0", ",", "4", ")", "\n", "assert", "len", "(", "it2", ")", "==", "4", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "0", ",", "10", ")", "\n", "assert", "len", "(", "it2", ")", "==", "5", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "2", ",", "4", ")", "\n", "assert", "len", "(", "it2", ")", "==", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestSlicedIterator.test_next": [[127, 138], ["GlobIterator", "SlicedIterator", "next", "next", "next", "pytest.raises", "next", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "def", "test_next", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "it1", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "1", ",", "4", ")", "\n", "assert", "next", "(", "it2", ")", "==", "'2'", "\n", "assert", "next", "(", "it2", ")", "==", "'3'", "\n", "assert", "next", "(", "it2", ")", "==", "'4'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "it2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestSlicedIterator.test_with_nones": [[139, 152], ["GlobIterator", "SlicedIterator", "next", "next", "next", "next", "next", "pytest.raises", "next", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "", "def", "test_with_nones", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "it1", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "None", ",", "None", ")", "\n", "assert", "next", "(", "it2", ")", "==", "'1'", "\n", "assert", "next", "(", "it2", ")", "==", "'2'", "\n", "assert", "next", "(", "it2", ")", "==", "'3'", "\n", "assert", "next", "(", "it2", ")", "==", "'4'", "\n", "assert", "next", "(", "it2", ")", "==", "'5'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "it2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestSlicedIterator.test_with_none_start": [[153, 163], ["GlobIterator", "SlicedIterator", "next", "next", "pytest.raises", "next", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "", "def", "test_with_none_start", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "it1", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "None", ",", "2", ")", "\n", "assert", "next", "(", "it2", ")", "==", "'1'", "\n", "assert", "next", "(", "it2", ")", "==", "'2'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "it2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestSlicedIterator.test_with_none_stop": [[164, 174], ["GlobIterator", "SlicedIterator", "next", "next", "pytest.raises", "next", "pathlib.Path", "str", "str"], "methods", ["None"], ["", "", "def", "test_with_none_stop", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'glob_files'", "\n", "glob1", "=", "directory", "/", "'file?.txt'", "\n", "glob2", "=", "directory", "/", "'other*'", "\n", "it1", "=", "GlobIterator", "(", "[", "str", "(", "glob1", ")", ",", "str", "(", "glob2", ")", "]", ",", "MockIterator", ")", "\n", "it2", "=", "SlicedIterator", "(", "it1", ",", "3", ",", "None", ")", "\n", "assert", "next", "(", "it2", ")", "==", "'4'", "\n", "assert", "next", "(", "it2", ")", "==", "'5'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "it2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestLangStandardizer.test_iso_639_3_with_2_letter_code": [[177, 179], ["LangStandardizer.iso_639_3"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["    ", "def", "test_iso_639_3_with_2_letter_code", "(", "self", ")", ":", "\n", "        ", "assert", "LangStandardizer", ".", "iso_639_3", "(", "\"ar\"", ")", "==", "\"ara\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestLangStandardizer.test_iso_639_3_with_3_letter_code": [[180, 182], ["LangStandardizer.iso_639_3"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["", "def", "test_iso_639_3_with_3_letter_code", "(", "self", ")", ":", "\n", "        ", "assert", "LangStandardizer", ".", "iso_639_3", "(", "\"ara\"", ")", "==", "\"ara\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestLangStandardizer.test_iso_639_3_with_uppercase": [[183, 185], ["LangStandardizer.iso_639_3"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["", "def", "test_iso_639_3_with_uppercase", "(", "self", ")", ":", "\n", "        ", "assert", "LangStandardizer", ".", "iso_639_3", "(", "\"EN\"", ")", "==", "\"eng\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestLangStandardizer.test_iso_639_3_with_unknown_code": [[186, 189], ["pytest.raises", "LangStandardizer.iso_639_3"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["", "def", "test_iso_639_3_with_unknown_code", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "assert", "LangStandardizer", ".", "iso_639_3", "(", "\"sp\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.TestComponentFactory.test_register_with_string_class_name": [[208, 211], ["pytest.raises", "ComponentFactory.register"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory.register"], ["    ", "def", "test_register_with_string_class_name", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "ComponentFactory", ".", "register", "(", "'test'", ",", "'ClassName'", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.test_chunked_iterator_divisible": [[8, 15], ["ChunkedIterator", "iter", "next", "next", "pytest.raises", "next"], "function", ["None"], ["def", "test_chunked_iterator_divisible", "(", ")", ":", "\n", "    ", "data", "=", "[", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "it", "=", "ChunkedIterator", "(", "iter", "(", "data", ")", ",", "2", ")", "\n", "assert", "next", "(", "it", ")", "==", "[", "1", ",", "2", "]", "\n", "assert", "next", "(", "it", ")", "==", "[", "3", ",", "4", "]", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.test_chunked_iterator_not_divisible": [[17, 24], ["ChunkedIterator", "iter", "next", "next", "pytest.raises", "next"], "function", ["None"], ["", "", "def", "test_chunked_iterator_not_divisible", "(", ")", ":", "\n", "    ", "data", "=", "[", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "it", "=", "ChunkedIterator", "(", "iter", "(", "data", ")", ",", "3", ")", "\n", "assert", "next", "(", "it", ")", "==", "[", "1", ",", "2", ",", "3", "]", "\n", "assert", "next", "(", "it", ")", "==", "[", "4", "]", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.test_chunked_iterator_all": [[26, 32], ["ChunkedIterator", "iter", "next", "pytest.raises", "next"], "function", ["None"], ["", "", "def", "test_chunked_iterator_all", "(", ")", ":", "\n", "    ", "data", "=", "[", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "it", "=", "ChunkedIterator", "(", "iter", "(", "data", ")", ",", "None", ")", "\n", "assert", "next", "(", "it", ")", "==", "[", "1", ",", "2", ",", "3", ",", "4", "]", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.test_get_human_readable_size": [[191, 199], ["get_human_readable_size"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.get_human_readable_size"], ["", "", "", "def", "test_get_human_readable_size", "(", ")", ":", "\n", "    ", "pairs", "=", "[", "\n", "(", "2049", ",", "'2.0 KB'", ")", ",", "\n", "(", "1673742502", ",", "'1.6 GB'", ")", ",", "\n", "(", "1673742502000", ",", "'1.5 TB'", ")", ",", "\n", "]", "\n", "for", "bytes", ",", "text", "in", "pairs", ":", "\n", "        ", "assert", "text", "==", "get_human_readable_size", "(", "bytes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util.text_ignore_exception": [[201, 205], ["ignore_exception", "ValueError"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception"], ["", "", "def", "text_ignore_exception", "(", ")", ":", "\n", "    ", "with", "ignore_exception", "(", "ValueError", ")", ":", "\n", "        ", "raise", "ValueError", "(", ")", "\n", "", "assert", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestCompare.test_same": [[6, 9], ["compare_strings", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.compare_strings"], ["    ", "def", "test_same", "(", "self", ")", ":", "\n", "        ", "results", "=", "compare_strings", "(", "\"hello world!\"", ",", "\"hello world!\"", ")", "\n", "assert", "len", "(", "results", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestCompare.test_simple_delete": [[10, 14], ["compare_strings", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.compare_strings"], ["", "def", "test_simple_delete", "(", "self", ")", ":", "\n", "        ", "results", "=", "compare_strings", "(", "\"hello world!\"", ",", "\"hello world\"", ")", "\n", "assert", "len", "(", "results", ")", "==", "1", "\n", "assert", "results", "[", "'del !'", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestCompare.test_simple_replace": [[15, 19], ["compare_strings", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.compare_strings"], ["", "def", "test_simple_replace", "(", "self", ")", ":", "\n", "        ", "results", "=", "compare_strings", "(", "\"\\u0043\\u0327\"", ",", "\"\u00c7\"", ")", "\n", "assert", "len", "(", "results", ")", "==", "1", "\n", "assert", "results", "[", "'\\u0043\\u0327 \u2192 \\u00c7'", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_pre_normalize_newlines": [[22, 25], ["NormalizerFactory.create", "patapsco.schema.NormalizationConfig", "NormalizerFactory.create.pre_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize"], ["    ", "def", "test_pre_normalize_newlines", "(", "self", ")", ":", "\n", "        ", "normalizer", "=", "NormalizerFactory", ".", "create", "(", "\"eng\"", ",", "NormalizationConfig", "(", "lowercase", "=", "False", ")", ")", "\n", "assert", "normalizer", ".", "pre_normalize", "(", "\"line1\\nline2\"", ")", "==", "\"line1\\nline2\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_post_normalize_lowercase": [[26, 29], ["GenericNormalizer", "patapsco.schema.NormalizationConfig", "GenericNormalizer.post_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "test_post_normalize_lowercase", "(", "self", ")", ":", "\n", "        ", "normalizer", "=", "GenericNormalizer", "(", "NormalizationConfig", "(", "lowercase", "=", "True", ")", ")", "\n", "assert", "normalizer", ".", "post_normalize", "(", "\"Test test\"", ")", "==", "\"test test\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_post_normalize_no_casing": [[30, 33], ["GenericNormalizer", "patapsco.schema.NormalizationConfig", "GenericNormalizer.post_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "test_post_normalize_no_casing", "(", "self", ")", ":", "\n", "        ", "normalizer", "=", "GenericNormalizer", "(", "NormalizationConfig", "(", "lowercase", "=", "False", ")", ")", "\n", "assert", "normalizer", ".", "post_normalize", "(", "\"Test test\"", ")", "==", "\"Test test\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_spaces_tabs": [[34, 36], ["Normalizer.update_spaces"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.update_spaces"], ["", "def", "test_spaces_tabs", "(", "self", ")", ":", "\n", "        ", "assert", "Normalizer", ".", "update_spaces", "(", "\"a\\t\\tb\"", ")", "==", "\"a b\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_multiple_spaces": [[37, 39], ["Normalizer.update_spaces"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.update_spaces"], ["", "def", "test_multiple_spaces", "(", "self", ")", ":", "\n", "        ", "assert", "Normalizer", ".", "update_spaces", "(", "\"a    b\"", ")", "==", "\"a b\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_other_spaces": [[40, 46], ["Normalizer.update_spaces"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.update_spaces"], ["", "def", "test_other_spaces", "(", "self", ")", ":", "\n", "        ", "spaces", "=", "[", "\n", "'\\u000d'", ",", "'\\u0020'", ",", "'\\u2009'", ",", "'\\u200a'", ",", "'\\u2028'", ",", "'\\u2029'", ",", "'\\u3000'", ",", "\n", "]", "\n", "for", "space", "in", "spaces", ":", "\n", "            ", "assert", "Normalizer", ".", "update_spaces", "(", "f\"a{space}b\"", ")", "==", "\"a b\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_remove_rtl": [[47, 50], ["Normalizer().remove_format_chars", "Normalizer().remove_format_chars", "Normalizer", "Normalizer", "patapsco.schema.NormalizationConfig", "patapsco.schema.NormalizationConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_format_chars", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_format_chars"], ["", "", "def", "test_remove_rtl", "(", "self", ")", ":", "\n", "        ", "assert", "Normalizer", "(", "NormalizationConfig", "(", ")", ")", ".", "remove_format_chars", "(", "'a\\u200eb'", ")", "==", "\"ab\"", "\n", "assert", "Normalizer", "(", "NormalizationConfig", "(", ")", ")", ".", "remove_format_chars", "(", "'a\\u202cb'", ")", "==", "\"ab\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_remove_control_chars": [[51, 53], ["Normalizer.remove_control_chars"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_control_chars"], ["", "def", "test_remove_control_chars", "(", "self", ")", ":", "\n", "        ", "assert", "Normalizer", ".", "remove_control_chars", "(", "\"a\\uFEFFb\"", ")", "==", "\"ab\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_fix_encoding": [[54, 57], ["Normalizer.fix_encoding"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.fix_encoding"], ["", "def", "test_fix_encoding", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"But we\\u00e2\\u0080\\u0099ve come out the other side of it\"", "\n", "assert", "Normalizer", ".", "fix_encoding", "(", "text", ")", "==", "\"But we\u2019ve come out the other side of it\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_standardize_combining_chars": [[58, 62], ["Normalizer.standardize_combining_chars", "Normalizer.standardize_combining_chars", "Normalizer.standardize_combining_chars"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_combining_chars", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_combining_chars", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_combining_chars"], ["", "def", "test_standardize_combining_chars", "(", "self", ")", ":", "\n", "        ", "assert", "Normalizer", ".", "standardize_combining_chars", "(", "\"\\u0043\\u0327\"", ")", "==", "\"\\u00c7\"", "# combine diacritics", "\n", "assert", "Normalizer", ".", "standardize_combining_chars", "(", "\"\\u2160\"", ")", "!=", "\"I\"", "# do not convert to canonical form (Roman numeral I to capital I)", "\n", "assert", "Normalizer", ".", "standardize_combining_chars", "(", "\"\\uff0c\"", ")", "==", "\"\\uff0c\"", "# do not convert fullwidth chars to normal chars", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_normalize.TestNormalizer.test_expand_range": [[63, 70], ["Normalizer._expand_chars", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer._expand_chars"], ["", "def", "test_expand_range", "(", "self", ")", ":", "\n", "        ", "r1", "=", "'\\u2000-\\u2009'", "\n", "r2", "=", "Normalizer", ".", "_expand_chars", "(", "r1", ")", "\n", "assert", "len", "(", "r2", ")", "==", "10", "\n", "assert", "r2", "[", "0", "]", "==", "'\\u2000'", "\n", "assert", "r2", "[", "1", "]", "==", "'\\u2001'", "\n", "assert", "r2", "[", "-", "1", "]", "==", "'\\u2009'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_database.TestDocumentDatabase.setup_method": [[12, 14], ["tempfile.mkdtemp"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "tempfile", ".", "mkdtemp", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_database.TestDocumentDatabase.teardown_method": [[15, 17], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_database.TestDocumentDatabase.test_adding_doc": [[18, 37], ["patapsco.database.DocumentDatabase", "patapsco.docs.Doc", "sqlite3.connect", "sqlite3.connect.execute", "sqlite3.connect.execute.fetchone", "json.loads", "str", "pathlib.Path"], "methods", ["None"], ["", "def", "test_adding_doc", "(", "self", ")", ":", "\n", "        ", "db", "=", "DocumentDatabase", "(", "self", ".", "temp_dir", ",", "'database'", ",", "readonly", "=", "False", ")", "\n", "db", "[", "'doc1'", "]", "=", "Doc", "(", "'doc1'", ",", "lang", "=", "'eng'", ",", "text", "=", "'hello world'", ",", "date", "=", "'2020-12-25'", ")", "\n", "doc", "=", "db", "[", "'doc1'", "]", "\n", "assert", "doc", ".", "id", "==", "'doc1'", "\n", "assert", "doc", ".", "date", "==", "'2020-12-25'", "\n", "assert", "doc", ".", "lang", "==", "'eng'", "\n", "assert", "doc", ".", "text", "==", "'hello world'", "\n", "\n", "# and check retrieving from file", "\n", "conn", "=", "sqlite3", ".", "connect", "(", "str", "(", "pathlib", ".", "Path", "(", "self", ".", "temp_dir", ")", "/", "'database'", "/", "'docs.db'", ")", ")", "\n", "cursor", "=", "conn", ".", "execute", "(", "f'SELECT value FROM patapsco WHERE key = ?'", ",", "(", "'doc1'", ",", ")", ")", "\n", "result", "=", "cursor", ".", "fetchone", "(", ")", "\n", "assert", "result", "is", "not", "None", "\n", "loaded_doc", "=", "json", ".", "loads", "(", "result", "[", "0", "]", ")", "\n", "assert", "loaded_doc", "[", "'id'", "]", "==", "doc", ".", "id", "\n", "assert", "loaded_doc", "[", "'date'", "]", "==", "doc", ".", "date", "\n", "assert", "loaded_doc", "[", "'lang'", "]", "==", "doc", ".", "lang", "\n", "assert", "loaded_doc", "[", "'text'", "]", "==", "doc", ".", "text", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.AddTask.process": [[5, 7], ["None"], "methods", ["None"], ["    ", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "item", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.MultiplyTask.process": [[10, 12], ["None"], "methods", ["None"], ["    ", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "2", "*", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.MultiplyTask.batch_process": [[13, 15], ["None"], "methods", ["None"], ["", "def", "batch_process", "(", "self", ",", "items", ")", ":", "\n", "        ", "return", "[", "3", "*", "item", "for", "item", "in", "items", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.CollectorTask.__init__": [[18, 21], ["Task.__init__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "items", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.CollectorTask.process": [[22, 25], ["test_pipeline.CollectorTask.items.append"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "self", ".", "items", ".", "append", "(", "item", ")", "\n", "return", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.RejectorTask.process": [[28, 32], ["None"], "methods", ["None"], ["    ", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "==", "2", ":", "\n", "            ", "return", "None", "\n", "", "return", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.NumberGenerator.__init__": [[35, 37], ["iter", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "docs", "=", "iter", "(", "range", "(", "5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.NumberGenerator.__iter__": [[38, 40], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.NumberGenerator.__next__": [[41, 43], ["next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "next", "(", "self", ".", "docs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.NumberGenerator.__str__": [[44, 46], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'NumberGenerator'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.test_pipeline_str": [[48, 51], ["StreamingPipeline", "test_pipeline.NumberGenerator", "str", "test_pipeline.AddTask", "test_pipeline.MultiplyTask"], "function", ["None"], ["", "", "def", "test_pipeline_str", "(", ")", ":", "\n", "    ", "pipeline", "=", "StreamingPipeline", "(", "NumberGenerator", "(", ")", ",", "[", "AddTask", "(", ")", ",", "MultiplyTask", "(", ")", "]", ")", "\n", "assert", "str", "(", "pipeline", ")", "==", "'NumberGenerator | AddTask | MultiplyTask'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.test_streaming_pipeline": [[53, 59], ["test_pipeline.CollectorTask", "StreamingPipeline", "StreamingPipeline.run", "test_pipeline.NumberGenerator", "test_pipeline.AddTask", "test_pipeline.MultiplyTask"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "test_streaming_pipeline", "(", ")", ":", "\n", "    ", "collector", "=", "CollectorTask", "(", ")", "\n", "pipeline", "=", "StreamingPipeline", "(", "NumberGenerator", "(", ")", ",", "[", "AddTask", "(", ")", ",", "MultiplyTask", "(", ")", ",", "collector", "]", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "assert", "pipeline", ".", "count", "==", "5", "\n", "assert", "collector", ".", "items", "==", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.test_streaming_pipeline_reject_item": [[61, 68], ["test_pipeline.CollectorTask", "StreamingPipeline", "StreamingPipeline.run", "test_pipeline.NumberGenerator", "test_pipeline.AddTask", "test_pipeline.RejectorTask", "test_pipeline.MultiplyTask"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "test_streaming_pipeline_reject_item", "(", ")", ":", "\n", "# reject 2 before multiplying by 2 so the number 4 is dropped from the output", "\n", "    ", "collector", "=", "CollectorTask", "(", ")", "\n", "pipeline", "=", "StreamingPipeline", "(", "NumberGenerator", "(", ")", ",", "[", "AddTask", "(", ")", ",", "RejectorTask", "(", ")", ",", "MultiplyTask", "(", ")", ",", "collector", "]", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "assert", "pipeline", ".", "count", "==", "4", "\n", "assert", "collector", ".", "items", "==", "[", "2", ",", "6", ",", "8", ",", "10", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.test_batch_pipeline": [[70, 77], ["test_pipeline.CollectorTask", "BatchPipeline", "BatchPipeline.run", "test_pipeline.NumberGenerator", "test_pipeline.AddTask", "test_pipeline.MultiplyTask"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "test_batch_pipeline", "(", ")", ":", "\n", "    ", "collector", "=", "CollectorTask", "(", ")", "\n", "pipeline", "=", "BatchPipeline", "(", "NumberGenerator", "(", ")", ",", "[", "AddTask", "(", ")", ",", "MultiplyTask", "(", ")", ",", "collector", "]", ",", "2", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "assert", "pipeline", ".", "count", "==", "5", "\n", "# the batch_process() method for multiply uses a factor of 3", "\n", "assert", "collector", ".", "items", "==", "[", "3", ",", "6", ",", "9", ",", "12", ",", "15", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_pipeline.test_batch_pipeline_reject_item": [[79, 86], ["test_pipeline.CollectorTask", "BatchPipeline", "BatchPipeline.run", "test_pipeline.NumberGenerator", "test_pipeline.AddTask", "test_pipeline.RejectorTask", "test_pipeline.MultiplyTask"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "test_batch_pipeline_reject_item", "(", ")", ":", "\n", "# reject 2 before multiplying by 2 so the number 4 is dropped from the output", "\n", "    ", "collector", "=", "CollectorTask", "(", ")", "\n", "pipeline", "=", "BatchPipeline", "(", "NumberGenerator", "(", ")", ",", "[", "AddTask", "(", ")", ",", "RejectorTask", "(", ")", ",", "MultiplyTask", "(", ")", ",", "collector", "]", ",", "2", ")", "\n", "pipeline", ".", "run", "(", ")", "\n", "assert", "pipeline", ".", "count", "==", "4", "\n", "assert", "collector", ".", "items", "==", "[", "3", ",", "9", ",", "12", ",", "15", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_flat_dict_get": [[10, 24], ["patapsco.FlatDict", "pytest.raises", "pytest.raises"], "function", ["None"], ["def", "test_flat_dict_get", "(", ")", ":", "\n", "    ", "d", "=", "{", "\n", "'a'", ":", "12", ",", "\n", "'b'", ":", "{", "\n", "'c'", ":", "42", "\n", "}", "\n", "}", "\n", "fd", "=", "config", ".", "FlatDict", "(", "d", ")", "\n", "assert", "fd", "[", "'a'", "]", "==", "12", "\n", "assert", "fd", "[", "'b.c'", "]", "==", "42", "\n", "with", "pytest", ".", "raises", "(", "KeyError", ")", ":", "\n", "        ", "test", "=", "fd", "[", "'c'", "]", "\n", "", "with", "pytest", ".", "raises", "(", "KeyError", ")", ":", "\n", "        ", "test", "=", "fd", "[", "'b.z'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_flat_dict_set": [[26, 42], ["patapsco.FlatDict", "pytest.raises", "pytest.raises"], "function", ["None"], ["", "", "def", "test_flat_dict_set", "(", ")", ":", "\n", "    ", "d", "=", "{", "\n", "'a'", ":", "12", ",", "\n", "'b'", ":", "{", "\n", "'c'", ":", "42", "\n", "}", "\n", "}", "\n", "fd", "=", "config", ".", "FlatDict", "(", "d", ")", "\n", "fd", "[", "'a'", "]", "=", "99", "\n", "fd", "[", "'b.c'", "]", "=", "0", "\n", "assert", "d", "[", "'a'", "]", "==", "99", "\n", "assert", "d", "[", "'b'", "]", "[", "'c'", "]", "==", "0", "\n", "with", "pytest", ".", "raises", "(", "KeyError", ")", ":", "\n", "        ", "fd", "[", "'c'", "]", "=", "77", "\n", "", "with", "pytest", ".", "raises", "(", "KeyError", ")", ":", "\n", "        ", "fd", "[", "'b.z'", "]", "=", "77", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_convert_dict_with_nested_list": [[44, 54], ["patapsco.convert_dict", "len", "type", "config.convert_dict.items"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict"], ["", "", "def", "test_convert_dict_with_nested_list", "(", ")", ":", "\n", "    ", "d", "=", "{", "\n", "'key1'", ":", "64", ",", "\n", "'key2'", ":", "'test'", ",", "\n", "'key3'", ":", "[", "{", "'a'", ":", "1", "}", ",", "{", "'b'", ":", "2", "}", "]", "\n", "}", "\n", "d", "=", "config", ".", "convert_dict", "(", "d", ")", "\n", "assert", "len", "(", "d", ".", "items", "(", ")", ")", "==", "3", "\n", "assert", "type", "(", "d", ".", "key3", "[", "0", "]", ")", "is", "config", ".", "AttrDict", "\n", "assert", "d", ".", "key3", "[", "0", "]", ".", "a", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_convert_dict_with_nested_dict": [[56, 66], ["patapsco.convert_dict", "len", "type", "config.convert_dict.items"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict"], ["", "def", "test_convert_dict_with_nested_dict", "(", ")", ":", "\n", "    ", "d", "=", "{", "\n", "'key1'", ":", "64", ",", "\n", "'key2'", ":", "'test'", ",", "\n", "'key3'", ":", "{", "'a'", ":", "1", ",", "'b'", ":", "{", "'value'", ":", "42", "}", "}", "\n", "}", "\n", "d", "=", "config", ".", "convert_dict", "(", "d", ")", "\n", "assert", "len", "(", "d", ".", "items", "(", ")", ")", "==", "3", "\n", "assert", "type", "(", "d", ".", "key3", ")", "is", "config", ".", "AttrDict", "\n", "assert", "d", ".", "key3", ".", "b", ".", "value", "==", "42", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_simple_config": [[68, 86], ["patapsco.ConfigService._read_yaml_config", "type", "type"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_simple_config", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\nlang: es\noutput: myfile.txt\ndocument_process:\n  utf8_normalize: true\n  lowercase: true\nscore:\n  - map\n  - P@20\n  - ndcg\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'lang'", "]", "==", "'es'", "\n", "assert", "type", "(", "conf", "[", "'document_process'", "]", ")", "is", "dict", "\n", "assert", "type", "(", "conf", "[", "'score'", "]", ")", "is", "list", "\n", "assert", "conf", "[", "'document_process'", "]", "[", "'lowercase'", "]", "is", "True", "\n", "assert", "conf", "[", "'score'", "]", "[", "0", "]", "==", "\"map\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_simple": [[88, 96], ["patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_interpolation_simple", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\noutput: output_{lang}\nlang: es\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'lang'", "]", "==", "'es'", "\n", "assert", "conf", "[", "'output'", "]", "==", "'output_es'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_at_string_start": [[98, 106], ["pytest.raises", "patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_interpolation_at_string_start", "(", ")", ":", "\n", "# cannot start with {value}, must quote it", "\n", "    ", "document", "=", "\"\"\"\noutput: {lang}_output\nlang: es\n\"\"\"", "\n", "with", "pytest", ".", "raises", "(", "yaml", ".", "MarkedYAMLError", ")", ":", "\n", "        ", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_at_start_with_quote": [[108, 116], ["patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "", "def", "test_interpolation_at_start_with_quote", "(", ")", ":", "\n", "# cannot start with {value}, must quote it", "\n", "    ", "document", "=", "\"\"\"\noutput: \"{lang}_output\"\nlang: es\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'output'", "]", "==", "'es_output'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_with_nest_value": [[118, 131], ["patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_interpolation_with_nest_value", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\nlang: ru\ndocument_process:\n  utf8_normalize: true\n  lowercase: true\n  stem:\n    name: pymorphy2\n    param1: 0.5\n  output: ru-{document_process.stem.name}-{document_process.stem.param1}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'document_process'", "]", "[", "'output'", "]", "==", "\"ru-pymorphy2-0.5\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_with_missing_value": [[133, 145], ["pytest.raises", "patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_interpolation_with_missing_value", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\nlang: ru\ndocument_process:\n  utf8_normalize: true\n  lowercase: true\n  stem:\n    name: pymorphy2\n  output: ru-{document_process.stem.name}-{document_process.stem.param1}\n\"\"\"", "\n", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_cascade": [[147, 156], ["patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "", "def", "test_interpolation_cascade", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\na: 1\nb: \"{a}1\"\nc: \"{b}1\"\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'b'", "]", "==", "'11'", "\n", "assert", "conf", "[", "'c'", "]", "==", "'111'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_interpolation_cascade_with_wrong_order": [[158, 167], ["patapsco.ConfigService._read_yaml_config"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config"], ["", "def", "test_interpolation_cascade_with_wrong_order", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\na: 1\nc: \"{b}1\"\nb: \"{a}1\"\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", ".", "_read_yaml_config", "(", "document", ")", "\n", "assert", "conf", "[", "'b'", "]", "==", "'11'", "\n", "assert", "conf", "[", "'c'", "]", "==", "'{a}11'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_load_json_config": [[169, 187], ["patapsco.ConfigService()._read_json_config", "io.StringIO", "type", "type", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "def", "test_load_json_config", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n  \"lang\": \"es\",\n  \"output\": \"myfile.txt\",\n  \"document_process\": {\n    \"utf8_normalize\": true,\n    \"lowercase\": true\n  },\n  \"score\": [\"map\", \"P@20\", \"ndcg\"]\n}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "assert", "conf", "[", "'lang'", "]", "==", "'es'", "\n", "assert", "type", "(", "conf", "[", "'document_process'", "]", ")", "is", "dict", "\n", "assert", "type", "(", "conf", "[", "'score'", "]", ")", "is", "list", "\n", "assert", "conf", "[", "'document_process'", "]", "[", "'lowercase'", "]", "is", "True", "\n", "assert", "conf", "[", "'score'", "]", "[", "0", "]", "==", "\"map\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_load_json_config_booleans": [[189, 203], ["patapsco.ConfigService()._read_json_config", "io.StringIO", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "def", "test_load_json_config_booleans", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n  \"lowercase\": \"on\",\n  \"stem\": \"off\",\n  \"scores\": [\n    {\"value\": \"yes\"}\n  ]\n}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "assert", "conf", "[", "'lowercase'", "]", "is", "True", "\n", "assert", "conf", "[", "'stem'", "]", "is", "False", "\n", "assert", "conf", "[", "'scores'", "]", "[", "0", "]", "[", "'value'", "]", "is", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_json_interpolation_simple": [[205, 215], ["patapsco.ConfigService()._read_json_config", "io.StringIO", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "def", "test_json_interpolation_simple", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n  \"output\": \"output_{lang}\",\n  \"lang\": \"es\"\n}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "assert", "conf", "[", "'lang'", "]", "==", "'es'", "\n", "assert", "conf", "[", "'output'", "]", "==", "'output_es'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_json_interpolation_with_missing_value": [[217, 233], ["pytest.raises", "patapsco.ConfigService()._read_json_config", "io.StringIO", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "def", "test_json_interpolation_with_missing_value", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n  \"lang\": \"rus\",\n  \"document_process\": {\n    \"utf8_normalize\": true,\n    \"lowercase\": true,\n    \"stem\": {\n      \"name\": \"pymorphy2\"\n    }\n  },\n  \"output\": \"ru-{document_process.stem.name}-{document_process.stem.param1}\"\n}\n\"\"\"", "\n", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_json_interpolation_cascade": [[235, 246], ["patapsco.ConfigService()._read_json_config", "io.StringIO", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "", "def", "test_json_interpolation_cascade", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n\"a\": 1,\n\"b\": \"{a}1\",\n\"c\": \"{b}1\"\n}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "assert", "conf", "[", "'b'", "]", "==", "'11'", "\n", "assert", "conf", "[", "'c'", "]", "==", "'111'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_json_interpolation_cascade_with_wrong_order": [[248, 259], ["patapsco.ConfigService()._read_json_config", "io.StringIO", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config"], ["", "def", "test_json_interpolation_cascade_with_wrong_order", "(", ")", ":", "\n", "    ", "document", "=", "\"\"\"\n{\n\"a\": 1,\n\"c\": \"{b}1\",\n\"b\": \"{a}1\"\n}\n\"\"\"", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "_read_json_config", "(", "io", ".", "StringIO", "(", "document", ")", ")", "\n", "assert", "conf", "[", "'b'", "]", "==", "'11'", "\n", "assert", "conf", "[", "'c'", "]", "==", "'{a}11'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_overrides": [[261, 270], ["patapsco.ConfigOverrides.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_overrides", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "'one'", ",", "\n", "'b'", ":", "'two'", ",", "\n", "'c'", ":", "'three'", "\n", "}", "\n", "config", ".", "ConfigOverrides", ".", "process", "(", "conf", ",", "[", "\"b=new\"", "]", ")", "\n", "assert", "conf", "[", "'a'", "]", "==", "'one'", "\n", "assert", "conf", "[", "'b'", "]", "==", "'new'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_override_missing": [[272, 280], ["pytest.raises", "patapsco.ConfigOverrides.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_override_missing", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "'one'", ",", "\n", "'b'", ":", "'two'", ",", "\n", "'c'", ":", "'three'", "\n", "}", "\n", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigOverrides", ".", "process", "(", "conf", ",", "[", "\"d=error\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_nested_overrides": [[282, 292], ["patapsco.ConfigOverrides.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "test_nested_overrides", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "'one'", ",", "\n", "'b'", ":", "'two'", ",", "\n", "'c'", ":", "{", "\n", "'x'", ":", "'value'", "\n", "}", "\n", "}", "\n", "config", ".", "ConfigOverrides", ".", "process", "(", "conf", ",", "[", "\"c.x=new\"", "]", ")", "\n", "assert", "conf", "[", "'c'", "]", "[", "'x'", "]", "==", "'new'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_nested_overrides_missing": [[294, 307], ["pytest.raises", "patapsco.ConfigOverrides.process", "pytest.raises", "patapsco.ConfigOverrides.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_nested_overrides_missing", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "'one'", ",", "\n", "'b'", ":", "'two'", ",", "\n", "'c'", ":", "{", "\n", "'x'", ":", "'value'", "\n", "}", "\n", "}", "\n", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigOverrides", ".", "process", "(", "conf", ",", "[", "\"d.x=new\"", "]", ")", "\n", "\n", "", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigOverrides", ".", "process", "(", "conf", ",", "[", "\"c.z=new\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_inheritance": [[309, 327], ["patapsco.ConfigInheritance.process", "pytest.raises"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "test_inheritance", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "{", "\n", "'p1'", ":", "1", ",", "\n", "'p2'", ":", "2", ",", "\n", "}", ",", "\n", "'b'", ":", "{", "\n", "'inherit'", ":", "'a'", ",", "\n", "'p2'", ":", "0", ",", "\n", "'p3'", ":", "3", "\n", "}", "\n", "}", "\n", "config", ".", "ConfigInheritance", ".", "process", "(", "conf", ")", "\n", "assert", "conf", "[", "'b'", "]", "[", "'p1'", "]", "==", "1", "\n", "assert", "conf", "[", "'b'", "]", "[", "'p2'", "]", "==", "0", "\n", "assert", "conf", "[", "'b'", "]", "[", "'p3'", "]", "==", "3", "\n", "with", "pytest", ".", "raises", "(", "KeyError", ")", ":", "\n", "        ", "test", "=", "conf", "[", "'b'", "]", "[", "'inherit'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_inheritance_nested": [[329, 350], ["patapsco.ConfigInheritance.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "test_inheritance_nested", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "{", "\n", "'p1'", ":", "1", ",", "\n", "'p2'", ":", "2", ",", "\n", "'subsection'", ":", "{", "\n", "'param'", ":", "'test'", "\n", "}", "\n", "}", ",", "\n", "'b'", ":", "{", "\n", "'inherit'", ":", "'a'", ",", "\n", "'p2'", ":", "0", ",", "\n", "'p3'", ":", "3", ",", "\n", "'subsection'", ":", "{", "\n", "'output'", ":", "True", "\n", "}", "\n", "}", "\n", "}", "\n", "config", ".", "ConfigInheritance", ".", "process", "(", "conf", ")", "\n", "assert", "conf", "[", "'b'", "]", "[", "'subsection'", "]", "[", "'param'", "]", "==", "'test'", "\n", "assert", "conf", "[", "'b'", "]", "[", "'subsection'", "]", "[", "'output'", "]", "is", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_inheritance_missing": [[352, 366], ["pytest.raises", "patapsco.ConfigInheritance.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_inheritance_missing", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "{", "\n", "'p1'", ":", "1", ",", "\n", "'p2'", ":", "2", ",", "\n", "}", ",", "\n", "'b'", ":", "{", "\n", "'inherit'", ":", "'z'", ",", "\n", "'p2'", ":", "0", ",", "\n", "'p3'", ":", "3", "\n", "}", "\n", "}", "\n", "with", "pytest", ".", "raises", "(", "config", ".", "ConfigError", ")", ":", "\n", "        ", "config", ".", "ConfigInheritance", ".", "process", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_inheritance_nested_key": [[368, 386], ["patapsco.ConfigInheritance.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "test_inheritance_nested_key", "(", ")", ":", "\n", "    ", "conf", "=", "{", "\n", "'a'", ":", "{", "\n", "'b'", ":", "{", "\n", "'color'", ":", "'red'", "\n", "}", ",", "\n", "'p2'", ":", "2", ",", "\n", "}", ",", "\n", "'x'", ":", "{", "\n", "'y'", ":", "{", "\n", "'inherit'", ":", "'a.b'", ",", "\n", "'size'", ":", "'large'", "\n", "}", "\n", "}", "\n", "}", "\n", "config", ".", "ConfigInheritance", ".", "process", "(", "conf", ")", "\n", "assert", "conf", "[", "'x'", "]", "[", "'y'", "]", "[", "'color'", "]", "==", "'red'", "\n", "assert", "conf", "[", "'x'", "]", "[", "'y'", "]", "[", "'size'", "]", "==", "'large'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_config.test_imports": [[388, 395], ["patapsco.ConfigService().read_config_file", "pathlib.Path", "patapsco.ConfigService"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file"], ["", "def", "test_imports", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'config_files'", "\n", "main_filename", "=", "directory", "/", "'main.yml'", "\n", "conf", "=", "config", ".", "ConfigService", "(", ")", ".", "read_config_file", "(", "main_filename", ")", "\n", "assert", "conf", "[", "'run'", "]", "[", "'name'", "]", "==", "\"English test run\"", "\n", "assert", "conf", "[", "'documents'", "]", "[", "'input'", "]", "[", "'format'", "]", "==", "'json'", "\n", "assert", "conf", "[", "'index'", "]", "[", "'name'", "]", "==", "'lucene'", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics": [[52, 68], ["Hc4JsonTopicReader", "next", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "methods", ["None"], ["    ", "def", "test_parse_json_topics", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ",", "'original'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'001'", "\n", "assert", "topic", ".", "title", "==", "'Test 1'", "\n", "assert", "topic", ".", "desc", "==", "'First test'", "\n", "assert", "topic", ".", "report", "==", "'report 1'", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'002'", "\n", "assert", "topic", ".", "title", "==", "'Test 2'", "\n", "assert", "topic", ".", "desc", "==", "'Second test'", "\n", "assert", "topic", ".", "report", "==", "'report 2'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_with_bad_language": [[69, 74], ["pytest.raises", "Hc4JsonTopicReader", "pathlib.Path", "str", "path.absolute"], "methods", ["None"], ["", "", "def", "test_with_bad_language", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics.jsonl'", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'spa'", ",", "'translation'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics_rus": [[75, 91], ["Hc4JsonTopicReader", "next", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "methods", ["None"], ["", "", "def", "test_parse_json_topics_rus", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'rus'", ",", "'translation'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'001'", "\n", "assert", "topic", ".", "title", "==", "'\u0422\u0435\u0441\u0442 1'", "\n", "assert", "topic", ".", "desc", "==", "'\u041f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442'", "\n", "assert", "topic", ".", "report", "==", "'report 1'", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'002'", "\n", "assert", "topic", ".", "title", "==", "'\u0422\u0435\u0441\u0442 2'", "\n", "assert", "topic", ".", "desc", "==", "'\u0412\u0442\u043e\u0440\u043e\u0439 \u0442\u0435\u0441\u0442'", "\n", "assert", "topic", ".", "report", "==", "'report 2'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics_filter_by_lang": [[92, 103], ["Hc4JsonTopicReader", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "methods", ["None"], ["", "", "def", "test_parse_json_topics_filter_by_lang", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics_different_langs.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ",", "'original'", ",", "'zho'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'001'", "\n", "assert", "topic", ".", "title", "==", "'Test 1'", "\n", "assert", "topic", ".", "desc", "==", "'First test'", "\n", "assert", "topic", ".", "report", "==", "'report 1'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "            ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics_with_none_title": [[104, 110], ["Hc4JsonTopicReader", "next", "str", "pathlib.Path", "path.absolute"], "methods", ["None"], ["", "", "def", "test_parse_json_topics_with_none_title", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics_none.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ",", "'original'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'002'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics_with_filter": [[111, 117], ["Hc4JsonTopicReader", "next", "str", "pathlib.Path", "path.absolute"], "methods", ["None"], ["", "def", "test_parse_json_topics_with_filter", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics_filter.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ",", "'original'", ",", "'zho'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'002'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestHc4JsonTopicReader.test_parse_json_topics_with_filter2": [[118, 126], ["Hc4JsonTopicReader", "next", "next", "str", "pathlib.Path", "path.absolute"], "methods", ["None"], ["", "def", "test_parse_json_topics_with_filter2", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "path", "=", "directory", "/", "'topics_filter.jsonl'", "\n", "topic_iter", "=", "Hc4JsonTopicReader", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "'utf8'", ",", "'eng'", ",", "'original'", ",", "'rus'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'001'", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", ".", "id", "==", "'002'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestPSQ.setup_method": [[145, 147], ["pathlib.Path", "tempfile.mkdtemp"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestPSQ.teardown_method": [[148, 150], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestPSQ.test_psq_query_generation": [[151, 164], ["patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "patapsco.text.TextProcessor.begin", "patapsco.topics.PSQGenerator", "patapsco.topics.PSQGenerator.generate", "patapsco.topics.Query", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate"], ["", "def", "test_psq_query_generation", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'psq_files'", "\n", "path", "=", "directory", "/", "'psq.json'", "\n", "text_config", "=", "TextProcessorConfig", "(", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "False", ",", "\n", "stem", "=", "False", "\n", ")", "\n", "processor", "=", "TextProcessor", "(", "self", ".", "temp_dir", ",", "text_config", ",", "'eng'", ")", "\n", "processor", ".", "begin", "(", ")", "# load models", "\n", "generator", "=", "PSQGenerator", "(", "processor", ",", "path", ",", "0.97", ")", "\n", "query", "=", "generator", ".", "generate", "(", "Query", "(", "1", ",", "''", ",", "''", ",", "''", ",", "''", ")", ",", "''", ",", "[", "'cat'", ",", "'dog'", ",", "'bird'", ",", "'hello'", "]", ")", "\n", "assert", "query", ".", "query", "==", "\"psq AND (gato^0.8421 felino^0.1579) AND (pero^0.8182 can^0.1818) AND (p\u00e1jaro^0.6122 ave^0.3878) AND (hola^1.0000)\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestPSQ.test_psq_generation_remove_empty_entry": [[165, 178], ["patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "patapsco.text.TextProcessor.begin", "patapsco.topics.PSQGenerator", "patapsco.topics.PSQGenerator.generate", "patapsco.topics.Query", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate"], ["", "def", "test_psq_generation_remove_empty_entry", "(", "self", ")", ":", "\n", "        ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'psq_files'", "\n", "path", "=", "directory", "/", "'psq_table.json'", "\n", "text_config", "=", "TextProcessorConfig", "(", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "False", ",", "\n", "stem", "=", "False", "\n", ")", "\n", "processor", "=", "TextProcessor", "(", "self", ".", "temp_dir", ",", "text_config", ",", "'eng'", ")", "\n", "processor", ".", "begin", "(", ")", "# load models", "\n", "generator", "=", "PSQGenerator", "(", "processor", ",", "path", ",", "0.97", ")", "\n", "query", "=", "generator", ".", "generate", "(", "Query", "(", "1", ",", "''", ",", "''", ",", "''", ",", "''", ")", ",", "''", ",", "[", "'cat'", ",", "'error'", "]", ")", "\n", "assert", "query", ".", "query", "==", "\"psq AND (gato^0.8421 felino^0.1579)\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.setup_method": [[194, 203], ["patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "test_topics.TestLuceneQueryGenerator.processor.begin", "LuceneQueryGenerator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "text_config", "=", "TextProcessorConfig", "(", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "False", ",", "\n", "stem", "=", "\"porter\"", "\n", ")", "\n", "self", ".", "processor", "=", "TextProcessor", "(", "''", ",", "text_config", ",", "'eng'", ")", "\n", "self", ".", "processor", ".", "begin", "(", ")", "\n", "self", ".", "gen", "=", "LuceneQueryGenerator", "(", "self", ".", "processor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.process": [[204, 206], ["test_topics.TestLuceneQueryGenerator.gen.generate", "patapsco.topics.Query"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate"], ["", "def", "process", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "self", ".", "gen", ".", "generate", "(", "Query", "(", "'1'", ",", "''", ",", "''", ",", "''", ",", "''", ")", ",", "text", ",", "[", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_not_stemming": [[207, 218], ["patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "patapsco.text.TextProcessor.begin", "LuceneQueryGenerator", "LuceneQueryGenerator.generate", "patapsco.topics.Query"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate"], ["", "def", "test_not_stemming", "(", "self", ")", ":", "\n", "        ", "text_config", "=", "TextProcessorConfig", "(", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "False", ",", "\n", "stem", "=", "False", "\n", ")", "\n", "processor", "=", "TextProcessor", "(", "''", ",", "text_config", ",", "'eng'", ")", "\n", "processor", ".", "begin", "(", ")", "\n", "gen", "=", "LuceneQueryGenerator", "(", "processor", ")", "\n", "query", "=", "gen", ".", "generate", "(", "Query", "(", "'1'", ",", "''", ",", "''", ",", "''", ",", "''", ")", ",", "'running AND wonderful'", ",", "[", "]", ")", "\n", "assert", "query", ".", "query", "==", "'+contents:running +contents:wonderful'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_and": [[219, 222], ["test_topics.TestLuceneQueryGenerator.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_and", "(", "self", ")", ":", "\n", "        ", "query", "=", "self", ".", "process", "(", "'running AND wonderful'", ")", "\n", "assert", "query", ".", "query", "==", "'+contents:run +contents:wonder'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_or": [[223, 226], ["test_topics.TestLuceneQueryGenerator.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_or", "(", "self", ")", ":", "\n", "        ", "query", "=", "self", ".", "process", "(", "'running OR wonderful'", ")", "\n", "assert", "query", ".", "query", "==", "'contents:run contents:wonder'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_not": [[227, 230], ["test_topics.TestLuceneQueryGenerator.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_not", "(", "self", ")", ":", "\n", "        ", "query", "=", "self", ".", "process", "(", "'running NOT wonderful'", ")", "\n", "assert", "query", ".", "query", "==", "'contents:run -contents:wonder'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_phrase": [[231, 234], ["test_topics.TestLuceneQueryGenerator.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_phrase", "(", "self", ")", ":", "\n", "        ", "query", "=", "self", ".", "process", "(", "'\"running wonderful\"'", ")", "\n", "assert", "query", ".", "query", "==", "'contents:\"run wonder\"'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestLuceneQueryGenerator.test_grouping": [[235, 238], ["test_topics.TestLuceneQueryGenerator.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "test_grouping", "(", "self", ")", ":", "\n", "        ", "query", "=", "self", ".", "process", "(", "'(running OR walking) AND relaxing'", ")", "\n", "assert", "query", ".", "query", "==", "'+(contents:run contents:walk) +contents:relax'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.TestQueryProcessor.test_config_conflict": [[241, 247], ["patapsco.schema.QueriesConfig", "pytest.raises", "QueryProcessor", "patapsco.schema.TextProcessorConfig", "patapsco.schema.PSQConfig"], "methods", ["None"], ["    ", "def", "test_config_conflict", "(", "self", ")", ":", "\n", "        ", "config", "=", "QueriesConfig", "(", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ")", ",", "\n", "psq", "=", "PSQConfig", "(", "path", "=", "''", ",", "lang", "=", "'eng'", ")", ",", "\n", "parse", "=", "True", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "QueryProcessor", "(", "''", ",", "config", ",", "'eng'", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_topic_process": [[14, 23], ["Mock", "Topic", "TopicProcessor.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["def", "test_topic_process", "(", ")", ":", "\n", "    ", "class", "Mock", ":", "\n", "        ", "def", "__init__", "(", "self", ",", "fields", ")", ":", "\n", "            ", "self", ".", "fields", "=", "fields", "\n", "\n", "", "", "mock", "=", "Mock", "(", "[", "'title'", ",", "'desc'", "]", ")", "\n", "topic", "=", "Topic", "(", "'1'", ",", "'eng'", ",", "'title'", ",", "'desc'", ",", "'report'", ")", "\n", "query", "=", "TopicProcessor", ".", "process", "(", "mock", ",", "topic", ")", "\n", "assert", "query", ".", "text", "==", "\"title desc\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_extract_fields_with_case": [[25, 29], ["TopicProcessor._extract_fields"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor._extract_fields"], ["", "def", "test_extract_fields_with_case", "(", ")", ":", "\n", "    ", "fields_str", "=", "'title+DESC'", "\n", "fields", "=", "TopicProcessor", ".", "_extract_fields", "(", "fields_str", ")", "\n", "assert", "fields", "==", "[", "'title'", ",", "'desc'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_extract_fields_with_bad_field": [[31, 35], ["pytest.raises", "TopicProcessor._extract_fields"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor._extract_fields"], ["", "def", "test_extract_fields_with_bad_field", "(", ")", ":", "\n", "    ", "fields_str", "=", "'title+report'", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "        ", "TopicProcessor", ".", "_extract_fields", "(", "fields_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_parse_msmarco_topics": [[37, 49], ["TsvTopicReader.parse", "next", "next", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse"], ["", "", "def", "test_parse_msmarco_topics", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'msmarco_files'", "\n", "path", "=", "directory", "/", "'queries.tsv'", "\n", "topic_iter", "=", "TsvTopicReader", ".", "parse", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'1'", "\n", "assert", "topic", "[", "1", "]", "==", "'is this a test?'", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'2'", "\n", "assert", "topic", "[", "1", "]", "==", "'define test'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_query_reader": [[128, 143], ["QueryReader", "next", "next", "str", "pytest.raises", "next", "pathlib.Path"], "function", ["None"], ["", "", "def", "test_query_reader", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "query_iter", "=", "QueryReader", "(", "str", "(", "directory", ")", ")", "\n", "query", "=", "next", "(", "query_iter", ")", "\n", "assert", "query", ".", "id", "==", "'001'", "\n", "assert", "query", ".", "lang", "==", "'eng'", "\n", "assert", "query", ".", "text", "==", "'test 1'", "\n", "assert", "query", ".", "report", "==", "'report 1'", "\n", "query", "=", "next", "(", "query_iter", ")", "\n", "assert", "query", ".", "id", "==", "'002'", "\n", "assert", "query", ".", "lang", "==", "'eng'", "\n", "assert", "query", ".", "text", "==", "'test 2'", "\n", "assert", "query", ".", "report", "==", "'report 2'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "query_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_topics.test_lucene_query_transformer": [[180, 191], ["patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "patapsco.text.TextProcessor.begin", "LuceneTransformer", "luqum.parser.parser.parse", "str", "LuceneTransformer.visit"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse"], ["", "", "def", "test_lucene_query_transformer", "(", ")", ":", "\n", "    ", "text_config", "=", "TextProcessorConfig", "(", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "False", ",", "\n", "stem", "=", "\"porter\"", "\n", ")", "\n", "processor", "=", "TextProcessor", "(", "''", ",", "text_config", ",", "'eng'", ")", "\n", "processor", ".", "begin", "(", ")", "\n", "stemmer", "=", "LuceneTransformer", "(", "processor", ")", "\n", "tree", "=", "luqum", ".", "parser", ".", "parser", ".", "parse", "(", "\"contents:running AND contents:wonderful\"", ")", "\n", "assert", "str", "(", "stemmer", ".", "visit", "(", "tree", ")", ")", "==", "\"contents:run AND contents:wonder\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.MockDB.__init__": [[15, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "path", "=", "'test'", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.MockDB.__getitem__": [[18, 20], ["patapsco.docs.Doc"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "Doc", "(", "'aaa'", ",", "'eng'", ",", "'text'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.setup_method": [[25, 28], ["tempfile.mkdtemp", "patapsco.schema.PathConfig"], "methods", ["None"], ["def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "tempfile", ".", "mkdtemp", "(", ")", "\n", "self", ".", "path_config", "=", "PathConfig", "(", "path", "=", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.teardown_method": [[29, 31], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.create_config": [[32, 39], ["RerankConfig", "patapsco.schema.RerankInputConfig"], "methods", ["None"], ["", "def", "create_config", "(", "self", ",", "script", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "RerankConfig", "(", "\n", "input", "=", "RerankInputConfig", "(", "database", "=", "self", ".", "path_config", ",", "results", "=", "None", ")", ",", "\n", "name", "=", "'shell'", ",", "\n", "script", "=", "script", ",", "\n", "output", "=", "self", ".", "temp_dir", ",", "\n", "**", "kwargs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_with_success": [[41, 55], ["str", "test_rerank.TestShellReranker.create_config", "ShellReranker", "ShellReranker.batch_process", "Results", "test_rerank.MockDB", "patapsco.topics.Query", "patapsco.results.Result", "patapsco.results.Result"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "def", "test_shell_reranker_with_success", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'success.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ")", "\n", "reranker", "=", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "items", "=", "[", "Results", "(", "Query", "(", "'1'", ",", "'eng'", ",", "'text'", ",", "'text'", ",", "'report'", ")", ",", "'eng'", ",", "'test'", ",", "[", "\n", "Result", "(", "'aaa'", ",", "1", ",", "0.5", ")", ",", "\n", "Result", "(", "'bbb'", ",", "2", ",", "0.4", ")", "\n", "]", ")", "]", "\n", "new_items", "=", "reranker", ".", "batch_process", "(", "items", ")", "\n", "assert", "new_items", "[", "0", "]", ".", "query", ".", "id", "==", "'1'", "\n", "assert", "new_items", "[", "0", "]", ".", "query", ".", "lang", "==", "'eng'", "\n", "assert", "new_items", "[", "0", "]", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'bbb'", "\n", "assert", "new_items", "[", "0", "]", ".", "results", "[", "1", "]", ".", "doc_id", "==", "'aaa'", "\n", "assert", "reranker", ".", "batch", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_with_fewer_queries_in_output": [[56, 66], ["str", "test_rerank.TestShellReranker.create_config", "ShellReranker", "Results", "Results", "pytest.raises", "ShellReranker.batch_process", "test_rerank.MockDB", "patapsco.topics.Query", "patapsco.topics.Query", "patapsco.results.Result", "patapsco.results.Result", "patapsco.results.Result", "patapsco.results.Result"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "def", "test_shell_reranker_with_fewer_queries_in_output", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'success.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ")", "\n", "reranker", "=", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "items", "=", "[", "\n", "Results", "(", "Query", "(", "'1'", ",", "'eng'", ",", "'text'", ",", "'text'", ",", "'report 1'", ")", ",", "'eng'", ",", "'test'", ",", "[", "Result", "(", "'aaa'", ",", "1", ",", "0.5", ")", ",", "Result", "(", "'bbb'", ",", "2", ",", "0.4", ")", "]", ")", ",", "\n", "Results", "(", "Query", "(", "'2'", ",", "'eng'", ",", "'text2'", ",", "'text 2'", ",", "'report 2'", ")", ",", "'eng'", ",", "'test'", ",", "[", "Result", "(", "'aaa'", ",", "1", ",", "0.5", ")", ",", "Result", "(", "'bbb'", ",", "2", ",", "0.4", ")", "]", ")", ",", "\n", "]", "\n", "with", "pytest", ".", "raises", "(", "PatapscoError", ")", ":", "\n", "            ", "reranker", ".", "batch_process", "(", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_with_error": [[67, 74], ["str", "test_rerank.TestShellReranker.create_config", "ShellReranker", "Results", "pytest.raises", "ShellReranker.batch_process", "test_rerank.MockDB", "patapsco.topics.Query", "patapsco.results.Result"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "", "def", "test_shell_reranker_with_error", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'error.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ")", "\n", "reranker", "=", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "items", "=", "[", "Results", "(", "Query", "(", "'1'", ",", "'eng'", ",", "'text'", ",", "'text'", ",", "'report'", ")", ",", "'eng'", ",", "'test'", ",", "[", "Result", "(", "'1'", ",", "1", ",", "0.5", ")", "]", ")", "]", "\n", "with", "pytest", ".", "raises", "(", "PatapscoError", ")", ":", "\n", "            ", "reranker", ".", "batch_process", "(", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_with_no_exist_script": [[75, 80], ["str", "test_rerank.TestShellReranker.create_config", "pytest.raises", "ShellReranker", "test_rerank.MockDB"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config"], ["", "", "def", "test_shell_reranker_with_no_exist_script", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'nothing.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_call_process": [[81, 91], ["str", "test_rerank.TestShellReranker.create_config", "ShellReranker", "Results", "patapsco.topics.Query", "pytest.raises", "ShellReranker.process", "test_rerank.MockDB", "patapsco.results.Result", "patapsco.results.Result"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "test_shell_reranker_call_process", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'success.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ")", "\n", "reranker", "=", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "item", "=", "Results", "(", "Query", "(", "'1'", ",", "'eng'", ",", "'text'", ",", "'text'", ",", "'report'", ")", ",", "'eng'", ",", "'test'", ",", "[", "\n", "Result", "(", "'aaa'", ",", "1", ",", "0.5", ")", ",", "\n", "Result", "(", "'bbb'", ",", "2", ",", "0.4", ")", "\n", "]", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "reranker", ".", "process", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_rerank.TestShellReranker.test_shell_reranker_with_args": [[92, 106], ["str", "test_rerank.TestShellReranker.create_config", "ShellReranker", "ShellReranker.batch_process", "Results", "test_rerank.MockDB", "patapsco.topics.Query", "patapsco.results.Result", "patapsco.results.Result"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "", "def", "test_shell_reranker_with_args", "(", "self", ")", ":", "\n", "        ", "script", "=", "str", "(", "self", ".", "directory", "/", "'args.sh'", ")", "\n", "config", "=", "self", ".", "create_config", "(", "script", ",", "embedding", "=", "\"mbert\"", ")", "\n", "reranker", "=", "ShellReranker", "(", "run_path", "=", "''", ",", "config", "=", "config", ",", "db", "=", "MockDB", "(", ")", ")", "\n", "items", "=", "[", "Results", "(", "Query", "(", "'1'", ",", "'eng'", ",", "'text'", ",", "'text'", ",", "'report'", ")", ",", "'eng'", ",", "'test'", ",", "[", "\n", "Result", "(", "'aaa'", ",", "1", ",", "0.5", ")", ",", "\n", "Result", "(", "'bbb'", ",", "2", ",", "0.4", ")", "\n", "]", ")", "]", "\n", "new_items", "=", "reranker", ".", "batch_process", "(", "items", ")", "\n", "assert", "new_items", "[", "0", "]", ".", "query", ".", "id", "==", "'1'", "\n", "assert", "new_items", "[", "0", "]", ".", "query", ".", "lang", "==", "'eng'", "\n", "assert", "new_items", "[", "0", "]", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'bbb'", "\n", "assert", "new_items", "[", "0", "]", ".", "results", "[", "1", "]", ".", "doc_id", "==", "'aaa'", "\n", "assert", "reranker", ".", "batch", "==", "1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_results.test_json_results_reader": [[8, 29], ["JsonResultsReader", "next", "next", "str", "len", "len", "pytest.raises", "next", "pathlib.Path"], "function", ["None"], ["def", "test_json_results_reader", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'json_files'", "\n", "results_iter", "=", "JsonResultsReader", "(", "str", "(", "directory", ")", ")", "\n", "results", "=", "next", "(", "results_iter", ")", "\n", "assert", "results", ".", "query", ".", "id", "==", "'001'", "\n", "assert", "results", ".", "query", ".", "lang", "==", "'eng'", "\n", "assert", "results", ".", "query", ".", "text", "==", "'test 1'", "\n", "assert", "results", ".", "system", "==", "'PyseriniRetriever'", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "2", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'aaa'", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "rank", "==", "1", "\n", "results", "=", "next", "(", "results_iter", ")", "\n", "assert", "results", ".", "query", ".", "id", "==", "'002'", "\n", "assert", "results", ".", "query", ".", "lang", "==", "'eng'", "\n", "assert", "results", ".", "query", ".", "text", "==", "'test 2'", "\n", "assert", "results", ".", "system", "==", "'PyseriniRetriever'", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "2", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'bbb'", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "rank", "==", "1", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "results_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_results.test_trec_results_reader": [[31, 48], ["TrecResultsReader", "next", "next", "str", "len", "len", "pytest.raises", "next", "pathlib.Path"], "function", ["None"], ["", "", "def", "test_trec_results_reader", "(", ")", ":", "\n", "    ", "path", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "/", "'results.txt'", "\n", "results_iter", "=", "TrecResultsReader", "(", "str", "(", "path", ")", ")", "\n", "results", "=", "next", "(", "results_iter", ")", "\n", "assert", "results", ".", "query", ".", "id", "==", "'1'", "\n", "assert", "results", ".", "system", "==", "'MockReranker'", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "2", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'aaa'", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "rank", "==", "1", "\n", "results", "=", "next", "(", "results_iter", ")", "\n", "assert", "results", ".", "query", ".", "id", "==", "'2'", "\n", "assert", "results", ".", "system", "==", "'MockReranker'", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "2", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'bbb'", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "rank", "==", "1", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "results_iter", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.setup_method": [[14, 16], ["pathlib.Path", "tempfile.mkdtemp"], "methods", ["None"], ["def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.teardown_method": [[17, 25], ["delete_dir", "path.exists", "path.exists", "delete_dir", "delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "path", "=", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"docs_complete\"", "/", "\"index\"", "\n", "if", "path", ".", "exists", "(", ")", ":", "\n", "            ", "delete_dir", "(", "path", ")", "\n", "", "path", "=", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"topics_complete\"", "/", "\"queries\"", "\n", "if", "path", ".", "exists", "(", ")", ":", "\n", "            ", "delete_dir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config": [[26, 59], ["RunnerConfig", "RunConfig", "DatabaseConfig", "DocumentsConfig", "IndexConfig", "TopicsConfig", "QueriesConfig", "RetrieveConfig", "RerankConfig", "ScoreConfig", "str", "DocumentsInputConfig", "TextProcessorConfig", "TopicsInputConfig", "TextProcessorConfig", "RetrieveInputConfig", "RerankInputConfig", "ScoreInputConfig", "str", "str", "PathConfig", "PathConfig", "str"], "methods", ["None"], ["", "", "def", "create_config", "(", "self", ",", "path", ")", ":", "\n", "        ", "output_directory", "=", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "path", "\n", "input_directory", "=", "self", ".", "dir", "/", "\"build_files\"", "/", "\"input\"", "\n", "if", "path", "==", "'test'", ":", "\n", "            ", "output_directory", "=", "self", ".", "temp_dir", "\n", "", "return", "RunnerConfig", "(", "\n", "run", "=", "RunConfig", "(", "name", "=", "'run name'", ",", "path", "=", "str", "(", "output_directory", ")", ")", ",", "\n", "database", "=", "DatabaseConfig", "(", "output", "=", "\"database\"", ")", ",", "\n", "documents", "=", "DocumentsConfig", "(", "\n", "input", "=", "DocumentsInputConfig", "(", "format", "=", "\"jsonl\"", ",", "lang", "=", "\"eng\"", ",", "path", "=", "str", "(", "input_directory", "/", "\"docs.jsonl\"", ")", ")", ",", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", ",", "\n", "output", "=", "\"docs\"", "\n", ")", ",", "\n", "index", "=", "IndexConfig", "(", "name", "=", "\"lucene\"", ",", "output", "=", "\"index\"", ")", ",", "\n", "topics", "=", "TopicsConfig", "(", "\n", "input", "=", "TopicsInputConfig", "(", "format", "=", "\"jsonl\"", ",", "lang", "=", "\"eng\"", ",", "source", "=", "\"original\"", ",", "path", "=", "str", "(", "input_directory", "/", "\"topics.jsonl\"", ")", ")", ",", "\n", "output", "=", "\"topics\"", "\n", ")", ",", "\n", "queries", "=", "QueriesConfig", "(", "\n", "process", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", ",", "\n", "output", "=", "\"queries\"", "\n", ")", ",", "\n", "retrieve", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "\"index\"", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"retrieve\"", "\n", ")", ",", "\n", "rerank", "=", "RerankConfig", "(", "\n", "input", "=", "RerankInputConfig", "(", "database", "=", "PathConfig", "(", "path", "=", "\"test\"", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"rerank\"", "\n", ")", ",", "\n", "score", "=", "ScoreConfig", "(", "input", "=", "ScoreInputConfig", "(", "format", "=", "'trec'", ",", "path", "=", "str", "(", "input_directory", "/", "'qrels'", ")", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_no_stages": [[61, 66], ["RunnerConfig", "JobBuilder", "pytest.raises", "JobBuilder.build", "RunConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.build"], ["", "def", "test_create_plan_with_no_stages", "(", "self", ")", ":", "\n", "        ", "conf", "=", "RunnerConfig", "(", "run", "=", "RunConfig", "(", "name", "=", "'test'", ",", "path", "=", "str", "(", "self", ".", "temp_dir", ")", ")", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "'No tasks are configured to run'", ")", ":", "\n", "            ", "builder", ".", "build", "(", "debug", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan1_with_normal_config": [[67, 73], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage1_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan"], ["", "", "def", "test_create_plan1_with_normal_config", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage1_plan", "=", "builder", ".", "_create_stage1_plan", "(", ")", "\n", "assert", "Tasks", ".", "DOCUMENTS", "in", "stage1_plan", "\n", "assert", "Tasks", ".", "INDEX", "in", "stage1_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan2_with_normal_config": [[74, 82], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage2_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan"], ["", "def", "test_create_plan2_with_normal_config", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage2_plan", "=", "builder", ".", "_create_stage2_plan", "(", ")", "\n", "assert", "Tasks", ".", "TOPICS", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "QUERIES", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "RETRIEVE", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "RERANK", "in", "stage2_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_complete_documents": [[83, 89], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage1_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan"], ["", "def", "test_create_plan_with_complete_documents", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'docs_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage1_plan", "=", "builder", ".", "_create_stage1_plan", "(", ")", "\n", "assert", "Tasks", ".", "DOCUMENTS", "not", "in", "stage1_plan", "\n", "assert", "Tasks", ".", "INDEX", "in", "stage1_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_incomplete_documents": [[90, 96], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage1_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan"], ["", "def", "test_create_plan_with_incomplete_documents", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'docs_incomplete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage1_plan", "=", "builder", ".", "_create_stage1_plan", "(", ")", "\n", "assert", "Tasks", ".", "DOCUMENTS", "in", "stage1_plan", "\n", "assert", "Tasks", ".", "INDEX", "in", "stage1_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_complete_documents_and_complete_index": [[97, 102], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage1_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan"], ["", "def", "test_create_plan_with_complete_documents_and_complete_index", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'stage1_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage1_plan", "=", "builder", ".", "_create_stage1_plan", "(", ")", "\n", "assert", "stage1_plan", "==", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_incomplete_documents_and_complete_index": [[103, 108], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage1_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan"], ["", "def", "test_create_plan_with_incomplete_documents_and_complete_index", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'docs_incomplete_index_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage1_plan", "=", "builder", ".", "_create_stage1_plan", "(", ")", "\n", "assert", "stage1_plan", "==", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_complete_topics": [[109, 115], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage2_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan"], ["", "def", "test_create_plan_with_complete_topics", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'topics_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage2_plan", "=", "builder", ".", "_create_stage2_plan", "(", ")", "\n", "assert", "Tasks", ".", "TOPICS", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "QUERIES", "in", "stage2_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_complete_queries": [[116, 123], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage2_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan"], ["", "def", "test_create_plan_with_complete_queries", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'queries_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage2_plan", "=", "builder", ".", "_create_stage2_plan", "(", ")", "\n", "assert", "Tasks", ".", "TOPICS", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "QUERIES", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "RETRIEVE", "in", "stage2_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_create_plan_with_complete_retrieval": [[124, 132], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._create_stage2_plan"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan"], ["", "def", "test_create_plan_with_complete_retrieval", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'retrieval_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "stage2_plan", "=", "builder", ".", "_create_stage2_plan", "(", ")", "\n", "assert", "Tasks", ".", "TOPICS", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "QUERIES", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "RETRIEVE", "not", "in", "stage2_plan", "\n", "assert", "Tasks", ".", "RERANK", "in", "stage2_plan", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_standard_docs": [[133, 141], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage1_tasks", "isinstance", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "def", "test_build_stage1_with_standard_docs", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "assert", "len", "(", "tasks", ")", "==", "2", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "DocumentProcessor", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "1", "]", ",", "DocWriter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_standard_docs_but_no_output": [[142, 150], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage1_tasks", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "def", "test_build_stage1_with_standard_docs_but_no_output", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "output", "=", "False", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "assert", "len", "(", "tasks", ")", "==", "1", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "DocumentProcessor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_bad_doc_format": [[151, 158], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator"], ["", "def", "test_build_stage1_with_bad_doc_format", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "format", "=", "\"abc\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown input document type: abc\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_bad_doc_encoding": [[159, 166], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator"], ["", "", "def", "test_build_stage1_with_bad_doc_encoding", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "encoding", "=", "\"abc\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"abc is not a valid file encoding\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_no_files": [[167, 174], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator"], ["", "", "def", "test_build_stage1_with_no_files", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "\"nothing\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"No files match pattern\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_bad_lang": [[175, 182], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_tasks"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "", "def", "test_build_stage1_with_bad_lang", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "lang", "=", "\"ax\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown language code: ax\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_bad_tokenizer": [[183, 190], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_tasks"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "", "def", "test_build_stage1_with_bad_tokenizer", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "process", ".", "tokenize", "=", "\"nothing\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_no_documents_for_indexer": [[191, 198], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator"], ["", "", "def", "test_build_stage1_with_no_documents_for_indexer", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", "=", "None", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "INDEX", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"index not configured with documents\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_indexer_gets_docs_from_documents": [[199, 206], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage1_iterator", "JobBuilder._get_stage1_tasks", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "", "def", "test_build_stage1_with_indexer_gets_docs_from_documents", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'docs_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "INDEX", "]", "\n", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "LuceneIndexer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_indexer_gets_docs_from_input": [[207, 216], ["test_job.TestJobBuilder.create_config", "IndexInputConfig", "JobBuilder", "JobBuilder._get_stage1_iterator", "JobBuilder._get_stage1_tasks", "isinstance", "PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "def", "test_build_stage1_with_indexer_gets_docs_from_input", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'docs_complete'", ")", "\n", "conf", ".", "documents", "=", "None", "\n", "conf", ".", "index", ".", "input", "=", "IndexInputConfig", "(", "documents", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"docs_complete\"", "/", "\"docs\"", ")", ")", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "INDEX", "]", "\n", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "LuceneIndexer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_indexer_gets_bad_docs_from_input": [[217, 225], ["test_job.TestJobBuilder.create_config", "IndexInputConfig", "JobBuilder", "pytest.raises", "JobBuilder._get_stage1_iterator", "PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator"], ["", "def", "test_build_stage1_with_indexer_gets_bad_docs_from_input", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", "=", "None", "\n", "conf", ".", "index", ".", "input", "=", "IndexInputConfig", "(", "documents", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"docs_incomplete\"", "/", "\"docs\"", ")", ")", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "INDEX", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unable to load artifact config\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_standard_docs_index": [[226, 236], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage1_tasks", "isinstance", "isinstance", "isinstance", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks"], ["", "", "def", "test_build_stage1_with_standard_docs_index", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", ",", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "INDEX", "]", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "assert", "len", "(", "tasks", ")", "==", "4", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "DocumentProcessor", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "1", "]", ",", "DatabaseWriter", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "2", "]", ",", "DocWriter", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "3", "]", ",", "LuceneIndexer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage1_with_bad_pipeline_mode": [[237, 246], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage1_iterator", "JobBuilder._get_stage1_tasks", "pytest.raises", "JobBuilder._build_stage1_pipeline"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._build_stage1_pipeline"], ["", "def", "test_build_stage1_with_bad_pipeline_mode", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "run", ".", "stage1", ".", "mode", "=", "\"fast\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "DOCUMENTS", ",", "Tasks", ".", "INDEX", "]", "\n", "iterator", "=", "builder", ".", "_get_stage1_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage1_tasks", "(", "plan", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unrecognized pipeline mode\"", ")", ":", "\n", "            ", "builder", ".", "_build_stage1_pipeline", "(", "iterator", ",", "tasks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_standard_topics": [[247, 255], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage2_tasks", "isinstance", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "", "def", "test_build_stage2_with_standard_topics", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "tasks", "=", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "assert", "len", "(", "tasks", ")", "==", "2", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "TopicProcessor", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "1", "]", ",", "QueryWriter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_standard_topics_but_no_output": [[256, 264], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage2_tasks", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "def", "test_build_stage2_with_standard_topics_but_no_output", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", ".", "output", "=", "False", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "tasks", "=", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "assert", "len", "(", "tasks", ")", "==", "1", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "TopicProcessor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_bad_topic_format": [[265, 272], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage2_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator"], ["", "def", "test_build_stage2_with_bad_topic_format", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", ".", "input", ".", "format", "=", "\"abc\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown topic type: abc\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_bad_encoding": [[273, 280], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage2_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator"], ["", "", "def", "test_build_stage2_with_bad_encoding", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", ".", "input", ".", "encoding", "=", "\"abc\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"abc is not a valid file encoding\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_no_files": [[281, 288], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage2_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator"], ["", "", "def", "test_build_stage2_with_no_files", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", ".", "input", ".", "path", "=", "\"nothing\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"No files match pattern\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_with_bad_lang": [[289, 296], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage2_tasks"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "", "def", "test_build_stage2_with_bad_lang", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", ".", "input", ".", "lang", "=", "\"ax\"", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "TOPICS", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown language code: ax\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_queries_with_no_topics": [[297, 304], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder._get_stage2_iterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator"], ["", "", "def", "test_build_stage2_queries_with_no_topics", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "topics", "=", "None", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "QUERIES", "]", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"query processor not configured with input\"", ")", ":", "\n", "            ", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_queries_with_topic_output": [[305, 312], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder._get_stage2_iterator", "JobBuilder._get_stage2_tasks", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "", "def", "test_build_stage2_queries_with_topic_output", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'topics_complete'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "QUERIES", "]", "\n", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "QueryProcessor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_queries_with_query_input": [[313, 322], ["test_job.TestJobBuilder.create_config", "QueriesInputConfig", "JobBuilder", "JobBuilder._get_stage2_iterator", "JobBuilder._get_stage2_tasks", "isinstance", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "def", "test_build_stage2_queries_with_query_input", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'topics_complete'", ")", "\n", "conf", ".", "topics", "=", "None", "\n", "conf", ".", "queries", ".", "input", "=", "QueriesInputConfig", "(", "path", "=", "str", "(", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"topics_complete\"", "/", "\"topics\"", ")", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "QUERIES", "]", "\n", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "QueryProcessor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_build_stage2_queries_with_query_input_to_file": [[323, 333], ["test_job.TestJobBuilder.create_config", "QueriesInputConfig", "JobBuilder", "JobBuilder._get_stage2_iterator", "JobBuilder._get_stage2_tasks", "isinstance", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks"], ["", "def", "test_build_stage2_queries_with_query_input_to_file", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'topics_complete'", ")", "\n", "conf", ".", "topics", "=", "None", "\n", "conf", ".", "queries", ".", "input", "=", "QueriesInputConfig", "(", "path", "=", "str", "(", "self", ".", "dir", "/", "\"build_files\"", "/", "\"output\"", "/", "\"topics_complete\"", "/", "\"topics\"", "/", "\"queries.jsonl\"", ")", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "plan", "=", "[", "Tasks", ".", "QUERIES", "]", "\n", "builder", ".", "_get_stage2_iterator", "(", "plan", ")", "\n", "tasks", "=", "builder", ".", "_get_stage2_tasks", "(", "plan", ")", "\n", "assert", "isinstance", "(", "tasks", "[", "0", "]", ",", "QueryProcessor", ")", "\n", "assert", "tasks", "[", "0", "]", ".", "lang", "==", "\"eng\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_standard_config": [[334, 338], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder.check_sources_of_documents"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "def", "test_check_sources_of_documents_standard_config", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_str_same": [[339, 346], ["test_job.TestJobBuilder.create_config", "str", "JobBuilder", "JobBuilder.check_sources_of_documents", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "def", "test_check_sources_of_documents_str_same", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "\"build_files\"", "/", "\"output\"", "/", "\"database\"", "\n", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "\"docs.jsonl\"", "\n", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "=", "str", "(", "db_dir", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_str_diff": [[347, 355], ["test_job.TestJobBuilder.create_config", "str", "JobBuilder", "pytest.raises", "JobBuilder.check_sources_of_documents", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "def", "test_check_sources_of_documents_str_diff", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "\"build_files\"", "/", "\"output\"", "/", "\"database\"", "\n", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "\"docs_other_data.jsonl\"", "\n", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "=", "str", "(", "db_dir", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_type_diff": [[356, 364], ["test_job.TestJobBuilder.create_config", "str", "JobBuilder", "pytest.raises", "JobBuilder.check_sources_of_documents", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "", "def", "test_check_sources_of_documents_type_diff", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "\"build_files\"", "/", "\"output\"", "/", "\"database\"", "\n", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "[", "\"docs_other_data.jsonl\"", ",", "\"more_docs.jsonl\"", "]", "\n", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "=", "str", "(", "db_dir", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_list_same": [[365, 372], ["test_job.TestJobBuilder.create_config", "str", "JobBuilder", "JobBuilder.check_sources_of_documents", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "", "def", "test_check_sources_of_documents_list_same", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "\"build_files\"", "/", "\"output\"", "/", "\"database_doc_list\"", "\n", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "[", "\"docs.jsonl\"", ",", "\"docs2.jsonl\"", "]", "\n", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "=", "str", "(", "db_dir", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_sources_of_documents_list_diff": [[373, 381], ["test_job.TestJobBuilder.create_config", "str", "JobBuilder", "pytest.raises", "JobBuilder.check_sources_of_documents", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents"], ["", "def", "test_check_sources_of_documents_list_diff", "(", "self", ")", ":", "\n", "        ", "db_dir", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "\"build_files\"", "/", "\"output\"", "/", "\"database_doc_list\"", "\n", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "documents", ".", "input", ".", "path", "=", "[", "\"docs.jsonl\"", ",", "\"docs3.jsonl\"", "]", "\n", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "=", "str", "(", "db_dir", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "builder", ".", "check_sources_of_documents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_text_processing": [[382, 386], ["test_job.TestJobBuilder.create_config", "JobBuilder", "JobBuilder.check_text_processing"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_text_processing"], ["", "", "def", "test_check_text_processing", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "builder", ".", "check_text_processing", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.test_check_text_processing_mismatch": [[387, 393], ["test_job.TestJobBuilder.create_config", "JobBuilder", "pytest.raises", "JobBuilder.check_text_processing"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_job.TestJobBuilder.create_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_text_processing"], ["", "def", "test_check_text_processing_mismatch", "(", "self", ")", ":", "\n", "        ", "conf", "=", "self", ".", "create_config", "(", "'test'", ")", "\n", "conf", ".", "queries", ".", "process", ".", "normalize", ".", "lowercase", "=", "False", "\n", "builder", "=", "JobBuilder", "(", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "builder", ".", "check_text_processing", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_create_path_with_tilde": [[10, 13], ["patapsco.util.file.create_path", "pathlib.Path.home"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.create_path"], ["def", "test_create_path_with_tilde", "(", ")", ":", "\n", "    ", "path", "=", "file", ".", "create_path", "(", "\"~/test\"", ")", "\n", "assert", "pathlib", ".", "Path", ".", "home", "(", ")", "/", "\"test\"", "==", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_create_path_no_tilde": [[15, 18], ["patapsco.util.file.create_path", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.create_path"], ["", "def", "test_create_path_no_tilde", "(", ")", ":", "\n", "    ", "path", "=", "file", ".", "create_path", "(", "\"/exp\"", ")", "\n", "assert", "pathlib", ".", "Path", "(", "\"/exp\"", ")", "==", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_validate_encoding": [[20, 26], ["patapsco.util.file.validate_encoding", "patapsco.util.file.validate_encoding", "patapsco.util.file.validate_encoding", "pytest.raises", "patapsco.util.file.validate_encoding"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding"], ["", "def", "test_validate_encoding", "(", ")", ":", "\n", "    ", "file", ".", "validate_encoding", "(", "'utf-8'", ")", "\n", "file", ".", "validate_encoding", "(", "'utf8'", ")", "\n", "file", ".", "validate_encoding", "(", "'ISO-8859-1'", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "        ", "file", ".", "validate_encoding", "(", "'abc'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_is_dir_empty_with_non_empty_dir": [[28, 31], ["patapsco.util.file.is_dir_empty", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_dir_empty"], ["", "", "def", "test_is_dir_empty_with_non_empty_dir", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "assert", "not", "file", ".", "is_dir_empty", "(", "directory", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_is_dir_empty_with_empty_dir": [[33, 37], ["tempfile.mkdtemp", "patapsco.util.file.is_dir_empty", "patapsco.util.file.delete_dir"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_dir_empty", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "test_is_dir_empty_with_empty_dir", "(", ")", ":", "\n", "    ", "directory", "=", "tempfile", ".", "mkdtemp", "(", ")", "\n", "assert", "file", ".", "is_dir_empty", "(", "directory", ")", "\n", "file", ".", "delete_dir", "(", "directory", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_count_lines": [[39, 43], ["patapsco.util.file.count_lines", "patapsco.util.file.count_lines", "pathlib.Path", "str", "str"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "test_count_lines", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "assert", "file", ".", "count_lines", "(", "str", "(", "directory", "/", "'topics.xml'", ")", ")", "==", "15", "\n", "assert", "file", ".", "count_lines", "(", "str", "(", "directory", "/", "'results.txt'", ")", ")", "==", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_file.test_count_lines_with": [[45, 49], ["patapsco.util.file.count_lines_with", "patapsco.util.file.count_lines_with", "pathlib.Path", "str", "str"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with"], ["", "def", "test_count_lines_with", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "assert", "file", ".", "count_lines_with", "(", "'<topic'", ",", "str", "(", "directory", "/", "'topics.xml'", ")", ")", "==", "3", "\n", "assert", "file", ".", "count_lines_with", "(", "'aaa'", ",", "str", "(", "directory", "/", "'results.txt'", ")", ")", "==", "2", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.setup_method": [[46, 49], ["None"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "TokenizerStemmerFactory", ".", "tokenizer_cache", "=", "{", "}", "\n", "TokenizerStemmerFactory", ".", "stemmer_cache", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_with_invalid_tokenize": [[50, 53], ["pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "def", "test_validate_with_invalid_tokenize", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown tokenizer\"", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"stanford\"", ",", "stem", "=", "False", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_with_invalid_stem": [[54, 57], ["pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "", "def", "test_validate_with_invalid_stem", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ",", "match", "=", "\"Unknown stemmer\"", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "\"invalid\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_ngram_with_stem": [[58, 61], ["pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "", "def", "test_validate_ngram_with_stem", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"ngram\"", ",", "stem", "=", "\"porter\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_whitespace_with_invalid_stem": [[62, 65], ["pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "", "def", "test_validate_whitespace_with_invalid_stem", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "\"stanza\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_whitespace_with_valid_stem": [[66, 68], ["TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "", "def", "test_validate_whitespace_with_valid_stem", "(", "self", ")", ":", "\n", "        ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "\"porter\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_stanza_with_spacy": [[69, 72], ["pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "def", "test_validate_stanza_with_spacy", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"stanza\"", ",", "stem", "=", "\"spacy\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_stanza_porter_en": [[73, 75], ["TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "", "def", "test_validate_stanza_porter_en", "(", "self", ")", ":", "\n", "        ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"stanza\"", ",", "stem", "=", "\"porter\"", ")", ",", "\"eng\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_validate_parsivar": [[76, 83], ["TokenizerStemmerFactory.validate", "TokenizerStemmerFactory.validate", "TokenizerStemmerFactory.validate", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig", "patapsco.schema.TextProcessorConfig", "patapsco.schema.TextProcessorConfig", "patapsco.schema.TextProcessorConfig", "pytest.raises", "TokenizerStemmerFactory.validate", "patapsco.schema.TextProcessorConfig"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["", "def", "test_validate_parsivar", "(", "self", ")", ":", "\n", "        ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"moses\"", ",", "stem", "=", "\"parsivar\"", ")", ",", "\"fas\"", ")", "\n", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"spacy\"", ",", "stem", "=", "\"parsivar\"", ")", ",", "\"fas\"", ")", "\n", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"stanza\"", ",", "stem", "=", "\"parsivar\"", ")", ",", "\"fas\"", ")", "\n", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "\"parsivar\"", ")", ",", "\"fas\"", ")", "\n", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "TokenizerStemmerFactory", ".", "validate", "(", "TextProcessorConfig", "(", "tokenize", "=", "\"ngram\"", ",", "stem", "=", "\"parsivar\"", ")", ",", "\"fas\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_whitespace": [[84, 88], ["patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "", "def", "test_create_tokenizer_whitespace", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stem", "=", "False", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "tokenizer", ",", "WhiteSpaceTokenizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_ngram": [[89, 94], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_ngram", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"ngram\"", ",", "stem", "=", "False", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "tokenizer", ",", "NgramTokenizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_moses": [[95, 100], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_moses", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"moses\"", ",", "stem", "=", "False", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "tokenizer", ",", "MosesTokenizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_caching": [[101, 107], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "TokenizerStemmerFactory.create_tokenizer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_caching", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"moses\"", ",", "stem", "=", "False", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "tokenizer2", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "tokenizer", "==", "tokenizer2", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_spacy_no_stem": [[108, 114], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_spacy_no_stem", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"spacy\"", ",", "stem", "=", "False", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "tokenizer", ",", "SpacyNLP", ")", "\n", "assert", "'tok2vec'", "in", "tokenizer", ".", "nlp", ".", "disabled", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_spacy_with_stem": [[115, 121], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_spacy_with_stem", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"spacy\"", ",", "stem", "=", "\"spacy\"", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "tokenizer", ",", "SpacyNLP", ")", "\n", "assert", "'tok2vec'", "not", "in", "tokenizer", ".", "nlp", ".", "disabled", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_stemmer_porter": [[122, 126], ["patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_stemmer", "isinstance"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_stemmer"], ["", "def", "test_create_stemmer_porter", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"spacy\"", ",", "stem", "=", "\"porter\"", ")", "\n", "stemmer", "=", "TokenizerStemmerFactory", ".", "create_stemmer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "isinstance", "(", "stemmer", ",", "PorterStemmer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestTokenizerStemmerFactory.test_create_tokenizer_stemmer_combo": [[127, 133], ["pytest.mark.slow", "patapsco.schema.TextProcessorConfig", "TokenizerStemmerFactory.create_tokenizer", "TokenizerStemmerFactory.create_stemmer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_stemmer"], ["", "@", "pytest", ".", "mark", ".", "slow", "(", "reason", "=", "\"loads spacy model\"", ")", "\n", "def", "test_create_tokenizer_stemmer_combo", "(", "self", ")", ":", "\n", "        ", "conf", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"spacy\"", ",", "stem", "=", "\"spacy\"", ")", "\n", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "conf", ",", "\"eng\"", ")", "\n", "stemmer", "=", "TokenizerStemmerFactory", ".", "create_stemmer", "(", "conf", ",", "\"eng\"", ")", "\n", "assert", "tokenizer", "==", "stemmer", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_tokenizer_arabic": [[138, 143], ["StanzaNLP", "StanzaNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_arabic", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "StanzaNLP", "(", "lang", "=", "'ara'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u0641\u064a \u0623\u0633\u0631\u062a\u064a \u062b\u0644\u0627\u062b\u0629 \u0623\u0641\u0631\u0627\u062f.\"", ")", "\n", "assert", "tokens", "==", "[", "'\u0641\u064a'", ",", "'\u0623\u0633\u0631\u062a\u064a'", ",", "'\u062b\u0644\u0627\u062b\u0629'", ",", "'\u0623\u0641\u0631\u0627\u062f'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_stemmer_arabic": [[144, 151], ["pytest.mark.skip", "StanzaNLP", "StanzaNLP.tokenize", "StanzaNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.skip", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "skip", "(", "reason", "=", "\"stanza arabic model struggles - may be problem with foreign words\"", ")", "\n", "def", "test_stemmer_arabic", "(", "self", ")", ":", "\n", "        ", "text", "=", "'\u0641\u064a\u0644\u0645 \u062c\u0627\u0630\u0628\u064a\u0629 \u064a\u062a\u0635\u062f\u0631 \u062a\u0631\u0634\u064a\u062d\u0627\u062a \u062c\u0648\u0627\u0626\u0632 \u0627\u0644\u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629 \u0627\u0644\u0628\u0631\u064a\u0637\u0627\u0646\u064a\u0629 \u0644\u0641\u0646\u0648\u0646 \u0627\u0644\u0641\u064a\u0644\u0645 \u0648\u0627\u0644\u062a\u0644\u0641\u0632\u064a\u0648\u0646.'", "\n", "ans", "=", "[", "'\u0641\u064a\u0644\u0645'", ",", "'\u062c\u0627\u0630\u0628\u064a\u0629'", ",", "'\u062a\u0635\u062f\u0631'", ",", "'\u062a\u0631\u0634\u064a\u062d'", ",", "'\u062c\u0627\u0626\u0632\u0629'", ",", "'\u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629'", ",", "'\u0628\u0631\u064a\u0637\u0627\u0646\u064a'", ",", "'\u0641\u0646'", ",", "'\u0641\u064a\u0644\u0645'", ",", "'\u062a\u0644\u0641\u0632\u064a\u0648\u0646'", ",", "'.'", "]", "\n", "nlp", "=", "StanzaNLP", "(", "lang", "=", "'ara'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_tokenizer_chinese": [[152, 158], ["StanzaNLP", "StanzaNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_chinese", "(", "self", ")", ":", "\n", "# stanza chinese model not great with punctuation", "\n", "        ", "tokenizer", "=", "StanzaNLP", "(", "lang", "=", "'zho'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u4e0d\u4f46\u8981\u770b,\u800c\u4e14\u8981\u5e2e\u3002\"", ")", "\n", "assert", "tokens", "==", "[", "'\u4e0d\u4f46'", ",", "'\u8981'", ",", "'\u770b,'", ",", "'\u800c\u4e14'", ",", "'\u8981'", ",", "'\u5e2e'", ",", "'\u3002'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_tokenizer_english": [[159, 164], ["StanzaNLP", "StanzaNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_english", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "StanzaNLP", "(", "lang", "=", "'eng'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"Mary had a little lamb.\"", ")", "\n", "assert", "tokens", "==", "[", "'Mary'", ",", "'had'", ",", "'a'", ",", "'little'", ",", "'lamb'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_stemmer_english": [[165, 172], ["StanzaNLP", "StanzaNLP.tokenize", "StanzaNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stemmer_english", "(", "self", ")", ":", "\n", "        ", "text", "=", "'It\\'s fleece was white as snow.'", "\n", "ans", "=", "[", "'it'", ",", "\"'s\"", ",", "'fleece'", ",", "'be'", ",", "'white'", ",", "'as'", ",", "'snow'", ",", "'.'", "]", "\n", "nlp", "=", "StanzaNLP", "(", "lang", "=", "'eng'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_tokenizer_farsi": [[173, 178], ["StanzaNLP", "StanzaNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_farsi", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "StanzaNLP", "(", "lang", "=", "'fas'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u0634\u0645\u0627 \u0628\u0644\u064a\u0632 \u0631\u0648 \u0628\u0647 \u0641\u0627\u0631\u0633\u06cc \u0686\u06cc \u0645\u06cc\u06af\u06cc\u0646\u061f\"", ")", "\n", "assert", "tokens", "==", "[", "'\u0634\u0645\u0627'", ",", "'\u0628\u0644\u064a\u0632'", ",", "'\u0631\u0648'", ",", "'\u0628\u0647'", ",", "'\u0641\u0627\u0631\u0633\u06cc'", ",", "'\u0686\u06cc'", ",", "'\u0645\u06cc\u06af\u06cc\u0646'", ",", "'\u061f'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_stemmer_farsi": [[179, 186], ["StanzaNLP", "StanzaNLP.tokenize", "StanzaNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stemmer_farsi", "(", "self", ")", ":", "\n", "        ", "text", "=", "'\u0686\u06af\u0648\u0646\u0647 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646 \u0628\u0627 \u062c\u0627\u0645\u0627\u0633\u067e \u062f\u0631 \u0646\u0642\u0634\u0647\u200c\u0647\u0627 \u067e\u06cc\u0645\u0627\u06cc\u0634 \u06a9\u0631\u062f\u061f'", "\n", "ans", "=", "[", "'\u0686\u06af\u0648\u0646\u0647'", ",", "'#\u062a\u0648\u0627\u0646'", ",", "'\u0628\u0627'", ",", "'\u062c\u0627\u0645\u0627\u0633\u067e'", ",", "'\u062f\u0631'", ",", "'\u0646\u0642\u0634\u0647'", ",", "'\u067e\u06cc\u0645\u0627\u06cc\u0634'", ",", "'\u06a9\u0631\u062f#\u06a9\u0646'", ",", "'\u061f'", "]", "\n", "nlp", "=", "StanzaNLP", "(", "lang", "=", "'fas'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_tokenizer_russian": [[187, 193], ["StanzaNLP", "StanzaNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_russian", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "StanzaNLP", "(", "lang", "=", "'rus'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u042f \u0445\u043e\u0442\u0435\u043b \u0431\u044b \u043f\u0438\u0432\u0430.\"", ")", "\n", "# Does the Russian model not handle punctuation well or did we hit on a bad sentence", "\n", "assert", "tokens", "==", "[", "'\u042f'", ",", "'\u0445\u043e\u0442\u0435\u043b'", ",", "'\u0431\u044b'", ",", "'\u043f\u0438\u0432\u0430'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestStanza.test_stemmer_russian": [[194, 201], ["StanzaNLP", "StanzaNLP.tokenize", "StanzaNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stemmer_russian", "(", "self", ")", ":", "\n", "        ", "text", "=", "'\u041d\u043e\u0432\u044b\u0435 \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043a\u0440\u0443\u043f\u043d\u044b\u043c \u0441\u0443\u043c\u043c\u0430\u043c \u043d\u0430 \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u043c \u0441\u0447\u0435\u0442\u0443 \u041a\u043b\u0438\u043d\u0442\u043e\u043d.'", "\n", "ans", "=", "[", "'\u043d\u043e\u0432\u044b\u0439'", ",", "'\u0440\u0430\u0441\u0445\u043e\u0434'", ",", "'\u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c'", ",", "'\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f'", ",", "'\u043a\u0440\u0443\u043f\u043d\u044b\u0439'", ",", "'\u0441\u0443\u043c\u043c\u0430'", ",", "'\u043d\u0430'", ",", "'\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u0438\u0439'", ",", "'\u0441\u0447\u0435\u0442'", ",", "'\u041a\u043b\u0438\u043d\u0442\u043e\u043d'", ",", "'.'", "]", "\n", "nlp", "=", "StanzaNLP", "(", "lang", "=", "'rus'", ",", "model_path", "=", "self", ".", "model_path", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_tokenizer_arabic": [[204, 209], ["SpacyNLP", "SpacyNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["    ", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_arabic", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "SpacyNLP", "(", "lang", "=", "'ara'", ",", "model_path", "=", "None", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u0641\u064a \u0623\u0633\u0631\u062a\u064a \u062b\u0644\u0627\u062b\u0629 \u0623\u0641\u0631\u0627\u062f.\"", ")", "\n", "assert", "tokens", "==", "[", "'\u0641\u064a'", ",", "'\u0623\u0633\u0631\u062a\u064a'", ",", "'\u062b\u0644\u0627\u062b\u0629'", ",", "'\u0623\u0641\u0631\u0627\u062f'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_tokenizer_chinese": [[210, 215], ["SpacyNLP", "SpacyNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_chinese", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "SpacyNLP", "(", "lang", "=", "'zho'", ",", "model_path", "=", "None", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u4e0d\u4f46\u8981\u770b,\u800c\u4e14\u8981\u5e2e\u3002\"", ")", "\n", "assert", "tokens", "==", "[", "'\u4e0d\u4f46'", ",", "'\u8981'", ",", "'\u770b'", ",", "','", ",", "'\u800c\u4e14'", ",", "'\u8981'", ",", "'\u5e2e'", ",", "'\u3002'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_tokenizer_english": [[216, 221], ["SpacyNLP", "SpacyNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_english", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "SpacyNLP", "(", "lang", "=", "'eng'", ",", "model_path", "=", "None", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"Mary had a little lamb.\"", ")", "\n", "assert", "tokens", "==", "[", "'Mary'", ",", "'had'", ",", "'a'", ",", "'little'", ",", "'lamb'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_stemmer_english": [[222, 229], ["SpacyNLP", "SpacyNLP.tokenize", "SpacyNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stemmer_english", "(", "self", ")", ":", "\n", "        ", "text", "=", "'A witness told police that the victim had attacked the suspect in April.'", "\n", "ans", "=", "[", "'a'", ",", "\"witness\"", ",", "'tell'", ",", "'police'", ",", "'that'", ",", "'the'", ",", "'victim'", ",", "'have'", ",", "'attack'", ",", "'the'", ",", "'suspect'", ",", "'in'", ",", "'April'", ",", "'.'", "]", "\n", "nlp", "=", "SpacyNLP", "(", "lang", "=", "'eng'", ",", "model_path", "=", "None", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_tokenizer_farsi": [[230, 235], ["SpacyNLP", "SpacyNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_farsi", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "SpacyNLP", "(", "lang", "=", "'fas'", ",", "model_path", "=", "None", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u0634\u0645\u0627 \u0628\u0644\u064a\u0632 \u0631\u0648 \u0628\u0647 \u0641\u0627\u0631\u0633\u06cc \u0686\u06cc \u0645\u06cc\u06af\u06cc\u0646\u061f\"", ")", "\n", "assert", "tokens", "==", "[", "'\u0634\u0645\u0627'", ",", "'\u0628\u0644\u064a\u0632'", ",", "'\u0631\u0648'", ",", "'\u0628\u0647'", ",", "'\u0641\u0627\u0631\u0633\u06cc'", ",", "'\u0686\u06cc'", ",", "'\u0645\u06cc\u06af\u06cc\u0646'", ",", "'\u061f'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_tokenizer_russian": [[236, 241], ["SpacyNLP", "SpacyNLP.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_russian", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "SpacyNLP", "(", "lang", "=", "'rus'", ",", "model_path", "=", "None", ",", "stem", "=", "False", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u042f \u0445\u043e\u0442\u0435\u043b \u0431\u044b \u043f\u0438\u0432\u0430.\"", ")", "\n", "assert", "tokens", "==", "[", "'\u042f'", ",", "'\u0445\u043e\u0442\u0435\u043b'", ",", "'\u0431\u044b'", ",", "'\u043f\u0438\u0432\u0430'", ",", "'.'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestSpacy.test_stemmer_russian": [[242, 249], ["SpacyNLP", "SpacyNLP.tokenize", "SpacyNLP.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stemmer_russian", "(", "self", ")", ":", "\n", "        ", "text", "=", "'\u041d\u043e\u0432\u044b\u0435 \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043a\u0440\u0443\u043f\u043d\u044b\u043c \u0441\u0443\u043c\u043c\u0430\u043c \u043d\u0430 \u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u043c \u0441\u0447\u0435\u0442\u0443 \u041a\u043b\u0438\u043d\u0442\u043e\u043d.'", "\n", "ans", "=", "[", "'\u043d\u043e\u0432\u044b\u0439'", ",", "'\u0440\u0430\u0441\u0445\u043e\u0434'", ",", "'\u0444\u0438\u043d\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f'", ",", "'\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f'", ",", "'\u043a\u0440\u0443\u043f\u043d\u044b\u0439'", ",", "'\u0441\u0443\u043c\u043c\u0430'", ",", "'\u043d\u0430'", ",", "'\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u0438\u0439'", ",", "'\u0441\u0447\u0451\u0442'", ",", "'\u043a\u043b\u0438\u043d\u0442\u043e\u043d'", ",", "'.'", "]", "\n", "nlp", "=", "SpacyNLP", "(", "lang", "=", "'rus'", ",", "model_path", "=", "None", ",", "stem", "=", "True", ")", "\n", "tokens", "=", "nlp", ".", "tokenize", "(", "text", ")", "\n", "assert", "ans", "==", "nlp", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestJieba.test_tokenizer_chinese": [[252, 258], ["JiebaTokenizer", "JiebaTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["    ", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_chinese", "(", "self", ")", ":", "\n", "        ", "tokenizer", "=", "JiebaTokenizer", "(", "lang", "=", "'zho'", ",", "model_path", "=", "None", ")", "\n", "tokens", "=", "tokenizer", ".", "tokenize", "(", "\"\u4e0d\u4f46\u8981\u770b,\u800c\u4e14\u8981\u5e2e\u3002\"", ")", "\n", "# jieba is splitting \u8981\u770b", "\n", "assert", "tokens", "==", "[", "'\u4e0d\u4f46'", ",", "'\u8981'", ",", "'\u770b'", ",", "','", ",", "'\u800c\u4e14'", ",", "'\u8981'", ",", "'\u5e2e'", ",", "'\u3002'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestJieba.test_with_non_chinese": [[259, 262], ["pytest.raises", "JiebaTokenizer"], "methods", ["None"], ["", "def", "test_with_non_chinese", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "JiebaTokenizer", "(", "lang", "=", "'spa'", ",", "model_path", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestMoses.test_tokenizer_arabic": [[265, 274], ["MosesTokenizer", "MosesTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["    ", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_arabic", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"\u062a\u0645\u0648\u0644 \u0627\u0644\u0646\u0641\u0642\u0627\u062a \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u062d\u0633\u0627\u0628 \u0643\u0644\u064a\u0646\u062a\u0648\u0646 \u0627\u0644\u0645\u0635\u0631\u0641\u064a \u0627\u0644\u0643\u0628\u064a\u0631. \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u0642\u0635\u0649 \u0627\u0644\u0645\u0633\u0645\u0648\u062d \u0628\u0647 \u0644\u0644\u0634\u062e\u0635 \u0627\u0644\u0648\u0627\u062d\u062f \u0647\u0648 5000 \u062f\u0648\u0644\u0627\u0631.\"", "\n", "ans", "=", "[", "\n", "'\u062a\u0645\u0648\u0644'", ",", "'\u0627\u0644\u0646\u0641\u0642\u0627\u062a'", ",", "'\u0627\u0644\u062c\u062f\u064a\u062f\u0629'", ",", "'\u0645\u0646'", ",", "'\u062e\u0644\u0627\u0644'", ",", "'\u062d\u0633\u0627\u0628'", ",", "'\u0643\u0644\u064a\u0646\u062a\u0648\u0646'", ",", "'\u0627\u0644\u0645\u0635\u0631\u0641\u064a'", ",", "'\u0627\u0644\u0643\u0628\u064a\u0631'", ",", "'.'", ",", "\n", "'\u0627\u0644\u062d\u062f'", ",", "'\u0627\u0644\u0623\u0642\u0635\u0649'", ",", "'\u0627\u0644\u0645\u0633\u0645\u0648\u062d'", ",", "'\u0628\u0647'", ",", "'\u0644\u0644\u0634\u062e\u0635'", ",", "'\u0627\u0644\u0648\u0627\u062d\u062f'", ",", "'\u0647\u0648'", ",", "'5000'", ",", "'\u062f\u0648\u0644\u0627\u0631'", ",", "'.'", "\n", "]", "\n", "tokenizer", "=", "MosesTokenizer", "(", "lang", "=", "'ara'", ",", "model_path", "=", "None", ")", "\n", "assert", "tokenizer", ".", "tokenize", "(", "text", ")", "==", "ans", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestMoses.test_tokenizer_chinese": [[275, 278], ["pytest.raises", "MosesTokenizer"], "methods", ["None"], ["", "def", "test_tokenizer_chinese", "(", "self", ")", ":", "\n", "        ", "with", "pytest", ".", "raises", "(", "ConfigError", ")", ":", "\n", "            ", "MosesTokenizer", "(", "lang", "=", "'zho'", ",", "model_path", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestMoses.test_tokenizer_english": [[279, 288], ["MosesTokenizer", "MosesTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_english", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"Mary had a little lamb. It's fleece was white as snow.\"", "\n", "ans", "=", "[", "\n", "'Mary'", ",", "'had'", ",", "'a'", ",", "'little'", ",", "'lamb'", ",", "'.'", ",", "\n", "'It'", ",", "\"'s\"", ",", "'fleece'", ",", "'was'", ",", "'white'", ",", "'as'", ",", "'snow'", ",", "'.'", "\n", "]", "\n", "tokenizer", "=", "MosesTokenizer", "(", "lang", "=", "'eng'", ",", "model_path", "=", "None", ")", "\n", "assert", "ans", "==", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestMoses.test_tokenizer_farsi": [[289, 298], ["MosesTokenizer", "MosesTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_farsi", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"\u0628\u0644\u06cc\u062a \u0631\u0627 \u067e\u06cc\u0634\u0641\u0631\u0648\u0634 \u06a9\u0646\u06cc\u062f. \u0627\u06cc\u0646 \u0645\u0648\u0627\u0641\u0642\u062a\u0646\u0627\u0645\u0647 \u0631\u0627 \u0627\u0645\u0636\u0627 \u0646\u062e\u0648\u0627\u0647\u0645 \u06a9\u0631\u062f \u0648 \u062a\u0627 \u062c\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u062a\u0648\u0627\u0646\u0645 \u062f\u0631 \u0645\u0642\u0627\u0628\u0644 \u0622\u0646 \u067e\u0627\u06cc\u062f\u0627\u0631\u06cc \u0645\u06cc\u06a9\u0646\u0645.\"", "\n", "ans", "=", "[", "\n", "'\u0628\u0644\u06cc\u062a'", ",", "'\u0631\u0627'", ",", "'\u067e\u06cc\u0634\u0641\u0631\u0648\u0634'", ",", "'\u06a9\u0646\u06cc\u062f'", ",", "'.'", ",", "\n", "'\u0627\u06cc\u0646'", ",", "'\u0645\u0648\u0627\u0641\u0642\u062a\u0646\u0627\u0645\u0647'", ",", "'\u0631\u0627'", ",", "'\u0627\u0645\u0636\u0627'", ",", "'\u0646\u062e\u0648\u0627\u0647\u0645'", ",", "'\u06a9\u0631\u062f'", ",", "'\u0648'", ",", "'\u062a\u0627'", ",", "'\u062c\u0627\u06cc\u06cc'", ",", "'\u06a9\u0647'", ",", "'\u0628\u062a\u0648\u0627\u0646\u0645'", ",", "'\u062f\u0631'", ",", "'\u0645\u0642\u0627\u0628\u0644'", ",", "'\u0622\u0646'", ",", "'\u067e\u0627\u06cc\u062f\u0627\u0631\u06cc'", ",", "'\u0645\u06cc\u06a9\u0646\u0645'", ",", "'.'", ",", "\n", "]", "\n", "tokenizer", "=", "MosesTokenizer", "(", "lang", "=", "'fas'", ",", "model_path", "=", "None", ")", "\n", "assert", "ans", "==", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestMoses.test_tokenizer_russian": [[299, 308], ["MosesTokenizer", "MosesTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_tokenizer_russian", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"\u0421\u0432\u0438\u0434\u0435\u0442\u0435\u043b\u044c \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043b \u0432 \u043f\u043e\u043b\u0438\u0446\u0438\u0438, \u0447\u0442\u043e \u043f\u043e\u0442\u0435\u0440\u043f\u0435\u0432\u0448\u0438\u0439 \u043d\u0430\u043f\u0430\u043b \u043d\u0430 \u043f\u043e\u0434\u043e\u0437\u0440\u0435\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0432 \u0430\u043f\u0440\u0435\u043b\u0435. \u041d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c \u043c\u0435\u0436\u0434\u0443 \u0438\u0433\u0440\u0430\u043c\u0438 \u0438 \u043d\u0430\u0448\u0435\u0439 \u043f\u043e\u0432\u0441\u0435\u0434\u043d\u0435\u0432\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u044c\u044e.\"", "\n", "ans", "=", "[", "\n", "'\u0421\u0432\u0438\u0434\u0435\u0442\u0435\u043b\u044c'", ",", "'\u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043b'", ",", "'\u0432'", ",", "'\u043f\u043e\u043b\u0438\u0446\u0438\u0438'", ",", "','", ",", "'\u0447\u0442\u043e'", ",", "'\u043f\u043e\u0442\u0435\u0440\u043f\u0435\u0432\u0448\u0438\u0439'", ",", "'\u043d\u0430\u043f\u0430\u043b'", ",", "'\u043d\u0430'", ",", "'\u043f\u043e\u0434\u043e\u0437\u0440\u0435\u0432\u0430\u0435\u043c\u043e\u0433\u043e'", ",", "'\u0432'", ",", "'\u0430\u043f\u0440\u0435\u043b\u0435'", ",", "'.'", ",", "\n", "'\u041d\u0443\u0436\u043d\u043e'", ",", "'\u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438'", ",", "'\u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c'", ",", "'\u043c\u0435\u0436\u0434\u0443'", ",", "'\u0438\u0433\u0440\u0430\u043c\u0438'", ",", "'\u0438'", ",", "'\u043d\u0430\u0448\u0435\u0439'", ",", "'\u043f\u043e\u0432\u0441\u0435\u0434\u043d\u0435\u0432\u043d\u043e\u0439'", ",", "'\u0436\u0438\u0437\u043d\u044c\u044e'", ",", "'.'", ",", "\n", "]", "\n", "tokenizer", "=", "MosesTokenizer", "(", "lang", "=", "'rus'", ",", "model_path", "=", "None", ")", "\n", "assert", "ans", "==", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.TestNgramTokenizer.test_stanza_tokenizer_english": [[311, 320], ["NgramTokenizer", "NgramTokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["    ", "@", "pytest", ".", "mark", ".", "slow", "\n", "def", "test_stanza_tokenizer_english", "(", "self", ")", ":", "\n", "        ", "text", "=", "\"Roses are red. Violets are blue.\"", "\n", "ans", "=", "[", "\n", "'Roses'", ",", "'oses '", ",", "'ses a'", ",", "'es ar'", ",", "'s are'", ",", "' are '", ",", "'are r'", ",", "'re re'", ",", "'e red'", ",", "' red.'", ",", "\n", "'Viole'", ",", "'iolet'", ",", "'olets'", ",", "'lets '", ",", "'ets a'", ",", "'ts ar'", ",", "'s are'", ",", "' are '", ",", "'are b'", ",", "'re bl'", ",", "'e blu'", ",", "' blue'", ",", "'blue.'", "\n", "]", "\n", "tokenizer", "=", "NgramTokenizer", "(", "lang", "=", "'eng'", ",", "model_path", "=", "None", ")", "\n", "assert", "ans", "==", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.test_stop_words_english": [[7, 13], ["StopWordsRemover", "StopWordsRemover.identify", "StopWordsRemover.remove"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.identify", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.remove"], ["def", "test_stop_words_english", "(", ")", ":", "\n", "    ", "swr", "=", "StopWordsRemover", "(", "'lucene'", ",", "'eng'", ")", "\n", "tokens", "=", "[", "'this'", ",", "'is'", ",", "'a'", ",", "'test'", "]", "\n", "indices", "=", "swr", ".", "identify", "(", "tokens", ")", "\n", "new_tokens", "=", "swr", ".", "remove", "(", "tokens", ",", "indices", ")", "\n", "assert", "new_tokens", "==", "[", "'test'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.test_stop_words_english_uppercase": [[15, 21], ["StopWordsRemover", "StopWordsRemover.identify", "StopWordsRemover.remove"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.identify", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.remove"], ["", "def", "test_stop_words_english_uppercase", "(", ")", ":", "\n", "    ", "swr", "=", "StopWordsRemover", "(", "'lucene'", ",", "'eng'", ")", "\n", "tokens", "=", "[", "'This'", ",", "'is'", ",", "'a'", ",", "'test'", "]", "\n", "indices", "=", "swr", ".", "identify", "(", "tokens", ",", "is_lower", "=", "True", ")", "\n", "new_tokens", "=", "swr", ".", "remove", "(", "tokens", ",", "indices", ")", "\n", "assert", "new_tokens", "==", "[", "'This'", ",", "'test'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.test_stop_words_english_caseless": [[23, 29], ["StopWordsRemover", "StopWordsRemover.identify", "StopWordsRemover.remove"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.identify", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.remove"], ["", "def", "test_stop_words_english_caseless", "(", ")", ":", "\n", "    ", "swr", "=", "StopWordsRemover", "(", "'lucene'", ",", "'eng'", ")", "\n", "tokens", "=", "[", "'This'", ",", "'is'", ",", "'a'", ",", "'test'", "]", "\n", "indices", "=", "swr", ".", "identify", "(", "tokens", ",", "is_lower", "=", "False", ")", "\n", "new_tokens", "=", "swr", ".", "remove", "(", "tokens", ",", "indices", ")", "\n", "assert", "new_tokens", "==", "[", "'test'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.test_porter_stemmer_english": [[31, 36], ["PorterStemmer", "PorterStemmer.stem"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "def", "test_porter_stemmer_english", "(", ")", ":", "\n", "    ", "tokens", "=", "[", "'It'", ",", "'was'", ",", "'a'", ",", "'bright'", ",", "'cold'", ",", "'day'", ",", "'in'", ",", "'April'", ",", "','", ",", "'and'", ",", "'the'", ",", "'clocks'", ",", "'were'", ",", "'striking'", ",", "'thirteen'", ",", "'.'", "]", "\n", "ans", "=", "[", "'It'", ",", "'wa'", ",", "'a'", ",", "'bright'", ",", "'cold'", ",", "'day'", ",", "'in'", ",", "'April'", ",", "','", ",", "'and'", ",", "'the'", ",", "'clock'", ",", "'were'", ",", "'strike'", ",", "'thirteen'", ",", "'.'", "]", "\n", "stemmer", "=", "PorterStemmer", "(", "\"eng\"", ")", "\n", "assert", "ans", "==", "stemmer", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_text.test_porter_stemmer_long_token": [[38, 43], ["PorterStemmer", "tok.lower", "PorterStemmer.stem"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "def", "test_porter_stemmer_long_token", "(", ")", ":", "\n", "    ", "tokens", "=", "[", "'Ithello'", "]", "\n", "tokens", "=", "[", "tok", ".", "lower", "(", ")", "for", "tok", "in", "tokens", "]", "\n", "stemmer", "=", "PorterStemmer", "(", "\"eng\"", ")", "\n", "assert", "tokens", "==", "stemmer", ".", "stem", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.setup_method": [[16, 18], ["pathlib.Path", "tempfile.mkdtemp"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.teardown_method": [[19, 21], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.test_creating_index": [[22, 34], ["patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.end", "lucene_directory.exists", "patapsco.docs.Doc", "lang_file.read_text"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "def", "test_creating_index", "(", "self", ")", ":", "\n", "        ", "run_directory", "=", "self", ".", "temp_dir", "\n", "output_directory", "=", "'testIndex'", "\n", "lucene_directory", "=", "run_directory", "/", "output_directory", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "output_directory", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"1234\"", ",", "\"eng\"", ",", "\"this is a test\"", ",", "None", ")", ")", "\n", "li", ".", "end", "(", ")", "\n", "assert", "lucene_directory", ".", "exists", "(", ")", "\n", "lang_file", "=", "lucene_directory", "/", "\".lang\"", "\n", "assert", "lang_file", ".", "read_text", "(", ")", "==", "\"eng\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.test_two_indexes": [[35, 75], ["patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.end", "output_directory.exists", "patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.end", "output_directory.exists", "patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.reduce", "patapsco.index.LuceneIndexer.end", "output_directory.exists", "patapsco.schema.RetrieveConfig", "patapsco.retrieve.PyseriniRetriever", "patapsco.retrieve.PyseriniRetriever.begin", "patapsco.retrieve.PyseriniRetriever.process", "patapsco.retrieve.PyseriniRetriever.process", "patapsco.retrieve.PyseriniRetriever.end", "patapsco.docs.Doc", "patapsco.docs.Doc", "pathlib.Path", "patapsco.topics.Query", "len", "patapsco.topics.Query", "len", "pathlib.Path", "str", "pathlib.Path", "str", "str", "str", "str", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "def", "test_two_indexes", "(", "self", ")", ":", "\n", "        ", "run_directory", "=", "self", ".", "temp_dir", "\n", "output_directory", "=", "run_directory", "/", "pathlib", ".", "Path", "(", "'testIndex'", ")", "/", "'part_0'", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "str", "(", "output_directory", ")", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"1234\"", ",", "\"eng\"", ",", "\"this is a another test\"", ",", "None", ")", ")", "\n", "li", ".", "end", "(", ")", "\n", "assert", "output_directory", ".", "exists", "(", ")", "\n", "\n", "output_directory", "=", "run_directory", "/", "pathlib", ".", "Path", "(", "'testIndex'", ")", "/", "'part_1'", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "str", "(", "output_directory", ")", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"5678\"", ",", "\"eng\"", ",", "\"this is a test\"", ",", "None", ")", ")", "\n", "li", ".", "end", "(", ")", "\n", "assert", "output_directory", ".", "exists", "(", ")", "\n", "\n", "output_directory", "=", "run_directory", "/", "pathlib", ".", "Path", "(", "'testIndex'", ")", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "str", "(", "output_directory", ")", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "reduce", "(", "[", "str", "(", "output_directory", "/", "'part_0'", ")", ",", "str", "(", "output_directory", "/", "'part_1'", ")", "]", ")", "\n", "li", ".", "end", "(", ")", "\n", "assert", "output_directory", ".", "exists", "(", ")", "\n", "\n", "ret_config", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", "/", "\"testIndex\"", ")", ")", ")", ",", "\n", "name", "=", "\"test\"", ",", "\n", "output", "=", "\"retrieve\"", ")", "\n", "retriever", "=", "PyseriniRetriever", "(", "run_path", "=", "'.'", ",", "config", "=", "ret_config", ")", "\n", "retriever", ".", "begin", "(", ")", "\n", "results", "=", "retriever", ".", "process", "(", "Query", "(", "'123'", ",", "'eng'", ",", "'test'", ",", "'test'", ",", "None", ")", ")", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "2", "\n", "\n", "other_results", "=", "retriever", ".", "process", "(", "Query", "(", "'124'", ",", "'eng'", ",", "'another'", ",", "'test'", ",", "None", ")", ")", "\n", "assert", "len", "(", "other_results", ".", "results", ")", "==", "1", "\n", "assert", "other_results", ".", "results", "[", "0", "]", ".", "doc_id", "==", "'1234'", "\n", "\n", "retriever", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.test_no_permission_to_write": [[76, 83], ["readonly_dir.mkdir", "patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "pytest.raises", "str"], "methods", ["None"], ["", "def", "test_no_permission_to_write", "(", "self", ")", ":", "\n", "        ", "readonly_dir", "=", "self", ".", "temp_dir", "/", "'readonly'", "\n", "readonly_dir", ".", "mkdir", "(", "mode", "=", "0o444", ")", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "str", "(", "readonly_dir", ")", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "self", ".", "temp_dir", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "PatapscoError", ")", ":", "\n", "            ", "writer", "=", "li", ".", "writer", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_index.TestLuceneIndex.test_reduce_with_bad_directory": [[84, 90], ["patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "pytest.raises", "patapsco.index.LuceneIndexer.reduce"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce"], ["", "", "def", "test_reduce_with_bad_directory", "(", "self", ")", ":", "\n", "        ", "output_dir", "=", "'testIndex'", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "output_dir", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "self", ".", "temp_dir", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "with", "pytest", ".", "raises", "(", "PatapscoError", ")", ":", "\n", "            ", "li", ".", "reduce", "(", "[", "]", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_psq.TestLuceneIndex.setup_method": [[16, 18], ["pathlib.Path", "tempfile.mkdtemp"], "methods", ["None"], ["    ", "def", "setup_method", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_dir", "=", "pathlib", ".", "Path", "(", "tempfile", ".", "mkdtemp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_psq.TestLuceneIndex.teardown_method": [[19, 21], ["patapsco.util.file.delete_dir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "teardown_method", "(", "self", ")", ":", "\n", "        ", "delete_dir", "(", "self", ".", "temp_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_psq.TestLuceneIndex.test_4_docs": [[22, 68], ["patapsco.schema.IndexConfig", "patapsco.index.LuceneIndexer", "patapsco.index.LuceneIndexer.begin", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.process", "patapsco.index.LuceneIndexer.end", "lucene_directory.exists", "patapsco.schema.RetrieveConfig", "patapsco.retrieve.PyseriniRetriever", "patapsco.retrieve.PyseriniRetriever.begin", "patapsco.retrieve.PyseriniRetriever.process", "patapsco.retrieve.PyseriniRetriever.end", "patapsco.schema.RetrieveConfig", "patapsco.retrieve.PyseriniRetriever", "patapsco.retrieve.PyseriniRetriever.begin", "patapsco.retrieve.PyseriniRetriever.process", "patapsco.retrieve.PyseriniRetriever.end", "patapsco.docs.Doc", "patapsco.docs.Doc", "patapsco.docs.Doc", "patapsco.docs.Doc", "lang_file.read_text", "patapsco.topics.Query", "len", "pytest.approx", "patapsco.topics.Query", "len", "pytest.approx", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.RetrieveInputConfig", "patapsco.schema.PathConfig", "patapsco.schema.PathConfig", "str", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "def", "test_4_docs", "(", "self", ")", ":", "\n", "        ", "run_directory", "=", "self", ".", "temp_dir", "\n", "output_directory", "=", "'testIndex'", "\n", "lucene_directory", "=", "run_directory", "/", "output_directory", "\n", "conf", "=", "IndexConfig", "(", "name", "=", "'lucene'", ",", "output", "=", "output_directory", ")", "\n", "li", "=", "LuceneIndexer", "(", "run_path", "=", "run_directory", ",", "index_config", "=", "conf", ",", "artifact_config", "=", "conf", ")", "\n", "li", ".", "begin", "(", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"1\"", ",", "\"eng\"", ",", "\"gato felino\"", ",", "None", ")", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"2\"", ",", "\"eng\"", ",", "\"gato and some extra words gato\"", ",", "None", ")", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"3\"", ",", "\"eng\"", ",", "\"felino\"", ",", "None", ")", ")", "\n", "li", ".", "process", "(", "Doc", "(", "\"4\"", ",", "\"eng\"", ",", "\"gato\"", ",", "None", ")", ")", "\n", "li", ".", "end", "(", ")", "\n", "assert", "lucene_directory", ".", "exists", "(", ")", "\n", "lang_file", "=", "lucene_directory", "/", "\".lang\"", "\n", "assert", "lang_file", ".", "read_text", "(", ")", "==", "\"eng\"", "\n", "\n", "ret_config", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", "/", "\"testIndex\"", ")", ")", ")", ",", "\n", "name", "=", "\"bm25\"", ",", "\n", "k1", "=", "1.2", ",", "\n", "b", "=", ".75", ",", "\n", "output", "=", "\"retrieve\"", ")", "\n", "ret_config", ".", "psq", "=", "True", "\n", "retriever", "=", "PyseriniRetriever", "(", "run_path", "=", "'.'", ",", "config", "=", "ret_config", ")", "\n", "retriever", ".", "begin", "(", ")", "\n", "results", "=", "retriever", ".", "process", "(", "Query", "(", "'123'", ",", "'eng'", ",", "'psq AND (gato^0.8 felino^0.2) AND (extra^0.9 words^0.1)'", ",", "'test'", ",", "None", ")", ")", "\n", "assert", "len", "(", "results", ".", "results", ")", "==", "4", "\n", "assert", "'2'", "==", "results", ".", "results", "[", "0", "]", ".", "doc_id", "\n", "assert", "results", ".", "results", "[", "0", "]", ".", "score", "==", "pytest", ".", "approx", "(", "0.5117189", ",", "1e-5", ")", "\n", "retriever", ".", "end", "(", ")", "\n", "\n", "# test setting k1 and b", "\n", "ret_other_config", "=", "RetrieveConfig", "(", "\n", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "str", "(", "self", ".", "temp_dir", "/", "\"testIndex\"", ")", ")", ")", ",", "\n", "name", "=", "\"bm25\"", ",", "\n", "k1", "=", "5", ",", "\n", "b", "=", ".1", ",", "\n", "output", "=", "\"retrieve\"", ")", "\n", "ret_other_config", ".", "psq", "=", "True", "\n", "other_retriever", "=", "PyseriniRetriever", "(", "run_path", "=", "'.'", ",", "config", "=", "ret_other_config", ")", "\n", "other_retriever", ".", "begin", "(", ")", "\n", "other_results", "=", "other_retriever", ".", "process", "(", "Query", "(", "'123'", ",", "'eng'", ",", "'psq AND (gato^0.8 felino^0.2) AND (extra^0.9 words^0.1)'", ",", "'test'", ",", "None", ")", ")", "\n", "assert", "len", "(", "other_results", ".", "results", ")", "==", "4", "\n", "assert", "'2'", "==", "other_results", ".", "results", "[", "0", "]", ".", "doc_id", "\n", "assert", "other_results", ".", "results", "[", "0", "]", ".", "score", "==", "pytest", ".", "approx", "(", "0.270769", ",", "1e-5", ")", "\n", "other_retriever", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.conftest.pytest_addoption": [[4, 7], ["parser.addoption"], "function", ["None"], ["def", "pytest_addoption", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "addoption", "(", "\n", "\"--runslow\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "False", ",", "help", "=", "\"run slow tests\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.conftest.pytest_configure": [[10, 12], ["config.addinivalue_line"], "function", ["None"], ["", "def", "pytest_configure", "(", "config", ")", ":", "\n", "    ", "config", ".", "addinivalue_line", "(", "\"markers\"", ",", "\"slow: mark test as slow to run\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.conftest.pytest_collection_modifyitems": [[14, 22], ["config.getoption", "pytest.mark.skip", "item.add_marker"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.skip"], ["", "def", "pytest_collection_modifyitems", "(", "config", ",", "items", ")", ":", "\n", "    ", "if", "config", ".", "getoption", "(", "\"--runslow\"", ")", ":", "\n", "# --runslow given in cli: do not skip slow tests", "\n", "        ", "return", "\n", "", "skip_slow", "=", "pytest", ".", "mark", ".", "skip", "(", "reason", "=", "\"need --runslow option to run\"", ")", "\n", "for", "item", "in", "items", ":", "\n", "        ", "if", "\"slow\"", "in", "item", ".", "keywords", ":", "\n", "            ", "item", ".", "add_marker", "(", "skip_slow", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_sgml_documents": [[8, 20], ["parse_sgml_documents", "next", "doc[].startswith", "next", "doc[].endswith", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_documents"], ["def", "test_parse_sgml_documents", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'docs1.sgml'", "\n", "doc_iter", "=", "parse_sgml_documents", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ")", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", "[", "0", "]", "==", "'ABCDEF'", "\n", "assert", "doc", "[", "1", "]", ".", "startswith", "(", "'Aliens learn to code 20200601 Aliens learn to code using the Java'", ")", "\n", "doc", "=", "next", "(", "doc_iter", ")", "\n", "assert", "doc", "[", "0", "]", "==", "'TUVXYZ'", "\n", "assert", "doc", "[", "1", "]", ".", "endswith", "(", "'or even an asteroid strike.'", ")", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_sgml_documents_with_bad_encoding": [[22, 28], ["parse_sgml_documents", "str", "pytest.raises", "next", "pathlib.Path", "path.absolute"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_documents"], ["", "", "def", "test_parse_sgml_documents_with_bad_encoding", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'not_utf8.txt'", "\n", "doc_iter", "=", "parse_sgml_documents", "(", "str", "(", "path", ".", "absolute", "(", ")", ")", ",", "encoding", "=", "'utf8'", ")", "\n", "with", "pytest", ".", "raises", "(", "ParseError", ")", ":", "\n", "        ", "next", "(", "doc_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_sgml_topics": [[30, 46], ["parse_sgml_topics", "next", "topic[].startswith", "topic[].endswith", "next", "topic[].startswith", "topic[].endswith", "str", "pytest.raises", "next", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_topics"], ["", "", "def", "test_parse_sgml_topics", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'topics.txt'", "\n", "topic_iter", "=", "parse_sgml_topics", "(", "str", "(", "path", ")", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'C141'", "\n", "assert", "topic", "[", "1", "]", "==", "'Mating habits of robins'", "\n", "assert", "topic", "[", "2", "]", ".", "startswith", "(", "'Find information on the mating habits'", ")", "\n", "assert", "topic", "[", "3", "]", ".", "endswith", "(", "'lay eggs in a nest.'", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'C142'", "\n", "assert", "topic", "[", "1", "]", "==", "'Planting peas in the garden'", "\n", "assert", "topic", "[", "2", "]", ".", "startswith", "(", "'Find reports on the best conditions'", ")", "\n", "assert", "topic", "[", "3", "]", ".", "endswith", "(", "'than many vegetables.'", ")", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_xml_topics": [[48, 66], ["parse_xml_topics", "next", "next", "str", "pytest.raises", "next", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_xml_topics"], ["", "", "def", "test_parse_xml_topics", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'topics.xml'", "\n", "topic_iter", "=", "parse_xml_topics", "(", "str", "(", "path", ")", ")", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'1-ZZ'", "\n", "assert", "topic", "[", "1", "]", "==", "'en'", "\n", "assert", "topic", "[", "2", "]", "==", "'Test 1'", "\n", "assert", "topic", "[", "3", "]", "==", "'This is a test.'", "\n", "assert", "topic", "[", "4", "]", "==", "'Narrative of first test'", "\n", "topic", "=", "next", "(", "topic_iter", ")", "\n", "assert", "topic", "[", "0", "]", "==", "'2-ZZ'", "\n", "assert", "topic", "[", "1", "]", "==", "'en'", "\n", "assert", "topic", "[", "2", "]", "==", "'Test 2'", "\n", "assert", "topic", "[", "3", "]", "==", "'This is another test.'", "\n", "assert", "topic", "[", "4", "]", "==", "'Narrative of second test'", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "topic_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_qrels": [[68, 82], ["parse_qrels", "next", "str", "len", "pytest.raises", "next", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_qrels"], ["", "", "def", "test_parse_qrels", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'qrels_2020'", "\n", "qrels_iter", "=", "parse_qrels", "(", "str", "(", "path", ")", ")", "\n", "qrels", "=", "next", "(", "qrels_iter", ")", "\n", "assert", "len", "(", "qrels", "[", "'141'", "]", ")", "==", "3", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc1'", "]", "==", "0", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc2'", "]", "==", "1", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc3'", "]", "==", "0", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc1'", "]", "==", "1", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc2'", "]", "==", "0", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc3'", "]", "==", "0", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "qrels_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_qrels_with_float_judgment": [[84, 90], ["parse_qrels", "str", "pytest.raises", "next", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_qrels"], ["", "", "def", "test_parse_qrels_with_float_judgment", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'qrels_bad'", "\n", "qrels_iter", "=", "parse_qrels", "(", "str", "(", "path", ")", ")", "\n", "with", "pytest", ".", "raises", "(", "ParseError", ")", ":", "\n", "        ", "next", "(", "qrels_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_qrels_tsv": [[92, 106], ["parse_qrels", "next", "str", "len", "pytest.raises", "next", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_qrels"], ["", "", "def", "test_parse_qrels_tsv", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'trec_files'", "\n", "path", "=", "directory", "/", "'qrels_2020.tsv'", "\n", "qrels_iter", "=", "parse_qrels", "(", "str", "(", "path", ")", ")", "\n", "qrels", "=", "next", "(", "qrels_iter", ")", "\n", "assert", "len", "(", "qrels", "[", "'141'", "]", ")", "==", "3", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc1'", "]", "==", "0", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc2'", "]", "==", "1", "\n", "assert", "qrels", "[", "'141'", "]", "[", "'doc3'", "]", "==", "0", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc1'", "]", "==", "1", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc2'", "]", "==", "0", "\n", "assert", "qrels", "[", "'142'", "]", "[", "'doc3'", "]", "==", "0", "\n", "with", "pytest", ".", "raises", "(", "StopIteration", ")", ":", "\n", "        ", "next", "(", "qrels_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.tests.test_util_formats.test_parse_psq_table": [[108, 124], ["parse_psq_table", "parse_psq_table", "len", "list", "pytest.approx", "pytest.approx", "pytest.approx", "pytest.approx", "len", "pytest.approx", "pytest.approx", "len", "pathlib.Path", "parse_psq_table.keys"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_psq_table", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_psq_table"], ["", "", "def", "test_parse_psq_table", "(", ")", ":", "\n", "    ", "directory", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'psq_files'", "\n", "path", "=", "directory", "/", "'psq.json'", "\n", "# table = parse_psq_table(path, threshold=0.97)", "\n", "table", "=", "parse_psq_table", "(", "path", ",", "threshold", "=", "0.97", ")", "\n", "assert", "len", "(", "table", ")", "==", "4", "\n", "assert", "list", "(", "table", ".", "keys", "(", ")", ")", "==", "[", "'cat'", ",", "'dog'", ",", "'bird'", ",", "'hello'", "]", "\n", "assert", "table", "[", "'cat'", "]", "[", "'gato'", "]", "==", "pytest", ".", "approx", "(", "0.842105263", ")", "\n", "assert", "table", "[", "'cat'", "]", "[", "'felino'", "]", "==", "pytest", ".", "approx", "(", "0.1578947368", ")", "\n", "assert", "table", "[", "'dog'", "]", "[", "'pero'", "]", "==", "pytest", ".", "approx", "(", "0.81818181818", ")", "\n", "assert", "table", "[", "'dog'", "]", "[", "'can'", "]", "==", "pytest", ".", "approx", "(", "0.181818181818", ")", "\n", "assert", "len", "(", "table", "[", "'bird'", "]", ")", "==", "2", "\n", "assert", "table", "[", "'bird'", "]", "[", "'p\u00e1jaro'", "]", "==", "pytest", ".", "approx", "(", "0.612244897", ")", "\n", "assert", "table", "[", "'bird'", "]", "[", "'ave'", "]", "==", "pytest", ".", "approx", "(", "0.38775510", ")", "\n", "table", "=", "parse_psq_table", "(", "path", ",", "threshold", "=", "0.999999", ")", "\n", "assert", "len", "(", "table", "[", "'hello'", "]", ")", "==", "1", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.__init__": [[26, 30], ["util.java.Java", "retrieve.PSQSearcher.java.PSQIndexSearcher"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "index_dir", ":", "str", ")", ":", "\n", "        ", "self", ".", "index_dir", "=", "index_dir", "\n", "self", ".", "java", "=", "Java", "(", ")", "\n", "self", ".", "object", "=", "self", ".", "java", ".", "PSQIndexSearcher", "(", "index_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.set_bm25": [[31, 42], ["retrieve.PSQSearcher.object.setBM25", "float", "float"], "methods", ["None"], ["", "def", "set_bm25", "(", "self", ",", "k1", "=", "0.9", ",", "b", "=", "0.4", ")", ":", "\n", "        ", "\"\"\"Configure BM25 as the scoring function.\n\n        Parameters\n        ----------\n        k1 : float\n            BM25 k1 parameter.\n        b : float\n            BM25 b parameter.\n        \"\"\"", "\n", "self", ".", "object", ".", "setBM25", "(", "float", "(", "k1", ")", ",", "float", "(", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.set_qld": [[43, 52], ["float", "retrieve.PSQSearcher.object.setQLD", "float"], "methods", ["None"], ["", "def", "set_qld", "(", "self", ",", "mu", "=", "float", "(", "1000", ")", ")", ":", "\n", "        ", "\"\"\"Configure query likelihood with Dirichlet smoothing as the scoring function.\n\n        Parameters\n        ----------\n        mu : float\n            Dirichlet smoothing parameter mu.\n        \"\"\"", "\n", "self", ".", "object", ".", "setQLD", "(", "float", "(", "mu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.search": [[53, 56], ["LOGGER.debug", "retrieve.PSQSearcher.object.searchPsq"], "methods", ["None"], ["", "def", "search", "(", "self", ",", "q", ":", "str", ",", "k", ":", "int", "=", "10", ")", ":", "\n", "        ", "LOGGER", ".", "debug", "(", "f\"query: {q}\"", ")", "\n", "return", "self", ".", "object", ".", "searchPsq", "(", "q", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close": [[57, 59], ["retrieve.PSQSearcher.object.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "object", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever.__init__": [[64, 84], ["pipeline.Task.__init__", "util.java.Java", "LOGGER.info", "pathlib.Path", "LOGGER.info", "retrieve.PyseriniRetriever.java.QueryParser", "retrieve.PyseriniRetriever.java.WhitespaceAnalyzer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str or Path): Root directory of the run.\n            config (RetrieveConfig)\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "number", "=", "self", ".", "config", ".", "number", "\n", "self", ".", "index_dir", "=", "pathlib", ".", "Path", "(", "run_path", ")", "/", "self", ".", "config", ".", "input", ".", "index", ".", "path", "\n", "self", ".", "_searcher", "=", "None", "\n", "self", ".", "java", "=", "Java", "(", ")", "\n", "self", ".", "lang", "=", "None", "# documents language", "\n", "self", ".", "log_explanations", "=", "config", ".", "log_explanations", "\n", "self", ".", "log_explanations_cutoff", "=", "config", ".", "log_explanations_cutoff", "\n", "self", ".", "parse", "=", "config", ".", "parse", "\n", "if", "self", ".", "parse", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Lucene boolean query parsing enabled in retriever\"", ")", "\n", "self", ".", "parser", "=", "self", ".", "java", ".", "QueryParser", "(", "'contents'", ",", "self", ".", "java", ".", "WhitespaceAnalyzer", "(", ")", ")", "\n", "", "LOGGER", ".", "info", "(", "f\"Index location: {self.index_dir}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever.searcher": [[85, 116], ["retrieve.PSQSearcher", "LOGGER.info", "retrieve.PyseriniRetriever.java.SimpleSearcher", "retrieve.PyseriniRetriever._searcher.set_analyzer", "retrieve.PyseriniRetriever._searcher.set_qld", "LOGGER.info", "retrieve.PyseriniRetriever._searcher.set_bm25", "LOGGER.info", "retrieve.PyseriniRetriever._searcher.set_rm3", "LOGGER.info", "str", "str", "retrieve.PyseriniRetriever.java.WhitespaceAnalyzer", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.set_qld", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.set_bm25"], ["", "@", "property", "\n", "def", "searcher", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_searcher", ":", "\n", "            ", "if", "self", ".", "config", ".", "psq", ":", "\n", "                ", "self", ".", "_searcher", "=", "PSQSearcher", "(", "str", "(", "self", ".", "index_dir", ")", ")", "\n", "LOGGER", ".", "info", "(", "'Using PSQ'", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_searcher", "=", "self", ".", "java", ".", "SimpleSearcher", "(", "str", "(", "self", ".", "index_dir", ")", ")", "\n", "self", ".", "_searcher", ".", "set_analyzer", "(", "self", ".", "java", ".", "WhitespaceAnalyzer", "(", ")", ")", "\n", "", "if", "self", ".", "config", ".", "name", "==", "\"qld\"", ":", "\n", "                ", "mu", "=", "self", ".", "config", ".", "mu", "\n", "self", ".", "_searcher", ".", "set_qld", "(", "mu", ")", "\n", "LOGGER", ".", "info", "(", "f'Using QLD with parameter mu={mu}'", ")", "\n", "", "else", ":", "\n", "                ", "k1", "=", "self", ".", "config", ".", "k1", "\n", "b", "=", "self", ".", "config", ".", "b", "\n", "self", ".", "_searcher", ".", "set_bm25", "(", "k1", ",", "b", ")", "\n", "LOGGER", ".", "info", "(", "f'Using BM25 with parameters k1={k1} and b={b}'", ")", "\n", "\n", "", "if", "self", ".", "config", ".", "rm3", ":", "\n", "                ", "if", "self", ".", "config", ".", "psq", ":", "\n", "                    ", "raise", "ConfigError", "(", "\"Unsupported operation PSQ + RM3\"", ")", "\n", "\n", "", "fb_terms", "=", "self", ".", "config", ".", "fb_terms", "\n", "fb_docs", "=", "self", ".", "config", ".", "fb_docs", "\n", "weight", "=", "self", ".", "config", ".", "original_query_weight", "\n", "logging", "=", "self", ".", "config", ".", "rm3_logging", "\n", "self", ".", "_searcher", ".", "set_rm3", "(", "fb_terms", ",", "fb_docs", ",", "weight", ",", "logging", ",", "rm3_filter_terms", "=", "False", ")", "\n", "LOGGER", ".", "info", "(", "f'Adding RM3: fb_terms={fb_terms}, fb_docs={fb_docs}, original_query_weight={weight}'", ")", "\n", "\n", "", "", "return", "self", ".", "_searcher", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever.begin": [[117, 123], ["lang_path.read_text", "error.PatapscoError"], "methods", ["None"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "lang_path", "=", "self", ".", "index_dir", "/", "\".lang\"", "\n", "self", ".", "lang", "=", "lang_path", ".", "read_text", "(", ")", "\n", "", "except", "IOError", "as", "e", ":", "\n", "            ", "raise", "PatapscoError", "(", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever.process": [[124, 147], ["LOGGER.debug", "results.Results", "retrieve.PyseriniRetriever.searcher.searchPsq", "retrieve.PyseriniRetriever._log_explanation", "results.Result", "str", "retrieve.PyseriniRetriever.parser.parse", "retrieve.PyseriniRetriever.searcher.search", "retrieve.PyseriniRetriever.searcher.search", "enumerate", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever._log_explanation", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.search", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.search"], ["", "", "def", "process", "(", "self", ",", "query", ")", ":", "\n", "        ", "\"\"\"Retrieve a ranked list of documents\n\n        Args:\n            query (Query)\n\n        Returns:\n            Results\n        \"\"\"", "\n", "\n", "if", "self", ".", "config", ".", "name", "==", "'psq'", ":", "\n", "            ", "hits", "=", "self", ".", "searcher", ".", "searchPsq", "(", "query", ".", "query", ",", "self", ".", "number", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "parse", ":", "\n", "                ", "jquery", "=", "self", ".", "parser", ".", "parse", "(", "query", ".", "query", ")", "\n", "hits", "=", "self", ".", "searcher", ".", "search", "(", "jquery", ",", "k", "=", "self", ".", "number", ")", "\n", "", "else", ":", "\n", "                ", "hits", "=", "self", ".", "searcher", ".", "search", "(", "query", ".", "query", ",", "k", "=", "self", ".", "number", ")", "\n", "", "", "LOGGER", ".", "debug", "(", "f\"Retrieved {len(hits)} documents for {query.id}: {query.query}\"", ")", "\n", "if", "self", ".", "log_explanations", ":", "\n", "            ", "self", ".", "_log_explanation", "(", "query", ".", "query", ",", "hits", ")", "\n", "", "results", "=", "[", "Result", "(", "hit", ".", "docid", ",", "rank", ",", "hit", ".", "score", ")", "for", "rank", ",", "hit", "in", "enumerate", "(", "hits", ")", "]", "\n", "return", "Results", "(", "query", ",", "self", ".", "lang", ",", "str", "(", "self", ")", ",", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever.end": [[148, 151], ["retrieve.PyseriniRetriever._searcher.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_searcher", ":", "\n", "            ", "self", ".", "_searcher", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PyseriniRetriever._log_explanation": [[152, 161], ["retrieve.PyseriniRetriever.java.BagOfWordsQueryGenerator", "retrieve.PyseriniRetriever.buildQuery", "range", "min", "retrieve.PyseriniRetriever.searcher.object.searcher.explain().toString", "LOGGER.info", "len", "retrieve.PyseriniRetriever.searcher.object.searcher.explain"], "methods", ["None"], ["", "", "def", "_log_explanation", "(", "self", ",", "query_text", ",", "hits", ")", ":", "\n", "# this mimics how pyserini generates the lucene query object to gain access to explanations", "\n", "        ", "if", "not", "hits", ":", "\n", "            ", "return", "\n", "", "gen", "=", "self", ".", "java", ".", "BagOfWordsQueryGenerator", "(", ")", "\n", "query", "=", "gen", ".", "buildQuery", "(", "\"contents\"", ",", "self", ".", "searcher", ".", "object", ".", "analyzer", ",", "query_text", ")", "\n", "for", "index", "in", "range", "(", "min", "(", "len", "(", "hits", ")", ",", "self", ".", "log_explanations_cutoff", ")", ")", ":", "\n", "            ", "explanation", "=", "self", ".", "searcher", ".", "object", ".", "searcher", ".", "explain", "(", "query", ",", "hits", "[", "index", "]", ".", "lucene_docid", ")", ".", "toString", "(", ")", "\n", "LOGGER", ".", "info", "(", "f\"doc_id: {hits[index].docid} - explanation: {explanation}\"", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.Reranker.__init__": [[29, 39], ["pipeline.Task.__init__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "db", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (RerankConfig): Configuration parameters\n            db (DocumentDatabase): Document database\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "db", "=", "db", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.Reranker.process": [[40, 50], ["None"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "results", ")", ":", "\n", "        ", "\"\"\"Rerank query results\n\n        Args:\n            results (Results)\n\n        Returns:\n            Results\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.MockReranker.process": [[58, 68], ["copy.deepcopy", "results.Results", "docs.pop", "LOGGER.error", "str"], "methods", ["None"], ["def", "process", "(", "self", ",", "results", ")", ":", "\n", "        ", "new_results", "=", "copy", ".", "deepcopy", "(", "results", ".", "results", ")", "\n", "# retrieve documents and pop one to exercise db", "\n", "try", ":", "\n", "            ", "docs", "=", "[", "self", ".", "db", "[", "result", ".", "doc_id", "]", "for", "result", "in", "new_results", "]", "\n", "if", "docs", ":", "\n", "                ", "docs", ".", "pop", "(", ")", "\n", "", "", "except", "BadDataError", "as", "e", ":", "\n", "            ", "LOGGER", ".", "error", "(", "str", "(", "e", ")", ")", "\n", "", "return", "Results", "(", "results", ".", "query", ",", "results", ".", "doc_lang", ",", "'MockReranker'", ",", "new_results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker.__init__": [[85, 96], ["rerank.Reranker.__init__", "rerank.ShellReranker.dir.mkdir", "pathlib.Path().exists", "error.ConfigError", "tempfile.TemporaryDirectory", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "db", ")", ":", "\n", "        ", "if", "not", "pathlib", ".", "Path", "(", "config", ".", "script", ")", ".", "exists", "(", ")", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Reranker shell script does not exist: {config.script}\"", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "config", ",", "db", ")", "\n", "if", "config", ".", "output", ":", "\n", "            ", "self", ".", "dir", "=", "pathlib", ".", "Path", "(", "run_path", ")", "/", "config", ".", "output", "/", "'shell'", "\n", "", "else", ":", "\n", "            ", "self", ".", "temp_dir", "=", "TemporaryDirectory", "(", ")", "\n", "self", ".", "dir", "=", "pathlib", ".", "Path", "(", "self", ".", "temp_dir", ".", "name", ")", "\n", "", "self", ".", "dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "batch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker.__del__": [[97, 100], ["hasattr", "rerank.ShellReranker.temp_dir.cleanup"], "methods", ["None"], ["", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'temp_dir'", ")", ":", "\n", "            ", "self", ".", "temp_dir", ".", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker.process": [[101, 103], ["error.ConfigError"], "methods", ["None"], ["", "", "def", "process", "(", "self", ",", "results", ")", ":", "\n", "        ", "raise", "ConfigError", "(", "\"Shell reranker only runs with a batch pipeline\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker.batch_process": [[104, 129], ["rerank.ShellReranker._get_query_lang", "rerank.ShellReranker._get_doc_lang", "str", "str", "str", "rerank.ShellReranker._write_input", "rerank.ShellReranker._create_args", "rerank.ShellReranker._read_output", "subprocess.run", "rerank.ShellReranker._write_log", "len", "len", "error.PatapscoError", "rerank.ShellReranker._write_log", "error.PatapscoError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._get_query_lang", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._get_doc_lang", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._write_input", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._create_args", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._read_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._write_log", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._write_log"], ["", "def", "batch_process", "(", "self", ",", "items", ")", ":", "\n", "        ", "\"\"\" Call shell script to rerank the results from the retriever.\n\n        Args:\n            items (list of Results)\n        \"\"\"", "\n", "self", ".", "batch", "+=", "1", "\n", "query_lang", "=", "self", ".", "_get_query_lang", "(", "items", ")", "\n", "doc_lang", "=", "self", ".", "_get_doc_lang", "(", "items", ")", "\n", "input_path", "=", "str", "(", "self", ".", "dir", "/", "f\"input_{self.batch}.jsonl\"", ")", "\n", "output_path", "=", "str", "(", "self", ".", "dir", "/", "f\"output_{self.batch}.txt\"", ")", "\n", "log_path", "=", "str", "(", "self", ".", "dir", "/", "f\"log_{self.batch}.log\"", ")", "\n", "self", ".", "_write_input", "(", "items", ",", "input_path", ")", "\n", "args", "=", "self", ".", "_create_args", "(", "doc_lang", ",", "query_lang", ",", "input_path", ",", "output_path", ")", "\n", "try", ":", "\n", "            ", "record", "=", "subprocess", ".", "run", "(", "args", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "stderr", "=", "subprocess", ".", "STDOUT", ",", "check", "=", "True", ")", "\n", "self", ".", "_write_log", "(", "log_path", ",", "record", ".", "args", ",", "record", ".", "stdout", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", "as", "e", ":", "\n", "            ", "self", ".", "_write_log", "(", "log_path", ",", "e", ".", "cmd", ",", "e", ".", "output", ")", "\n", "raise", "PatapscoError", "(", "e", ")", "\n", "\n", "", "new_items", "=", "self", ".", "_read_output", "(", "output_path", ",", "query_lang", ")", "\n", "if", "len", "(", "items", ")", "!=", "len", "(", "new_items", ")", ":", "\n", "            ", "raise", "PatapscoError", "(", "f\"Mismatch between queries in input and output for {self.config.script}\"", ")", "\n", "", "return", "new_items", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._create_args": [[130, 145], ["set", "itertools.chain", "str", "str", "str", "args.extend", "args.extend", "schema.RerankConfig.__fields__.keys", "pathlib.Path().absolute", "pathlib.Path().absolute", "pathlib.Path().absolute", "str", "getattr", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set"], ["", "def", "_create_args", "(", "self", ",", "doc_lang", ",", "query_lang", ",", "input_path", ",", "output_path", ")", ":", "\n", "# get fields not included in the config definition and add them after the script path", "\n", "        ", "fields", "=", "set", "(", "RerankConfig", ".", "__fields__", ".", "keys", "(", ")", ")", "\n", "attributes", "=", "[", "attribute", "for", "attribute", "in", "self", ".", "config", ".", "__fields_set__", "if", "attribute", "not", "in", "fields", "]", "\n", "pairs", "=", "[", "[", "'--'", "+", "attribute", ",", "str", "(", "getattr", "(", "self", ".", "config", ",", "attribute", ")", ")", "]", "for", "attribute", "in", "attributes", "]", "\n", "pairs", "=", "itertools", ".", "chain", "(", "*", "pairs", ")", "\n", "# make sure all paths are absolute", "\n", "db_path", "=", "str", "(", "pathlib", ".", "Path", "(", "self", ".", "db", ".", "path", ")", ".", "absolute", "(", ")", ")", "\n", "input_path", "=", "str", "(", "pathlib", ".", "Path", "(", "input_path", ")", ".", "absolute", "(", ")", ")", "\n", "output_path", "=", "str", "(", "pathlib", ".", "Path", "(", "output_path", ")", ".", "absolute", "(", ")", ")", "\n", "# form command line args", "\n", "args", "=", "[", "self", ".", "config", ".", "script", "]", "\n", "args", ".", "extend", "(", "pairs", ")", "\n", "args", ".", "extend", "(", "[", "doc_lang", ",", "query_lang", ",", "db_path", ",", "input_path", ",", "output_path", "]", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._write_input": [[146, 152], ["open", "fp.write", "fp.write", "json.dumps"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_write_input", "(", "items", ",", "input_path", ")", ":", "\n", "        ", "with", "open", "(", "input_path", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "for", "item", "in", "items", ":", "\n", "                ", "fp", ".", "write", "(", "json", ".", "dumps", "(", "item", ",", "cls", "=", "DataclassJSONEncoder", ")", ")", "\n", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._read_output": [[153, 157], ["results.TrecResultsReader"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "_read_output", "(", "output_path", ",", "lang", ")", ":", "\n", "        ", "reader", "=", "TrecResultsReader", "(", "output_path", ",", "lang", "=", "lang", ")", "\n", "return", "[", "item", "for", "item", "in", "reader", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._write_log": [[158, 163], ["open", "fp.write", "fp.write"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_write_log", "(", "log_path", ",", "args", ",", "output", ")", ":", "\n", "        ", "with", "open", "(", "log_path", ",", "'wb'", ")", "as", "fp", ":", "\n", "            ", "fp", ".", "write", "(", "f\"command: {' '.join(args)}\\n\\n\"", ".", "encode", "(", ")", ")", "\n", "fp", ".", "write", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._get_query_lang": [[164, 168], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_get_query_lang", "(", "items", ")", ":", "\n", "        ", "results", "=", "items", "[", "0", "]", "\n", "return", "results", ".", "query", ".", "lang", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.rerank.ShellReranker._get_doc_lang": [[169, 173], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_doc_lang", "(", "items", ")", ":", "\n", "        ", "results", "=", "items", "[", "0", "]", "\n", "return", "results", ".", "doc_lang", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get": [[26, 28], ["getattr"], "methods", ["None"], ["def", "get", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ",", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set": [[29, 31], ["setattr"], "methods", ["None"], ["", "def", "set", "(", "self", ",", "item", ",", "value", ")", ":", "\n", "        ", "setattr", "(", "self", ",", "item", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.__init__": [[62, 70], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "overrides", "=", "None", ",", "inheritance", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            overrides (list): A list of strings of the form key=value\n            inheritance (bool): Whether to turn on inheritance support\n        \"\"\"", "\n", "self", ".", "overrides", "=", "overrides", "\n", "self", ".", "inheritance", "=", "inheritance", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.create_config_object": [[71, 97], ["config_class", "errors.items", "error.ConfigError", "error.errors", "len", "error_type.startswith", "error_type.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "create_config_object", "(", "config_class", ",", "config_dict", ")", ":", "\n", "        ", "\"\"\"Create a configuration object using pydantic\n\n        Performs validation\n\n        Args:\n            config_class (class): BaseConfig object to create\n            config_dict (dict): Dictionary to convert to object\n        \"\"\"", "\n", "try", ":", "\n", "            ", "return", "config_class", "(", "**", "config_dict", ")", "\n", "", "except", "pydantic", ".", "ValidationError", "as", "error", ":", "\n", "# provides a more tailored error message than the default", "\n", "            ", "errors", "=", "{", "'.'", ".", "join", "(", "e", "[", "'loc'", "]", ")", ":", "e", "[", "'type'", "]", "for", "e", "in", "error", ".", "errors", "(", ")", "}", "\n", "error_msg", "=", "f\"{len(errors)} validation errors in configuration\"", "\n", "for", "field", ",", "error_type", "in", "errors", ".", "items", "(", ")", ":", "\n", "                ", "if", "error_type", "==", "'value_error.missing'", ":", "\n", "                    ", "error_msg", "+=", "f\"\\n  {field} - missing field\"", "\n", "", "elif", "error_type", "==", "'value_error.extra'", ":", "\n", "                    ", "error_msg", "+=", "f\"\\n  {field} - unknown field\"", "\n", "", "elif", "error_type", ".", "startswith", "(", "'type_error'", ")", ":", "\n", "                    ", "error_msg", "+=", "f\"\\n  {field} - wrong type, should be {error_type.split('.')[1]}\"", "\n", "", "else", ":", "\n", "                    ", "error_msg", "+=", "f\"\\n  {field} - {error_type}\"", "\n", "", "", "raise", "ConfigError", "(", "error_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file": [[98, 122], ["config.ConfigService._detect_filetype", "open", "LOGGER.debug", "reader_fn", "config.ConfigService._import_configs", "config.ConfigOverrides.process", "config.ConfigInheritance.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._detect_filetype", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._import_configs", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "", "def", "read_config_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "\"\"\"Read the configuration detecting file type\n\n        Args:\n            filename (str or Path): path to the configuration file\n\n        Returns:\n            dict\n        \"\"\"", "\n", "ftype", "=", "self", ".", "_detect_filetype", "(", "filename", ")", "\n", "if", "ftype", "==", "self", ".", "YAML", ":", "\n", "            ", "reader_fn", "=", "self", ".", "_read_yaml_config", "\n", "", "else", ":", "\n", "            ", "reader_fn", "=", "self", ".", "_read_json_config", "\n", "", "with", "open", "(", "filename", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "LOGGER", ".", "debug", "(", "\"Loading configuration from %s\"", ",", "filename", ")", "\n", "conf", "=", "reader_fn", "(", "fp", ")", "\n", "if", "'imports'", "in", "conf", ":", "\n", "                ", "self", ".", "_import_configs", "(", "conf", ",", "filename", ")", "\n", "", "if", "self", ".", "overrides", ":", "\n", "                ", "ConfigOverrides", ".", "process", "(", "conf", ",", "self", ".", "overrides", ")", "\n", "", "if", "self", ".", "inheritance", ":", "\n", "                ", "ConfigInheritance", ".", "process", "(", "conf", ")", "\n", "", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.write_config_file": [[123, 138], ["cls._detect_filetype", "open", "writer_fn", "config.dict"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._detect_filetype"], ["", "", "@", "classmethod", "\n", "def", "write_config_file", "(", "cls", ",", "filename", ",", "config", ")", ":", "\n", "        ", "\"\"\"Write the configuration file detecting file type\n\n        Args:\n            filename (str or Path): path to the configuration file to write\n            config (BaseConfig): configuration object\n        \"\"\"", "\n", "ftype", "=", "cls", ".", "_detect_filetype", "(", "filename", ")", "\n", "if", "ftype", "==", "cls", ".", "YAML", ":", "\n", "            ", "writer_fn", "=", "cls", ".", "_write_yaml_config", "\n", "", "else", ":", "\n", "            ", "writer_fn", "=", "cls", ".", "_write_json_config", "\n", "", "with", "open", "(", "filename", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "writer_fn", "(", "fp", ",", "config", ".", "dict", "(", "exclude_none", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._detect_filetype": [[139, 149], ["pathlib.Path().suffix.lower", "error.ConfigError", "pathlib.Path"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_detect_filetype", "(", "filename", ")", ":", "\n", "        ", "\"\"\"Detect file type from the filename\"\"\"", "\n", "ext", "=", "pathlib", ".", "Path", "(", "filename", ")", ".", "suffix", ".", "lower", "(", ")", "\n", "if", "ext", "in", "[", "'.yaml'", ",", "'.yml'", "]", ":", "\n", "            ", "return", "ConfigService", ".", "YAML", "\n", "", "elif", "ext", "==", "'.json'", ":", "\n", "            ", "return", "ConfigService", ".", "JSON", "\n", "", "else", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unknown config file extension {ext} for {filename}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_yaml_config": [[150, 166], ["config.ConfigLoader", "yaml.load", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load"], ["", "", "@", "staticmethod", "\n", "def", "_read_yaml_config", "(", "fp", ")", ":", "\n", "        ", "\"\"\"Read a configuration from a YAML stream\n\n        Args:\n            fp (file): File like object or string to parse\n\n        Returns:\n            dict\n        \"\"\"", "\n", "loader", "=", "ConfigLoader", "(", "fp", ")", "\n", "conf", "=", "yaml", ".", "load", "(", "fp", ",", "Loader", "=", "loader", ")", "\n", "if", "loader", ".", "errors", ":", "\n", "            ", "error_string", "=", "', '", ".", "join", "(", "loader", ".", "errors", ")", "\n", "raise", "ConfigError", "(", "f\"Missing interpolations in config: {error_string}\"", ")", "\n", "", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._write_yaml_config": [[167, 176], ["yaml.dump"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_write_yaml_config", "(", "fp", ",", "data", ")", ":", "\n", "        ", "\"\"\"Write a configuration to a YAML file\n\n        Args:\n            fp (file): file object opened for writing\n            data (dict): data to write as YAML\n        \"\"\"", "\n", "yaml", ".", "dump", "(", "data", ",", "fp", ",", "Dumper", "=", "EnumDumper", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._read_json_config": [[177, 194], ["json.load", "config.ConfigInterpolator", "config.ConfigInterpolator.interpolate", "config.ConfigService._convert_boolean_strings", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._convert_boolean_strings"], ["", "def", "_read_json_config", "(", "self", ",", "fp", ")", ":", "\n", "        ", "\"\"\"Read a configuration from a JSON file\n\n        Args:\n            fp (file): File like object to parse\n\n        Returns:\n            dict\n        \"\"\"", "\n", "conf", "=", "json", ".", "load", "(", "fp", ")", "\n", "interpolator", "=", "ConfigInterpolator", "(", ")", "\n", "conf", "=", "interpolator", ".", "interpolate", "(", "conf", ")", "\n", "if", "interpolator", ".", "errors", ":", "\n", "            ", "error_string", "=", "', '", ".", "join", "(", "interpolator", ".", "errors", ")", "\n", "raise", "ConfigError", "(", "f\"Missing interpolations in config: {error_string}\"", ")", "\n", "", "self", ".", "_convert_boolean_strings", "(", "conf", ")", "\n", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._convert_boolean_strings": [[195, 213], ["d.items", "isinstance", "cls._convert_boolean_strings", "isinstance", "enumerate", "isinstance", "isinstance", "cls._convert_boolean_strings"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._convert_boolean_strings", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._convert_boolean_strings"], ["", "@", "classmethod", "\n", "def", "_convert_boolean_strings", "(", "cls", ",", "d", ")", ":", "\n", "        ", "\"\"\"Converts boolean-like strings to booleans in place.\n\n        This makes the json reading compatible with the yaml reading.\n        \"\"\"", "\n", "for", "key", ",", "value", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "                ", "cls", ".", "_convert_boolean_strings", "(", "value", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "                ", "for", "index", ",", "entry", "in", "enumerate", "(", "value", ")", ":", "\n", "                    ", "if", "isinstance", "(", "entry", ",", "dict", ")", ":", "\n", "                        ", "cls", ".", "_convert_boolean_strings", "(", "entry", ")", "\n", "", "", "", "elif", "isinstance", "(", "value", ",", "str", ")", ":", "\n", "                ", "if", "value", "in", "[", "'true'", ",", "'on'", ",", "'yes'", "]", ":", "\n", "                    ", "d", "[", "key", "]", "=", "True", "\n", "", "elif", "value", "in", "[", "'false'", ",", "'off'", ",", "'no'", "]", ":", "\n", "                    ", "d", "[", "key", "]", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._write_json_config": [[214, 223], ["json.dump"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "_write_json_config", "(", "file", ",", "data", ")", ":", "\n", "        ", "\"\"\"Write a configuration to a JSON file\n\n        Args:\n            file (file): file object opened for writing\n            data (dict): data to write as YAML\n        \"\"\"", "\n", "json", ".", "dump", "(", "data", ",", "file", ",", "indent", "=", "4", ",", "sort_keys", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._import_configs": [[224, 236], ["pathlib.Path", "config.ConfigService.read_config_file", "config.merge_dicts", "config.ConfigService._import_configs"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.merge_dicts", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService._import_configs"], ["", "def", "_import_configs", "(", "self", ",", "conf", ",", "filename", ")", ":", "\n", "        ", "\"\"\"Load the configs to import and merge into main conf\"\"\"", "\n", "base_dir", "=", "pathlib", ".", "Path", "(", "filename", ")", ".", "parent", "\n", "imports", "=", "conf", "[", "'imports'", "]", "\n", "del", "conf", "[", "'imports'", "]", "\n", "for", "file", "in", "imports", ":", "\n", "            ", "filename", "=", "base_dir", "/", "file", "\n", "partial_conf", "=", "self", ".", "read_config_file", "(", "filename", ")", "\n", "merge_dicts", "(", "conf", ",", "partial_conf", ")", "\n", "# handle imports that have imports", "\n", "if", "'imports'", "in", "conf", ":", "\n", "                ", "self", ".", "_import_configs", "(", "conf", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.AttrDict.__init__": [[241, 244], ["dict.__init__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "__dict__", "=", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.FlatDict.__init__": [[249, 257], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "d", ",", "add_keys", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            d (dict): dictionary to wrap\n            add_keys (bool): whether to create new keys with set\n        \"\"\"", "\n", "self", ".", "d", "=", "d", "\n", "self", ".", "add_keys", "=", "add_keys", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.FlatDict.__getitem__": [[258, 268], ["key.split", "key.split.pop"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "if", "'.'", "in", "key", ":", "\n", "            ", "keys", "=", "key", ".", "split", "(", "'.'", ")", "\n", "last_key", "=", "keys", ".", "pop", "(", ")", "\n", "d", "=", "self", ".", "d", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "d", "=", "d", "[", "k", "]", "\n", "", "return", "d", "[", "last_key", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "d", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.FlatDict.__setitem__": [[269, 285], ["key.split", "key.split.pop", "KeyError", "KeyError", "KeyError"], "methods", ["None"], ["", "", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "'.'", "in", "key", ":", "\n", "            ", "keys", "=", "key", ".", "split", "(", "'.'", ")", "\n", "last_key", "=", "keys", ".", "pop", "(", ")", "\n", "d", "=", "self", ".", "d", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "if", "not", "self", ".", "add_keys", "and", "k", "not", "in", "d", ":", "\n", "                    ", "raise", "KeyError", "(", "key", ")", "\n", "", "d", "=", "d", "[", "k", "]", "\n", "", "if", "not", "self", ".", "add_keys", "and", "last_key", "not", "in", "d", ":", "\n", "                ", "raise", "KeyError", "(", "key", ")", "\n", "", "d", "[", "last_key", "]", "=", "value", "\n", "", "else", ":", "\n", "            ", "if", "not", "self", ".", "add_keys", "and", "key", "not", "in", "self", ".", "d", ":", "\n", "                ", "raise", "KeyError", "(", "key", ")", "\n", "", "self", ".", "d", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigLoader.__init__": [[341, 345], ["yaml.FullLoader.__init__", "config.ConfigInterpolator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "stream", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "stream", ")", "\n", "self", ".", "errors", "=", "[", "]", "\n", "self", ".", "interpolator", "=", "ConfigInterpolator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigLoader.__call__": [[346, 349], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "stream", ")", ":", "\n", "# yaml.load wants a class object to constructor, but we want to maintain errors", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigLoader.get_single_data": [[350, 355], ["super().get_single_data", "config.ConfigLoader.interpolator.interpolate"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigLoader.get_single_data", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate"], ["", "def", "get_single_data", "(", "self", ")", ":", "\n", "        ", "data", "=", "super", "(", ")", ".", "get_single_data", "(", ")", "\n", "data", "=", "self", ".", "interpolator", ".", "interpolate", "(", "data", ")", "\n", "self", ".", "errors", "=", "self", ".", "interpolator", ".", "errors", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.EnumDumper.represent_data": [[360, 364], ["isinstance", "super().represent_data"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.EnumDumper.represent_data"], ["def", "represent_data", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", ",", "enum", ".", "Enum", ")", ":", "\n", "            ", "data", "=", "data", ".", "value", "\n", "", "return", "super", "(", ")", ".", "represent_data", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.__init__": [[375, 378], ["re.compile"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "regx", "=", "re", ".", "compile", "(", "'.*{.*}.*'", ")", "\n", "self", ".", "errors", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate": [[379, 391], ["config.convert_dict", "config.ConfigInterpolator._interpolate", "config.unconvert_dict"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator._interpolate", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.unconvert_dict"], ["", "def", "interpolate", "(", "self", ",", "conf", ")", ":", "\n", "        ", "\"\"\"Perform string interpolator on dictionary\n\n        Args:\n            conf (dict): Configuration dictionary\n\n        Returns:\n            dict: Updated configuration dictionary\n        \"\"\"", "\n", "conf", "=", "convert_dict", "(", "conf", ")", "\n", "self", ".", "_interpolate", "(", "conf", ",", "conf", ")", "\n", "return", "unconvert_dict", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator._interpolate": [[392, 395], ["conf.items", "config.ConfigInterpolator.interpolate_value"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate_value"], ["", "def", "_interpolate", "(", "self", ",", "conf", ",", "mapping", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "conf", ".", "items", "(", ")", ":", "\n", "            ", "conf", "[", "key", "]", "=", "self", ".", "interpolate_value", "(", "value", ",", "mapping", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate_value": [[396, 407], ["isinstance", "isinstance", "config.ConfigInterpolator.regx.match", "value.format_map.format_map.format_map", "isinstance", "config.ConfigInterpolator.errors.append", "config.ConfigInterpolator.interpolate_value", "config.ConfigInterpolator._interpolate"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator.interpolate_value", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInterpolator._interpolate"], ["", "", "def", "interpolate_value", "(", "self", ",", "value", ",", "mapping", ")", ":", "\n", "        ", "if", "isinstance", "(", "value", ",", "str", ")", "and", "self", ".", "regx", ".", "match", "(", "value", ")", "is", "not", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "value", "=", "value", ".", "format_map", "(", "mapping", ")", "\n", "", "except", "(", "AttributeError", ",", "KeyError", ")", ":", "\n", "                ", "self", ".", "errors", ".", "append", "(", "value", ")", "\n", "", "", "elif", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "            ", "value", "=", "[", "self", ".", "interpolate_value", "(", "entry", ",", "mapping", ")", "for", "entry", "in", "value", "]", "\n", "", "elif", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "self", ".", "_interpolate", "(", "value", ",", "mapping", ")", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigOverrides.process": [[417, 434], ["cls._update_booleans", "config.FlatDict", "override.split", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigOverrides._update_booleans"], ["@", "classmethod", "\n", "def", "process", "(", "cls", ",", "conf", ",", "overrides", ")", ":", "\n", "        ", "\"\"\"Process a list of configuration overrides\n\n        Args:\n            conf (dict): Configuration dictionary loaded from yaml or json file.\n            overrides (list): List of strings of form: key=value\n        \"\"\"", "\n", "if", "overrides", ":", "\n", "            ", "overrides", "=", "[", "override", ".", "split", "(", "'='", ")", "for", "override", "in", "overrides", "]", "\n", "cls", ".", "_update_booleans", "(", "overrides", ")", "\n", "d", "=", "FlatDict", "(", "conf", ")", "\n", "for", "k", ",", "v", "in", "overrides", ":", "\n", "                ", "try", ":", "\n", "                    ", "d", "[", "k", "]", "=", "v", "\n", "", "except", "KeyError", ":", "\n", "                    ", "raise", "ConfigError", "(", "f\"Unknown override parameter {k}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigOverrides._update_booleans": [[435, 442], ["None"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "_update_booleans", "(", "overrides", ")", ":", "\n", "        ", "for", "override", "in", "overrides", ":", "\n", "            ", "if", "override", "[", "1", "]", "in", "[", "'true'", ",", "'on'", ",", "'yes'", "]", ":", "\n", "                ", "override", "[", "1", "]", "=", "True", "\n", "", "elif", "override", "[", "1", "]", "in", "[", "'false'", ",", "'off'", ",", "'no'", "]", ":", "\n", "                ", "override", "[", "1", "]", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance.process": [[453, 461], ["cls._process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._process"], ["@", "classmethod", "\n", "def", "process", "(", "cls", ",", "conf", ")", ":", "\n", "        ", "\"\"\"Process a configuration for inheritance\n\n        Args:\n            conf (dict): Configuration dictionary being processed.\n        \"\"\"", "\n", "return", "cls", ".", "_process", "(", "conf", ",", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._process": [[462, 486], ["config.items", "isinstance", "cls._process", "isinstance", "copy.deepcopy", "config.merge_dicts", "enumerate", "cls._get_parent", "isinstance", "error.ConfigError", "cls._process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.merge_dicts", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._get_parent", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._process"], ["", "@", "classmethod", "\n", "def", "_process", "(", "cls", ",", "config", ",", "top_config", ")", ":", "\n", "        ", "\"\"\"Internal process method\n\n        Args:\n            config (dict): Current configuration dictionary being updated.\n            top_config (dict): Top level config dictionary to find parents in.\n        \"\"\"", "\n", "for", "key", ",", "value", "in", "config", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "                ", "cls", ".", "_process", "(", "value", ",", "top_config", ")", "\n", "if", "'inherit'", "in", "value", ":", "\n", "                    ", "try", ":", "\n", "                        ", "parent", "=", "cls", ".", "_get_parent", "(", "value", "[", "'inherit'", "]", ",", "top_config", ")", "\n", "", "except", "KeyError", ":", "\n", "                        ", "raise", "ConfigError", "(", "f\"Cannot inherit from {value['inherit']} as it does not exist\"", ")", "\n", "", "new_conf", "=", "copy", ".", "deepcopy", "(", "parent", ")", "\n", "merge_dicts", "(", "new_conf", ",", "config", "[", "key", "]", ")", "\n", "config", "[", "key", "]", "=", "new_conf", "\n", "del", "config", "[", "key", "]", "[", "'inherit'", "]", "\n", "", "", "elif", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "                ", "for", "index", ",", "entry", "in", "enumerate", "(", "value", ")", ":", "\n", "                    ", "if", "isinstance", "(", "entry", ",", "dict", ")", ":", "\n", "                        ", "cls", ".", "_process", "(", "entry", ",", "top_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigInheritance._get_parent": [[487, 491], ["config.FlatDict"], "methods", ["None"], ["", "", "", "", "", "@", "staticmethod", "\n", "def", "_get_parent", "(", "parent_key", ",", "top_config", ")", ":", "\n", "        ", "d", "=", "FlatDict", "(", "top_config", ")", "\n", "return", "d", "[", "parent_key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict": [[287, 307], ["config.AttrDict", "AttrDict.items", "isinstance", "config.convert_dict", "isinstance", "enumerate", "isinstance", "config.convert_dict"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.convert_dict"], ["", "", "", "def", "convert_dict", "(", "d", ")", ":", "\n", "    ", "\"\"\"Convert normal dictionary to an attribute dictionary\n\n    Handles nested dictionaries and lists.\n\n    Args:\n        d (dict): A python dictionary\n\n    Returns:\n        AttrDict\n    \"\"\"", "\n", "d", "=", "AttrDict", "(", "d", ")", "\n", "for", "key", ",", "value", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "d", "[", "key", "]", "=", "convert_dict", "(", "value", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "            ", "for", "index", ",", "entry", "in", "enumerate", "(", "value", ")", ":", "\n", "                ", "if", "isinstance", "(", "entry", ",", "dict", ")", ":", "\n", "                    ", "value", "[", "index", "]", "=", "convert_dict", "(", "entry", ")", "\n", "", "", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.unconvert_dict": [[309, 329], ["dict", "dict.items", "isinstance", "config.unconvert_dict", "isinstance", "enumerate", "isinstance", "config.unconvert_dict"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.unconvert_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.unconvert_dict"], ["", "def", "unconvert_dict", "(", "d", ")", ":", "\n", "    ", "\"\"\"Convert attribute dictionary back to a normal dictionary\n\n    Handles nested dictionaries and lists.\n\n    Args:\n        d (AttrDict)\n\n    Returns:\n        dict\n    \"\"\"", "\n", "d", "=", "dict", "(", "d", ")", "\n", "for", "key", ",", "value", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "value", ",", "AttrDict", ")", ":", "\n", "            ", "d", "[", "key", "]", "=", "unconvert_dict", "(", "value", ")", "\n", "", "elif", "isinstance", "(", "value", ",", "list", ")", ":", "\n", "            ", "for", "index", ",", "entry", "in", "enumerate", "(", "value", ")", ":", "\n", "                ", "if", "isinstance", "(", "entry", ",", "AttrDict", ")", ":", "\n", "                    ", "value", "[", "index", "]", "=", "unconvert_dict", "(", "entry", ")", "\n", "", "", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.merge_dicts": [[493, 501], ["d2.items", "isinstance", "isinstance", "config.merge_dicts"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.merge_dicts"], ["", "", "def", "merge_dicts", "(", "d1", ",", "d2", ")", ":", "\n", "# if d1[k] is not a dict and d2[k] is, d1[k] is overwritten with d2[k]", "\n", "# if d1[k] is a dict and d2[k] is not, d1[k] is overwritten with d2[k]", "\n", "    ", "for", "k", ",", "v", "in", "d2", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "in", "d1", "and", "isinstance", "(", "d1", "[", "k", "]", ",", "dict", ")", "and", "isinstance", "(", "d2", "[", "k", "]", ",", "dict", ")", ":", "\n", "            ", "merge_dicts", "(", "d1", "[", "k", "]", ",", "d2", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "d1", "[", "k", "]", "=", "d2", "[", "k", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.Stemmer.__init__": [[19, 21], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lang", ")", ":", "\n", "        ", "self", ".", "lang", "=", "lang", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.Stemmer.stem": [[22, 32], ["None"], "methods", ["None"], ["", "def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "\"\"\"Stem the tokens\n\n        Args:\n            tokens (list of str)\n\n        Returns:\n            list: A list of strings\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.PorterStemmer.__init__": [[37, 43], ["text.Stemmer.__init__", "nltk.stem.porter.PorterStemmer", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "lang", ")", ":", "\n", "        ", "if", "lang", "!=", "\"eng\"", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Porter stemmer only supports English\"", ")", "\n", "", "import", "nltk", "# importing nltk is slow so lazy load", "\n", "super", "(", ")", ".", "__init__", "(", "lang", ")", "\n", "self", ".", "stemmer", "=", "nltk", ".", "stem", ".", "porter", ".", "PorterStemmer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.PorterStemmer.stem": [[44, 46], ["text.PorterStemmer._stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.PorterStemmer._stem"], ["", "def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "[", "self", ".", "_stem", "(", "token", ")", "for", "token", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.PorterStemmer._stem": [[47, 52], ["text.PorterStemmer.stemmer.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "def", "_stem", "(", "self", ",", "token", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", ".", "stemmer", ".", "stem", "(", "token", ",", "to_lowercase", "=", "False", ")", "\n", "", "except", "RecursionError", ":", "\n", "            ", "return", "token", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.FarsiStemmer.__init__": [[57, 63], ["text.Stemmer.__init__", "parsivar.FindStems", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "lang", ")", ":", "\n", "        ", "if", "lang", "!=", "\"fas\"", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Parsivar stemmer only supports Farsi\"", ")", "\n", "", "import", "parsivar", "\n", "super", "(", ")", ".", "__init__", "(", "lang", ")", "\n", "self", ".", "stemmer", "=", "parsivar", ".", "FindStems", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.FarsiStemmer.stem": [[64, 66], ["text.FarsiStemmer.stemmer.convert_to_stem"], "methods", ["None"], ["", "def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "return", "[", "self", ".", "stemmer", ".", "convert_to_stem", "(", "token", ")", "for", "token", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.Tokenizer.__init__": [[71, 79], ["lang.lower", "util.file.create_path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.create_path"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            lang (str): ISO 639-3 language code\n            model_path (str|None): Path to model directory or None if default\n        \"\"\"", "\n", "self", ".", "lang", "=", "lang", ".", "lower", "(", ")", "\n", "self", ".", "model_path", "=", "create_path", "(", "model_path", ")", "if", "model_path", "else", "model_path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.Tokenizer.tokenize": [[80, 90], ["None"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "\"\"\"Tokenize text\n\n        Args:\n            text (str)\n\n        Returns:\n            list: A list of strings\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.WhiteSpaceTokenizer.tokenize": [[93, 95], ["text.split"], "methods", ["None"], ["    ", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "text", ".", "split", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.MosesTokenizer.__init__": [[104, 113], ["text.Tokenizer.__init__", "sacremoses.MosesTokenizer", "SpacyModelLoader.get_loader().load", "text.MosesTokenizer.nlp.enable_pipe", "error.ConfigError", "util.LangStandardizer.iso_639_1", "text.SpacyModelLoader.get_loader"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_1", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.get_loader"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lang", ",", "model_path", ")", "\n", "if", "self", ".", "lang", "in", "self", ".", "not_supported", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Moses tokenizer does not support {self.lang}\"", ")", "\n", "", "import", "sacremoses", "\n", "self", ".", "tokenizer", "=", "sacremoses", ".", "MosesTokenizer", "(", "lang", "=", "LangStandardizer", ".", "iso_639_1", "(", "self", ".", "lang", ")", ")", "\n", "# we need to segment sentences with spaCy before running the tokenizer", "\n", "self", ".", "nlp", "=", "SpacyModelLoader", ".", "get_loader", "(", "model_path", ")", ".", "load", "(", "'xx'", ")", "\n", "self", ".", "nlp", ".", "enable_pipe", "(", "\"senter\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.MosesTokenizer.tokenize": [[114, 118], ["text.MosesTokenizer.nlp", "itertools.chain.from_iterable", "list", "text.MosesTokenizer.tokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "doc", "=", "self", ".", "nlp", "(", "text", ")", "\n", "tokens", "=", "itertools", ".", "chain", ".", "from_iterable", "(", "self", ".", "tokenizer", ".", "tokenize", "(", "sent", ",", "escape", "=", "False", ")", "for", "sent", "in", "doc", ".", "sents", ")", "\n", "return", "list", "(", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.JiebaTokenizer.__init__": [[123, 130], ["text.Tokenizer.__init__", "jieba.setLogLevel", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lang", ",", "model_path", ")", "\n", "if", "self", ".", "lang", "!=", "'zho'", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Jieba tokenizer only supports zho\"", ")", "\n", "", "import", "jieba", "\n", "jieba", ".", "setLogLevel", "(", "60", ")", "\n", "self", ".", "tokenizer", "=", "jieba", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.JiebaTokenizer.tokenize": [[131, 133], ["list", "text.JiebaTokenizer.tokenizer.cut"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "tokenizer", ".", "cut", "(", "text", ",", "cut_all", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.NgramTokenizer.__init__": [[144, 150], ["text.Tokenizer.__init__", "SpacyModelLoader.get_loader().load", "text.NgramTokenizer.nlp.enable_pipe", "text.SpacyModelLoader.get_loader"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.get_loader"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lang", ",", "model_path", ")", "\n", "self", ".", "n", "=", "2", "if", "self", ".", "lang", "in", "self", ".", "cjk_codes", "else", "5", "\n", "# segment sentences with spaCy before create ngrams", "\n", "self", ".", "nlp", "=", "SpacyModelLoader", ".", "get_loader", "(", "model_path", ")", ".", "load", "(", "'xx'", ")", "\n", "self", ".", "nlp", ".", "enable_pipe", "(", "\"senter\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.NgramTokenizer.tokenize": [[151, 155], ["text.NgramTokenizer.nlp", "itertools.chain.from_iterable", "text.NgramTokenizer._get_ngrams"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.NgramTokenizer._get_ngrams"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "doc", "=", "self", ".", "nlp", "(", "text", ")", "\n", "ngrams", "=", "itertools", ".", "chain", ".", "from_iterable", "(", "self", ".", "_get_ngrams", "(", "sent", ")", "for", "sent", "in", "doc", ".", "sents", ")", "\n", "return", "[", "''", ".", "join", "(", "x", ")", "for", "x", "in", "ngrams", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.NgramTokenizer._get_ngrams": [[156, 160], ["str", "zip", "itertools.islice", "enumerate", "itertools.tee"], "methods", ["None"], ["", "def", "_get_ngrams", "(", "self", ",", "text", ")", ":", "\n", "# create iterators over characters with an increasing offset and then zip to create ngrams", "\n", "        ", "text", "=", "str", "(", "text", ")", "\n", "return", "zip", "(", "*", "(", "itertools", ".", "islice", "(", "chars", ",", "offset", ",", "None", ")", "for", "offset", ",", "chars", "in", "enumerate", "(", "itertools", ".", "tee", "(", "text", ",", "self", ".", "n", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StanzaNLP.__init__": [[173, 208], ["text.Stemmer.__init__", "text.Tokenizer.__init__", "torch.set_num_threads", "text.StanzaNLP._setup_logging", "io.StringIO", "LOGGER.debug", "contextlib.redirect_stderr", "stanza.Pipeline", "io.StringIO.getvalue", "stanza.download", "error.ConfigError", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StanzaNLP._setup_logging"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ",", "stem", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            lang (str): ISO 639-3 language code.\n            model_path (str): Path to stanza model directory.\n            stem (bool): Whether to stem the tokens.\n        \"\"\"", "\n", "Stemmer", ".", "__init__", "(", "self", ",", "lang", ")", "\n", "Tokenizer", ".", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", "\n", "import", "stanza", "# lazy load stanza when needed", "\n", "import", "torch", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "# TODO make this configurable", "\n", "self", ".", "lang", "=", "self", ".", "lang_map", "[", "self", ".", "lang", "]", "\n", "self", ".", "_setup_logging", "(", ")", "\n", "buffer", "=", "io", ".", "StringIO", "(", ")", "\n", "with", "contextlib", ".", "redirect_stderr", "(", "buffer", ")", ":", "\n", "            ", "if", "self", ".", "model_path", "and", "not", "(", "self", ".", "model_path", "/", "self", ".", "lang", ")", ".", "exists", "(", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "stanza", ".", "download", "(", "self", ".", "lang", ",", "model_dir", "=", "str", "(", "self", ".", "model_path", ")", ")", "\n", "", "except", "PermissionError", ":", "\n", "                    ", "msg", "=", "f\"Cannot write to {self.model_path}. Maybe model_path needs to be set in process section.\"", "\n", "raise", "ConfigError", "(", "msg", ")", "\n", "", "", "if", "self", ".", "lang", "==", "'zh-hans'", ":", "\n", "                ", "processors", "=", "'tokenize'", "\n", "package", "=", "'default'", "\n", "", "elif", "stem", ":", "\n", "                ", "processors", "=", "'tokenize,lemma'", "\n", "package", "=", "'default'", "\n", "", "else", ":", "\n", "                ", "processors", "=", "'tokenize'", "\n", "package", "=", "'default'", "\n", "# self.nlp = stanza.Pipeline(self.lang, processors=processors, package=package, dir=str(self.model_path))", "\n", "", "self", ".", "nlp", "=", "stanza", ".", "Pipeline", "(", "self", ".", "lang", ",", "processors", "=", "processors", ",", "package", "=", "package", ")", "\n", "self", ".", "cache", "=", "None", "\n", "", "LOGGER", ".", "debug", "(", "buffer", ".", "getvalue", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StanzaNLP.tokenize": [[209, 217], ["text.StanzaNLP.nlp", "tokens.append"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "doc", "=", "self", ".", "nlp", "(", "text", ")", "\n", "self", ".", "cache", "=", "doc", "# cache the document for the stem method to pick up", "\n", "tokens", "=", "[", "]", "\n", "for", "sentence", "in", "doc", ".", "sentences", ":", "\n", "            ", "for", "word", "in", "sentence", ".", "words", ":", "\n", "                ", "tokens", ".", "append", "(", "word", ".", "text", ")", "\n", "", "", "return", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StanzaNLP.stem": [[221, 234], ["tokens.append", "tokens.append", "token.lemma.translate"], "methods", ["None"], ["def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "tokens", "=", "[", "]", "\n", "for", "sentence", "in", "self", ".", "cache", ".", "sentences", ":", "\n", "            ", "for", "token", "in", "sentence", ".", "words", ":", "\n", "                ", "if", "token", ".", "lemma", ":", "\n", "# TODO Persian lemmas sometimes have # characters in them", "\n", "                    ", "if", "self", ".", "lang", "==", "'ar'", ":", "\n", "# Arabic lemmas have full diacritization", "\n", "                        ", "token", ".", "lemma", "=", "token", ".", "lemma", ".", "translate", "(", "self", ".", "diacritic_remove", ")", "\n", "", "tokens", ".", "append", "(", "token", ".", "lemma", ")", "\n", "", "else", ":", "\n", "                    ", "tokens", ".", "append", "(", "token", ".", "text", ")", "\n", "", "", "", "return", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StanzaNLP._setup_logging": [[235, 243], ["logging.getLogger", "logging.getLogger", "logging.getLogger.setLevel", "logging.getLogger.addHandler"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_setup_logging", "(", ")", ":", "\n", "        ", "stanza_logger", "=", "logging", ".", "getLogger", "(", "'stanza'", ")", "\n", "patapsco_logger", "=", "logging", ".", "getLogger", "(", "'patapsco'", ")", "\n", "stanza_logger", ".", "setLevel", "(", "patapsco_logger", ".", "level", ")", "\n", "stanza_logger", ".", "handlers", "=", "[", "]", "\n", "for", "handler", "in", "patapsco_logger", ".", "handlers", ":", "\n", "            ", "stanza_logger", ".", "addHandler", "(", "handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.get_loader": [[281, 296], ["text.SpacyModelLoader"], "methods", ["None"], ["@", "classmethod", "\n", "def", "get_loader", "(", "cls", ",", "model_path", ")", ":", "\n", "        ", "\"\"\"\n        Get a model loader for a particular model directory.\n        Use this so that models are shared across tasks.\n\n        Args:\n            model_path (Path): Path to spacy model directory or None for default.\n\n        Returns:\n            SpacyModelLoader\n        \"\"\"", "\n", "if", "model_path", "not", "in", "cls", ".", "loaders", ":", "\n", "            ", "cls", ".", "loaders", "[", "model_path", "]", "=", "SpacyModelLoader", "(", "model_path", ")", "\n", "", "return", "cls", ".", "loaders", "[", "model_path", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.__init__": [[297, 304], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "model_path", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            model_path (Path|None): Path to spacy model directory or None for default.\n        \"\"\"", "\n", "self", ".", "models", "=", "{", "}", "\n", "self", ".", "model_path", "=", "model_path", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.load": [[305, 330], ["util.LangStandardizer.iso_639_1", "NotImplementedError", "LOGGER.info", "spacy.load", "spacy.util.is_package", "LOGGER.info", "spacy.cli.download"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_1", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load"], ["", "def", "load", "(", "self", ",", "lang", ")", ":", "\n", "        ", "\"\"\"Load the model (or return cached model)\"\"\"", "\n", "if", "lang", "in", "self", ".", "models", ":", "\n", "            ", "return", "self", ".", "models", "[", "lang", "]", "\n", "\n", "", "if", "lang", "==", "'xx'", ":", "\n", "# multi-language model", "\n", "            ", "iso_639_1", "=", "'xx'", "\n", "", "else", ":", "\n", "            ", "iso_639_1", "=", "LangStandardizer", ".", "iso_639_1", "(", "lang", ")", "\n", "", "if", "iso_639_1", "not", "in", "self", ".", "model_map", ":", "\n", "            ", "iso_639_1", "=", "'xx'", "# fallback to multi-language model", "\n", "", "import", "spacy", "# lazy load spacy when needed", "\n", "if", "self", ".", "model_path", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Spacy model loading from a directory is not available yet\"", ")", "\n", "", "else", ":", "\n", "            ", "model_name", "=", "self", ".", "model_map", "[", "iso_639_1", "]", "\n", "if", "not", "spacy", ".", "util", ".", "is_package", "(", "model_name", ")", ":", "\n", "# install as a pip package", "\n", "                ", "LOGGER", ".", "info", "(", "f\"Downloading the {lang} spacy model. This may take a few minutes...\"", ")", "\n", "spacy", ".", "cli", ".", "download", "(", "model_name", ")", "\n", "", "LOGGER", ".", "info", "(", "f\"Loading the {lang} spacy model\"", ")", "\n", "nlp", "=", "spacy", ".", "load", "(", "model_name", ",", "exclude", "=", "self", ".", "exclude", ",", "disable", "=", "self", ".", "disable", ")", "\n", "", "self", ".", "models", "[", "lang", "]", "=", "nlp", "\n", "return", "nlp", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyNLP.__init__": [[335, 353], ["text.Stemmer.__init__", "text.Tokenizer.__init__", "SpacyModelLoader.get_loader().load", "text.SpacyModelLoader.get_loader", "set", "text.SpacyNLP.nlp.enable_pipe"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyModelLoader.get_loader", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set"], ["def", "__init__", "(", "self", ",", "lang", ",", "model_path", ",", "stem", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            lang (str): Language code.\n            model_path (str|None): Path to stored models.\n            stem (bool): Whether to stem the tokens.\n        \"\"\"", "\n", "Stemmer", ".", "__init__", "(", "self", ",", "lang", ")", "\n", "Tokenizer", ".", "__init__", "(", "self", ",", "lang", ",", "model_path", ")", "\n", "self", ".", "nlp", "=", "SpacyModelLoader", ".", "get_loader", "(", "self", ".", "model_path", ")", ".", "load", "(", "self", ".", "lang", ")", "\n", "self", ".", "cache", "=", "None", "\n", "if", "stem", ":", "\n", "# if self.lang in ['ar', 'fa', 'zh']:", "\n", "#     raise ConfigError(f\"Spacy does not support lemmatization for {self.lang}\")", "\n", "# enable pipeline components that the lemmatizer depends on", "\n", "            ", "names", "=", "self", ".", "nlp", ".", "component_names", "\n", "for", "name", "in", "set", "(", "names", ")", "&", "{", "'tok2vec'", ",", "'tagger'", ",", "'attribute_ruler'", ",", "'lemmatizer'", ",", "'morphologizer'", "}", ":", "\n", "                ", "self", ".", "nlp", ".", "enable_pipe", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyNLP.tokenize": [[354, 358], ["text.SpacyNLP.nlp", "str"], "methods", ["None"], ["", "", "", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "tokens", "=", "self", ".", "nlp", "(", "text", ")", "\n", "self", ".", "cache", "=", "tokens", "\n", "return", "[", "str", "(", "token", ")", "for", "token", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.SpacyNLP.stem": [[359, 362], ["None"], "methods", ["None"], ["", "def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "tokens", "=", "self", ".", "cache", "\n", "return", "[", "token", ".", "lemma_", "if", "token", ".", "lemma_", "else", "token", ".", "text", "for", "token", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.__init__": [[365, 375], ["open", "word.strip", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "source", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            source (str): Name of the source of stop words.\n            lang (str): Language code.\n        \"\"\"", "\n", "filename", "=", "lang", "+", "\".txt\"", "\n", "path", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'resources'", "/", "'stopwords'", "/", "source", "/", "filename", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "stop_words", "=", "{", "word", ".", "strip", "(", ")", "for", "word", "in", "fp", "if", "word", "[", "0", "]", "!=", "'#'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.identify": [[376, 391], ["enumerate", "enumerate", "token.lower"], "methods", ["None"], ["", "", "def", "identify", "(", "self", ",", "tokens", ",", "is_lower", "=", "False", ")", ":", "\n", "        ", "\"\"\"Identify words to remove\n\n        Args:\n            tokens (list of str)\n            is_lower (bool) Whether the tokens have already been lowercased.\n\n        Returns\n            indices of tokens to remove\n        \"\"\"", "\n", "if", "is_lower", ":", "\n", "            ", "tokens", "=", "[", "index", "for", "index", ",", "token", "in", "enumerate", "(", "tokens", ")", "if", "token", "in", "self", ".", "stop_words", "]", "\n", "", "else", ":", "\n", "            ", "tokens", "=", "[", "index", "for", "index", ",", "token", "in", "enumerate", "(", "tokens", ")", "if", "token", ".", "lower", "(", ")", "in", "self", ".", "stop_words", "]", "\n", "", "return", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.remove": [[392, 403], ["enumerate"], "methods", ["None"], ["", "def", "remove", "(", "self", ",", "tokens", ",", "indices", ")", ":", "\n", "        ", "\"\"\"Remove stop words\n\n        Args:\n            tokens (list of str)\n            indices (list of int)\n\n        Returns\n            list of str\n        \"\"\"", "\n", "return", "[", "token", "for", "index", ",", "token", "in", "enumerate", "(", "tokens", ")", "if", "index", "not", "in", "indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate": [[418, 437], ["error.ConfigError", "error.ConfigError", "error.ConfigError", "error.ConfigError", "error.ConfigError"], "methods", ["None"], ["@", "classmethod", "\n", "def", "validate", "(", "cls", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"Validate the config for tokenizers and stemmers.\n\n        Args:\n            config (TextProcessorConfig): text configuration\n            lang (str): ISO 639-3 language code\n        \"\"\"", "\n", "if", "config", ".", "tokenize", "not", "in", "cls", ".", "tokenizers", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unknown tokenizer {config.tokenize}\"", ")", "\n", "", "if", "config", ".", "stem", "and", "config", ".", "stem", "not", "in", "cls", ".", "stemmers", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unknown stemmer {config.stem}\"", ")", "\n", "", "if", "config", ".", "stem", ":", "\n", "            ", "if", "config", ".", "tokenize", "==", "'ngram'", ":", "\n", "                ", "raise", "ConfigError", "(", "\"ngram tokenizer not compatible with stemming\"", ")", "\n", "", "if", "config", ".", "stem", "==", "'spacy'", "and", "config", ".", "tokenize", "!=", "'spacy'", ":", "\n", "                ", "raise", "ConfigError", "(", "\"If using spacy stemming, must use spacy tokenizer\"", ")", "\n", "", "if", "config", ".", "stem", "==", "'stanza'", "and", "config", ".", "tokenize", "!=", "'stanza'", ":", "\n", "                ", "raise", "ConfigError", "(", "\"If using stanza stemming, must use stanza tokenizer\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer": [[438, 471], ["text.SpacyNLP", "text.StanzaNLP", "text.JiebaTokenizer", "text.MosesTokenizer", "text.NgramTokenizer", "text.WhiteSpaceTokenizer", "error.ConfigError"], "methods", ["None"], ["", "", "", "@", "classmethod", "\n", "def", "create_tokenizer", "(", "cls", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            config (TextProcessConfig): text configuration\n            lang (str): ISO 639-3 language code\n\n        Returns:\n            Tokenizer\n        \"\"\"", "\n", "key", "=", "f\"{config.tokenize}:{lang}\"", "\n", "if", "key", "in", "cls", ".", "tokenizer_cache", ":", "\n", "            ", "return", "cls", ".", "tokenizer_cache", "[", "key", "]", "\n", "\n", "", "if", "config", ".", "tokenize", "in", "[", "'spacy'", ",", "'stanza'", "]", ":", "\n", "            ", "also_stemmer", "=", "config", ".", "stem", "==", "config", ".", "tokenize", "\n", "if", "config", ".", "tokenize", "==", "'spacy'", ":", "\n", "                ", "tokenizer", "=", "SpacyNLP", "(", "lang", ",", "config", ".", "model_path", ",", "stem", "=", "also_stemmer", ")", "\n", "", "else", ":", "\n", "                ", "tokenizer", "=", "StanzaNLP", "(", "lang", ",", "config", ".", "model_path", ",", "stem", "=", "also_stemmer", ")", "\n", "", "", "elif", "config", ".", "tokenize", "==", "'jieba'", ":", "\n", "            ", "tokenizer", "=", "JiebaTokenizer", "(", "lang", ",", "config", ".", "model_path", ")", "\n", "", "elif", "config", ".", "tokenize", "==", "'moses'", ":", "\n", "            ", "tokenizer", "=", "MosesTokenizer", "(", "lang", ",", "config", ".", "model_path", ")", "\n", "", "elif", "config", ".", "tokenize", "==", "'ngram'", ":", "\n", "            ", "tokenizer", "=", "NgramTokenizer", "(", "lang", ",", "config", ".", "model_path", ")", "\n", "", "elif", "config", ".", "tokenize", "==", "'whitespace'", ":", "\n", "            ", "tokenizer", "=", "WhiteSpaceTokenizer", "(", "lang", ",", "config", ".", "model_path", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unknown tokenizer {config.tokenize}\"", ")", "\n", "\n", "", "cls", ".", "tokenizer_cache", "[", "key", "]", "=", "tokenizer", "\n", "return", "tokenizer", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_stemmer": [[472, 500], ["cls.create_tokenizer", "text.PorterStemmer", "text.FarsiStemmer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer"], ["", "@", "classmethod", "\n", "def", "create_stemmer", "(", "cls", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            config (TextProcessConfig): text configuration\n            lang (str): ISO 639-3 language code\n\n        Returns:\n            Stemmer\n        \"\"\"", "\n", "if", "not", "config", ".", "stem", ":", "\n", "            ", "return", "None", "\n", "", "key", "=", "f\"{config.stem}:{lang}\"", "\n", "if", "key", "in", "cls", ".", "stemmer_cache", ":", "\n", "            ", "return", "cls", ".", "stemmer_cache", "[", "key", "]", "\n", "\n", "", "stemmer_name", "=", "config", ".", "stem", "\n", "stemmer", "=", "None", "\n", "\n", "if", "stemmer_name", "in", "[", "'spacy'", ",", "'stanza'", "]", ":", "\n", "            ", "return", "cls", ".", "create_tokenizer", "(", "config", ",", "lang", ")", "\n", "", "elif", "stemmer_name", "==", "'porter'", ":", "\n", "            ", "stemmer", "=", "PorterStemmer", "(", "lang", ")", "\n", "", "elif", "stemmer_name", "==", "'parsivar'", ":", "\n", "            ", "stemmer", "=", "FarsiStemmer", "(", "lang", ")", "\n", "\n", "", "cls", ".", "stemmer_cache", "[", "key", "]", "=", "stemmer", "\n", "return", "stemmer", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.__init__": [[507, 522], ["pipeline.Task.__init__", "text.TokenizerStemmerFactory.validate"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.validate"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (TextProcessorConfig)\n            lang (str): Language code\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ")", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "processor_config", "=", "config", "\n", "TokenizerStemmerFactory", ".", "validate", "(", "config", ",", "lang", ")", "\n", "self", ".", "normalizer", "=", "None", "\n", "self", ".", "tokenizer", "=", "None", "\n", "self", ".", "stemmer", "=", "None", "\n", "self", ".", "stopword_remover", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.begin": [[523, 529], ["util.normalize.NormalizerFactory.create", "text.TokenizerStemmerFactory.create_tokenizer", "text.TokenizerStemmerFactory.create_stemmer", "text.StopWordsRemover"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_tokenizer", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TokenizerStemmerFactory.create_stemmer"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "self", ".", "normalizer", "=", "NormalizerFactory", ".", "create", "(", "self", ".", "lang", ",", "self", ".", "processor_config", ".", "normalize", ")", "\n", "self", ".", "tokenizer", "=", "TokenizerStemmerFactory", ".", "create_tokenizer", "(", "self", ".", "processor_config", ",", "self", ".", "lang", ")", "\n", "self", ".", "stemmer", "=", "TokenizerStemmerFactory", ".", "create_stemmer", "(", "self", ".", "processor_config", ",", "self", ".", "lang", ")", "\n", "if", "self", ".", "processor_config", ".", "stopwords", ":", "\n", "            ", "self", ".", "stopword_remover", "=", "StopWordsRemover", "(", "self", ".", "processor_config", ".", "stopwords", ",", "self", ".", "lang", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.process": [[530, 533], ["None"], "methods", ["None"], ["", "", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "\"\"\"Child classes will override this\"\"\"", "\n", "return", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.pre_normalize": [[534, 536], ["text.TextProcessor.normalizer.pre_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize"], ["", "def", "pre_normalize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "self", ".", "normalizer", ".", "pre_normalize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.post_normalize": [[537, 539], ["text.TextProcessor.normalizer.post_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "post_normalize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "self", ".", "normalizer", ".", "post_normalize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize": [[540, 542], ["text.TextProcessor.tokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "self", ".", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words": [[543, 548], ["text.TextProcessor.stopword_remover.identify"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.identify"], ["", "def", "identify_stop_words", "(", "self", ",", "tokens", ",", "is_lower", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "stopword_remover", ":", "\n", "            ", "return", "self", ".", "stopword_remover", ".", "identify", "(", "tokens", ",", "is_lower", ")", "\n", "", "else", ":", "\n", "            ", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words": [[549, 554], ["text.TextProcessor.stopword_remover.remove"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.StopWordsRemover.remove"], ["", "", "def", "remove_stop_words", "(", "self", ",", "tokens", ",", "indices", ")", ":", "\n", "        ", "if", "self", ".", "stopword_remover", ":", "\n", "            ", "return", "self", ".", "stopword_remover", ".", "remove", "(", "tokens", ",", "indices", ")", "\n", "", "else", ":", "\n", "            ", "return", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem": [[555, 560], ["text.TextProcessor.stemmer.stem"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem"], ["", "", "def", "stem", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "if", "self", ".", "stemmer", ":", "\n", "            ", "return", "self", ".", "stemmer", ".", "stem", "(", "tokens", ")", "\n", "", "else", ":", "\n", "            ", "return", "tokens", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.SgmlDocumentReader.__init__": [[45, 50], ["iter", "util.formats.parse_sgml_documents"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_documents"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "docs_iter", "=", "iter", "(", "parse_sgml_documents", "(", "path", ",", "encoding", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.SgmlDocumentReader.__iter__": [[51, 53], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.SgmlDocumentReader.__next__": [[54, 57], ["next", "docs.Doc"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "doc", "=", "next", "(", "self", ".", "docs_iter", ")", "\n", "return", "Doc", "(", "doc", "[", "0", "]", ",", "self", ".", "lang", ",", "doc", "[", "1", "]", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.SgmlDocumentReader.__len__": [[58, 60], ["util.file.count_lines_with"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines_with", "(", "'<DOC>'", ",", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.Hc4JsonDocumentReader.__init__": [[65, 78], ["open_func", "path.endswith"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path (str): Path to file to parse\n            encoding (str): Encoding of file\n            lang (str): Language of documents in file\n        \"\"\"", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "open_func", "=", "gzip", ".", "open", "if", "path", ".", "endswith", "(", "'.gz'", ")", "else", "open", "\n", "self", ".", "fp", "=", "open_func", "(", "path", ",", "'rt'", ",", "encoding", "=", "encoding", ")", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.Hc4JsonDocumentReader.__iter__": [[79, 81], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.Hc4JsonDocumentReader.__next__": [[82, 97], ["docs.Hc4JsonDocumentReader.fp.readline", "docs.Hc4JsonDocumentReader.fp.close", "json.loads", "docs.Doc", "docs.Hc4JsonDocumentReader.strip", "error.ParseError", "error.ParseError", "data[].strip", "data[].strip"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "fp", ".", "closed", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "self", ".", "count", "+=", "1", "\n", "line", "=", "self", ".", "fp", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "            ", "self", ".", "fp", ".", "close", "(", ")", "\n", "raise", "StopIteration", "\n", "", "try", ":", "\n", "            ", "data", "=", "json", ".", "loads", "(", "line", ".", "strip", "(", ")", ")", "\n", "return", "Doc", "(", "data", "[", "'id'", "]", ",", "self", ".", "lang", ",", "' '", ".", "join", "(", "[", "data", "[", "'title'", "]", ".", "strip", "(", ")", ",", "data", "[", "'text'", "]", ".", "strip", "(", ")", "]", ")", ",", "data", "[", "'date'", "]", ")", "\n", "", "except", "json", ".", "decoder", ".", "JSONDecodeError", "as", "e", ":", "\n", "            ", "raise", "ParseError", "(", "f\"Problem parsing json from {self.path} on line {self.count}: {e}\"", ")", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "raise", "ParseError", "(", "f\"Missing field {e} in json element in {self.path} on line {self.count}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.Hc4JsonDocumentReader.__len__": [[98, 100], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.TsvDocumentReader.__init__": [[105, 112], ["open_func", "csv.reader", "path.endswith"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "open_func", "=", "gzip", ".", "open", "if", "path", ".", "endswith", "(", "'.gz'", ")", "else", "open", "\n", "self", ".", "fp", "=", "open_func", "(", "path", ",", "'rt'", ",", "encoding", "=", "encoding", ")", "\n", "self", ".", "reader", "=", "csv", ".", "reader", "(", "self", ".", "fp", ",", "delimiter", "=", "'\\t'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.TsvDocumentReader.__iter__": [[113, 115], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.TsvDocumentReader.__next__": [[116, 123], ["next", "docs.Doc", "docs.TsvDocumentReader.fp.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "row", "=", "next", "(", "self", ".", "reader", ")", "\n", "return", "Doc", "(", "row", "[", "0", "]", ",", "self", ".", "lang", ",", "row", "[", "1", "]", ",", "None", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "fp", ".", "close", "(", ")", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.TsvDocumentReader.__len__": [[124, 126], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.IRDSDocumentReader.__init__": [[134, 149], ["ir_datasets.load", "util.LangStandardizer.iso_639_3", "iter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path (str): ir_datasets name.\n            encoding (str): Ignored.\n            lang (str): Language of the documents.\n            **kwargs (dict): Unused.\n        \"\"\"", "\n", "import", "ir_datasets", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "dataset", "=", "ir_datasets", ".", "load", "(", "self", ".", "path", ")", "\n", "dataset_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "self", ".", "dataset", ".", "docs", ".", "lang", ")", "\n", "assert", "dataset_lang", "==", "self", ".", "lang", ",", "f\"Document language code from {path} is not {lang} but {dataset_lang}.\"", "\n", "self", ".", "reader", "=", "iter", "(", "self", ".", "dataset", ".", "docs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.IRDSDocumentReader.__iter__": [[150, 152], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.IRDSDocumentReader.__next__": [[153, 156], ["next", "docs.Doc"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "doc", "=", "next", "(", "self", ".", "reader", ")", "\n", "return", "Doc", "(", "doc", ".", "doc_id", ",", "self", ".", "lang", ",", "doc", ".", "text", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.IRDSDocumentReader.__len__": [[157, 159], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocWriter.__init__": [[164, 168], ["pipeline.Task.__init__", "open"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "artifact_config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "artifact_config", ",", "config", ".", "output", ")", "\n", "path", "=", "self", ".", "base", "/", "'documents.jsonl'", "\n", "self", ".", "file", "=", "open", "(", "path", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocWriter.process": [[169, 182], ["hasattr", "docs.DocWriter.file.write", "json.dumps"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "doc", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            doc (Doc)\n\n        Returns:\n            Doc\n        \"\"\"", "\n", "# if no database, we remove the extra text object before serializing", "\n", "if", "hasattr", "(", "doc", ",", "'original_text'", ")", ":", "\n", "            ", "del", "doc", ".", "original_text", "\n", "", "self", ".", "file", ".", "write", "(", "json", ".", "dumps", "(", "doc", ",", "cls", "=", "DataclassJSONEncoder", ")", "+", "\"\\n\"", ")", "\n", "return", "doc", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocWriter.end": [[183, 186], ["super().end", "docs.DocWriter.file.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "end", "(", ")", "\n", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocWriter.reduce": [[187, 193], ["util.file.path_append", "open", "docs.DocWriter.file.write"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "for", "base", "in", "dirs", ":", "\n", "            ", "path", "=", "path_append", "(", "base", ",", "'documents.jsonl'", ")", "\n", "with", "open", "(", "path", ")", "as", "fp", ":", "\n", "                ", "for", "line", "in", "fp", ":", "\n", "                    ", "self", ".", "file", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocReader.__init__": [[198, 203], ["pathlib.Path", "docs.DocReader.path.is_dir", "open"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "if", "self", ".", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "self", ".", "path", "=", "self", ".", "path", "/", "'documents.jsonl'", "\n", "", "self", ".", "file", "=", "open", "(", "self", ".", "path", ",", "'r'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocReader.__iter__": [[204, 206], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocReader.__next__": [[207, 216], ["docs.DocReader.file.readline", "json.loads", "docs.Doc", "docs.DocReader.file.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "file", ".", "closed", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "line", "=", "self", ".", "file", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "raise", "StopIteration", "\n", "", "data", "=", "json", ".", "loads", "(", "line", ")", "\n", "return", "Doc", "(", "**", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocReader.__len__": [[217, 219], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocumentProcessor.__init__": [[225, 235], ["text.TextProcessor.__init__", "collections.Counter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (DocumentsConfig)\n            lang (str): Language code for the documents.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "config", ".", "process", ",", "lang", ")", "\n", "self", ".", "save_report", "=", "config", ".", "process", ".", "normalize", ".", "report", "\n", "self", ".", "diffs", "=", "collections", ".", "Counter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocumentProcessor.process": [[236, 260], ["docs.DocumentProcessor.pre_normalize", "docs.DocumentProcessor.tokenize", "docs.DocumentProcessor.identify_stop_words", "docs.DocumentProcessor.stem", "docs.DocumentProcessor.remove_stop_words", "docs.DocumentProcessor.post_normalize", "len", "LOGGER.warning", "util.normalize.compare_strings", "len"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.compare_strings"], ["", "def", "process", "(", "self", ",", "doc", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            doc (Doc)\n\n        Returns\n            Doc\n        \"\"\"", "\n", "text", "=", "original_text", "=", "doc", ".", "text", "\n", "if", "len", "(", "text", ")", ">", "self", ".", "MAX_TEXT_LEN", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "f\"Rejecting {doc.id} because it exceeds the length limit with a length of {len(text)}\"", ")", "\n", "return", "None", "\n", "", "text", "=", "self", ".", "pre_normalize", "(", "text", ")", "\n", "doc", ".", "original_text", "=", "text", "# this for the database to use", "\n", "if", "self", ".", "save_report", ":", "\n", "            ", "self", ".", "diffs", "+=", "compare_strings", "(", "original_text", ",", "text", ")", "\n", "\n", "", "tokens", "=", "self", ".", "tokenize", "(", "text", ")", "\n", "stopword_indices", "=", "self", ".", "identify_stop_words", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "stem", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "remove_stop_words", "(", "tokens", ",", "stopword_indices", ")", "\n", "text", "=", "self", ".", "post_normalize", "(", "' '", ".", "join", "(", "tokens", ")", ")", "\n", "doc", ".", "text", "=", "text", "\n", "return", "doc", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocumentProcessor.end": [[261, 264], ["docs.DocumentProcessor._save_report"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocumentProcessor._save_report"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "save_report", ":", "\n", "            ", "self", ".", "_save_report", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.docs.DocumentProcessor._save_report": [[265, 270], ["open", "docs.DocumentProcessor.diffs.most_common", "len", "fp.write", "repr"], "methods", ["None"], ["", "", "def", "_save_report", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "run_path", "/", "'normalize_report.txt'", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "for", "change", ",", "count", "in", "self", ".", "diffs", ".", "most_common", "(", "len", "(", "self", ".", "diffs", ")", ")", ":", "\n", "                ", "if", "\"\\n\"", "not", "in", "change", ":", "# skip newline removal", "\n", "                    ", "fp", ".", "write", "(", "f\"{repr(change)}\\t{count}\\n\"", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.StageReport.__add__": [[40, 48], ["job.StageReport", "zip"], "methods", ["None"], ["def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "self", ".", "timing", "and", "not", "other", ".", "timing", ":", "\n", "            ", "timing", "=", "self", ".", "timing", "\n", "", "elif", "not", "self", ".", "timing", "and", "other", ".", "timing", ":", "\n", "            ", "timing", "=", "other", ".", "timing", "\n", "", "else", ":", "\n", "            ", "timing", "=", "[", "(", "a", "[", "0", "]", ",", "a", "[", "1", "]", "+", "b", "[", "1", "]", ")", "for", "a", ",", "b", "in", "zip", "(", "self", ".", "timing", ",", "other", ".", "timing", ")", "]", "\n", "", "return", "StageReport", "(", "self", ".", "count", "+", "other", ".", "count", ",", "timing", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Report.__add__": [[55, 59], ["job.Report"], "methods", ["None"], ["def", "__add__", "(", "self", ",", "other", ")", ":", "\n", "        ", "stage1", "=", "self", ".", "stage1", "+", "other", ".", "stage1", "\n", "stage2", "=", "self", ".", "stage2", "+", "other", ".", "stage2", "\n", "return", "Report", "(", "stage1", ",", "stage2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Report.__radd__": [[60, 65], ["job.Report.__add__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Report.__add__"], ["", "def", "__radd__", "(", "self", ",", "other", ")", ":", "\n", "        ", "if", "other", "==", "0", ":", "\n", "            ", "return", "self", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "__add__", "(", "other", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.__init__": [[74, 87], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            conf (RunConfig): Config for this job\n            record_conf (RunConfig): Config for the output (includes previous partial runs like a prebuilt index)\n            stage1 (Pipeline): Stage 1 pipeline or false\n            stage2 (Pipeline): Stage 2 pipeline or false\n        \"\"\"", "\n", "self", ".", "conf", "=", "conf", "\n", "self", ".", "record_conf", "=", "record_conf", "\n", "self", ".", "run_path", "=", "conf", ".", "run", ".", "path", "\n", "self", ".", "stage1", "=", "stage1", "\n", "self", ".", "stage2", "=", "stage2", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.run": [[88, 102], ["LOGGER.info", "job.Job._run", "LOGGER.info", "LOGGER.info", "job.Job.write_complete", "job.Job.write_config", "job.Job.write_report", "job.Job.write_scores", "psutil.Process().memory_info", "psutil.Process", "util.get_human_readable_size"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_report", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_scores", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.get_human_readable_size"], ["", "def", "run", "(", "self", ",", "sub_job", "=", "False", ")", ":", "\n", "        ", "LOGGER", ".", "info", "(", "\"Starting run: %s\"", ",", "self", ".", "conf", ".", "run", ".", "name", ")", "\n", "\n", "report", "=", "self", ".", "_run", "(", ")", "\n", "\n", "if", "not", "sub_job", ":", "\n", "            ", "self", ".", "write_complete", "(", ")", "\n", "self", ".", "write_config", "(", ")", "\n", "self", ".", "write_report", "(", "report", ")", "\n", "self", ".", "write_scores", "(", ")", "\n", "", "mem", "=", "psutil", ".", "Process", "(", ")", ".", "memory_info", "(", ")", ".", "rss", "\n", "LOGGER", ".", "info", "(", "f\"Memory usage: {get_human_readable_size(mem)}\"", ")", "\n", "LOGGER", ".", "info", "(", "\"Run complete\"", ")", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job._run": [[103, 106], ["None"], "methods", ["None"], ["", "def", "_run", "(", "self", ")", ":", "\n", "# Children of Job must implement this which is called by run()", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_report": [[107, 111], ["pathlib.Path", "open", "json.dump"], "methods", ["None"], ["", "def", "write_report", "(", "self", ",", "report", ")", ":", "\n", "        ", "path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "'timing.json'", "\n", "with", "open", "(", "path", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "json", ".", "dump", "(", "report", ",", "fp", ",", "indent", "=", "4", ",", "cls", "=", "DataclassJSONEncoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_complete": [[112, 117], ["results_path.exists", "pathlib.Path", "util.file.touch_complete"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.touch_complete"], ["", "", "def", "write_complete", "(", "self", ")", ":", "\n", "# run is only complete if we have results", "\n", "        ", "results_path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "self", ".", "conf", ".", "run", ".", "results", "\n", "if", "results_path", ".", "exists", "(", ")", ":", "\n", "            ", "touch_complete", "(", "self", ".", "run_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_config": [[118, 125], ["config.ConfigService.write_config_file", "pathlib.Path", "str", "config.ConfigService.write_config_file", "pathlib.Path", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.write_config_file", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.write_config_file"], ["", "", "def", "write_config", "(", "self", ")", ":", "\n", "# if this run starts with artifacts, also write out their config in full config file", "\n", "        ", "path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "'config.yml'", "\n", "ConfigService", ".", "write_config_file", "(", "str", "(", "path", ")", ",", "self", ".", "conf", ")", "\n", "if", "self", ".", "conf", "!=", "self", ".", "record_conf", ":", "\n", "            ", "path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "'config_full.yml'", "\n", "ConfigService", ".", "write_config_file", "(", "str", "(", "path", ")", ",", "self", ".", "record_conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.Job.write_scores": [[126, 133], ["pathlib.Path", "results_path.exists", "score.Scorer", "score.Scorer.score", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer.score"], ["", "", "def", "write_scores", "(", "self", ")", ":", "\n", "        ", "results_path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "self", ".", "conf", ".", "run", ".", "results", "\n", "if", "results_path", ".", "exists", "(", ")", "and", "self", ".", "conf", ".", "score", ":", "\n", "            ", "scores_path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "'scores.txt'", "\n", "qrels_config", "=", "self", ".", "conf", ".", "score", ".", "input", "\n", "scorer", "=", "Scorer", "(", "qrels_config", ",", "self", ".", "conf", ".", "score", ".", "metrics", ")", "\n", "scorer", ".", "score", "(", "results_path", ",", "scores_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.SerialJob._run": [[138, 159], ["job.Report", "util.Timer", "LOGGER.info", "job.StageReport", "LOGGER.info", "LOGGER.info", "util.Timer", "LOGGER.info", "job.StageReport", "LOGGER.info", "LOGGER.info", "job.SerialJob.stage1.run", "job.SerialJob.stage2.run"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["def", "_run", "(", "self", ")", ":", "\n", "        ", "report", "=", "Report", "(", ")", "\n", "if", "self", ".", "stage1", ":", "\n", "            ", "timer1", "=", "Timer", "(", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 1: Starting processing of documents\"", ")", "\n", "with", "timer1", ":", "\n", "                ", "self", ".", "stage1", ".", "run", "(", ")", "\n", "", "report", ".", "stage1", "=", "StageReport", "(", "self", ".", "stage1", ".", "count", ",", "self", ".", "stage1", ".", "report", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 1: Ingested %d documents\"", ",", "self", ".", "stage1", ".", "count", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 1 took %.1f secs\"", ",", "timer1", ".", "time", ")", "\n", "\n", "", "if", "self", ".", "stage2", ":", "\n", "            ", "timer2", "=", "Timer", "(", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 2: Starting processing of topics\"", ")", "\n", "with", "timer2", ":", "\n", "                ", "self", ".", "stage2", ".", "run", "(", ")", "\n", "", "report", ".", "stage2", "=", "StageReport", "(", "self", ".", "stage2", ".", "count", ",", "self", ".", "stage2", ".", "report", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 2: Processed %d topics\"", ",", "self", ".", "stage2", ".", "count", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 2 took %.1f secs\"", ",", "timer2", ".", "time", ")", "\n", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.__init__": [[173, 182], ["job.Job.__init__", "multiprocessing.set_start_method", "job.MultiprocessingJob._get_stage1_jobs", "job.MultiprocessingJob._get_stage2_jobs"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._get_stage1_jobs", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._get_stage2_jobs"], ["def", "__init__", "(", "self", ",", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ",", "debug", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ")", "\n", "multiprocessing", ".", "set_start_method", "(", "'spawn'", ")", "# so JVM doesn't get copied to child processes", "\n", "self", ".", "debug", "=", "debug", "\n", "self", ".", "stage1_jobs", "=", "self", ".", "stage2_jobs", "=", "None", "\n", "if", "stage1", ":", "\n", "            ", "self", ".", "stage1_jobs", "=", "self", ".", "_get_stage1_jobs", "(", "conf", ".", "run", ".", "stage1", ".", "num_jobs", ")", "\n", "", "if", "stage2", ":", "\n", "            ", "self", ".", "stage2_jobs", "=", "self", ".", "_get_stage2_jobs", "(", "conf", ".", "run", ".", "stage2", ".", "num_jobs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._run": [[183, 211], ["job.Report", "job.Report", "LOGGER.info", "util.Timer", "LOGGER.info", "LOGGER.info", "LOGGER.info", "util.Timer", "LOGGER.info", "LOGGER.info", "job.MultiprocessingJob.stage1.begin", "job.MultiprocessingJob.map", "job.MultiprocessingJob.stage1.reduce", "job.MultiprocessingJob.stage1.end", "job.MultiprocessingJob._del_reduce_directories", "job.MultiprocessingJob.stage2.begin", "job.MultiprocessingJob.map", "job.MultiprocessingJob.stage2.reduce", "job.MultiprocessingJob.stage2.end", "job.MultiprocessingJob._del_reduce_directories"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.map", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._del_reduce_directories", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.map", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._del_reduce_directories"], ["", "", "def", "_run", "(", "self", ")", ":", "\n", "        ", "report1", "=", "Report", "(", ")", "\n", "report2", "=", "Report", "(", ")", "\n", "if", "self", ".", "stage1_jobs", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 1: Starting processing of documents\"", ")", "\n", "timer1", "=", "Timer", "(", ")", "\n", "with", "timer1", ":", "\n", "                ", "self", ".", "stage1", ".", "begin", "(", ")", "\n", "report1", "=", "self", ".", "map", "(", "self", ".", "stage1_jobs", ",", "self", ".", "debug", ")", "\n", "self", ".", "stage1", ".", "reduce", "(", ")", "\n", "self", ".", "stage1", ".", "end", "(", ")", "\n", "self", ".", "_del_reduce_directories", "(", ")", "\n", "", "LOGGER", ".", "info", "(", "\"Stage 1: Ingested %d documents\"", ",", "report1", ".", "stage1", ".", "count", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 1 took %.1f secs\"", ",", "timer1", ".", "time", ")", "\n", "\n", "", "if", "self", ".", "stage2_jobs", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 2: Starting processing of queries\"", ")", "\n", "timer2", "=", "Timer", "(", ")", "\n", "with", "timer2", ":", "\n", "                ", "self", ".", "stage2", ".", "begin", "(", ")", "\n", "report2", "=", "self", ".", "map", "(", "self", ".", "stage2_jobs", ",", "self", ".", "debug", ")", "\n", "self", ".", "stage2", ".", "reduce", "(", ")", "\n", "self", ".", "stage2", ".", "end", "(", ")", "\n", "self", ".", "_del_reduce_directories", "(", ")", "\n", "", "LOGGER", ".", "info", "(", "\"Stage 2: Processed %d queries\"", ",", "report2", ".", "stage2", ".", "count", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 2 took %.1f secs\"", ",", "timer2", ".", "time", ")", "\n", "\n", "", "return", "report1", "+", "report2", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.map": [[212, 227], ["functools.partial", "concurrent.futures.ProcessPoolExecutor", "sum", "len", "executor.map", "error.PatapscoError", "type"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob.map"], ["", "def", "map", "(", "self", ",", "jobs", ",", "debug", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            jobs (list of MultiprocessingJobDef): Job definitions to be mapped over.\n            debug (bool): Whether to run in debug mode.\n        Returns:\n            Report\n        \"\"\"", "\n", "func", "=", "functools", ".", "partial", "(", "self", ".", "_fork", ",", "debug", "=", "debug", ")", "\n", "with", "concurrent", ".", "futures", ".", "ProcessPoolExecutor", "(", "max_workers", "=", "len", "(", "jobs", ")", ")", "as", "executor", ":", "\n", "# we loop in a try/except to catch errors from the jobs running in separate processes", "\n", "            ", "try", ":", "\n", "                ", "return", "sum", "(", "executor", ".", "map", "(", "func", ",", "jobs", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "raise", "PatapscoError", "(", "f\"multiprocessing map failed from {type(e).__name__} {e}\"", ")", "from", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._fork": [[228, 247], ["logging.getLogger", "logging.getLogger.setLevel", "log_dir.mkdir", "util.file.path_append", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.FileHandler.addFilter", "logging.getLogger.addHandler", "JobBuilder().build.JobBuilder.build", "job.JobBuilder.build", "pathlib.Path", "util.LoggingFilter", "JobBuilder().build.JobBuilder"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.build", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.build"], ["", "", "", "@", "staticmethod", "\n", "def", "_fork", "(", "job", ",", "debug", ")", ":", "\n", "# only log parallel jobs to their unique log file", "\n", "        ", "log_level", "=", "logging", ".", "DEBUG", "if", "debug", "else", "logging", ".", "INFO", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'patapsco'", ")", "\n", "logger", ".", "setLevel", "(", "log_level", ")", "\n", "log_dir", "=", "pathlib", ".", "Path", "(", "job", ".", "conf", ".", "run", ".", "path", ")", "/", "'logs'", "\n", "log_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "stage", "=", "'stage1'", "if", "job", ".", "conf", ".", "run", ".", "stage1", "else", "'stage2'", "\n", "log_file", "=", "path_append", "(", "log_dir", ",", "f\"patapsco.{stage}.{job.id}.log\"", ")", "\n", "file", "=", "logging", ".", "FileHandler", "(", "log_file", ")", "\n", "file", ".", "setLevel", "(", "logger", ".", "level", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'", ")", "\n", "file", ".", "setFormatter", "(", "formatter", ")", "\n", "file", ".", "addFilter", "(", "LoggingFilter", "(", ")", ")", "\n", "logger", ".", "addHandler", "(", "file", ")", "\n", "\n", "job", "=", "JobBuilder", "(", "job", ".", "conf", ",", "JobType", ".", "NORMAL", ")", ".", "build", "(", "debug", ")", "\n", "return", "job", ".", "run", "(", "sub_job", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._get_stage1_jobs": [[248, 263], ["len", "int", "enumerate", "math.ceil", "job.MultiprocessingJob.conf.copy", "job.MultiprocessingJob._update_stage1_output_paths", "stage1_jobs.append", "range", "job.MultiprocessingJobDef"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._update_stage1_output_paths"], ["", "def", "_get_stage1_jobs", "(", "self", ",", "num_processes", ")", ":", "\n", "        ", "num_items", "=", "len", "(", "self", ".", "stage1", ".", "iterator", ")", "\n", "job_size", "=", "int", "(", "math", ".", "ceil", "(", "num_items", "/", "num_processes", ")", ")", "\n", "indices", "=", "[", "(", "i", ",", "i", "+", "job_size", ")", "for", "i", "in", "range", "(", "0", ",", "num_items", ",", "job_size", ")", "]", "\n", "stage1_jobs", "=", "[", "]", "\n", "for", "part", ",", "(", "start", ",", "stop", ")", "in", "enumerate", "(", "indices", ")", ":", "\n", "            ", "sub_directory", "=", "f\"part_{part}\"", "\n", "conf", "=", "self", ".", "conf", ".", "copy", "(", "deep", "=", "True", ")", "\n", "conf", ".", "run", ".", "stage1", ".", "start", "=", "start", "\n", "conf", ".", "run", ".", "stage1", ".", "stop", "=", "stop", "\n", "conf", ".", "run", ".", "parallel", "=", "None", "\n", "conf", ".", "run", ".", "stage2", "=", "False", "\n", "self", ".", "_update_stage1_output_paths", "(", "conf", ",", "sub_directory", ")", "\n", "stage1_jobs", ".", "append", "(", "MultiprocessingJobDef", "(", "part", ",", "conf", ")", ")", "\n", "", "return", "stage1_jobs", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._get_stage2_jobs": [[264, 279], ["len", "int", "enumerate", "math.ceil", "job.MultiprocessingJob.conf.copy", "job.MultiprocessingJob._update_stage2_output_paths", "stage2_jobs.append", "range", "job.MultiprocessingJobDef"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._update_stage2_output_paths"], ["", "def", "_get_stage2_jobs", "(", "self", ",", "num_processes", ")", ":", "\n", "        ", "num_items", "=", "len", "(", "self", ".", "stage2", ".", "iterator", ")", "\n", "job_size", "=", "int", "(", "math", ".", "ceil", "(", "num_items", "/", "num_processes", ")", ")", "\n", "indices", "=", "[", "(", "i", ",", "i", "+", "job_size", ")", "for", "i", "in", "range", "(", "0", ",", "num_items", ",", "job_size", ")", "]", "\n", "stage2_jobs", "=", "[", "]", "\n", "for", "part", ",", "(", "start", ",", "stop", ")", "in", "enumerate", "(", "indices", ")", ":", "\n", "            ", "sub_directory", "=", "f\"part_{part}\"", "\n", "conf", "=", "self", ".", "conf", ".", "copy", "(", "deep", "=", "True", ")", "\n", "conf", ".", "run", ".", "stage2", ".", "start", "=", "start", "\n", "conf", ".", "run", ".", "stage2", ".", "stop", "=", "stop", "\n", "conf", ".", "run", ".", "parallel", "=", "None", "\n", "conf", ".", "run", ".", "stage1", "=", "False", "\n", "self", ".", "_update_stage2_output_paths", "(", "conf", ",", "sub_directory", ")", "\n", "stage2_jobs", ".", "append", "(", "MultiprocessingJobDef", "(", "part", ",", "conf", ")", ")", "\n", "", "return", "stage2_jobs", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._update_stage1_output_paths": [[280, 292], ["util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.file.path_append", "util.file.path_append", "util.file.path_append"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "@", "staticmethod", "\n", "def", "_update_stage1_output_paths", "(", "conf", ",", "part", ")", ":", "\n", "# configs may not have all tasks so we ignore errors", "\n", "        ", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "database", ".", "output", ":", "\n", "                ", "conf", ".", "database", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "database", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "documents", ".", "output", ":", "\n", "                ", "conf", ".", "documents", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "documents", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "index", ".", "output", ":", "\n", "                ", "conf", ".", "index", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "index", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._update_stage2_output_paths": [[293, 309], ["util.file.path_append", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.file.path_append", "util.file.path_append", "util.file.path_append", "util.file.path_append"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "", "", "@", "staticmethod", "\n", "def", "_update_stage2_output_paths", "(", "conf", ",", "part", ")", ":", "\n", "        ", "conf", ".", "run", ".", "results", "=", "path_append", "(", "part", ",", "conf", ".", "run", ".", "results", ")", "\n", "# configs may not have all tasks so we ignore errors", "\n", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "topics", ".", "output", ":", "\n", "                ", "conf", ".", "topics", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "topics", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "queries", ".", "output", ":", "\n", "                ", "conf", ".", "queries", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "queries", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "retrieve", ".", "output", ":", "\n", "                ", "conf", ".", "retrieve", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "retrieve", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "            ", "if", "conf", ".", "rerank", ".", "output", ":", "\n", "                ", "conf", ".", "rerank", ".", "output", "=", "path_append", "(", "part", ",", "conf", ".", "rerank", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.MultiprocessingJob._del_reduce_directories": [[310, 313], ["pathlib.Path", "util.file.delete_dir", "pathlib.Path.glob"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "", "", "def", "_del_reduce_directories", "(", "self", ")", ":", "\n", "        ", "base_dir", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "\n", "[", "delete_dir", "(", "item", ")", "for", "item", "in", "base_dir", ".", "glob", "(", "'part*'", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob.__init__": [[317, 338], ["job.Job.__init__", "str", "conf.run.parallel.copy", "job.ClusterJob._prepare_email", "config.ConfigService.write_config_file", "job.ClusterJob._create_map_scripts", "job.ClusterJob._create_reduce_scripts", "pathlib.Path().absolute", "job.ClusterJob.base_dir.mkdir", "error.ConfigError", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_email", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.write_config_file", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_map_scripts", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_reduce_scripts"], ["def", "__init__", "(", "self", ",", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ",", "debug", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ")", "\n", "self", ".", "debug", "=", "debug", "\n", "conf", ".", "run", ".", "path", "=", "str", "(", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", ".", "absolute", "(", ")", ")", "\n", "self", ".", "cluster_config", "=", "conf", ".", "run", ".", "parallel", ".", "copy", "(", ")", "\n", "self", ".", "scheduler", "=", "'qsub'", "if", "self", ".", "cluster_config", ".", "name", "==", "'qsub'", "else", "'sbatch'", "\n", "self", ".", "email", "=", "self", ".", "_prepare_email", "(", ")", "\n", "self", ".", "base_dir", "=", "(", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "self", ".", "scheduler", ")", ".", "absolute", "(", ")", "\n", "try", ":", "\n", "            ", "self", ".", "base_dir", ".", "mkdir", "(", "parents", "=", "True", ")", "\n", "", "except", "FileExistsError", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"A {self.scheduler} directory already exists at {self.base_dir}\"", ")", "\n", "", "self", ".", "stage1_map_path", "=", "self", ".", "base_dir", "/", "'stage1_map.sh'", "\n", "self", ".", "stage2_map_path", "=", "self", ".", "base_dir", "/", "'stage2_map.sh'", "\n", "self", ".", "stage1_reduce_path", "=", "self", ".", "base_dir", "/", "'stage1_reduce.sh'", "\n", "self", ".", "stage2_reduce_path", "=", "self", ".", "base_dir", "/", "'stage2_reduce.sh'", "\n", "self", ".", "config_path", "=", "self", ".", "base_dir", "/", "'config.yml'", "\n", "self", ".", "log_path", "=", "self", ".", "base_dir", "/", "'patapsco.log'", "\n", "ConfigService", ".", "write_config_file", "(", "self", ".", "config_path", ",", "conf", ")", "\n", "self", ".", "_create_map_scripts", "(", "debug", ")", "\n", "self", ".", "_create_reduce_scripts", "(", "debug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob.run": [[339, 354], ["LOGGER.info", "LOGGER.info", "job.ClusterJob._launch_job", "LOGGER.info", "job.ClusterJob._launch_job", "LOGGER.info", "job.ClusterJob._launch_job", "LOGGER.info", "job.ClusterJob._launch_job", "LOGGER.info"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._launch_job", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._launch_job", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._launch_job", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._launch_job"], ["", "def", "run", "(", "self", ",", "sub_job", "=", "False", ")", ":", "\n", "        ", "LOGGER", ".", "info", "(", "f\"Launching {self.scheduler} run: {self.conf.run.name}\"", ")", "\n", "\n", "job_id", "=", "None", "\n", "if", "self", ".", "stage1", ":", "\n", "            ", "job_id", "=", "self", ".", "_launch_job", "(", "self", ".", "stage1_map_path", ")", "\n", "LOGGER", ".", "info", "(", "f\"Job {job_id} submitted - stage 1 mapper\"", ")", "\n", "job_id", "=", "self", ".", "_launch_job", "(", "self", ".", "stage1_reduce_path", ",", "job_id", ")", "\n", "LOGGER", ".", "info", "(", "f\"Job {job_id} submitted - stage 1 reducer\"", ")", "\n", "", "if", "self", ".", "stage2", ":", "\n", "            ", "job_id", "=", "self", ".", "_launch_job", "(", "self", ".", "stage2_map_path", ",", "job_id", ")", "\n", "LOGGER", ".", "info", "(", "f\"Job {job_id} submitted - stage 2 mapper\"", ")", "\n", "job_id", "=", "self", ".", "_launch_job", "(", "self", ".", "stage2_reduce_path", ",", "job_id", ")", "\n", "LOGGER", ".", "info", "(", "f\"Job {job_id} submitted - stage 2 reducer\"", ")", "\n", "", "LOGGER", ".", "info", "(", "\"All jobs submitted\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._launch_job": [[355, 367], ["job.ClusterJob._create_arguments", "job.ClusterJob.append", "str", "LOGGER.debug", "subprocess.run", "job.ClusterJob._extract_job_id", "subprocess.run.stdout.decode", "print", "sys.exit", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_arguments", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._extract_job_id", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.decode"], ["", "def", "_launch_job", "(", "self", ",", "script_path", ",", "hold", "=", "None", ")", ":", "\n", "        ", "\"\"\"Launch a cluster job and return the job id\"\"\"", "\n", "args", "=", "self", ".", "_create_arguments", "(", "hold", ")", "\n", "args", ".", "append", "(", "str", "(", "script_path", ")", ")", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "LOGGER", ".", "debug", "(", "' '", ".", "join", "(", "[", "str", "(", "arg", ")", "for", "arg", "in", "args", "]", ")", ")", "\n", "", "try", ":", "\n", "            ", "ps", "=", "subprocess", ".", "run", "(", "args", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "stderr", "=", "subprocess", ".", "STDOUT", ",", "check", "=", "True", ")", "\n", "return", "self", ".", "_extract_job_id", "(", "ps", ".", "stdout", ".", "decode", "(", ")", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", "as", "e", ":", "\n", "            ", "print", "(", "f\"Error: {e}\"", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_arguments": [[368, 378], ["args.extend", "args.append"], "methods", ["None"], ["", "", "def", "_create_arguments", "(", "self", ",", "hold_id", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "scheduler", "==", "'qsub'", ":", "\n", "            ", "args", "=", "[", "'qsub'", ",", "'-terse'", ",", "'-q'", ",", "self", ".", "cluster_config", ".", "queue", "]", "\n", "if", "hold_id", ":", "\n", "                ", "args", ".", "extend", "(", "[", "'-hold_jid'", ",", "hold_id", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "args", "=", "[", "'sbatch'", ",", "'-p'", ",", "self", ".", "cluster_config", ".", "queue", "]", "\n", "if", "hold_id", ":", "\n", "                ", "args", ".", "append", "(", "f\"--depend=afterok:{hold_id}\"", ")", "\n", "", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._extract_job_id": [[379, 386], ["stdout.strip().split", "[].split", "stdout.strip", "stdout.strip().split", "stdout.strip"], "methods", ["None"], ["", "def", "_extract_job_id", "(", "self", ",", "stdout", ")", ":", "\n", "        ", "if", "self", ".", "scheduler", "==", "'qsub'", ":", "\n", "# array jobs have ids of xxxxxxx.1-num_jobs", "\n", "            ", "job_id", "=", "stdout", ".", "strip", "(", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "job_id", "=", "stdout", ".", "strip", "(", ")", ".", "split", "(", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "", "return", "job_id", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_resources": [[387, 396], ["job.ClusterJob.cluster_config.resources.split", "resource.strip"], "methods", ["None"], ["", "def", "_prepare_resources", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "scheduler", "==", "'qsub'", ":", "\n", "# qsub accepts a command separate list of resources that include cpus, gpus, memory, and time", "\n", "            ", "resources", "=", "f\"#$ -l {self.cluster_config.resources}\"", "\n", "", "else", ":", "\n", "# sbatch has different lines for different types of resources (time vs gpu)", "\n", "            ", "resources", "=", "[", "f\"#SBATCH {resource.strip()}\"", "for", "resource", "in", "self", ".", "cluster_config", ".", "resources", ".", "split", "(", "','", ")", "]", "\n", "resources", "=", "\"\\n\"", ".", "join", "(", "resources", ")", "\n", "", "return", "resources", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_email": [[397, 405], ["None"], "methods", ["None"], ["", "def", "_prepare_email", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "scheduler", "==", "'qsub'", ":", "\n", "            ", "email", "=", "f\"#$ -m ea -M {self.cluster_config.email}\"", "if", "self", ".", "cluster_config", ".", "email", "else", "''", "\n", "", "else", ":", "\n", "            ", "email", "=", "''", "\n", "if", "self", ".", "cluster_config", ".", "email", ":", "\n", "                ", "email", "=", "f\"#SBATCH --mail-user={self.cluster_config.email}\\n#SBATCH --mail-type=END,FAIL\"", "\n", "", "", "return", "email", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_map_scripts": [[406, 443], ["template_path.read_text", "LOGGER.debug", "job.ClusterJob._get_stage1_increment", "template_path.read_text.format", "job.ClusterJob.stage1_map_path.write_text", "job.ClusterJob.stage1_map_path.chmod", "LOGGER.debug", "job.ClusterJob._get_stage2_increment", "template_path.read_text.format", "job.ClusterJob.stage2_map_path.write_text", "job.ClusterJob.stage2_map_path.chmod", "str", "str", "job.ClusterJob._prepare_resources", "str", "str", "job.ClusterJob._prepare_resources", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._get_stage1_increment", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._get_stage2_increment", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_resources", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_resources"], ["", "def", "_create_map_scripts", "(", "self", ",", "debug", ")", ":", "\n", "        ", "template_path", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'resources'", "/", "self", ".", "scheduler", "/", "'map.sh'", "\n", "template", "=", "template_path", ".", "read_text", "(", ")", "\n", "debug", "=", "'-d'", "if", "debug", "else", "''", "\n", "code", "=", "self", ".", "cluster_config", ".", "code", "if", "self", ".", "cluster_config", ".", "code", "else", "''", "\n", "if", "self", ".", "stage1", ":", "\n", "            ", "num_jobs", "=", "self", ".", "conf", ".", "run", ".", "stage1", ".", "num_jobs", "\n", "LOGGER", ".", "debug", "(", "f\"Stage 1 is using {num_jobs} jobs\"", ")", "\n", "increment", "=", "self", ".", "_get_stage1_increment", "(", "num_jobs", ")", "\n", "content", "=", "template", ".", "format", "(", "\n", "base", "=", "str", "(", "self", ".", "base_dir", ")", ",", "\n", "code", "=", "code", ",", "\n", "config", "=", "str", "(", "self", ".", "config_path", ")", ",", "\n", "debug", "=", "debug", ",", "\n", "increment", "=", "increment", ",", "\n", "num_jobs", "=", "num_jobs", ",", "\n", "resources", "=", "self", ".", "_prepare_resources", "(", ")", ",", "\n", "stage", "=", "1", "\n", ")", "\n", "self", ".", "stage1_map_path", ".", "write_text", "(", "content", ")", "\n", "self", ".", "stage1_map_path", ".", "chmod", "(", "0o755", ")", "\n", "", "if", "self", ".", "stage2", ":", "\n", "            ", "num_jobs", "=", "self", ".", "conf", ".", "run", ".", "stage2", ".", "num_jobs", "\n", "LOGGER", ".", "debug", "(", "f\"Stage 2 is using {num_jobs} jobs\"", ")", "\n", "increment", "=", "self", ".", "_get_stage2_increment", "(", "num_jobs", ")", "\n", "content", "=", "template", ".", "format", "(", "\n", "base", "=", "str", "(", "self", ".", "base_dir", ")", ",", "\n", "code", "=", "code", ",", "\n", "config", "=", "str", "(", "self", ".", "config_path", ")", ",", "\n", "debug", "=", "debug", ",", "\n", "increment", "=", "increment", ",", "\n", "num_jobs", "=", "num_jobs", ",", "\n", "resources", "=", "self", ".", "_prepare_resources", "(", ")", ",", "\n", "stage", "=", "2", "\n", ")", "\n", "self", ".", "stage2_map_path", ".", "write_text", "(", "content", ")", "\n", "self", ".", "stage2_map_path", ".", "chmod", "(", "0o755", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._create_reduce_scripts": [[444, 473], ["template_path.read_text", "template_path.read_text.format", "job.ClusterJob.stage1_reduce_path.write_text", "job.ClusterJob.stage1_reduce_path.chmod", "template_path.read_text.format", "job.ClusterJob.stage2_reduce_path.write_text", "job.ClusterJob.stage2_reduce_path.chmod", "str", "str", "job.ClusterJob._prepare_resources", "str", "str", "job.ClusterJob._prepare_resources", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_resources", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._prepare_resources"], ["", "", "def", "_create_reduce_scripts", "(", "self", ",", "debug", ")", ":", "\n", "        ", "template_path", "=", "pathlib", ".", "Path", "(", "__file__", ")", ".", "parent", "/", "'resources'", "/", "self", ".", "scheduler", "/", "'reduce.sh'", "\n", "template", "=", "template_path", ".", "read_text", "(", ")", "\n", "debug", "=", "'-d'", "if", "debug", "else", "''", "\n", "code", "=", "self", ".", "cluster_config", ".", "code", "if", "self", ".", "cluster_config", ".", "code", "else", "''", "\n", "if", "self", ".", "stage1", ":", "\n", "            ", "content", "=", "template", ".", "format", "(", "\n", "base", "=", "str", "(", "self", ".", "base_dir", ")", ",", "\n", "code", "=", "code", ",", "\n", "config", "=", "str", "(", "self", ".", "config_path", ")", ",", "\n", "debug", "=", "debug", ",", "\n", "email", "=", "self", ".", "email", ",", "\n", "resources", "=", "self", ".", "_prepare_resources", "(", ")", ",", "\n", "stage", "=", "1", "\n", ")", "\n", "self", ".", "stage1_reduce_path", ".", "write_text", "(", "content", ")", "\n", "self", ".", "stage1_reduce_path", ".", "chmod", "(", "0o755", ")", "\n", "", "if", "self", ".", "stage2", ":", "\n", "            ", "content", "=", "template", ".", "format", "(", "\n", "base", "=", "str", "(", "self", ".", "base_dir", ")", ",", "\n", "code", "=", "code", ",", "\n", "config", "=", "str", "(", "self", ".", "config_path", ")", ",", "\n", "debug", "=", "debug", ",", "\n", "email", "=", "self", ".", "email", ",", "\n", "resources", "=", "self", ".", "_prepare_resources", "(", ")", ",", "\n", "stage", "=", "2", "\n", ")", "\n", "self", ".", "stage2_reduce_path", ".", "write_text", "(", "content", ")", "\n", "self", ".", "stage2_reduce_path", ".", "chmod", "(", "0o755", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._get_stage1_increment": [[474, 478], ["LOGGER.info", "len", "int", "math.ceil"], "methods", ["None"], ["", "", "def", "_get_stage1_increment", "(", "self", ",", "num_jobs", ")", ":", "\n", "        ", "LOGGER", ".", "info", "(", "\"Calculating job size...\"", ")", "\n", "num_items", "=", "len", "(", "self", ".", "stage1", ".", "iterator", ")", "\n", "return", "int", "(", "math", ".", "ceil", "(", "num_items", "/", "num_jobs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ClusterJob._get_stage2_increment": [[479, 482], ["len", "int", "math.ceil"], "methods", ["None"], ["", "def", "_get_stage2_increment", "(", "self", ",", "num_jobs", ")", ":", "\n", "        ", "num_items", "=", "len", "(", "self", ".", "stage2", ".", "iterator", ")", "\n", "return", "int", "(", "math", ".", "ceil", "(", "num_items", "/", "num_jobs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob.__init__": [[487, 492], ["job.Job.__init__", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ",", "debug", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "conf", ",", "record_conf", ",", "stage1", ",", "stage2", ")", "\n", "self", ".", "debug", "=", "debug", "\n", "self", ".", "scheduler", "=", "'qsub'", "if", "conf", ".", "run", ".", "parallel", ".", "name", "==", "'qsub'", "else", "'sbatch'", "\n", "self", ".", "job_dir", "=", "(", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "self", ".", "scheduler", ")", ".", "absolute", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._run": [[493, 519], ["job.Report", "LOGGER.info", "util.Timer", "LOGGER.info", "job.ReduceJob._collect_warnings", "job.ReduceJob._collect_memory_and_time", "LOGGER.info", "util.Timer", "LOGGER.info", "job.ReduceJob._collect_warnings", "job.ReduceJob._collect_memory_and_time", "job.ReduceJob.stage1.begin", "job.ReduceJob.stage1.reduce", "job.ReduceJob.stage1.end", "job.ReduceJob._del_reduce_directories", "job.ReduceJob.stage2.begin", "job.ReduceJob.stage2.reduce", "job.ReduceJob.stage2.end", "job.ReduceJob._del_reduce_directories"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_warnings", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_memory_and_time", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_warnings", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_memory_and_time", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._del_reduce_directories", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._del_reduce_directories"], ["", "def", "_run", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "stage1", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 1: Running reduce\"", ")", "\n", "timer1", "=", "Timer", "(", ")", "\n", "with", "timer1", ":", "\n", "                ", "self", ".", "stage1", ".", "begin", "(", ")", "\n", "self", ".", "stage1", ".", "reduce", "(", ")", "\n", "self", ".", "stage1", ".", "end", "(", ")", "\n", "self", ".", "_del_reduce_directories", "(", ")", "\n", "", "LOGGER", ".", "info", "(", "\"Stage 1 reduce took %.1f secs\"", ",", "timer1", ".", "time", ")", "\n", "self", ".", "_collect_warnings", "(", ")", "\n", "self", ".", "_collect_memory_and_time", "(", ")", "\n", "\n", "", "if", "self", ".", "stage2", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 2: Running reduce\"", ")", "\n", "timer2", "=", "Timer", "(", ")", "\n", "with", "timer2", ":", "\n", "                ", "self", ".", "stage2", ".", "begin", "(", ")", "\n", "self", ".", "stage2", ".", "reduce", "(", ")", "\n", "self", ".", "stage2", ".", "end", "(", ")", "\n", "self", ".", "_del_reduce_directories", "(", ")", "\n", "", "LOGGER", ".", "info", "(", "\"Stage 2 reduce took %.1f secs\"", ",", "timer2", ".", "time", ")", "\n", "self", ".", "_collect_warnings", "(", ")", "\n", "self", ".", "_collect_memory_and_time", "(", ")", "\n", "\n", "", "return", "Report", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._del_reduce_directories": [[520, 523], ["pathlib.Path", "util.file.delete_dir", "pathlib.Path.glob"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "_del_reduce_directories", "(", "self", ")", ":", "\n", "        ", "base_dir", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "\n", "[", "delete_dir", "(", "item", ")", "for", "item", "in", "base_dir", ".", "glob", "(", "'part*'", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_warnings": [[524, 533], ["pathlib.Path", "subprocess.run", "subprocess.run"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "_collect_warnings", "(", "self", ")", ":", "\n", "# only create the file if there are warnings or errors", "\n", "        ", "logs", "=", "self", ".", "job_dir", "/", "\"*\"", "\n", "output", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "\"warnings.txt\"", "\n", "try", ":", "\n", "            ", "subprocess", ".", "run", "(", "f\"grep -q -e WARNING -e ERROR {logs}\"", ",", "shell", "=", "True", ",", "check", "=", "True", ")", "\n", "subprocess", ".", "run", "(", "f\"grep -h -e WARNING -e ERROR {logs} > {output}\"", ",", "shell", "=", "True", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.ReduceJob._collect_memory_and_time": [[534, 542], ["pathlib.Path", "subprocess.run", "subprocess.run"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "", "def", "_collect_memory_and_time", "(", "self", ")", ":", "\n", "        ", "logs", "=", "self", ".", "job_dir", "/", "\"*\"", "\n", "output", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", ")", "/", "\"memory_and_time.log\"", "\n", "try", ":", "\n", "            ", "subprocess", ".", "run", "(", "f\"grep -h secs {logs} > {output}\"", ",", "shell", "=", "True", ")", "\n", "subprocess", ".", "run", "(", "f\"grep -h Memory {logs} >> {output}\"", ",", "shell", "=", "True", ")", "\n", "", "except", "subprocess", ".", "CalledProcessError", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.__init__": [[559, 575], ["conf.copy", "pathlib.Path", "helpers.ArtifactHelper", "job.JobBuilder._update_config_for_grid_jobs"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._update_config_for_grid_jobs"], ["def", "__init__", "(", "self", ",", "conf", ",", "job_type", "=", "JobType", ".", "NORMAL", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            conf (RunnerConfig): Configuration for the runner.\n            job_type (JobType): Normal, map, reduce\n        \"\"\"", "\n", "self", ".", "conf", "=", "conf", "\n", "self", ".", "record_conf", "=", "conf", ".", "copy", "(", "deep", "=", "True", ")", "\n", "self", ".", "parallel_args", "=", "kwargs", "\n", "self", ".", "run_path", "=", "pathlib", ".", "Path", "(", "conf", ".", "run", ".", "path", ")", "\n", "self", ".", "artifact_helper", "=", "ArtifactHelper", "(", ")", "\n", "self", ".", "doc_lang", "=", "None", "\n", "self", ".", "query_lang", "=", "None", "\n", "self", ".", "job_type", "=", "job_type", "\n", "if", "job_type", "==", "JobType", ".", "MAP", ":", "\n", "            ", "self", ".", "_update_config_for_grid_jobs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._update_config_for_grid_jobs": [[576, 611], ["util.file.path_append", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.ignore_exception", "util.file.path_append", "util.file.path_append", "util.file.path_append", "util.file.path_append", "util.file.path_append", "util.file.path_append", "util.file.path_append"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "", "def", "_update_config_for_grid_jobs", "(", "self", ")", ":", "\n", "        ", "\"\"\"Update config based on parallel args\"\"\"", "\n", "if", "self", ".", "parallel_args", "[", "'stage'", "]", "==", "1", ":", "\n", "            ", "self", ".", "conf", ".", "run", ".", "stage2", "=", "False", "\n", "self", ".", "conf", ".", "run", ".", "stage1", ".", "start", "=", "self", ".", "parallel_args", "[", "'increment'", "]", "*", "self", ".", "parallel_args", "[", "'job'", "]", "\n", "self", ".", "conf", ".", "run", ".", "stage1", ".", "stop", "=", "self", ".", "parallel_args", "[", "'increment'", "]", "*", "(", "self", ".", "parallel_args", "[", "'job'", "]", "+", "1", ")", "\n", "part", "=", "f\"part_{self.parallel_args['job']}\"", "\n", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "database", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "database", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "database", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "documents", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "documents", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "documents", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "index", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "index", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "index", ".", "output", ")", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "conf", ".", "run", ".", "stage1", "=", "False", "\n", "self", ".", "conf", ".", "run", ".", "stage2", ".", "start", "=", "self", ".", "parallel_args", "[", "'increment'", "]", "*", "self", ".", "parallel_args", "[", "'job'", "]", "\n", "self", ".", "conf", ".", "run", ".", "stage2", ".", "stop", "=", "self", ".", "parallel_args", "[", "'increment'", "]", "*", "(", "self", ".", "parallel_args", "[", "'job'", "]", "+", "1", ")", "\n", "part", "=", "f\"part_{self.parallel_args['job']}\"", "\n", "self", ".", "conf", ".", "run", ".", "results", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "run", ".", "results", ")", "\n", "# configs may not have all tasks so we ignore errors", "\n", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "topics", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "topics", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "topics", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "queries", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "queries", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "queries", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "retrieve", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "retrieve", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "retrieve", ".", "output", ")", "\n", "", "", "with", "ignore_exception", "(", "AttributeError", ")", ":", "\n", "                ", "if", "self", ".", "conf", ".", "rerank", ".", "output", ":", "\n", "                    ", "self", ".", "conf", ".", "rerank", ".", "output", "=", "path_append", "(", "part", ",", "self", ".", "conf", ".", "rerank", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.build": [[612, 671], ["util.file.is_complete", "error.ConfigError", "LOGGER.info", "job.JobBuilder._create_stage1_plan", "job.JobBuilder._create_stage2_plan", "error.ConfigError", "job.JobBuilder.check_sources_of_documents", "job.JobBuilder.check_text_processing", "job.SerialJob", "job.JobBuilder._get_stage1_iterator", "job.JobBuilder._get_stage1_tasks", "job.JobBuilder._build_stage1_pipeline", "job.JobBuilder._get_stage2_iterator", "job.JobBuilder._get_stage2_tasks", "job.JobBuilder._build_stage2_pipeline", "job.ReduceJob", "job.ReduceJob", "job.JobBuilder.conf.run.parallel.name.lower", "job.SerialJob", "job.MultiprocessingJob", "job.ClusterJob", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_text_processing", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._build_stage1_pipeline", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._build_stage2_pipeline"], ["", "", "", "", "def", "build", "(", "self", ",", "debug", ")", ":", "\n", "        ", "\"\"\"Build the job(s) for this run\n\n        Args:\n            debug (bool): Debug flag.\n        \"\"\"", "\n", "stage1", "=", "stage2", "=", "None", "\n", "stage1_plan", "=", "[", "]", "\n", "stage2_plan", "=", "[", "]", "\n", "\n", "if", "is_complete", "(", "self", ".", "conf", ".", "run", ".", "path", ")", ":", "\n", "            ", "raise", "ConfigError", "(", "'Run is already complete. Delete the output directory to rerun.'", ")", "\n", "\n", "", "if", "self", ".", "conf", ".", "run", ".", "parallel", ":", "\n", "            ", "LOGGER", ".", "info", "(", "f'Parallel job selected of type {self.conf.run.parallel.name}.'", ")", "\n", "\n", "", "if", "self", ".", "conf", ".", "run", ".", "stage1", ":", "\n", "            ", "stage1_plan", "=", "self", ".", "_create_stage1_plan", "(", ")", "\n", "if", "stage1_plan", ":", "\n", "                ", "stage1_iter", "=", "self", ".", "_get_stage1_iterator", "(", "stage1_plan", ")", "\n", "stage1_tasks", "=", "self", ".", "_get_stage1_tasks", "(", "stage1_plan", ")", "\n", "stage1", "=", "self", ".", "_build_stage1_pipeline", "(", "stage1_iter", ",", "stage1_tasks", ")", "\n", "\n", "", "", "if", "self", ".", "conf", ".", "run", ".", "stage2", ":", "\n", "            ", "stage2_plan", "=", "self", ".", "_create_stage2_plan", "(", ")", "\n", "if", "stage2_plan", ":", "\n", "                ", "stage2_iter", "=", "self", ".", "_get_stage2_iterator", "(", "stage2_plan", ")", "\n", "stage2_tasks", "=", "self", ".", "_get_stage2_tasks", "(", "stage2_plan", ")", "\n", "stage2", "=", "self", ".", "_build_stage2_pipeline", "(", "stage2_iter", ",", "stage2_tasks", ")", "\n", "\n", "", "", "if", "not", "stage1", "and", "not", "stage2", ":", "\n", "            ", "raise", "ConfigError", "(", "\"No tasks are configured to run\"", ")", "\n", "\n", "", "if", "not", "stage1", "and", "stage2", "and", "Tasks", ".", "RERANK", "in", "stage2_plan", ":", "\n", "            ", "self", ".", "check_sources_of_documents", "(", ")", "\n", "", "if", "stage2", "and", "Tasks", ".", "RETRIEVE", "in", "stage2_plan", "and", "self", ".", "record_conf", ".", "queries", ".", "process", ".", "strict_check", ":", "\n", "            ", "self", ".", "check_text_processing", "(", ")", "\n", "\n", "", "if", "self", ".", "job_type", "==", "JobType", ".", "MAP", ":", "\n", "# Map jobs are always plain serial jobs", "\n", "            ", "return", "SerialJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "stage1", ",", "stage2", ")", "\n", "", "elif", "self", ".", "job_type", "==", "JobType", ".", "REDUCE", ":", "\n", "# Reduce jobs have their own type", "\n", "            ", "if", "self", ".", "parallel_args", "[", "'stage'", "]", "==", "1", ":", "\n", "                ", "return", "ReduceJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "stage1", ",", "None", ",", "debug", ")", "\n", "", "else", ":", "\n", "                ", "return", "ReduceJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "None", ",", "stage2", ",", "debug", ")", "\n", "", "", "elif", "self", ".", "conf", ".", "run", ".", "parallel", ":", "\n", "# this is the parent job for multiprocessing, qsub, etc.", "\n", "            ", "parallel_type", "=", "self", ".", "conf", ".", "run", ".", "parallel", ".", "name", ".", "lower", "(", ")", "\n", "if", "parallel_type", "==", "\"mp\"", ":", "\n", "                ", "return", "MultiprocessingJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "stage1", ",", "stage2", ",", "debug", ")", "\n", "", "elif", "parallel_type", "==", "\"qsub\"", "or", "parallel_type", "==", "\"sbatch\"", ":", "\n", "                ", "return", "ClusterJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "stage1", ",", "stage2", ",", "debug", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ConfigError", "(", "f\"Unknown parallel job type: {self.conf.run.parallel.name}\"", ")", "\n", "", "", "else", ":", "\n", "# plain old single threaded job", "\n", "            ", "return", "SerialJob", "(", "self", ".", "conf", ",", "self", ".", "record_conf", ",", "stage1", ",", "stage2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage1_plan": [[672, 686], ["job.JobBuilder.is_task_complete", "stage1.append", "stage1.append", "job.JobBuilder.is_task_complete", "stage1.append", "job.JobBuilder.is_task_complete"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete"], ["", "", "def", "_create_stage1_plan", "(", "self", ")", ":", "\n", "# Analyze the config and check there are any artifacts from a previous run.", "\n", "# A plan consists of a list of Tasks to be constructed into a pipeline.", "\n", "        ", "stage1", "=", "[", "]", "\n", "index_complete", "=", "self", ".", "conf", ".", "index", "and", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "index", ")", "\n", "if", "self", ".", "conf", ".", "documents", ":", "\n", "            ", "if", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "documents", ")", "and", "not", "index_complete", ":", "\n", "                ", "stage1", ".", "append", "(", "Tasks", ".", "DOCUMENTS", ")", "\n", "", "", "if", "self", ".", "conf", ".", "database", "and", "self", ".", "conf", ".", "database", ".", "output", "and", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "database", ")", ":", "\n", "            ", "stage1", ".", "append", "(", "Tasks", ".", "DATABASE", ")", "\n", "", "if", "self", ".", "conf", ".", "index", ":", "\n", "            ", "if", "not", "index_complete", ":", "\n", "                ", "stage1", ".", "append", "(", "Tasks", ".", "INDEX", ")", "\n", "", "", "return", "stage1", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_iterator": [[687, 697], ["util.SlicedIterator", "docs.DocumentReaderFactory.create", "job.JobBuilder._setup_input"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._setup_input"], ["", "def", "_get_stage1_iterator", "(", "self", ",", "plan", ")", ":", "\n", "# Get the iterator for pipeline based on plan and configuration", "\n", "        ", "if", "Tasks", ".", "DOCUMENTS", "in", "plan", ":", "\n", "            ", "iterator", "=", "DocumentReaderFactory", ".", "create", "(", "self", ".", "conf", ".", "documents", ".", "input", ")", "\n", "", "else", ":", "\n", "# documents already processed so locate them to create the iterator and update config", "\n", "            ", "iterator", "=", "self", ".", "_setup_input", "(", "DocReader", ",", "'index.input.documents.path'", ",", "\n", "'documents.output'", ",", "'index not configured with documents'", ")", "\n", "", "stage_conf", "=", "self", ".", "conf", ".", "run", ".", "stage1", "\n", "return", "SlicedIterator", "(", "iterator", ",", "stage_conf", ".", "start", ",", "stage_conf", ".", "stop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage1_tasks": [[698, 729], ["util.LangStandardizer.iso_639_3", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "tasks.append", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "tasks.append", "tasks.append", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "tasks.append", "docs.DocumentProcessor", "database.DatabaseWriter", "docs.DocWriter", "index.IndexerFactory.create"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create"], ["", "def", "_get_stage1_tasks", "(", "self", ",", "plan", ")", ":", "\n", "# Stage 1 is generally: read docs, process them, build index.", "\n", "# For each task, we clear previous data from a failed run if it exists.", "\n", "# Then we build the tasks from the plan and configuration.", "\n", "        ", "run_path", "=", "self", ".", "conf", ".", "run", ".", "path", "\n", "tasks", "=", "[", "]", "\n", "\n", "if", "Tasks", ".", "DOCUMENTS", "in", "plan", ":", "\n", "# doc reader -> doc processor", "\n", "            ", "self", ".", "docs_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "self", ".", "conf", ".", "documents", ".", "input", ".", "lang", ")", "\n", "self", ".", "conf", ".", "documents", ".", "input", ".", "lang", "=", "self", ".", "docs_lang", "\n", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "documents", ")", "\n", "doc_artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "DOCUMENTS", ")", "\n", "tasks", ".", "append", "(", "DocumentProcessor", "(", "run_path", ",", "self", ".", "conf", ".", "documents", ",", "self", ".", "docs_lang", ")", ")", "\n", "\n", "", "if", "Tasks", ".", "DATABASE", "in", "plan", ":", "\n", "            ", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "database", ")", "\n", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "DATABASE", ")", "\n", "tasks", ".", "append", "(", "DatabaseWriter", "(", "run_path", ",", "self", ".", "conf", ".", "database", ",", "artifact_conf", ")", ")", "\n", "\n", "", "if", "Tasks", ".", "DOCUMENTS", "in", "plan", "and", "self", ".", "conf", ".", "documents", ".", "output", ":", "\n", "# add doc writer if user requesting that we save processed docs", "\n", "            ", "tasks", ".", "append", "(", "DocWriter", "(", "run_path", ",", "self", ".", "conf", ".", "documents", ",", "doc_artifact_conf", ")", ")", "\n", "\n", "", "if", "Tasks", ".", "INDEX", "in", "plan", ":", "\n", "# indexer or processed doc reader -> indexer", "\n", "            ", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "index", ")", "\n", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "INDEX", ")", "\n", "tasks", ".", "append", "(", "IndexerFactory", ".", "create", "(", "run_path", ",", "self", ".", "conf", ".", "index", ",", "artifact_conf", ")", ")", "\n", "\n", "", "return", "tasks", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._build_stage1_pipeline": [[730, 747], ["functools.partial.", "LOGGER.info", "LOGGER.info", "LOGGER.info", "LOGGER.info", "functools.partial", "error.ConfigError", "str"], "methods", ["None"], ["", "def", "_build_stage1_pipeline", "(", "self", ",", "iterator", ",", "tasks", ")", ":", "\n", "# select pipeline based on stage configuration", "\n", "        ", "stage_conf", "=", "self", ".", "conf", ".", "run", ".", "stage1", "\n", "if", "self", ".", "conf", ".", "run", ".", "parallel", ":", "\n", "            ", "LOGGER", ".", "info", "(", "f'Stage 1 has {stage_conf.num_jobs} parallel jobs.'", ")", "\n", "", "if", "stage_conf", ".", "mode", "==", "PipelineMode", ".", "STREAMING", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 1 is a streaming pipeline.\"", ")", "\n", "pipeline_class", "=", "StreamingPipeline", "\n", "", "elif", "stage_conf", ".", "mode", "==", "PipelineMode", ".", "BATCH", ":", "\n", "            ", "batch_size_char", "=", "str", "(", "stage_conf", ".", "batch_size", ")", "if", "stage_conf", ".", "batch_size", "else", "'\u221e'", "\n", "LOGGER", ".", "info", "(", "\"Stage 1 is a batch pipeline selected with batch size of %s.\"", ",", "batch_size_char", ")", "\n", "pipeline_class", "=", "functools", ".", "partial", "(", "BatchPipeline", ",", "n", "=", "stage_conf", ".", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unrecognized pipeline mode: {stage_conf.mode}\"", ")", "\n", "", "pipeline", "=", "pipeline_class", "(", "iterator", ",", "tasks", ",", "progress_interval", "=", "stage_conf", ".", "progress_interval", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 1 pipeline: %s\"", ",", "pipeline", ")", "\n", "return", "pipeline", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._create_stage2_plan": [[748, 775], ["job.JobBuilder.is_task_complete", "error.ConfigError", "error.ConfigError", "stage2.append", "stage2.append", "job.JobBuilder.is_task_complete", "stage2.append", "job.JobBuilder.is_task_complete", "stage2.append", "job.JobBuilder.is_task_complete", "job.JobBuilder.is_task_complete", "job.JobBuilder.is_task_complete"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete"], ["", "def", "_create_stage2_plan", "(", "self", ")", ":", "\n", "# Analyze the config and check there are any artifacts from a previous run.", "\n", "# A plan consists of a list of Tasks to be constructed into a pipeline.", "\n", "        ", "stage2", "=", "[", "]", "\n", "retrieve_complete", "=", "self", ".", "conf", ".", "retrieve", "and", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "retrieve", ")", "\n", "if", "self", ".", "conf", ".", "topics", ":", "\n", "# add topics task if it is not complete, the queries are not available and the retrieve task is not complete", "\n", "            ", "if", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "topics", ")", "and", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "queries", ")", "and", "not", "retrieve_complete", ":", "\n", "                ", "stage2", ".", "append", "(", "Tasks", ".", "TOPICS", ")", "\n", "", "", "if", "self", ".", "conf", ".", "queries", ":", "\n", "            ", "if", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "queries", ")", "and", "not", "retrieve_complete", ":", "\n", "                ", "stage2", ".", "append", "(", "Tasks", ".", "QUERIES", ")", "\n", "", "", "if", "self", ".", "conf", ".", "retrieve", ":", "\n", "            ", "if", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "retrieve", ")", ":", "\n", "                ", "stage2", ".", "append", "(", "Tasks", ".", "RETRIEVE", ")", "\n", "", "", "if", "self", ".", "conf", ".", "rerank", ":", "\n", "            ", "if", "not", "self", ".", "is_task_complete", "(", "self", ".", "conf", ".", "rerank", ")", ":", "\n", "                ", "stage2", ".", "append", "(", "Tasks", ".", "RERANK", ")", "\n", "\n", "# confirm that we're not missing tasks", "\n", "", "", "if", "Tasks", ".", "TOPICS", "in", "stage2", "and", "Tasks", ".", "RETRIEVE", "in", "stage2", "and", "Tasks", ".", "QUERIES", "not", "in", "stage2", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Missing configuration for queries\"", ")", "\n", "", "if", "Tasks", ".", "QUERIES", "in", "stage2", "and", "Tasks", ".", "RERANK", "in", "stage2", "and", "Tasks", ".", "RETRIEVE", "not", "in", "stage2", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Missing configuration for retrieve\"", ")", "\n", "\n", "", "return", "stage2", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_iterator": [[776, 798], ["util.SlicedIterator", "topics.TopicReaderFactory.create", "job.JobBuilder._setup_input", "job.JobBuilder.peek", "util.LangStandardizer.iso_639_3", "job.JobBuilder._setup_input", "job.JobBuilder.peek", "util.LangStandardizer.iso_639_3", "job.JobBuilder._setup_input"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._setup_input", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.peek", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._setup_input", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.peek", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._setup_input"], ["", "def", "_get_stage2_iterator", "(", "self", ",", "plan", ")", ":", "\n", "# Get the iterator for pipeline based on plan and configuration", "\n", "        ", "if", "not", "plan", ":", "\n", "            ", "return", "None", "\n", "", "if", "Tasks", ".", "TOPICS", "in", "plan", ":", "\n", "            ", "iterator", "=", "TopicReaderFactory", ".", "create", "(", "self", ".", "conf", ".", "topics", ".", "input", ")", "\n", "", "elif", "Tasks", ".", "QUERIES", "in", "plan", ":", "\n", "            ", "iterator", "=", "self", ".", "_setup_input", "(", "QueryReader", ",", "'queries.input.path'", ",", "'topics.output'", ",", "\n", "'query processor not configured with input'", ",", "\n", "False", ")", "\n", "query", "=", "iterator", ".", "peek", "(", ")", "\n", "self", ".", "query_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "query", ".", "lang", ")", "\n", "", "elif", "Tasks", ".", "RETRIEVE", "in", "plan", ":", "\n", "            ", "iterator", "=", "self", ".", "_setup_input", "(", "QueryReader", ",", "'retrieve.input.queries.path'", ",", "'queries.output'", ",", "\n", "'retrieve not configured with queries'", ")", "\n", "query", "=", "iterator", ".", "peek", "(", ")", "\n", "self", ".", "query_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "query", ".", "lang", ")", "\n", "", "else", ":", "\n", "            ", "iterator", "=", "self", ".", "_setup_input", "(", "JsonResultsReader", ",", "'rerank.input.results.path'", ",", "'retrieve.output'", ",", "\n", "'rerank not configured with retrieve results'", ")", "\n", "", "stage_conf", "=", "self", ".", "conf", ".", "run", ".", "stage2", "\n", "return", "SlicedIterator", "(", "iterator", ",", "stage_conf", ".", "start", ",", "stage_conf", ".", "stop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._get_stage2_tasks": [[799, 849], ["util.LangStandardizer.iso_639_3", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "tasks.append", "job.JobBuilder.clear_output", "tasks.append", "job.JobBuilder.artifact_helper.get_config", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "tasks.append", "job.JobBuilder.clear_output", "job.JobBuilder.artifact_helper.get_config", "database.DocumentDatabaseFactory.create", "tasks.append", "tasks.append", "topics.TopicProcessor", "tasks.append", "topics.QueryProcessor", "tasks.append", "job.JobBuilder.artifact_helper.combine", "retrieve.RetrieverFactory.create", "tasks.append", "job.JobBuilder.artifact_helper.combine", "rerank.RerankFactory.create", "tasks.append", "results.TrecResultsWriter", "topics.QueryWriter", "topics.QueryWriter", "results.JsonResultsWriter", "results.JsonResultsWriter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.combine", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.combine", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create"], ["", "def", "_get_stage2_tasks", "(", "self", ",", "plan", ")", ":", "\n", "# Stage 2 is generally: read topics, extract query, process them, retrieve results, rerank them.", "\n", "# For each task, we clear previous data from a failed run if it exists.", "\n", "# Then we build the tasks from the plan and configuration.", "\n", "        ", "run_path", "=", "self", ".", "conf", ".", "run", ".", "path", "\n", "tasks", "=", "[", "]", "\n", "\n", "if", "Tasks", ".", "TOPICS", "in", "plan", ":", "\n", "# topic reader -> topic processor -> optional query writer", "\n", "            ", "self", ".", "query_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "self", ".", "conf", ".", "topics", ".", "input", ".", "lang", ")", "\n", "self", ".", "conf", ".", "topics", ".", "input", ".", "lang", "=", "self", ".", "query_lang", "\n", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "topics", ")", "\n", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "TOPICS", ")", "\n", "tasks", ".", "append", "(", "TopicProcessor", "(", "run_path", ",", "self", ".", "conf", ".", "topics", ")", ")", "\n", "if", "self", ".", "conf", ".", "topics", ".", "output", ":", "\n", "                ", "tasks", ".", "append", "(", "QueryWriter", "(", "run_path", ",", "self", ".", "conf", ".", "topics", ",", "artifact_conf", ")", ")", "\n", "\n", "", "", "if", "Tasks", ".", "QUERIES", "in", "plan", ":", "\n", "# optional query reader -> query processor -> optional query writer", "\n", "            ", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "queries", ")", "\n", "tasks", ".", "append", "(", "QueryProcessor", "(", "run_path", ",", "self", ".", "conf", ".", "queries", ",", "self", ".", "query_lang", ")", ")", "\n", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "QUERIES", ")", "\n", "if", "self", ".", "conf", ".", "queries", ".", "output", ":", "\n", "                ", "tasks", ".", "append", "(", "QueryWriter", "(", "run_path", ",", "self", ".", "conf", ".", "queries", ",", "artifact_conf", ")", ")", "\n", "\n", "", "", "if", "Tasks", ".", "RETRIEVE", "in", "plan", ":", "\n", "            ", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "retrieve", ")", "\n", "if", "not", "self", ".", "conf", ".", "index", ":", "\n", "# copy in the configuration that created the index (this path is always set in the ConfigPreprocessor)", "\n", "                ", "self", ".", "artifact_helper", ".", "combine", "(", "self", ".", "record_conf", ",", "self", ".", "conf", ".", "retrieve", ".", "input", ".", "index", ".", "path", ")", "\n", "", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "RETRIEVE", ")", "\n", "tasks", ".", "append", "(", "RetrieverFactory", ".", "create", "(", "run_path", ",", "self", ".", "conf", ".", "retrieve", ")", ")", "\n", "if", "self", ".", "conf", ".", "retrieve", ".", "output", ":", "\n", "                ", "tasks", ".", "append", "(", "JsonResultsWriter", "(", "run_path", ",", "self", ".", "conf", ".", "retrieve", ",", "artifact_conf", ")", ")", "\n", "\n", "", "", "if", "Tasks", ".", "RERANK", "in", "plan", ":", "\n", "            ", "self", ".", "clear_output", "(", "self", ".", "conf", ".", "rerank", ")", "\n", "if", "not", "self", ".", "conf", ".", "database", ":", "\n", "# copy in the configuration that created the db", "\n", "                ", "self", ".", "artifact_helper", ".", "combine", "(", "self", ".", "record_conf", ",", "self", ".", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", ")", "\n", "", "artifact_conf", "=", "self", ".", "artifact_helper", ".", "get_config", "(", "self", ".", "conf", ",", "Tasks", ".", "RERANK", ")", "\n", "db", "=", "DocumentDatabaseFactory", ".", "create", "(", "run_path", ",", "self", ".", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", ",", "readonly", "=", "True", ")", "\n", "tasks", ".", "append", "(", "RerankFactory", ".", "create", "(", "run_path", ",", "self", ".", "conf", ".", "rerank", ",", "db", ")", ")", "\n", "if", "self", ".", "conf", ".", "rerank", ".", "output", ":", "\n", "                ", "tasks", ".", "append", "(", "JsonResultsWriter", "(", "run_path", ",", "self", ".", "conf", ".", "rerank", ",", "artifact_conf", ")", ")", "\n", "\n", "", "", "if", "Tasks", ".", "RETRIEVE", "in", "plan", "or", "Tasks", ".", "RERANK", "in", "plan", ":", "\n", "            ", "tasks", ".", "append", "(", "TrecResultsWriter", "(", "self", ".", "conf", ")", ")", "\n", "\n", "", "return", "tasks", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._build_stage2_pipeline": [[850, 868], ["functools.partial.", "LOGGER.info", "LOGGER.info", "LOGGER.info", "LOGGER.info", "functools.partial", "error.ConfigError", "str"], "methods", ["None"], ["", "def", "_build_stage2_pipeline", "(", "self", ",", "iterator", ",", "tasks", ")", ":", "\n", "# select pipeline based on stage configuration", "\n", "        ", "stage_conf", "=", "self", ".", "conf", ".", "run", ".", "stage2", "\n", "if", "self", ".", "conf", ".", "run", ".", "parallel", ":", "\n", "            ", "LOGGER", ".", "info", "(", "f'Stage 2 has {stage_conf.num_jobs} parallel jobs.'", ")", "\n", "\n", "", "if", "stage_conf", ".", "mode", "==", "PipelineMode", ".", "STREAMING", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Stage 2 is a streaming pipeline.\"", ")", "\n", "pipeline_class", "=", "StreamingPipeline", "\n", "", "elif", "stage_conf", ".", "mode", "==", "PipelineMode", ".", "BATCH", ":", "\n", "            ", "batch_size_char", "=", "str", "(", "stage_conf", ".", "batch_size", ")", "if", "stage_conf", ".", "batch_size", "else", "'\u221e'", "\n", "LOGGER", ".", "info", "(", "\"Stage 2 is a batch pipeline selected with batch size of %s.\"", ",", "batch_size_char", ")", "\n", "pipeline_class", "=", "functools", ".", "partial", "(", "BatchPipeline", ",", "n", "=", "stage_conf", ".", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unrecognized pipeline mode: {stage_conf.mode}\"", ")", "\n", "", "pipeline", "=", "pipeline_class", "(", "iterator", ",", "tasks", ",", "progress_interval", "=", "stage_conf", ".", "progress_interval", ")", "\n", "LOGGER", ".", "info", "(", "\"Stage 2 pipeline: %s\"", ",", "pipeline", ")", "\n", "return", "pipeline", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder._setup_input": [[869, 902], ["input_path.split", "pathlib.Path", "job.JobBuilder.artifact_helper.combine", "cls", "output_path.split.pop", "getattr", "output_path.split", "pathlib.Path", "job.JobBuilder.artifact_helper.combine", "cls", "output_path.split.pop", "getattr", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.combine", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.combine"], ["", "def", "_setup_input", "(", "self", ",", "cls", ",", "input_path", ",", "output_path", ",", "error_msg", ",", "required", "=", "True", ")", ":", "\n", "        ", "\"\"\"Try two possible places for input path\n\n        The input for this task could come from:\n          1. the configured input of this task\n          2. the configured output of the previous task\n\n        This also loads the configuration from the input directory and puts it into the main config.\n\n        Raises:\n            ConfigError if neither path is configured\n        \"\"\"", "\n", "obj", "=", "self", ".", "conf", "\n", "fields", "=", "input_path", ".", "split", "(", "'.'", ")", "\n", "try", ":", "\n", "            ", "while", "fields", ":", "\n", "                ", "field", "=", "fields", ".", "pop", "(", "0", ")", "\n", "obj", "=", "getattr", "(", "obj", ",", "field", ")", "\n", "", "path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", "/", "obj", ")", "\n", "self", ".", "artifact_helper", ".", "combine", "(", "self", ".", "record_conf", ",", "path", ",", "required", ")", "\n", "return", "cls", "(", "path", ")", "\n", "", "except", "AttributeError", ":", "\n", "            ", "obj", "=", "self", ".", "conf", "\n", "fields", "=", "output_path", ".", "split", "(", "'.'", ")", "\n", "try", ":", "\n", "                ", "while", "fields", ":", "\n", "                    ", "field", "=", "fields", ".", "pop", "(", "0", ")", "\n", "obj", "=", "getattr", "(", "obj", ",", "field", ")", "\n", "", "path", "=", "pathlib", ".", "Path", "(", "self", ".", "run_path", "/", "obj", ")", "\n", "self", ".", "artifact_helper", ".", "combine", "(", "self", ".", "record_conf", ",", "path", ")", "\n", "return", "cls", "(", "path", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "raise", "ConfigError", "(", "error_msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.is_task_complete": [[903, 909], ["util.file.is_complete"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_complete"], ["", "", "", "def", "is_task_complete", "(", "self", ",", "task_conf", ")", ":", "\n", "        ", "\"\"\"Checks whether the task is already complete\"\"\"", "\n", "if", "task_conf", "is", "None", "or", "not", "task_conf", ".", "output", ":", "\n", "            ", "return", "False", "\n", "", "path", "=", "self", ".", "run_path", "/", "task_conf", ".", "output", "\n", "return", "is_complete", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.clear_output": [[910, 928], ["path.exists", "path.is_symlink", "util.file.is_dir_empty", "path.glob", "util.file.delete_dir", "util.file.delete_dir", "f.unlink"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_dir_empty", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir"], ["", "def", "clear_output", "(", "self", ",", "task_conf", ")", ":", "\n", "        ", "\"\"\"Delete the output directory if previous run did not complete\n\n        Args:\n            task_conf (BaseConfig): Configuration for a task.\n        \"\"\"", "\n", "if", "task_conf", ".", "output", ":", "\n", "            ", "path", "=", "self", ".", "run_path", "/", "task_conf", ".", "output", "\n", "if", "path", ".", "exists", "(", ")", "and", "not", "is_dir_empty", "(", "path", ")", ":", "\n", "                ", "if", "path", ".", "is_symlink", "(", ")", ":", "\n", "# we don't want to unlink symbolic link directory so delete contents", "\n", "                    ", "for", "f", "in", "path", ".", "glob", "(", "\"*\"", ")", ":", "\n", "                        ", "try", ":", "\n", "                            ", "delete_dir", "(", "f", ")", "\n", "", "except", "OSError", ":", "\n", "                            ", "f", ".", "unlink", "(", ")", "\n", "", "", "", "else", ":", "\n", "                    ", "delete_dir", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_sources_of_documents": [[929, 951], ["schema.RunnerConfig", "isinstance", "config.ConfigService().read_config_file", "isinstance", "error.ConfigError", "isinstance", "pathlib.Path", "LOGGER.warning", "type", "pathlib.Path", "pathlib.Path", "error.ConfigError", "zip", "config.ConfigService", "pathlib.Path", "pathlib.Path", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file"], ["", "", "", "", "def", "check_sources_of_documents", "(", "self", ")", ":", "\n", "        ", "\"\"\"The docs in the index and database must come from the same source\"\"\"", "\n", "config_path", "=", "pathlib", ".", "Path", "(", "self", ".", "conf", ".", "run", ".", "path", ")", "/", "self", ".", "conf", ".", "rerank", ".", "input", ".", "database", ".", "path", "/", "'config.yml'", "\n", "try", ":", "\n", "            ", "artifact_config_dict", "=", "ConfigService", "(", ")", ".", "read_config_file", "(", "config_path", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "\"Unable to load config for the document database\"", ")", "\n", "return", "\n", "", "artifact_config", "=", "RunnerConfig", "(", "**", "artifact_config_dict", ")", "\n", "if", "not", "isinstance", "(", "self", ".", "record_conf", ".", "documents", ".", "input", ".", "path", ",", "type", "(", "artifact_config", ".", "documents", ".", "input", ".", "path", ")", ")", ":", "\n", "            ", "raise", "ConfigError", "(", "\"documents in index do not match documents in database\"", ")", "\n", "", "if", "isinstance", "(", "self", ".", "record_conf", ".", "documents", ".", "input", ".", "path", ",", "str", ")", ":", "\n", "            ", "name1", "=", "pathlib", ".", "Path", "(", "self", ".", "record_conf", ".", "documents", ".", "input", ".", "path", ")", ".", "name", "\n", "name2", "=", "pathlib", ".", "Path", "(", "artifact_config", ".", "documents", ".", "input", ".", "path", ")", ".", "name", "\n", "if", "name1", "!=", "name2", ":", "\n", "                ", "raise", "ConfigError", "(", "\"documents in index do not match documents in database\"", ")", "\n", "", "", "elif", "isinstance", "(", "self", ".", "record_conf", ".", "documents", ".", "input", ".", "path", ",", "list", ")", ":", "\n", "            ", "for", "p1", ",", "p2", "in", "zip", "(", "self", ".", "record_conf", ".", "documents", ".", "input", ".", "path", ",", "artifact_config", ".", "documents", ".", "input", ".", "path", ")", ":", "\n", "                ", "name1", "=", "pathlib", ".", "Path", "(", "p1", ")", ".", "name", "\n", "name2", "=", "pathlib", ".", "Path", "(", "p2", ")", ".", "name", "\n", "if", "name1", "!=", "name2", ":", "\n", "                    ", "raise", "ConfigError", "(", "\"documents in index do not match documents in database\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.check_text_processing": [[952, 963], ["error.ConfigError"], "methods", ["None"], ["", "", "", "", "def", "check_text_processing", "(", "self", ")", ":", "\n", "        ", "\"\"\"The docs and queries must have the same text processing\"\"\"", "\n", "doc", "=", "self", ".", "record_conf", ".", "documents", ".", "process", "\n", "query", "=", "self", ".", "record_conf", ".", "queries", ".", "process", "\n", "try", ":", "\n", "            ", "assert", "doc", ".", "normalize", ".", "lowercase", "==", "query", ".", "normalize", ".", "lowercase", "\n", "assert", "doc", ".", "tokenize", "==", "query", ".", "tokenize", "\n", "assert", "doc", ".", "stopwords", "==", "query", ".", "stopwords", "\n", "assert", "doc", ".", "stem", "==", "query", ".", "stem", "\n", "", "except", "AssertionError", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Text processing for documents and queries does not match\"", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.__init__": [[20, 34], ["pathlib.Path", "base.mkdir"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "run_path", "=", "None", ",", "artifact_config", "=", "None", ",", "base", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            artifact_config (BaseConfig): Config for all tasks up to this task.\n            base (Path): Relative path to directory of task from run root.\n        \"\"\"", "\n", "self", ".", "artifact_config", "=", "artifact_config", "\n", "self", ".", "run_path", "=", "pathlib", ".", "Path", "(", "run_path", ")", "if", "run_path", "else", "None", "\n", "self", ".", "relative_path", "=", "base", "\n", "if", "base", "is", "not", "None", ":", "\n", "            ", "base", "=", "self", ".", "run_path", "/", "base", "\n", "base", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "", "self", ".", "base", "=", "base", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.process": [[35, 44], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "\"\"\"Process an item\n\n        A task must implement this method.\n        It must return a new item that resulted from processing or the original item.\n        Otherwise, return None to indicate a failure occurred.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.batch_process": [[45, 55], ["pipeline.Task.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "batch_process", "(", "self", ",", "items", ")", ":", "\n", "        ", "\"\"\"Process a batch of items\n\n        Args:\n            items (list): A list of items\n\n        Returns:\n            list of items\n        \"\"\"", "\n", "return", "[", "self", ".", "process", "(", "item", ")", "for", "item", "in", "items", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.begin": [[56, 59], ["None"], "methods", ["None"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "\"\"\"Optional begin method for initialization\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.end": [[60, 65], ["config.ConfigService.write_config_file", "util.file.touch_complete"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.write_config_file", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.touch_complete"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "\"\"\"End method for cleaning up and marking as complete\"\"\"", "\n", "if", "self", ".", "base", ":", "\n", "            ", "ConfigService", ".", "write_config_file", "(", "self", ".", "base", "/", "'config.yml'", ",", "self", ".", "artifact_config", ")", "\n", "touch_complete", "(", "self", ".", "base", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.reduce": [[66, 73], ["None"], "methods", ["None"], ["", "", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "\"\"\"Reduce output across parallel jobs\n\n        Args:\n            dirs (list): List of directories with partial output\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.run_reduce": [[74, 80], ["sorted", "pipeline.Task.reduce", "list", "pipeline.Task.run_path.glob"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce"], ["", "def", "run_reduce", "(", "self", ")", ":", "\n", "        ", "\"\"\"Method for pipeline to call to run reduce() for each task\"\"\"", "\n", "if", "self", ".", "run_path", "and", "self", ".", "relative_path", "is", "not", "None", ":", "\n", "            ", "dirs", "=", "sorted", "(", "list", "(", "self", ".", "run_path", ".", "glob", "(", "'part*'", ")", ")", ")", "\n", "dirs", "=", "[", "d", "/", "self", ".", "relative_path", "for", "d", "in", "dirs", "]", "\n", "self", ".", "reduce", "(", "dirs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Task.__str__": [[81, 83], ["None"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.__init__": [[87, 91], ["pipeline.Task.__init__", "util.Timer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "task", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "task", "=", "task", "\n", "self", ".", "timer", "=", "Timer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.process": [[92, 95], ["pipeline.TimedTask.task.process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["", "def", "process", "(", "self", ",", "item", ")", ":", "\n", "        ", "with", "self", ".", "timer", ":", "\n", "            ", "return", "self", ".", "task", ".", "process", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process": [[96, 98], ["pipeline.TimedTask.task.batch_process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "", "def", "batch_process", "(", "self", ",", "items", ")", ":", "\n", "        ", "return", "self", ".", "task", ".", "batch_process", "(", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.begin": [[99, 101], ["pipeline.TimedTask.task.begin"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "self", ".", "task", ".", "begin", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.end": [[102, 104], ["pipeline.TimedTask.task.end"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "self", ".", "task", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.reduce": [[105, 107], ["pipeline.TimedTask.task.reduce"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "self", ".", "task", ".", "reduce", "(", "dirs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.run_reduce": [[108, 110], ["pipeline.TimedTask.task.run_reduce"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.run_reduce"], ["", "def", "run_reduce", "(", "self", ")", ":", "\n", "        ", "self", ".", "task", ".", "run_reduce", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.time": [[111, 114], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "timer", ".", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.__str__": [[115, 117], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "task", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.__init__": [[122, 132], ["util.TimedIterator", "pipeline.TimedTask"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "iterator", ",", "tasks", ",", "progress_interval", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            iterator (iterator): Iterator over input for pipeline.\n            tasks (list): List of tasks run in sequence.\n        \"\"\"", "\n", "self", ".", "iterator", "=", "TimedIterator", "(", "iterator", ")", "\n", "self", ".", "tasks", "=", "[", "TimedTask", "(", "task", ")", "for", "task", "in", "tasks", "]", "\n", "self", ".", "progress_interval", "=", "progress_interval", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.run": [[133, 136], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "run", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.begin": [[137, 141], ["task.begin"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "self", ".", "count", "=", "0", "\n", "for", "task", "in", "self", ".", "tasks", ":", "\n", "            ", "task", ".", "begin", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.end": [[142, 145], ["task.end"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "", "def", "end", "(", "self", ")", ":", "\n", "        ", "for", "task", "in", "self", ".", "tasks", ":", "\n", "            ", "task", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.reduce": [[146, 149], ["task.run_reduce"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.run_reduce"], ["", "", "def", "reduce", "(", "self", ")", ":", "\n", "        ", "for", "task", "in", "self", ".", "tasks", ":", "\n", "            ", "task", ".", "run_reduce", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.report": [[150, 155], ["report.extend", "str", "str"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "report", "(", "self", ")", ":", "\n", "        ", "report", "=", "[", "(", "str", "(", "self", ".", "iterator", ")", ",", "self", ".", "iterator", ".", "time", ")", "]", "\n", "report", ".", "extend", "(", "(", "str", "(", "task", ")", ",", "task", ".", "time", ")", "for", "task", "in", "self", ".", "tasks", ")", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.Pipeline.__str__": [[156, 160], ["task_names.extend", "str", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "task_names", "=", "[", "str", "(", "self", ".", "iterator", ")", "]", "\n", "task_names", ".", "extend", "(", "str", "(", "task", ")", "for", "task", "in", "self", ".", "tasks", ")", "\n", "return", "' | '", ".", "join", "(", "task_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.StreamingPipeline.run": [[165, 178], ["pipeline.StreamingPipeline.begin", "pipeline.StreamingPipeline.end", "task.process", "LOGGER.info"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "begin", "(", ")", "\n", "for", "item", "in", "self", ".", "iterator", ":", "\n", "            ", "for", "task", "in", "self", ".", "tasks", ":", "\n", "                ", "item", "=", "task", ".", "process", "(", "item", ")", "\n", "# tasks can reject an item by returning None (they should log a warning/error)", "\n", "if", "not", "item", ":", "\n", "                    ", "break", "\n", "", "", "if", "item", ":", "\n", "                ", "self", ".", "count", "+=", "1", "\n", "if", "self", ".", "progress_interval", "and", "self", ".", "count", "%", "self", ".", "progress_interval", "==", "0", ":", "\n", "                    ", "LOGGER", ".", "info", "(", "f\"{self.count} iterations completed...\"", ")", "\n", "", "", "", "self", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.BatchPipeline.__init__": [[183, 192], ["pipeline.Pipeline.__init__", "util.ChunkedIterator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "iterator", ",", "tasks", ",", "n", ",", "progress_interval", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            iterator (iterator): Iterator that produces input for the pipeline.\n            tasks (list): List of tasks.\n            n (int): Batch size or None to process all.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "ChunkedIterator", "(", "iterator", ",", "n", ")", ",", "tasks", ",", "progress_interval", ")", "\n", "self", ".", "current_progress", "=", "self", ".", "progress_interval", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.BatchPipeline.run": [[193, 203], ["pipeline.BatchPipeline.begin", "pipeline.BatchPipeline.end", "len", "pipeline.BatchPipeline._update_progress", "task.batch_process"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.BatchPipeline._update_progress", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.TimedTask.batch_process"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "begin", "(", ")", "\n", "for", "chunk", "in", "self", ".", "iterator", ":", "\n", "            ", "for", "task", "in", "self", ".", "tasks", ":", "\n", "                ", "chunk", "=", "task", ".", "batch_process", "(", "chunk", ")", "\n", "# a task can reject an item by returning None", "\n", "chunk", "=", "[", "item", "for", "item", "in", "chunk", "if", "item", "is", "not", "None", "]", "\n", "", "self", ".", "count", "+=", "len", "(", "chunk", ")", "\n", "self", ".", "_update_progress", "(", ")", "\n", "", "self", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.pipeline.BatchPipeline._update_progress": [[204, 208], ["LOGGER.info"], "methods", ["None"], ["", "def", "_update_progress", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "progress_interval", "and", "self", ".", "count", ">=", "self", ".", "current_progress", ":", "\n", "            ", "LOGGER", ".", "info", "(", "f\"{self.count} iterations completed...\"", ")", "\n", "self", ".", "current_progress", "+=", "self", ".", "progress_interval", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor.__init__": [[65, 73], ["pipeline.Task.__init__", "topics.TopicProcessor._extract_fields"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor._extract_fields"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (TopicsConfig)\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ")", "\n", "self", ".", "fields", "=", "self", ".", "_extract_fields", "(", "config", ".", "fields", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor.process": [[74, 86], ["topics.Query", "LOGGER.warning", "getattr().strip", "getattr"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "topic", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            topic (Topic)\n\n        Returns\n            Query\n        \"\"\"", "\n", "text", "=", "' '", ".", "join", "(", "[", "getattr", "(", "topic", ",", "f", ")", ".", "strip", "(", ")", "for", "f", "in", "self", ".", "fields", "]", ")", "\n", "if", "not", "text", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "f\"Query from topic {topic.id} has no text.\"", ")", "\n", "", "return", "Query", "(", "topic", ".", "id", ",", "topic", ".", "lang", ",", "text", ",", "text", ",", "topic", ".", "report", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TopicProcessor._extract_fields": [[87, 94], ["fields_str.split", "error.ConfigError", "f.lower"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "_extract_fields", "(", "cls", ",", "fields_str", ")", ":", "\n", "        ", "fields", "=", "fields_str", ".", "split", "(", "'+'", ")", "\n", "try", ":", "\n", "            ", "return", "[", "cls", ".", "FIELD_MAP", "[", "f", ".", "lower", "(", ")", "]", "for", "f", "in", "fields", "]", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unrecognized topic field: {e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.SgmlTopicReader.__init__": [[99, 105], ["iter", "util.formats.parse_sgml_topics"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_topics"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "prefix", ",", "strip_non_digits", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "strip_non_digits", "=", "strip_non_digits", "\n", "self", ".", "topics", "=", "iter", "(", "topic", "for", "topic", "in", "parse_sgml_topics", "(", "path", ",", "encoding", ",", "prefix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.SgmlTopicReader.__iter__": [[106, 108], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.SgmlTopicReader.__next__": [[109, 113], ["next", "topics.Topic", "filter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LoggingFilter.filter"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "topic", "=", "next", "(", "self", ".", "topics", ")", "\n", "identifier", "=", "''", ".", "join", "(", "filter", "(", "str", ".", "isdigit", ",", "topic", "[", "0", "]", ")", ")", "if", "self", ".", "strip_non_digits", "else", "topic", "[", "0", "]", "\n", "return", "Topic", "(", "identifier", ",", "self", ".", "lang", ",", "topic", "[", "1", "]", ",", "topic", "[", "2", "]", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.SgmlTopicReader.__len__": [[114, 116], ["util.file.count_lines_with"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines_with", "(", "'<top>'", ",", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.XmlTopicReader.__init__": [[121, 127], ["iter", "util.formats.parse_xml_topics"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_xml_topics"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "strip_non_digits", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "strip_non_digits", "=", "strip_non_digits", "\n", "self", ".", "topics", "=", "iter", "(", "topic", "for", "topic", "in", "parse_xml_topics", "(", "path", ",", "encoding", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.XmlTopicReader.__iter__": [[128, 130], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.XmlTopicReader.__next__": [[131, 135], ["next", "topics.Topic", "filter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LoggingFilter.filter"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "topic", "=", "next", "(", "self", ".", "topics", ")", "\n", "identifier", "=", "''", ".", "join", "(", "filter", "(", "str", ".", "isdigit", ",", "topic", "[", "0", "]", ")", ")", "if", "self", ".", "strip_non_digits", "else", "topic", "[", "0", "]", "\n", "return", "Topic", "(", "identifier", ",", "topic", "[", "1", "]", ",", "topic", "[", "2", "]", ",", "topic", "[", "3", "]", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.XmlTopicReader.__len__": [[136, 138], ["util.file.count_lines_with"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines_with", "(", "'<topic'", ",", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader.__init__": [[148, 165], ["iter", "topics.Hc4JsonTopicReader._parse"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._parse"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "source", ",", "qrels_lang", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path (str): Path to topics file.\n            encoding (str): File encoding.\n            lang (str): Language of the topics.\n            source (str): Source of the topic (translation, enhancement, etc.)\n            qrels_lang (str): Remove topics that do not have this lang in languages_with_qrels\n            **kwargs (dict): Unused\n        \"\"\"", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "source", "=", "source", "\n", "self", ".", "qrels_lang", "=", "qrels_lang", "\n", "self", ".", "num_skipped", "=", "0", "\n", "self", ".", "topics", "=", "iter", "(", "self", ".", "_parse", "(", "path", ",", "encoding", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader.__iter__": [[166, 168], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader.__next__": [[169, 171], ["next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "next", "(", "self", ".", "topics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader.__len__": [[172, 174], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._construct": [[175, 193], ["topics.SkipEntry", "topics.SkipEntry", "error.ParseError", "topics.Hc4JsonTopicReader._validate", "topic[].strip", "topic[].strip", "topics.Topic"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._validate"], ["", "def", "_construct", "(", "self", ",", "data", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "self", ".", "qrels_lang", "and", "self", ".", "qrels_lang", "not", "in", "data", "[", "'languages_with_qrels'", "]", ":", "\n", "                ", "raise", "SkipEntry", "(", ")", "\n", "", "for", "topic", "in", "data", "[", "'topics'", "]", ":", "\n", "                ", "if", "topic", "[", "'lang'", "]", "==", "self", ".", "lang", "and", "topic", "[", "'source'", "]", "==", "self", ".", "source", ":", "\n", "                    ", "self", ".", "_validate", "(", "data", "[", "'topic_id'", "]", ",", "topic", ")", "\n", "title", "=", "topic", "[", "'topic_title'", "]", ".", "strip", "(", ")", "\n", "desc", "=", "topic", "[", "'topic_description'", "]", ".", "strip", "(", ")", "\n", "report", "=", "data", "[", "'report'", "]", "[", "'text'", "]", "if", "'report'", "in", "data", "else", "None", "\n", "return", "Topic", "(", "data", "[", "'topic_id'", "]", ",", "self", ".", "lang", ",", "title", ",", "desc", ",", "report", ")", "\n", "# did not find lang-source pair", "\n", "", "", "raise", "SkipEntry", "(", ")", "\n", "", "except", "SkipEntry", ":", "\n", "            ", "self", ".", "num_skipped", "+=", "1", "\n", "return", "None", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "raise", "ParseError", "(", "f\"Missing field {e} in json docs element: {data}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._validate": [[194, 199], ["LOGGER.warning", "topics.SkipEntry"], "methods", ["None"], ["", "", "def", "_validate", "(", "self", ",", "topic_id", ",", "data", ")", ":", "\n", "# None is not allowed for title or description", "\n", "        ", "if", "data", "[", "'topic_title'", "]", "is", "None", "or", "data", "[", "'topic_description'", "]", "is", "None", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "f\"Skipping topic {topic_id} because of null title or description\"", ")", "\n", "raise", "SkipEntry", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._parse": [[200, 213], ["open", "topics.Hc4JsonTopicReader._construct", "LOGGER.info", "error.ConfigError", "error.ParseError", "json.loads"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.Hc4JsonTopicReader._construct"], ["", "", "def", "_parse", "(", "self", ",", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "            ", "try", ":", "\n", "                ", "topics", "=", "[", "self", ".", "_construct", "(", "json", ".", "loads", "(", "data", ")", ")", "for", "data", "in", "fp", "]", "\n", "# filter topics that are not supported for this language or have errors", "\n", "topics", "=", "[", "topic", "for", "topic", "in", "topics", "if", "topic", "is", "not", "None", "]", "\n", "if", "self", ".", "num_skipped", ":", "\n", "                    ", "LOGGER", ".", "info", "(", "f\"Skipping {self.num_skipped} topics that don't support {self.lang} {self.source}\"", ")", "\n", "", "if", "not", "topics", ":", "\n", "                    ", "raise", "ConfigError", "(", "f\"No topics available for {self.lang} {self.source}\"", ")", "\n", "", "return", "topics", "\n", "", "except", "json", ".", "decoder", ".", "JSONDecodeError", "as", "e", ":", "\n", "                ", "raise", "ParseError", "(", "f\"Problem parsing json from {path}: {e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.__init__": [[218, 223], ["iter", "topics.TsvTopicReader.parse"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "encoding", "=", "encoding", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "topics", "=", "iter", "(", "topic", "for", "topic", "in", "self", ".", "parse", "(", "path", ",", "encoding", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.__iter__": [[224, 226], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.__next__": [[227, 230], ["next", "topics.Topic"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "topic", "=", "next", "(", "self", ".", "topics", ")", "\n", "return", "Topic", "(", "topic", "[", "0", "]", ",", "self", ".", "lang", ",", "topic", "[", "1", "]", ",", "None", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.__len__": [[231, 233], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ",", "self", ".", "encoding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse": [[234, 240], ["open", "csv.reader", "line[].strip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "parse", "(", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "fp", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "line", "in", "reader", ":", "\n", "                ", "yield", "line", "[", "0", "]", ",", "line", "[", "1", "]", ".", "strip", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.IRDSTopicReader.__init__": [[248, 263], ["ir_datasets.load", "util.LangStandardizer.iso_639_3", "iter"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3"], ["def", "__init__", "(", "self", ",", "path", ",", "encoding", ",", "lang", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path (str): ir_datasets name.\n            encoding (str): Ignored.\n            lang (str): Language of the topics.\n            **kwargs (dict): Unused.\n        \"\"\"", "\n", "import", "ir_datasets", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "lang", "=", "lang", "\n", "self", ".", "dataset", "=", "ir_datasets", ".", "load", "(", "self", ".", "path", ")", "\n", "dataset_lang", "=", "LangStandardizer", ".", "iso_639_3", "(", "self", ".", "dataset", ".", "queries", ".", "lang", ")", "\n", "assert", "dataset_lang", "==", "self", ".", "lang", ",", "f\"Query language code from {path} is not {lang} but {dataset_lang}.\"", "\n", "self", ".", "queries", "=", "iter", "(", "self", ".", "dataset", ".", "queries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.IRDSTopicReader.__iter__": [[264, 266], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.IRDSTopicReader.__next__": [[267, 270], ["next", "topics.Topic", "getattr"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "q", "=", "next", "(", "self", ".", "queries", ")", "\n", "return", "Topic", "(", "q", ".", "query_id", ",", "self", ".", "lang", ",", "q", ".", "text", ",", "getattr", "(", "q", ",", "'description'", ",", "None", ")", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.IRDSTopicReader.__len__": [[271, 273], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ".", "queries", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryWriter.__init__": [[278, 288], ["pipeline.Task.__init__", "open"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "artifact_config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (TopicsConfig or QueriesConfig): Config that includes output.\n            artifact_config (BaseConfig or None): Config that resulted in this artifact\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "artifact_config", ",", "base", "=", "config", ".", "output", ")", "\n", "path", "=", "self", ".", "base", "/", "'queries.jsonl'", "\n", "self", ".", "file", "=", "open", "(", "path", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryWriter.process": [[289, 299], ["topics.QueryWriter.file.write", "json.dumps"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "query", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            query (Query)\n\n        Returns\n            Query\n        \"\"\"", "\n", "self", ".", "file", ".", "write", "(", "json", ".", "dumps", "(", "query", ",", "cls", "=", "DataclassJSONEncoder", ")", "+", "\"\\n\"", ")", "\n", "return", "query", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryWriter.end": [[300, 303], ["super().end", "topics.QueryWriter.file.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "end", "(", ")", "\n", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryWriter.reduce": [[304, 310], ["util.file.path_append", "open", "topics.QueryWriter.file.write"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "for", "base", "in", "dirs", ":", "\n", "            ", "path", "=", "path_append", "(", "base", ",", "'queries.jsonl'", ")", "\n", "with", "open", "(", "path", ")", "as", "fp", ":", "\n", "                ", "for", "line", "in", "fp", ":", "\n", "                    ", "self", ".", "file", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.__init__": [[315, 321], ["pathlib.Path", "topics.QueryReader.path.is_dir", "open", "fp.readlines"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "if", "self", ".", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "self", ".", "path", "=", "self", ".", "path", "/", "'queries.jsonl'", "\n", "", "with", "open", "(", "self", ".", "path", ")", "as", "fp", ":", "\n", "            ", "self", ".", "data", "=", "fp", ".", "readlines", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.__iter__": [[322, 324], ["None"], "methods", ["None"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.__next__": [[325, 330], ["topics.Query", "StopIteration", "json.loads", "topics.QueryReader.data.pop"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "Query", "(", "**", "json", ".", "loads", "(", "self", ".", "data", ".", "pop", "(", "0", ")", ")", ")", "\n", "", "except", "IndexError", ":", "\n", "            ", "raise", "StopIteration", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.__len__": [[331, 333], ["util.file.count_lines"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "self", ".", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryReader.peek": [[334, 336], ["topics.Query", "json.loads"], "methods", ["None"], ["", "def", "peek", "(", "self", ")", ":", "\n", "        ", "return", "Query", "(", "**", "json", ".", "loads", "(", "self", ".", "data", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryGenerator.__init__": [[341, 343], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "processor", ")", ":", "\n", "        ", "self", ".", "processor", "=", "processor", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryGenerator.generate": [[344, 360], ["topics.QueryGenerator.processor.identify_stop_words", "topics.QueryGenerator.processor.stem", "topics.QueryGenerator.processor.remove_stop_words", "topics.QueryGenerator.processor.post_normalize", "topics.Query"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "generate", "(", "self", ",", "query", ",", "text", ",", "tokens", ")", ":", "\n", "        ", "\"\"\"Generate the text of a query\n\n        Args:\n            query (Query): query object\n            text (str): normalized text of query\n            tokens (list): list of string tokens\n\n        Returns:\n            Query object\n        \"\"\"", "\n", "stopword_indices", "=", "self", ".", "processor", ".", "identify_stop_words", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "processor", ".", "stem", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "processor", ".", "remove_stop_words", "(", "tokens", ",", "stopword_indices", ")", "\n", "query_syntax", "=", "self", ".", "processor", ".", "post_normalize", "(", "' '", ".", "join", "(", "tokens", ")", ")", "\n", "return", "Query", "(", "query", ".", "id", ",", "query", ".", "lang", ",", "query_syntax", ",", "text", ",", "query", ".", "report", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.LuceneTransformer.__init__": [[365, 368], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "processor", ")", ":", "\n", "        ", "self", ".", "processor", "=", "processor", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.LuceneTransformer.visit_search_field": [[369, 384], ["node.clone_item", "isinstance", "value.strip.strip.split", "topics.LuceneTransformer.processor.identify_stop_words", "topics.LuceneTransformer.processor.stem", "topics.LuceneTransformer.processor.remove_stop_words", "topics.LuceneTransformer.processor.post_normalize", "isinstance", "node.expr.clone_item", "value.strip.strip.strip"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "def", "visit_search_field", "(", "self", ",", "node", ",", "context", ")", ":", "\n", "        ", "new_node", "=", "node", ".", "clone_item", "(", ")", "\n", "value", "=", "node", ".", "expr", ".", "value", "\n", "if", "isinstance", "(", "node", ".", "expr", ",", "luqum", ".", "tree", ".", "Phrase", ")", ":", "\n", "            ", "value", "=", "value", ".", "strip", "(", "'\"'", ")", "\n", "# this handles single terms and phrases", "\n", "", "tokens", "=", "value", ".", "split", "(", ")", "\n", "stopword_indices", "=", "self", ".", "processor", ".", "identify_stop_words", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "processor", ".", "stem", "(", "tokens", ")", "\n", "tokens", "=", "self", ".", "processor", ".", "remove_stop_words", "(", "tokens", ",", "stopword_indices", ")", "\n", "new_value", "=", "self", ".", "processor", ".", "post_normalize", "(", "' '", ".", "join", "(", "tokens", ")", ")", "\n", "if", "isinstance", "(", "node", ".", "expr", ",", "luqum", ".", "tree", ".", "Phrase", ")", ":", "\n", "            ", "new_value", "=", "f'\"{new_value}\"'", "\n", "", "new_node", ".", "expr", "=", "node", ".", "expr", ".", "clone_item", "(", "value", "=", "new_value", ")", "\n", "yield", "new_node", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.LuceneQueryGenerator.__init__": [[389, 394], ["util.java.Java", "util.java.Java.QueryParser", "topics.LuceneTransformer", "util.java.Java.WhitespaceAnalyzer"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "processor", ")", ":", "\n", "        ", "self", ".", "processor", "=", "processor", "\n", "java", "=", "Java", "(", ")", "\n", "self", ".", "parser", "=", "java", ".", "QueryParser", "(", "'contents'", ",", "java", ".", "WhitespaceAnalyzer", "(", ")", ")", "\n", "self", ".", "transformer", "=", "LuceneTransformer", "(", "processor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.LuceneQueryGenerator.generate": [[395, 415], ["topics.LuceneQueryGenerator.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "luqum.parser.parser.parse", "topics.LuceneQueryGenerator.transformer.visit", "topics.Query", "topics.LuceneQueryGenerator.toString", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.TsvTopicReader.parse"], ["", "def", "generate", "(", "self", ",", "query", ",", "text", ",", "tokens", ")", ":", "\n", "        ", "\"\"\"Generate the text of a query\n\n        Args:\n            query (Query): query object\n            text (str): normalized text of query\n            tokens (list): list of string tokens\n\n        Returns:\n            Query object\n        \"\"\"", "\n", "# convert tokens into lucene query format:", "\n", "# term1 AND term2 -> +contents:term1 +contents:term2", "\n", "jquery", "=", "self", ".", "parser", ".", "parse", "(", "text", ")", "\n", "tree", "=", "luqum", ".", "parser", ".", "parser", ".", "parse", "(", "jquery", ".", "toString", "(", ")", ")", "\n", "\n", "# stem, remove stop words, normalize the query terms", "\n", "tree", "=", "self", ".", "transformer", ".", "visit", "(", "tree", ")", "\n", "\n", "return", "Query", "(", "query", ".", "id", ",", "query", ".", "lang", ",", "str", "(", "tree", ")", ",", "text", ",", "query", ".", "report", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.__init__": [[426, 432], ["topics.QueryGenerator.__init__", "util.formats.parse_psq_table", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_psq_table"], ["def", "__init__", "(", "self", ",", "processor", ",", "psq_path", ",", "threshold", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "processor", ")", "\n", "try", ":", "\n", "            ", "self", ".", "psq_table", "=", "parse_psq_table", "(", "psq_path", ",", "threshold", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Unable to load PSQ translation table: {e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate": [[433, 440], ["topics.PSQGenerator._project", "topics.Query", "token.lower", "topics.PSQGenerator.process_psq", "topics.PSQGenerator.processor.post_normalize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator._project", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.process_psq", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize"], ["", "", "def", "generate", "(", "self", ",", "query", ",", "text", ",", "tokens", ")", ":", "\n", "        ", "\"\"\"Post process the tokens (stem, stop words, normalize) and generate PSQ\"\"\"", "\n", "psq_tokens", "=", "self", ".", "_project", "(", "token", ".", "lower", "(", ")", "for", "token", "in", "tokens", ")", "\n", "\n", "terms", "=", "[", "' '", ".", "join", "(", "self", ".", "process_psq", "(", "psq_clause", ")", ")", "for", "psq_clause", "in", "psq_tokens", "]", "\n", "query_syntax", "=", "') AND ('", ".", "join", "(", "[", "self", ".", "processor", ".", "post_normalize", "(", "term", ")", "for", "term", "in", "terms", "if", "term", "!=", "''", "]", ")", "\n", "return", "Query", "(", "query", ".", "id", ",", "query", ".", "lang", ",", "'psq AND ('", "+", "query_syntax", "+", "')'", ",", "text", ",", "query", ".", "report", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.process_psq": [[441, 456], ["topics.PSQGenerator.processor.identify_stop_words", "topics.PSQGenerator.processor.stem", "range", "topics.PSQGenerator.processor.remove_stop_words", "len", "topics.PSQGenerator.processor.post_normalize", "topics.PSQGenerator._format_term"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.identify_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.stem", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.remove_stop_words", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator._format_term"], ["", "def", "process_psq", "(", "self", ",", "psq_tokens", ")", ":", "\n", "# remove stop words and stem and apply to PSQ tokens", "\n", "        ", "text_tokens", "=", "[", "token", ".", "text", "for", "token", "in", "psq_tokens", "]", "\n", "stopword_indices", "=", "self", ".", "processor", ".", "identify_stop_words", "(", "text_tokens", ",", "is_lower", "=", "True", ")", "\n", "text_tokens", "=", "self", ".", "processor", ".", "stem", "(", "text_tokens", ")", "\n", "for", "index", "in", "range", "(", "len", "(", "psq_tokens", ")", ")", ":", "\n", "            ", "psq_tokens", "[", "index", "]", ".", "text", "=", "text_tokens", "[", "index", "]", "\n", "", "psq_tokens", "=", "self", ".", "processor", ".", "remove_stop_words", "(", "psq_tokens", ",", "stopword_indices", ")", "\n", "# normalize the text of the PSQ tokens and remove those that are now empty", "\n", "for", "psq_token", "in", "psq_tokens", ":", "\n", "            ", "psq_token", ".", "text", "=", "self", ".", "processor", ".", "post_normalize", "(", "psq_token", ".", "text", ")", "\n", "", "psq_tokens", "=", "[", "psq_token", "for", "psq_token", "in", "psq_tokens", "if", "psq_token", ".", "text", "]", "\n", "# formulate the query syntax for weighted query", "\n", "terms", "=", "[", "self", ".", "_format_term", "(", "psq_token", ")", "for", "psq_token", "in", "psq_tokens", "]", "\n", "return", "terms", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.escape_term": [[458, 478], ["term.translate", "str.maketrans"], "methods", ["None"], ["", "def", "escape_term", "(", "self", ",", "term", ")", ":", "\n", "        ", "return", "term", ".", "translate", "(", "str", ".", "maketrans", "(", "{", "\"-\"", ":", "r\"\\-\"", ",", "\n", "\"]\"", ":", "r\"\\]\"", ",", "\n", "\"[\"", ":", "r\"\\[\"", ",", "\n", "\"+\"", ":", "r\"\\+\"", ",", "\n", "\"|\"", ":", "r\"\\|\"", ",", "\n", "\"!\"", ":", "r\"\\!\"", ",", "\n", "\"(\"", ":", "r\"\\(\"", ",", "\n", "\")\"", ":", "r\"\\)\"", ",", "\n", "\"}\"", ":", "r\"\\}\"", ",", "\n", "\"{\"", ":", "r\"\\{\"", ",", "\n", "\"/\"", ":", "r\"\\/\"", ",", "\n", "\"\\\"\"", ":", "r\"\\\\\\\"\"", ",", "\n", "\"~\"", ":", "r\"\\~\"", ",", "\n", "\"?\"", ":", "r\"\\?\"", ",", "\n", "\"\\\\\"", ":", "r\"\\\\\"", ",", "\n", "\"^\"", ":", "r\"\\^\"", ",", "\n", "\"*\"", ":", "r\"\\*\"", ",", "\n", "\"&\"", ":", "r\"\\&\"", ",", "\n", "\":\"", ":", "r\"\\:\"", "}", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator._format_term": [[479, 485], ["topics.PSQGenerator.escape_term", "topics.PSQGenerator.escape_term"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.escape_term", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.escape_term"], ["", "def", "_format_term", "(", "self", ",", "psq_token", ")", ":", "\n", "        ", "\"\"\"PSQ syntax with Lucene boost syntax\"\"\"", "\n", "if", "psq_token", ".", "prob", ":", "\n", "            ", "return", "f\"{self.escape_term(psq_token.text)}^{psq_token.prob:.4f}\"", "\n", "", "else", ":", "\n", "            ", "return", "f\"{self.escape_term(psq_token.text)}^{1.0}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator._project": [[486, 495], ["eng_tokens.append", "eng_tokens.append", "topics.PSQToken", "topics.PSQToken", "topics.PSQGenerator.psq_table[].items"], "methods", ["None"], ["", "", "def", "_project", "(", "self", ",", "tokens", ")", ":", "\n", "        ", "\"\"\"project the query into the target language\"\"\"", "\n", "eng_tokens", "=", "[", "]", "\n", "for", "token", "in", "tokens", ":", "\n", "            ", "if", "token", "in", "self", ".", "psq_table", ":", "\n", "                ", "eng_tokens", ".", "append", "(", "[", "PSQToken", "(", "text", ",", "prob", ")", "for", "text", ",", "prob", "in", "self", ".", "psq_table", "[", "token", "]", ".", "items", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "eng_tokens", ".", "append", "(", "[", "PSQToken", "(", "token", ",", "None", ")", "]", ")", "\n", "", "", "return", "eng_tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryProcessor.__init__": [[500, 515], ["text.TextProcessor.__init__", "LOGGER.info", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "lang", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (QueriesConfig)\n            lang (str): Language code\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "config", ".", "process", ",", "lang", ")", "\n", "self", ".", "psq_config", "=", "config", ".", "psq", "\n", "self", ".", "parse", "=", "config", ".", "parse", "\n", "if", "self", ".", "parse", ":", "\n", "            ", "LOGGER", ".", "info", "(", "\"Lucene boolean query parsing enabled in query processor\"", ")", "\n", "", "if", "self", ".", "psq_config", "and", "self", ".", "parse", ":", "\n", "            ", "raise", "ConfigError", "(", "\"Cannot use both PSQ and Lucene boolean query parsing\"", ")", "\n", "", "self", ".", "generator", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryProcessor.begin": [[516, 533], ["super().begin", "schema.TextProcessorConfig", "text.TextProcessor", "text.TextProcessor.begin", "topics.PSQGenerator", "topics.LuceneQueryGenerator", "topics.QueryGenerator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "begin", "(", ")", "\n", "if", "self", ".", "psq_config", ":", "\n", "# build an English text processor to handle English tokens from PSQ", "\n", "            ", "text_config", "=", "TextProcessorConfig", "(", "\n", "normalize", "=", "self", ".", "psq_config", ".", "normalize", ",", "\n", "tokenize", "=", "\"whitespace\"", ",", "\n", "stopwords", "=", "self", ".", "psq_config", ".", "stopwords", ",", "\n", "stem", "=", "self", ".", "psq_config", ".", "stem", "\n", ")", "\n", "processor", "=", "TextProcessor", "(", "self", ".", "run_path", ",", "text_config", ",", "self", ".", "psq_config", ".", "lang", ")", "\n", "processor", ".", "begin", "(", ")", "# load models", "\n", "self", ".", "generator", "=", "PSQGenerator", "(", "processor", ",", "self", ".", "psq_config", ".", "path", ",", "self", ".", "psq_config", ".", "threshold", ")", "\n", "", "elif", "self", ".", "parse", ":", "\n", "            ", "self", ".", "generator", "=", "LuceneQueryGenerator", "(", "self", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "generator", "=", "QueryGenerator", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.QueryProcessor.process": [[534, 546], ["topics.QueryProcessor.pre_normalize", "topics.QueryProcessor.tokenize", "topics.QueryProcessor.generator.generate"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.text.TextProcessor.tokenize", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.topics.PSQGenerator.generate"], ["", "", "def", "process", "(", "self", ",", "query", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            query (Query)\n\n        Returns\n            Query\n        \"\"\"", "\n", "text", "=", "query", ".", "text", "\n", "text", "=", "self", ".", "pre_normalize", "(", "text", ")", "\n", "tokens", "=", "self", ".", "tokenize", "(", "text", ")", "\n", "return", "self", ".", "generator", ".", "generate", "(", "query", ",", "text", ",", "tokens", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.prepare": [[11, 30], ["config.ConfigService", "cls._validate_dict", "cls._set_run_path", "config.ConfigService.create_config_object", "cls._update", "cls._validate_obj"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_run_path", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.create_config_object", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._update", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_obj"], ["@", "classmethod", "\n", "def", "prepare", "(", "cls", ",", "config_dict", ",", "overrides", "=", "None", ")", ":", "\n", "        ", "\"\"\"Prepare a RunnerConfig object from a dictionary\n\n        Args:\n            config_dict (dict): configuration as dictionary\n            overrides (list): list of key value pairs\n\n        Returns:\n            RunnerConfig\n        \"\"\"", "\n", "overrides", "=", "overrides", "if", "overrides", "else", "[", "]", "\n", "config_service", "=", "ConfigService", "(", "overrides", ")", "\n", "cls", ".", "_validate_dict", "(", "config_dict", ")", "\n", "cls", ".", "_set_run_path", "(", "config_dict", ")", "\n", "conf", "=", "config_service", ".", "create_config_object", "(", "RunnerConfig", ",", "config_dict", ")", "\n", "cls", ".", "_update", "(", "conf", ")", "\n", "cls", ".", "_validate_obj", "(", "conf", ")", "\n", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load": [[31, 54], ["config.ConfigService", "cls._validate_dict", "cls._set_run_path", "config.ConfigService.create_config_object", "cls._update", "cls._validate_obj", "config.ConfigService.read_config_file", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_run_path", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.create_config_object", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._update", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_obj", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file"], ["", "@", "classmethod", "\n", "def", "load", "(", "cls", ",", "config_filename", ",", "overrides", "=", "None", ")", ":", "\n", "        ", "\"\"\"Load config from file and perform some basic checks and updates\n\n        Args:\n            config_filename (str): path to configuration file\n            overrides (list): list of key value pairs\n\n        Returns:\n            RunnerConfig\n        \"\"\"", "\n", "overrides", "=", "overrides", "if", "overrides", "else", "[", "]", "\n", "config_service", "=", "ConfigService", "(", "overrides", ")", "\n", "try", ":", "\n", "            ", "config_dict", "=", "config_service", ".", "read_config_file", "(", "config_filename", ")", "\n", "", "except", "FileNotFoundError", "as", "error", ":", "\n", "            ", "raise", "ConfigError", "(", "error", ")", "\n", "", "cls", ".", "_validate_dict", "(", "config_dict", ")", "\n", "cls", ".", "_set_run_path", "(", "config_dict", ")", "\n", "conf", "=", "config_service", ".", "create_config_object", "(", "RunnerConfig", ",", "config_dict", ")", "\n", "cls", ".", "_update", "(", "conf", ")", "\n", "cls", ".", "_validate_obj", "(", "conf", ")", "\n", "return", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._update": [[55, 68], ["cls._set_output_paths", "cls._make_input_paths_absolute", "cls._set_retrieve_input_path", "cls._set_rerank_db_path", "cls._set_progress_intervals"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_output_paths", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_input_paths_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_retrieve_input_path", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_rerank_db_path", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_progress_intervals"], ["", "@", "classmethod", "\n", "def", "_update", "(", "cls", ",", "conf", ")", ":", "\n", "        ", "\"\"\"Updates the config object\n        1. sets the output directory names from defaults if not already set\n        2. sets the retriever's index path based on the index task if not already set\n        3. sets the reranker's db path based on the database section if not already set\n        4. sets default progress update intervals for logging\n        \"\"\"", "\n", "cls", ".", "_set_output_paths", "(", "conf", ")", "\n", "cls", ".", "_make_input_paths_absolute", "(", "conf", ")", "\n", "cls", ".", "_set_retrieve_input_path", "(", "conf", ")", "\n", "cls", ".", "_set_rerank_db_path", "(", "conf", ")", "\n", "cls", ".", "_set_progress_intervals", "(", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_dict": [[69, 77], ["error.ConfigError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_validate_dict", "(", "conf_dict", ")", ":", "\n", "# This tests for:", "\n", "#  1. The run name is set", "\n", "        ", "try", ":", "\n", "            ", "conf_dict", "[", "'run'", "]", "[", "'name'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "ConfigError", "(", "\"run.name is not set\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._validate_obj": [[78, 90], ["cls._check_queue_name", "error.ConfigError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._check_queue_name"], ["", "", "@", "classmethod", "\n", "def", "_validate_obj", "(", "cls", ",", "conf", ")", ":", "\n", "        ", "\"\"\" Tests the config object after preparation for:\n        1. the queue name is set if a grid job\n        2. consistency in the boolean query parse flag\n        \"\"\"", "\n", "cls", ".", "_check_queue_name", "(", "conf", ")", "\n", "\n", "# check boolean query parsing consistency", "\n", "if", "conf", ".", "queries", "and", "conf", ".", "retrieve", ":", "\n", "            ", "if", "conf", ".", "queries", ".", "parse", "!=", "conf", ".", "retrieve", ".", "parse", ":", "\n", "                ", "raise", "ConfigError", "(", "\"Config for queries and retrieve do not match for parse parameter\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_run_path": [[91, 98], ["str.maketrans", "[].translate", "str", "pathlib.Path"], "methods", ["None"], ["", "", "", "@", "classmethod", "\n", "def", "_set_run_path", "(", "cls", ",", "conf_dict", ")", ":", "\n", "# set run path from name if not already set", "\n", "        ", "if", "'path'", "not", "in", "conf_dict", "[", "'run'", "]", ":", "\n", "            ", "mapping", "=", "str", ".", "maketrans", "(", "\" \"", ",", "\"-\"", ",", "\"'\\\",\"", ")", "\n", "path", "=", "conf_dict", "[", "'run'", "]", "[", "'name'", "]", ".", "translate", "(", "mapping", ")", "\n", "conf_dict", "[", "'run'", "]", "[", "'path'", "]", "=", "str", "(", "pathlib", ".", "Path", "(", "'runs'", ")", "/", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_output_paths": [[109, 115], ["cls.output_defaults.keys", "conf.get", "conf.get().set", "conf.get().get", "conf.get", "conf.get"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get"], ["@", "classmethod", "\n", "def", "_set_output_paths", "(", "cls", ",", "conf", ")", ":", "\n", "# set output path for components from defaults", "\n", "        ", "for", "task", "in", "cls", ".", "output_defaults", ".", "keys", "(", ")", ":", "\n", "            ", "if", "conf", ".", "get", "(", "task", ")", "and", "conf", ".", "get", "(", "task", ")", ".", "get", "(", "'output'", ")", "is", "True", ":", "\n", "                ", "conf", ".", "get", "(", "task", ")", ".", "set", "(", "'output'", ",", "cls", ".", "output_defaults", "[", "task", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_input_paths_absolute": [[116, 129], ["cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute", "cls._make_absolute"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute"], ["", "", "", "@", "classmethod", "\n", "def", "_make_input_paths_absolute", "(", "cls", ",", "conf", ")", ":", "\n", "# if user configured any input paths, make them absolute", "\n", "# also resolve symbolic links", "\n", "        ", "cls", ".", "_make_absolute", "(", "conf", ",", "'documents.input'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'index.input.documents'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'topics.input'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'queries.input'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'retrieve.input.index'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'retrieve.input.queries'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'rerank.input.database'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'rerank.input.results'", ")", "\n", "cls", ".", "_make_absolute", "(", "conf", ",", "'score.input'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._make_absolute": [[130, 149], ["attribute.split", "isinstance", "attribute.split.pop", "getattr", "isinstance", "str", "pathlib.Path().resolve().absolute", "pathlib.Path().resolve().absolute.exists", "pathlib.Path().absolute", "str", "str", "pathlib.Path().absolute", "getattr.path.items", "pathlib.Path().resolve", "pathlib.Path", "pathlib.Path", "pathlib.Path"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_make_absolute", "(", "conf", ",", "attribute", ")", ":", "\n", "        ", "obj", "=", "conf", "\n", "fields", "=", "attribute", ".", "split", "(", "'.'", ")", "\n", "try", ":", "\n", "            ", "while", "fields", ":", "\n", "                ", "field", "=", "fields", ".", "pop", "(", "0", ")", "\n", "obj", "=", "getattr", "(", "obj", ",", "field", ")", "\n", "", "if", "isinstance", "(", "obj", ".", "path", ",", "list", ")", ":", "\n", "                ", "obj", ".", "path", "=", "[", "str", "(", "pathlib", ".", "Path", "(", "path", ")", ".", "absolute", "(", ")", ")", "for", "path", "in", "obj", ".", "path", "]", "\n", "", "elif", "isinstance", "(", "obj", ".", "path", ",", "dict", ")", ":", "\n", "                ", "obj", ".", "path", "=", "{", "key", ":", "str", "(", "pathlib", ".", "Path", "(", "path", ")", ".", "absolute", "(", ")", ")", "for", "key", ",", "path", "in", "obj", ".", "path", ".", "items", "(", ")", "}", "\n", "", "else", ":", "\n", "# make path absolute if not relative to root run directory", "\n", "                ", "path", "=", "pathlib", ".", "Path", "(", "obj", ".", "path", ")", ".", "resolve", "(", ")", ".", "absolute", "(", ")", "\n", "if", "path", ".", "exists", "(", ")", ":", "\n", "                    ", "obj", ".", "path", "=", "str", "(", "path", ")", "\n", "", "", "", "except", "AttributeError", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_retrieve_input_path": [[150, 162], ["error.ConfigError", "schema.RetrieveInputConfig", "schema.PathConfig", "schema.PathConfig"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_set_retrieve_input_path", "(", "conf", ")", ":", "\n", "# if index location for retrieve is not set, we grab it from index config", "\n", "        ", "if", "conf", ".", "retrieve", ":", "\n", "            ", "if", "not", "conf", ".", "retrieve", ".", "input", "or", "not", "conf", ".", "retrieve", ".", "input", ".", "index", ":", "\n", "                ", "if", "conf", ".", "index", "and", "conf", ".", "index", ".", "output", ":", "\n", "                    ", "if", "not", "conf", ".", "retrieve", ".", "input", ":", "\n", "                        ", "conf", ".", "retrieve", ".", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "conf", ".", "index", ".", "output", ")", ")", "\n", "", "else", ":", "\n", "                        ", "conf", ".", "retrieve", ".", "input", ".", "index", "=", "PathConfig", "(", "path", "=", "conf", ".", "index", ".", "output", ")", "\n", "", "", "else", ":", "\n", "                    ", "raise", "ConfigError", "(", "\"retrieve.input.index.path needs to be set\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_rerank_db_path": [[163, 175], ["error.ConfigError", "schema.RerankInputConfig", "schema.PathConfig", "schema.PathConfig"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "_set_rerank_db_path", "(", "conf", ")", ":", "\n", "# if database path for rerank is not set, we grab it from documents config", "\n", "        ", "if", "conf", ".", "rerank", ":", "\n", "            ", "if", "not", "conf", ".", "rerank", ".", "input", "or", "not", "conf", ".", "rerank", ".", "input", ".", "database", ":", "\n", "                ", "if", "conf", ".", "database", "and", "conf", ".", "database", ".", "output", ":", "\n", "                    ", "if", "not", "conf", ".", "rerank", ".", "input", ":", "\n", "                        ", "conf", ".", "rerank", ".", "input", "=", "RerankInputConfig", "(", "database", "=", "PathConfig", "(", "path", "=", "conf", ".", "database", ".", "output", ")", ")", "\n", "", "else", ":", "\n", "                        ", "conf", ".", "rerank", ".", "input", ".", "database", "=", "PathConfig", "(", "path", "=", "conf", ".", "database", ".", "output", ")", "\n", "", "", "else", ":", "\n", "                    ", "raise", "ConfigError", "(", "\"rerank.input.database.path needs to be set\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._set_progress_intervals": [[176, 184], ["None"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "_set_progress_intervals", "(", "conf", ")", ":", "\n", "        ", "if", "conf", ".", "run", ".", "stage1", ":", "\n", "            ", "if", "not", "conf", ".", "run", ".", "stage1", ".", "progress_interval", ":", "\n", "                ", "conf", ".", "run", ".", "stage1", ".", "progress_interval", "=", "10000", "\n", "", "", "if", "conf", ".", "run", ".", "stage2", ":", "\n", "            ", "if", "not", "conf", ".", "run", ".", "stage2", ".", "progress_interval", ":", "\n", "                ", "conf", ".", "run", ".", "stage2", ".", "progress_interval", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper._check_queue_name": [[185, 190], ["error.ConfigError"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "_check_queue_name", "(", "conf", ")", ":", "\n", "        ", "if", "conf", ".", "run", ".", "parallel", "and", "conf", ".", "run", ".", "parallel", ".", "name", "in", "[", "'qsub'", ",", "'sbatch'", "]", ":", "\n", "            ", "if", "not", "conf", ".", "run", ".", "parallel", ".", "queue", ":", "\n", "                ", "raise", "ConfigError", "(", "f\"run.parallel.queue must be set for {conf.run.parallel.name} run\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.__init__": [[195, 204], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "excludes", "=", "{", "\n", "Tasks", ".", "DOCUMENTS", ":", "[", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "INDEX", ",", "Tasks", ".", "TOPICS", ",", "Tasks", ".", "QUERIES", ",", "Tasks", ".", "RETRIEVE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "DATABASE", ":", "[", "Tasks", ".", "INDEX", ",", "Tasks", ".", "TOPICS", ",", "Tasks", ".", "QUERIES", ",", "Tasks", ".", "RETRIEVE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "INDEX", ":", "[", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "TOPICS", ",", "Tasks", ".", "QUERIES", ",", "Tasks", ".", "RETRIEVE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "TOPICS", ":", "[", "Tasks", ".", "DOCUMENTS", ",", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "INDEX", ",", "Tasks", ".", "QUERIES", ",", "Tasks", ".", "RETRIEVE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "QUERIES", ":", "[", "Tasks", ".", "DOCUMENTS", ",", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "INDEX", ",", "Tasks", ".", "RETRIEVE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "RETRIEVE", ":", "[", "Tasks", ".", "DATABASE", ",", "Tasks", ".", "RERANK", "]", ",", "\n", "Tasks", ".", "RERANK", ":", "[", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.get_config": [[206, 210], ["config.copy", "set"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set"], ["", "def", "get_config", "(", "self", ",", "config", ",", "task", ")", ":", "\n", "        ", "\"\"\"This excludes the parts of the configuration that were not used to create the artifact.\"\"\"", "\n", "excludes", "=", "set", "(", "self", ".", "excludes", "[", "task", "]", ")", "|", "{", "'score'", "}", "\n", "return", "config", ".", "copy", "(", "exclude", "=", "excludes", ",", "deep", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ArtifactHelper.combine": [[211, 230], ["pathlib.Path", "pathlib.Path.is_dir", "schema.RunnerConfig", "config.ConfigService().read_config_file", "getattr", "config.ConfigService", "error.ConfigError", "getattr", "setattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.ConfigService.read_config_file"], ["", "def", "combine", "(", "self", ",", "config", ",", "path", ",", "required", "=", "True", ")", ":", "\n", "        ", "\"\"\"Loads an artifact configuration and combines it with the base config\"\"\"", "\n", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "if", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "path", "=", "path", "/", "'config.yml'", "\n", "", "else", ":", "\n", "            ", "path", "=", "path", ".", "parent", "/", "'config.yml'", "\n", "", "try", ":", "\n", "            ", "artifact_config_dict", "=", "ConfigService", "(", ")", ".", "read_config_file", "(", "path", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "            ", "if", "required", ":", "\n", "                ", "raise", "ConfigError", "(", "f\"Unable to load artifact config {path}\"", ")", "\n", "", "else", ":", "\n", "                ", "return", "\n", "", "", "artifact_config", "=", "RunnerConfig", "(", "**", "artifact_config_dict", ")", "\n", "for", "task", "in", "Tasks", ":", "\n", "            ", "if", "getattr", "(", "artifact_config", ",", "task", ")", ":", "\n", "                ", "if", "not", "getattr", "(", "config", ",", "task", ")", ":", "\n", "                    ", "setattr", "(", "config", ",", "task", ",", "getattr", "(", "artifact_config", ",", "task", ")", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.__init__": [[40, 53], ["pipeline.Task.__init__", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            config (RunnerConfig): Config for the run.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# the base directory for results is the run_path", "\n", "self", ".", "run_path", "=", "pathlib", ".", "Path", "(", "config", ".", "run", ".", "path", ")", "# base not set so that we don't write config/complete indicator", "\n", "self", ".", "relative_path", "=", "''", "# used by Task to provide dirs for reduce", "\n", "self", ".", "artifact_config", "=", "config", "\n", "self", ".", "filename", "=", "config", ".", "run", ".", "results", "\n", "self", ".", "path", "=", "self", ".", "run_path", "/", "self", ".", "filename", "\n", "self", ".", "file", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin": [[54, 57], ["results.TrecResultsWriter.path.parent.mkdir", "open"], "methods", ["None"], ["", "def", "begin", "(", "self", ")", ":", "\n", "        ", "self", ".", "path", ".", "parent", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "# this is needed for rerank only pipelines", "\n", "self", ".", "file", "=", "open", "(", "self", ".", "path", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.process": [[58, 66], ["results.TrecResultsWriter.file.write"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "results", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            results (Results): Results for a query\n        \"\"\"", "\n", "for", "result", "in", "results", ".", "results", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "f\"{results.query.id} Q0 {result.doc_id} {result.rank} {result.score} {results.system}\\n\"", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.end": [[67, 70], ["results.TrecResultsWriter.file.close", "super().end"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "self", ".", "file", ".", "close", "(", ")", "\n", "super", "(", ")", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.reduce": [[71, 78], ["LOGGER.debug", "open", "str", "results.TrecResultsWriter.file.write"], "methods", ["None"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "# rather than directories, we need to process files of the form [results]_part_*", "\n", "        ", "LOGGER", ".", "debug", "(", "\"Reducing to a single results file from %s\"", ",", "', '", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "dirs", ")", ")", "\n", "for", "d", "in", "dirs", ":", "\n", "            ", "with", "open", "(", "d", "/", "self", ".", "filename", ")", "as", "fp", ":", "\n", "                ", "for", "line", "in", "fp", ":", "\n", "                    ", "self", ".", "file", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsReader.__init__": [[83, 100], ["collections.defaultdict", "iter", "open", "csv.reader", "data[].append", "results.Results", "results.Result", "topics.Query", "collections.defaultdict.items", "int", "float"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "sep", "=", "' '", ",", "lang", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            path (str): Path to the results file.\n            sep (str): Optional separator of columns.\n            lang (str): Optional language of the queries.\n        \"\"\"", "\n", "system", "=", "None", "\n", "data", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "reader", "=", "csv", ".", "reader", "(", "fp", ",", "delimiter", "=", "sep", ")", "\n", "for", "row", "in", "reader", ":", "\n", "                ", "system", "=", "row", "[", "5", "]", "\n", "data", "[", "row", "[", "0", "]", "]", ".", "append", "(", "Result", "(", "row", "[", "2", "]", ",", "int", "(", "row", "[", "3", "]", ")", ",", "float", "(", "row", "[", "4", "]", ")", ")", ")", "\n", "# the trec results file does not contain query language, text, or report", "\n", "", "", "self", ".", "results", "=", "iter", "(", "[", "Results", "(", "Query", "(", "query_id", ",", "lang", ",", "''", ",", "''", ",", "None", ")", ",", "''", ",", "system", ",", "results", ")", "\n", "for", "query_id", ",", "results", "in", "data", ".", "items", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsReader.__iter__": [[101, 103], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsReader.__next__": [[104, 106], ["next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "next", "(", "self", ".", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsReader.__str__": [[107, 109], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsWriter.__init__": [[114, 124], ["pipeline.Task.__init__", "open"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "artifact_config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Root directory of the run.\n            config (BaseConfig): Config object with output.\n            artifact_config (BaseConfig): Config used to generate this artifact.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "artifact_config", ",", "config", ".", "output", ")", "\n", "self", ".", "path", "=", "self", ".", "base", "/", "'results.jsonl'", "\n", "self", ".", "file", "=", "open", "(", "self", ".", "path", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsWriter.process": [[125, 132], ["results.JsonResultsWriter.file.write", "json.dumps"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "results", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            results (Results): Results for a query\n        \"\"\"", "\n", "self", ".", "file", ".", "write", "(", "json", ".", "dumps", "(", "results", ",", "cls", "=", "DataclassJSONEncoder", ")", "+", "\"\\n\"", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsWriter.end": [[133, 136], ["super().end", "results.JsonResultsWriter.file.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "end", "(", ")", "\n", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsWriter.reduce": [[137, 143], ["util.file.path_append", "open", "results.JsonResultsWriter.file.write"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "for", "base", "in", "dirs", ":", "\n", "            ", "path", "=", "path_append", "(", "base", ",", "'results.jsonl'", ")", "\n", "with", "open", "(", "path", ")", "as", "fp", ":", "\n", "                ", "for", "line", "in", "fp", ":", "\n", "                    ", "self", ".", "file", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsReader.__init__": [[148, 153], ["pathlib.Path", "results.JsonResultsReader.path.is_dir", "open"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "if", "self", ".", "path", ".", "is_dir", "(", ")", ":", "\n", "            ", "self", ".", "path", "=", "self", ".", "path", "/", "'results.jsonl'", "\n", "", "self", ".", "file", "=", "open", "(", "self", ".", "path", ",", "'r'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsReader.__iter__": [[154, 156], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsReader.__next__": [[157, 167], ["results.JsonResultsReader.file.readline", "json.loads", "results.Results", "results.JsonResultsReader.file.close", "results.Result", "topics.Query"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "file", ".", "closed", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "line", "=", "self", ".", "file", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "raise", "StopIteration", "\n", "", "data", "=", "json", ".", "loads", "(", "line", ")", "\n", "results", "=", "[", "Result", "(", "**", "result", ")", "for", "result", "in", "data", "[", "'results'", "]", "]", "\n", "return", "Results", "(", "Query", "(", "**", "data", "[", "'query'", "]", ")", ",", "data", "[", "'doc_lang'", "]", ",", "data", "[", "'system'", "]", ",", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsReader.__len__": [[168, 170], ["util.file.count_lines", "str"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "count_lines", "(", "str", "(", "self", ".", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.JsonResultsReader.__str__": [[171, 173], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.__init__": [[23, 36], ["pipeline.Task.__init__", "util.java.Java"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "index_config", ",", "artifact_config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str or Path): Root directory of the run.\n            index_config (IndexConfig)\n            artifact_config (RunnerConfig)\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "artifact_config", ",", "index_config", ".", "output", ")", "\n", "self", ".", "_dir", "=", "None", "\n", "self", ".", "_writer", "=", "None", "\n", "self", ".", "java", "=", "Java", "(", ")", "\n", "self", ".", "lang", "=", "None", "\n", "self", ".", "field_type", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.writer": [[37, 46], ["index.LuceneIndexer.java.FSDirectory.open", "index.LuceneIndexer.java.IndexWriter", "index.LuceneIndexer.java.Paths.get", "index.LuceneIndexer.java.IndexWriterConfig", "error.PatapscoError", "str", "index.LuceneIndexer.java.WhitespaceAnalyzer"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get"], ["", "@", "property", "\n", "def", "writer", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_writer", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "_dir", "=", "self", ".", "java", ".", "FSDirectory", ".", "open", "(", "self", ".", "java", ".", "Paths", ".", "get", "(", "str", "(", "self", ".", "base", ")", ")", ")", "\n", "self", ".", "_writer", "=", "self", ".", "java", ".", "IndexWriter", "(", "self", ".", "_dir", ",", "self", ".", "java", ".", "IndexWriterConfig", "(", "self", ".", "java", ".", "WhitespaceAnalyzer", "(", ")", ")", ")", "\n", "", "except", "self", ".", "java", ".", "JavaException", "as", "e", ":", "\n", "                ", "raise", "PatapscoError", "(", "e", ")", "\n", "", "", "return", "self", ".", "_writer", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer._create_field_type": [[47, 54], ["index.LuceneIndexer.java.FieldType", "index.LuceneIndexer.field_type.setStored", "index.LuceneIndexer.field_type.setTokenized", "index.LuceneIndexer.field_type.setStoreTermVectors", "index.LuceneIndexer.field_type.setIndexOptions", "index.LuceneIndexer.field_type.freeze"], "methods", ["None"], ["", "def", "_create_field_type", "(", "self", ")", ":", "\n", "        ", "self", ".", "field_type", "=", "self", ".", "java", ".", "FieldType", "(", ")", "\n", "self", ".", "field_type", ".", "setStored", "(", "False", ")", "\n", "self", ".", "field_type", ".", "setTokenized", "(", "True", ")", "\n", "self", ".", "field_type", ".", "setStoreTermVectors", "(", "True", ")", "\n", "self", ".", "field_type", ".", "setIndexOptions", "(", "self", ".", "java", ".", "IndexOptions", ".", "DOCS_AND_FREQS", ")", "\n", "self", ".", "field_type", ".", "freeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.process": [[55, 75], ["index.LuceneIndexer.java.Document", "index.LuceneIndexer.add", "index.LuceneIndexer.add", "index.LuceneIndexer.java.cast", "index.LuceneIndexer.add", "index.LuceneIndexer.writer.addDocument", "index.LuceneIndexer._create_field_type", "index.LuceneIndexer.java.StringField", "index.LuceneIndexer.java.SortedDocValuesField", "index.LuceneIndexer.java.String", "index.LuceneIndexer.java.Field", "index.LuceneIndexer.java.BytesRef", "doc.text.encode", "doc.id.encode"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer._create_field_type", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.encode", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.encode"], ["", "def", "process", "(", "self", ",", "doc", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            doc (Doc)\n\n        Returns:\n            Doc\n        \"\"\"", "\n", "if", "not", "self", ".", "lang", ":", "\n", "            ", "self", ".", "lang", "=", "doc", ".", "lang", "\n", "", "if", "not", "self", ".", "field_type", ":", "\n", "            ", "self", ".", "_create_field_type", "(", ")", "\n", "\n", "", "lucene_doc", "=", "self", ".", "java", ".", "Document", "(", ")", "\n", "lucene_doc", ".", "add", "(", "self", ".", "java", ".", "StringField", "(", "\"id\"", ",", "doc", ".", "id", ",", "self", ".", "java", ".", "StoreEnum", ".", "YES", ")", ")", "\n", "lucene_doc", ".", "add", "(", "self", ".", "java", ".", "SortedDocValuesField", "(", "\"id\"", ",", "self", ".", "java", ".", "BytesRef", "(", "doc", ".", "id", ".", "encode", "(", ")", ")", ")", ")", "\n", "text", "=", "self", ".", "java", ".", "cast", "(", "self", ".", "java", ".", "CharSequence", ",", "self", ".", "java", ".", "String", "(", "doc", ".", "text", ".", "encode", "(", "'utf-8'", ")", ")", ")", "# jnius requires this cast", "\n", "lucene_doc", ".", "add", "(", "self", ".", "java", ".", "Field", "(", "\"contents\"", ",", "text", ",", "self", ".", "field_type", ")", ")", "\n", "self", ".", "writer", ".", "addDocument", "(", "lucene_doc", ")", "\n", "return", "doc", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end": [[76, 82], ["super().end", "index.LuceneIndexer._close", "open", "fp.write"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.end", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer._close"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "\"\"\"End a job\"\"\"", "\n", "with", "open", "(", "self", ".", "base", "/", "'.lang'", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "fp", ".", "write", "(", "self", ".", "lang", ")", "\n", "", "super", "(", ")", ".", "end", "(", ")", "\n", "self", ".", "_close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer._close": [[83, 89], ["index.LuceneIndexer._writer.close", "index.LuceneIndexer._dir.close"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close"], ["", "def", "_close", "(", "self", ")", ":", "\n", "        ", "\"\"\"Close the writer and any related resources\"\"\"", "\n", "if", "self", ".", "_writer", ":", "\n", "            ", "self", ".", "_writer", ".", "close", "(", ")", "\n", "", "if", "self", ".", "_dir", ":", "\n", "            ", "self", ".", "_dir", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.index.LuceneIndexer.reduce": [[90, 101], ["LOGGER.debug", "index.LuceneIndexer.java.FSDirectory.open", "index.LuceneIndexer.writer.addIndexes", "index.close", "index.LuceneIndexer.java.Paths.get", "error.PatapscoError", "str", "str", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.retrieve.PSQSearcher.close", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get"], ["", "", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "\"\"\"Reduce from multiple parallel indexes to a single index\"\"\"", "\n", "LOGGER", ".", "debug", "(", "\"Reducing to a single lucene index from %s\"", ",", "', '", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "dirs", ")", ")", "\n", "indexes", "=", "[", "self", ".", "java", ".", "FSDirectory", ".", "open", "(", "self", ".", "java", ".", "Paths", ".", "get", "(", "str", "(", "item", ")", ")", ")", "for", "item", "in", "dirs", "]", "\n", "try", ":", "\n", "            ", "self", ".", "writer", ".", "addIndexes", "(", "*", "indexes", ")", "\n", "", "except", "self", ".", "java", ".", "JavaException", "as", "e", ":", "\n", "            ", "raise", "PatapscoError", "(", "f\"Reducing parallel index failed with message: {e}\"", ")", "\n", "", "[", "index", ".", "close", "(", ")", "for", "index", "in", "indexes", "]", "\n", "# need to record the documents language in the new index", "\n", "self", ".", "lang", "=", "(", "pathlib", ".", "Path", "(", "dirs", "[", "0", "]", ")", "/", "\".lang\"", ")", ".", "read_text", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.__init__": [[15, 38], ["run.Runner.setup_logging", "LOGGER.info", "isinstance", "LOGGER.info", "job.JobBuilder().build", "LOGGER.info", "helpers.ConfigHelper.load", "helpers.ConfigHelper.prepare", "run.Runner.add_file_logging", "copy.deepcopy", "job.JobBuilder", "pathlib.Path().absolute", "pathlib.Path().absolute", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.setup_logging", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.job.JobBuilder.build", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.prepare", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.add_file_logging"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "debug", "=", "False", ",", "overrides", "=", "None", ",", "job_type", "=", "JobType", ".", "NORMAL", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            config (str|dict): path to configuration file or a configuration dictionary\n            debug (bool): whether to run in debug mode\n            overrides (list): Optional list of key value pair overrides of config parameters\n            job_type (JobType): internal parameter to select between jobs\n            **kwargs (dict): keyword args\n        \"\"\"", "\n", "self", ".", "job_type", "=", "job_type", "\n", "self", ".", "setup_logging", "(", "debug", ",", "job_type", ")", "\n", "LOGGER", ".", "info", "(", "f\"Patapsco version {__version__}\"", ")", "\n", "if", "isinstance", "(", "config", ",", "str", ")", ":", "\n", "            ", "LOGGER", ".", "info", "(", "f\"Configuration: {pathlib.Path(config).absolute()}\"", ")", "\n", "conf", "=", "ConfigHelper", ".", "load", "(", "config", ",", "overrides", ")", "\n", "", "else", ":", "\n", "# using a config dictionary", "\n", "            ", "conf", "=", "ConfigHelper", ".", "prepare", "(", "copy", ".", "deepcopy", "(", "config", ")", ",", "overrides", ")", "\n", "", "LOGGER", ".", "info", "(", "f\"Writing output to: {pathlib.Path(conf.run.path).absolute()}\"", ")", "\n", "if", "job_type", "==", "JobType", ".", "NORMAL", ":", "\n", "# no need to log to file with grid jobs", "\n", "            ", "self", ".", "add_file_logging", "(", "conf", ".", "run", ".", "path", ")", "\n", "", "self", ".", "job", "=", "JobBuilder", "(", "conf", ",", "job_type", ",", "**", "kwargs", ")", ".", "build", "(", "debug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run": [[39, 42], ["run.Runner.job.run"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "sub_job_flag", "=", "self", ".", "job_type", "==", "JobType", ".", "MAP", "\n", "self", ".", "job", ".", "run", "(", "sub_job", "=", "sub_job_flag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.setup_logging": [[43, 66], ["logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "bool", "logging.getLogger.setLevel", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler", "logging.StreamHandler", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.Formatter", "logging.Formatter", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.StreamHandler.setFormatter", "logging.StreamHandler.addFilter", "logging.StreamHandler.addFilter", "util.LoggingFilter", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.handlers.MemoryHandler", "logging.handlers.MemoryHandler", "logging.handlers.MemoryHandler", "logging.handlers.MemoryHandler", "logging.handlers.MemoryHandler.setLevel", "logging.handlers.MemoryHandler.setLevel", "logging.handlers.MemoryHandler.setFormatter", "logging.handlers.MemoryHandler.setFormatter", "logging.handlers.MemoryHandler.addFilter", "logging.handlers.MemoryHandler.addFilter", "util.LoggingFilter", "logging.getLogger.addHandler", "logging.getLogger.addHandler"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "setup_logging", "(", "debug", ",", "job_type", ")", ":", "\n", "        ", "log_level", "=", "logging", ".", "DEBUG", "if", "debug", "else", "logging", ".", "INFO", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'patapsco'", ")", "\n", "initialized", "=", "bool", "(", "logger", ".", "handlers", ")", "\n", "logger", ".", "setLevel", "(", "log_level", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "log_level", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "console", ".", "addFilter", "(", "LoggingFilter", "(", ")", ")", "\n", "if", "not", "initialized", ":", "\n", "# if using this as a library, we only want to add console logging once", "\n", "            ", "logger", ".", "addHandler", "(", "console", ")", "\n", "", "if", "job_type", "==", "JobType", ".", "NORMAL", ":", "\n", "            ", "buffer", "=", "logging", ".", "handlers", ".", "MemoryHandler", "(", "1024", ")", "\n", "buffer", ".", "setLevel", "(", "log_level", ")", "\n", "buffer", ".", "setFormatter", "(", "formatter", ")", "\n", "buffer", ".", "addFilter", "(", "LoggingFilter", "(", ")", ")", "\n", "if", "initialized", ":", "\n", "                ", "logger", ".", "handlers", "[", "1", "]", "=", "buffer", "\n", "", "else", ":", "\n", "                ", "logger", ".", "addHandler", "(", "buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.add_file_logging": [[67, 78], ["logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "pathlib.Path", "pathlib.Path.mkdir", "logging.FileHandler", "logging.FileHandler", "logging.FileHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.FileHandler.setFormatter", "logging.getLogger.handlers[].setTarget", "logging.getLogger.handlers[].setTarget", "logging.getLogger.handlers[].flush", "logging.getLogger.handlers[].flush"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "add_file_logging", "(", "path", ")", ":", "\n", "        ", "logger", "=", "logging", ".", "getLogger", "(", "'patapsco'", ")", "\n", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "file", "=", "logging", ".", "FileHandler", "(", "path", "/", "'patapsco.log'", ")", "\n", "file", ".", "setLevel", "(", "logger", ".", "level", ")", "\n", "file", ".", "setFormatter", "(", "logger", ".", "handlers", "[", "0", "]", ".", "formatter", ")", "\n", "logger", ".", "handlers", "[", "1", "]", ".", "setTarget", "(", "file", ")", "\n", "logger", ".", "handlers", "[", "1", "]", ".", "flush", "(", ")", "\n", "logger", ".", "handlers", "[", "1", "]", "=", "file", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.TrecQrelsReader.__init__": [[30, 33], ["util.GlobIterator"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "path", "=", "config", ".", "path", "\n", "self", ".", "qrels_iter", "=", "GlobIterator", "(", "config", ".", "path", ",", "parse_qrels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.TrecQrelsReader.read": [[34, 43], ["None"], "methods", ["None"], ["", "def", "read", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            dictionary of query_id -> {doc_id: relevance}\n        \"\"\"", "\n", "data", "=", "{", "}", "\n", "for", "qrels", "in", "self", ".", "qrels_iter", ":", "\n", "            ", "data", "=", "{", "**", "data", ",", "**", "qrels", "}", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.IRDSQrelsReader.__init__": [[48, 52], ["ir_datasets.load"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "path", "=", "config", ".", "path", "\n", "import", "ir_datasets", "\n", "self", ".", "dataset", "=", "ir_datasets", ".", "load", "(", "config", ".", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.IRDSQrelsReader.read": [[53, 59], ["score.IRDSQrelsReader.dataset.qrels.asdict"], "methods", ["None"], ["", "def", "read", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            dictionary of query_id -> {doc_id: relevance}\n        \"\"\"", "\n", "return", "self", ".", "dataset", ".", "qrels", ".", "asdict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer.__init__": [[64, 77], ["score.Scorer._preprocess_metrics", "QrelsReaderFactory.create().read", "score.Scorer._validate_metrics", "LOGGER.warning", "QrelsReaderFactory.create"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._preprocess_metrics", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.IRDSQrelsReader.read", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._validate_metrics", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create"], ["def", "__init__", "(", "self", ",", "qrels_config", ",", "metrics", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            qrels_config (PathConfig): Config for the qrels file or glob for multiple files.\n            metrics (list): List of metrics names.\n        \"\"\"", "\n", "self", ".", "pytrec_eval_avail", "=", "'pytrec_eval'", "in", "sys", ".", "modules", "\n", "if", "not", "self", ".", "pytrec_eval_avail", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "\"pytrec_eval is not installed so no scoring is available\"", ")", "\n", "return", "\n", "", "self", ".", "metrics", "=", "self", ".", "_preprocess_metrics", "(", "metrics", ")", "\n", "self", ".", "qrels", "=", "QrelsReaderFactory", ".", "create", "(", "qrels_config", ")", ".", "read", "(", ")", "\n", "self", ".", "_validate_metrics", "(", "self", ".", "metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._preprocess_metrics": [[78, 83], ["m.replace"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_preprocess_metrics", "(", "metrics", ")", ":", "\n", "        ", "\"\"\"Replace @ with _ and standardize ndcg_prime\"\"\"", "\n", "metrics", "=", "[", "m", ".", "replace", "(", "'@'", ",", "'_'", ")", "for", "m", "in", "metrics", "]", "\n", "return", "[", "m", "if", "m", "!=", "\"ndcg'\"", "else", "\"ndcg_prime\"", "for", "m", "in", "metrics", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._validate_metrics": [[84, 91], ["pytrec_eval.RelevanceEvaluator", "error.ConfigError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_validate_metrics", "(", "metrics", ")", ":", "\n", "        ", "metrics", "=", "[", "m", "for", "m", "in", "metrics", "if", "m", "!=", "\"ndcg_prime\"", "]", "\n", "try", ":", "\n", "            ", "pytrec_eval", ".", "RelevanceEvaluator", "(", "{", "}", ",", "metrics", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "            ", "raise", "ConfigError", "(", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._filter_dict": [[92, 96], ["d.pop"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_filter_dict", "(", "d", ",", "filter", ")", ":", "\n", "        ", "for", "i", "in", "filter", ":", "\n", "            ", "d", ".", "pop", "(", "i", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._add_dict": [[97, 101], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_add_dict", "(", "d", ",", "misses", ")", ":", "\n", "        ", "for", "i", "in", "misses", ":", "\n", "            ", "d", "[", "i", "]", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer.score": [[102, 139], ["pytrec_eval.RelevanceEvaluator", "pytrec_eval.RelevanceEvaluator.evaluate", "open", "pytrec_eval.parse_run", "set", "set", "LOGGER.warning", "score.Scorer._filter_dict", "set", "set", "LOGGER.warning", "score.Scorer._add_dict", "score.Scorer._calc_ndcg_prime", "measures.discard", "pytrec_eval.RelevanceEvaluator.evaluate.keys", "sorted", "LOGGER.info", "score.Scorer._write_scores", "pytrec_eval.parse_run.keys", "score.Scorer.qrels.keys", "score.Scorer.qrels.keys", "pytrec_eval.parse_run.keys", "scores[].update", "sum", "len", "len", "mean_scores.items", "len", "pytrec_eval.RelevanceEvaluator.evaluate.keys", "pytrec_eval.RelevanceEvaluator.evaluate.values"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._filter_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.set", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._add_dict", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._calc_ndcg_prime", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._write_scores"], ["", "", "def", "score", "(", "self", ",", "results_path", ",", "scores_path", ")", ":", "\n", "        ", "\"\"\"Calculate scores at the end of the run.\n\n        Args:\n            results_path (Path): Path to results of a run.\n            scores_path (Path): Path to write scores.\n        \"\"\"", "\n", "if", "not", "self", ".", "pytrec_eval_avail", ":", "\n", "            ", "return", "\n", "\n", "", "with", "open", "(", "results_path", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "system_output", "=", "pytrec_eval", ".", "parse_run", "(", "fp", ")", "\n", "", "remove_from_run", "=", "set", "(", "system_output", ".", "keys", "(", ")", ")", "-", "set", "(", "self", ".", "qrels", ".", "keys", "(", ")", ")", "\n", "if", "remove_from_run", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "f'Omitting {len(remove_from_run)} topics in the run that are not in the qrels'", ")", "\n", "self", ".", "_filter_dict", "(", "system_output", ",", "remove_from_run", ")", "\n", "", "missing_queries", "=", "set", "(", "self", ".", "qrels", ".", "keys", "(", ")", ")", "-", "set", "(", "system_output", ".", "keys", "(", ")", ")", "\n", "if", "missing_queries", ":", "\n", "            ", "LOGGER", ".", "warning", "(", "f\"Missing queries: {', '.join(missing_queries)}\"", ")", "\n", "self", ".", "_add_dict", "(", "system_output", ",", "missing_queries", ")", "\n", "", "measures", "=", "{", "s", "for", "s", "in", "self", ".", "metrics", "}", "\n", "ndcg_prime_results", "=", "{", "}", "\n", "if", "\"ndcg_prime\"", "in", "measures", ":", "\n", "            ", "ndcg_prime_results", "=", "self", ".", "_calc_ndcg_prime", "(", "system_output", ")", "\n", "measures", ".", "discard", "(", "\"ndcg_prime\"", ")", "\n", "", "evaluator", "=", "pytrec_eval", ".", "RelevanceEvaluator", "(", "self", ".", "qrels", ",", "measures", ")", "\n", "scores", "=", "evaluator", ".", "evaluate", "(", "system_output", ")", "\n", "if", "ndcg_prime_results", ":", "\n", "            ", "for", "query", "in", "scores", ".", "keys", "(", ")", ":", "\n", "                ", "scores", "[", "query", "]", ".", "update", "(", "ndcg_prime_results", "[", "query", "]", ")", "\n", "", "", "if", "scores", ":", "\n", "            ", "mean_scores", "=", "{", "}", "\n", "for", "key", "in", "sorted", "(", "self", ".", "metrics", ")", ":", "\n", "                ", "mean_scores", "[", "key", "]", "=", "sum", "(", "data", "[", "key", "]", "for", "data", "in", "scores", ".", "values", "(", ")", ")", "/", "len", "(", "scores", ")", "\n", "", "scores_string", "=", "\", \"", ".", "join", "(", "f\"{m}: {s:.3f}\"", "for", "m", ",", "s", "in", "mean_scores", ".", "items", "(", ")", ")", "\n", "LOGGER", ".", "info", "(", "f\"Average scores over {len(scores.keys())} queries: {scores_string}\"", ")", "\n", "self", ".", "_write_scores", "(", "scores", ",", "scores_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._calc_ndcg_prime": [[140, 162], ["pytrec_eval.RelevanceEvaluator", "collections.defaultdict", "pytrec_eval.RelevanceEvaluator.evaluate", "pytrec_eval.RelevanceEvaluator.evaluate", "pytrec_eval.RelevanceEvaluator.evaluate.keys", "score.Scorer.qrels[].keys"], "methods", ["None"], ["", "", "def", "_calc_ndcg_prime", "(", "self", ",", "system_output", ")", ":", "\n", "        ", "\"\"\"Calculate nDCG'\n\n        For every query, remove document ids that do not belong to the set of\n        judged documents for that query, and run nDCG over the modified output.\n        \"\"\"", "\n", "evaluator", "=", "pytrec_eval", ".", "RelevanceEvaluator", "(", "self", ".", "qrels", ",", "{", "'ndcg'", "}", ")", "\n", "modified_run", "=", "collections", ".", "defaultdict", "(", "dict", ")", "\n", "for", "query_id", "in", "system_output", ":", "\n", "            ", "for", "doc_id", "in", "system_output", "[", "query_id", "]", ":", "\n", "                ", "if", "doc_id", "in", "self", ".", "qrels", "[", "query_id", "]", ".", "keys", "(", ")", ":", "\n", "                    ", "modified_run", "[", "query_id", "]", "[", "doc_id", "]", "=", "system_output", "[", "query_id", "]", "[", "doc_id", "]", "\n", "", "", "", "ndcg_prime_scores", "=", "evaluator", ".", "evaluate", "(", "modified_run", ")", "\n", "ndcg_scores", "=", "evaluator", ".", "evaluate", "(", "system_output", ")", "\n", "combined_scores", "=", "{", "}", "\n", "for", "query_id", "in", "system_output", ":", "\n", "            ", "if", "query_id", "in", "ndcg_prime_scores", ".", "keys", "(", ")", ":", "\n", "                ", "combined_scores", "[", "query_id", "]", "=", "{", "\"ndcg_prime\"", ":", "ndcg_prime_scores", "[", "query_id", "]", "[", "'ndcg'", "]", "}", "\n", "", "else", ":", "\n", "# if no ndcg_prime result, ndcg_prime == ndcg", "\n", "                ", "combined_scores", "[", "query_id", "]", "=", "{", "\"ndcg_prime\"", ":", "ndcg_scores", "[", "query_id", "]", "[", "'ndcg'", "]", "}", "\n", "", "", "return", "combined_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.Scorer._write_scores": [[163, 173], ["open", "sorted", "sorted", "scores.items", "sorted", "pytrec_eval.compute_aggregated_measure", "print", "results_dict.items", "print", "scores.values"], "methods", ["None"], ["", "def", "_write_scores", "(", "self", ",", "scores", ",", "scores_path", ")", ":", "\n", "        ", "with", "open", "(", "scores_path", ",", "'w'", ")", "as", "fp", ":", "\n", "            ", "for", "q", ",", "results_dict", "in", "sorted", "(", "scores", ".", "items", "(", ")", ")", ":", "\n", "                ", "for", "measure", ",", "value", "in", "sorted", "(", "results_dict", ".", "items", "(", ")", ")", ":", "\n", "                    ", "print", "(", "'{:25s}\\t{}\\t{:.4f}'", ".", "format", "(", "measure", ",", "q", ",", "value", ")", ",", "file", "=", "fp", ")", "\n", "\n", "", "", "for", "measure", "in", "sorted", "(", "self", ".", "metrics", ")", ":", "\n", "                ", "query_scores", "=", "[", "results_dict", "[", "measure", "]", "for", "results_dict", "in", "scores", ".", "values", "(", ")", "]", "\n", "agg", "=", "pytrec_eval", ".", "compute_aggregated_measure", "(", "measure", ",", "query_scores", ")", "\n", "print", "(", "'{:25s}\\t{}\\t{:.4f}'", ".", "format", "(", "measure", ",", "'all'", ",", "agg", ")", ",", "file", "=", "fp", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.psq_setup.configure_classpath_psq": [[12, 25], ["str", "glob.glob", "max", "jnius_config.add_classpath", "jnius_config.add_classpath", "os.path.join", "Exception", "Exception", "str", "pathlib.Path", "os.path.abspath", "list", "pathlib.Path"], "function", ["None"], ["def", "configure_classpath_psq", "(", ")", ":", "\n", "    ", "anserini_root", "=", "str", "(", "Path", "(", "pyserini", ".", "__file__", ")", ".", "parent", "/", "'resources/jars/'", ")", "\n", "paths", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "anserini_root", ",", "'anserini-*-fatjar.jar'", ")", ")", "\n", "if", "not", "paths", ":", "\n", "        ", "raise", "Exception", "(", "'No matching jar file found in {}'", ".", "format", "(", "os", ".", "path", ".", "abspath", "(", "anserini_root", ")", ")", ")", "\n", "\n", "", "latest", "=", "max", "(", "paths", ",", "key", "=", "os", ".", "path", ".", "getctime", ")", "\n", "jnius_config", ".", "add_classpath", "(", "latest", ")", "\n", "psq_path", "=", "(", "Path", "(", "__file__", ")", ".", "parent", "/", "'resources'", "/", "'jars'", ")", ".", "glob", "(", "'psq*.jar'", ")", "\n", "if", "not", "psq_path", ":", "\n", "        ", "raise", "Exception", "(", "'No matching jar file found in resources/jars'", ")", "\n", "\n", "", "jnius_config", ".", "add_classpath", "(", "str", "(", "list", "(", "psq_path", ")", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.psq_setup.skip_setting_classpath": [[27, 29], ["None"], "function", ["None"], ["", "def", "skip_setting_classpath", "(", "anserini_root", "=", "\".\"", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabase.__init__": [[36, 55], ["sqlitedict.SqliteDict.__init__", "pathlib.Path", "error.ConfigError", "str", "database.DocumentDatabase.path.exists", "database.DocumentDatabase.db_dir.mkdir"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__"], ["def", "__init__", "(", "self", ",", "run_path", ",", "output_dir", ",", "readonly", "=", "False", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Path to run directory.\n            output_dir (str): Database directory name.\n            readonly (bool): Whether to support adding documents.\n        \"\"\"", "\n", "kwargs", "[", "'autocommit'", "]", "=", "True", "\n", "self", ".", "readonly", "=", "readonly", "\n", "self", ".", "db_dir", "=", "pathlib", ".", "Path", "(", "run_path", ")", "/", "output_dir", "\n", "self", ".", "path", "=", "self", ".", "db_dir", "/", "\"docs.db\"", "\n", "if", "readonly", "and", "not", "self", ".", "path", ".", "exists", "(", ")", ":", "\n", "            ", "raise", "ConfigError", "(", "f\"Document database does not exist: {self.path}\"", ")", "\n", "", "elif", "not", "readonly", ":", "\n", "            ", "self", ".", "db_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "", "kwargs", "[", "'encode'", "]", "=", "encode", "\n", "kwargs", "[", "'decode'", "]", "=", "decode", "\n", "kwargs", "[", "'tablename'", "]", "=", "'patapsco'", "\n", "super", "(", ")", ".", "__init__", "(", "str", "(", "self", ".", "path", ")", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabase.__setitem__": [[56, 60], ["super().__setitem__"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabase.__setitem__"], ["", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "self", ".", "readonly", ":", "\n", "            ", "return", "\n", "", "super", "(", ")", ".", "__setitem__", "(", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabase.__getitem__": [[61, 66], ["sqlitedict.SqliteDict.__getitem__", "error.BadDataError"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabase.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "super", "(", ")", ".", "__getitem__", "(", "key", ")", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "BadDataError", "(", "f\"Unable to retrieve doc {key} from the database\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DocumentDatabaseFactory.create": [[69, 75], ["util.file.is_complete", "database.DocumentDatabase", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_complete"], ["    ", "@", "staticmethod", "\n", "def", "create", "(", "run_path", ",", "output_path", ",", "readonly", "=", "False", ")", ":", "\n", "        ", "db_path", "=", "pathlib", ".", "Path", "(", "run_path", ")", "/", "output_path", "\n", "if", "is_complete", "(", "db_path", ")", ":", "\n", "            ", "readonly", "=", "True", "\n", "", "return", "DocumentDatabase", "(", "run_path", ",", "output_path", ",", "readonly", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.__init__": [[80, 89], ["pipeline.Task.__init__", "database.DocumentDatabaseFactory.create"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create"], ["def", "__init__", "(", "self", ",", "run_path", ",", "config", ",", "artifact_config", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            run_path (str): Path of run directory.\n            config (DatabaseConfig): Database config\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "run_path", ",", "artifact_config", ",", "config", ".", "output", ")", "\n", "self", ".", "output_path", "=", "config", ".", "output", "\n", "self", ".", "db", "=", "DocumentDatabaseFactory", ".", "create", "(", "run_path", ",", "config", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process": [[90, 103], ["docs.Doc"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "doc", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            doc (Doc)\n\n        Returns:\n            Doc\n        \"\"\"", "\n", "# the original_text was added by document processor for us to pull off", "\n", "db_doc", "=", "Doc", "(", "doc", ".", "id", ",", "lang", "=", "doc", ".", "lang", ",", "text", "=", "doc", ".", "original_text", ",", "date", "=", "doc", ".", "date", ")", "\n", "self", ".", "db", "[", "doc", ".", "id", "]", "=", "db_doc", "\n", "del", "doc", ".", "original_text", "\n", "return", "doc", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.reduce": [[104, 116], ["LOGGER.debug", "sqlitedict.SqliteDict", "str", "str"], "methods", ["None"], ["", "def", "reduce", "(", "self", ",", "dirs", ")", ":", "\n", "        ", "LOGGER", ".", "debug", "(", "\"Reducing to a sqlite db from %s\"", ",", "', '", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "dirs", ")", ")", "\n", "for", "base", "in", "dirs", ":", "\n", "            ", "path", "=", "base", "/", "'docs.db'", "\n", "kwargs", "=", "{", "\n", "'encode'", ":", "encode", ",", "\n", "'decode'", ":", "decode", ",", "\n", "'tablename'", ":", "'patapsco'", "\n", "}", "\n", "db", "=", "sqlitedict", ".", "SqliteDict", "(", "str", "(", "path", ")", ",", "**", "kwargs", ")", "\n", "for", "doc_id", "in", "db", ":", "\n", "                ", "self", ".", "db", "[", "doc_id", "]", "=", "db", "[", "doc_id", "]", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.encode": [[16, 19], ["json.dumps"], "function", ["None"], ["def", "encode", "(", "doc", ")", ":", "\n", "    ", "\"\"\"Encode an object as json for the database\"\"\"", "\n", "return", "json", ".", "dumps", "(", "doc", ",", "cls", "=", "DataclassJSONEncoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.decode": [[21, 24], ["json.loads", "docs.Doc"], "function", ["None"], ["", "def", "decode", "(", "s", ")", ":", "\n", "    ", "\"\"\"Decode a json string to Doc object\"\"\"", "\n", "return", "json", ".", "loads", "(", "s", ",", "object_hook", "=", "lambda", "d", ":", "Doc", "(", "**", "d", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.map.main": [[8, 32], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "patapsco.Runner", "patapsco.Runner.run", "sys.exit", "traceback.print_exc", "print"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Patapsco grid mapper\"", ")", "\n", "parser", ".", "add_argument", "(", "\"config\"", ",", "help", "=", "\"Configuration file for the run\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--debug\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"Include debug information in logging\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-v\"", ",", "\"--version\"", ",", "action", "=", "\"version\"", ",", "version", "=", "f\"Patapsco {__version__}\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--job\"", ",", "type", "=", "int", ",", "required", "=", "True", ",", "help", "=", "\"Job id starting from 0\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--increment\"", ",", "type", "=", "int", ",", "required", "=", "True", ",", "help", "=", "\"Size of a job increment\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stage\"", ",", "type", "=", "int", ",", "required", "=", "True", ",", "choices", "=", "{", "1", ",", "2", "}", ",", "help", "=", "\"Pipeline stage\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "parallel_args", "=", "{", "\n", "'job'", ":", "args", ".", "job", ",", "\n", "'increment'", ":", "args", ".", "increment", ",", "\n", "'stage'", ":", "args", ".", "stage", "\n", "}", "\n", "try", ":", "\n", "        ", "runner", "=", "Runner", "(", "args", ".", "config", ",", "debug", "=", "args", ".", "debug", ",", "job_type", "=", "JobType", ".", "MAP", ",", "**", "parallel_args", ")", "\n", "runner", ".", "run", "(", ")", "\n", "", "except", "PatapscoError", "as", "error", ":", "\n", "        ", "if", "args", ".", "debug", ":", "\n", "            ", "traceback", ".", "print_exc", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "f\"Error: {error}\"", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.query.main": [[10, 68], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_mutually_exclusive_group", "parser.add_mutually_exclusive_group.add_argument", "parser.add_mutually_exclusive_group.add_argument", "argparse.ArgumentParser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "argparse.ArgumentParser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "argparse.ArgumentParser.add_argument_group", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "parser.add_argument_group.add_argument", "argparse.ArgumentParser.parse_args", "patapsco.schema.TextProcessorConfig", "patapsco.text.TextProcessor", "patapsco.text.TextProcessor.begin", "lang_path.read_text().strip", "patapsco.schema.QueriesConfig", "patapsco.topics.QueryProcessor", "patapsco.topics.QueryProcessor.begin", "patapsco.topics.Query", "patapsco.topics.QueryProcessor.process", "patapsco.retrieve.RetrieveConfig", "patapsco.retrieve.PyseriniRetriever", "patapsco.retrieve.PyseriniRetriever.begin", "patapsco.retrieve.PyseriniRetriever.process", "pathlib.Path", "patapsco.schema.PSQConfig", "enumerate", "print", "lang_path.read_text", "patapsco.schema.RetrieveInputConfig", "print", "patapsco.schema.PathConfig"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Query a lucene index.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-i\"", ",", "\"--index\"", ",", "required", "=", "True", ",", "help", "=", "\"Path to lucene index\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-q\"", ",", "\"--query\"", ",", "required", "=", "True", ",", "help", "=", "\"Query string\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--query_lang\"", ",", "default", "=", "\"eng\"", ",", "choices", "=", "[", "\"eng\"", ",", "\"fas\"", ",", "\"rus\"", ",", "\"zho\"", "]", ",", "help", "=", "\"Language to query in\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stem\"", ",", "default", "=", "False", ",", "choices", "=", "[", "\"spacy\"", ",", "\"stanza\"", ",", "\"porter\"", "]", ",", "help", "=", "\"If set, stem query\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stopwords\"", ",", "default", "=", "False", ",", "choices", "=", "[", "\"lucene\"", ",", "\"baidu\"", "]", ",", "help", "=", "\"If set, remove stopwords\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-c\"", ",", "\"--count\"", ",", "type", "=", "int", ",", "help", "=", "\"How many results to return\"", ")", "\n", "\n", "query_syntax", "=", "parser", ".", "add_mutually_exclusive_group", "(", ")", "\n", "query_syntax", ".", "add_argument", "(", "\"--bool\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"If set, expect boolean query string\"", ")", "\n", "query_syntax", ".", "add_argument", "(", "\"--psq\"", ",", "help", "=", "\"Path to PSQ json dictionary\"", ")", "\n", "\n", "bm25_group", "=", "parser", ".", "add_argument_group", "(", "\"bm25 parameters\"", ")", "\n", "bm25_group", ".", "add_argument", "(", "\"--b\"", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "\"b parameter\"", ")", "\n", "bm25_group", ".", "add_argument", "(", "\"--k1\"", ",", "type", "=", "float", ",", "default", "=", "0.4", ",", "help", "=", "\"k1 parameter\"", ")", "\n", "\n", "qld_group", "=", "parser", ".", "add_argument_group", "(", "\"qld parameters\"", ")", "\n", "qld_group", ".", "add_argument", "(", "\"--qld\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"If set, retrieval uses QLD\"", ")", "\n", "qld_group", ".", "add_argument", "(", "\"--mu\"", ",", "type", "=", "int", ",", "default", "=", "1000", ",", "help", "=", "\"mu parameter\"", ")", "\n", "\n", "rm3_group", "=", "parser", ".", "add_argument_group", "(", "\"rm3 parameters\"", ")", "\n", "rm3_group", ".", "add_argument", "(", "\"--rm3\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"If set, retrieval uses  rm3 query expansion\"", ")", "\n", "rm3_group", ".", "add_argument", "(", "\"--fb_terms\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"fb terms parameter\"", ")", "\n", "rm3_group", ".", "add_argument", "(", "\"--fb_docs\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"fb docs parameter\"", ")", "\n", "rm3_group", ".", "add_argument", "(", "\"--original_query_weight\"", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "\"original query weight parameter\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "name", "=", "\"psq\"", "if", "args", ".", "psq", "else", "\"qld\"", "if", "args", ".", "qld", "else", "\"bool\"", "if", "args", ".", "bool", "else", "\"bm25\"", "\n", "parse", "=", "True", "if", "args", ".", "bool", "else", "False", "\n", "\n", "text_config", "=", "TextProcessorConfig", "(", "tokenize", "=", "\"whitespace\"", ",", "stopwords", "=", "args", ".", "stopwords", ",", "stem", "=", "args", ".", "stem", ")", "\n", "processor", "=", "TextProcessor", "(", "run_path", "=", "\"\"", ",", "config", "=", "text_config", ",", "lang", "=", "args", ".", "query_lang", ")", "\n", "processor", ".", "begin", "(", ")", "\n", "\n", "lang_path", "=", "pathlib", ".", "Path", "(", "args", ".", "index", ")", "/", "'.lang'", "\n", "doc_lang", "=", "lang_path", ".", "read_text", "(", ")", ".", "strip", "(", ")", "\n", "psq", "=", "PSQConfig", "(", "path", "=", "args", ".", "psq", ",", "lang", "=", "doc_lang", ")", "if", "args", ".", "psq", "else", "None", "\n", "queries", "=", "QueriesConfig", "(", "process", "=", "text_config", ",", "psq", "=", "psq", ",", "parse", "=", "parse", ")", "\n", "qp", "=", "QueryProcessor", "(", "run_path", "=", "\"\"", ",", "config", "=", "queries", ",", "lang", "=", "args", ".", "query_lang", ")", "\n", "qp", ".", "begin", "(", ")", "\n", "query", "=", "Query", "(", "\"1\"", ",", "lang", "=", "args", ".", "query_lang", ",", "query", "=", "\"\"", ",", "text", "=", "args", ".", "query", ",", "report", "=", "\"\"", ")", "\n", "proc", "=", "qp", ".", "process", "(", "query", ")", "\n", "\n", "conf", "=", "RetrieveConfig", "(", "name", "=", "name", ",", "input", "=", "RetrieveInputConfig", "(", "index", "=", "PathConfig", "(", "path", "=", "args", ".", "index", ")", ")", ",", "parse", "=", "parse", ",", "k1", "=", "args", ".", "k1", ",", "b", "=", "args", ".", "b", ",", "mu", "=", "args", ".", "mu", ",", "rm3", "=", "args", ".", "rm3", ",", "\n", "fb_terms", "=", "args", ".", "fb_terms", ",", "fb_docs", "=", "args", ".", "fb_docs", ",", "original_query_weight", "=", "args", ".", "original_query_weight", ")", "\n", "pr", "=", "PyseriniRetriever", "(", "run_path", "=", "\"\"", ",", "config", "=", "conf", ")", "\n", "pr", ".", "begin", "(", ")", "\n", "results", "=", "pr", ".", "process", "(", "proc", ")", "\n", "if", "results", ".", "results", ":", "\n", "        ", "for", "i", ",", "result", "in", "enumerate", "(", "results", ".", "results", ")", ":", "\n", "            ", "if", "i", "==", "args", ".", "count", ":", "\n", "                ", "break", "\n", "", "print", "(", "f\"{result.doc_id}\\t{result.score}\"", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"No results\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.reduce.main": [[8, 28], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "patapsco.Runner", "patapsco.Runner.run", "sys.exit", "traceback.print_exc", "print"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Patapsco grid reducer\"", ")", "\n", "parser", ".", "add_argument", "(", "\"config\"", ",", "help", "=", "\"Configuration file for the run\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--debug\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"Include debug information in logging\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-v\"", ",", "\"--version\"", ",", "action", "=", "\"version\"", ",", "version", "=", "f\"Patapsco {__version__}\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stage\"", ",", "type", "=", "int", ",", "required", "=", "True", ",", "choices", "=", "{", "1", ",", "2", "}", ",", "help", "=", "\"Pipeline stage\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "parallel_args", "=", "{", "\n", "'stage'", ":", "args", ".", "stage", "\n", "}", "\n", "try", ":", "\n", "        ", "runner", "=", "Runner", "(", "args", ".", "config", ",", "debug", "=", "args", ".", "debug", ",", "job_type", "=", "JobType", ".", "REDUCE", ",", "**", "parallel_args", ")", "\n", "runner", ".", "run", "(", ")", "\n", "", "except", "PatapscoError", "as", "error", ":", "\n", "        ", "if", "args", ".", "debug", ":", "\n", "            ", "traceback", ".", "print_exc", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "f\"Error: {error}\"", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.normalize.main": [[8, 17], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "patapsco.util.normalize.NormalizerFactory.create", "pathlib.Path().read_text", "print", "patapsco.schema.NormalizationConfig", "NormalizerFactory.create.pre_normalize", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Normalize a text file. Output to stdout.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-l\"", ",", "\"--lang\"", ",", "required", "=", "True", ",", "help", "=", "\"ISO 639-3 language code\"", ")", "\n", "parser", ".", "add_argument", "(", "\"file\"", ",", "help", "=", "\"Path to text file to normalize\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "normalizer", "=", "NormalizerFactory", ".", "create", "(", "args", ".", "lang", ",", "NormalizationConfig", "(", "lowercase", "=", "False", ")", ")", "\n", "text", "=", "pathlib", ".", "Path", "(", "args", ".", "file", ")", ".", "read_text", "(", ")", "\n", "print", "(", "normalizer", ".", "pre_normalize", "(", "text", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.main.main": [[8, 26], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "patapsco.Runner", "patapsco.Runner.run", "sys.exit", "traceback.print_exc", "print"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"SCALE 2021 Pipeline\"", ")", "\n", "parser", ".", "add_argument", "(", "\"config\"", ",", "help", "=", "\"Configuration file for the run\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--debug\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"Include debug information in logging\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-v\"", ",", "\"--version\"", ",", "action", "=", "\"version\"", ",", "version", "=", "f\"Patapsco {__version__}\"", ")", "\n", "parser", ".", "add_argument", "(", "\"-s\"", ",", "\"--set\"", ",", "action", "=", "'append'", ",", "metavar", "=", "\"KEY=VALUE\"", ",", "\n", "help", "=", "\"Key-value pair for overriding a parameter. Flag can be used more than once.\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "try", ":", "\n", "        ", "runner", "=", "Runner", "(", "args", ".", "config", ",", "debug", "=", "args", ".", "debug", ",", "overrides", "=", "args", ".", "set", ")", "\n", "runner", ".", "run", "(", ")", "\n", "", "except", "PatapscoError", "as", "error", ":", "\n", "        ", "if", "args", ".", "debug", ":", "\n", "            ", "traceback", ".", "print_exc", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "f\"Error: {error}\"", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.bin.web.main": [[11, 55], ["logging.getLogger", "logging.getLogger.setLevel", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pathlib.Path().absolute", "patapsco.ConfigHelper.load", "patapsco.DocumentDatabase", "patapsco.QueryProcessor", "patapsco.QueryProcessor.begin", "patapsco.RetrieverFactory.create", "RetrieverFactory.create.begin", "flask.Flask", "flask_cors.CORS", "flask.Flask.route", "flask_cors.cross_origin", "flask.Flask.route", "flask_cors.cross_origin", "flask.Flask.run", "str", "str", "str", "str", "flask.jsonify", "patapsco.Query", "patapsco.QueryProcessor.process", "flask.jsonify", "pathlib.Path", "flask.abort", "RetrieverFactory.create.process"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.results.TrecResultsWriter.begin", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.run.Runner.run", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.DatabaseWriter.process"], ["def", "main", "(", ")", ":", "\n", "    ", "logger", "=", "logging", ".", "getLogger", "(", "'patapsco'", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "WARNING", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "WARNING", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "console", ")", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Run web services over a lucene index.\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--run\"", ",", "required", "=", "True", ",", "help", "=", "\"Path to a run directory\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--port\"", ",", "required", "=", "True", ",", "type", "=", "int", ",", "help", "=", "\"Port for web services\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "run_dir", "=", "pathlib", ".", "Path", "(", "args", ".", "run", ")", ".", "absolute", "(", ")", "\n", "config_path", "=", "run_dir", "/", "\"config.yml\"", "\n", "conf", "=", "ConfigHelper", ".", "load", "(", "str", "(", "config_path", ")", ")", "\n", "\n", "db", "=", "DocumentDatabase", "(", "str", "(", "run_dir", ")", ",", "conf", ".", "database", ".", "output", ",", "True", ")", "\n", "lang", "=", "conf", ".", "topics", ".", "input", ".", "lang", "\n", "query_processor", "=", "QueryProcessor", "(", "str", "(", "run_dir", ")", ",", "conf", ".", "queries", ",", "lang", ")", "\n", "query_processor", ".", "begin", "(", ")", "\n", "retriever", "=", "RetrieverFactory", ".", "create", "(", "str", "(", "run_dir", ")", ",", "conf", ".", "retrieve", ")", "\n", "retriever", ".", "begin", "(", ")", "\n", "\n", "app", "=", "flask", ".", "Flask", "(", "\"Patapsco web services\"", ")", "\n", "flask_cors", ".", "CORS", "(", "app", ")", "\n", "app", ".", "config", "[", "'CORS_HEADERS'", "]", "=", "'Content-Type'", "\n", "\n", "@", "app", ".", "route", "(", "'/doc/<id>'", ")", "\n", "@", "flask_cors", ".", "cross_origin", "(", ")", "\n", "def", "document", "(", "id", ")", ":", "\n", "        ", "if", "id", "not", "in", "db", ":", "\n", "            ", "flask", ".", "abort", "(", "404", ")", "\n", "", "return", "flask", ".", "jsonify", "(", "db", "[", "id", "]", ")", "\n", "\n", "", "@", "app", ".", "route", "(", "'/query/<query>'", ")", "\n", "@", "flask_cors", ".", "cross_origin", "(", ")", "\n", "def", "retrieve", "(", "query", ")", ":", "\n", "        ", "query", "=", "Query", "(", "id", "=", "'web'", ",", "lang", "=", "lang", ",", "query", "=", "query", ",", "text", "=", "query", ",", "report", "=", "None", ")", "\n", "query", "=", "query_processor", ".", "process", "(", "query", ")", "\n", "return", "flask", ".", "jsonify", "(", "retriever", ".", "process", "(", "query", ")", ")", "\n", "\n", "", "app", ".", "run", "(", "'0.0.0.0'", ",", "args", ".", "port", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.path_append": [[8, 19], ["str", "pathlib.Path"], "function", ["None"], ["def", "path_append", "(", "path", ",", "subdirectory", ")", ":", "\n", "    ", "\"\"\"Append a subdirectory to a path\n\n    Args:\n        path (str or Path): base path\n        subdirectory (str): directory to add to path\n\n    Returns:\n        str\n    \"\"\"", "\n", "return", "str", "(", "pathlib", ".", "Path", "(", "path", ")", "/", "subdirectory", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.create_path": [[21, 25], ["pathlib.Path", "pathlib.Path.expanduser"], "function", ["None"], ["", "def", "create_path", "(", "path", ")", ":", "\n", "    ", "\"\"\"Create a Path object expanding ~ for the user's home directory\"\"\"", "\n", "path", "=", "pathlib", ".", "Path", "(", "path", ")", "\n", "return", "path", ".", "expanduser", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding": [[27, 34], ["open", "error.ConfigError"], "function", ["None"], ["", "def", "validate_encoding", "(", "encoding", ")", ":", "\n", "    ", "\"\"\"Validate that this encoding is supported by python\"\"\"", "\n", "try", ":", "\n", "        ", "with", "open", "(", "__file__", ",", "'r'", ",", "encoding", "=", "encoding", ")", ":", "\n", "            ", "pass", "\n", "", "", "except", "LookupError", ":", "\n", "        ", "raise", "ConfigError", "(", "f\"{encoding} is not a valid file encoding\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.delete_dir": [[36, 39], ["shutil.rmtree"], "function", ["None"], ["", "", "def", "delete_dir", "(", "path", ")", ":", "\n", "    ", "\"\"\"Recursively delete a directory\"\"\"", "\n", "shutil", ".", "rmtree", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_dir_empty": [[41, 44], ["any", "pathlib.Path().iterdir", "pathlib.Path"], "function", ["None"], ["", "def", "is_dir_empty", "(", "path", ")", ":", "\n", "    ", "\"\"\"Test whether the directory is empty of files\"\"\"", "\n", "return", "not", "any", "(", "pathlib", ".", "Path", "(", "path", ")", ".", "iterdir", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.touch_complete": [[46, 50], ["file.touch", "pathlib.Path"], "function", ["None"], ["", "def", "touch_complete", "(", "path", ")", ":", "\n", "    ", "\"\"\"Touch a file called .complete in the directory\"\"\"", "\n", "file", "=", "pathlib", ".", "Path", "(", "path", ")", "/", "\".complete\"", "\n", "file", ".", "touch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.is_complete": [[52, 58], ["file.exists", "pathlib.Path", "pathlib.Path"], "function", ["None"], ["", "def", "is_complete", "(", "path", ")", ":", "\n", "    ", "\"\"\"Check if the .complete file exists in directory\"\"\"", "\n", "if", "not", "pathlib", ".", "Path", "(", "path", ")", ".", "exists", ":", "\n", "        ", "return", "False", "\n", "", "file", "=", "pathlib", ".", "Path", "(", "path", ")", "/", "\".complete\"", "\n", "return", "file", ".", "exists", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines": [[60, 71], ["isinstance", "str.endswith", "str", "file.gzip_count_lines", "open"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.gzip_count_lines"], ["", "def", "count_lines", "(", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "    ", "\"\"\"Count lines in a text file\"\"\"", "\n", "if", "isinstance", "(", "path", ",", "pathlib", ".", "Path", ")", ":", "\n", "        ", "path", "=", "str", "(", "path", ")", "\n", "", "if", "path", ".", "endswith", "(", "'.gz'", ")", ":", "\n", "        ", "return", "gzip_count_lines", "(", "path", ")", "\n", "", "count", "=", "0", "\n", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "for", "_", "in", "fp", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.gzip_count_lines": [[73, 79], ["gzip.open"], "function", ["None"], ["", "def", "gzip_count_lines", "(", "path", ")", ":", "\n", "    ", "count", "=", "0", "\n", "with", "gzip", ".", "open", "(", "path", ",", "'rb'", ")", "as", "fp", ":", "\n", "        ", "for", "_", "in", "fp", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.count_lines_with": [[81, 91], ["path.endswith", "file.gzip_count_lines_with", "open"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.gzip_count_lines_with"], ["", "def", "count_lines_with", "(", "string", ",", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "    ", "\"\"\"Count lines in a text file with a particular string\"\"\"", "\n", "if", "path", ".", "endswith", "(", "'.gz'", ")", ":", "\n", "        ", "return", "gzip_count_lines_with", "(", "string", ",", "path", ",", "encoding", ")", "\n", "", "count", "=", "0", "\n", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "for", "line", "in", "fp", ":", "\n", "            ", "if", "string", "in", "line", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.gzip_count_lines_with": [[93, 101], ["string.encode", "gzip.open"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.database.encode"], ["", "def", "gzip_count_lines_with", "(", "string", ",", "path", ",", "encoding", ")", ":", "\n", "    ", "bstr", "=", "string", ".", "encode", "(", "encoding", ")", "\n", "count", "=", "0", "\n", "with", "gzip", ".", "open", "(", "path", ",", "'rb'", ")", "as", "fp", ":", "\n", "        ", "for", "line", "in", "fp", ":", "\n", "            ", "if", "bstr", "in", "line", ":", "\n", "                ", "count", "+=", "1", "\n", "", "", "", "return", "count", "\n", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.NormalizerFactory.create": [[192, 199], ["vars", "normalize.GenericNormalizer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.__init__": [[211, 215], ["str.maketrans", "normalize.Normalizer._expand_chars"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer._expand_chars"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer._expand_chars": [[216, 223], ["chars_range.split", "chr", "range", "ord", "ord"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.update_spaces": [[224, 227], ["re.sub"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_format_chars": [[228, 230], ["text.translate"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_control_chars": [[231, 234], ["char.isprintable"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.fix_encoding": [[235, 238], ["ftfy.fix_encoding"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.fix_encoding"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_combining_chars": [[239, 243], ["unicodedata.normalize"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_quotes": [[244, 247], ["ftfy.fixes.uncurl_quotes"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.pre_normalize": [[252, 259], ["normalize.GenericNormalizer.fix_encoding", "normalize.GenericNormalizer.update_spaces", "normalize.GenericNormalizer.remove_control_chars", "normalize.GenericNormalizer.remove_format_chars", "normalize.GenericNormalizer.standardize_combining_chars"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.fix_encoding", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.update_spaces", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_control_chars", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.remove_format_chars", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.Normalizer.standardize_combining_chars"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.GenericNormalizer.post_normalize": [[260, 268], ["text.lower"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.normalize.compare_strings": [[164, 181], ["collections.Counter", "difflib.SequenceMatcher", "difflib.SequenceMatcher.get_opcodes", "collections.Counter.update", "collections.Counter.update", "collections.Counter.update"], "function", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_documents": [[15, 32], ["path.endswith", "open_func", "bs4.BeautifulSoup.find_all", "bs4.BeautifulSoup", "doc.docno.get_text", "error.ParseError", "doc.find", "text_parts.append", "doc.find.get_text().strip", "doc.find.get_text"], "function", ["None"], ["def", "parse_sgml_documents", "(", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "    ", "\"\"\"Parse from SGML\"\"\"", "\n", "doc_text_tags", "=", "[", "\"headline\"", ",", "\"title\"", ",", "\"hl\"", ",", "\"head\"", ",", "\"ttl\"", ",", "\"dd\"", ",", "\"date\"", ",", "\"lp\"", ",", "\"leadpara\"", ",", "\"text\"", "]", "\n", "open_func", "=", "gzip", ".", "open", "if", "path", ".", "endswith", "(", "'.gz'", ")", "else", "open", "\n", "with", "open_func", "(", "path", ",", "'rt'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "try", ":", "\n", "            ", "soup", "=", "bs4", ".", "BeautifulSoup", "(", "fp", ",", "'html.parser'", ")", "\n", "", "except", "UnicodeDecodeError", "as", "e", ":", "\n", "            ", "raise", "ParseError", "(", "f\"Decode error for {path}: {e}\"", ")", "\n", "", "for", "doc", "in", "soup", ".", "find_all", "(", "'doc'", ")", ":", "\n", "            ", "doc_id", "=", "doc", ".", "docno", ".", "get_text", "(", ")", "\n", "text_parts", "=", "[", "]", "\n", "for", "tag", "in", "doc_text_tags", ":", "\n", "                ", "obj", "=", "doc", ".", "find", "(", "tag", ")", "\n", "if", "obj", ":", "\n", "                    ", "text_parts", ".", "append", "(", "obj", ".", "get_text", "(", ")", ".", "strip", "(", ")", ")", "\n", "", "", "yield", "doc_id", ",", "' '", ".", "join", "(", "text_parts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_hamshahri_documents": [[34, 53], ["open", "fp.readline", "line.strip.strip", "fp.readline", "fp.readline", "text.append", "line.strip.split"], "function", ["None"], ["", "", "", "def", "parse_hamshahri_documents", "(", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "doc_id", "=", "None", "\n", "text", "=", "[", "]", "\n", "while", "True", ":", "\n", "            ", "line", "=", "fp", ".", "readline", "(", ")", "\n", "if", "line", "==", "''", ":", "\n", "                ", "break", "\n", "", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "'.DID'", "in", "line", ":", "\n", "                ", "if", "doc_id", ":", "\n", "                    ", "yield", "doc_id", ",", "' '", ".", "join", "(", "text", ")", ".", "strip", "(", ")", "\n", "", "text", "=", "[", "]", "\n", "doc_id", "=", "line", ".", "split", "(", "'\\t'", ")", "[", "1", "]", "\n", "fp", ".", "readline", "(", ")", "# skip date", "\n", "fp", ".", "readline", "(", ")", "# skip category", "\n", "", "else", ":", "\n", "                ", "text", ".", "append", "(", "line", ")", "\n", "", "", "yield", "doc_id", ",", "' '", ".", "join", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.get_sgml_field": [[55, 60], ["tag.text.strip"], "function", ["None"], ["", "", "def", "get_sgml_field", "(", "tag", ")", ":", "\n", "    ", "if", "tag", "is", "not", "None", ":", "\n", "        ", "return", "tag", ".", "text", ".", "strip", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_sgml_topics": [[62, 80], ["xml.fromstring", "open", "fp.read", "topic.find().text.strip", "topic.find().text.strip", "topic.find().text.strip", "formats.get_sgml_field", "topic.find", "topic.find", "topic.find", "topic.find"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.IRDSQrelsReader.read", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.get_sgml_field"], ["", "", "def", "parse_sgml_topics", "(", "path", ",", "encoding", "=", "'utf8'", ",", "sgml_prefix", "=", "None", ")", ":", "\n", "    ", "\"\"\"Parse from SGML\"\"\"", "\n", "if", "not", "sgml_prefix", ":", "\n", "        ", "sgml_prefix", "=", "''", "\n", "", "title_tag", "=", "sgml_prefix", "+", "'title'", "\n", "desc_tag", "=", "sgml_prefix", "+", "'desc'", "\n", "narr_tag", "=", "sgml_prefix", "+", "'narr'", "\n", "\n", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "text", "=", "fp", ".", "read", "(", ")", "\n", "", "text", "=", "\"<topics>\\n\"", "+", "text", "+", "\"\\n</topics>\"", "\n", "root", "=", "ElementTree", ".", "fromstring", "(", "text", ")", "\n", "for", "topic", "in", "root", ":", "\n", "        ", "num", "=", "topic", ".", "find", "(", "'num'", ")", ".", "text", ".", "strip", "(", ")", "\n", "title", "=", "topic", ".", "find", "(", "title_tag", ")", ".", "text", ".", "strip", "(", ")", "\n", "desc", "=", "topic", ".", "find", "(", "desc_tag", ")", ".", "text", ".", "strip", "(", ")", "\n", "narr", "=", "get_sgml_field", "(", "topic", ".", "find", "(", "narr_tag", ")", ")", "# narrative is optional", "\n", "yield", "num", ",", "title", ",", "desc", ",", "narr", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_xml_topics": [[82, 94], ["xml.fromstring", "open", "fp.read", "topic.find().text.strip", "topic.find().text.strip", "topic.find().text.strip", "topic.find().text.strip", "topic.find", "topic.find", "topic.find", "topic.find"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.score.IRDSQrelsReader.read"], ["", "", "def", "parse_xml_topics", "(", "path", ",", "encoding", "=", "'utf8'", ")", ":", "\n", "    ", "\"\"\"Parse from XML\"\"\"", "\n", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "encoding", ")", "as", "fp", ":", "\n", "        ", "text", "=", "fp", ".", "read", "(", ")", "\n", "", "root", "=", "ElementTree", ".", "fromstring", "(", "text", ")", "\n", "for", "topic", "in", "root", ":", "\n", "        ", "lang", "=", "topic", ".", "attrib", "[", "'lang'", "]", "\n", "identifier", "=", "topic", ".", "find", "(", "'identifier'", ")", ".", "text", ".", "strip", "(", ")", "\n", "title", "=", "topic", ".", "find", "(", "'title'", ")", ".", "text", ".", "strip", "(", ")", "\n", "desc", "=", "topic", ".", "find", "(", "'description'", ")", ".", "text", ".", "strip", "(", ")", "\n", "narr", "=", "topic", ".", "find", "(", "'narrative'", ")", ".", "text", ".", "strip", "(", ")", "\n", "yield", "identifier", ",", "lang", ",", "title", ",", "desc", ",", "narr", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_qrels": [[96, 111], ["open", "fp.readline", "fp.seek", "csv.reader", "collections.defaultdict", "int", "error.ParseError"], "function", ["None"], ["", "", "def", "parse_qrels", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'r'", ")", "as", "fp", ":", "\n", "        ", "delimiter", "=", "' '", "\n", "first_line", "=", "fp", ".", "readline", "(", ")", "\n", "if", "'\\t'", "in", "first_line", ":", "\n", "            ", "delimiter", "=", "'\\t'", "\n", "", "fp", ".", "seek", "(", "0", ")", "\n", "reader", "=", "csv", ".", "reader", "(", "fp", ",", "delimiter", "=", "delimiter", ")", "\n", "qrels", "=", "collections", ".", "defaultdict", "(", "dict", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "try", ":", "\n", "                ", "qrels", "[", "row", "[", "0", "]", "]", "[", "row", "[", "2", "]", "]", "=", "int", "(", "row", "[", "3", "]", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "                ", "raise", "ParseError", "(", "f\"Invalid qrels format for {row}: {e}\"", ")", "\n", "", "", "", "yield", "qrels", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.normalize_psq_entry": [[113, 130], ["sum", "dict", "dict.values", "sorted", "numpy.array", "numpy.where", "dict", "sum", "dict.items", "dict.items", "dict.items", "list", "itertools.islice", "dict.values", "dict.values", "numpy.cumsum", "len", "dict.items", "dict.items", "numpy.where", "int", "numpy.cumsum"], "function", ["None"], ["", "def", "normalize_psq_entry", "(", "entry", ",", "cum_thresh", "=", "0.97", ",", "elem_thresh", "=", "1e-5", ")", ":", "\n", "    ", "\"\"\"Throw out small probabilities and normalize so sum = 1\"\"\"", "\n", "total", "=", "sum", "(", "entry", ".", "values", "(", ")", ")", "\n", "entry", "=", "{", "word", ":", "prob", "/", "total", "for", "word", ",", "prob", "in", "entry", ".", "items", "(", ")", "}", "\n", "entry", "=", "{", "word", ":", "prob", "for", "word", ",", "prob", "in", "entry", ".", "items", "(", ")", "if", "prob", ">", "elem_thresh", "}", "\n", "entry", "=", "dict", "(", "sorted", "(", "entry", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "item", "[", "1", "]", ",", "reverse", "=", "True", ")", ")", "\n", "if", "cum_thresh", "<", "1", ":", "\n", "        ", "probs", "=", "np", ".", "array", "(", "list", "(", "entry", ".", "values", "(", ")", ")", ",", "dtype", "=", "'float'", ")", "\n", "cum_index", "=", "np", ".", "where", "(", "np", ".", "cumsum", "(", "probs", ")", ">", "cum_thresh", ")", "\n", "if", "cum_index", "[", "0", "]", ".", "size", "==", "0", ":", "\n", "            ", "index", "=", "len", "(", "entry", ")", "-", "1", "\n", "", "else", ":", "\n", "            ", "index", "=", "np", ".", "where", "(", "np", ".", "cumsum", "(", "probs", ")", ">", "cum_thresh", ")", "[", "0", "]", "[", "0", "]", "\n", "", "entry", "=", "dict", "(", "itertools", ".", "islice", "(", "entry", ".", "items", "(", ")", ",", "int", "(", "index", ")", "+", "1", ")", ")", "\n", "total", "=", "sum", "(", "entry", ".", "values", "(", ")", ")", "\n", "entry", "=", "{", "word", ":", "prob", "/", "total", "for", "word", ",", "prob", "in", "entry", ".", "items", "(", ")", "}", "\n", "", "return", "entry", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.formats.parse_psq_table": [[132, 140], ["functools.partial", "open", "json.load", "functools.partial.", "json.load.items"], "function", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.helpers.ConfigHelper.load"], ["", "def", "parse_psq_table", "(", "path", ",", "threshold", "=", "0.97", ")", ":", "\n", "    ", "\"\"\"translation table is a dictionary of dictionaries\n    The inner dictionary maps target words to probabilities.\n    \"\"\"", "\n", "norm", "=", "functools", ".", "partial", "(", "normalize_psq_entry", ",", "cum_thresh", "=", "threshold", ")", "\n", "with", "open", "(", "path", ")", "as", "fp", ":", "\n", "        ", "trans_table", "=", "json", ".", "load", "(", "fp", ")", "\n", "return", "{", "k", ":", "norm", "(", "v", ")", "for", "k", ",", "v", "in", "trans_table", ".", "items", "(", ")", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.java.Java.__init__": [[13, 15], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.java.Java.__getattr__": [[16, 20], ["java.Java.initialize"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.java.Java.initialize"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "if", "not", "self", ".", "initialized", ":", "\n", "            ", "self", ".", "initialize", "(", ")", "\n", "", "return", "self", ".", "__dict__", "[", "attr", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.java.Java.initialize": [[21, 56], ["jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius.autoclass", "jnius_config.add_options", "error.PatapscoError"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "self", ".", "initialized", "=", "True", "\n", "if", "not", "jnius_config", ".", "vm_running", ":", "\n", "            ", "jnius_config", ".", "add_options", "(", "'-Xmx1024m'", ")", "# restrict Java's heap size as requested by HLTCOE IT staff", "\n", "", "try", ":", "\n", "            ", "import", "pyserini", ".", "analysis", "\n", "import", "pyserini", ".", "search", "\n", "import", "jnius", "\n", "", "except", "Exception", "as", "e", ":", "\n", "            ", "msg", "=", "\"Problem with Java. Likely no Java or an older JVM. Run with debug flag for more details.\"", "\n", "raise", "PatapscoError", "(", "msg", ")", "from", "e", "\n", "# indexing", "\n", "", "self", ".", "String", "=", "jnius", ".", "autoclass", "(", "'java.lang.String'", ")", "\n", "self", ".", "CharSequence", "=", "jnius", ".", "autoclass", "(", "'java.lang.CharSequence'", ")", "\n", "self", ".", "Document", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.Document'", ")", "\n", "self", ".", "StoreEnum", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.Field$Store'", ")", "\n", "self", ".", "SortedDocValuesField", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.SortedDocValuesField'", ")", "\n", "self", ".", "Field", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.Field'", ")", "\n", "self", ".", "FieldType", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.FieldType'", ")", "\n", "self", ".", "StringField", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.StringField'", ")", "\n", "self", ".", "TextField", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.document.TextField'", ")", "\n", "self", ".", "Paths", "=", "jnius", ".", "autoclass", "(", "'java.nio.file.Paths'", ")", "\n", "self", ".", "WhitespaceAnalyzer", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.analysis.core.WhitespaceAnalyzer'", ")", "\n", "self", ".", "IndexOptions", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.index.IndexOptions'", ")", "\n", "self", ".", "IndexWriter", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.index.IndexWriter'", ")", "\n", "self", ".", "IndexWriterConfig", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.index.IndexWriterConfig'", ")", "\n", "self", ".", "FSDirectory", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.store.FSDirectory'", ")", "\n", "self", ".", "BytesRef", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.util.BytesRef'", ")", "\n", "self", ".", "JavaException", "=", "jnius", ".", "JavaException", "\n", "self", ".", "cast", "=", "jnius", ".", "cast", "\n", "# retrieval", "\n", "self", ".", "SimpleSearcher", "=", "pyserini", ".", "search", ".", "SimpleSearcher", "\n", "self", ".", "PSQIndexSearcher", "=", "jnius", ".", "autoclass", "(", "'edu.jhu.hlt.psq.search.PSQIndexSearcher'", ")", "\n", "self", ".", "BagOfWordsQueryGenerator", "=", "jnius", ".", "autoclass", "(", "'io.anserini.search.query.BagOfWordsQueryGenerator'", ")", "\n", "self", ".", "QueryParser", "=", "jnius", ".", "autoclass", "(", "'org.apache.lucene.queryparser.classic.QueryParser'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory.create": [[28, 35], ["cls._get_class"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory._get_class"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory.register": [[36, 50], ["isinstance", "error.ConfigError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory._get_class": [[51, 76], ["vars", "hasattr", "hasattr", "isinstance", "RuntimeError", "error.ConfigError", "RuntimeError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ReaderFactory.create": [[80, 93], ["file.validate_encoding", "cls._get_class", "issubclass", "__init__.GlobIterator", "cls._get_class.", "config.dict().items", "config.dict"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.file.validate_encoding", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory._get_class"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TaskFactory.create": [[97, 105], ["cls._get_class"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ComponentFactory._get_class"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.DataclassJSONEncoder.default": [[108, 112], ["dataclasses.is_dataclass", "super().default", "dataclasses.asdict"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.DataclassJSONEncoder.default"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.Timer.__init__": [[115, 118], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.Timer.__enter__": [[119, 121], ["timeit.default_timer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.Timer.__exit__": [[122, 124], ["timeit.default_timer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.InputIterator.__str__": [[129, 131], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.__init__": [[134, 137], ["__init__.Timer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.time": [[138, 141], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.__str__": [[142, 144], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.__next__": [[145, 148], ["next"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.TimedIterator.__len__": [[149, 151], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ChunkedIterator.__init__": [[156, 166], ["more_itertools.chunked"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ChunkedIterator.__str__": [[167, 169], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ChunkedIterator.__next__": [[170, 179], ["next", "StopIteration"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ChunkedIterator.__len__": [[180, 182], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.SlicedIterator.__init__": [[187, 201], ["hasattr", "iterator.skip", "itertools.islice", "itertools.islice"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.skip"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.SlicedIterator.__next__": [[202, 204], ["next"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.SlicedIterator.__len__": [[205, 212], ["len", "min"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.SlicedIterator.__str__": [[213, 215], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__init__": [[230, 253], ["isinstance", "iter", "__init__.GlobIterator._validate_globs", "__init__.GlobIterator._next_glob", "iter", "__init__.GlobIterator._next_generator"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._validate_globs", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_glob", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_generator"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__next__": [[254, 270], ["next", "__init__.GlobIterator.__next__", "error.BadDataError", "__init__.GlobIterator._next_generator", "iter", "__init__.GlobIterator._next_generator", "__init__.GlobIterator._next_glob"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__next__", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_generator", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_generator", "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_glob"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__len__": [[271, 278], ["glob.glob", "__init__.GlobIterator.cls", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.__str__": [[279, 281], ["str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator.skip": [[282, 287], ["range", "next"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_glob": [[288, 291], ["next", "sorted", "glob.glob"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._next_generator": [[292, 296], ["next", "__init__.GlobIterator.cls"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.GlobIterator._validate_globs": [[297, 302], ["glob.glob", "error.ConfigError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LoggingFilter.filter": [[307, 320], ["record.msg.startswith", "isinstance", "isinstance", "str", "record.msg.split", "record.msg.split.pop", "record.msg.split.pop"], "methods", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.language": [[325, 335], ["len", "pycountry.languages.get", "error.ConfigError", "len", "pycountry.languages.get"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get", "home.repos.pwc.inspect_result.hltcoe_patapsco.patapsco.config.BaseConfig.get"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_3": [[336, 346], ["cls.language"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.language"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.iso_639_1": [[347, 357], ["cls.language"], "methods", ["home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.LangStandardizer.language"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.get_logger": [[19, 21], ["logging.getLogger"], "function", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.get_human_readable_size": [[359, 365], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.hltcoe_patapsco.util.__init__.ignore_exception": [[367, 373], ["None"], "function", ["None"], []]}