{"home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.__init__": [[13, 15], ["print"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"init dataset\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.n_users": [[16, 19], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_users", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.m_items": [[20, 23], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "m_items", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.trainDataSize": [[24, 27], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "trainDataSize", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.testDataSize": [[28, 31], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDataSize", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.testDict": [[32, 35], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDict", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.getUserItemFeedback": [[36, 38], ["None"], "methods", ["None"], ["", "def", "getUserItemFeedback", "(", "self", ",", "users", ",", "items", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.getUserPosItems": [[39, 41], ["None"], "methods", ["None"], ["", "def", "getUserPosItems", "(", "self", ",", "users", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.getUserNegItems": [[42, 48], ["None"], "methods", ["None"], ["", "def", "getUserNegItems", "(", "self", ",", "users", ")", ":", "\n", "        ", "\"\"\"\n        not necessary for large dataset\n        it's stupid to return all neg items in super large dataset\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.getSparseGraph_only": [[49, 63], ["None"], "methods", ["None"], ["", "def", "getSparseGraph_only", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        because user(item) never interc with user(item)\n        build a graph in torch.sparse.IntTensor.\n        Details in NGCF's matrix form\n        A = \n            |I,   R|\n            |R^T, I|\n        with no self loop\n        A = \n            |0,   R|\n            |R^T, 0|\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.getSparseGraph_all": [[64, 73], ["None"], "methods", ["None"], ["", "def", "getSparseGraph_all", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        build a graph in torch.sparse.IntTensor.\n        Details in NGCF's matrix form\n        A = \n            |I,   R|\n            |R^T, I|\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "def", "GraphSize", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.BasicDataset.GraphSize": [[73, 78], ["None"], "methods", ["None"], ["", "def", "GraphSize", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        to show how much data use for build Adj\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.n_users": [[80, 83], ["None"], "methods", ["None"], ["    ", "@", "property", "\n", "def", "n_users", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_user", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.m_items": [[83, 86], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "m_items", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "m_item", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.trainDataSize": [[86, 89], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "trainDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_traindataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.testDataSize": [[89, 92], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_testdataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.testDict": [[92, 95], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__testDict", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.onlyGraphSize": [[95, 98], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "onlyGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_onlyGraphSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.allGraphSize": [[98, 101], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "allGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_allGraphSize", "\n", "", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.__init__": [[101, 223], ["print", "time.time", "numpy.load", "time.time", "range", "numpy.concatenate", "list", "list", "range", "range", "trainDict_only.keys", "list", "list", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "time.time", "range", "numpy.concatenate", "list", "range", "range", "trainDict_all.keys", "list", "list", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "list", "range", "numpy.concatenate", "list", "range", "range", "test_item_dict.keys", "numpy.array", "print", "numpy.concatenate.append", "set", "set", "len", "trainUser_only.extend", "trainItem_only.extend", "set", "set", "numpy.concatenate.append", "set", "len", "trainUser_all.extend", "trainItem_all.extend", "set", "set", "range", "posItems_his.append", "posItems_now.append", "len", "numpy.concatenate.append", "set", "len", "testUniqueUsers.append", "numpy.load", "trainDict_only[].append", "numpy.ones", "numpy.load", "trainDict_all[].append", "numpy.ones", "numpy.load", "str", "int", "int", "len", "len", "str", "int", "int", "len", "len", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_all[].nonzero", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only[].nonzero", "str", "int", "int", "int", "int", "int", "int", "int", "time.time", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n", "        ", "print", "(", "f'===========================load data start , at stage {stage}==================================='", ")", "\n", "dataset_starttime", "=", "time", ".", "time", "(", ")", "\n", "information", "=", "np", ".", "load", "(", "path", "+", "'/information.npy'", ")", "\n", "self", ".", "n_user", "=", "information", "[", "1", "]", "\n", "self", ".", "m_item", "=", "information", "[", "2", "]", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "datasetStage", "=", "stage", "\n", "self", ".", "_traindataSize", "=", "0", "\n", "self", ".", "_testdataSize", "=", "0", "\n", "self", ".", "nowPos", "=", "[", "]", "\n", "self", ".", "hisPos", "=", "[", "]", "\n", "self", ".", "Graph_only", "=", "None", "\n", "self", ".", "Graph_all", "=", "None", "\n", "self", ".", "Graph_handle", "=", "None", "\n", "self", ".", "Rscale", "=", "None", "\n", "self", ".", "Graph_pure", "=", "None", "\n", "self", ".", "now_user_degree", "=", "None", "\n", "self", ".", "now_item_degree", "=", "None", "\n", "self", ".", "elder_user_degree", "=", "None", "\n", "self", ".", "elder_item_degree", "=", "None", "\n", "self", ".", "old_user_degree", "=", "None", "\n", "self", ".", "old_item_degree", "=", "None", "\n", "self", ".", "active_user_now", "=", "[", "]", "\n", "self", ".", "active_item_now", "=", "[", "]", "\n", "self", ".", "trained_user", "=", "[", "]", "\n", "self", ".", "trained_item", "=", "[", "]", "\n", "\n", "#=============================build incremental graph==============================", "\n", "onlytime", "=", "time", ".", "time", "(", ")", "\n", "trainAlldata_only", ",", "trainItem_only", ",", "trainUser_only", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", "-", "1", ",", "stage", ")", ":", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_only", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_only", "=", "np", ".", "concatenate", "(", "trainAlldata_only", ",", "axis", "=", "0", ")", "\n", "trainUserlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "0", "]", ")", ")", "\n", "trainItemlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "1", "]", ")", ")", "\n", "\n", "trainDict_only", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_only", ")", ")", ":", "\n", "            ", "trainDict_only", "[", "int", "(", "trainUserlist_only", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_only", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "except", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", "]", "\n", "\n", "", "", "for", "k", "in", "trainDict_only", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_only", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_only", "[", "k", "]", ")", ")", "\n", "trainItem_only", ".", "extend", "(", "trainDict_only", "[", "k", "]", ")", "\n", "\n", "", "self", ".", "active_user_now", "=", "list", "(", "set", "(", "trainUser_only", ")", ")", "\n", "self", ".", "active_item_now", "=", "list", "(", "set", "(", "trainItem_only", ")", ")", "\n", "self", ".", "trainUser_unique_only", "=", "trainUserlist_only", "\n", "self", ".", "trainItem_unique_only", "=", "trainItemlist_only", "\n", "self", ".", "trainUser_only", "=", "np", ".", "array", "(", "trainUser_only", ")", "\n", "self", ".", "trainItem_only", "=", "np", ".", "array", "(", "trainItem_only", ")", "\n", "self", ".", "_onlyGraphSize", "=", "len", "(", "self", ".", "trainUser_only", ")", "\n", "self", ".", "UserItemNet_only", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_only", ")", ")", ",", "(", "self", ".", "trainUser_only", ",", "self", ".", "trainItem_only", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_only", ",", "trainUser_only", ",", "trainItem_only", ",", "trainDict_only", ",", "trainAlldata_only", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "# print(f'Loader_hat only graph at stage {self.datasetStage-1} reday size: {self._onlyGraphSize} ,used time {time.time()-onlytime}')", "\n", "\n", "\n", "trainAlldata_all", ",", "trainItem_all", ",", "trainUser_all", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "alltime", "=", "time", ".", "time", "(", ")", "\n", "for", "s", "in", "range", "(", "0", ",", "stage", ")", ":", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_all", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_all", "=", "np", ".", "concatenate", "(", "trainAlldata_all", ",", "axis", "=", "0", ")", "\n", "trainUserlist_all", "=", "list", "(", "set", "(", "trainAlldata_all", "[", ":", ",", "0", "]", ")", ")", "\n", "trainDict_all", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_all", ")", ")", ":", "\n", "            ", "trainDict_all", "[", "int", "(", "trainUserlist_all", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_all", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "except", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", "]", "\n", "", "", "for", "k", "in", "trainDict_all", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_all", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_all", "[", "k", "]", ")", ")", "\n", "trainItem_all", ".", "extend", "(", "trainDict_all", "[", "k", "]", ")", "\n", "\n", "", "self", ".", "trained_user", "=", "list", "(", "set", "(", "trainUser_all", ")", ")", "\n", "self", ".", "trained_item", "=", "list", "(", "set", "(", "trainItem_all", ")", ")", "\n", "self", ".", "trainUser_all", "=", "np", ".", "array", "(", "trainUser_all", ")", "\n", "self", ".", "trainItem_all", "=", "np", ".", "array", "(", "trainItem_all", ")", "\n", "self", ".", "_allGraphSize", "=", "len", "(", "self", ".", "trainUser_all", ")", "\n", "self", ".", "UserItemNet_all", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_all", ")", ")", ",", "(", "self", ".", "trainUser_all", ",", "self", ".", "trainItem_all", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_all", ",", "trainUser_all", ",", "trainItem_all", ",", "trainDict_all", ",", "trainAlldata_all", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "# print(f'Loader_hat all graph reday at stage: 0-{self.datasetStage-1} size: {self._allGraphSize} ,used time {time.time()-alltime}')", "\n", "\n", "posItems_his", ",", "posItems_now", "=", "[", "]", ",", "[", "]", "\n", "for", "user", "in", "list", "(", "range", "(", "self", ".", "n_user", ")", ")", ":", "\n", "            ", "posItems_his", ".", "append", "(", "self", ".", "UserItemNet_all", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "posItems_now", ".", "append", "(", "self", ".", "UserItemNet_only", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "self", ".", "_traindataSize", "+=", "len", "(", "posItems_now", "[", "user", "]", ")", "\n", "", "self", ".", "hisPos", "=", "posItems_his", "\n", "self", ".", "nowPos", "=", "posItems_now", "\n", "\n", "#=============================build testing data==============================", "\n", "testUniqueUsers", ",", "testdata_all", "=", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", ",", "stage", "+", "1", ")", ":", "\n", "            ", "test_file", "=", "path", "+", "'/test/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "testdata_all", ".", "append", "(", "np", ".", "load", "(", "test_file", ")", ")", "\n", "", "testdata_all", "=", "np", ".", "concatenate", "(", "testdata_all", ",", "axis", "=", "0", ")", "\n", "test_item_dict", "=", "{", "}", "\n", "test_user", "=", "list", "(", "set", "(", "testdata_all", "[", ":", ",", "0", "]", ")", ")", "\n", "for", "ut", "in", "range", "(", "len", "(", "test_user", ")", ")", ":", "\n", "            ", "test_item_dict", "[", "int", "(", "test_user", "[", "ut", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "testdata_all", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "[", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "]", "=", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "\n", "", "except", ":", "\n", "                ", "key_temp", "=", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "\n", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "{", "int", "(", "key_temp", ")", ":", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "}", "\n", "", "", "for", "key", "in", "test_item_dict", ".", "keys", "(", ")", ":", "\n", "            ", "testUniqueUsers", ".", "append", "(", "key", ")", "\n", "", "self", ".", "testUniqueUsers", "=", "np", ".", "array", "(", "testUniqueUsers", ")", "\n", "self", ".", "_testdataSize", "=", "testdata_all", ".", "shape", "[", "0", "]", "\n", "self", ".", "__testDict", "=", "test_item_dict", "\n", "# print(f\"Loader_hat at stage : {self.datasetStage} , {self._traindataSize} interactions for train , {self._testdataSize} interactions for test\")", "\n", "print", "(", "f'===========================load data is ready ,used time : {time.time()-dataset_starttime} s ==================================='", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat._convert_sp_mat_to_sp_tensor": [[224, 231], ["X.tocoo().astype", "torch.Tensor().long", "torch.Tensor().long", "torch.stack", "torch.FloatTensor", "torch.sparse.FloatTensor", "torch.Size", "X.tocoo", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_convert_sp_mat_to_sp_tensor", "(", "self", ",", "X", ")", ":", "\n", "        ", "coo", "=", "X", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "row", "=", "torch", ".", "Tensor", "(", "coo", ".", "row", ")", ".", "long", "(", ")", "\n", "col", "=", "torch", ".", "Tensor", "(", "coo", ".", "col", ")", ".", "long", "(", ")", "\n", "index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ")", "\n", "data", "=", "torch", ".", "FloatTensor", "(", "coo", ".", "data", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "index", ",", "data", ",", "torch", ".", "Size", "(", "coo", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_only": [[232, 264], ["time.time", "dataloader_handle_inference_icl.Loader_hat._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_hat.Graph_only.coalesce().to", "print", "scipy.load_npz", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.Loader_hat.Graph_only.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_only", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_only", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "# print(\"successfully loaded only graph...\")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load incremental graph faulse at: '", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz    '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved norm_mat at \"", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_only", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_only", "=", "self", ".", "Graph_only", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"incremental adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_only", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_all": [[265, 297], ["time.time", "dataloader_handle_inference_icl.Loader_hat._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_hat.Graph_all.coalesce().to", "print", "scipy.load_npz", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_all.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.Loader_hat.Graph_all.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_all", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_all", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "# print(\"successfully loaded all graph...\")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load full graph faulse at: '", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz  '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved full graph norm_mat at \"", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_all", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_all", "=", "self", ".", "Graph_all", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"full graph adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_all", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_handle": [[298, 359], ["time.time", "dataloader_handle_inference_icl.Loader_hat._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_hat.Graph_handle.coalesce().to", "torch.from_numpy().to", "print", "scipy.load_npz", "numpy.load", "sum", "TypeError", "print", "time.time", "scipy.dok_matrix", "adj_mat_all.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_all.tolil", "adj_mat_all.todok.todok.todok", "scipy.dok_matrix", "adj_mat_only.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only.tolil", "adj_mat_only.todok.todok.todok", "numpy.array", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "numpy.power", "numpy.power", "numpy.true_divide", "numpy.save", "numpy.save", "time.time", "print", "scipy.save_npz", "numpy.save", "numpy.isinf", "sum", "TypeError", "dataloader_handle_inference_icl.Loader_hat.Graph_handle.coalesce", "torch.from_numpy", "adj_mat_all.todok.todok.sum", "adj_mat_only.todok.todok.sum", "numpy.isnan", "str", "str", "numpy.power", "numpy.isinf", "numpy.isinf", "numpy.isnan", "sum", "time.time", "str", "str", "str", "numpy.isinf", "sum", "str", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_handle", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_handle", "or", "self", ".", "Rscale", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat_all", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "# print(\"successfully loaded handle graph \")", "\n", "rscale_vec", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "# print(\"successfully loaded handle rescale\")", "\n", "norm_adj", "=", "pre_adj_mat_all", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load incremental graph faulse at: '", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat_all", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat_all", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_all", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "todok", "(", ")", "\n", "\n", "adj_mat_only", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat_only", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "todok", "(", ")", "\n", "\n", "rowsum_all", "=", "np", ".", "array", "(", "adj_mat_all", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "rowsum_only", "=", "np", ".", "array", "(", "adj_mat_only", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "\n", "degree_new", "=", "rowsum_only", "\n", "degree_old", "=", "rowsum_all", "-", "rowsum_only", "\n", "degree_all", "=", "rowsum_all", "\n", "d_inv", "=", "np", ".", "power", "(", "degree_all", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat_only", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "\n", "old_scale", "=", "np", ".", "power", "(", "degree_old", ",", "0.5", ")", "\n", "new_scale", "=", "np", ".", "power", "(", "degree_all", ",", "0.5", ")", "\n", "rscale_vec", "=", "np", ".", "true_divide", "(", "old_scale", ",", "new_scale", ")", "# n*1 array", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/fenzi-'", "+", "'-'", ",", "old_scale", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/fenmu'", "+", "'-'", ",", "new_scale", ")", "\n", "rscale_vec", "[", "np", ".", "isinf", "(", "rscale_vec", ")", "]", "=", "0.", "\n", "rscale_vec", "[", "np", ".", "isnan", "(", "rscale_vec", ")", "]", "=", "0.", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved incremental graph norm_mat at \"", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "rscale_vec", ")", "\n", "\n", "", "if", "sum", "(", "np", ".", "isinf", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isinf(rscale_vec))}'", ")", "\n", "", "elif", "sum", "(", "np", ".", "isnan", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isnan(rscale_vec))}'", ")", "\n", "", "self", ".", "Graph_handle", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_handle", "=", "self", ".", "Graph_handle", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "Rscale", "=", "torch", ".", "from_numpy", "(", "rscale_vec", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"incremental adjacency matrix & Rescale vector done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_handle", ",", "self", ".", "Rscale", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_pure": [[360, 389], ["time.time", "adj_mat_only.todok.tocsr.todok", "dataloader_handle_inference_icl.Loader_hat._convert_sp_mat_to_sp_tensor", "adj_mat_only.todok.tocsr.coalesce().to", "scipy.load_npz", "print", "time.time", "scipy.dok_matrix", "adj_mat_only.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only.tolil", "adj_mat_only.todok.todok.todok", "adj_mat_only.todok.todok.tocsr", "print", "scipy.save_npz", "adj_mat_only.todok.tocsr.coalesce", "str", "str", "str", "str", "time.time"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_pure", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_pure", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat_pure", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/pure_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "# print(\"successfully loaded pure graph \")", "\n", "norm_adj", "=", "pre_adj_mat_pure", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load pure_graph faulse at: '", "+", "self", ".", "path", "+", "'/pure_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "\n", "#\u751f\u6210adj_only", "\n", "adj_mat_only", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat_only", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "todok", "(", ")", "\n", "\n", "norm_adj", "=", "adj_mat_only", ".", "tocsr", "(", ")", "\n", "\n", "print", "(", "f\"costing {time.time()-adj_starttime}s, saved pure graph norm_mat at \"", "+", "self", ".", "path", "+", "'/pure_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/pure_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "\n", "", "norm_adj", "=", "norm_adj", ".", "todok", "(", ")", "\n", "norm_adj", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_pure", "=", "norm_adj", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "# print(f\"pure adjacency matrix done use time :{time.time()-adj_starttime}\")", "\n", "", "return", "self", ".", "Graph_pure", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.get_degree": [[390, 473], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "print", "ValueError", "ValueError", "print", "range", "numpy.concatenate", "list", "list", "range", "range", "trainDict_only_elder.keys", "numpy.array", "numpy.array", "scipy.sparse.csr_matrix", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only.tolil", "scipy.sparse.csr_matrix.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_all.tolil", "now_item_degree.reshape.reshape.reshape", "elder_item_degree.reshape.reshape.reshape", "all_item_degree.reshape.reshape.reshape", "numpy.save", "numpy.save", "numpy.save", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_only.tolil", "scipy.sparse.csr_matrix.tolil", "dataloader_handle_inference_icl.Loader_hat.UserItemNet_all.tolil", "numpy.array", "numpy.array", "numpy.array", "now_user_degree.reshape.reshape.reshape", "elder_user_degree.reshape.reshape.reshape", "all_user_degree.reshape.reshape.reshape", "numpy.save", "numpy.save", "numpy.save", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type().to", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "numpy.concatenate.append", "set", "set", "len", "trainDict_only_elder.get", "numpy.array.extend", "numpy.array.extend", "numpy.array", "numpy.array", "numpy.array", "dataloader_handle_inference_icl.Loader_hat.sum", "scipy.sparse.csr_matrix.tolil.sum", "dataloader_handle_inference_icl.Loader_hat.sum", "str", "str", "str", "str", "str", "str", "numpy.load", "int", "trainDict_only_elder[].append", "numpy.ones", "dataloader_handle_inference_icl.Loader_hat.sum", "scipy.sparse.csr_matrix.tolil.sum", "dataloader_handle_inference_icl.Loader_hat.sum", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "str", "int", "int", "int", "len", "len", "str", "str", "str", "str", "str", "str", "int", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int"], "methods", ["None"], ["", "def", "get_degree", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "now_user_degree", "==", "None", "or", "self", ".", "now_item_degree", "==", "None", "or", "self", ".", "elder_user_degree", "==", "None", "or", "self", ".", "elder_item_degree", "==", "None", "or", "self", ".", "old_user_degree", "==", "None", "or", "self", ".", "old_item_degree", "==", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "now_item_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "all_item_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/item_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "now_user_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "all_user_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/user_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "elder_item_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "2", ")", "+", "'-.npy'", ")", "\n", "elder_user_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "2", ")", "+", "'-.npy'", ")", "\n", "self", ".", "now_user_degree", "=", "torch", ".", "from_numpy", "(", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "now_item_degree", "=", "torch", ".", "from_numpy", "(", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "elder_user_degree", "=", "torch", ".", "from_numpy", "(", "elder_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "elder_item_degree", "=", "torch", ".", "from_numpy", "(", "elder_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "old_user_degree", "=", "torch", ".", "from_numpy", "(", "all_user_degree", "-", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "old_item_degree", "=", "torch", ".", "from_numpy", "(", "all_item_degree", "-", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "'============================load degree success================================='", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "'============================load degree faulse================================='", ")", "\n", "trainAlldata_only_elder", ",", "trainItem_only_elder", ",", "trainUser_only_elder", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "self", ".", "datasetStage", "-", "2", ",", "self", ".", "datasetStage", "-", "1", ")", ":", "\n", "                    ", "train_file_elder", "=", "self", ".", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_only_elder", ".", "append", "(", "np", ".", "load", "(", "train_file_elder", ")", ")", "\n", "", "trainAlldata_only_elder", "=", "np", ".", "concatenate", "(", "trainAlldata_only_elder", ",", "axis", "=", "0", ")", "\n", "trainUserlist_only_elder", "=", "list", "(", "set", "(", "trainAlldata_only_elder", "[", ":", ",", "0", "]", ")", ")", "\n", "trainItemlist_only_elder", "=", "list", "(", "set", "(", "trainAlldata_only_elder", "[", ":", ",", "1", "]", ")", ")", "\n", "\n", "trainDict_only_elder", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_only_elder", ")", ")", ":", "\n", "                    ", "trainDict_only_elder", "[", "int", "(", "trainUserlist_only_elder", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_only_elder", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "if", "trainDict_only_elder", ".", "get", "(", "int", "(", "trainAlldata_only_elder", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                        ", "trainDict_only_elder", "[", "int", "(", "trainAlldata_only_elder", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_only_elder", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                        ", "trainDict_only_elder", "[", "int", "(", "trainAlldata_only_elder", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_only_elder", "[", "inter", ",", "1", "]", ")", "]", "\n", "", "", "for", "k", "in", "trainDict_only_elder", ".", "keys", "(", ")", ":", "\n", "                    ", "trainUser_only_elder", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_only_elder", "[", "k", "]", ")", ")", "\n", "trainItem_only_elder", ".", "extend", "(", "trainDict_only_elder", "[", "k", "]", ")", "\n", "", "trainUser_only_elder", "=", "np", ".", "array", "(", "trainUser_only_elder", ")", "\n", "trainItem_only_elder", "=", "np", ".", "array", "(", "trainItem_only_elder", ")", "\n", "UserItemNet_only_elder", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "trainUser_only_elder", ")", ")", ",", "(", "trainUser_only_elder", ",", "trainItem_only_elder", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_only_elder", ",", "trainUser_only_elder", ",", "trainItem_only_elder", ",", "trainDict_only_elder", ",", "trainAlldata_only_elder", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "\n", "now_item_degree", ":", "numpy", ".", "matrix", "\n", "now_item_", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "elder_item", "=", "UserItemNet_only_elder", ".", "tolil", "(", ")", "\n", "all_item_", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "now_item_degree", "=", "np", ".", "array", "(", "now_item_", ".", "sum", "(", "axis", "=", "0", ")", ")", "[", "0", "]", "\n", "elder_item_degree", "=", "np", ".", "array", "(", "elder_item", ".", "sum", "(", "axis", "=", "0", ")", ")", "[", "0", "]", "\n", "all_item_degree", "=", "np", ".", "array", "(", "all_item_", ".", "sum", "(", "axis", "=", "0", ")", ")", "[", "0", "]", "\n", "now_item_degree", "=", "now_item_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "elder_item_degree", "=", "elder_item_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "all_item_degree", "=", "all_item_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "now_item_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "2", ")", "+", "'-'", ",", "elder_item_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/item_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "all_item_degree", ")", "\n", "\n", "now_user_degree", ":", "numpy", ".", "matrix", "\n", "now_user_", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "elder_user_", "=", "UserItemNet_only_elder", ".", "tolil", "(", ")", "\n", "all_user_", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "now_user_degree", "=", "np", ".", "array", "(", "now_user_", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "elder_user_degree", "=", "np", ".", "array", "(", "elder_user_", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "all_user_degree", "=", "np", ".", "array", "(", "all_user_", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "now_user_degree", "=", "now_user_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "elder_user_degree", "=", "elder_user_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "all_user_degree", "=", "all_user_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "now_user_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "2", ")", "+", "'-'", ",", "elder_user_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/user_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "all_user_degree", ")", "\n", "\n", "self", ".", "now_user_degree", "=", "torch", ".", "from_numpy", "(", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "now_item_degree", "=", "torch", ".", "from_numpy", "(", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "elder_user_degree", "=", "torch", ".", "from_numpy", "(", "elder_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "elder_item_degree", "=", "torch", ".", "from_numpy", "(", "elder_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "old_user_degree", "=", "torch", ".", "from_numpy", "(", "all_user_degree", "-", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "old_item_degree", "=", "torch", ".", "from_numpy", "(", "all_item_degree", "-", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "\n", "", "if", "(", "now_user_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "n_user", ")", "or", "(", "all_user_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "n_user", ")", "or", "(", "elder_user_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "n_user", ")", ":", "\n", "                ", "raise", "ValueError", "(", "f'{now_user_degree.shape[1]}!={self.n_user}'", ")", "\n", "", "if", "(", "now_item_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "m_item", ")", "or", "(", "all_item_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "m_item", ")", "or", "(", "elder_item_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "m_item", ")", ":", "\n", "                ", "raise", "ValueError", "(", "f'{now_item_degree.shape[1]}!={self.n_user}'", ")", "\n", "\n", "", "", "return", "self", ".", "now_user_degree", ",", "self", ".", "now_item_degree", ",", "self", ".", "elder_user_degree", ",", "self", ".", "elder_item_degree", ",", "self", ".", "old_user_degree", ",", "self", ".", "old_item_degree", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.n_users": [[754, 757], ["None"], "methods", ["None"], ["    ", "@", "property", "\n", "def", "n_users", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_user", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.m_items": [[757, 760], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "m_items", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "m_item", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.trainDataSize": [[760, 763], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "trainDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_traindataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.testDataSize": [[763, 766], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_testdataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.testDict": [[766, 769], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__testDict", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.onlyGraphSize": [[769, 772], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "onlyGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_onlyGraphSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.allGraphSize": [[772, 775], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "allGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_allGraphSize", "\n", "", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.__init__": [[775, 880], ["print", "time.time", "numpy.load", "time.time", "range", "numpy.concatenate", "list", "list", "range", "range", "trainDict_only.keys", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "time.time", "range", "numpy.concatenate", "list", "range", "range", "trainDict_all.keys", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "print", "list", "range", "numpy.concatenate", "list", "range", "range", "test_item_dict.keys", "numpy.array", "print", "print", "numpy.concatenate.append", "set", "set", "len", "trainDict_only.get", "trainUser_only.extend", "trainItem_only.extend", "numpy.concatenate.append", "set", "len", "trainDict_all.get", "trainUser_all.extend", "trainItem_all.extend", "range", "posItems_now.append", "len", "numpy.concatenate.append", "set", "len", "test_item_dict.get", "testUniqueUsers.append", "numpy.load", "int", "trainDict_only[].append", "numpy.ones", "numpy.load", "int", "trainDict_all[].append", "numpy.ones", "numpy.load", "int", "int", "str", "int", "int", "int", "len", "len", "str", "int", "int", "int", "len", "len", "dataloader_handle_inference_icl.Loader_pre.UserItemNet_all[].nonzero", "str", "int", "int", "int", "int", "int", "time.time", "int", "int", "int", "time.time", "int", "int", "int"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n", "        ", "print", "(", "f'===========================load pre start , at stage {stage}==================================='", ")", "\n", "dataset_starttime", "=", "time", ".", "time", "(", ")", "\n", "information", "=", "np", ".", "load", "(", "path", "+", "'/information.npy'", ")", "\n", "self", ".", "n_user", "=", "information", "[", "1", "]", "\n", "self", ".", "m_item", "=", "information", "[", "2", "]", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "datasetStage", "=", "stage", "\n", "self", ".", "_traindataSize", "=", "0", "\n", "self", ".", "_testdataSize", "=", "0", "\n", "self", ".", "nowPos", "=", "[", "]", "\n", "self", ".", "hisPos", "=", "[", "]", "\n", "self", ".", "Graph_only", "=", "None", "\n", "self", ".", "Graph_all", "=", "None", "\n", "self", ".", "Graph_handle", "=", "None", "\n", "self", ".", "Rscale", "=", "None", "\n", "\n", "#=============================\u5236\u4f5cone stage graph==============================", "\n", "onlytime", "=", "time", ".", "time", "(", ")", "\n", "trainAlldata_only", ",", "trainItem_only", ",", "trainUser_only", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", "-", "1", ",", "stage", ")", ":", "#sml\u7248\u672c\u8d4b\u503c20\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f19.npy\u7684\u7684\u6570\u636e\u7528\u6765\u751f\u6210graph", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_only", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_only", "=", "np", ".", "concatenate", "(", "trainAlldata_only", ",", "axis", "=", "0", ")", "\n", "trainUserlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "0", "]", ")", ")", "#0\u5230\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709user\u6570\u91cf", "\n", "trainItemlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "1", "]", ")", ")", "\n", "#\u5236\u4f5ctrain dict", "\n", "trainDict_only", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_only", ")", ")", ":", "\n", "            ", "trainDict_only", "[", "int", "(", "trainUserlist_only", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_only", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "trainDict_only", ".", "get", "(", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", "]", "\n", "#\u5236\u4f5ctrainUser_only\u3001trainItem_only\u7528\u6765\u751f\u6210UserItemNet_only", "\n", "", "", "for", "k", "in", "trainDict_only", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_only", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_only", "[", "k", "]", ")", ")", "\n", "trainItem_only", ".", "extend", "(", "trainDict_only", "[", "k", "]", ")", "\n", "", "self", ".", "trainUser_unique_only", "=", "trainUserlist_only", "\n", "self", ".", "trainItem_unique_only", "=", "trainItemlist_only", "\n", "self", ".", "trainUser_only", "=", "np", ".", "array", "(", "trainUser_only", ")", "\n", "self", ".", "trainItem_only", "=", "np", ".", "array", "(", "trainItem_only", ")", "\n", "self", ".", "_onlyGraphSize", "=", "len", "(", "self", ".", "trainUser_only", ")", "\n", "self", ".", "UserItemNet_only", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_only", ")", ")", ",", "(", "self", ".", "trainUser_only", ",", "self", ".", "trainItem_only", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_only", ",", "trainUser_only", ",", "trainItem_only", ",", "trainDict_only", ",", "trainAlldata_only", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "# print(f'Loader_pre only graph at stage {self.datasetStage} reday size: {self._onlyGraphSize} ,used time {time.time()-onlytime}')", "\n", "\n", "#\u5236\u4f5call stage graph", "\n", "trainAlldata_all", ",", "trainItem_all", ",", "trainUser_all", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "alltime", "=", "time", ".", "time", "(", ")", "\n", "for", "s", "in", "range", "(", "0", ",", "stage", ")", ":", "#pre\u7248\u672c\u8d4b\u503c19\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f0-18.npy\u7684\u7684\u6570\u636e\u7528\u6765\u751f\u6210graph", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_all", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_all", "=", "np", ".", "concatenate", "(", "trainAlldata_all", ",", "axis", "=", "0", ")", "\n", "trainUserlist_all", "=", "list", "(", "set", "(", "trainAlldata_all", "[", ":", ",", "0", "]", ")", ")", "#0\u5230\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709user\u6570\u91cf", "\n", "trainDict_all", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_all", ")", ")", ":", "\n", "            ", "trainDict_all", "[", "int", "(", "trainUserlist_all", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_all", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "trainDict_all", ".", "get", "(", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", "]", "\n", "", "", "for", "k", "in", "trainDict_all", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_all", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_all", "[", "k", "]", ")", ")", "\n", "trainItem_all", ".", "extend", "(", "trainDict_all", "[", "k", "]", ")", "\n", "", "self", ".", "trainUser_all", "=", "np", ".", "array", "(", "trainUser_all", ")", "\n", "self", ".", "trainItem_all", "=", "np", ".", "array", "(", "trainItem_all", ")", "\n", "self", ".", "_allGraphSize", "=", "len", "(", "self", ".", "trainUser_all", ")", "\n", "self", ".", "UserItemNet_all", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_all", ")", ")", ",", "(", "self", ".", "trainUser_all", ",", "self", ".", "trainItem_all", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_all", ",", "trainUser_all", ",", "trainItem_all", ",", "trainDict_all", ",", "trainAlldata_all", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "print", "(", "f'Loader_pre all graph reday at stage: 0-{self.datasetStage} size: {self._allGraphSize} ,used time {time.time()-alltime}'", ")", "\n", "\n", "#\u751f\u6210\u5f53\u524dstage\u6b63\u6837\u672ctrain\u6570\u636e\u96c6hisPos,nowPos", "\n", "posItems_now", "=", "[", "]", "\n", "for", "user", "in", "list", "(", "range", "(", "self", ".", "n_user", ")", ")", ":", "\n", "            ", "posItems_now", ".", "append", "(", "self", ".", "UserItemNet_all", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "self", ".", "_traindataSize", "+=", "len", "(", "posItems_now", "[", "user", "]", ")", "\n", "", "self", ".", "hisPos", "=", "posItems_now", "\n", "self", ".", "nowPos", "=", "posItems_now", "\n", "\n", "#\u5236\u4f5ctestset", "\n", "testUniqueUsers", ",", "testdata_all", "=", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", ",", "stage", "+", "1", ")", ":", "#s\u8d4b\u503c19\u5f00\u59cb\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f19.npy", "\n", "            ", "test_file", "=", "path", "+", "'/test/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "testdata_all", ".", "append", "(", "np", ".", "load", "(", "test_file", ")", ")", "\n", "", "testdata_all", "=", "np", ".", "concatenate", "(", "testdata_all", ",", "axis", "=", "0", ")", "\n", "test_item_dict", "=", "{", "}", "#user\u662f\u7b2c\u4e00\u5c42key\u6b63\u6837\u672c\u662f\u7b2c\u4e8c\u5c42key\uff0cvalue\u662f\u8fd9\u6761iter\u7684\u6b63+\u8d1f\u6837\u672c\uff0c\u662ftestDict", "\n", "test_user", "=", "list", "(", "set", "(", "testdata_all", "[", ":", ",", "0", "]", ")", ")", "\n", "for", "ut", "in", "range", "(", "len", "(", "test_user", ")", ")", ":", "#\u521b\u5efa\u4e00\u4e2a\u4ee5test user id\u4e3akey\u7684\u5b57\u5178", "\n", "            ", "test_item_dict", "[", "int", "(", "test_user", "[", "ut", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "testdata_all", ".", "shape", "[", "0", "]", ")", ":", "#\u5d4c\u5957\u5b57\u5178\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u7684key\u662ftest\u6b63\u6837\u672cvalue\u662f\u6240\u6709\u4ea4\u4e92\u6570\u636e", "\n", "            ", "if", "test_item_dict", ".", "get", "(", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "[", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "]", "=", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "\n", "", "else", ":", "\n", "                ", "key_temp", "=", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "\n", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "{", "int", "(", "key_temp", ")", ":", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "}", "\n", "", "", "for", "key", "in", "test_item_dict", ".", "keys", "(", ")", ":", "\n", "            ", "testUniqueUsers", ".", "append", "(", "key", ")", "\n", "", "self", ".", "testUniqueUsers", "=", "np", ".", "array", "(", "testUniqueUsers", ")", "\n", "self", ".", "_testdataSize", "=", "testdata_all", ".", "shape", "[", "0", "]", "\n", "self", ".", "__testDict", "=", "test_item_dict", "#\u53cc\u5c42\u5d4c\u5957\u5b57\u5178", "\n", "print", "(", "f\"Loader_hat at stage : {self.datasetStage} , {self._traindataSize} interactions for train , {self._testdataSize} interactions for test\"", ")", "\n", "print", "(", "f'===========================load data is ready ,used time : {time.time()-dataset_starttime} s ==================================='", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre._convert_sp_mat_to_sp_tensor": [[881, 888], ["X.tocoo().astype", "torch.Tensor().long", "torch.Tensor().long", "torch.stack", "torch.FloatTensor", "torch.sparse.FloatTensor", "torch.Size", "X.tocoo", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_convert_sp_mat_to_sp_tensor", "(", "self", ",", "X", ")", ":", "\n", "        ", "coo", "=", "X", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "row", "=", "torch", ".", "Tensor", "(", "coo", ".", "row", ")", ".", "long", "(", ")", "\n", "col", "=", "torch", ".", "Tensor", "(", "coo", ".", "col", ")", ".", "long", "(", ")", "\n", "index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ")", "\n", "data", "=", "torch", ".", "FloatTensor", "(", "coo", ".", "data", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "index", ",", "data", ",", "torch", ".", "Size", "(", "coo", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.getSparseGraph_only": [[889, 923], ["time.time", "dataloader_handle_inference_icl.Loader_pre._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_pre.Graph_only.coalesce().to", "print", "scipy.load_npz", "print", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_pre.UserItemNet_only.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.Loader_pre.Graph_only.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_only", "(", "self", ")", ":", "\n", "# print(\"try loading adjacency matrix\")", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_only", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded only graph...\"", ")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load only graph faulse at: '", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz    '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "# adj_mat = adj_mat + sp.eye(adj_mat.shape[0])", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved norm_mat at \"", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_only", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_only", "=", "self", ".", "Graph_only", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"only adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_only", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.getSparseGraph_all": [[924, 958], ["time.time", "dataloader_handle_inference_icl.Loader_pre._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_pre.Graph_all.coalesce().to", "print", "scipy.load_npz", "print", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_pre.UserItemNet_all.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.Loader_pre.Graph_all.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_all", "(", "self", ")", ":", "\n", "# print(\"try loading adjacency matrix\")", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_all", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded all graph...\"", ")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load all graph faulse at: '", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz    '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "# adj_mat = adj_mat + sp.eye(adj_mat.shape[0])", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved all graph norm_mat at \"", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_all", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_all", "=", "self", ".", "Graph_all", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"all adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_all", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_pre.getSparseGraph_handle": [[959, 1017], ["time.time", "dataloader_handle_inference_icl.Loader_pre._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.Loader_pre.Graph_handle.coalesce().to", "torch.from_numpy().to", "print", "scipy.load_npz", "numpy.load", "print", "print", "time.time", "scipy.dok_matrix", "adj_mat_all.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_pre.UserItemNet_all.tolil", "adj_mat_all.todok.todok.todok", "scipy.dok_matrix", "adj_mat_only.todok.todok.tolil", "dataloader_handle_inference_icl.Loader_pre.UserItemNet_only.tolil", "adj_mat_only.todok.todok.todok", "numpy.array", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "numpy.power", "numpy.power", "numpy.true_divide", "time.time", "print", "scipy.save_npz", "numpy.save", "dataloader_handle_inference_icl.Loader_pre.Graph_handle.coalesce", "torch.from_numpy", "adj_mat_all.todok.todok.sum", "adj_mat_only.todok.todok.sum", "str", "str", "numpy.power", "numpy.isinf", "numpy.isinf", "numpy.isnan", "time.time", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_handle", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_handle", "or", "self", ".", "Rscale", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat_all", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "rscale_vec", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "print", "(", "\"successfully loaded handle graph and rescale\"", ")", "\n", "norm_adj", "=", "pre_adj_mat_all", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load handle_graph faulse at: '", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat_all", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat_all", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_all", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "todok", "(", ")", "\n", "# adj_mat_all = adj_mat_all + sp.eye(adj_mat_all.shape[0])", "\n", "\n", "adj_mat_only", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat_only", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "todok", "(", ")", "\n", "# adj_mat_only = adj_mat_only + sp.eye(adj_mat_only.shape[0])", "\n", "\n", "rowsum_all", "=", "np", ".", "array", "(", "adj_mat_all", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "rowsum_only", "=", "np", ".", "array", "(", "adj_mat_only", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "\n", "degree_new", "=", "rowsum_only", "\n", "degree_old", "=", "rowsum_all", "-", "rowsum_only", "\n", "degree_all", "=", "rowsum_all", "\n", "d_inv", "=", "np", ".", "power", "(", "degree_all", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "#flatten\u76f4\u63a5\u53d8\u6210\u4e00\u884c\u4e86", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat_only", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "\n", "old_scale", "=", "np", ".", "power", "(", "degree_old", ",", "0.5", ")", "\n", "# old_scale[np.isinf(old_scale)]=0.", "\n", "new_scale", "=", "np", ".", "power", "(", "degree_all", ",", "0.5", ")", "\n", "# new_scale[np.isinf(degree_all)]=0.", "\n", "rscale_vec", "=", "np", ".", "true_divide", "(", "old_scale", ",", "new_scale", ")", "# n*1 array", "\n", "rscale_vec", "[", "np", ".", "isinf", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "rscale_vec", "[", "np", ".", "isnan", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved handle graph norm_mat at \"", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "rscale_vec", ")", "\n", "\n", "", "self", ".", "Graph_handle", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_handle", "=", "self", ".", "Graph_handle", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "Rscale", "=", "torch", ".", "from_numpy", "(", "rscale_vec", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"handle adjacency matrix & Rescale vector done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_handle", ",", "self", ".", "Rscale", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.__init__": [[1108, 1247], ["print", "time.time", "numpy.load", "time.time", "range", "numpy.concatenate", "list", "list", "range", "range", "trainDict_only.keys", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "print", "time.time", "range", "numpy.concatenate", "list", "list", "range", "range", "trainDict_only_future.keys", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "print", "time.time", "range", "numpy.concatenate", "list", "range", "range", "trainDict_all.keys", "numpy.array", "numpy.array", "len", "scipy.sparse.csr_matrix", "print", "list", "range", "numpy.concatenate", "list", "range", "range", "test_item_dict.keys", "numpy.array", "print", "numpy.concatenate.append", "set", "set", "len", "trainDict_only.get", "trainUser_only.extend", "trainItem_only.extend", "numpy.concatenate.append", "set", "set", "len", "trainDict_only_future.get", "trainUser_only_future.extend", "trainItem_only_future.extend", "numpy.concatenate.append", "set", "len", "trainDict_all.get", "trainUser_all.extend", "trainItem_all.extend", "range", "posItems_his.append", "posItems_now.append", "len", "numpy.concatenate.append", "set", "len", "test_item_dict.get", "testUniqueUsers.append", "numpy.load", "int", "trainDict_only[].append", "numpy.ones", "numpy.load", "int", "trainDict_only_future[].append", "numpy.ones", "numpy.load", "int", "trainDict_all[].append", "numpy.ones", "numpy.load", "int", "int", "str", "int", "int", "int", "len", "len", "str", "int", "int", "int", "len", "len", "str", "int", "int", "int", "len", "len", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all[].nonzero", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only[].nonzero", "str", "int", "int", "int", "int", "time.time", "int", "time.time", "int", "time.time", "int", "int", "int", "time.time", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n", "        ", "print", "(", "f'===========================load data start , at stage {stage}==================================='", ")", "\n", "dataset_starttime", "=", "time", ".", "time", "(", ")", "\n", "information", "=", "np", ".", "load", "(", "path", "+", "'/information.npy'", ")", "\n", "self", ".", "n_user", "=", "information", "[", "1", "]", "\n", "self", ".", "m_item", "=", "information", "[", "2", "]", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "datasetStage", "=", "stage", "\n", "self", ".", "_traindataSize", "=", "0", "\n", "self", ".", "_testdataSize", "=", "0", "\n", "self", ".", "nowPos", "=", "[", "]", "\n", "self", ".", "hisPos", "=", "[", "]", "\n", "self", ".", "Graph_only", "=", "None", "\n", "self", ".", "Graph_all", "=", "None", "\n", "self", ".", "Graph_handle", "=", "None", "\n", "self", ".", "Rscale", "=", "None", "\n", "self", ".", "Graph_future_degree", "=", "None", "\n", "self", ".", "Rscale_future_degree", "=", "None", "\n", "\n", "#=============================\u5236\u4f5cone stage graph==============================", "\n", "onlytime", "=", "time", ".", "time", "(", ")", "\n", "trainAlldata_only", ",", "trainItem_only", ",", "trainUser_only", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", "-", "1", ",", "stage", ")", ":", "#sml\u7248\u672c\u8d4b\u503c20\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f19.npy\u7684\u7684\u6570\u636e\u7528\u6765\u751f\u6210graph", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_only", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_only", "=", "np", ".", "concatenate", "(", "trainAlldata_only", ",", "axis", "=", "0", ")", "\n", "trainUserlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "0", "]", ")", ")", "#\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709user\u6570\u91cf", "\n", "trainItemlist_only", "=", "list", "(", "set", "(", "trainAlldata_only", "[", ":", ",", "1", "]", ")", ")", "#\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709item\u6570\u91cf", "\n", "#\u5236\u4f5ctrain dict", "\n", "trainDict_only", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_only", ")", ")", ":", "\n", "            ", "trainDict_only", "[", "int", "(", "trainUserlist_only", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_only", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "trainDict_only", ".", "get", "(", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "trainDict_only", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_only", "[", "inter", ",", "1", "]", ")", "]", "\n", "#\u5236\u4f5ctrainUser_only\u3001trainItem_only\u7528\u6765\u751f\u6210UserItemNet_only", "\n", "", "", "for", "k", "in", "trainDict_only", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_only", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_only", "[", "k", "]", ")", ")", "\n", "trainItem_only", ".", "extend", "(", "trainDict_only", "[", "k", "]", ")", "\n", "", "self", ".", "trainUser_unique_only", "=", "trainUserlist_only", "\n", "self", ".", "trainItem_unique_only", "=", "trainItemlist_only", "\n", "self", ".", "trainUser_only", "=", "np", ".", "array", "(", "trainUser_only", ")", "\n", "self", ".", "trainItem_only", "=", "np", ".", "array", "(", "trainItem_only", ")", "\n", "self", ".", "_onlyGraphSize", "=", "len", "(", "self", ".", "trainUser_only", ")", "\n", "self", ".", "UserItemNet_only", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_only", ")", ")", ",", "(", "self", ".", "trainUser_only", ",", "self", ".", "trainItem_only", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_only", ",", "trainUser_only", ",", "trainItem_only", ",", "trainDict_only", ",", "trainAlldata_only", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "print", "(", "f'Loader_hat only graph at stage {self.datasetStage-1} reday size: {self._onlyGraphSize} ,used time {time.time()-onlytime}'", ")", "\n", "\n", "#=============================\u5236\u4f5cfuture stage graph==============================", "\n", "onlytime", "=", "time", ".", "time", "(", ")", "\n", "trainAlldata_only_future", ",", "trainItem_only_future", ",", "trainUser_only_future", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", ",", "stage", "+", "1", ")", ":", "#sml\u7248\u672c\u8d4b\u503c20\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f19.npy\u7684\u7684\u6570\u636e\u7528\u6765\u751f\u6210graph", "\n", "            ", "train_file_future", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_only_future", ".", "append", "(", "np", ".", "load", "(", "train_file_future", ")", ")", "\n", "", "trainAlldata_only_future", "=", "np", ".", "concatenate", "(", "trainAlldata_only_future", ",", "axis", "=", "0", ")", "\n", "trainUserlist_only_future", "=", "list", "(", "set", "(", "trainAlldata_only_future", "[", ":", ",", "0", "]", ")", ")", "#\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709user\u6570\u91cf", "\n", "trainItemlist_only_future", "=", "list", "(", "set", "(", "trainAlldata_only_future", "[", ":", ",", "1", "]", ")", ")", "#\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709item\u6570\u91cf", "\n", "#\u5236\u4f5ctrain dict", "\n", "trainDict_only_future", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_only_future", ")", ")", ":", "\n", "            ", "trainDict_only_future", "[", "int", "(", "trainUserlist_only_future", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_only_future", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "trainDict_only_future", ".", "get", "(", "int", "(", "trainAlldata_only_future", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "trainDict_only_future", "[", "int", "(", "trainAlldata_only_future", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_only_future", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "trainDict_only_future", "[", "int", "(", "trainAlldata_only_future", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_only_future", "[", "inter", ",", "1", "]", ")", "]", "\n", "#\u5236\u4f5ctrainUser_only_future\u3001trainItem_only_future\u7528\u6765\u751f\u6210UserItemNet_only", "\n", "", "", "for", "k", "in", "trainDict_only_future", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_only_future", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_only_future", "[", "k", "]", ")", ")", "\n", "trainItem_only_future", ".", "extend", "(", "trainDict_only_future", "[", "k", "]", ")", "\n", "", "self", ".", "trainUser_unique_only", "=", "trainUserlist_only_future", "\n", "self", ".", "trainItem_unique_only", "=", "trainItemlist_only_future", "\n", "self", ".", "trainUser_only_future", "=", "np", ".", "array", "(", "trainUser_only_future", ")", "\n", "self", ".", "trainItem_only_future", "=", "np", ".", "array", "(", "trainItem_only_future", ")", "\n", "self", ".", "_onlyGraphSize_future", "=", "len", "(", "self", ".", "trainUser_only_future", ")", "\n", "self", ".", "UserItemNet_only_future", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_only_future", ")", ")", ",", "(", "self", ".", "trainUser_only_future", ",", "self", ".", "trainItem_only_future", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_only_future", ",", "trainUser_only_future", ",", "trainItem_only_future", ",", "trainDict_only_future", ",", "trainAlldata_only_future", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "print", "(", "f'Loader_hat only_future graph at stage {self.datasetStage-1} reday size: {self._onlyGraphSize_future} ,used time {time.time()-onlytime}'", ")", "\n", "\n", "#\u5236\u4f5call stage graph", "\n", "trainAlldata_all", ",", "trainItem_all", ",", "trainUser_all", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "alltime", "=", "time", ".", "time", "(", ")", "\n", "for", "s", "in", "range", "(", "0", ",", "stage", "+", "1", ")", ":", "#sml\u7248\u672c\u8d4b\u503c20\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f0-19.npy\u7684\u7684\u6570\u636e\u7528\u6765\u751f\u6210graph", "\n", "            ", "train_file", "=", "path", "+", "'/train/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "trainAlldata_all", ".", "append", "(", "np", ".", "load", "(", "train_file", ")", ")", "\n", "", "trainAlldata_all", "=", "np", ".", "concatenate", "(", "trainAlldata_all", ",", "axis", "=", "0", ")", "\n", "trainUserlist_all", "=", "list", "(", "set", "(", "trainAlldata_all", "[", ":", ",", "0", "]", ")", ")", "#0\u5230\u8fd9\u4e00stage\uff08stage-1.npy\uff09\u7684\u6240\u6709user\u6570\u91cf", "\n", "trainDict_all", "=", "{", "}", "\n", "for", "ui", "in", "range", "(", "len", "(", "trainUserlist_all", ")", ")", ":", "\n", "            ", "trainDict_all", "[", "int", "(", "trainUserlist_all", "[", "ui", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "trainAlldata_all", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "trainDict_all", ".", "get", "(", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", ".", "append", "(", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "trainDict_all", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "[", "int", "(", "trainAlldata_all", "[", "inter", ",", "1", "]", ")", "]", "\n", "", "", "for", "k", "in", "trainDict_all", ".", "keys", "(", ")", ":", "\n", "            ", "trainUser_all", ".", "extend", "(", "[", "k", "]", "*", "len", "(", "trainDict_all", "[", "k", "]", ")", ")", "\n", "trainItem_all", ".", "extend", "(", "trainDict_all", "[", "k", "]", ")", "\n", "", "self", ".", "trainUser_all", "=", "np", ".", "array", "(", "trainUser_all", ")", "\n", "self", ".", "trainItem_all", "=", "np", ".", "array", "(", "trainItem_all", ")", "\n", "self", ".", "_allGraphSize", "=", "len", "(", "self", ".", "trainUser_all", ")", "\n", "self", ".", "UserItemNet_all", "=", "csr_matrix", "(", "(", "np", ".", "ones", "(", "len", "(", "self", ".", "trainUser_all", ")", ")", ",", "(", "self", ".", "trainUser_all", ",", "self", ".", "trainItem_all", ")", ")", ",", "shape", "=", "(", "self", ".", "n_user", ",", "self", ".", "m_item", ")", ")", "\n", "del", "trainUserlist_all", ",", "trainUser_all", ",", "trainItem_all", ",", "trainDict_all", ",", "trainAlldata_all", "#\u5728\u751f\u6210A\u77e9\u9635\u540e\u5c31\u5220\u9664\u5168\u91cf\u7ed3\u679c", "\n", "print", "(", "f'Loader_hat all graph reday at stage: 0-{self.datasetStage-1} size: {self._allGraphSize} ,used time {time.time()-alltime}'", ")", "\n", "\n", "#\u751f\u6210\u5f53\u524dstage\u6b63\u6837\u672ctrain\u6570\u636e\u96c6hisPos,nowPos", "\n", "posItems_his", ",", "posItems_now", "=", "[", "]", ",", "[", "]", "\n", "for", "user", "in", "list", "(", "range", "(", "self", ".", "n_user", ")", ")", ":", "\n", "            ", "posItems_his", ".", "append", "(", "self", ".", "UserItemNet_all", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "posItems_now", ".", "append", "(", "self", ".", "UserItemNet_only", "[", "user", "]", ".", "nonzero", "(", ")", "[", "1", "]", ")", "\n", "self", ".", "_traindataSize", "+=", "len", "(", "posItems_now", "[", "user", "]", ")", "\n", "", "self", ".", "hisPos", "=", "posItems_his", "\n", "self", ".", "nowPos", "=", "posItems_now", "\n", "\n", "#\u5236\u4f5ctestset", "\n", "testUniqueUsers", ",", "testdata_all", "=", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "stage", ",", "stage", "+", "1", ")", ":", "#s\u8d4b\u503c20\u5f00\u59cb\uff0cstage\u7684\u7ed3\u679c\u4f1a\u662f20.npy", "\n", "            ", "test_file", "=", "path", "+", "'/test/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "testdata_all", ".", "append", "(", "np", ".", "load", "(", "test_file", ")", ")", "\n", "", "testdata_all", "=", "np", ".", "concatenate", "(", "testdata_all", ",", "axis", "=", "0", ")", "\n", "test_item_dict", "=", "{", "}", "#user\u662f\u7b2c\u4e00\u5c42key\u6b63\u6837\u672c\u662f\u7b2c\u4e8c\u5c42key\uff0cvalue\u662f\u8fd9\u6761iter\u7684\u6b63+\u8d1f\u6837\u672c\uff0c\u662ftestDict", "\n", "test_user", "=", "list", "(", "set", "(", "testdata_all", "[", ":", ",", "0", "]", ")", ")", "\n", "for", "ut", "in", "range", "(", "len", "(", "test_user", ")", ")", ":", "#\u521b\u5efa\u4e00\u4e2a\u4ee5test user id\u4e3akey\u7684\u5b57\u5178", "\n", "            ", "test_item_dict", "[", "int", "(", "test_user", "[", "ut", "]", ")", "]", "=", "[", "]", "\n", "", "for", "inter", "in", "range", "(", "testdata_all", ".", "shape", "[", "0", "]", ")", ":", "#\u5d4c\u5957\u5b57\u5178\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u7684key\u662ftest\u6b63\u6837\u672cvalue\u662f\u6240\u6709\u4ea4\u4e92\u6570\u636e", "\n", "            ", "if", "test_item_dict", ".", "get", "(", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", ")", ":", "\n", "                ", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "[", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "]", "=", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "\n", "", "else", ":", "\n", "                ", "key_temp", "=", "int", "(", "testdata_all", "[", "inter", ",", "1", "]", ")", "\n", "test_item_dict", "[", "int", "(", "testdata_all", "[", "inter", ",", "0", "]", ")", "]", "=", "{", "int", "(", "key_temp", ")", ":", "[", "int", "(", "x", ")", "for", "x", "in", "testdata_all", "[", "inter", ",", "1", ":", "]", "]", "}", "\n", "", "", "for", "key", "in", "test_item_dict", ".", "keys", "(", ")", ":", "\n", "            ", "testUniqueUsers", ".", "append", "(", "key", ")", "\n", "", "self", ".", "testUniqueUsers", "=", "np", ".", "array", "(", "testUniqueUsers", ")", "\n", "self", ".", "_testdataSize", "=", "testdata_all", ".", "shape", "[", "0", "]", "\n", "self", ".", "__testDict", "=", "test_item_dict", "#\u53cc\u5c42\u5d4c\u5957\u5b57\u5178", "\n", "# print(f\"Loader_hat at stage : {self.datasetStage} , {self._traindataSize} interactions for train , {self._testdataSize} interactions for test\")", "\n", "print", "(", "f'===========================load data is ready ,used time : {time.time()-dataset_starttime} s ==================================='", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.get_test_dict": [[1032, 1085], ["range", "numpy.concatenate", "list", "list", "numpy.concatenate.append", "set", "set", "len", "ValueError", "ori_testDict[].keys", "ori_testDict[].keys", "numpy.load", "len", "len", "str", "test_dictOO.get", "test_dictON.get", "test_dictNO.get", "test_dictNN.get", "len", "len", "len", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "get_test_dict", "(", "self", ",", "ori_testDict", ")", ":", "\n", "        ", "testUniqueUsers", ",", "testdata_all", "=", "[", "]", ",", "[", "]", "\n", "for", "s", "in", "range", "(", "self", ".", "datasetStage", ",", "self", ".", "datasetStage", "+", "1", ")", ":", "\n", "            ", "test_file", "=", "self", ".", "path", "+", "'/test/'", "+", "str", "(", "s", ")", "+", "'.npy'", "\n", "testdata_all", ".", "append", "(", "np", ".", "load", "(", "test_file", ")", ")", "\n", "", "testdata_all", "=", "np", ".", "concatenate", "(", "testdata_all", ",", "axis", "=", "0", ")", "\n", "test_dictOO", "=", "{", "}", "\n", "test_dictON", "=", "{", "}", "\n", "test_dictNO", "=", "{", "}", "\n", "test_dictNN", "=", "{", "}", "\n", "OO_sum", "=", "0", "\n", "ON_sum", "=", "0", "\n", "NO_sum", "=", "0", "\n", "NN_sum", "=", "0", "\n", "\n", "test_user", "=", "list", "(", "set", "(", "testdata_all", "[", ":", ",", "0", "]", ")", ")", "\n", "test_itme", "=", "list", "(", "set", "(", "testdata_all", "[", ":", ",", "1", "]", ")", ")", "\n", "test_user_O", "=", "[", "i", "for", "i", "in", "test_user", "if", "i", "in", "self", ".", "trainUserlist_all", "]", "\n", "test_user_N", "=", "[", "i", "for", "i", "in", "test_user", "if", "i", "not", "in", "self", ".", "trainUserlist_all", "]", "\n", "test_item_O", "=", "[", "i", "for", "i", "in", "test_itme", "if", "i", "in", "self", ".", "trainItemlist_all", "]", "\n", "if", "len", "(", "test_user_O", ")", "+", "len", "(", "test_user_N", ")", "!=", "len", "(", "test_user", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'{len(test_user_O)} + {len(test_user_N)} != {len(test_user)}'", ")", "\n", "", "for", "userO", "in", "test_user_O", ":", "\n", "            ", "for", "posit", "in", "ori_testDict", "[", "int", "(", "userO", ")", "]", ".", "keys", "(", ")", ":", "\n", "                ", "if", "posit", "in", "test_item_O", ":", "\n", "                    ", "if", "test_dictOO", ".", "get", "(", "int", "(", "userO", ")", ")", ":", "\n", "                        ", "test_dictOO", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "=", "ori_testDict", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "\n", "", "else", ":", "\n", "                        ", "test_dictOO", "[", "int", "(", "userO", ")", "]", "=", "{", "int", "(", "posit", ")", ":", "ori_testDict", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "}", "\n", "", "OO_sum", "=", "OO_sum", "+", "1", "\n", "", "else", ":", "\n", "                    ", "if", "test_dictON", ".", "get", "(", "int", "(", "userO", ")", ")", ":", "\n", "                        ", "test_dictON", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "=", "ori_testDict", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "\n", "", "else", ":", "\n", "                        ", "test_dictON", "[", "int", "(", "userO", ")", "]", "=", "{", "int", "(", "posit", ")", ":", "ori_testDict", "[", "int", "(", "userO", ")", "]", "[", "posit", "]", "}", "\n", "", "ON_sum", "=", "ON_sum", "+", "1", "\n", "\n", "", "", "", "for", "userN", "in", "test_user_N", ":", "\n", "            ", "for", "posit", "in", "ori_testDict", "[", "int", "(", "userN", ")", "]", ".", "keys", "(", ")", ":", "\n", "                ", "if", "posit", "in", "test_item_O", ":", "\n", "                    ", "if", "test_dictNO", ".", "get", "(", "int", "(", "userN", ")", ")", ":", "\n", "                        ", "test_dictNO", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "=", "ori_testDict", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "\n", "", "else", ":", "\n", "                        ", "test_dictNO", "[", "int", "(", "userN", ")", "]", "=", "{", "int", "(", "posit", ")", ":", "ori_testDict", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "}", "\n", "", "NO_sum", "=", "NO_sum", "+", "1", "\n", "", "else", ":", "\n", "                    ", "if", "test_dictNN", ".", "get", "(", "int", "(", "userN", ")", ")", ":", "\n", "                        ", "test_dictNN", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "=", "ori_testDict", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "\n", "", "else", ":", "\n", "                        ", "test_dictNN", "[", "int", "(", "userN", ")", "]", "=", "{", "int", "(", "posit", ")", ":", "ori_testDict", "[", "int", "(", "userN", ")", "]", "[", "posit", "]", "}", "\n", "", "NN_sum", "=", "NN_sum", "+", "1", "\n", "\n", "", "", "", "return", "test_dictOO", ",", "test_dictON", ",", "test_dictNO", ",", "test_dictNN", ",", "OO_sum", ",", "ON_sum", ",", "NO_sum", ",", "NN_sum", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.n_users": [[1087, 1090], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_users", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_user", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.m_items": [[1090, 1093], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "m_items", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "m_item", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.trainDataSize": [[1093, 1096], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "trainDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_traindataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.testDataSize": [[1096, 1099], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDataSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_testdataSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.testDict": [[1099, 1102], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "testDict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__testDict", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.onlyGraphSize": [[1102, 1105], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "onlyGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_onlyGraphSize", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.allGraphSize": [[1105, 1108], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "allGraphSize", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_allGraphSize", "\n", "", "def", "__init__", "(", "self", ",", "stage", ",", "config", "=", "world", ".", "config", ",", "path", "=", "\"../data/finetune_yelp\"", ")", ":", "#stage=30", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor": [[1248, 1255], ["X.tocoo().astype", "torch.Tensor().long", "torch.Tensor().long", "torch.stack", "torch.FloatTensor", "torch.sparse.FloatTensor", "torch.Size", "X.tocoo", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "_convert_sp_mat_to_sp_tensor", "(", "self", ",", "X", ")", ":", "\n", "        ", "coo", "=", "X", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "row", "=", "torch", ".", "Tensor", "(", "coo", ".", "row", ")", ".", "long", "(", ")", "\n", "col", "=", "torch", ".", "Tensor", "(", "coo", ".", "col", ")", ".", "long", "(", ")", "\n", "index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ")", "\n", "data", "=", "torch", ".", "FloatTensor", "(", "coo", ".", "data", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "index", ",", "data", ",", "torch", ".", "Size", "(", "coo", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_only": [[1256, 1290], ["time.time", "dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.test_cold_start.Graph_only.coalesce().to", "print", "scipy.load_npz", "print", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.test_cold_start.Graph_only.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_only", "(", "self", ")", ":", "\n", "# print(\"try loading adjacency matrix\")", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_only", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded only graph...\"", ")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load only graph faulse at: '", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz    '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "# adj_mat = adj_mat + sp.eye(adj_mat.shape[0])", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved norm_mat at \"", "+", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/__ONLY__no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_only", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_only", "=", "self", ".", "Graph_only", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"only adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_only", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_all": [[1291, 1325], ["time.time", "dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.test_cold_start.Graph_all.coalesce().to", "print", "scipy.load_npz", "print", "print", "time.time", "scipy.dok_matrix", "adj_mat.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all.tolil", "adj_mat.todok.todok.todok", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "time.time", "print", "scipy.save_npz", "dataloader_handle_inference_icl.test_cold_start.Graph_all.coalesce", "adj_mat.todok.todok.sum", "str", "numpy.power", "numpy.isinf", "time.time", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_all", "(", "self", ")", ":", "\n", "# print(\"try loading adjacency matrix\")", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_all", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded all graph...\"", ")", "\n", "norm_adj", "=", "pre_adj_mat", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load all graph faulse at: '", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz  '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "# adj_mat = adj_mat + sp.eye(adj_mat.shape[0])", "\n", "\n", "rowsum", "=", "np", ".", "array", "(", "adj_mat", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved all graph norm_mat at \"", "+", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/no self loop'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "", "self", ".", "Graph_all", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_all", "=", "self", ".", "Graph_all", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"all adjacency matrix done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_all", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_handle": [[1326, 1393], ["time.time", "dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.test_cold_start.Graph_handle.coalesce().to", "torch.from_numpy().to", "print", "scipy.load_npz", "print", "numpy.load", "print", "sum", "TypeError", "print", "time.time", "scipy.dok_matrix", "adj_mat_all.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all.tolil", "adj_mat_all.todok.todok.todok", "scipy.dok_matrix", "adj_mat_only.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only.tolil", "adj_mat_only.todok.todok.todok", "numpy.array", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "numpy.power", "numpy.power", "numpy.true_divide", "numpy.save", "numpy.save", "time.time", "print", "scipy.save_npz", "numpy.save", "numpy.isinf", "sum", "TypeError", "dataloader_handle_inference_icl.test_cold_start.Graph_handle.coalesce", "torch.from_numpy", "adj_mat_all.todok.todok.sum", "adj_mat_only.todok.todok.sum", "numpy.isnan", "str", "str", "numpy.power", "numpy.isinf", "numpy.isinf", "numpy.isnan", "sum", "time.time", "str", "str", "str", "numpy.isinf", "sum", "str", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_handle", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_handle", "or", "self", ".", "Rscale", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat_all", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded handle graph \"", ")", "\n", "rscale_vec", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "print", "(", "\"successfully loaded handle rescale\"", ")", "\n", "norm_adj", "=", "pre_adj_mat_all", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load handle_graph faulse at: '", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "#\u751f\u6210adj_all", "\n", "adj_mat_all", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat_all", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_all", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "todok", "(", ")", "\n", "# adj_mat_all = adj_mat_all + sp.eye(adj_mat_all.shape[0])", "\n", "\n", "#\u751f\u6210adj_only", "\n", "adj_mat_only", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat_only", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "todok", "(", ")", "\n", "# adj_mat_only = adj_mat_only + sp.eye(adj_mat_only.shape[0])", "\n", "\n", "rowsum_all", "=", "np", ".", "array", "(", "adj_mat_all", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "rowsum_only", "=", "np", ".", "array", "(", "adj_mat_only", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "\n", "degree_new", "=", "rowsum_only", "\n", "degree_old", "=", "rowsum_all", "-", "rowsum_only", "\n", "degree_all", "=", "rowsum_all", "\n", "d_inv", "=", "np", ".", "power", "(", "degree_all", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "#flatten\u76f4\u63a5\u53d8\u6210\u4e00\u884c\u4e86", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat_only", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "\n", "old_scale", "=", "np", ".", "power", "(", "degree_old", ",", "0.5", ")", "\n", "# old_scale[np.isinf(old_scale)]=0.", "\n", "new_scale", "=", "np", ".", "power", "(", "degree_all", ",", "0.5", ")", "\n", "# new_scale[np.isinf(degree_all)]=0.", "\n", "rscale_vec", "=", "np", ".", "true_divide", "(", "old_scale", ",", "new_scale", ")", "# n*1 array", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/fenzi-'", "+", "'-'", ",", "old_scale", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/fenmu'", "+", "'-'", ",", "new_scale", ")", "\n", "rscale_vec", "[", "np", ".", "isinf", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "rscale_vec", "[", "np", ".", "isnan", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"costing {end-s}s, saved handle graph norm_mat at \"", "+", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/handle_graph'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "rscale_vec", ")", "\n", "\n", "", "if", "sum", "(", "np", ".", "isinf", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isinf(rscale_vec))}'", ")", "\n", "", "elif", "sum", "(", "np", ".", "isnan", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isnan(rscale_vec))}'", ")", "\n", "", "self", ".", "Graph_handle", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_handle", "=", "self", ".", "Graph_handle", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "Rscale", "=", "torch", ".", "from_numpy", "(", "rscale_vec", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"handle adjacency matrix & Rescale vector done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_handle", ",", "self", ".", "Rscale", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_future_degree_adj": [[1394, 1467], ["time.time", "dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor", "dataloader_handle_inference_icl.test_cold_start.Graph_future_degree.coalesce().to", "torch.from_numpy().to", "print", "scipy.load_npz", "print", "numpy.load", "print", "sum", "TypeError", "print", "time.time", "scipy.dok_matrix", "adj_mat_all.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all.tolil", "adj_mat_all.todok.todok.todok", "scipy.dok_matrix", "adj_mat_only.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only.tolil", "adj_mat_only.todok.todok.todok", "scipy.dok_matrix", "adj_mat_only_future.todok.todok.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only_future.tolil", "adj_mat_only_future.todok.todok.todok", "numpy.array", "numpy.array", "numpy.array", "numpy.power().flatten", "scipy.diags", "scipy.diags.dot", "norm_adj.tocsr.tocsr.dot", "norm_adj.tocsr.tocsr.tocsr", "numpy.power", "numpy.power", "numpy.true_divide", "time.time", "scipy.save_npz", "numpy.save", "numpy.isinf", "sum", "TypeError", "dataloader_handle_inference_icl.test_cold_start.Graph_future_degree.coalesce", "torch.from_numpy", "adj_mat_all.todok.todok.sum", "adj_mat_only.todok.todok.sum", "adj_mat_only_future.todok.todok.sum", "numpy.isnan", "str", "str", "numpy.power", "numpy.isinf", "numpy.isinf", "numpy.isnan", "sum", "time.time", "str", "str", "numpy.isinf", "sum", "str", "numpy.isnan"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start._convert_sp_mat_to_sp_tensor"], ["", "def", "getSparseGraph_future_degree_adj", "(", "self", ")", ":", "\n", "        ", "adj_starttime", "=", "time", ".", "time", "(", ")", "\n", "if", "self", ".", "Graph_future_degree", "or", "self", ".", "Rscale_future_degree", "is", "None", ":", "\n", "            ", "try", ":", "\n", "                ", "pre_adj_mat_all", "=", "sp", ".", "load_npz", "(", "self", ".", "path", "+", "'/future_degree_adj'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ")", "\n", "print", "(", "\"successfully loaded handle graph \"", ")", "\n", "rscale_vec", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/future_degree rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "print", "(", "\"successfully loaded handle rescale\"", ")", "\n", "norm_adj", "=", "pre_adj_mat_all", "\n", "", "except", ":", "\n", "                ", "print", "(", "'load future_degree faulse at: '", "+", "self", ".", "path", "+", "'/future_degree'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz '", "+", "', generating adjacency matrix'", ")", "\n", "s", "=", "time", ".", "time", "(", ")", "\n", "#\u751f\u6210adj_all", "\n", "adj_mat_all", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "adj_mat_all", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_all", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_all", "=", "adj_mat_all", ".", "todok", "(", ")", "\n", "# adj_mat_all = adj_mat_all + sp.eye(adj_mat_all.shape[0])", "\n", "\n", "#\u751f\u6210adj_only", "\n", "adj_mat_only", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "adj_mat_only", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only", "=", "adj_mat_only", ".", "todok", "(", ")", "\n", "# adj_mat_only = adj_mat_only + sp.eye(adj_mat_only.shape[0])", "\n", "\n", "adj_mat_only_future", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "n_users", "+", "self", ".", "m_items", ",", "self", ".", "n_users", "+", "self", ".", "m_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat_only_future", "=", "adj_mat_only_future", ".", "tolil", "(", ")", "\n", "R", "=", "self", ".", "UserItemNet_only_future", ".", "tolil", "(", ")", "\n", "adj_mat_only_future", "[", ":", "self", ".", "n_users", ",", "self", ".", "n_users", ":", "]", "=", "R", "\n", "adj_mat_only_future", "[", "self", ".", "n_users", ":", ",", ":", "self", ".", "n_users", "]", "=", "R", ".", "T", "\n", "adj_mat_only_future", "=", "adj_mat_only_future", ".", "todok", "(", ")", "\n", "# adj_mat_only_future = adj_mat_only_future + sp.eye(adj_mat_only_future.shape[0])", "\n", "\n", "rowsum_all", "=", "np", ".", "array", "(", "adj_mat_all", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "rowsum_only", "=", "np", ".", "array", "(", "adj_mat_only", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "rowsum_future", "=", "np", ".", "array", "(", "adj_mat_only_future", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "\n", "degree_new", "=", "rowsum_only", "\n", "degree_old", "=", "rowsum_all", "-", "rowsum_only", "\n", "degree_all", "=", "rowsum_all", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum_future", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "#flatten\u76f4\u63a5\u53d8\u6210\u4e00\u884c\u4e86", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat", ".", "dot", "(", "adj_mat_only", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat", ")", "\n", "norm_adj", "=", "norm_adj", ".", "tocsr", "(", ")", "\n", "\n", "old_scale", "=", "np", ".", "power", "(", "degree_old", ",", "0.5", ")", "\n", "# old_scale[np.isinf(old_scale)]=0.", "\n", "new_scale", "=", "np", ".", "power", "(", "degree_all", ",", "0.5", ")", "\n", "# new_scale[np.isinf(degree_all)]=0.", "\n", "rscale_vec", "=", "np", ".", "true_divide", "(", "old_scale", ",", "new_scale", ")", "# n*1 array", "\n", "rscale_vec", "[", "np", ".", "isinf", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "rscale_vec", "[", "np", ".", "isnan", "(", "rscale_vec", ")", "]", "=", "0.", "#\u5206\u6bcd\u662f0\u5206\u5b50\u4e5f\u4e00\u5b9a\u662f0\uff0c\u8fd9\u79cd\u60c5\u51b5\u662finf\uff0c\u8fd9\u65f6\u5e94\u8be5inf=0", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "sp", ".", "save_npz", "(", "self", ".", "path", "+", "'/future_degree_adj'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'.npy s_pre_adj_mat.npz'", ",", "norm_adj", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/future_degree rscale_vec-at'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "rscale_vec", ")", "\n", "\n", "", "if", "sum", "(", "np", ".", "isinf", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isinf(rscale_vec))}'", ")", "\n", "", "elif", "sum", "(", "np", ".", "isnan", "(", "rscale_vec", ")", ")", "!=", "0", ":", "\n", "                ", "raise", "TypeError", "(", "f'recale_vec have {sum(np.isnan(rscale_vec))}'", ")", "\n", "", "self", ".", "Graph_future_degree", "=", "self", ".", "_convert_sp_mat_to_sp_tensor", "(", "norm_adj", ")", "\n", "self", ".", "Graph_future_degree", "=", "self", ".", "Graph_future_degree", ".", "coalesce", "(", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "self", ".", "Rscale_future_degree", "=", "torch", ".", "from_numpy", "(", "rscale_vec", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "print", "(", "f\"handle adjacency matrix & Rescale vector done use time :{time.time()-adj_starttime}\"", ")", "\n", "", "return", "self", ".", "Graph_future_degree", ",", "self", ".", "Rscale_future_degree", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.get_degree": [[1468, 1499], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "ValueError", "ValueError", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "torch.from_numpy().type", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all.tolil", "now_item_degree.reshape.reshape.reshape", "all_item_degree.reshape.reshape.reshape", "numpy.save", "numpy.save", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_only.tolil", "dataloader_handle_inference_icl.test_cold_start.UserItemNet_all.tolil", "numpy.array", "numpy.array", "now_user_degree.reshape.reshape.reshape", "all_user_degree.reshape.reshape.reshape", "numpy.save", "numpy.save", "numpy.array", "numpy.array", "dataloader_handle_inference_icl.test_cold_start.sum", "dataloader_handle_inference_icl.test_cold_start.sum", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "str", "str", "str", "str", "dataloader_handle_inference_icl.test_cold_start.sum", "dataloader_handle_inference_icl.test_cold_start.sum", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "get_degree", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "now_item_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "all_item_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/item_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "now_user_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "all_user_degree", "=", "np", ".", "load", "(", "self", ".", "path", "+", "'/user_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-.npy'", ")", "\n", "", "except", ":", "\n", "            ", "now_item_degree", ":", "numpy", ".", "matrix", "\n", "now_item_", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "all_item_", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "now_item_degree", "=", "np", ".", "array", "(", "now_item_", ".", "sum", "(", "axis", "=", "0", ")", ")", "[", "0", "]", "\n", "all_item_degree", "=", "np", ".", "array", "(", "all_item_", ".", "sum", "(", "axis", "=", "0", ")", ")", "[", "0", "]", "\n", "now_item_degree", "=", "now_item_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "all_item_degree", "=", "all_item_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/item_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "now_item_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/item_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "all_item_degree", ")", "\n", "\n", "now_user_degree", ":", "numpy", ".", "matrix", "\n", "now_user_", "=", "self", ".", "UserItemNet_only", ".", "tolil", "(", ")", "\n", "all_user_", "=", "self", ".", "UserItemNet_all", ".", "tolil", "(", ")", "\n", "now_user_degree", "=", "np", ".", "array", "(", "now_user_", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "all_user_degree", "=", "np", ".", "array", "(", "all_user_", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "now_user_degree", "=", "now_user_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "all_user_degree", "=", "all_user_degree", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/user_degree_only-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "now_user_degree", ")", "\n", "np", ".", "save", "(", "self", ".", "path", "+", "'/user_degree_all-'", "+", "str", "(", "self", ".", "datasetStage", "-", "1", ")", "+", "'-'", ",", "all_user_degree", ")", "\n", "", "if", "(", "now_user_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "n_user", ")", "or", "(", "all_user_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "n_user", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'{now_user_degree.shape[1]}!={self.n_user}'", ")", "\n", "", "if", "(", "now_item_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "m_item", ")", "or", "(", "all_item_degree", ".", "shape", "[", "0", "]", "!=", "self", ".", "m_item", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f'{now_item_degree.shape[1]}!={self.n_user}'", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "torch", ".", "from_numpy", "(", "all_item_degree", "-", "now_item_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "torch", ".", "from_numpy", "(", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", ",", "torch", ".", "from_numpy", "(", "all_user_degree", "-", "now_user_degree", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN_zero.test_joint_icl_Mount": [[13, 136], ["Meta_model.eval", "max", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "torch.no_grad", "list", "Meta_model.get_layer_weights", "tqdm.tqdm", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "len", "len", "len", "len", "len", "len", "len", "len", "len", "testDict.keys", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "old_User[].pow().sum().unsqueeze", "old_User.pow().sum().unsqueeze", "knn.pow.pow", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "torch.Tensor().long.numpy", "rating.cpu.numpy", "range", "rating_list_ac.extend", "groundTrue_list_ac.extend", "rating_list_inac.extend", "groundTrue_list_inac.extend", "rating_list.extend", "groundTrue_list.extend", "len", "len", "len", "len", "print", "len", "len", "old_User.t", "torch.topk", "int", "list", "len", "len", "len", "len", "len", "len", "len", "torch.Tensor", "old_User[].pow().sum", "old_User.pow().sum", "torch.Tensor().long.size", "TestDict[].keys", "numpy.expand_dims", "utils.topk", "numpy.array", "numpy.array", "rating_K_list.append", "posit_list.append", "batch_users_tensor.to.long", "int", "int", "OneIter_Itemlist_array[].tolist", "rating_K_list_ac.append", "posit_list_ac.append", "old_User[].pow", "old_User.pow", "max", "OneIter_Itemlist_array[].tolist", "rating_K_list_inac.append", "posit_list_inac.append", "len", "OneIter_Itemlist_array[].tolist", "batch_users_tensor.to.long"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["def", "test_joint_icl_Mount", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "old_User", ",", "epoch", ",", "w", "=", "None", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "eval", "(", ")", "\n", "\n", "max_K", "=", "max", "(", "world", ".", "topks", ")", "\n", "results", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_ac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_inac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "testDict", "=", "dataset", ".", "testDict", "\n", "activeUser_all", "=", "dataset", ".", "active_user_now", "\n", "activeItem_all", "=", "dataset", ".", "active_item_now", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "users", "=", "list", "(", "testDict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "            ", "u_batch_size", "=", "world", ".", "config", "[", "'test_u_batch_size'", "]", "\n", "assert", "u_batch_size", "<=", "len", "(", "users", ")", "/", "10", "\n", "", "except", "AssertionError", ":", "\n", "            ", "print", "(", "f\"test_u_batch_size is too big for this dataset, try a small one {len(users) // 10}\"", ")", "\n", "", "users_list", "=", "[", "]", "\n", "\n", "rating_list", "=", "[", "]", "\n", "groundTrue_list", "=", "[", "]", "\n", "\n", "rating_list_ac", "=", "[", "]", "\n", "groundTrue_list_ac", "=", "[", "]", "\n", "\n", "rating_list_inac", "=", "[", "]", "\n", "groundTrue_list_inac", "=", "[", "]", "\n", "if", "len", "(", "users", ")", "%", "u_batch_size", "==", "0", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "\n", "", "else", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "+", "1", "\n", "\n", "", "user_output", ",", "item_output", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "Meta_model", ".", "get_layer_weights", "(", ")", "\n", "\n", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "            ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "knn_0", "=", "old_User", "[", "batch_users_gpu", ".", "long", "(", ")", "]", "@", "old_User", ".", "t", "(", ")", "\n", "knn_1", "=", "old_User", "[", "batch_users_gpu", ".", "long", "(", ")", "]", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "knn_2", "=", "old_User", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "knn", "=", "knn_1", "+", "knn_2", "-", "2", "*", "knn_0", "\n", "knn", "=", "knn", ".", "pow", "(", "2", ")", "\n", "batch_mtach_users_itself", "=", "torch", ".", "topk", "(", "knn", ",", "world", ".", "inference_k", "+", "1", ",", "largest", "=", "False", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "batch_mtach_users", "=", "batch_mtach_users_itself", "[", ":", ",", "1", ":", "world", ".", "inference_k", "+", "1", "]", "\n", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", ",", "activeUser_all", ",", "activeItem_all", ",", "dataset", ".", "trained_user", ",", "dataset", ".", "trained_item", ",", "batch_mtach_users", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_users_tensor", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "batch_usersusers", "=", "batch_users_tensor", ".", "numpy", "(", ")", "\n", "UsersRatings_cpu", "=", "Rating_cpu", ".", "numpy", "(", ")", "\n", "TestDict", "=", "test_Dict_onebatch", "\n", "posit_list", "=", "[", "]", "\n", "rating_K_list", "=", "[", "]", "\n", "\n", "posit_list_ac", "=", "[", "]", "\n", "rating_K_list_ac", "=", "[", "]", "\n", "\n", "posit_list_inac", "=", "[", "]", "\n", "rating_K_list_inac", "=", "[", "]", "\n", "for", "userIndex", "in", "range", "(", "batch_usersusers", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "userID", "=", "int", "(", "batch_usersusers", "[", "userIndex", "]", ")", "\n", "for", "posit", "in", "list", "(", "TestDict", "[", "userID", "]", ".", "keys", "(", ")", ")", ":", "\n", "                    ", "OneIter_Itemlist", "=", "TestDict", "[", "userID", "]", "[", "posit", "]", "\n", "OneItreation_Rating", "=", "UsersRatings_cpu", "[", "userIndex", ",", "OneIter_Itemlist", "]", "\n", "OneItreation_Rating", "=", "np", ".", "expand_dims", "(", "OneItreation_Rating", ",", "axis", "=", "0", ")", "\n", "rating_K", "=", "utils", ".", "topk", "(", "OneItreation_Rating", ",", "K", "=", "max", "(", "world", ".", "topks", ")", ")", "\n", "rating_index", "=", "np", ".", "array", "(", "rating_K", "[", "0", "]", ")", "\n", "OneIter_Itemlist_array", "=", "np", ".", "array", "(", "OneIter_Itemlist", ")", "\n", "rating_K_list", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list", ".", "append", "(", "posit", ")", "\n", "if", "userID", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_ac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_ac", ".", "append", "(", "posit", ")", "\n", "", "elif", "userID", "not", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_inac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_inac", ".", "append", "(", "posit", ")", "\n", "\n", "", "", "", "rating_list_ac", ".", "extend", "(", "rating_K_list_ac", ")", "\n", "groundTrue_list_ac", ".", "extend", "(", "posit_list_ac", ")", "\n", "\n", "rating_list_inac", ".", "extend", "(", "rating_K_list_inac", ")", "\n", "groundTrue_list_inac", ".", "extend", "(", "posit_list_inac", ")", "\n", "\n", "rating_list", ".", "extend", "(", "rating_K_list", ")", "\n", "groundTrue_list", ".", "extend", "(", "posit_list", ")", "\n", "\n", "", "(", "Recall", ",", "Precision", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_ac", ",", "Precision_ac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_ac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_inac", ",", "Precision_inac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_inac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "\n", "assert", "total_batch", "==", "len", "(", "users_list", ")", "\n", "# print(len(groundTrue_list_ac),len(groundTrue_list_inac),len(groundTrue_list))", "\n", "assert", "len", "(", "groundTrue_list_ac", ")", "+", "len", "(", "groundTrue_list_inac", ")", "==", "len", "(", "groundTrue_list", ")", ",", "f'user num wrong error {len(groundTrue_list_ac)}+{len(groundTrue_list_inac)}!={len(groundTrue_list)}'", "\n", "\n", "results", "[", "'recall'", "]", "=", "Recall", "\n", "results", "[", "'precision'", "]", "=", "Precision", "\n", "results", "[", "'ndcg'", "]", "=", "Ndcg", "\n", "\n", "results_ac", "[", "'recall'", "]", "=", "Recall_ac", "\n", "results_ac", "[", "'precision'", "]", "=", "Precision_ac", "\n", "results_ac", "[", "'ndcg'", "]", "=", "Ndcg_ac", "\n", "\n", "results_inac", "[", "'recall'", "]", "=", "Recall_inac", "\n", "results_inac", "[", "'precision'", "]", "=", "Precision_inac", "\n", "results_inac", "[", "'ndcg'", "]", "=", "Ndcg_inac", "\n", "\n", "# print(results)", "\n", "# print(f\"Activate users num :{len(groundTrue_list_ac)} \" ,results_ac)", "\n", "# print(f\"Inactivate users num : {len(groundTrue_list_inac)} \" ,results_inac)", "\n", "\n", "return", "(", "results", ",", "results_ac", ",", "len", "(", "groundTrue_list_ac", ")", ",", "results_inac", ",", "len", "(", "groundTrue_list_inac", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN_zero.train_joint": [[137, 183], ["Meta_model.train", "utils.UniformSample_handle", "print", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "users.to.to", "posItems.to.to", "negItems.to.to", "utils.shuffle", "enumerate", "utils.minibatch", "old_Item[].pow().sum().unsqueeze", "old_Item.pow().sum().unsqueeze", "knn.pow.pow", "Meta_model.get_our_loss", "opt_lgcn.zero_grad", "loss.backward", "opt_lgcn.step", "loss.cpu().item", "loss1.cpu().item", "loss2.cpu().item", "icl_regloss.cpu().item", "torch.Tensor", "torch.Tensor", "torch.Tensor", "len", "old_Item.t", "torch.topk", "old_Item[].pow().sum", "old_Item.pow().sum", "loss.cpu", "loss1.cpu", "loss2.cpu", "icl_regloss.cpu", "batch_pos.long", "old_Item[].pow", "old_Item.pow", "batch_pos.long"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.UniformSample_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.shuffle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_our_loss", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["", "", "def", "train_joint", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "opt_lgcn", ",", "old_knowledge", ",", "epoch", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "train", "(", ")", "\n", "\n", "S", ",", "sam_time", "=", "utils", ".", "UniformSample_handle", "(", "dataset", ",", "world", ".", "sample_mode", ")", "\n", "print", "(", "f\"BPR[lgcn handle sample time][{sam_time:.2f}]\"", ")", "\n", "users", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", "\n", "posItems", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "negItems", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "2", "]", ")", ".", "long", "(", ")", "\n", "users", "=", "users", ".", "to", "(", "world", ".", "device", ")", "\n", "posItems", "=", "posItems", ".", "to", "(", "world", ".", "device", ")", "\n", "negItems", "=", "negItems", ".", "to", "(", "world", ".", "device", ")", "\n", "users", ",", "posItems", ",", "negItems", "=", "utils", ".", "shuffle", "(", "users", ",", "posItems", ",", "negItems", ")", "\n", "total_batch", "=", "len", "(", "users", ")", "//", "world", ".", "config", "[", "'bpr_batch_size'", "]", "+", "1", "\n", "\n", "(", "old_User", ",", "old_Item", ")", "=", "old_knowledge", "\n", "del", "old_User", "\n", "\n", "aver_loss", "=", "0.", "\n", "aver_loss1", "=", "0.", "\n", "aver_loss2", "=", "0.", "\n", "aver_icl_regloss", "=", "0.", "\n", "\n", "for", "(", "batch_i", ",", "(", "batch_users", ",", "batch_pos", ",", "batch_neg", ")", ")", "in", "enumerate", "(", "utils", ".", "minibatch", "(", "users", ",", "posItems", ",", "negItems", ",", "batch_size", "=", "world", ".", "config", "[", "'bpr_batch_size'", "]", ")", ")", ":", "\n", "\n", "        ", "knn_0", "=", "old_Item", "[", "batch_pos", ".", "long", "(", ")", "]", "@", "old_Item", ".", "t", "(", ")", "\n", "knn_1", "=", "old_Item", "[", "batch_pos", ".", "long", "(", ")", "]", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "knn_2", "=", "old_Item", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "knn", "=", "knn_1", "+", "knn_2", "-", "2", "*", "knn_0", "\n", "knn", "=", "knn", ".", "pow", "(", "2", ")", "\n", "knn", "[", ":", ",", "dataset", ".", "active_item_now", "]", "=", "np", ".", "inf", "\n", "batch_mtach_items_itself", "=", "torch", ".", "topk", "(", "knn", ",", "world", ".", "icl_k", "+", "1", ",", "largest", "=", "False", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "batch_mtach_items", "=", "batch_mtach_items_itself", "[", ":", ",", "1", ":", "world", ".", "icl_k", "+", "1", "]", "\n", "\n", "del", "knn_0", ",", "knn_1", ",", "knn_2", ",", "knn", "\n", "\n", "loss", ",", "loss1", ",", "loss2", ",", "icl_regloss", "=", "Meta_model", ".", "get_our_loss", "(", "old_embeddings", ",", "batch_users", ",", "batch_pos", ",", "batch_neg", ",", "batch_mtach_items", ")", "\n", "opt_lgcn", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt_lgcn", ".", "step", "(", ")", "\n", "aver_loss", "+=", "loss", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_loss1", "+=", "loss1", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_loss2", "+=", "loss2", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_icl_regloss", "+=", "icl_regloss", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "return", "f\"[Train aver loss{aver_loss:.4e}]\"", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN_zero.test_joint": [[184, 267], ["Meta_model.eval", "max", "numpy.zeros", "numpy.zeros", "numpy.zeros", "torch.no_grad", "list", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "print", "len", "len", "len", "testDict.keys", "tqdm.tqdm", "tqdm.tqdm", "len", "print", "len", "len", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "INlist.append", "multiprocessing.Pool", "pool.map", "rating_list.extend", "groundTrue_list.extend", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "torch.Tensor().long.numpy", "rating.cpu.numpy", "range", "rating_list.extend", "groundTrue_list.extend", "len", "len", "int", "list", "torch.Tensor", "torch.Tensor().long.numpy", "rating.cpu.numpy", "torch.Tensor", "torch.Tensor().long.size", "TestDict[].keys", "numpy.expand_dims", "utils.topk", "numpy.array", "numpy.array", "rating_K_list.append", "posit_list.append", "int", "int", "int", "int", "OneIter_Itemlist_array[].tolist", "len", "max"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["", "def", "test_joint", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "epoch", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "eval", "(", ")", "\n", "\n", "max_K", "=", "max", "(", "world", ".", "topks", ")", "\n", "results", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "testDict", "=", "dataset", ".", "testDict", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "users", "=", "list", "(", "testDict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "            ", "u_batch_size", "=", "world", ".", "config", "[", "'test_u_batch_size'", "]", "\n", "assert", "u_batch_size", "<=", "len", "(", "users", ")", "/", "10", "\n", "", "except", "AssertionError", ":", "\n", "            ", "print", "(", "f\"test_u_batch_size is too big for this dataset, try a small one {len(users) // 10}\"", ")", "\n", "", "users_list", "=", "[", "]", "\n", "rating_list", "=", "[", "]", "\n", "groundTrue_list", "=", "[", "]", "\n", "if", "len", "(", "users", ")", "%", "u_batch_size", "==", "0", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "\n", "", "else", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "+", "1", "\n", "\n", "", "if", "world", ".", "multi", "==", "1", ":", "\n", "            ", "INlist", "=", "[", "]", "\n", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "                ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "                    ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "INlist", ".", "append", "(", "(", "batch_users_tensor", ".", "numpy", "(", ")", ",", "Rating_cpu", ".", "numpy", "(", ")", ",", "test_Dict_onebatch", ")", ")", "\n", "\n", "# multiprocessing.set_start_method('spawn',True)", "\n", "", "with", "multiprocessing", ".", "Pool", "(", "world", ".", "CORES", ")", "as", "pool", ":", "\n", "                ", "PollResults", "=", "pool", ".", "map", "(", "MultiProcess_batchusers_test", ",", "INlist", ")", "\n", "# PollResults_list.append(PollResults.get(timeout=1000))", "\n", "", "for", "MultiProcess_result", "in", "PollResults", ":", "\n", "                ", "rating_list", ".", "extend", "(", "MultiProcess_result", "[", "1", "]", ")", "\n", "groundTrue_list", ".", "extend", "(", "MultiProcess_result", "[", "0", "]", ")", "#\u662fint\u4e0d\u662ftensor\u4e0d\u9700\u8981,cpu()", "\n", "", "", "else", ":", "\n", "            ", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "                ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_users_tensor", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                    ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "batch_usersusers", "=", "batch_users_tensor", ".", "numpy", "(", ")", "\n", "UsersRatings_cpu", "=", "Rating_cpu", ".", "numpy", "(", ")", "\n", "TestDict", "=", "test_Dict_onebatch", "\n", "posit_list", "=", "[", "]", "\n", "rating_K_list", "=", "[", "]", "\n", "for", "userIndex", "in", "range", "(", "batch_usersusers", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "userID", "=", "int", "(", "batch_usersusers", "[", "userIndex", "]", ")", "\n", "for", "posit", "in", "list", "(", "TestDict", "[", "userID", "]", ".", "keys", "(", ")", ")", ":", "\n", "                        ", "OneIter_Itemlist", "=", "TestDict", "[", "userID", "]", "[", "posit", "]", "\n", "OneItreation_Rating", "=", "UsersRatings_cpu", "[", "userIndex", ",", "OneIter_Itemlist", "]", "\n", "OneItreation_Rating", "=", "np", ".", "expand_dims", "(", "OneItreation_Rating", ",", "axis", "=", "0", ")", "\n", "rating_K", "=", "utils", ".", "topk", "(", "OneItreation_Rating", ",", "K", "=", "max", "(", "world", ".", "topks", ")", ")", "\n", "rating_index", "=", "np", ".", "array", "(", "rating_K", "[", "0", "]", ")", "\n", "OneIter_Itemlist_array", "=", "np", ".", "array", "(", "OneIter_Itemlist", ")", "\n", "rating_K_list", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list", ".", "append", "(", "posit", ")", "\n", "", "", "rating_list", ".", "extend", "(", "rating_K_list", ")", "\n", "groundTrue_list", ".", "extend", "(", "posit_list", ")", "\n", "\n", "", "", "(", "Recall", ",", "Precision", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "assert", "total_batch", "==", "len", "(", "users_list", ")", "\n", "\n", "results", "[", "'recall'", "]", "=", "Recall", "\n", "results", "[", "'precision'", "]", "=", "Precision", "\n", "results", "[", "'ndcg'", "]", "=", "Ndcg", "\n", "print", "(", "results", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN_zero.test_joint_icl": [[268, 375], ["Meta_model.eval", "max", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "torch.no_grad", "list", "tqdm.tqdm", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "len", "len", "len", "len", "len", "len", "len", "len", "len", "testDict.keys", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "torch.Tensor().long.numpy", "rating.cpu.numpy", "range", "rating_list_ac.extend", "groundTrue_list_ac.extend", "rating_list_inac.extend", "groundTrue_list_inac.extend", "rating_list.extend", "groundTrue_list.extend", "len", "len", "len", "len", "print", "len", "len", "int", "list", "len", "len", "len", "len", "len", "len", "len", "torch.Tensor", "torch.Tensor().long.size", "TestDict[].keys", "numpy.expand_dims", "utils.topk", "numpy.array", "numpy.array", "rating_K_list.append", "posit_list.append", "int", "int", "OneIter_Itemlist_array[].tolist", "rating_K_list_ac.append", "posit_list_ac.append", "max", "OneIter_Itemlist_array[].tolist", "rating_K_list_inac.append", "posit_list_inac.append", "len", "OneIter_Itemlist_array[].tolist"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["", "", "def", "test_joint_icl", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "epoch", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "eval", "(", ")", "\n", "\n", "max_K", "=", "max", "(", "world", ".", "topks", ")", "\n", "results", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_ac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_inac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "testDict", "=", "dataset", ".", "testDict", "\n", "activeUser_all", "=", "dataset", ".", "active_user_now", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "users", "=", "list", "(", "testDict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "            ", "u_batch_size", "=", "world", ".", "config", "[", "'test_u_batch_size'", "]", "\n", "assert", "u_batch_size", "<=", "len", "(", "users", ")", "/", "10", "\n", "", "except", "AssertionError", ":", "\n", "            ", "print", "(", "f\"test_u_batch_size is too big for this dataset, try a small one {len(users) // 10}\"", ")", "\n", "", "users_list", "=", "[", "]", "\n", "\n", "rating_list", "=", "[", "]", "\n", "groundTrue_list", "=", "[", "]", "\n", "\n", "rating_list_ac", "=", "[", "]", "\n", "groundTrue_list_ac", "=", "[", "]", "\n", "\n", "rating_list_inac", "=", "[", "]", "\n", "groundTrue_list_inac", "=", "[", "]", "\n", "if", "len", "(", "users", ")", "%", "u_batch_size", "==", "0", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "\n", "", "else", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "+", "1", "\n", "\n", "", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "            ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_users_tensor", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "batch_usersusers", "=", "batch_users_tensor", ".", "numpy", "(", ")", "\n", "UsersRatings_cpu", "=", "Rating_cpu", ".", "numpy", "(", ")", "\n", "TestDict", "=", "test_Dict_onebatch", "\n", "posit_list", "=", "[", "]", "\n", "rating_K_list", "=", "[", "]", "\n", "\n", "posit_list_ac", "=", "[", "]", "\n", "rating_K_list_ac", "=", "[", "]", "\n", "\n", "posit_list_inac", "=", "[", "]", "\n", "rating_K_list_inac", "=", "[", "]", "\n", "for", "userIndex", "in", "range", "(", "batch_usersusers", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "userID", "=", "int", "(", "batch_usersusers", "[", "userIndex", "]", ")", "\n", "for", "posit", "in", "list", "(", "TestDict", "[", "userID", "]", ".", "keys", "(", ")", ")", ":", "\n", "                    ", "OneIter_Itemlist", "=", "TestDict", "[", "userID", "]", "[", "posit", "]", "\n", "OneItreation_Rating", "=", "UsersRatings_cpu", "[", "userIndex", ",", "OneIter_Itemlist", "]", "\n", "OneItreation_Rating", "=", "np", ".", "expand_dims", "(", "OneItreation_Rating", ",", "axis", "=", "0", ")", "\n", "rating_K", "=", "utils", ".", "topk", "(", "OneItreation_Rating", ",", "K", "=", "max", "(", "world", ".", "topks", ")", ")", "\n", "rating_index", "=", "np", ".", "array", "(", "rating_K", "[", "0", "]", ")", "\n", "OneIter_Itemlist_array", "=", "np", ".", "array", "(", "OneIter_Itemlist", ")", "\n", "rating_K_list", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list", ".", "append", "(", "posit", ")", "\n", "if", "userID", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_ac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_ac", ".", "append", "(", "posit", ")", "\n", "", "elif", "userID", "not", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_inac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_inac", ".", "append", "(", "posit", ")", "\n", "\n", "", "", "", "rating_list_ac", ".", "extend", "(", "rating_K_list_ac", ")", "\n", "groundTrue_list_ac", ".", "extend", "(", "posit_list_ac", ")", "\n", "\n", "rating_list_inac", ".", "extend", "(", "rating_K_list_inac", ")", "\n", "groundTrue_list_inac", ".", "extend", "(", "posit_list_inac", ")", "\n", "\n", "rating_list", ".", "extend", "(", "rating_K_list", ")", "\n", "groundTrue_list", ".", "extend", "(", "posit_list", ")", "\n", "\n", "", "(", "Recall", ",", "Precision", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_ac", ",", "Precision_ac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_ac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_inac", ",", "Precision_inac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_inac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "\n", "assert", "total_batch", "==", "len", "(", "users_list", ")", "\n", "# print(len(groundTrue_list_ac),len(groundTrue_list_inac),len(groundTrue_list))", "\n", "assert", "len", "(", "groundTrue_list_ac", ")", "+", "len", "(", "groundTrue_list_inac", ")", "==", "len", "(", "groundTrue_list", ")", ",", "f'user num wrong error {len(groundTrue_list_ac)}+{len(groundTrue_list_inac)}!={len(groundTrue_list)}'", "\n", "\n", "results", "[", "'recall'", "]", "=", "Recall", "\n", "results", "[", "'precision'", "]", "=", "Precision", "\n", "results", "[", "'ndcg'", "]", "=", "Ndcg", "\n", "\n", "results_ac", "[", "'recall'", "]", "=", "Recall_ac", "\n", "results_ac", "[", "'precision'", "]", "=", "Precision_ac", "\n", "results_ac", "[", "'ndcg'", "]", "=", "Ndcg_ac", "\n", "\n", "results_inac", "[", "'recall'", "]", "=", "Recall_inac", "\n", "results_inac", "[", "'precision'", "]", "=", "Precision_inac", "\n", "results_inac", "[", "'ndcg'", "]", "=", "Ndcg_inac", "\n", "\n", "return", "(", "results", ",", "results_ac", ",", "len", "(", "groundTrue_list_ac", ")", ",", "results_inac", ",", "len", "(", "groundTrue_list_inac", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.BasicModel.__init__": [[11, 13], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BasicModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.BasicModel.getUsersRating": [[14, 16], ["None"], "methods", ["None"], ["", "def", "getUsersRating", "(", "self", ",", "users", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.PairWiseModel.__init__": [[18, 20], ["model_CI_LightGCN.BasicModel.__init__"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PairWiseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.PairWiseModel.bpr_loss": [[20, 30], ["None"], "methods", ["None"], ["", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "\"\"\"\n        Parameters:\n            users: users list \n            pos: positive items for corresponding users\n            neg: negative items for corresponding users\n        Return:\n            (log-loss, l2-loss)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", "class", "LightGCN_handle", "(", "BasicModel", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.__init__": [[31, 38], ["model_CI_LightGCN.BasicModel.__init__", "model_CI_LightGCN.LightGCN_handle.__init_weight"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init_weight"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "dict", ",", "dataset", ",", "graph_mode", ")", ":", "\n", "        ", "super", "(", "LightGCN_handle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dataset", ":", "dataloader", ".", "BasicDataset", "=", "dataset", "\n", "self", ".", "stage", "=", "dataset", ".", "datasetStage", "\n", "self", ".", "graph_mode", "=", "graph_mode", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.__init_weight": [[39, 58], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "print", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "model_CI_LightGCN.LightGCN_handle.dataset.getSparseGraph_handle", "model_CI_LightGCN.LightGCN_handle.dataset.getSparseGraph_all", "model_CI_LightGCN.LightGCN_handle.dataset.getSparseGraph_only", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_all", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_only"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_users", "=", "self", ".", "dataset", ".", "n_users", "\n", "self", ".", "num_items", "=", "self", ".", "dataset", ".", "m_items", "\n", "self", ".", "latent_dim", "=", "self", ".", "config", "[", "'latent_dim_rec'", "]", "\n", "self", ".", "n_layers", "=", "self", ".", "config", "[", "'lightGCN_n_layers'", "]", "\n", "self", ".", "embedding_user", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_users", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "self", ".", "embedding_item", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_items", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_user", ".", "weight", ",", "gain", "=", "1", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_item", ".", "weight", ",", "gain", "=", "1", ")", "\n", "print", "(", "f'use xavier initilizer'", ")", "\n", "self", ".", "f", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "if", "self", ".", "graph_mode", "==", "'handle'", ":", "\n", "            ", "self", ".", "Graph", ",", "self", ".", "Rescale", "=", "self", ".", "dataset", ".", "getSparseGraph_handle", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_all'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_all", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_only'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_only", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "'not set graph mode'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.get_layer_weights": [[59, 76], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.where", "torch.where", "torch.where", "torch.where", "torch.stack.append", "torch.stack.append", "allembs_list.append", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split"], "methods", ["None"], ["", "", "def", "get_layer_weights", "(", "self", ")", ":", "\n", "        ", "users_emb", "=", "self", ".", "embedding_user", ".", "weight", "\n", "items_emb", "=", "self", ".", "embedding_item", ".", "weight", "\n", "all_emb", "=", "torch", ".", "cat", "(", "[", "users_emb", ",", "items_emb", "]", ")", "\n", "embs", "=", "[", "all_emb", "]", "\n", "allembs_list", "=", "[", "[", "users_emb", ",", "items_emb", "]", "]", "\n", "\n", "g_droped", "=", "self", ".", "Graph", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "all_emb_nan20", "=", "torch", ".", "where", "(", "torch", ".", "isnan", "(", "all_emb", ")", ",", "torch", ".", "full_like", "(", "all_emb", ",", "0", ")", ",", "all_emb", ")", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb_nan20", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb_nan20", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.getUsersRating": [[77, 84], ["model_CI_LightGCN.LightGCN_handle.get_layer_weights", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "items_emb.t", "users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "getUsersRating", "(", "self", ",", "users", ")", ":", "\n", "        ", "all_users", ",", "all_items", ",", "_", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_", "\n", "users_emb", "=", "all_users", "[", "users", ".", "long", "(", ")", "]", "\n", "items_emb", "=", "all_items", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.getEmbedding": [[85, 95], ["model_CI_LightGCN.LightGCN_handle.get_layer_weights", "model_CI_LightGCN.LightGCN_handle.embedding_user", "model_CI_LightGCN.LightGCN_handle.embedding_item", "model_CI_LightGCN.LightGCN_handle.embedding_item"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "getEmbedding", "(", "self", ",", "users", ",", "pos_items", ",", "neg_items", ")", ":", "\n", "        ", "all_users", ",", "all_items", ",", "_", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_", "\n", "users_emb", "=", "all_users", "[", "users", "]", "\n", "pos_emb", "=", "all_items", "[", "pos_items", "]", "\n", "neg_emb", "=", "all_items", "[", "neg_items", "]", "\n", "users_emb_ego", "=", "self", ".", "embedding_user", "(", "users", ")", "\n", "pos_emb_ego", "=", "self", ".", "embedding_item", "(", "pos_items", ")", "\n", "neg_emb_ego", "=", "self", ".", "embedding_item", "(", "neg_items", ")", "\n", "return", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "users_emb_ego", ",", "pos_emb_ego", ",", "neg_emb_ego", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.bpr_loss": [[96, 109], ["model_CI_LightGCN.LightGCN_handle.getEmbedding", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "users.long", "pos.long", "neg.long", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "len", "negEmb0.norm().pow", "userEmb0.norm().pow", "posEmb0.norm().pow", "negEmb0.norm", "userEmb0.norm", "posEmb0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.getEmbedding"], ["", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "(", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "\n", "userEmb0", ",", "posEmb0", ",", "negEmb0", ")", "=", "self", ".", "getEmbedding", "(", "users", ".", "long", "(", ")", ",", "pos", ".", "long", "(", ")", ",", "neg", ".", "long", "(", ")", ")", "\n", "reg_loss", "=", "(", "1", "/", "2", ")", "*", "(", "userEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "posEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "negEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "return", "loss", ",", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.get_our_loss": [[111, 177], ["model_CI_LightGCN.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "len", "item_neg_layer0.norm().pow", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "user_layer0.norm().pow", "item_pos_layer0.norm().pow", "item_neg_layer0.norm", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "user_layer0.norm", "item_pos_layer0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_our_loss", "(", "self", ",", "old_weights", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_pos_layer1", "=", "item_pos_layer1_1", "+", "item_pos_layer1_2", "\n", "item_neg_layer1", "=", "item_neg_layer1_1", "+", "item_neg_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_pos_layer2", "=", "item_pos_layer2_1", "+", "item_pos_layer2_2", "\n", "item_neg_layer2", "=", "item_neg_layer2_1", "+", "item_neg_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_pos_layer3", "=", "item_pos_layer3_1", "+", "item_pos_layer3_2", "\n", "item_neg_layer3", "=", "item_neg_layer3_1", "+", "item_neg_layer3_2", "\n", "#=============================computer======", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "pos_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_pos_layer0", ",", "item_pos_layer1", ",", "item_pos_layer2", ",", "item_pos_layer3", "]", ",", "dim", "=", "1", ")", "\n", "pos_emb", "=", "torch", ".", "mean", "(", "pos_emb_stack", ",", "dim", "=", "1", ")", "\n", "neg_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_neg_layer0", ",", "item_neg_layer1", ",", "item_neg_layer2", ",", "item_neg_layer3", "]", ",", "dim", "=", "1", ")", "\n", "neg_emb", "=", "torch", ".", "mean", "(", "neg_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "reg_loss", "=", "(", "1", "/", "2", ")", "*", "(", "user_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_pos_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_neg_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "reg_loss", "=", "reg_loss", "*", "world", ".", "lgcn_weight_dency", "\n", "loss", "=", "loss", "+", "reg_loss", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.get_finalprediction": [[178, 222], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mean.t", "torch.mean.t", "users.long", "[].to", "[].to", "users.long", "[].to", "[].to", "users.long", "[].to", "[].to", "users.long", "users.long", "users.long", "users.long", "users.long", "users.long", "users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_finalprediction", "(", "self", ",", "old_weights", ",", "users", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_layer1", "=", "item_layer1_1", "+", "item_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_layer2", "=", "item_layer2_1", "+", "item_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_layer3", "=", "item_layer3_1", "+", "item_layer3_2", "\n", "#=============================computer=================================", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "items_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_layer0", ",", "item_layer1", ",", "item_layer2", ",", "item_layer3", "]", ",", "dim", "=", "1", ")", "\n", "items_emb", "=", "torch", ".", "mean", "(", "items_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_handle.get_embeddings": [[223, 262], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "collections.OrderedDict", "[].to", "[].to", "[].to", "[].to", "[].to", "[].to", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "user_layer0.detach", "user_layer1.detach", "user_layer2.detach", "user_layer3.detach", "item_layer0.detach", "item_layer1.detach", "item_layer2.detach", "item_layer3.detach"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_embeddings", "(", "self", ",", "old_weights", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_layer1", "=", "item_layer1_1", "+", "item_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_layer2", "=", "item_layer2_1", "+", "item_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_layer3", "=", "item_layer3_1", "+", "item_layer3_2", "\n", "\n", "new_dict", "=", "collections", ".", "OrderedDict", "(", "{", "'embedding_user'", ":", "[", "copy", ".", "deepcopy", "(", "user_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer3", ".", "detach", "(", ")", ")", "]", ",", "'embedding_item'", ":", "[", "copy", ".", "deepcopy", "(", "item_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer3", ".", "detach", "(", ")", ")", "]", "}", ")", "\n", "", "return", "new_dict", "\n", "", "", "class", "LightGCN_joint", "(", "BasicModel", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.__init__": [[263, 270], ["model_CI_LightGCN.BasicModel.__init__", "model_CI_LightGCN.LightGCN_joint.__init_weight"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init_weight"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "dict", ",", "dataset", ",", "graph_mode", ")", ":", "\n", "        ", "super", "(", "LightGCN_joint", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dataset", ":", "dataloader", ".", "BasicDataset", "=", "dataset", "\n", "self", ".", "stage", "=", "dataset", ".", "datasetStage", "\n", "self", ".", "graph_mode", "=", "graph_mode", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.__init_weight": [[271, 328], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "print", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN.LightGCN_joint.dataset.getSparseGraph_handle", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN.LightGCN_joint.dataset.getSparseGraph_all", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN.LightGCN_joint.dataset.getSparseGraph_only", "model_CI_LightGCN.LightGCN_joint.dataset.getSparseGraph_pure", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_all", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_only", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_pure"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_users", "=", "self", ".", "dataset", ".", "n_users", "\n", "self", ".", "num_items", "=", "self", ".", "dataset", ".", "m_items", "\n", "self", ".", "latent_dim", "=", "self", ".", "config", "[", "'latent_dim_rec'", "]", "\n", "self", ".", "n_layers", "=", "self", ".", "config", "[", "'lightGCN_n_layers'", "]", "\n", "self", ".", "embedding_user", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_users", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "self", ".", "embedding_item", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_items", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_user", ".", "weight", ",", "gain", "=", "1", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_item", ".", "weight", ",", "gain", "=", "1", ")", "\n", "print", "(", "f'use xavier initilizer'", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "if", "world", ".", "dataset", "==", "'news'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "0", ")", "\n", "", "elif", "world", ".", "dataset", "==", "'finetune_yelp'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "world", ".", "dataset", "==", "'gowalla'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "1.0", ")", "\n", "", "self", ".", "f", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "if", "self", ".", "graph_mode", "==", "'handle'", ":", "\n", "            ", "self", ".", "Graph", ",", "self", ".", "Rescale", "=", "self", ".", "dataset", ".", "getSparseGraph_handle", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_all'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_all", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_only'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_only", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'degree'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_pure", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "'not set graph mode'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.transfer1_forward": [[329, 335], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN.LightGCN_joint.conv1", "x.view.view.view"], "methods", ["None"], ["", "", "def", "transfer1_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.transfer2_forward": [[336, 342], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN.LightGCN_joint.conv2", "x.view.view.view"], "methods", ["None"], ["", "def", "transfer2_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.transfer3_forward": [[343, 349], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN.LightGCN_joint.conv3", "x.view.view.view"], "methods", ["None"], ["", "def", "transfer3_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.icl_transfer": [[350, 357], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "copy.deepcopy", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "x.view.view.view", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "icl_transfer", "(", "self", ",", "operation", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "world", ".", "icl_k", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "weight", "=", "copy", ".", "deepcopy", "(", "operation", ".", "weight", ".", "data", ")", "\n", "x", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "x", ",", "weight", ")", ",", "dim", "=", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "world", ".", "icl_k", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.denominator_forward": [[358, 363], ["model_CI_LightGCN.LightGCN_joint.Denominator", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu"], "methods", ["None"], ["", "def", "denominator_forward", "(", "self", ",", "Degree_new", ",", "Degree_old", ")", ":", "\n", "        ", "x_Denominator", "=", "self", ".", "Denominator", "(", "Degree_old", ")", "\n", "x_Denominator", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "x_Denominator", ",", "inplace", "=", "True", ")", "+", "Degree_new", "\n", "x_molecular", "=", "torch", ".", "ones_like", "(", "x_Denominator", ")", "\n", "return", "x_molecular", ",", "x_Denominator", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.oldscale_forward": [[364, 368], ["model_CI_LightGCN.LightGCN_joint.old_scale", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu"], "methods", ["None"], ["", "def", "oldscale_forward", "(", "self", ",", "old_scale", ")", ":", "\n", "        ", "old_scale", "=", "self", ".", "old_scale", "(", "old_scale", ")", "\n", "old_scale", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "old_scale", ",", "inplace", "=", "True", ")", "\n", "return", "old_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.get_layer_weights": [[369, 403], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN.LightGCN_joint.dataset.get_degree", "model_CI_LightGCN.LightGCN_joint.denominator_forward", "degree_Denominator.pow.pow.pow", "torch.div", "torch.div", "torch.div", "torch.div", "norm_degree.flatten.flatten.flatten", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.stack.append", "torch.stack.append", "allembs_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.stack.append", "torch.stack.append", "allembs_list.append", "norm_degree.flatten.flatten.view", "norm_degree.flatten.flatten.view", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.get_degree", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.denominator_forward"], ["", "def", "get_layer_weights", "(", "self", ")", ":", "\n", "        ", "users_emb", "=", "self", ".", "embedding_user", ".", "weight", "\n", "items_emb", "=", "self", ".", "embedding_item", ".", "weight", "\n", "all_emb", "=", "torch", ".", "cat", "(", "[", "users_emb", ",", "items_emb", "]", ")", "\n", "embs", "=", "[", "all_emb", "]", "\n", "allembs_list", "=", "[", "[", "users_emb", ",", "items_emb", "]", "]", "\n", "\n", "if", "self", ".", "graph_mode", "!=", "'degree'", ":", "\n", "            ", "g_droped", "=", "self", ".", "Graph", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "                ", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", "\n", "", "else", ":", "\n", "            ", "g_droped", "=", "self", ".", "Graph", "\n", "now_user_degree", ",", "now_item_degree", ",", "elder_user_degree", ",", "elder_item_degree", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "dataset", ".", "get_degree", "(", ")", "\n", "degree_molecular", ",", "degree_Denominator", "=", "self", ".", "denominator_forward", "(", "torch", ".", "cat", "(", "(", "now_user_degree", ",", "now_item_degree", ")", ",", "dim", "=", "0", ")", ",", "torch", ".", "cat", "(", "(", "old_user_degree", ",", "old_item_degree", ")", ",", "dim", "=", "0", ")", ")", "\n", "degree_Denominator", "=", "degree_Denominator", ".", "pow", "(", "0.5", ")", "\n", "norm_degree", "=", "torch", ".", "div", "(", "degree_molecular", ",", "(", "degree_Denominator", "+", "1e-9", ")", ")", "\n", "norm_degree", "=", "norm_degree", ".", "flatten", "(", ")", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "                ", "all_emb", "=", "torch", ".", "mul", "(", "norm_degree", ".", "view", "(", "-", "1", ",", "1", ")", ",", "all_emb", ")", "\n", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "all_emb", "=", "torch", ".", "mul", "(", "norm_degree", ".", "view", "(", "-", "1", ",", "1", ")", ",", "all_emb", ")", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.get_our_loss": [[404, 507], ["model_CI_LightGCN.LightGCN_joint.get_layer_weights", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN.LightGCN_joint.oldscale_forward", "torch.mul.pow", "torch.mul.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.icl_transfer", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.icl_transfer", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "model_CI_LightGCN.LightGCN_joint.icl_transfer", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean.unsqueeze", "torch.mean.unsqueeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "float", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "len", "model_CI_LightGCN.LightGCN_joint.conv3.weight.norm().pow", "model_CI_LightGCN.LightGCN_joint.Denominator.weight.norm().pow", "model_CI_LightGCN.LightGCN_joint.old_scale.weight.norm().pow", "float", "len", "item_neg_layer0.norm().pow", "model_CI_LightGCN.LightGCN_joint.conv1.weight.norm().pow", "model_CI_LightGCN.LightGCN_joint.conv2.weight.norm().pow", "matchitem_layer0.norm().pow", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "user_layer0.norm().pow", "item_pos_layer0.norm().pow", "model_CI_LightGCN.LightGCN_joint.conv3.weight.norm", "model_CI_LightGCN.LightGCN_joint.Denominator.weight.norm", "model_CI_LightGCN.LightGCN_joint.old_scale.weight.norm", "item_neg_layer0.norm", "model_CI_LightGCN.LightGCN_joint.conv1.weight.norm", "model_CI_LightGCN.LightGCN_joint.conv2.weight.norm", "matchitem_layer0.norm", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "user_layer0.norm", "item_pos_layer0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer"], ["", "", "def", "get_our_loss", "(", "self", ",", "old_weights", ",", "users", ",", "pos", ",", "neg", ",", "mtach_items", ")", ":", "\n", "        ", "_0", ",", "_1", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_scale", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmtachitem_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "matchitem_layer0", "=", "Kmtachitem_layer0", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_pos_layer1", "=", "self", ".", "transfer1_forward", "(", "item_pos_layer1_1", ",", "item_pos_layer1_2", ")", "\n", "item_neg_layer1", "=", "self", ".", "transfer1_forward", "(", "item_neg_layer1_1", ",", "item_neg_layer1_2", ")", "\n", "matchitem_layer1", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv1", ",", "Kmatchitem_layer1_1", ",", "Kmatchitem_layer1_2", ")", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_pos_layer2", "=", "self", ".", "transfer2_forward", "(", "item_pos_layer2_1", ",", "item_pos_layer2_2", ")", "\n", "item_neg_layer2", "=", "self", ".", "transfer2_forward", "(", "item_neg_layer2_1", ",", "item_neg_layer2_2", ")", "\n", "matchitem_layer2", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv2", ",", "Kmatchitem_layer2_1", ",", "Kmatchitem_layer2_2", ")", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_pos_layer3", "=", "self", ".", "transfer3_forward", "(", "item_pos_layer3_1", ",", "item_pos_layer3_2", ")", "\n", "item_neg_layer3", "=", "self", ".", "transfer3_forward", "(", "item_neg_layer3_1", ",", "item_neg_layer3_2", ")", "\n", "matchitem_layer3", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv3", ",", "Kmatchitem_layer3_1", ",", "Kmatchitem_layer3_2", ")", "\n", "#=============================computer======", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "pos_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_pos_layer0", ",", "item_pos_layer1", ",", "item_pos_layer2", ",", "item_pos_layer3", "]", ",", "dim", "=", "1", ")", "\n", "pos_emb", "=", "torch", ".", "mean", "(", "pos_emb_stack", ",", "dim", "=", "1", ")", "\n", "neg_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_neg_layer0", ",", "item_neg_layer1", ",", "item_neg_layer2", ",", "item_neg_layer3", "]", ",", "dim", "=", "1", ")", "\n", "neg_emb", "=", "torch", ".", "mean", "(", "neg_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "matchitem_emb_stack", "=", "torch", ".", "stack", "(", "[", "matchitem_layer0", ",", "matchitem_layer1", ",", "matchitem_layer2", ",", "matchitem_layer3", "]", ",", "dim", "=", "1", ")", "\n", "matchitem_emb", "=", "torch", ".", "mean", "(", "matchitem_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "users_emb_icl", "=", "users_emb", ".", "unsqueeze", "(", "1", ")", "\n", "icl_pos_scores", "=", "torch", ".", "mul", "(", "users_emb_icl", ",", "matchitem_emb", ")", "\n", "icl_pos_scores", "=", "torch", ".", "sum", "(", "icl_pos_scores", ",", "dim", "=", "-", "1", ")", "\n", "icl_neg_scores", "=", "torch", ".", "mul", "(", "users_emb_icl", ",", "neg_emb", ")", "\n", "icl_neg_scores", "=", "torch", ".", "sum", "(", "icl_neg_scores", ",", "dim", "=", "-", "1", ")", "\n", "\n", "reg_loss1", "=", "(", "1", "/", "2", ")", "*", "(", "user_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_pos_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_neg_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "reg_loss2", "=", "(", "1", "/", "2", ")", "*", "(", "self", ".", "conv1", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "conv2", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "conv3", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "\n", "reg_loss3", "=", "(", "1", "/", "2", ")", "*", "(", "self", ".", "Denominator", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "old_scale", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "\n", "reg_loss_icl", "=", "(", "1", "/", "2", ")", "*", "(", "matchitem_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "world", ".", "icl_k", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "\n", "\n", "loss1", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "loss2", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "icl_neg_scores", "-", "icl_pos_scores", ")", ")", "\n", "\n", "if", "world", ".", "dataset", "==", "'news'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "1e-3", "*", "reg_loss3", "\n", "", "elif", "world", ".", "dataset", "==", "'finetune_yelp'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "0", "*", "reg_loss3", "+", "world", ".", "lgcn_weight_dency", "*", "reg_loss_icl", "\n", "", "elif", "world", ".", "dataset", "==", "'gowalla'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "0", "*", "reg_loss3", "\n", "", "loss", "=", "(", "1", "-", "world", ".", "ratio_loss", ")", "*", "loss1", "+", "world", ".", "ratio_loss", "*", "loss2", "+", "reg_loss", "\n", "\n", "return", "loss", ",", "(", "1", "-", "world", ".", "ratio_loss", ")", "*", "loss1", ",", "world", ".", "ratio_loss", "*", "loss2", ",", "world", ".", "lgcn_weight_dency", "*", "reg_loss_icl", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.get_finalprediction": [[508, 577], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN.LightGCN_joint.oldscale_forward", "torch.cat.pow", "torch.cat.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mean.t", "torch.mean.t", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "users.tolist", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "users.long", "match_users.long", "users.long", "match_users.long", "users.long", "match_users.long", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "users.long", "match_users.long", "users.long", "match_users.long", "users.long", "match_users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward"], ["", "def", "get_finalprediction", "(", "self", ",", "old_weights", ",", "users", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", ",", "active_user", ",", "active_item", ",", "trained_user", ",", "trained_item", ",", "match_users", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_degree", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "match_user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer0", "=", "torch", ".", "mean", "(", "match_user_layer0", ",", "dim", "=", "1", ")", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "match_user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer1_2", "=", "torch", ".", "mean", "(", "match_user_layer1_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_layer1", "=", "self", ".", "transfer1_forward", "(", "item_layer1_1", ",", "item_layer1_2", ")", "\n", "match_user_layer1", "=", "match_user_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "match_user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer2_2", "=", "torch", ".", "mean", "(", "match_user_layer2_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_layer2", "=", "self", ".", "transfer2_forward", "(", "item_layer2_1", ",", "item_layer2_2", ")", "\n", "match_user_layer2", "=", "match_user_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "match_user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer3_2", "=", "torch", ".", "mean", "(", "match_user_layer3_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_layer3", "=", "self", ".", "transfer3_forward", "(", "item_layer3_1", ",", "item_layer3_2", ")", "\n", "match_user_layer3", "=", "match_user_layer3_2", "\n", "#=============================computer=================================", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "items_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_layer0", ",", "item_layer1", ",", "item_layer2", ",", "item_layer3", "]", ",", "dim", "=", "1", ")", "\n", "items_emb", "=", "torch", ".", "mean", "(", "items_emb_stack", ",", "dim", "=", "1", ")", "\n", "icl_users_emb_stack", "=", "torch", ".", "stack", "(", "[", "match_user_layer0", ",", "match_user_layer1", ",", "match_user_layer2", ",", "match_user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "icl_users_emb", "=", "torch", ".", "mean", "(", "icl_users_emb_stack", ",", "dim", "=", "1", ")", "\n", "#==================enhance who?===========", "\n", "inactive_user", "=", "[", "1", "if", "i", "not", "in", "active_user", "else", "0", "for", "i", "in", "users", ".", "tolist", "(", ")", "]", "\n", "inactive_user_mask", "=", "torch", ".", "tensor", "(", "inactive_user", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "\n", "\n", "users_emb", "=", "users_emb", "*", "(", "torch", ".", "ones_like", "(", "inactive_user_mask", ")", "-", "inactive_user_mask", ")", "+", "(", "1", "-", "world", ".", "A", ")", "*", "users_emb", "*", "inactive_user_mask", "+", "world", ".", "A", "*", "icl_users_emb", "*", "inactive_user_mask", "\n", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN.LightGCN_joint.get_embeddings": [[578, 624], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN.LightGCN_joint.get_layer_weights", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN.LightGCN_joint.oldscale_forward", "torch.cat.pow", "torch.cat.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.transfer1_forward", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.transfer2_forward", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "model_CI_LightGCN.LightGCN_joint.transfer3_forward", "collections.OrderedDict", "[].to", "[].to", "[].to", "[].to", "[].to", "[].to", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "user_layer0.detach", "model_CI_LightGCN.LightGCN_joint.detach", "model_CI_LightGCN.LightGCN_joint.detach", "model_CI_LightGCN.LightGCN_joint.detach", "item_layer0.detach", "model_CI_LightGCN.LightGCN_joint.detach", "model_CI_LightGCN.LightGCN_joint.detach", "model_CI_LightGCN.LightGCN_joint.detach"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward"], ["", "def", "get_embeddings", "(", "self", ",", "old_weights", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_degree", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_layer1", "=", "self", ".", "transfer1_forward", "(", "item_layer1_1", ",", "item_layer1_2", ")", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_layer2", "=", "self", ".", "transfer2_forward", "(", "item_layer2_1", ",", "item_layer2_2", ")", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_layer3", "=", "self", ".", "transfer3_forward", "(", "item_layer3_1", ",", "item_layer3_2", ")", "\n", "\n", "new_dict", "=", "collections", ".", "OrderedDict", "(", "{", "'embedding_user'", ":", "[", "copy", ".", "deepcopy", "(", "user_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer3", ".", "detach", "(", ")", ")", "]", ",", "'embedding_item'", ":", "[", "copy", ".", "deepcopy", "(", "item_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer3", ".", "detach", "(", ")", ")", "]", "}", ")", "\n", "", "return", "new_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN.train_joint": [[33, 82], ["Meta_model.train", "utils.UniformSample_handle", "print", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "users.to.to", "posItems.to.to", "negItems.to.to", "utils.shuffle", "enumerate", "utils.minibatch", "old_Item[].pow().sum().unsqueeze", "old_Item.pow().sum().unsqueeze", "knn.pow.pow", "Meta_model.get_our_loss", "opt_lgcn.zero_grad", "loss.backward", "opt_lgcn.step", "loss.cpu().item", "loss1.cpu().item", "loss2.cpu().item", "icl_regloss.cpu().item", "torch.Tensor", "torch.Tensor", "torch.Tensor", "len", "old_Item.t", "torch.topk", "old_Item[].pow().sum", "old_Item.pow().sum", "loss.cpu", "loss1.cpu", "loss2.cpu", "icl_regloss.cpu", "batch_pos.long", "old_Item[].pow", "old_Item.pow", "batch_pos.long"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.UniformSample_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.shuffle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_our_loss", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["def", "train_joint", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "opt_lgcn", ",", "old_knowledge", ",", "epoch", ",", "ww", "=", "None", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "train", "(", ")", "\n", "\n", "S", ",", "sam_time", "=", "utils", ".", "UniformSample_handle", "(", "dataset", ",", "world", ".", "sample_mode", ")", "\n", "print", "(", "f\"BPR[lgcn handle sample time][{sam_time:.2f}]\"", ")", "\n", "users", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", "\n", "posItems", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "negItems", "=", "torch", ".", "Tensor", "(", "S", "[", ":", ",", "2", "]", ")", ".", "long", "(", ")", "\n", "users", "=", "users", ".", "to", "(", "world", ".", "device", ")", "\n", "posItems", "=", "posItems", ".", "to", "(", "world", ".", "device", ")", "\n", "negItems", "=", "negItems", ".", "to", "(", "world", ".", "device", ")", "\n", "users", ",", "posItems", ",", "negItems", "=", "utils", ".", "shuffle", "(", "users", ",", "posItems", ",", "negItems", ")", "\n", "total_batch", "=", "len", "(", "users", ")", "//", "world", ".", "config", "[", "'bpr_batch_size'", "]", "+", "1", "\n", "aver_loss", "=", "0.", "\n", "aver_loss1", "=", "0.", "\n", "aver_loss2", "=", "0.", "\n", "aver_icl_regloss", "=", "0.", "\n", "\n", "(", "old_User", ",", "old_Item", ")", "=", "old_knowledge", "\n", "del", "old_User", "\n", "\n", "for", "(", "batch_i", ",", "(", "batch_users", ",", "batch_pos", ",", "batch_neg", ")", ")", "in", "enumerate", "(", "utils", ".", "minibatch", "(", "users", ",", "posItems", ",", "negItems", ",", "batch_size", "=", "world", ".", "config", "[", "'bpr_batch_size'", "]", ")", ")", ":", "\n", "\n", "        ", "knn_0", "=", "old_Item", "[", "batch_pos", ".", "long", "(", ")", "]", "@", "old_Item", ".", "t", "(", ")", "\n", "knn_1", "=", "old_Item", "[", "batch_pos", ".", "long", "(", ")", "]", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "knn_2", "=", "old_Item", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "knn", "=", "knn_1", "+", "knn_2", "-", "2", "*", "knn_0", "\n", "knn", "=", "knn", ".", "pow", "(", "2", ")", "\n", "knn", "[", ":", ",", "dataset", ".", "active_item_now", "]", "=", "np", ".", "inf", "\n", "batch_mtach_items_itself", "=", "torch", ".", "topk", "(", "knn", ",", "world", ".", "icl_k", "+", "1", ",", "largest", "=", "False", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "batch_mtach_items", "=", "batch_mtach_items_itself", "[", ":", ",", "1", ":", "world", ".", "icl_k", "+", "1", "]", "\n", "\n", "del", "knn_0", ",", "knn_1", ",", "knn_2", ",", "knn", "\n", "\n", "loss", ",", "loss1", ",", "loss2", ",", "icl_regloss", "=", "Meta_model", ".", "get_our_loss", "(", "old_embeddings", ",", "batch_users", ",", "batch_pos", ",", "batch_neg", ",", "batch_mtach_items", ")", "\n", "opt_lgcn", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt_lgcn", ".", "step", "(", ")", "\n", "aver_loss", "+=", "loss", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_loss1", "+=", "loss1", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_loss2", "+=", "loss2", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "aver_icl_regloss", "+=", "icl_regloss", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "aver_loss", "=", "aver_loss", "/", "total_batch", "\n", "aver_loss1", "=", "aver_loss1", "/", "total_batch", "\n", "aver_loss2", "=", "aver_loss2", "/", "total_batch", "\n", "aver_icl_regloss", "=", "aver_icl_regloss", "/", "total_batch", "\n", "return", "f\"[Train aver loss{aver_loss:.4e} = train_loss {aver_loss1:.4e} + icl_loss  {aver_loss2:.4e} + icl_regloss  {aver_icl_regloss:.4e} + reg]\"", "\n", "", "def", "test_joint", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "epoch", ",", "ww", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN.test_joint": [[82, 163], ["Meta_model.eval", "max", "numpy.zeros", "numpy.zeros", "numpy.zeros", "torch.no_grad", "list", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "print", "len", "len", "len", "testDict.keys", "tqdm.tqdm", "tqdm.tqdm", "len", "print", "len", "len", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "INlist.append", "multiprocessing.Pool", "pool.map", "rating_list.extend", "groundTrue_list.extend", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "torch.Tensor().long.numpy", "rating.cpu.numpy", "range", "rating_list.extend", "groundTrue_list.extend", "len", "len", "int", "list", "torch.Tensor", "torch.Tensor().long.numpy", "rating.cpu.numpy", "torch.Tensor", "torch.Tensor().long.size", "TestDict[].keys", "numpy.expand_dims", "utils.topk", "numpy.array", "numpy.array", "rating_K_list.append", "posit_list.append", "int", "int", "int", "int", "OneIter_Itemlist_array[].tolist", "len", "max"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["", "def", "test_joint", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "epoch", ",", "ww", "=", "None", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "eval", "(", ")", "\n", "\n", "max_K", "=", "max", "(", "world", ".", "topks", ")", "\n", "results", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "testDict", "=", "dataset", ".", "testDict", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "users", "=", "list", "(", "testDict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "            ", "u_batch_size", "=", "world", ".", "config", "[", "'test_u_batch_size'", "]", "\n", "assert", "u_batch_size", "<=", "len", "(", "users", ")", "/", "10", "\n", "", "except", "AssertionError", ":", "\n", "            ", "print", "(", "f\"test_u_batch_size is too big for this dataset, try a small one {len(users) // 10}\"", ")", "\n", "", "users_list", "=", "[", "]", "\n", "rating_list", "=", "[", "]", "\n", "groundTrue_list", "=", "[", "]", "\n", "if", "len", "(", "users", ")", "%", "u_batch_size", "==", "0", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "\n", "", "else", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "+", "1", "\n", "\n", "", "if", "world", ".", "multi", "==", "1", ":", "\n", "            ", "INlist", "=", "[", "]", "\n", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "                ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "b", ")", ":", "\n", "                    ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "INlist", ".", "append", "(", "(", "batch_users_tensor", ".", "numpy", "(", ")", ",", "Rating_cpu", ".", "numpy", "(", ")", ",", "test_Dict_onebatch", ")", ")", "\n", "\n", "", "with", "multiprocessing", ".", "Pool", "(", "world", ".", "CORES", ")", "as", "pool", ":", "\n", "                ", "PollResults", "=", "pool", ".", "map", "(", "MultiProcess_batchusers_test", ",", "INlist", ")", "\n", "", "for", "MultiProcess_result", "in", "PollResults", ":", "\n", "                ", "rating_list", ".", "extend", "(", "MultiProcess_result", "[", "1", "]", ")", "\n", "groundTrue_list", ".", "extend", "(", "MultiProcess_result", "[", "0", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "                ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_users_tensor", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                    ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "batch_usersusers", "=", "batch_users_tensor", ".", "numpy", "(", ")", "\n", "UsersRatings_cpu", "=", "Rating_cpu", ".", "numpy", "(", ")", "\n", "TestDict", "=", "test_Dict_onebatch", "\n", "posit_list", "=", "[", "]", "\n", "rating_K_list", "=", "[", "]", "\n", "for", "userIndex", "in", "range", "(", "batch_usersusers", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "userID", "=", "int", "(", "batch_usersusers", "[", "userIndex", "]", ")", "\n", "for", "posit", "in", "list", "(", "TestDict", "[", "userID", "]", ".", "keys", "(", ")", ")", ":", "\n", "                        ", "OneIter_Itemlist", "=", "TestDict", "[", "userID", "]", "[", "posit", "]", "\n", "OneItreation_Rating", "=", "UsersRatings_cpu", "[", "userIndex", ",", "OneIter_Itemlist", "]", "\n", "OneItreation_Rating", "=", "np", ".", "expand_dims", "(", "OneItreation_Rating", ",", "axis", "=", "0", ")", "\n", "rating_K", "=", "utils", ".", "topk", "(", "OneItreation_Rating", ",", "K", "=", "max", "(", "world", ".", "topks", ")", ")", "\n", "rating_index", "=", "np", ".", "array", "(", "rating_K", "[", "0", "]", ")", "\n", "OneIter_Itemlist_array", "=", "np", ".", "array", "(", "OneIter_Itemlist", ")", "\n", "rating_K_list", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list", ".", "append", "(", "posit", ")", "\n", "", "", "rating_list", ".", "extend", "(", "rating_K_list", ")", "\n", "groundTrue_list", ".", "extend", "(", "posit_list", ")", "\n", "\n", "", "", "(", "Recall", ",", "Precision", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "assert", "total_batch", "==", "len", "(", "users_list", ")", "\n", "\n", "results", "[", "'recall'", "]", "=", "Recall", "\n", "results", "[", "'precision'", "]", "=", "Precision", "\n", "results", "[", "'ndcg'", "]", "=", "Ndcg", "\n", "print", "(", "results", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.Procedure_CI_LightGCN.test_joint_icl_Mount": [[164, 287], ["Meta_model.eval", "max", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "torch.no_grad", "list", "Meta_model.get_layer_weights", "tqdm.tqdm", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "utils.Recall_onepos_999neg", "utils.NDCG_onepos_999neg", "len", "len", "len", "len", "len", "len", "len", "len", "len", "testDict.keys", "utils.minibatch", "torch.Tensor().long", "torch.Tensor().long.to", "users_list.append", "old_User[].pow().sum().unsqueeze", "old_User.pow().sum().unsqueeze", "knn.pow.pow", "Meta_model.get_finalprediction", "Meta_model.get_finalprediction.cpu", "range", "torch.Tensor().long.numpy", "rating.cpu.numpy", "range", "rating_list_ac.extend", "groundTrue_list_ac.extend", "rating_list_inac.extend", "groundTrue_list_inac.extend", "rating_list.extend", "groundTrue_list.extend", "len", "len", "len", "len", "print", "len", "len", "old_User.t", "torch.topk", "int", "list", "len", "len", "len", "len", "len", "len", "len", "torch.Tensor", "old_User[].pow().sum", "old_User.pow().sum", "torch.Tensor().long.size", "TestDict[].keys", "numpy.expand_dims", "utils.topk", "numpy.array", "numpy.array", "rating_K_list.append", "posit_list.append", "batch_users_tensor.to.long", "int", "int", "OneIter_Itemlist_array[].tolist", "rating_K_list_ac.append", "posit_list_ac.append", "old_User[].pow", "old_User.pow", "max", "OneIter_Itemlist_array[].tolist", "rating_K_list_inac.append", "posit_list_inac.append", "len", "OneIter_Itemlist_array[].tolist", "batch_users_tensor.to.long"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk"], ["", "", "def", "test_joint_icl_Mount", "(", "model", ",", "dataset", ",", "old_embeddings", ",", "old_User", ",", "epoch", ",", "w", "=", "None", ")", ":", "\n", "    ", "Meta_model", "=", "model", "\n", "Meta_model", ".", "eval", "(", ")", "\n", "\n", "max_K", "=", "max", "(", "world", ".", "topks", ")", "\n", "results", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_ac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "results_inac", "=", "{", "'precision'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'recall'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", ",", "'ndcg'", ":", "np", ".", "zeros", "(", "len", "(", "world", ".", "topks", ")", ")", "}", "\n", "testDict", "=", "dataset", ".", "testDict", "\n", "activeUser_all", "=", "dataset", ".", "active_user_now", "\n", "activeItem_all", "=", "dataset", ".", "active_item_now", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "users", "=", "list", "(", "testDict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "            ", "u_batch_size", "=", "world", ".", "config", "[", "'test_u_batch_size'", "]", "\n", "assert", "u_batch_size", "<=", "len", "(", "users", ")", "/", "10", "\n", "", "except", "AssertionError", ":", "\n", "            ", "print", "(", "f\"test_u_batch_size is too big for this dataset, try a small one {len(users) // 10}\"", ")", "\n", "", "users_list", "=", "[", "]", "\n", "\n", "rating_list", "=", "[", "]", "\n", "groundTrue_list", "=", "[", "]", "\n", "\n", "rating_list_ac", "=", "[", "]", "\n", "groundTrue_list_ac", "=", "[", "]", "\n", "\n", "rating_list_inac", "=", "[", "]", "\n", "groundTrue_list_inac", "=", "[", "]", "\n", "if", "len", "(", "users", ")", "%", "u_batch_size", "==", "0", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "\n", "", "else", ":", "\n", "            ", "total_batch", "=", "len", "(", "users", ")", "//", "u_batch_size", "+", "1", "\n", "\n", "", "user_output", ",", "item_output", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "Meta_model", ".", "get_layer_weights", "(", ")", "\n", "\n", "for", "batch_users", "in", "tqdm", "(", "utils", ".", "minibatch", "(", "users", ",", "batch_size", "=", "u_batch_size", ")", ")", ":", "\n", "            ", "batch_users_tensor", "=", "torch", ".", "Tensor", "(", "batch_users", ")", ".", "long", "(", ")", "\n", "batch_users_gpu", "=", "batch_users_tensor", ".", "to", "(", "world", ".", "device", ")", "\n", "users_list", ".", "append", "(", "batch_users", ")", "\n", "\n", "knn_0", "=", "old_User", "[", "batch_users_gpu", ".", "long", "(", ")", "]", "@", "old_User", ".", "t", "(", ")", "\n", "knn_1", "=", "old_User", "[", "batch_users_gpu", ".", "long", "(", ")", "]", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "1", ")", "\n", "knn_2", "=", "old_User", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "knn", "=", "knn_1", "+", "knn_2", "-", "2", "*", "knn_0", "\n", "knn", "=", "knn", ".", "pow", "(", "2", ")", "\n", "batch_mtach_users_itself", "=", "torch", ".", "topk", "(", "knn", ",", "world", ".", "inference_k", "+", "1", ",", "largest", "=", "False", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "batch_mtach_users", "=", "batch_mtach_users_itself", "[", ":", ",", "1", ":", "world", ".", "inference_k", "+", "1", "]", "\n", "\n", "\n", "rating", "=", "Meta_model", ".", "get_finalprediction", "(", "old_embeddings", ",", "batch_users_gpu", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", ",", "activeUser_all", ",", "activeItem_all", ",", "dataset", ".", "trained_user", ",", "dataset", ".", "trained_item", ",", "batch_mtach_users", ")", "\n", "Rating_cpu", "=", "rating", ".", "cpu", "(", ")", "\n", "test_Dict_onebatch", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "batch_users_tensor", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                ", "test_Dict_onebatch", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "=", "testDict", "[", "int", "(", "batch_users_tensor", "[", "i", "]", ")", "]", "\n", "", "batch_usersusers", "=", "batch_users_tensor", ".", "numpy", "(", ")", "\n", "UsersRatings_cpu", "=", "Rating_cpu", ".", "numpy", "(", ")", "\n", "TestDict", "=", "test_Dict_onebatch", "\n", "posit_list", "=", "[", "]", "\n", "rating_K_list", "=", "[", "]", "\n", "\n", "posit_list_ac", "=", "[", "]", "\n", "rating_K_list_ac", "=", "[", "]", "\n", "\n", "posit_list_inac", "=", "[", "]", "\n", "rating_K_list_inac", "=", "[", "]", "\n", "for", "userIndex", "in", "range", "(", "batch_usersusers", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "userID", "=", "int", "(", "batch_usersusers", "[", "userIndex", "]", ")", "\n", "for", "posit", "in", "list", "(", "TestDict", "[", "userID", "]", ".", "keys", "(", ")", ")", ":", "\n", "                    ", "OneIter_Itemlist", "=", "TestDict", "[", "userID", "]", "[", "posit", "]", "\n", "OneItreation_Rating", "=", "UsersRatings_cpu", "[", "userIndex", ",", "OneIter_Itemlist", "]", "\n", "OneItreation_Rating", "=", "np", ".", "expand_dims", "(", "OneItreation_Rating", ",", "axis", "=", "0", ")", "\n", "rating_K", "=", "utils", ".", "topk", "(", "OneItreation_Rating", ",", "K", "=", "max", "(", "world", ".", "topks", ")", ")", "\n", "rating_index", "=", "np", ".", "array", "(", "rating_K", "[", "0", "]", ")", "\n", "OneIter_Itemlist_array", "=", "np", ".", "array", "(", "OneIter_Itemlist", ")", "\n", "rating_K_list", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list", ".", "append", "(", "posit", ")", "\n", "if", "userID", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_ac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_ac", ".", "append", "(", "posit", ")", "\n", "", "elif", "userID", "not", "in", "activeUser_all", ":", "\n", "                        ", "rating_K_list_inac", ".", "append", "(", "OneIter_Itemlist_array", "[", "rating_index", "]", ".", "tolist", "(", ")", ")", "\n", "posit_list_inac", ".", "append", "(", "posit", ")", "\n", "\n", "", "", "", "rating_list_ac", ".", "extend", "(", "rating_K_list_ac", ")", "\n", "groundTrue_list_ac", ".", "extend", "(", "posit_list_ac", ")", "\n", "\n", "rating_list_inac", ".", "extend", "(", "rating_K_list_inac", ")", "\n", "groundTrue_list_inac", ".", "extend", "(", "posit_list_inac", ")", "\n", "\n", "rating_list", ".", "extend", "(", "rating_K_list", ")", "\n", "groundTrue_list", ".", "extend", "(", "posit_list", ")", "\n", "\n", "", "(", "Recall", ",", "Precision", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list", ",", "groundTrue_list", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_ac", ",", "Precision_ac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_ac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_ac", ",", "groundTrue_list_ac", ",", "world", ".", "topks", ")", "\n", "\n", "(", "Recall_inac", ",", "Precision_inac", ")", "=", "utils", ".", "Recall_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "(", "Ndcg_inac", ")", "=", "utils", ".", "NDCG_onepos_999neg", "(", "rating_list_inac", ",", "groundTrue_list_inac", ",", "world", ".", "topks", ")", "\n", "\n", "assert", "total_batch", "==", "len", "(", "users_list", ")", "\n", "# print(len(groundTrue_list_ac),len(groundTrue_list_inac),len(groundTrue_list))", "\n", "assert", "len", "(", "groundTrue_list_ac", ")", "+", "len", "(", "groundTrue_list_inac", ")", "==", "len", "(", "groundTrue_list", ")", ",", "f'user num wrong error {len(groundTrue_list_ac)}+{len(groundTrue_list_inac)}!={len(groundTrue_list)}'", "\n", "\n", "results", "[", "'recall'", "]", "=", "Recall", "\n", "results", "[", "'precision'", "]", "=", "Precision", "\n", "results", "[", "'ndcg'", "]", "=", "Ndcg", "\n", "\n", "results_ac", "[", "'recall'", "]", "=", "Recall_ac", "\n", "results_ac", "[", "'precision'", "]", "=", "Precision_ac", "\n", "results_ac", "[", "'ndcg'", "]", "=", "Ndcg_ac", "\n", "\n", "results_inac", "[", "'recall'", "]", "=", "Recall_inac", "\n", "results_inac", "[", "'precision'", "]", "=", "Precision_inac", "\n", "results_inac", "[", "'ndcg'", "]", "=", "Ndcg_inac", "\n", "\n", "# print(results)", "\n", "# print(f\"Activate users num :{len(groundTrue_list_ac)} \" ,results_ac)", "\n", "# print(f\"Inactivate users num : {len(groundTrue_list_inac)} \" ,results_inac)", "\n", "\n", "return", "(", "results", ",", "results_ac", ",", "len", "(", "groundTrue_list_ac", ")", ",", "results_inac", ",", "len", "(", "groundTrue_list_inac", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.parse.parse_args": [[10, 46], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.parse.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Go lightGCN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--bpr_batch'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "help", "=", "\"the batch size for bpr loss training procedure\"", ")", "\n", "parser", ".", "add_argument", "(", "'--recdim'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "\"the embedding size of lightGCN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--layer'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "\"the layer num of lightGCN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "help", "=", "\"the learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "'--decay'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ",", "help", "=", "\"the weight decay for l2 normalizaton\"", ")", "\n", "parser", ".", "add_argument", "(", "'--testbatch'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "\"the batch size of users for testing\"", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'finetune_yelp'", ",", "help", "=", "\"available datasets: [ news, finetune_yelp]\"", ")", "\n", "parser", ".", "add_argument", "(", "'--path'", ",", "type", "=", "str", ",", "default", "=", "\"../checkpoints\"", ",", "help", "=", "\"path to save weights\"", ")", "\n", "parser", ".", "add_argument", "(", "'--topks'", ",", "type", "=", "str", ",", "default", "=", "\"[5,10,20]\"", ",", "help", "=", "\"@k test list\"", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "2020", ",", "help", "=", "'random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'handle_lgcn'", ",", "help", "=", "'rec-model, support [mf, lgn,finetune_lgcn,fullretrain_lgcn,static_lgcn,sml,sml_x,Transfer_LGCN,metah,handle_lgcn]'", ")", "\n", "parser", ".", "add_argument", "(", "'--finetune_epochs'", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "'epochs for train our model'", ")", "\n", "parser", ".", "add_argument", "(", "'--rescale_zoom'", ",", "type", "=", "float", ",", "default", "=", "1", ",", "help", "=", "'to fix the bais from rescale'", ")", "\n", "parser", ".", "add_argument", "(", "'--sample_mode'", ",", "type", "=", "str", ",", "default", "=", "'new'", ",", "help", "=", "'which user(item) can be negative sampled'", ")", "\n", "parser", ".", "add_argument", "(", "'--inference_sample_mode'", ",", "type", "=", "str", ",", "default", "=", "'new'", ",", "help", "=", "'which user(item) can be negative sampled'", ")", "\n", "parser", ".", "add_argument", "(", "'--setstart'", ",", "type", "=", "str", ",", "default", "=", "' '", ")", "\n", "parser", ".", "add_argument", "(", "'--start_end'", ",", "type", "=", "str", ",", "default", "=", "'[]'", ")", "\n", "parser", ".", "add_argument", "(", "'--ST_stage'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "'yelp[10,20,30] news[22,48]'", ")", "\n", "parser", ".", "add_argument", "(", "'--FT_epochs'", ",", "type", "=", "int", ",", "default", "=", "400", ")", "\n", "parser", ".", "add_argument", "(", "'--FR_epochs'", ",", "type", "=", "int", ",", "default", "=", "700", ")", "\n", "parser", ".", "add_argument", "(", "'--ST_epochs'", ",", "type", "=", "int", ",", "default", "=", "600", ",", "help", "=", "'yelp10\u300130 600 is best'", ")", "\n", "parser", ".", "add_argument", "(", "'--handle_epochs'", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "'epochs for train our model'", ")", "\n", "parser", ".", "add_argument", "(", "'--conv2d_reg'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ",", "help", "=", "\"conv2d's weight reg\"", ")", "\n", "parser", ".", "add_argument", "(", "'--inference_lr'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "help", "=", "\"the learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "'--conv2d_channel'", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "'--conv2d_channel2'", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "'--notactive'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"training item in knn sample pool\"", ")", "\n", "parser", ".", "add_argument", "(", "'--radio_loss'", ",", "type", "=", "float", ",", "default", "=", "0.5", ",", "help", "=", "\"ICL radio\"", ")", "\n", "parser", ".", "add_argument", "(", "'--icl_k'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"ICL KNN's k in training\"", ")", "\n", "parser", ".", "add_argument", "(", "'--icl_reg'", ",", "type", "=", "float", ",", "default", "=", "1.0", ",", "help", "=", "\"ICL radio\"", ")", "\n", "parser", ".", "add_argument", "(", "'--A'", ",", "type", "=", "float", ",", "default", "=", "0.0", ",", "help", "=", "\"Inference_radio (1-A)*old+A*new\"", ")", "\n", "parser", ".", "add_argument", "(", "'--inference_k'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"ICL KNN's k in inference\"", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.BasicModel.__init__": [[11, 13], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BasicModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.BasicModel.getUsersRating": [[14, 16], ["None"], "methods", ["None"], ["", "def", "getUsersRating", "(", "self", ",", "users", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.PairWiseModel.__init__": [[18, 20], ["model_CI_LightGCN_zero.BasicModel.__init__"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PairWiseModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.PairWiseModel.bpr_loss": [[20, 30], ["None"], "methods", ["None"], ["", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "\"\"\"\n        Parameters:\n            users: users list \n            pos: positive items for corresponding users\n            neg: negative items for corresponding users\n        Return:\n            (log-loss, l2-loss)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", "class", "LightGCN_handle", "(", "BasicModel", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.__init__": [[31, 38], ["model_CI_LightGCN_zero.BasicModel.__init__", "model_CI_LightGCN_zero.LightGCN_handle.__init_weight"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init_weight"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "dict", ",", "dataset", ",", "graph_mode", ")", ":", "\n", "        ", "super", "(", "LightGCN_handle", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dataset", ":", "dataloader", ".", "BasicDataset", "=", "dataset", "\n", "self", ".", "stage", "=", "dataset", ".", "datasetStage", "\n", "self", ".", "graph_mode", "=", "graph_mode", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.__init_weight": [[39, 58], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "print", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "model_CI_LightGCN_zero.LightGCN_handle.dataset.getSparseGraph_handle", "model_CI_LightGCN_zero.LightGCN_handle.dataset.getSparseGraph_all", "model_CI_LightGCN_zero.LightGCN_handle.dataset.getSparseGraph_only", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_all", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_only"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_users", "=", "self", ".", "dataset", ".", "n_users", "\n", "self", ".", "num_items", "=", "self", ".", "dataset", ".", "m_items", "\n", "self", ".", "latent_dim", "=", "self", ".", "config", "[", "'latent_dim_rec'", "]", "\n", "self", ".", "n_layers", "=", "self", ".", "config", "[", "'lightGCN_n_layers'", "]", "\n", "self", ".", "embedding_user", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_users", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "self", ".", "embedding_item", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_items", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_user", ".", "weight", ",", "gain", "=", "1", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_item", ".", "weight", ",", "gain", "=", "1", ")", "\n", "print", "(", "f'use xavier initilizer, use {self.graph_mode} Adj'", ")", "\n", "self", ".", "f", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "if", "self", ".", "graph_mode", "==", "'handle'", ":", "\n", "            ", "self", ".", "Graph", ",", "self", ".", "Rescale", "=", "self", ".", "dataset", ".", "getSparseGraph_handle", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_all'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_all", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_only'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_only", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "'not set graph mode'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights": [[59, 76], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.where", "torch.where", "torch.where", "torch.where", "torch.stack.append", "torch.stack.append", "allembs_list.append", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.full_like", "torch.full_like", "torch.full_like", "torch.full_like", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split"], "methods", ["None"], ["", "", "def", "get_layer_weights", "(", "self", ")", ":", "#allembs_list\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5d4c\u5957list\uff0c\u7b2c\u4e00\u5c42\u4ee3\u8868\u662flgcn\u7684\u7b2c\u51e0\u5c42\uff0c\u7b2c\u4e8c\u5c420\u662fuser\uff0c1\u662fitem", "\n", "        ", "users_emb", "=", "self", ".", "embedding_user", ".", "weight", "\n", "items_emb", "=", "self", ".", "embedding_item", ".", "weight", "\n", "all_emb", "=", "torch", ".", "cat", "(", "[", "users_emb", ",", "items_emb", "]", ")", "\n", "embs", "=", "[", "all_emb", "]", "\n", "allembs_list", "=", "[", "[", "users_emb", ",", "items_emb", "]", "]", "\n", "\n", "g_droped", "=", "self", ".", "Graph", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "all_emb_nan20", "=", "torch", ".", "where", "(", "torch", ".", "isnan", "(", "all_emb", ")", ",", "torch", ".", "full_like", "(", "all_emb", ",", "0", ")", ",", "all_emb", ")", "#\u4e3a\u4e86\u53bb\u9664nan", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb_nan20", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb_nan20", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.getUsersRating": [[77, 84], ["model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "items_emb.t", "users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "getUsersRating", "(", "self", ",", "users", ")", ":", "#\u8fd4\u56de\u4e00\u4e2atensor", "\n", "        ", "all_users", ",", "all_items", ",", "_", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_", "\n", "users_emb", "=", "all_users", "[", "users", ".", "long", "(", ")", "]", "\n", "items_emb", "=", "all_items", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.getEmbedding": [[85, 95], ["model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights", "model_CI_LightGCN_zero.LightGCN_handle.embedding_user", "model_CI_LightGCN_zero.LightGCN_handle.embedding_item", "model_CI_LightGCN_zero.LightGCN_handle.embedding_item"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "getEmbedding", "(", "self", ",", "users", ",", "pos_items", ",", "neg_items", ")", ":", "\n", "        ", "all_users", ",", "all_items", ",", "_", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_", "\n", "users_emb", "=", "all_users", "[", "users", "]", "\n", "pos_emb", "=", "all_items", "[", "pos_items", "]", "\n", "neg_emb", "=", "all_items", "[", "neg_items", "]", "\n", "users_emb_ego", "=", "self", ".", "embedding_user", "(", "users", ")", "\n", "pos_emb_ego", "=", "self", ".", "embedding_item", "(", "pos_items", ")", "\n", "neg_emb_ego", "=", "self", ".", "embedding_item", "(", "neg_items", ")", "\n", "return", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "users_emb_ego", ",", "pos_emb_ego", ",", "neg_emb_ego", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.bpr_loss": [[96, 109], ["model_CI_LightGCN_zero.LightGCN_handle.getEmbedding", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "users.long", "pos.long", "neg.long", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "len", "negEmb0.norm().pow", "userEmb0.norm().pow", "posEmb0.norm().pow", "negEmb0.norm", "userEmb0.norm", "posEmb0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.getEmbedding"], ["", "def", "bpr_loss", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "(", "users_emb", ",", "pos_emb", ",", "neg_emb", ",", "\n", "userEmb0", ",", "posEmb0", ",", "negEmb0", ")", "=", "self", ".", "getEmbedding", "(", "users", ".", "long", "(", ")", ",", "pos", ".", "long", "(", ")", ",", "neg", ".", "long", "(", ")", ")", "\n", "reg_loss", "=", "(", "1", "/", "2", ")", "*", "(", "userEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "posEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "\n", "negEmb0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "return", "loss", ",", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.get_our_loss": [[111, 177], ["model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "len", "item_neg_layer0.norm().pow", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "user_layer0.norm().pow", "item_pos_layer0.norm().pow", "item_neg_layer0.norm", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "users.long", "pos.long", "neg.long", "user_layer0.norm", "item_pos_layer0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_our_loss", "(", "self", ",", "old_weights", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_pos_layer1", "=", "item_pos_layer1_1", "+", "item_pos_layer1_2", "\n", "item_neg_layer1", "=", "item_neg_layer1_1", "+", "item_neg_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_pos_layer2", "=", "item_pos_layer2_1", "+", "item_pos_layer2_2", "\n", "item_neg_layer2", "=", "item_neg_layer2_1", "+", "item_neg_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_pos_layer3", "=", "item_pos_layer3_1", "+", "item_pos_layer3_2", "\n", "item_neg_layer3", "=", "item_neg_layer3_1", "+", "item_neg_layer3_2", "\n", "#=============================computer======", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "pos_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_pos_layer0", ",", "item_pos_layer1", ",", "item_pos_layer2", ",", "item_pos_layer3", "]", ",", "dim", "=", "1", ")", "\n", "pos_emb", "=", "torch", ".", "mean", "(", "pos_emb_stack", ",", "dim", "=", "1", ")", "\n", "neg_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_neg_layer0", ",", "item_neg_layer1", ",", "item_neg_layer2", ",", "item_neg_layer3", "]", ",", "dim", "=", "1", ")", "\n", "neg_emb", "=", "torch", ".", "mean", "(", "neg_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "reg_loss", "=", "(", "1", "/", "2", ")", "*", "(", "user_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_pos_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_neg_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "reg_loss", "=", "reg_loss", "*", "world", ".", "lgcn_weight_dency", "\n", "loss", "=", "loss", "+", "reg_loss", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.get_finalprediction": [[178, 222], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mean.t", "torch.mean.t", "users.long", "[].to", "[].to", "users.long", "[].to", "[].to", "users.long", "[].to", "[].to", "users.long", "users.long", "users.long", "users.long", "users.long", "users.long", "users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_finalprediction", "(", "self", ",", "old_weights", ",", "users", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_layer1", "=", "item_layer1_1", "+", "item_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_layer2", "=", "item_layer2_1", "+", "item_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_layer3", "=", "item_layer3_1", "+", "item_layer3_2", "\n", "#=============================computer=================================", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "items_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_layer0", ",", "item_layer1", ",", "item_layer2", ",", "item_layer3", "]", ",", "dim", "=", "1", ")", "\n", "items_emb", "=", "torch", ".", "mean", "(", "items_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.get_embeddings": [[223, 262], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN_zero.LightGCN_handle.get_layer_weights", "torch.split", "torch.split", "torch.split", "torch.split", "collections.OrderedDict", "[].to", "[].to", "[].to", "[].to", "[].to", "[].to", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "user_layer0.detach", "user_layer1.detach", "user_layer2.detach", "user_layer3.detach", "item_layer0.detach", "item_layer1.detach", "item_layer2.detach", "item_layer3.detach"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights"], ["", "def", "get_embeddings", "(", "self", ",", "old_weights", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "self", ".", "Rescale", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "user_layer1_1", "+", "user_layer1_2", "\n", "item_layer1", "=", "item_layer1_1", "+", "item_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "user_layer2_1", "+", "user_layer2_2", "\n", "item_layer2", "=", "item_layer2_1", "+", "item_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "user_layer3_1", "+", "user_layer3_2", "\n", "item_layer3", "=", "item_layer3_1", "+", "item_layer3_2", "\n", "\n", "new_dict", "=", "collections", ".", "OrderedDict", "(", "{", "'embedding_user'", ":", "[", "copy", ".", "deepcopy", "(", "user_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer3", ".", "detach", "(", ")", ")", "]", ",", "'embedding_item'", ":", "[", "copy", ".", "deepcopy", "(", "item_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer3", ".", "detach", "(", ")", ")", "]", "}", ")", "\n", "", "return", "new_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init__": [[264, 271], ["model_CI_LightGCN_zero.BasicModel.__init__", "model_CI_LightGCN_zero.LightGCN_joint.__init_weight"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init_weight"], ["    ", "def", "__init__", "(", "self", ",", "config", ":", "dict", ",", "dataset", ",", "graph_mode", ")", ":", "\n", "        ", "super", "(", "LightGCN_joint", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dataset", ":", "dataloader", ".", "BasicDataset", "=", "dataset", "\n", "self", ".", "stage", "=", "dataset", ".", "datasetStage", "\n", "self", ".", "graph_mode", "=", "graph_mode", "\n", "self", ".", "__init_weight", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.__init_weight": [[272, 329], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "print", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN_zero.LightGCN_joint.dataset.getSparseGraph_handle", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN_zero.LightGCN_joint.dataset.getSparseGraph_all", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "model_CI_LightGCN_zero.LightGCN_joint.dataset.getSparseGraph_only", "model_CI_LightGCN_zero.LightGCN_joint.dataset.getSparseGraph_pure", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_handle", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_all", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.getSparseGraph_only", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.Loader_hat.getSparseGraph_pure"], ["", "def", "__init_weight", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_users", "=", "self", ".", "dataset", ".", "n_users", "\n", "self", ".", "num_items", "=", "self", ".", "dataset", ".", "m_items", "\n", "self", ".", "latent_dim", "=", "self", ".", "config", "[", "'latent_dim_rec'", "]", "\n", "self", ".", "n_layers", "=", "self", ".", "config", "[", "'lightGCN_n_layers'", "]", "\n", "self", ".", "embedding_user", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_users", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "self", ".", "embedding_item", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "self", ".", "num_items", ",", "embedding_dim", "=", "self", ".", "latent_dim", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_user", ".", "weight", ",", "gain", "=", "1", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embedding_item", ".", "weight", ",", "gain", "=", "1", ")", "\n", "print", "(", "f'use xavier initilizer'", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "(", "2", ",", "1", ")", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "if", "world", ".", "dataset", "==", "'news'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "0", ")", "\n", "", "elif", "world", ".", "dataset", "==", "'finetune_yelp'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "1.0", ")", "\n", "", "elif", "world", ".", "dataset", "==", "'gowalla'", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "1", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv1", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv2", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "conv3", ".", "weight", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "1.0", ")", "\n", "self", ".", "Denominator", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "old_scale", "=", "nn", ".", "Linear", "(", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "Denominator", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", ".", "old_scale", ".", "weight", ",", "1.0", ")", "\n", "", "self", ".", "f", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "if", "self", ".", "graph_mode", "==", "'handle'", ":", "\n", "            ", "self", ".", "Graph", ",", "self", ".", "Rescale", "=", "self", ".", "dataset", ".", "getSparseGraph_handle", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_all'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_all", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'origin_only'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_only", "(", ")", "\n", "", "elif", "self", ".", "graph_mode", "==", "'degree'", ":", "\n", "            ", "self", ".", "Graph", "=", "self", ".", "dataset", ".", "getSparseGraph_pure", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "'not set graph mode'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward": [[330, 336], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN_zero.LightGCN_joint.conv1", "x.view.view.view"], "methods", ["None"], ["", "", "def", "transfer1_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward": [[337, 343], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN_zero.LightGCN_joint.conv2", "x.view.view.view"], "methods", ["None"], ["", "def", "transfer2_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward": [[344, 350], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "model_CI_LightGCN_zero.LightGCN_joint.conv3", "x.view.view.view"], "methods", ["None"], ["", "def", "transfer3_forward", "(", "self", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer": [[351, 358], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "copy.deepcopy", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "x.view.view.view", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "icl_transfer", "(", "self", ",", "operation", ",", "x_old", ",", "x_new", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x_old", ",", "x_new", ")", ",", "dim", "=", "-", "1", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "world", ".", "icl_k", ",", "2", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "weight", "=", "copy", ".", "deepcopy", "(", "operation", ".", "weight", ".", "data", ")", "\n", "x", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "x", ",", "weight", ")", ",", "dim", "=", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "world", ".", "icl_k", ",", "x_new", ".", "shape", "[", "-", "1", "]", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.denominator_forward": [[359, 364], ["model_CI_LightGCN_zero.LightGCN_joint.Denominator", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu"], "methods", ["None"], ["", "def", "denominator_forward", "(", "self", ",", "Degree_new", ",", "Degree_old", ")", ":", "\n", "        ", "x_Denominator", "=", "self", ".", "Denominator", "(", "Degree_old", ")", "\n", "x_Denominator", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "x_Denominator", ",", "inplace", "=", "True", ")", "+", "Degree_new", "\n", "x_molecular", "=", "torch", ".", "ones_like", "(", "x_Denominator", ")", "\n", "return", "x_molecular", ",", "x_Denominator", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward": [[365, 369], ["model_CI_LightGCN_zero.LightGCN_joint.old_scale", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu"], "methods", ["None"], ["", "def", "oldscale_forward", "(", "self", ",", "old_scale", ")", ":", "\n", "        ", "old_scale", "=", "self", ".", "old_scale", "(", "old_scale", ")", "\n", "old_scale", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "old_scale", ",", "inplace", "=", "True", ")", "\n", "return", "old_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights": [[370, 404], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN_zero.LightGCN_joint.dataset.get_degree", "model_CI_LightGCN_zero.LightGCN_joint.denominator_forward", "degree_Denominator.pow.pow.pow", "torch.div", "torch.div", "torch.div", "torch.div", "norm_degree.flatten.flatten.flatten", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.split", "torch.split", "torch.split", "torch.split", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.stack.append", "torch.stack.append", "allembs_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.stack.append", "torch.stack.append", "allembs_list.append", "norm_degree.flatten.flatten.view", "norm_degree.flatten.flatten.view", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split", "torch.split"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.dataloader_handle_inference_icl.test_cold_start.get_degree", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.denominator_forward"], ["", "def", "get_layer_weights", "(", "self", ")", ":", "\n", "        ", "users_emb", "=", "self", ".", "embedding_user", ".", "weight", "\n", "items_emb", "=", "self", ".", "embedding_item", ".", "weight", "\n", "all_emb", "=", "torch", ".", "cat", "(", "[", "users_emb", ",", "items_emb", "]", ")", "\n", "embs", "=", "[", "all_emb", "]", "\n", "allembs_list", "=", "[", "[", "users_emb", ",", "items_emb", "]", "]", "\n", "\n", "if", "self", ".", "graph_mode", "!=", "'degree'", ":", "\n", "            ", "g_droped", "=", "self", ".", "Graph", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "                ", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", "\n", "", "else", ":", "\n", "            ", "g_droped", "=", "self", ".", "Graph", "\n", "now_user_degree", ",", "now_item_degree", ",", "elder_user_degree", ",", "elder_item_degree", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "dataset", ".", "get_degree", "(", ")", "\n", "degree_molecular", ",", "degree_Denominator", "=", "self", ".", "denominator_forward", "(", "torch", ".", "cat", "(", "(", "now_user_degree", ",", "now_item_degree", ")", ",", "dim", "=", "0", ")", ",", "torch", ".", "cat", "(", "(", "old_user_degree", ",", "old_item_degree", ")", ",", "dim", "=", "0", ")", ")", "\n", "degree_Denominator", "=", "degree_Denominator", ".", "pow", "(", "0.5", ")", "\n", "norm_degree", "=", "torch", ".", "div", "(", "degree_molecular", ",", "(", "degree_Denominator", "+", "1e-9", ")", ")", "\n", "norm_degree", "=", "norm_degree", ".", "flatten", "(", ")", "\n", "for", "layer", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "                ", "all_emb", "=", "torch", ".", "mul", "(", "norm_degree", ".", "view", "(", "-", "1", ",", "1", ")", ",", "all_emb", ")", "\n", "all_emb", "=", "torch", ".", "sparse", ".", "mm", "(", "g_droped", ",", "all_emb", ")", "\n", "all_emb", "=", "torch", ".", "mul", "(", "norm_degree", ".", "view", "(", "-", "1", ",", "1", ")", ",", "all_emb", ")", "\n", "embs", ".", "append", "(", "all_emb", ")", "\n", "allembs_list", ".", "append", "(", "[", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "0", "]", ",", "torch", ".", "split", "(", "all_emb", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "[", "1", "]", "]", ")", "\n", "", "embs", "=", "torch", ".", "stack", "(", "embs", ",", "dim", "=", "1", ")", "\n", "light_out", "=", "torch", ".", "mean", "(", "embs", ",", "dim", "=", "1", ")", "\n", "users", ",", "items", "=", "torch", ".", "split", "(", "light_out", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "return", "users", ",", "items", ",", "allembs_list", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_our_loss": [[405, 508], ["model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "torch.mul.pow", "torch.mul.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean.unsqueeze", "torch.mean.unsqueeze", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "float", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "[].to", "[].to", "[].to", "[].to", "users.long", "pos.long", "neg.long", "mtach_items.long", "len", "model_CI_LightGCN_zero.LightGCN_joint.conv3.weight.norm().pow", "model_CI_LightGCN_zero.LightGCN_joint.Denominator.weight.norm().pow", "model_CI_LightGCN_zero.LightGCN_joint.old_scale.weight.norm().pow", "float", "len", "float", "item_neg_layer0.norm().pow", "model_CI_LightGCN_zero.LightGCN_joint.conv1.weight.norm().pow", "model_CI_LightGCN_zero.LightGCN_joint.conv2.weight.norm().pow", "matchitem_layer0.norm().pow", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "float", "len", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "user_layer0.norm().pow", "item_pos_layer0.norm().pow", "model_CI_LightGCN_zero.LightGCN_joint.conv3.weight.norm", "model_CI_LightGCN_zero.LightGCN_joint.Denominator.weight.norm", "model_CI_LightGCN_zero.LightGCN_joint.old_scale.weight.norm", "item_neg_layer0.norm", "model_CI_LightGCN_zero.LightGCN_joint.conv1.weight.norm", "model_CI_LightGCN_zero.LightGCN_joint.conv2.weight.norm", "matchitem_layer0.norm", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "users.long", "pos.long", "neg.long", "mtach_items.long", "user_layer0.norm", "item_pos_layer0.norm"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.icl_transfer"], ["", "", "def", "get_our_loss", "(", "self", ",", "old_weights", ",", "users", ",", "pos", ",", "neg", ",", "mtach_items", ")", ":", "\n", "        ", "_0", ",", "_1", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_scale", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmtachitem_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "matchitem_layer0", "=", "Kmtachitem_layer0", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_pos_layer1", "=", "self", ".", "transfer1_forward", "(", "item_pos_layer1_1", ",", "item_pos_layer1_2", ")", "\n", "item_neg_layer1", "=", "self", ".", "transfer1_forward", "(", "item_neg_layer1_1", ",", "item_neg_layer1_2", ")", "\n", "matchitem_layer1", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv1", ",", "Kmatchitem_layer1_1", ",", "Kmatchitem_layer1_2", ")", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_pos_layer2", "=", "self", ".", "transfer2_forward", "(", "item_pos_layer2_1", ",", "item_pos_layer2_2", ")", "\n", "item_neg_layer2", "=", "self", ".", "transfer2_forward", "(", "item_neg_layer2_1", ",", "item_neg_layer2_2", ")", "\n", "matchitem_layer2", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv2", ",", "Kmatchitem_layer2_1", ",", "Kmatchitem_layer2_2", ")", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_pos_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "pos", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "pos", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_neg_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "neg", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "neg", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "Kmatchitem_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", "[", "mtach_items", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "[", "mtach_items", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_pos_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "pos", ".", "long", "(", ")", "]", "\n", "item_neg_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "neg", ".", "long", "(", ")", "]", "\n", "Kmatchitem_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "[", "mtach_items", ".", "long", "(", ")", "]", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_pos_layer3", "=", "self", ".", "transfer3_forward", "(", "item_pos_layer3_1", ",", "item_pos_layer3_2", ")", "\n", "item_neg_layer3", "=", "self", ".", "transfer3_forward", "(", "item_neg_layer3_1", ",", "item_neg_layer3_2", ")", "\n", "matchitem_layer3", "=", "self", ".", "icl_transfer", "(", "self", ".", "conv3", ",", "Kmatchitem_layer3_1", ",", "Kmatchitem_layer3_2", ")", "\n", "#=============================computer======", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "pos_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_pos_layer0", ",", "item_pos_layer1", ",", "item_pos_layer2", ",", "item_pos_layer3", "]", ",", "dim", "=", "1", ")", "\n", "pos_emb", "=", "torch", ".", "mean", "(", "pos_emb_stack", ",", "dim", "=", "1", ")", "\n", "neg_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_neg_layer0", ",", "item_neg_layer1", ",", "item_neg_layer2", ",", "item_neg_layer3", "]", ",", "dim", "=", "1", ")", "\n", "neg_emb", "=", "torch", ".", "mean", "(", "neg_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "matchitem_emb_stack", "=", "torch", ".", "stack", "(", "[", "matchitem_layer0", ",", "matchitem_layer1", ",", "matchitem_layer2", ",", "matchitem_layer3", "]", ",", "dim", "=", "1", ")", "\n", "matchitem_emb", "=", "torch", ".", "mean", "(", "matchitem_emb_stack", ",", "dim", "=", "1", ")", "\n", "\n", "pos_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "pos_emb", ")", "\n", "pos_scores", "=", "torch", ".", "sum", "(", "pos_scores", ",", "dim", "=", "1", ")", "\n", "neg_scores", "=", "torch", ".", "mul", "(", "users_emb", ",", "neg_emb", ")", "\n", "neg_scores", "=", "torch", ".", "sum", "(", "neg_scores", ",", "dim", "=", "1", ")", "\n", "\n", "users_emb_icl", "=", "users_emb", ".", "unsqueeze", "(", "1", ")", "\n", "icl_pos_scores", "=", "torch", ".", "mul", "(", "users_emb_icl", ",", "torch", ".", "mean", "(", "matchitem_emb", ",", "1", ")", ")", "\n", "icl_pos_scores", "=", "torch", ".", "sum", "(", "icl_pos_scores", ",", "dim", "=", "-", "1", ")", "*", "0.1", "\n", "icl_neg_scores", "=", "torch", ".", "mul", "(", "users_emb_icl", ",", "neg_emb", ")", "\n", "icl_neg_scores", "=", "torch", ".", "sum", "(", "icl_neg_scores", ",", "dim", "=", "-", "1", ")", "*", "0.1", "\n", "\n", "reg_loss1", "=", "(", "1", "/", "2", ")", "*", "(", "user_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_pos_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "item_neg_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "reg_loss2", "=", "(", "1", "/", "2", ")", "*", "(", "self", ".", "conv1", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "conv2", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "conv3", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "\n", "reg_loss3", "=", "(", "1", "/", "2", ")", "*", "(", "self", ".", "Denominator", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", "+", "self", ".", "old_scale", ".", "weight", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "\n", "reg_loss_icl", "=", "(", "1", "/", "2", ")", "*", "(", "matchitem_layer0", ".", "norm", "(", "2", ")", ".", "pow", "(", "2", ")", ")", "/", "float", "(", "world", ".", "icl_k", ")", "/", "float", "(", "len", "(", "users", ")", ")", "\n", "\n", "\n", "loss1", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "neg_scores", "-", "pos_scores", ")", ")", "\n", "loss2", "=", "torch", ".", "mean", "(", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "icl_neg_scores", "-", "icl_pos_scores", ")", "/", "float", "(", "world", ".", "icl_k", ")", "/", "float", "(", "len", "(", "users", ")", ")", ")", "\n", "\n", "if", "world", ".", "dataset", "==", "'news'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "1e-3", "*", "reg_loss3", "\n", "", "elif", "world", ".", "dataset", "==", "'finetune_yelp'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "0", "*", "reg_loss3", "+", "world", ".", "lgcn_weight_dency", "*", "reg_loss_icl", "\n", "", "elif", "world", ".", "dataset", "==", "'gowalla'", ":", "\n", "            ", "reg_loss", "=", "world", ".", "lgcn_weight_dency", "*", "reg_loss1", "+", "world", ".", "conv2d_reg", "*", "reg_loss2", "+", "0", "*", "reg_loss3", "\n", "", "loss", "=", "(", "1", "-", "world", ".", "radio_loss", ")", "*", "loss1", "+", "world", ".", "radio_loss", "*", "loss2", "+", "reg_loss", "\n", "\n", "return", "loss", ",", "(", "1", "-", "world", ".", "radio_loss", ")", "*", "loss1", ",", "world", ".", "radio_loss", "*", "loss2", ",", "world", ".", "lgcn_weight_dency", "*", "reg_loss_icl", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_finalprediction": [[509, 576], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "torch.cat.pow", "torch.cat.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.tensor().view().to", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mean.t", "torch.mean.t", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "[].to", "[].to", "[].to", "users.long", "match_users.long", "users.tolist", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "users.long", "match_users.long", "users.long", "match_users.long", "users.long", "match_users.long", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "users.long", "match_users.long", "users.long", "match_users.long", "users.long", "match_users.long"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward"], ["", "def", "get_finalprediction", "(", "self", ",", "old_weights", ",", "users", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", ",", "active_user", ",", "active_item", ",", "trained_user", ",", "trained_item", ",", "match_users", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_degree", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "match_user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer0", "=", "torch", ".", "mean", "(", "match_user_layer0", ",", "dim", "=", "1", ")", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "match_user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer1_2", "=", "torch", ".", "mean", "(", "match_user_layer1_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_layer1", "=", "self", ".", "transfer1_forward", "(", "item_layer1_1", ",", "item_layer1_2", ")", "\n", "match_user_layer1", "=", "match_user_layer1_2", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "match_user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer2_2", "=", "torch", ".", "mean", "(", "match_user_layer2_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_layer2", "=", "self", ".", "transfer2_forward", "(", "item_layer2_1", ",", "item_layer2_2", ")", "\n", "match_user_layer2", "=", "match_user_layer2_2", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "match_user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", "[", "match_users", ".", "long", "(", ")", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "[", "match_users", ".", "long", "(", ")", "]", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "users", ".", "long", "(", ")", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "match_user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "[", "match_users", ".", "long", "(", ")", "]", "\n", "match_user_layer3_2", "=", "torch", ".", "mean", "(", "match_user_layer3_2", ",", "dim", "=", "1", ")", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_layer3", "=", "self", ".", "transfer3_forward", "(", "item_layer3_1", ",", "item_layer3_2", ")", "\n", "match_user_layer3", "=", "match_user_layer3_2", "\n", "#=============================computer=================================", "\n", "users_emb_stack", "=", "torch", ".", "stack", "(", "[", "user_layer0", ",", "user_layer1", ",", "user_layer2", ",", "user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "users_emb", "=", "torch", ".", "mean", "(", "users_emb_stack", ",", "dim", "=", "1", ")", "\n", "items_emb_stack", "=", "torch", ".", "stack", "(", "[", "item_layer0", ",", "item_layer1", ",", "item_layer2", ",", "item_layer3", "]", ",", "dim", "=", "1", ")", "\n", "items_emb", "=", "torch", ".", "mean", "(", "items_emb_stack", ",", "dim", "=", "1", ")", "\n", "icl_users_emb_stack", "=", "torch", ".", "stack", "(", "[", "match_user_layer0", ",", "match_user_layer1", ",", "match_user_layer2", ",", "match_user_layer3", "]", ",", "dim", "=", "1", ")", "\n", "icl_users_emb", "=", "torch", ".", "mean", "(", "icl_users_emb_stack", ",", "dim", "=", "1", ")", "\n", "#==================enhance who?===========", "\n", "inactive_user", "=", "[", "1", "if", "i", "not", "in", "active_user", "else", "0", "for", "i", "in", "users", ".", "tolist", "(", ")", "]", "\n", "inactive_user_mask", "=", "torch", ".", "tensor", "(", "inactive_user", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "to", "(", "world", ".", "device", ")", "\n", "users_emb", "=", "users_emb", "*", "(", "torch", ".", "ones_like", "(", "inactive_user_mask", ")", "-", "inactive_user_mask", ")", "+", "(", "1", "-", "world", ".", "A", ")", "*", "users_emb", "*", "inactive_user_mask", "+", "world", ".", "A", "*", "icl_users_emb", "*", "inactive_user_mask", "\n", "\n", "rating", "=", "torch", ".", "matmul", "(", "users_emb", ",", "items_emb", ".", "t", "(", ")", ")", "\n", "", "return", "rating", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_embeddings": [[577, 623], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "torch.cat.pow", "torch.cat.pow", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.div", "torch.div", "torch.split", "torch.split", "torch.split", "torch.split", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "collections.OrderedDict", "[].to", "[].to", "[].to", "[].to", "[].to", "[].to", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "user_layer0.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach", "item_layer0.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach", "model_CI_LightGCN_zero.LightGCN_joint.detach"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.get_layer_weights", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.oldscale_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer1_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer2_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward", "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_joint.transfer3_forward"], ["", "def", "get_embeddings", "(", "self", ",", "old_weights", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "_0", ",", "_1", ",", "allLayerEmbs", ",", "degree_molecular", ",", "degree_Denominator", ",", "old_user_degree", ",", "old_item_degree", "=", "self", ".", "get_layer_weights", "(", ")", "\n", "del", "_0", ",", "_1", "\n", "\n", "old_degree", "=", "torch", ".", "cat", "(", "[", "old_user_degree", ",", "old_item_degree", "]", ",", "dim", "=", "0", ")", "\n", "old_scale", "=", "self", ".", "oldscale_forward", "(", "old_degree", ")", "\n", "old_scale", "=", "old_degree", ".", "pow", "(", "0.5", ")", "\n", "old_scale", "=", "torch", ".", "mul", "(", "degree_molecular", ",", "old_scale", ")", "\n", "new_scale", "=", "degree_Denominator", "\n", "rscale_vec", "=", "torch", ".", "div", "(", "old_scale", ",", "new_scale", "+", "1e-9", ")", "\n", "user_rescale", ",", "item_rescale", "=", "torch", ".", "split", "(", "rscale_vec", ",", "[", "self", ".", "num_users", ",", "self", ".", "num_items", "]", ")", "\n", "\n", "#=============================0 layer=================================", "\n", "user_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "0", "]", "\n", "item_layer0", "=", "allLayerEmbs", "[", "0", "]", "[", "1", "]", "\n", "#=============================1 layer=================================", "\n", "user_layer1_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer1_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "1", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "0", "]", "\n", "item_layer1_2", "=", "allLayerEmbs", "[", "1", "]", "[", "1", "]", "\n", "\n", "user_layer1", "=", "self", ".", "transfer1_forward", "(", "user_layer1_1", ",", "user_layer1_2", ")", "\n", "item_layer1", "=", "self", ".", "transfer1_forward", "(", "item_layer1_1", ",", "item_layer1_2", ")", "\n", "#=============================2 layer=================================", "\n", "user_layer2_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer2_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "2", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "0", "]", "\n", "item_layer2_2", "=", "allLayerEmbs", "[", "2", "]", "[", "1", "]", "\n", "\n", "user_layer2", "=", "self", ".", "transfer2_forward", "(", "user_layer2_1", ",", "user_layer2_2", ")", "\n", "item_layer2", "=", "self", ".", "transfer2_forward", "(", "item_layer2_1", ",", "item_layer2_2", ")", "\n", "#=============================3 layer=================================", "\n", "user_layer3_1", "=", "old_weights", "[", "'embedding_user'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "user_rescale", "*", "world", ".", "rescale_zoom", "\n", "item_layer3_1", "=", "old_weights", "[", "'embedding_item'", "]", "[", "3", "]", ".", "to", "(", "world", ".", "device", ")", "*", "item_rescale", "*", "world", ".", "rescale_zoom", "\n", "\n", "user_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "0", "]", "\n", "item_layer3_2", "=", "allLayerEmbs", "[", "3", "]", "[", "1", "]", "\n", "\n", "user_layer3", "=", "self", ".", "transfer3_forward", "(", "user_layer3_1", ",", "user_layer3_2", ")", "\n", "item_layer3", "=", "self", ".", "transfer3_forward", "(", "item_layer3_1", ",", "item_layer3_2", ")", "\n", "\n", "new_dict", "=", "collections", ".", "OrderedDict", "(", "{", "'embedding_user'", ":", "[", "copy", ".", "deepcopy", "(", "user_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "user_layer3", ".", "detach", "(", ")", ")", "]", ",", "'embedding_item'", ":", "[", "copy", ".", "deepcopy", "(", "item_layer0", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer1", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer2", ".", "detach", "(", ")", ")", ",", "copy", ".", "deepcopy", "(", "item_layer3", ".", "detach", "(", ")", ")", "]", "}", ")", "\n", "", "return", "new_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.__init__": [[21, 28], ["torch.optim.Adam", "recmodel.parameters"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "recmodel", ":", "PairWiseModel", ",", "\n", "config", ":", "dict", ")", ":", "\n", "        ", "self", ".", "model", "=", "recmodel", "\n", "self", ".", "weight_decay", "=", "world", ".", "lgcn_weight_dency", "\n", "self", ".", "lr", "=", "config", "[", "'lr'", "]", "\n", "self", ".", "opt", "=", "optim", ".", "Adam", "(", "recmodel", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "lr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.BPRLoss.stageOne": [[29, 40], ["utils.BPRLoss.model.bpr_loss", "utils.BPRLoss.opt.zero_grad", "loss.backward", "utils.BPRLoss.opt.step", "loss.cpu().item", "loss.cpu"], "methods", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.model_CI_LightGCN_zero.LightGCN_handle.bpr_loss"], ["", "def", "stageOne", "(", "self", ",", "users", ",", "pos", ",", "neg", ")", ":", "\n", "        ", "loss", ",", "reg_loss", "=", "self", ".", "model", ".", "bpr_loss", "(", "users", ",", "pos", ",", "neg", ")", "\n", "# print('####################',reg_loss,reg_loss.size())", "\n", "reg_loss", "=", "reg_loss", "*", "self", ".", "weight_decay", "\n", "loss", "=", "loss", "+", "reg_loss", "\n", "\n", "self", ".", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.UniformSample_handle": [[103, 147], ["time.time", "numpy.random.randint", "random.shuffle", "enumerate", "numpy.array", "numpy.random.randint", "S.append", "time.time", "range", "TypeError", "len", "len", "numpy.random.randint", "numpy.random.randint", "S.append", "time.time", "random.sample", "len", "ValueError", "len", "int", "random.sample", "int", "int"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.shuffle"], ["", "def", "UniformSample_handle", "(", "dataset", ",", "sample_mode", ")", ":", "\n", "    ", "total_start", "=", "time", "(", ")", "\n", "dataset", ":", "BasicDataset", "\n", "hisPos", "=", "dataset", ".", "hisPos", "\n", "nowPos", "=", "dataset", ".", "nowPos", "\n", "S", "=", "[", "]", "\n", "if", "sample_mode", "==", "'all'", ":", "\n", "        ", "users", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "dataset", ".", "n_user", ",", "dataset", ".", "trainDataSize", ")", "\n", "random", ".", "shuffle", "(", "users", ")", "\n", "for", "i", ",", "user", "in", "enumerate", "(", "users", ")", ":", "\n", "            ", "posForUser", "=", "nowPos", "[", "user", "]", "\n", "if", "len", "(", "posForUser", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "posindex", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "posForUser", ")", ")", "\n", "positem", "=", "posForUser", "[", "posindex", "]", "\n", "while", "True", ":", "\n", "                ", "negitem", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "dataset", ".", "m_items", ")", "\n", "if", "negitem", "in", "hisPos", "[", "user", "]", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "break", "\n", "", "", "S", ".", "append", "(", "[", "user", ",", "positem", ",", "negitem", "]", ")", "\n", "", "total", "=", "time", "(", ")", "-", "total_start", "\n", "\n", "", "elif", "sample_mode", "==", "'new'", ":", "\n", "        ", "users_condidate", "=", "dataset", ".", "trainUser_unique_only", "\n", "for", "i", "in", "range", "(", "dataset", ".", "trainDataSize", ")", ":", "\n", "            ", "user", "=", "random", ".", "sample", "(", "users_condidate", ",", "1", ")", "[", "0", "]", "\n", "posForUser", "=", "nowPos", "[", "int", "(", "user", ")", "]", "\n", "if", "len", "(", "posForUser", ")", "==", "0", ":", "\n", "                ", "raise", "ValueError", "(", "f'Sample function wrong ,there is a trainUser ,{int(user)} have no pos item'", ")", "\n", "", "posindex", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "posForUser", ")", ")", "\n", "positem", "=", "posForUser", "[", "posindex", "]", "\n", "while", "True", ":", "\n", "                ", "negitem", "=", "random", ".", "sample", "(", "dataset", ".", "trainItem_unique_only", ",", "1", ")", "[", "0", "]", "\n", "if", "negitem", "in", "hisPos", "[", "int", "(", "user", ")", "]", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "break", "\n", "", "", "S", ".", "append", "(", "[", "user", ",", "positem", ",", "negitem", "]", ")", "\n", "", "total", "=", "time", "(", ")", "-", "total_start", "\n", "", "else", ":", "\n", "        ", "raise", "TypeError", "(", "f'no this mode {sample_mode} is not in [all ,new]'", ")", "\n", "", "return", "np", ".", "array", "(", "S", ")", ",", "total", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.set_seed": [[149, 155], ["numpy.random.seed", "torch.cuda.is_available", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_seed", "(", "seed", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.getFileName": [[156, 183], ["os.path.join", "os.path.join"], "function", ["None"], ["", "def", "getFileName", "(", "stage", ")", ":", "\n", "    ", "if", "world", ".", "model_name", "==", "'fullretrain_lgcn'", ":", "\n", "        ", "file", "=", "f\"fullretrain_lgcn-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'finetune_lgcn'", ":", "\n", "        ", "file", "=", "f\"finetune_lgcn-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'static_lgcn'", ":", "\n", "        ", "file", "=", "f\"static_lgcn-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'sml'", ":", "\n", "        ", "file", "=", "f\"sml-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'sml_x'", ":", "\n", "        ", "file", "=", "f\"sml_x-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'Transfer_LGCN'", ":", "\n", "        ", "file", "=", "f\"Transfer_LGCN-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'metah'", ":", "\n", "        ", "file", "=", "f\"metah-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'metahs'", ":", "\n", "        ", "file", "=", "f\"metahs-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'our_model'", ":", "\n", "        ", "file", "=", "f\"our_model-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-{world.exptag}.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'laipi_model'", ":", "\n", "        ", "file", "=", "f\"laipi_model-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-{world.exptag}.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'handle_lgcn'", ":", "\n", "        ", "file", "=", "f\"handle_lgcn-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy-{world.exptag}.pth.tar\"", "\n", "", "elif", "world", ".", "model_name", "==", "'CILightGCN'", ":", "\n", "        ", "file", "=", "f\"CILightGCN-{world.dataset}-{world.config['lightGCN_n_layers']}-{world.config['latent_dim_rec']}-{stage-1}.npy.pth.tar\"", "\n", "return", "os", ".", "path", ".", "join", "(", "f'../start_from_zero/{world.dataset}/'", ",", "file", ")", "\n", "", "return", "os", ".", "path", ".", "join", "(", "world", ".", "FILE_PATH", ",", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.minibatch": [[184, 195], ["kwargs.get", "len", "range", "range", "len", "len", "tuple"], "function", ["None"], ["", "def", "minibatch", "(", "*", "tensors", ",", "**", "kwargs", ")", ":", "\n", "\n", "    ", "batch_size", "=", "kwargs", ".", "get", "(", "'batch_size'", ",", "world", ".", "config", "[", "'bpr_batch_size'", "]", ")", "\n", "\n", "if", "len", "(", "tensors", ")", "==", "1", ":", "\n", "        ", "tensor", "=", "tensors", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "tensor", ")", ",", "batch_size", ")", ":", "\n", "            ", "yield", "tensor", "[", "i", ":", "i", "+", "batch_size", "]", "\n", "", "", "else", ":", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "len", "(", "tensors", "[", "0", "]", ")", ",", "batch_size", ")", ":", "\n", "            ", "yield", "tuple", "(", "x", "[", "i", ":", "i", "+", "batch_size", "]", "for", "x", "in", "tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.shuffle": [[197, 217], ["kwargs.get", "numpy.arange", "numpy.random.shuffle", "len", "ValueError", "len", "len", "tuple", "set", "len"], "function", ["home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.shuffle"], ["", "", "", "def", "shuffle", "(", "*", "arrays", ",", "**", "kwargs", ")", ":", "\n", "\n", "    ", "require_indices", "=", "kwargs", ".", "get", "(", "'indices'", ",", "False", ")", "\n", "\n", "if", "len", "(", "set", "(", "len", "(", "x", ")", "for", "x", "in", "arrays", ")", ")", "!=", "1", ":", "\n", "        ", "raise", "ValueError", "(", "'All inputs to shuffle must have '", "\n", "'the same length.'", ")", "\n", "\n", "", "shuffle_indices", "=", "np", ".", "arange", "(", "len", "(", "arrays", "[", "0", "]", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "shuffle_indices", ")", "\n", "\n", "if", "len", "(", "arrays", ")", "==", "1", ":", "\n", "        ", "result", "=", "arrays", "[", "0", "]", "[", "shuffle_indices", "]", "\n", "", "else", ":", "\n", "        ", "result", "=", "tuple", "(", "x", "[", "shuffle_indices", "]", "for", "x", "in", "arrays", ")", "\n", "\n", "", "if", "require_indices", ":", "\n", "        ", "return", "result", ",", "shuffle_indices", "\n", "", "else", ":", "\n", "        ", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.getLabel": [[220, 229], ["range", "numpy.array().astype", "len", "list", "numpy.array().astype", "r.append", "map", "numpy.array", "numpy.array"], "function", ["None"], ["", "", "def", "getLabel", "(", "test_data", ",", "pred_data", ")", ":", "\n", "    ", "r", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "test_data", ")", ")", ":", "\n", "        ", "groundTrue", "=", "test_data", "[", "i", "]", "\n", "predictTopK", "=", "pred_data", "[", "i", "]", "\n", "pred", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", "in", "groundTrue", ",", "predictTopK", ")", ")", "\n", "pred", "=", "np", ".", "array", "(", "pred", ")", ".", "astype", "(", "\"float\"", ")", "\n", "r", ".", "append", "(", "pred", ")", "\n", "", "return", "np", ".", "array", "(", "r", ")", ".", "astype", "(", "'float'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.Recall_onepos_999neg": [[230, 244], ["range", "float", "float", "Recall.append", "Precision.append", "len", "len", "len"], "function", ["None"], ["", "def", "Recall_onepos_999neg", "(", "ratinglist", ",", "groundTrue", ",", "k", ")", ":", "#k=[5,10,20]", "\n", "    ", "Recall", "=", "[", "]", "\n", "Precision", "=", "[", "]", "\n", "for", "tk", "in", "k", ":", "\n", "        ", "hit_sum", "=", "0", "\n", "for", "inter", "in", "range", "(", "len", "(", "groundTrue", ")", ")", ":", "\n", "            ", "if", "groundTrue", "[", "inter", "]", "in", "ratinglist", "[", "inter", "]", "[", "0", ":", "tk", "]", ":", "\n", "                ", "hit_sum", "+=", "1", "\n", "", "", "Recall_k", "=", "float", "(", "hit_sum", "/", "len", "(", "groundTrue", ")", ")", "\n", "Precision_k", "=", "float", "(", "hit_sum", "/", "len", "(", "groundTrue", ")", "/", "tk", ")", "\n", "\n", "Recall", ".", "append", "(", "Recall_k", ")", "\n", "Precision", ".", "append", "(", "Precision_k", ")", "\n", "", "return", "(", "Recall", ",", "Precision", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.NDCG_onepos_999neg": [[246, 262], ["range", "float", "NDCG.append", "len", "enumerate", "len", "numpy.log2"], "function", ["None"], ["", "def", "NDCG_onepos_999neg", "(", "ratinglist", ",", "groundTrue", ",", "k", ")", ":", "\n", "    ", "NDCG", "=", "[", "]", "\n", "for", "tk", "in", "k", ":", "\n", "        ", "NDCG_sum", "=", "0.", "\n", "for", "inter", "in", "range", "(", "len", "(", "groundTrue", ")", ")", ":", "\n", "            ", "for", "r", ",", "iid", "in", "enumerate", "(", "ratinglist", "[", "inter", "]", "[", "0", ":", "tk", "]", ")", ":", "\n", "                ", "if", "iid", "==", "groundTrue", "[", "inter", "]", ":", "\n", "                    ", "NDCG_oneinter", "=", "(", "1.", "/", "(", "np", ".", "log2", "(", "r", "+", "1.", "+", "1.", ")", ")", ")", "\n", "break", "\n", "", "else", ":", "\n", "                    ", "NDCG_oneinter", "=", "0", "\n", "", "", "NDCG_sum", "+=", "NDCG_oneinter", "\n", "", "NDCG_k", "=", "float", "(", "NDCG_sum", "/", "len", "(", "groundTrue", ")", ")", "\n", "\n", "NDCG", ".", "append", "(", "NDCG_k", ")", "\n", "", "return", "(", "NDCG", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dingseewhole_CI_LightGCN_master.code.utils.topk": [[263, 270], ["numpy.argsort", "numpy.arange", "numpy.argpartition"], "function", ["None"], ["", "def", "topk", "(", "matrix", ",", "K", ",", "axis", "=", "1", ")", ":", "\n", "    ", "column_index", "=", "np", ".", "arange", "(", "matrix", ".", "shape", "[", "1", "-", "axis", "]", ")", "[", ":", ",", "None", "]", "\n", "topk_index", "=", "np", ".", "argpartition", "(", "-", "matrix", ",", "K", ",", "axis", "=", "axis", ")", "[", ":", ",", "0", ":", "K", "]", "\n", "topk_data", "=", "matrix", "[", "column_index", ",", "topk_index", "]", "\n", "topk_index_sort", "=", "np", ".", "argsort", "(", "-", "topk_data", ",", "axis", "=", "axis", ")", "\n", "topk_index_sort", "=", "topk_index", "[", ":", ",", "0", ":", "K", "]", "[", "column_index", ",", "topk_index_sort", "]", "\n", "return", "topk_index_sort", "\n", "\n"]]}